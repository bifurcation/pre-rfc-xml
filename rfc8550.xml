<?xml version = '1.0' encoding='US-ASCII'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc2311 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2311.xml">
<!ENTITY rfc2312 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2312.xml">
<!ENTITY rfc2313 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2313.xml">
<!ENTITY rfc2314 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2314.xml">
<!ENTITY rfc2315 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2315.xml">
<!ENTITY rfc2630 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2630.xml">
<!ENTITY rfc2631 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2631.xml">
<!ENTITY rfc2632 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2632.xml">
<!ENTITY rfc2633 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2633.xml">
<!ENTITY rfc2634 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2634.xml">
<!ENTITY rfc2985 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2985.xml">
<!ENTITY rfc3114 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3114.xml">
<!ENTITY rfc3279 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3279.xml">
<!ENTITY rfc3447 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3447.xml">
<!ENTITY rfc3850 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3850.xml">
<!ENTITY rfc3851 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3851.xml">
<!ENTITY rfc3852 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3852.xml">
<!ENTITY rfc4055 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4055.xml">
<!ENTITY rfc4056 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4056.xml">
<!ENTITY rfc5035 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5035.xml">
<!ENTITY rfc5280 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml">
<!ENTITY rfc5652 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5652.xml">
<!ENTITY rfc5750 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5750.xml">
<!ENTITY rfc5751 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5751.xml">
<!ENTITY rfc5755 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5755.xml">
<!ENTITY rfc5758 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5758.xml">
<!ENTITY rfc6090 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6090.xml">
<!ENTITY rfc6151 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6151.xml">
<!ENTITY rfc6194 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6194.xml">
<!ENTITY rfc6979 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6979.xml">
<!ENTITY rfc8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY rfc8162 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8162.xml">
<!ENTITY rfc8032 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8032.xml">
<!ENTITY rfc8398 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8398.xml">
<!ENTITY rfc8410 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8410.xml">
]>

<?rfc toc='yes'?>
<?rfc symrefs='yes'?>
<?rfc sortrefs='yes' ?>
<?rfc compact='yes'?>
<?rfc subcompact='no' ?>
<?rfc text-list-symbols='-*o" ?>

<rfc ipr='pre5378Trust200902' number="8550" category='std' obsoletes="5750"
     submissionType="IETF" consensus="yes">

  <front>
    <title abbrev="S/MIME 4.0 Certificate Handling">Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 4.0 Certificate Handling</title>

    <author fullname="Jim Schaad" initials="J." surname="Schaad">
      <organization>August Cellars</organization>
      <address>
        <email>ietf@augustcellars.com</email>
      </address>
    </author>
    <author fullname="Blake Ramsdell" initials="B." surname="Ramsdell">
      <organization>Brute Squad Labs, Inc.</organization>
      <address>
        <email>blaker@gmail.com</email>
      </address>
    </author>
    <author fullname="Sean Turner" initials="S." surname="Turner">
      <organization>sn3rd</organization>
      <address>
        <email>sean@sn3rd.com</email>
      </address>
    </author>

    <date month="March" year="2019"/>

    <keyword>S/MIME</keyword>
    <abstract>
      <t>
   This document specifies conventions for X.509 certificate usage by
   Secure/Multipurpose Internet Mail Extensions (S/&wj;MIME) v4.0 agents.
   S/&wj;MIME provides a method to send and receive secure MIME messages,
   and certificates are an integral part of S/&wj;MIME agent processing.
   S/&wj;MIME agents validate certificates as described in RFC 5280
   ("Internet X.509 Public Key Infrastructure Certificate and Certificate
   Revocation List (CRL) Profile").  S/&wj;MIME agents must meet the
   certificate-processing requirements in this document as well as those
   in RFC 5280.  This document obsoletes RFC 5750.
      </t>
    </abstract>
  </front>
  <middle>

<section title="Introduction">
  <t>
   S/&wj;MIME (Secure/Multipurpose Internet Mail Extensions) v4.0, described
   in <xref target="RFC8551"/>, provides a method to send and receive secure MIME
   messages.  Before using a public key to provide security services,
   the S/&wj;MIME agent MUST verify that the public key is valid.  S/&wj;MIME
   agents MUST use PKIX certificates to validate public keys as
   described in <xref target="RFC5280"/> ("Internet X.509 Public Key
   Infrastructure Certificate and Certificate Revocation List (CRL) Profile").
   S/&wj;MIME agents MUST meet the certificate-processing requirements
   specified in this document in addition to those stated in <xref
   target="RFC5280"/>.
  </t>
  <t>
   This specification is compatible with the Cryptographic Message
   Syntax (CMS) <xref target="RFC5652"/> in that it uses the data types defined by
   CMS.  It also inherits all the varieties of architectures for
   certificate-based key management supported by CMS.
  </t>

  <t>
    This document obsoletes <xref target="RFC5750"/>.
    The most significant changes revolve around changes in recommendations around the cryptographic algorithms used by the specification.
    More details can be found in <xref target="Changes4.0"/>.
  </t>

  <t>
   This specification contains a number of references to documents that
   have been obsoleted or replaced.  This is intentional, as the updated
   documents often do not have the same information or protocol requirements in them.
  </t>

<section title="Definitions">
  <t>
   For the purposes of this document, the following definitions apply.
  </t>

  <t>
   <list style="hanging">
  <t hangText="ASN.1:"><vspace/>
   Abstract Syntax Notation One, as defined in ITU-T X.680 <xref target="X.680"/>.
  </t>
  <t hangText="Attribute certificate (AC):"><vspace/>
   An X.509 AC is a separate structure from
   a subject's public key X.509 certificate.  A subject may have
   multiple X.509 ACs associated with each of its public key X.509
   certificates.  Each X.509 AC binds one or more attributes with one of
   the subject's public key X.509 certificates.  The X.509 AC syntax is
   defined in <xref target="RFC5755"/>.
  </t>
  <t hangText="Certificate:"><vspace/>
   A type that binds an entity's name to a public key with
   a digital signature.  This type is defined in <xref target="RFC5280"/>.
   This type also contains the distinguished name of the certificate
   issuer (the signer), an issuer-specific serial number, the issuer's
   signature algorithm identifier, a validity period, and extensions
   also defined in that document.
  </t>
  <t hangText="Certificate Revocation List (CRL):"><vspace/>
   A type that contains information
   about certificates whose validity an issuer has revoked.
   The information consists of an issuer name, the time of issue, the
   next scheduled time of issue, a list of certificate serial numbers
   and their associated revocation times, and extensions as defined in
   <xref target="RFC5280"/>.  The CRL is signed by the issuer.  The type intended by this
   specification is the one defined in <xref target="RFC5280"/>.
  </t>
  <t hangText="Receiving agent:"><vspace/>
   Software that interprets and processes S/&wj;MIME CMS
   objects, MIME body parts that contain CMS objects, or both.
  </t>
  <t hangText="Sending agent:"><vspace/>
   Software that creates S/&wj;MIME CMS objects, MIME body
   parts that contain CMS objects, or both.
  </t>
  <t hangText="S/&wj;MIME agent:"><vspace/>
   User software that is a receiving agent, a sending
   agent, or both.
  </t>
  </list>
 </t>

</section>

<section title="Conventions Used in This Document">
  <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
  "SHALL&nbsp;NOT", "SHOULD", "SHOULD&nbsp;NOT", "RECOMMENDED",
  "NOT&nbsp;RECOMMENDED", "MAY", and "OPTIONAL" in this document
  are to be interpreted as described in BCP&nbsp;14
  <xref target="RFC2119"/> <xref target="RFC8174"/> when,
  and only when, they appear in all capitals, as shown here.</t>

  <t>
   We define the additional requirement levels:
   <list style="hanging" hangIndent="10">
     <t hangText="SHOULD+">This term means the same as SHOULD.  However, the authors
              expect that a requirement marked as SHOULD+ will be
              promoted at some future time to be a MUST.
</t>
   <t hangText="SHOULD-">This term means the same as SHOULD.  However, the authors
              expect that a requirement marked as SHOULD- will be
              demoted to a MAY in a future version of this document.
</t>
   <t hangText="MUST-">This term means the same as MUST.  However, the authors
              expect that this requirement will no longer be a MUST in a
              future document.  Although its status will be determined
              at a later time, it is reasonable to expect that if a
              future revision of a document alters the status of a MUST-
              requirement, it will remain at least a SHOULD or a
              SHOULD-.
   </t>
   </list>
  </t>

   <t>The term "RSA" in this document almost always refers to the PKCS&nbsp;#1&nbsp;v1.5 RSA signature algorithm even when not qualified as such.
     There are a couple of places where it refers to the general RSA cryptographic operation; these can be determined from the context where it is used.
   </t>

</section>
<section title="Compatibility with Prior Practice of S/MIME">
  <t>
   S/&wj;MIME version 4.0 agents ought to attempt to have the greatest
   interoperability possible with agents for prior versions of S/&wj;MIME.
  </t>

  <t><list style="symbols">
   <t>S/&wj;MIME version 2 is described in RFC 2311 through RFC 2315 inclusive
   <xref target="SMIMEv2"/>.</t>
   <t>S/&wj;MIME version 3 is described in RFC 2630 through RFC 2634
   inclusive and RFC 5035 <xref target="SMIMEv3"/>.</t>
   <t>S/&wj;MIME version 3.1 is described in RFC 2634, RFC 3850, RFC 3851,
   RFC 3852, and RFC 5035 <xref target="SMIMEv3.1"/>.</t>
   <t>S/&wj;MIME version 3.2 is described in RFC 2634, RFC 5035, RFC 5652,
   RFC 5750, and RFC 5751 <xref target="SMIMEv3.2"/>.</t>
          
   <t>RFC 2311 also has historical information about the development of
   S/&wj;MIME.</t>
 </list></t>
  <t>
    <xref target="historic"/> contains information about algorithms that were used for prior versions of S/MIME but are no longer considered to meet modern security standards.
    Support of these algorithms may be needed to support historic S/MIME artifacts such as messages or files but SHOULD NOT be used for new artifacts.
  </t>
</section>
<section title="Changes from S/MIME v3 to S/MIME v3.1">
  <t>
    This section reflects the changes that were made when S/MIME v3.1 was released.
   The language of RFC 2119 ("MUST", "SHOULD", etc.) used
   for S/MIME v3 may have been superseded in later versions.
  </t>

  <t><list style="symbols">
  <t>
   Version 1 and version 2 CRLs MUST be supported.
  </t>
  <t>
   Multiple certification authority (CA) certificates with the same
   subject and public key, but with overlapping validity periods, MUST
   be supported.
  </t>
  <t>
   Version 2 ACs SHOULD be supported, and version 1 ACs MUST NOT be used.
  </t>
  <t>
   The use of the MD2 digest algorithm for certificate signatures is
   discouraged, and security language was added.
  </t>
  <t>
   Clarified email address use in certificates.  Certificates
   that do not contain an email address have no requirements for
   verifying the email address associated with the certificate.
  </t>
  <t>
   Receiving agents SHOULD display certificate information when
   displaying the results of signature verification.
  </t>
  <t>
   Receiving agents MUST NOT accept a signature made with a certificate
   that does not have at least one of the digitalSignature or nonRepudiation bits set.
  </t>
  <t>
   Added clarifications for the interpretation of the key usage and extended key usage extensions.
  </t>
</list></t>
</section>

<section title="Changes from S/MIME v3.1 to S/MIME v3.2">
  <t>
    This section reflects the changes that were made when S/MIME v3.2 was released.
   The language of RFC 2119 ("MUST", "SHOULD", etc.) used
   for S/MIME v3.1 may have been superseded in later versions.
  </t>

  <t>Note that the section numbers listed here (e.g., "Section&nbsp;6") are
  from <xref target="RFC5750"/>.</t>

<t><list style="symbols">  
   <t>Moved "Conventions Used in This Document" to Section&nbsp;1.2. Added
   definitions for SHOULD+, SHOULD-, and MUST-.</t>
   
   <t>Section 1.1: Updated ASN.1 definition and reference.</t>

   <t>Section 1.3: Added text about v3.1 RFCs.</t>

   <t>Section 3: Aligned email address text with RFC 5280.  Updated
   note to indicate that the emailAddress IA5String upper bound is
   255&nbsp;characters.  Added text about matching email
   addresses.</t>

   <t>Section 4.2: Added text to indicate how S/&wj;MIME agents locate the
   correct user certificate.</t>

   <t>Section 4.3: RSA with SHA-256 (PKCS #1 v1.5) added as MUST; DSA
   with SHA-256 added as SHOULD+; RSA with SHA-1, DSA
   with SHA-1, and RSA with MD5 changed to SHOULD-; and
   RSASSA-PSS with SHA-256 added as SHOULD+.  Updated key
   sizes and changed pointer to PKIX RFCs.</t>

   <t>Section 4.4.1: Aligned with PKIX on the use of a basicConstraints
   extension in CA certificates.  Clarified which
   extension is used to constrain end entities from using
   their keys to perform issuing-authority operations.</t>

   <t>Section 5: Updated security considerations.</t>

   <t>Section 6: Moved references from Appendix A of RFC 3850 to this section.
   Updated the references.</t>

   <t>Appendix A: Added Appendix A to move S/&wj;MIME v2
   Certificate Handling to Historic status.
</t>
    </list></t>
</section>

<section title="Changes since S/MIME 3.2" anchor="Changes4.0">
  <t>
    This section reflects the changes that were made when S/MIME v4.0 was released.
   The language of RFC 2119 ("MUST", "SHOULD", etc.) used
   for S/MIME v3.2 may have been superseded by S/MIME v4.0 and may be
   superseded by future versions.
  </t>

 <t><list style="symbols">
  <t><xref target="distnames"/>: Support for internationalized email addresses is
     required.</t>

  <t><xref target="cert-crl-keys"/>: Mandated support for the Elliptic Curve
  Digital Signature Algorithm (ECDSA) with P-256 and the Edwards-curve
  Digital Signature Algorithm (EdDSA) with curve25519
  <xref target="RFC8410"/>.  SHA-1 and MD5 algorithms are marked as
  historical, as they are no longer considered secure.  As the Digital
  Signature Algorithm (DSA) has been replaced by elliptic curve versions,
  support for DSA is now considered historical. Increased lower bounds on
  RSA key sizes.</t>

  <t><xref target="historic"/>: Added <xref target="historic"/> for algorithms that are now considered
  to be historical.</t>
</list></t>
</section>

</section>
<section title="CMS Options">
<t>
   The CMS message format allows for a wide variety of options in
   content and algorithm support.  This section puts forth a number of
   support requirements and recommendations in order to achieve a base
   level of interoperability among all S/&wj;MIME implementations.  Most of
   the CMS format for S/&wj;MIME messages is defined in <xref
   target="RFC8551"/>.
</t>
<section title="Certificate Revocation Lists">
<t>
   Receiving agents MUST support the CRL format defined in <xref target="RFC5280"/>.  If sending agents include CRLs in outgoing
   messages, the CRL format defined in <xref target="RFC5280"/> MUST be used.
   Receiving agents MUST support both v1 and v2 CRLs.
  </t>
  <t>
   All agents MUST be capable of performing revocation checks using CRLs
   as specified in <xref target="RFC5280"/>.  All agents MUST perform revocation status
   checking in accordance with <xref target="RFC5280"/>.  Receiving agents MUST recognize
   CRLs in received S/&wj;MIME messages.
  </t>
  <t>
   Agents SHOULD store CRLs received in messages for use in processing
   later messages.
  </t>
</section>
<section title="Certificate Choices">
<t>
   Receiving agents MUST support v1 X.509 and v3 X.509 certificates as
   profiled in <xref target="RFC5280"/>.  End-entity certificates MAY include
   an Internet mail address, as described in <xref target="distnames"/>.
  </t>
  <t>
   Receiving agents SHOULD support X.509 version 2 ACs.  See <xref target="RFC5755"/> for details about the profile for
   ACs.
  </t>
<section title="Historical Note about CMS Certificates">
<t>
   The CMS message format supports a choice of certificate formats for
   public key content types: PKIX, PKCS #6 extended certificates
   <xref target="PKCS6"/>, and PKIX ACs.
  </t>
  <t>
   The PKCS #6 format is not in widespread use.  In addition, PKIX
   certificate extensions address much of the same functionality and
   flexibility as was intended in the PKCS #6 certificate extensions.  Thus, sending and
   receiving agents MUST NOT use PKCS #6 extended certificates.
   Receiving agents MUST be able to parse and process a message containing PKCS #6 extended certificates, although ignoring those certificates is expected behavior.
  </t>
  <t>
   X.509 version 1 ACs are also not widely
   implemented and have been&nbsp;superseded by version 2 ACs.  Sending agents MUST NOT send version&nbsp;1&nbsp;ACs.
  </t>
</section>
</section>
<section title="Included Certificates">

<t>
   Receiving agents MUST be able to handle an arbitrary number of
   certificates of arbitrary relationship to the message sender and to
   each other in arbitrary order.  In many cases, the certificates
   included in a signed message may represent a chain of certification
   from the sender to a particular root.  There may be, however,
   situations where the certificates in a signed message may be
   unrelated and included for convenience.
  </t>
  <t>
   Sending agents SHOULD include any certificates for the user's public
   key(s) and associated issuer certificates.  This increases the
   likelihood that the intended recipient can establish trust in the
   originator's public key(s).  This is especially important when
   sending a message to recipients that may not have access to the
   sender's public key through any other means or when sending a signed
   message to a new recipient.  The inclusion of certificates in
   outgoing messages can be omitted if S/&wj;MIME objects are sent within a
   group of correspondents that have established access to each other's
   certificates by some other means such as a shared directory or manual
   certificate distribution.  Receiving S/&wj;MIME agents SHOULD be able to
   handle messages without certificates by using a database or directory
   lookup scheme to find them.
  </t>
  <t>
   A sending agent SHOULD include at least one chain of certificates up
   to, but not including, a CA that it
   believes that the recipient may trust as authoritative.  A receiving
   agent MUST be able to handle an arbitrarily large number of
   certificates and chains.
  </t>
  <t>
   Agents MAY send CA certificates -- that is, cross-certificates,
   self&nbhy;issued certificates, and self-signed certificates.  Note that
   receiving agents SHOULD NOT simply trust any self-signed certificates
   as valid CAs but SHOULD use some other mechanism to determine if
   this is a CA that should be trusted.  Also note that when
   certificates contain DSA public keys the parameters may be located in the root certificate.  This would
   require that the recipient possess both the end-entity certificate
   and the root certificate to perform a signature verification, and is
   a valid example of a case where transmitting the root certificate may
   be required.
  </t>
  <t>
   Receiving agents MUST support chaining based on the distinguished name
   fields.  Other methods of building certificate chains MAY be
   supported.
  </t>
  <t>
   Receiving agents SHOULD support the decoding of X.509 ACs
   included in CMS objects.  All other issues regarding the
   generation and use of X.509 ACs are outside the
   scope of this specification.  One specification that addresses
   AC use is defined in <xref target="RFC3114"/>.
  </t>
</section>
 </section>
 <section title="Using Distinguished Names for Internet Mail" anchor="distnames">
   <t>
     End-entity certificates MAY contain an Internet mail address.
     Email&nbsp;addresses restricted to 7-bit ASCII characters use the
     pkcs&nbhy;9&nbhy;at&nbhy;emailAddress object identifier (OID) (see below)
     and are encoded as described in Section&nbsp;4.2.1.6 of <xref
     target="RFC5280"/>. Internationalized email address names use the OID defined in <xref target="RFC8398"/> and are encoded as described therein.
     The email address SHOULD be in the subjectAltName extension and SHOULD NOT be in the subject distinguished name.
   </t>
   
  <t>
    Receiving agents MUST recognize and accept certificates that contain no email address.
    Agents are allowed to provide an alternative mechanism for associating an email address with a certificate that does not contain an email address, such as through the use of the agent's address book, if available.
    Receiving agents MUST recognize both ASCII and internationalized email addresses in the subjectAltName extension.
    Receiving agents MUST recognize email addresses in the distinguished name field in the PKCS #9 <xref target="RFC2985"/> emailAddress attribute:
  </t>

  <figure>
      <artwork>
pkcs-9-at-emailAddress OBJECT IDENTIFIER ::=
 { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) 1 }
      </artwork>
  </figure>

  <t>
    Note that this attribute MUST be encoded as IA5String and has an upper bound of 255 characters.
    The comparing of email addresses is fraught with peril.
    <xref target="RFC8398"/> defines the procedure for doing the comparison of internationalized email addresses.
    For ASCII email addresses, the domain component (right-hand side of the '@') MUST be compared using a case-insensitive function.
    The local name component&nbsp;(left-hand side of the '@') SHOULD be compared using a case&nbhy;insensitive function.
    Some localities may perform other transformations on the local name component before doing the comparison; however, an S/MIME client cannot know what specific localities do.
  </t>
  
  <t>
    Sending agents SHOULD make the address in the From or Sender header in a mail message match an Internet mail address in the signer's certificate.
    Receiving agents MUST check that the address in the From or Sender header of a mail message matches an Internet mail address in the signer's certificate, if mail addresses are present in the certificate.
    A receiving agent SHOULD provide some explicit alternate processing of the message if this comparison fails; this might be done by displaying or logging a message that shows the recipient the mail addresses in the certificate or other certificate details.
  </t>
  <t>
   A receiving agent SHOULD display a subject name or other certificate details when displaying an indication of successful or unsuccessful signature verification.
  </t>
  <t>
   All subject and issuer names MUST be populated (i.e., not an empty
   SEQUENCE) in S/&wj;MIME-compliant X.509 certificates, except that the
   subject distinguished name in a user's (i.e., an end entity's) certificate
   MAY be an empty SEQUENCE, in which case the subjectAltName extension will
   include the subject's identifier and MUST be marked as critical.
  </t>
 </section>
<section title="Certificate Processing">
  <t>
   S/&wj;MIME agents need to provide some certificate retrieval mechanism in
   order to gain access to certificates for recipients of digital
   envelopes.  There are many ways to implement certificate retrieval
   mechanisms.  <xref target="X.500"/> directory service is an excellent example of a
   certificate retrieval-only mechanism that is compatible with classic
   X.500 distinguished names.
   The IETF has published <xref target="RFC8162"/>, which describes an experimental protocol to retrieve certificates from the Domain Name System (DNS).
   Until such mechanisms are widely
   used, their utility may be limited by the small number of the
   correspondent's certificates that can be retrieved.  At a minimum,
   for initial S/&wj;MIME deployment, a user agent could automatically
   generate a message to an intended recipient requesting the
   recipient's certificate in a signed return message.
  </t>
  <t>
   Receiving and sending agents SHOULD also provide a mechanism to allow
   a user to "store and protect" certificates for correspondents in such
   a way as to guarantee their later retrieval.  In many
   environments, it may be desirable to link the certificate
   retrieval/storage mechanisms together in some sort of certificate
   database.  In its simplest form, a certificate database would be
   local to a particular user and would function in a way similar to an
   "address book" that stores a user's frequent correspondents.  In this
   way, the certificate retrieval mechanism would be limited to the
   certificates that a user has stored (presumably from incoming
   messages).  A comprehensive certificate retrieval/storage solution
   might combine two or more mechanisms to allow the greatest flexibility
   and utility to the user.  For instance, a secure Internet mail agent
   might resort to checking a centralized certificate retrieval mechanism
   for a certificate if it cannot be found in a user's local certificate
   storage/retrieval database.
  </t>
  <t>
   Receiving and sending agents SHOULD provide a mechanism for the
   import and export of certificates, using a CMS certs-only message.
   This allows for import and export of full certificate chains as
   opposed to just a single certificate.  This is described in
   <xref target="RFC8551"/>.
  </t>
  <t>
   Agents MUST handle multiple valid CA
   certificates containing the same subject name and the same public
   keys but with overlapping validity intervals.
  </t>
<section title="Certificate Revocation Lists">
  <t>
   In general, it is always better to get the latest CRL information
   from a CA than to get information stored in an incoming message.
   A receiving agent SHOULD have access to some CRL retrieval mechanism
   in order to gain access to certificate revocation information when
   validating certification paths.  A receiving or sending agent SHOULD
   also provide a mechanism to allow a user to store incoming
   certificate revocation information for correspondents in such a way as
   to guarantee its later retrieval.
  </t>
  <t>
   Receiving and sending agents SHOULD retrieve and utilize CRL
   information every time a certificate is verified as part of a
   certification path validation even if the certificate was already
   verified in the past.  However, in many instances (such as off-line
   verification), access to the latest CRL information may be difficult
   or impossible.  The use of CRL information, therefore, may be
   dictated by the value of the information that is protected.  The
   value of the CRL information in a particular context is beyond the
   scope of this specification but may be governed by the policies
   associated with particular certification paths.
  </t>
  <t>
   All agents MUST be capable of performing revocation checks using CRLs
   as specified in <xref target="RFC5280"/>.  All agents MUST perform revocation status
   checking in accordance with <xref target="RFC5280"/>.  Receiving agents MUST recognize
   CRLs in received S/&wj;MIME messages.
  </t>

</section>

<section title="Certificate Path Validation">
  <t>
   In creating a user agent for secure messaging, certificate, CRL, and
   certification path validation should be highly automated while still
   acting in the best interests of the user.  Certificate, CRL, and path
   validation MUST be performed as per <xref target="RFC5280"/> when validating a
   correspondent's public key.  This is necessary before using a public
   key to provide security services such as verifying a signature,
   encrypting a content-encryption key (e.g., RSA), or forming a
   pairwise symmetric key (e.g., Diffie-Hellman) to be used to encrypt
   or decrypt a content-encryption key.
  </t>
  <t>
   Certificates and CRLs are made available to the path validation
   procedure in two ways: a) incoming messages and b) certificate and
   CRL retrieval mechanisms.  Certificates and CRLs in incoming messages
   are not required to be in any particular order, nor are they required
   to be in any way related to the sender or recipient of the message
   (although in most cases they will be related to the sender).
   Incoming certificates and CRLs SHOULD be cached for use in path
   validation and optionally stored for later use.  This temporary
   certificate and CRL cache SHOULD be used to augment any other
   certificate and CRL retrieval mechanisms for path validation on
   incoming signed messages.
  </t>
  <t>
   When verifying a signature and the certificates that are included in
   the message, if a signingCertificate attribute from RFC 2634 <xref target="ESS"/> or
   a signingCertificateV2 attribute from RFC 5035 <xref target="ESS"/> is found in an
   S/&wj;MIME message, it SHALL be used to identify the signer's
   certificate.  Otherwise, the certificate is identified in an S/&wj;MIME
   message, using either (1)&nbsp;the issuerAndSerialNumber, which identifies
   the signer's certificate by the issuer's distinguished name and the
   certificate serial number or (2)&nbsp;the subjectKeyIdentifier, which
   identifies the signer's certificate by a key identifier.
  </t>
  <t>
   When decrypting an encrypted message, if an
   SMIMEEncryptionKeyPreference attribute is found in an encapsulating
   SignedData, it SHALL be used to identify the originator's certificate
   found in OriginatorInfo.  See <xref target="RFC5652"/> for the CMS fields that reference
   the originator's and recipient's certificates.
  </t>
</section>
<section title="Certificate and CRL Signing Algorithms, and Key Sizes" anchor="cert-crl-keys">
  <t>
   Certificates and CRLs are signed by the certificate issuer.  Receiving agents:
   <list style="symbols">

     <t>MUST support ECDSA with curve P-256 with SHA-256.</t>

     <t>MUST support EdDSA with curve25519 using PureEdDSA mode.</t>

     <t>MUST- support RSA PKCS #1 v1.5 with SHA-256.</t>

     <t>SHOULD support the RSA Probabilistic Signature Scheme (RSASSA-PSS) with SHA-256.</t>

   </list>
   
  </t>

  <t>
    Implementations SHOULD use deterministic generation for the parameter 'k' for ECDSA as outlined in <xref target="RFC6979"/>.
    EdDSA is defined to generate this parameter deterministically.
  </t>
  
  <t>
   The following are the RSA and RSASSA-PSS key size requirements for
   S/&wj;MIME receiving agents during certificate and CRL signature
   verification:
  </t>
  
  <figure>
    <artwork>
        key size &lt;= 2047 : SHOULD NOT (see Appendix A)
2048 &lt;= key size &lt;= 4096 : MUST (see Security Considerations)
4096 &lt;  key size         : MAY  (see Security Considerations)
    </artwork>
  </figure>

       <t>
         The signature algorithm OIDs for RSA PKCS #1 v1.5 and
         RSASSA-PSS with SHA-256 using 1024-bit through 3072-bit public keys
         are specified in <xref target="RFC4055"/>, and the signature
         algorithm definition is found in <xref target="FIPS186-2"/> with
         Change Notice 1.
       </t>

      <t>
        The signature algorithm OIDs for RSA PKCS #1 v1.5 and RSASSA-PSS with SHA-256 using 4096-bit public keys are specified in <xref target="RFC4055"/>, and the signature algorithm definition is found in <xref target="RFC3447"/>.
      </t>
       
  <t>
    For RSASSA-PSS with SHA-256, see <xref target="RFC4056"/>.
  </t>

  <t>
    For ECDSA, see <xref target="RFC5758"/> and <xref target="RFC6090"/>.
    The first reference provides the signature algorithm's OID, and the second provides the signature algorithm's definition.
    Curves other than curve P-256 MAY be used as well.
  </t>

  <t>
    For EdDSA, see <xref target="RFC8032"/> and <xref target="RFC8410"/>.
    The first reference provides the signature algorithm's OID, and the second provides the signature algorithm's definition.
    Curves other than curve25519 MAY be used as well.
  </t>
  
</section>
<section title="PKIX Certificate Extensions">
  <t>
   PKIX describes an extensible framework in which the basic certificate
   information can be extended and describes how such extensions can be
   used to control the process of issuing and validating certificates.
   The LAMPS Working Group has ongoing efforts to identify and create
   extensions that have value in particular certification environments.
   Further, there are active efforts underway to issue PKIX certificates
   for business purposes.  This document identifies the minimum required
   set of certificate extensions that have the greatest value in the
   S/&wj;MIME environment.  The syntax and semantics of all the identified
   extensions are defined in <xref target="RFC5280"/>.
  </t>
  <t>
   Sending and receiving agents MUST correctly handle the basic
   constraints, key usage, authority key identifier, subject key
   identifier, and subject alternative name certificate extensions when
   they appear in end-entity and CA certificates.  Some mechanism SHOULD
   exist to gracefully handle other certificate extensions when they
   appear in end-entity or CA certificates.
  </t>
  <t>
   Certificates issued for the S/&wj;MIME environment SHOULD NOT contain any
   critical extensions (extensions that have the critical field set to
   TRUE) other than those listed here.  These extensions SHOULD be
   marked as non-critical, unless the proper handling of the extension is
   deemed critical to the correct interpretation of the associated
   certificate.  Other extensions may be included, but those extensions
   SHOULD NOT be marked as critical.
  </t>
  <t>
   Interpretation and syntax for all extensions MUST follow <xref target="RFC5280"/>,
   unless otherwise specified here.
  </t>
<section title="Basic Constraints">
  <t>
   The basicConstraints extension serves to delimit the role and
   position that an issuing-authority or end-entity certificate plays in
   a certification path.
  </t>
  <t>
   For example, certificates issued to CAs and subordinate CAs contain a
   basicConstraints extension that identifies them as issuing-authority
   certificates.  End-entity certificates contain the key usage
   extension, which restrains end entities from using the key when
   performing issuing-authority operations (see <xref target="key-usage-cert-ext"/>).
  </t>
  <t>
   As per <xref target="RFC5280"/>, certificates MUST contain a 
   basicConstraints extension in CA certificates and SHOULD NOT contain that extension in end-entity
   certificates.
  </t>
</section>
<section title="Key Usage Extension" anchor="key-usage-cert-ext">

  <t>
   The key usage extension serves to limit the technical purposes for
   which a public key listed in a valid certificate may be used.
   Issuing-authority certificates may contain a key usage extension that
   restricts the key to signing certificates, CRLs, and other data.
  </t>
  <t>
   For example, a CA may create subordinate issuer
   certificates that contain a key usage extension that specifies that
   the corresponding public key can be used to sign end-user certificates
   and CRLs.
  </t>
  <t>
   If a key usage extension is included in a PKIX certificate, then it
   MUST be marked as critical.
  </t>
  <t>
   S/&wj;MIME receiving agents MUST NOT accept the signature of a message if
   it was verified using a certificate that contains a key usage
   extension without at least one of the digitalSignature or nonRepudiation bits
   set.  Sometimes S/&wj;MIME is used as a secure message transport for
   applications beyond interpersonal messaging;  in such cases, the
   S/&wj;MIME-enabled application can specify additional requirements
   concerning the digitalSignature or nonRepudiation bits within this
   extension.
  </t>
  <t>
   If the key usage extension is not specified, receiving clients MUST
   presume that both the digitalSignature and nonRepudiation bits are&nbsp;set.
  </t>
</section>
<section title="Subject Alternative Name">
  <t>
   The subject alternative name extension is used in S/&wj;MIME as the
   preferred means to convey the email address or addresses that correspond to
   the entity for this certificate.
   If the local portion of the email address is ASCII, it MUST be encoded using the rfc822Name CHOICE of the GeneralName type as described in <xref target="RFC5280"/>, Section&nbsp;4.2.1.6.
   If the local portion of the email address is not ASCII, it MUST be encoded using the otherName CHOICE of the GeneralName type as described in <xref target="RFC8398"/>, Section&nbsp;3.
   Since the SubjectAltName type is a SEQUENCE OF GeneralName, multiple email addresses MAY be present.
  </t>
</section>
<section title="Extended Key Usage Extension">
  <t>
   The extended key usage extension also serves to limit the technical
   purposes for which a public key listed in a valid certificate may be
   used.  The set of technical purposes for the certificate therefore
   are the intersection of the uses indicated in the key usage and
   extended key usage extensions.
  </t>
  <t>
   For example, if the certificate contains a key usage extension
   indicating a digital signature and an extended key usage extension that
   includes the id-kp-emailProtection OID, then the certificate may be used
   for signing but not encrypting S/&wj;MIME messages.  If the certificate
   contains a key usage extension indicating a digital signature but no
   extended key usage extension, then the certificate may also be used
   to sign but not encrypt S/&wj;MIME messages.
  </t>
  <t>
   If the extended key usage extension is present in the certificate,
   then interpersonal-message S/&wj;MIME receiving agents MUST check that it
   contains either the id-kp-emailProtection OID or the anyExtendedKeyUsage OID as
   defined in <xref target="RFC5280"/>.  S/&wj;MIME uses other than interpersonal messaging
   MAY require the explicit presence of the extended key usage extension,
   the presence of other OIDs in the extension, or both.
  </t>
</section>
</section>
</section>
<section title="IANA Considerations">
  <t>This document has no IANA actions.
  </t>
</section>
 <section title="Security Considerations">
   <t>
   All of the security issues faced by any cryptographic application
   must be faced by an S/&wj;MIME agent.  Among these issues are protecting
   the user's private key, preventing various attacks, and helping the
   user avoid mistakes such as inadvertently encrypting a message for
   the wrong recipient.  The entire list of security considerations is
   beyond the scope of this document, but some significant concerns are
   listed here.
  </t>
  <t>
   When processing certificates, there are many situations where the
   processing might fail.  Because the processing may be done by a user
   agent, a security gateway, or some other program, there is no single way
   to handle such failures.  Just because the methods to handle the
   failures have not been listed, however, the reader should not assume
   that they are not important.  The opposite is true: if a certificate
   is not provably valid and associated with the message, the processing
   software should take immediate and noticeable steps to inform the end
   user about it.
  </t>
  <t>
   Some of the many places where signature and certificate checking
   might fail include the following:
   <list style="symbols">
     <t>no Internet mail addresses in a certificate match the sender of a
     message, if the certificate contains at least one mail address</t>

     <t>no certificate chain leads to a trusted CA</t>

     <t>no ability to check the CRL for a certificate is implemented</t>

     <t>an invalid CRL was received</t>

     <t>the CRL being checked is expired</t>

     <t>the certificate is expired</t>

     <t>the certificate has been revoked</t>
   </list>


  </t>
  <t>
   There are certainly other instances where a certificate may be
   invalid, and it is the responsibility of the processing software to
   check them all thoroughly and decide what to do if the check fails.
  </t>
  <t>
   It is possible for there to be multiple unexpired CRLs for a CA.  If
   an agent is consulting CRLs for certificate validation, it SHOULD
   make sure that the most recently issued CRL for that CA is consulted,
   since an S/&wj;MIME message sender could deliberately include an older
   unexpired CRL in an S/&wj;MIME message.  This older CRL might not include
   recently revoked certificates; this scenario might lead an agent to accept a
   certificate that has been revoked in a subsequent CRL.
  </t>
  <t>
    When determining the time for a certificate validity check, agents have to be careful to use a reliable time.
    In most cases, the time used SHOULD be the current time. Some exceptions to
    this would be as follows:
    <list style="symbols">
      <t>
        The time the message was received is stored in a secure manner and is used at a later time to validate the message.
      </t>
      <t>
        The time in a SigningTime attribute is found in a countersignature
        attribute <xref target="RFC5652"/> that has been successfully validated.
      </t>
    </list>

    The signingTime attribute could be deliberately set to a time where the receiving agent would (1) use a CRL that does not contain a revocation for the signing certificate or (2) use a certificate that has expired or is not yet valid.
  This could be done by either (1)&nbsp;the sender of the message or (2)&nbsp;an attacker that has compromised the key of the sender.
  </t>
  
  <t>
   In addition to the security considerations identified in <xref target="RFC5280"/>,
   caution should be taken when processing certificates that have not
   first been validated to a trust anchor.  Certificates could be
   manufactured by untrusted sources for the purpose of mounting
   denial-of-service attacks or other attacks.  For example, keys selected to
   require excessive cryptographic processing, or extensive lists of CRL
   Distribution Point (CDP) and/or Authority Information Access (AIA)
   addresses in the certificate, could be used to mount denial-of-
   service attacks.  Similarly, attacker-specified CDP and/or AIA
   addresses could be included in fake certificates to allow the
   originator to detect receipt of the message even if signature
   verification fails.
  </t>
  <t>
   RSA keys of less than 2048 bits are now considered by many
   experts to be cryptographically insecure (due to advances in
   computing power) and SHOULD no longer be used to sign certificates
   or CRLs.  Such keys were previously considered secure, so processing
   previously received signed and encrypted mail may require processing
   certificates or CRLs signed with weak keys.  Implementations that
   wish to support previous versions of S/&wj;MIME or process old messages
   need to consider the security risks that result from accepting
   certificates and CRLs with smaller key sizes (e.g., spoofed
   certificates) versus the costs of denial of service.  If an
   implementation supports verification of certificates or CRLs
   generated with RSA and DSA keys of less than 2048 bits, it MUST warn
   the user.  Implementers should consider providing a stronger warning
   for weak signatures on certificates and CRLs associated with newly
   received messages than the one provided for certificates and CRLs
   associated with previously stored messages.  Server implementations
   (e.g., secure mail list servers) where user warnings are not
   appropriate SHOULD reject messages with weak cryptography.
  </t>

  <t>
   If an implementation is concerned about compliance with National
   Institute of Standards and Technology (NIST) key size
   recommendations, then see <xref target="SP800-57"/>.
  </t>
 </section>
 </middle>
 <back>

   <references title="Normative References">
     &rfc2119;
     &rfc2634;
     &rfc2985;
     &rfc3447;
     &rfc4056;
     &rfc4055;
     &rfc5035;
     &rfc5280;
     &rfc5751;
     &rfc5755;
     &rfc5758;
     &rfc3279;
     &rfc5652;
     &rfc6979;
     &rfc8174;

        <reference anchor="ESS">
          <front>
            <title>Enhanced Security Services for S/MIME</title>
            <author/>
            <date/>
          </front>
          <annotation>
            This is the set of documents dealing with enhanced security services and refers to <xref target="RFC2634"/> and <xref target="RFC5035"/>.
          </annotation>
        </reference>
     
        <reference anchor="FIPS186-2" target="https://csrc.nist.gov/publications/detail/fips/186/2/archive/2000-01-27">
          <front>
            <title>Digital Signature Standard (DSS) (also with Change Notice&nbsp;1)</title>
            <author><organization>National Institute of Standards and Technology (NIST)</organization></author>
            <date month="January" year="2000"/>
          </front>
          <seriesInfo name="Federal Information Processing Standards Publication"
                      value="186-2"/>
        </reference>

        <reference anchor="FIPS186-3" target="https://csrc.nist.gov/csrc/media/publications/fips/186/3/archive/2009-06-25/documents/fips_186-3.pdf">
          <front>
            <title>Digital Signature Standard (DSS)</title>
            <author><organization>National Institute of Standards and Technology (NIST)</organization></author>
            <date month="June" year="2009"/>
          </front>
          <seriesInfo name="Federal Information Processing Standards Publication"
                      value="186-3"/>
        </reference>
     
        <reference anchor="X.680" target="https://www.itu.int/rec/T-REC-X.680">
          <front>
            <title>Information Technology - Abstract Syntax
            Notation One (ASN.1):  Specification of basic notation
            </title>
            <author/>
            <date month="August" year="2015"/>
          </front>
          <seriesInfo name="ITU-T" value="Recommendation X.680"/>
          <seriesInfo name="ISO/IEC"  value="8824-1:2015"/>
        </reference>

        <reference anchor="SMIMEv4.0">
          <front>
            <title>S/MIME version 4.0</title>
            <author/>
            <date/>
          </front>
          <annotation>
            This group of documents represents S/MIME version 4.0.
            These documents are <xref target="RFC2634"/>,
            this document (RFC 8550), <xref target="RFC8551"/>,
            <xref target="RFC5652"/>, and <xref target="RFC5035"/>.
          </annotation>
        </reference>
        
        &rfc5750;

<!-- draft-ietf-lamps-rfc5751-bis (RFC 8551) -->
<reference anchor='RFC8551' target="https://www.rfc-editor.org/info/rfc8551">
<front>
<title>Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 4.0 Message Specification</title>
<author initials='J' surname='Schaad' fullname='Jim Schaad'>
    <organization />
</author>
<author initials='B' surname='Ramsdell' fullname='Blake Ramsdell'>
    <organization />
</author>
<author initials='S' surname='Turner' fullname='Sean Turner'>
    <organization />
</author>
<date month='March' year='2019'/>
</front>
<seriesInfo name="RFC" value="8551"/>
<seriesInfo name="DOI" value="10.17487/RFC8551"/>
</reference>

&rfc8398;

   </references>

   <references title="Informative References">
     &rfc2311;  &rfc2312; &rfc2313; &rfc2314; &rfc2315;
     &rfc2630;  &rfc2631; &rfc2632; &rfc2633;
     &rfc3850;  &rfc3851; &rfc3852;
     &rfc3114;

        <reference anchor="PKCS6">
       <front>
         <title>PKCS #6: Extended-Certificate Syntax Standard</title>
         <author><organization>RSA Laboratories</organization></author>
         <date month="November" year="1993"/>
       </front>
     </reference>
         
        <reference anchor="SP800-57" target="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-57pt1r4.pdf">
          <front>
            <title>
              Recommendation for Key Management - Part 1: General
            </title>
            <author><organization>
              National Institute of Standards and Technology (NIST)
            </organization>
            </author>
            <date month="January" year="2016"/>
          </front>
         <seriesInfo name="NIST Special Publication 800-57"
                     value="Revision 4"/>
         <seriesInfo name="DOI" value="10.6028/NIST.SP.800-57pt1r4"/>
        </reference>

        <reference anchor="X.500">
          <front>
            <title>Information technology - Open Systems Interconnection - The
            Directory - Part 1: Overview of concepts, models and services</title>
            <author/>
            <date/>
          </front>
          <seriesInfo name="ITU-T Recommendation X.500," value="ISO/IEC 9594-1:2017"/>
        </reference>

        <reference anchor="SMIMEv2">
          <front>
            <title>S/MIME version 2</title>
            <author/>
            <date/>
          </front>
          <annotation>
            This group of documents represents S/MIME version 2.
            These documents are <xref target="RFC2311"/>, <xref target="RFC2312"/>, <xref target="RFC2313"/>, <xref target="RFC2314"/>, and <xref target="RFC2315"/>.
          </annotation>
        </reference>

        <reference anchor="SMIMEv3">
          <front>
            <title>S/MIME version 3</title>
            <author/>
            <date/>
          </front>
          <annotation>
            This group of documents represents S/MIME version 3.
            These documents are <xref target="RFC2630"/>, <xref target="RFC2631"/>, <xref target="RFC2632"/>, <xref target="RFC2633"/>, <xref target="RFC2634"/>, and <xref target="RFC5035"/>.
          </annotation>
        </reference>

        <reference anchor="SMIMEv3.1">
          <front>
            <title>S/MIME version 3.1</title>
            <author/>
            <date/>
          </front>
          <annotation>
            This group of documents represents S/MIME version 3.1.
            These documents are <xref target="RFC2634"/>, <xref target="RFC3850"/>, <xref target="RFC3851"/>, <xref target="RFC3852"/>, and <xref target="RFC5035"/>.
          </annotation>
        </reference>

        <reference anchor="SMIMEv3.2">
          <front>
            <title>S/MIME version 3.2</title>
            <author/>
            <date/>
          </front>
          <annotation>
            This group of documents represents S/MIME version 3.2.
            These documents are <xref target="RFC2634"/>, <xref
            target="RFC5750"/>, <xref target="RFC5751"/>,
            <xref target="RFC5652"/>, and <xref target="RFC5035"/>.
          </annotation>
        </reference>

        &rfc6194;
        &rfc6151;
        &rfc6090;
        &rfc8032;
        &rfc8410;
        &rfc8162;
        
</references>

<section title="Historic Considerations" anchor="historic">
  <section title="Signature Algorithms and Key Sizes">
    <t>
      There are a number of problems with validating certificates on sufficiently historic messages.
      For this reason, it is strongly suggested that user agents treat these certificates differently from those on current messages.
      These problems include the following:
      <list style="symbols">
        <t>
          CAs are not required to keep certificates on a CRL beyond one update after a certificate has expired.
          This means that unless CRLs are cached as part of the message it is
          not always possible to check to see if a certificate has been revoked.
          The same problems exist with Online Certificate Status Protocol (OCSP) responses, as they may be based on a CRL rather than on the certificate database.
        </t>
        
        <t>
          RSA and DSA keys of less than 2048 bits are now considered by many experts to be cryptographically insecure (due to advances in computing power).
          Such keys were previously considered secure, so the processing of historic  certificates  will often result in the use of weak keys.
          Implementations that wish to support previous versions of S/&wj;MIME or process old messages need to consider the security risks that result from smaller key sizes (e.g., spoofed messages) versus the costs of denial of service.
          <vspace blankLines="1"/>
     <xref target="SMIMEv3.2"/> set the lower limit on suggested key sizes for
     creating and validation at 1024 bits.  <xref target="SMIMEv3.1"/> set the
     lower limit at 768 bits.  Prior to that, the lower bound on key sizes was 512 bits.
        </t>
        
        <t>
          Hash functions used to validate signatures on historic messages may no longer be considered to be secure (see below).
          While there are not currently any known practical pre-image or
          second pre&nbhy;image attacks against MD5 or SHA&nbhy;1, the fact that
          they are no longer considered to be collision resistant implies that
          the security level of any signature that is created with these
          hash algorithms should also be considered as suspect.
        </t>
        
      </list>
    </t>

    <t>
      The following algorithms have been called out for some level of support by previous S/MIME specifications:
      <list style="symbols">
        <t>
          RSA with MD5 was dropped in <xref target="SMIMEv4.0"/>.
          MD5 is no longer considered to be secure, as it is no longer
          collision resistant.
          Details can be found in <xref target="RFC6151"/>.
        </t>
        <t>
          RSA and DSA with SHA-1 were dropped in <xref target="SMIMEv4.0"/>.
          SHA-1 is no longer considered to be secure, as it is no longer
          collision resistant.
          The IETF statement on SHA-1 can be found in <xref
          target="RFC6194"/>, but it is out of date relative to the most recent advances.
        </t>
        <t>
          DSA with SHA-256 support was dropped in <xref target="SMIMEv4.0"/>.
          DSA was dropped as part of a general movement from finite fields to elliptic curves.
          Issues related to dealing with non-deterministic generation of the
          parameter 'k' have come up (see <xref target="RFC6979"/>).
        </t>

      </list>
    </t>

    <t>
   For 512-bit RSA with SHA-1, see <xref target="RFC3279"/> and <xref target="FIPS186-2"/> without
   Change Notice 1; for 512-bit RSA with SHA-256, see <xref target="RFC4055"/> and
   <xref target="FIPS186-2"/> without Change Notice 1.  The first reference
   provides the signature algorithm's OID, and the second
   provides the signature algorithm's definition.
    </t>

    <t>
      For 512-bit DSA with SHA-1, see <xref target="RFC3279"/> and <xref target="FIPS186-2"/> without
      Change Notice 1; for 512-bit DSA with SHA-256, see <xref target="RFC5758"/> and
      <xref target="FIPS186-2"/> without Change Notice 1; for 1024-bit DSA with SHA-1, see
      <xref target="RFC3279"/> and <xref target="FIPS186-2"/> with Change
      Notice 1; and for 1024-bit through
      3072-bit DSA with SHA-256, see <xref target="RFC5758"/> and <xref target="FIPS186-3"/>.  The first reference provides the signature algorithm's OID, and the second provides the signature algorithm's
      definition.
    </t>
  </section>
</section>

<section title="Moving S/MIME v2 Certificate Handling to Historic Status">
  <t>
   The S/&wj;MIME v3 <xref target="SMIMEv3"/>, v3.1 <xref
   target="SMIMEv3.1"/>, v3.2 <xref target="SMIMEv3.2"/>, and v4.0 (this
   document) specifications
   are backward compatible with the S/&wj;MIME v2 Certificate Handling
   Specification <xref target="SMIMEv2"/>, with the exception of the algorithms
   (dropped RC2/40 requirement, and added DSA and RSASSA&nbhy;PSS
   requirements).  Therefore, RFC 2312 <xref target="SMIMEv2"/>
   was moved to Historic status.
  </t>
</section>

<section title="Acknowledgements" numbered="no">
  <t>
   Many thanks go out to the other authors of the S/&wj;MIME v2 
   Certificate Handling RFC: Steve Dusse, Paul Hoffman, and Jeff Weinstein.
   Without v2, there wouldn't be a v3, v3.1, v3.2, or v4.0.
  </t>
  <t>
   A number of the members of the S/&wj;MIME Working Group have also worked
   very hard and contributed to this document.  Any list of people is
   doomed to omission, and for that I apologize.  In alphabetical order,
   the following people stand out in my mind because they made direct
   contributions to this document.
  </t>
  <t>
   Bill Flanigan, Trevor Freeman, Elliott Ginsburg, Alfred Hoenes, Paul
   Hoffman, Russ Housley, David P.&nbsp;Kemp, Michael Myers, John Pawling, and
   Denis Pinkas.
  </t>

  <t>
    The version 4 update to the S/&wj;MIME documents was done under the auspices of the LAMPS Working Group.
  </t>

 </section>
 </back>
</rfc>
