<?xml version="1.0" encoding="US-ASCII"?>
<!--used v1 (strict turned off) -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc strict="no" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no"?>
<?rfc rfcedstyle="yes" ?>
<?rfc sortrefs="yes" ?>

<rfc 
        submissionType="IETF"
	ipr="trust200902"
	category="info"
        consensus="yes"
	updates="6105"
        number="7113">
  <front>
    <title abbrev="RA-Guard Implementation Advice">Implementation Advice for IPv6 Router Advertisement Guard (RA-Guard)</title>



<author
        fullname="Fernando Gont"
        initials="F."
        surname="Gont">

        <organization abbrev="Huawei Technologies">Huawei Technologies</organization>
	
        <address>

            <postal>    
			<street>Evaristo Carriego 2644</street>
		<code>1706</code><city>Haedo</city>
 		<region>Provincia de Buenos Aires</region>
		<country>Argentina</country>
            </postal>
            <phone>+54 11 4650 8472</phone>

            <email>fgont@si6networks.com</email>

        </address>
    </author>

	
    <date month="February" year="2014"/>
    <area>Operations and Management</area>
    <workgroup>IPv6 Operations Working Group (v6ops)</workgroup>
    <abstract>
    <t>
The IPv6 Router Advertisement Guard (RA-Guard) mechanism is commonly employed to mitigate attack vectors based on
forged ICMPv6 Router Advertisement messages. Many existing IPv6 deployments rely on RA-Guard as the first line of defense against the aforementioned attack vectors. However, some implementations of RA-Guard have been found to be prone to circumvention by employing IPv6 Extension Headers. This document describes the evasion techniques that affect the aforementioned implementations and formally updates RFC 6105, such that the aforementioned RA-Guard evasion vectors are eliminated.
    </t>
    </abstract>
  </front>

  <middle>
  
  
<section title="Introduction" anchor="intro">
<t>
IPv6 Router Advertisement Guard (RA-Guard) is a mitigation technique for attack vectors based on ICMPv6 Router Advertisement <xref target="RFC4861"/> messages. <xref target="RFC6104"/> describes the problem statement of "Rogue IPv6 Router Advertisements", and <xref target="RFC6105"/> specifies the "IPv6 Router Advertisement Guard" functionality.</t>

<t>
The concept behind RA-Guard is that a Layer-2 (L2) device filters ICMPv6 Router Advertisement messages, according to a number of different criteria. The most basic filtering criterion is that Router Advertisement messages are discarded by the L2 device unless they are received on a specified port of the L2 device. Clearly, the effectiveness of RA-Guard relies on the ability of the L2 device to identify ICMPv6 Router Advertisement messages.
</t>

<t>Some popular RA-Guard implementations have been found to be easy to circumvent by employing IPv6 Extension Headers <xref target="CPNI-IPv6"/>. This document describes such evasion techniques and provides advice to RA-Guard implementers such that the aforementioned evasion vectors can be eliminated.</t>
<t>It should be noted that the previously mentioned techniques could also be exploited to evade network monitoring tools such as NDPMon <xref target="NDPMon"/>, ramond <xref target="ramond"/>, and rafixd <xref target="rafixd"/>, and could probably be exploited to perform stealth DHCPv6 <xref target="RFC3315"/> attacks.
</t>

</section>


<section title="Evasion Techniques for Some RA-Guard Implementations" anchor="ra-evasion">
<t>
The following subsections describe two different vectors that have been found to be effective for the evasion of popular implementations of RA-Guard. <xref target="extension-headers"/> describes an attack vector based on the use of IPv6 Extension Headers with ICMPv6 Router Advertisement messages, which may be used to circumvent the RA-Guard protection of those implementations that fail to process an entire IPv6 header chain when trying to identify the ICMPv6 Router Advertisement messages. <xref target="fragmentation"/> describes an attack method based on the use of IPv6 fragmentation, possibly in conjunction with the use of IPv6 Extension Headers. This later vector has been found to be effective against all existing implementations of RA-Guard.</t>

<section title="Attack Vector Based on IPv6 Extension Headers" anchor="extension-headers">
<t>While there is currently no legitimate use for IPv6 Extension Headers in ICMPv6 Router Advertisement messages, Neighbor Discovery <xref target="RFC4861"/> implementations allow the use of Extension Headers with these messages, by simply ignoring the received options. Some RA-Guard implementations try to identify ICMPv6 Router Advertisement messages by simply looking at the "Next Header" field of the fixed IPv6 header, rather than following the entire header chain. As a result, such implementations fail to identify any ICMPv6 Router Advertisement messages that include any Extension Headers (for example, a Hop-by-Hop Options header, a Destination Options header, etc.), and can be easily circumvented.
</t>

<t>The following figure illustrates the structure of ICMPv6 Router Advertisement messages that implement this evasion technique:</t>
<t>
<artwork align="center">
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|NH=60|       |NH=58|        |                                |
+-+-+-+       +-+-+-+        +                                +
| IPv6 Header |  Dst Opt Hdr |  ICMPv6 Router Advertisement   |
+             +              +                                +
|             |              |                                |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</t>
</section>

<section title="Attack Vector Based on IPv6 Fragmentation" anchor="fragmentation">
<t>This section presents a different attack vector, which has been found to be effective against all implementations of RA-Guard. The basic idea behind this attack vector is that if the forged ICMPv6 Router Advertisement is fragmented into at least two fragments, the L2 device implementing RA-Guard would be unable to identify the attack packet and would thus fail to block it.</t>

<t>A first variant of this attack vector would be an original ICMPv6 Router Advertisement message preceded with a Destination Options header, which results in two fragments. The following figure illustrates the "original" attack packet, prior to fragmentation, and the two resulting fragments that are actually sent as part of the attack.</t>

<t>
<artwork align="center">
Original Packet:

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|NH=60|       |NH=58|                           |           |
+-+-+-+       +-+-+-+                           +           +
| IPv6 Header |          Dst Opt Hdr            | ICMPv6 RA |
+             +                                 +           +
|             |                                 |           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


First Fragment:

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|NH=44|       |NH=60|       |NH=58|                 |
+-+-+-+       +-+-+-+       +-+-+-+                 +
| IPv6 Header |   Frag Hdr  |      Dst Opt Hdr      |
+             +             +                       +
|             |             |                       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Second Fragment:

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|NH=44|       |NH=60|       |             |           |
+-+-+-+       +-+-+-+       +             +           +
| IPv6 Header |   Frag Hdr  | Dst Opt Hdr | ICMPv6 RA |
+             +             +             +           +
|             |             |             |           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</t>

<t>
It should be noted that the "Hdr Ext Len" field of the Destination Options header is present in the First Fragment (rather than the second). Therefore, it is impossible for a device processing only the second fragment to locate the ICMPv6 header contained in that fragment, since it is unknown how many bytes should be "skipped" to get to the next header following the Destination Options header.</t>

<t>Thus, by leveraging the use of the Fragment Header together with the use of the Destination Options header, the attacker is able to conceal the type and contents of the ICMPv6 message he is sending (an ICMPv6 Router Advertisement in this example). Unless the L2 device were to implement IPv6 fragment reassembly, it would be impossible for the device to identify the ICMPv6 type of the message.
</t>

<t>
<list style="hanging">
<t>An L2 device could, however, at least detect that an ICMPv6 message (of some type) is being sent, since the "Next Header" field of the Destination Options header contained in the First Fragment is set to "58" (ICMPv6).
</t> 
</list>
</t>

<t>This idea can be taken further, such that it is also impossible for the L2 device to detect that the attacker is sending an ICMPv6 message in the first place. This can be achieved with an original ICMPv6 Router Advertisement message preceded with two Destination Options headers that results in two fragments. The following figure illustrates the "original" attack packet, prior to fragmentation, and the two resulting packets that are actually sent as part of the attack.
</t>

<t>
<artwork align="center">
Original Packet:

+-+-+-+-+-+-+-+-+-+-+-+-//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|NH=60|         |NH=60|       |NH=58|       |           |
+-+-+-+         +-+-+-+       +-+-+-+       +           +
|  IPv6 header  | Dst Opt Hdr | Dst Opt Hdr | ICMPv6 RA |
+               +             +             +           +
|               |             |             |           |
+-+-+-+-+-+-+-+-+-+-+-+-//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

First Fragment:

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|NH=44|       |NH=60|       |NH=60|                   |
+-+-+-+       +-+-+-+       +-+-+-+                   +
| IPv6 header |   Frag Hdr  |       Dst Opt Hdr       |
+             +             +                         +
|             |             |                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Second Fragment:

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|NH=44|       |NH=60|       |           |NH=58|       |           |
+-+-+-+       +-+-+-+       +           +-+-+-+       +           +
| IPv6 header |   Frag Hdr  | Dst O Hdr | Dst Opt Hdr | ICMPv6 RA |
+             +             +           +             +           +
|             |             |           |             |           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</t>

<t>In this variant, the "Next Header" field of the Destination Options header contained in the First Fragment is set to "60" (Destination Options header); thus, it is impossible for a device processing only the First Fragment to detect that an ICMPv6 message is being sent in the first place.</t>
<t>The second fragment presents the same challenges as the second fragment of the previous variant. That is, it would be impossible for a device processing only the second fragment to locate the second Destination Options header (and hence the ICMPv6 header), since the "Hdr Ext Len" field of the first Destination Options header is present in the First Fragment (rather than the second).
</t>
</section>
</section>

<section title="RA-Guard Implementation Advice" anchor="mitigations">
<t>The following filtering rules must be implemented as part of an RA-Guard implementation on ports that face interfaces that are not allowed to send ICMPv6 Router Advertisement messages, such that the vulnerabilities discussed in this document are eliminated:
</t>

<t>
<list style="numbers">
<t>
If the IPv6 Source Address of the packet is not a link-local address (fe80::/10), RA-Guard must pass the packet.
<list style="hanging">
<t>RATIONALE: This prevents RA-Guard from dedicating processing cycles to filtering packets that originate off-net and that, if they are RA's, would not be accepted by the host. Section 6.1.2 of <xref target="RFC4861"/> requires nodes to discard Router Advertisement messages if their IPv6 Source Address is not a link-local address.
</t>
</list>
</t>

<t>If the Hop Limit is not 255, RA-Guard must pass the packet.
<list style="hanging">
<t>RATIONALE: This prevents RA-Guard from dedicating processing cycles to filtering packets that originate off-net and that, if they are RA's, would not be accepted by the destination host. Section 6.1.2 of <xref target="RFC4861"/> requires nodes to discard Router Advertisement messages if their Hop Limit is not 255.
</t>
</list>
</t>

<t>RA-Guard must parse the entire IPv6 header chain present in the packet, to identify whether the packet is a Router Advertisement message. 
<list style="hanging">
<t>NOTE: RA-Guard implementations must not enforce a limit on the number of bytes they can inspect (starting from the beginning of the IPv6 packet), since this could introduce false positives: legitimate packets could be dropped simply because the RA-Guard device does not parse the entire IPv6 header chain present in the packet. An implementation that has such an implementation-specific limit must not claim compliance with this specification, and must pass the packet when such implementation-specific limit is reached.</t>

</list>
</t>



<t>
When parsing the IPv6 header chain, if the packet is a First Fragment (i.e., a packet containing a Fragment Header with the Fragment Offset set to 0) and it fails to contain the entire IPv6 header chain (i.e., all the headers starting from the IPv6 header up to, and including, the upper-layer header), RA-Guard must drop the packet and should log the packet drop event in an implementation-specific manner as a security fault.
<list style="hanging">
<t>
RATIONALE: <xref target="RFC7112"/> specifies that the First Fragment (i.e., the fragment with the Fragment Offset set to 0) must contain the entire IPv6 header chain, and allows intermediate systems such as routers to drop those packets that fail to comply with this requirement.
</t>
<t>
NOTE: This rule should only be applied to IPv6 fragments with a Fragment Offset of 0 (non-First Fragments can be safely passed, since they will never reassemble into a complete datagram if they are part of a Router Advertisement received on a port where such packets are not allowed).
</t>
</list>
</t>

<t>When parsing the IPv6 header chain, if the packet is identified to be an ICMPv6 Router Advertisement message or the packet contains an unrecognized Next Header value <xref target="IANA-IP-PROTO"/>, RA-Guard must drop the packet, and should log the packet drop event in an implementation-specific manner as a security fault. RA-Guard must provide a configuration knob that controls whether packets with unrecognized Next Header values are dropped; this configuration knob must default to "drop".
<list style="hanging">
<t>
RATIONALE: By definition, Router Advertisement messages are required to
originate on-link, have a link-local IPv6 Source Address, and have a Hop
Limit value of 255 <xref target="RFC4861"/>. <xref target="RFC7045"/>
requires that nodes be configurable with respect to whether packets with
unrecognized headers are forwarded, and allows the default behavior to
be that such packets be dropped.
</t>
</list>
</t>

<t>In all other cases, RA-Guard must pass the packet as usual.
</t>

</list></t>
<t>
<list>
<t>
NOTE: For the purpose of enforcing the RA-Guard filtering policy, an Encapsulating Security Payload (ESP) header <xref target="RFC4303"/> should be considered to be an "upper-layer protocol" (that is, it should be considered the last header in the IPv6 header chain). This means that packets employing ESP would be passed by the RA-Guard device to the intended destination. If the destination host does not have a security association with the sender of the aforementioned IPv6 packet, the packet would be dropped. Otherwise, if the packet is considered valid by the IPsec implementation at the receiving host and encapsulates a Router Advertisement message, it is up to the receiving host what to do with such a packet.
</t>
</list></t>

<t>
If a packet is dropped due to this filtering policy, then the packet drop event should be logged in an implementation-specific manner as a security fault. The logging mechanism should include a drop counter dedicated to RA-Guard packet drops.</t>

<t>In order to protect current end-node IPv6 implementations, Rule #4 has been defined as a default rule to drop packets that cannot be positively identified as not being Router Advertisement (RA) messages (because the packet is a fragment that fails to include the entire IPv6 header chain). This means that, at least in theory, RA-Guard could result in false-positive blocking of some legitimate non-RA packets that could not be positively identified as being non-RA. In order to reduce the likelihood of false positives, Rule #1 and Rule #2 require that packets that would not pass the required validation checks for RA messages (Section 6.1.2 of <xref target="RFC4861"/>) be passed without further inspection. In any case, as noted in <xref target="RFC7112"/>, IPv6 packets that fail to include the entire IPv6 header chain are virtually impossible to police with state-less filters and firewalls and, hence, are unlikely to survive in real networks. <xref target="RFC7112"/> requires that hosts employing fragmentation include the entire IPv6 header chain in the First Fragment (the fragment with the Fragment Offset set to 0), thus eliminating the aforementioned false positives.</t>

<t>This filtering policy assumes that host implementations require that the IPv6 Source Address of ICMPv6 Router Advertisement messages be a link-local address and that they discard the packet if this check fails, as required by the current IETF specifications <xref target="RFC4861"/>. Additionally, it assumes that hosts require the Hop Limit of Neighbor Discovery messages to be 255, and that they discard those packets otherwise.</t>
<t>The aforementioned filtering rules implicitly handle the case of fragmented packets: if the RA-Guard device fails to identify the upper-layer protocol as a result of the use of fragmentation, the corresponding packets would be dropped.</t>
<t>Finally, we note that IPv6 implementations that allow overlapping fragments (i.e., that do not comply with <xref target="RFC5722"/>) might still be subject of RA-based attacks. However, a recent assessment of IPv6 implementations <xref target="SI6-FRAG"/> with respect to their fragment reassembly policy seems to indicate that most current implementations comply with <xref target="RFC5722"/>.
</t>
</section>

<section title="Other Implications" anchor="implications">
<t>A similar concept to that of RA-Guard has been implemented for protecting against forged DHCPv6 messages. Such protection can be circumvented with the same techniques discussed in this document, and the countermeasures for such evasion attack are analogous to those described in <xref target="mitigations"/> of this document.
<list style="hanging">
<t><xref target="DHCPv6-Shield"/> specifies a mechanism to protect against rogue DHCPv6 servers, while taking into consideration the evasion techniques discussed in this document.</t>
</list>
</t>
</section>


    <section title="Security Considerations">
<t>This document describes a number of techniques that have been found to be effective to circumvent popular RA-Guard implementations and provides advice to RA-Guard implementers such that those evasion vulnerabilities are eliminated.
<list>
<t>As noted in <xref target="mitigations"/>, IPv6 implementations that allow overlapping fragments (i.e., that do not comply with <xref target="RFC5722"/>) might still be subject of RA-based attacks. However, most current implementations seem to comply with <xref target="RFC5722"/>.
</t>
</list>
</t>

<t>We note that if an attacker sends a fragmented ICMPv6 Router Advertisement message on a port not allowed to send such packets, the First Fragment would be dropped, and the rest of the fragments would be passed. This means that the victim node would tie memory buffers for the aforementioned fragments, which would never reassemble into a complete datagram. If a large number of such packets were sent by an attacker, and the victim node failed to implement proper resource management for the IPv6 fragment reassembly buffer, this could lead to a Denial of Service (DoS). However, this does not really introduce a new attack vector, since an attacker could always perform the same attack by sending forged fragmented datagrams in which at least one of the fragments is missing. <xref target="CPNI-IPv6"/> discusses some resource management strategies that could be implemented for the IPv6 fragment reassembly buffer.
</t>

<t>We note that the most effective and efficient mitigation for these attacks would rely on the prohibiting the use of IPv6 fragmentation with Router Advertisement messages (as specified by <xref target="RFC6980"/>), such that the RA-Guard functionality is easier to implement. However, since such mitigation would require an update to existing implementations, it cannot be relied upon in the short or near term.</t>
<t>Finally, we note that RA-Guard only mitigates attack vectors based on ICMPv6 Router advertisement messages. Protection against similar attacks based on other messages (such as DCHPv6) is considered out of the scope of this document and is left for other documents (e.g., <xref target="DHCPv6-Shield"/>).</t>
    </section>

    <section title="Acknowledgements">
<t>The author would like to thank Ran Atkinson, who provided very detailed comments and suggested text that was incorporated into this document.</t>

<t>The author would like to thank Ran Atkinson, Karl Auer, Robert Downie, Washam Fan, David Farmer, Mike Heard, Marc Heuse, Nick Hilliard, Ray Hunter, Joel Jaeggli, Simon Perreault, Arturo Servin, Gunter van de Velde, James Woodyatt, and Bjoern A. Zeeb, for providing valuable comments on earlier versions of this document.</t>

<t>The author would like to thank Arturo Servin, who presented this document at IETF 81.</t>
<t>This document resulted from the project "Security Assessment of the Internet Protocol version 6 (IPv6)" <xref target="CPNI-IPv6"/>, carried out by Fernando Gont on behalf of the UK Centre for the Protection of National Infrastructure (CPNI).</t>


    </section>


  </middle>

  <back>
  <references title='Normative References'>

	<?rfc include="reference.RFC.3315" ?>
	<?rfc include="reference.RFC.4303" ?>
	<?rfc include="reference.RFC.4861" ?>
	<?rfc include="reference.RFC.5722" ?>
	<?rfc include="reference.RFC.6105" ?>
	<?rfc include="reference.RFC.7045" ?>
<reference anchor='RFC7112'>
<front>
<title>Implications of Oversized IPv6 Header Chains</title>

<author initials='F' surname='Gont' fullname='Fernando Gont'>
    <organization />
</author>

<author initials='V' surname='Manral' fullname='Vishwas Manral'>
    <organization />
</author>

<author initials='R' surname='Bonica' fullname='Ron Bonica'>
    <organization />
</author>

<date month='January' year='2014' />

<abstract><t>The IPv6 specification allows IPv6 header chains of an arbitrary size.  The specification also allows options which can in turn extend each of the headers.  In those scenarios in which the IPv6 header chain or options are unusually long and packets are fragmented, or scenarios in which the fragment size is very small, the first fragment of a packet may fail to include the entire IPv6 header chain.  This document discusses the interoperability and security problems of such traffic, and updates RFC 2460 such that the first fragment of a packet is required to contain the entire IPv6 header chain.</t></abstract>

</front>

<seriesInfo name='RFC' value='7112' />

</reference>




<reference anchor='RFC6980'>

<front>
<title>Security Implications of IPv6 Fragmentation with IPv6 Neighbor Discovery</title>
<author initials='F.' surname='Gont' fullname='F. Gont'>
<organization /></author>
<date year='2013' month='August' />
<abstract>
<t>This document analyzes the security implications of employing IPv6 fragmentation with Neighbor Discovery (ND) messages.  It updates RFC 4861 such that use of the IPv6 Fragmentation Header is forbidden in all Neighbor Discovery messages, thus allowing for simple and effective countermeasures for Neighbor Discovery attacks.  Finally, it discusses the security implications of using IPv6 fragmentation with SEcure Neighbor Discovery (SEND) and formally updates RFC 3971 to provide advice regarding how the aforementioned security implications can be mitigated.</t></abstract></front>

<seriesInfo name='RFC' value='6980' />
<format type='TXT' octets='20850' target='http://www.rfc-editor.org/rfc/rfc6980.txt' />
</reference>


</references>



  <references title='Informative References'>

  	<?rfc include="reference.RFC.6104" ?>

      <reference anchor="IANA-IP-PROTO"
                 target="http://www.iana.org/assignments/protocol-numbers/">
        <front>
          <title>Assigned Internet Protocol Numbers</title>

          <author>
            <organization>IANA</organization>
          </author>

        </front>

      </reference>



    <reference anchor="DHCPv6-Shield">
  <front>
  <title abbrev="DHCPv6-Shield">DHCPv6-Shield: Protecting Against Rogue DHCPv6 Servers</title>
  <author initials="F.G." surname="Gont" fullname="F. Gont">
				<organization>SI6 Networks</organization>
  </author>
  <author initials="W" surname="Liu" fullname="W. Liu">
				<organization>SI6 Networks</organization>
  </author>
  <author initials="G" surname="Van de Velde" fullname="G. Van de Velde">
				<organization>SI6 Networks</organization>
  </author>
  <date month="October" year="2013"/>
  </front>
		<seriesInfo name="Work in" value="Progress"/>
  </reference>

    <reference anchor="CPNI-IPv6">
  <front>
  <title abbrev="Security Assessment of the Internet Protocol version 6 (IPv6)">Security Assessment of the Internet Protocol version 6 (IPv6)</title>
  <author initials="F.G." surname="Gont" fullname="F. Gont">
				<organization>Centre for the Protection of National Infrastructure</organization>
  </author>
  <date month="" year="(available on request)"/>
  </front>
		<seriesInfo name="" value="UK Centre for the Protection of National Infrastructure"/>
  </reference>

	<reference anchor="NDPMon" target="http://ndpmon.sourceforge.net/">
		<front>
			<title>NDPMon - IPv6 Neighbor Discovery Protocol Monitor</title>
			<author>
				<organization></organization>
			</author>
			<date year=""/>
		</front>
	</reference>

	<reference anchor="rafixd" target="http://www.kame.net/dev/cvsweb2.cgi/kame/kame/kame/rafixd/">
		<front>
			<title>rafixd</title>
			<author>
				<organization></organization>
			</author>
			<date year=""/>
		</front>
	</reference>

	<reference anchor="ramond" target="http://ramond.sourceforge.net/">
		<front>
			<title>ramond</title>
			<author>
				<organization></organization>
			</author>
			<date year=""/>
		</front>
	</reference>

	<reference anchor="SI6-FRAG" target="http://blog.si6networks.com/2012/02/ipv6-nids-evasion-and-improvements-in.html">
		<front>
			<title>IPv6 NIDS evasion and improvements in IPv6 fragmentation/reassembly</title>
			<author>
				<organization>SI6 Networks</organization>
			</author>
			<date year="2012"/>
		</front>
	</reference>

	<reference anchor="SI6-IPv6" target="http://www.si6networks.com/tools/ipv6toolkit">
		<front>
			<title>SI6 Networks' IPv6 toolkit</title>
			<author>
				<organization></organization>
			</author>
			<date year=""/>
		</front>
	</reference>

	<reference anchor="THC-IPV6" target="http://www.thc.org/thc-ipv6/">
		<front>
			<title>The Hacker's Choice IPv6 Attack Toolkit</title>
			<author>
				<organization></organization>
			</author>
			<date year=""/>
		</front>
	</reference>

</references>


<section title="Assessment Tools">
<t><xref target="SI6-IPv6"/> is a publicly available set of tools (for Linux, *BSD, and Mac OS) that implements the techniques described in this document.
</t>
<t><xref target="THC-IPV6"/> is a publicly available set of tools (for Linux) that implements some of the techniques described in this document.</t>
</section>



  </back>
</rfc>
