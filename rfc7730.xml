<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc number="7730" category="std" ipr="trust200902" obsoletes="6490" submissionType="IETF" consensus="yes" >
  <front>
    <title abbrev="RPKI Trust Anchor Locator">Resource Public Key Infrastructure
    (RPKI) Trust Anchor Locator</title>
    <author fullname="Geoff Huston" initials="G." surname="Huston">
      <organization abbrev="APNIC">APNIC</organization>
      <address>
        <email>gih@apnic.net</email>
        <uri>http://www.apnic.net</uri>
      </address>
    </author>
    <author fullname="Samuel Weiler" initials="S." surname="Weiler">
      <organization abbrev="Parsons">Parsons</organization>
        <address> 
          <postal> 
            <street>7110 Samuel Morse Drive</street>
            <city>Columbia</city> 
            <region>MD</region> <code>21046</code>
            <country>United States</country> 
          </postal> 
        <email>weiler@tislabs.com</email>
      </address> 
    </author>
    <author fullname="George Michaelson" initials="G." surname="Michaelson">
      <organization abbrev="APNIC">APNIC</organization>
      <address>
        <email>ggm@apnic.net</email>
        <uri>http://www.apnic.net</uri>
      </address>
    </author>
    <author fullname="Stephen Kent" initials="S." surname="Kent">
      <organization abbrev="BBN">BBN Technologies</organization>
      <address>
        <postal>
          <street>10 Moulton St.</street>
          <city>Cambridge</city>
          <region>MA</region>
          <code>02138</code>
          <country>United States</country>
        </postal>
        <email>kent@bbn.com</email>
      </address>
    </author>
    <date month="January" year="2016" />
    <area>Routing Area</area>
    <workgroup>SIDR</workgroup>

<keyword>RPKI</keyword>
<keyword>BGP Security</keyword>

    <abstract>
      <t>This document defines a Trust Anchor Locator (TAL) for the
      Resource Public Key Infrastructure (RPKI). This document obsoletes
      RFC 6490 by adding support for multiple URIs in a TAL.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="intro" title="Introduction">
      <t>This document defines a Trust Anchor Locator (TAL) for the
      Resource Public Key Infrastructure (RPKI) <xref
      target="RFC6480" />.  This format may be used to distribute
      trust anchor material using a mix of out-of-band and online
      means.  Procedures used by Relying Parties (RPs) to verify RPKI 
      signed objects SHOULD support this format to facilitate
      interoperability between creators of trust anchor material and
      RPs. This document obsoletes RFC 6490 by adding support for
      multiple URIs in a TAL.</t>
      <section title="Terminology">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
        "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
        "OPTIONAL" in this document are to be interpreted as described
        in <xref target="RFC2119"/>.</t>

      </section>
    </section>

    <section title="Trust Anchor Locator">
    <section title="Trust Anchor Locator Format">

      <t>This document does not propose a new format for trust anchor
      material. A trust anchor in the RPKI is represented by a self-signed
      X.509 Certification Authority (CA) certificate, a format commonly
      used in PKIs and widely supported by RP software. This document
      specifies a format for data used to retrieve and verify the
      authenticity of a trust anchor in a very simple fashion. That data is
      referred to as the TAL.</t>

     <t>The motivation for defining the TAL is to enable selected data
     in the trust anchor to change, without needing to effect
     redistribution of the trust anchor per se. In the RPKI,
     certificates contain extensions that represent Internet Number
     Resources (INRs) <xref target="RFC3779"/>. The set of INRs
     associated with an entity acting as a trust anchor is likely to
     change over time. Thus, if one were to use the common PKI
     convention of distributing a trust anchor to RPs in a secure
     fashion, then this procedure would need to be repeated whenever the
     INR set for the entity acting as a trust anchor changed. By
     distributing the TAL (in a secure fashion), instead of distributing the trust
     anchor, this problem is avoided, i.e., the TAL is constant so
     long as the trust anchor's public key and its location do not change.</t>

<t>
   The TAL is analogous to the TrustAnchorInfo data structure specified
   in <xref target="RFC5914"/>, which is on the Standards Track.  That specification
   could be used to represent the TAL, if one defined an rsync URI
   extension for that data structure.

 However, the TAL
      format was adopted by RPKI implementors prior to the PKIX trust
      anchor work, and the RPKI implementer community has elected to
      utilize the TAL format, rather than define the requisite
      extension. The community also prefers the simplicity of the
      ASCII encoding of the TAL, versus the binary (ASN.1) encoding for
      TrustAnchorInfo.</t>

      <t>The TAL is an ordered sequence of: 
      <list><t>
      <list style="format %d)">
      <t>a URI section,</t>
      <t>a &lt;CRLF&gt; or &lt;LF&gt; line break,</t>
      <t>a subjectPublicKeyInfo <xref target="RFC5280"/> in DER format
      <xref target="X.509"/>, encoded in Base64 (see Section 4 of
      <xref target="RFC4648"/>).  To avoid
          long lines, &lt;CRLF&gt; or &lt;LF&gt; line breaks MAY be inserted into
          the Base64-encoded string.</t>
      </list></t></list>

      where the URI section is comprised of one of more of the ordered sequence of:
      <list><t>
      <list style="format 1.%d)">
      <t>an rsync URI <xref target="RFC5781"/>,</t>
      <t>a &lt;CRLF&gt; or &lt;LF&gt; line break.</t>
      </list></t></list>
      </t>
    </section>
    <section title="TAL and Trust Anchor Certificate Considerations">

      <t>Each rsync URI in the TAL MUST reference a single object. It
      MUST NOT reference a directory or any other form of collection
      of objects.</t>

      <t>The referenced object MUST be a self-signed CA certificate
      that conforms to the RPKI certificate profile <xref
      target="RFC6487" />. This certificate is the trust anchor in
      certification path discovery <xref target="RFC4158" /> and
      validation <xref target="RFC5280"/> <xref target="RFC3779"/>.</t>

      <t>The validity interval of this trust anchor SHOULD reflect the
      anticipated period of stability of the particular set of INRs that
      are associated with the putative trust anchor.</t>

      <t>The INR extension(s) of this trust anchor MUST contain a
      non-empty set of number resources. It MUST NOT use the "inherit"
      form of the INR extension(s). The INR set described in this
      certificate is the set of number resources for which the issuing
      entity is offering itself as a putative trust anchor in the RPKI
      <xref target="RFC6480" />.</t>

      <t>The public key used to verify the trust anchor MUST be the
      same as the subjectPublicKeyInfo in the CA certificate and in
      the TAL.</t>

      <t>The trust anchor MUST contain a stable key. This key MUST NOT
      change when the certificate is reissued due to changes in the
      INR extension(s), when the certificate is renewed prior to
      expiration, or for any reason other than a key change.</t>

      <t>Because the public key in the TAL and the trust anchor MUST be
      stable, this motivates operation of that CA in an offline mode. Thus,
      the entity that issues the trust anchor SHOULD issue a subordinate CA
      certificate that contains the same INRs (via the use of the "inherit"
      option in the INR extensions of the subordinate certificate).  This
      allows the entity that issues the trust anchor to keep the
      corresponding private key of this certificate offline, while issuing
      all relevant child certificates under the immediate subordinate CA. 
      This measure also allows the Certificate Revocation List (CRL) issued
      by that entity to be used to revoke the subordinate CA certificate in
      the event of suspected key compromise of this online operational key
      pair that is potentially more
      vulnerable.</t>

      <t>The trust anchor MUST be published at a stable URI. When the
      trust anchor is reissued for any reason, the replacement CA
      certificate MUST be accessible using the same URI.</t>

      <t>Because the trust anchor is a self-signed certificate, there is no
      corresponding CRL that can be used to revoke it, nor is there a
      manifest <xref target="RFC6486"/> that lists this certificate.</t>

      <t>If an entity wishes to withdraw a self-signed CA certificate as a
      putative trust anchor, for any reason, including key rollover, the entity MUST
      remove the object from the location referenced in the TAL.</t>

      <t>Where the TAL contains two or more rsync URIs, then the same
      self-signed CA certificate MUST be found at each referenced
      location. In order to increase operational resilience, it is
      RECOMMENDED that the domain name parts of each of these URIs
      resolve to distinct IP addresses that are used by a diverse set
      of repository publication points, and these IP addresses be
      included in distinct Route Origin Authorizations (ROAs)
      objects signed by different CAs.</t>



    </section>
    <section title="Example">
      <figure><artwork>
rsync://rpki.example.org/rpki/hedgehog/root.cer

MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAovWQL2lh6knDx
GUG5hbtCXvvh4AOzjhDkSHlj22gn/1oiM9IeDATIwP44vhQ6L/xvuk7W6
Kfa5ygmqQ+xOZOwTWPcrUbqaQyPNxokuivzyvqVZVDecOEqs78q58mSp9
nbtxmLRW7B67SJCBSzfa5XpVyXYEgYAjkk3fpmefU+AcxtxvvHB5OVPIa
BfPcs80ICMgHQX+fphvute9XLxjfJKJWkhZqZ0v7pZm2uhkcPx1PMGcrG
ee0WSDC3fr3erLueagpiLsFjwwpX6F+Ms8vqz45H+DKmYKvPSstZjCCq9
aJ0qANT9OtnfSDOS+aLRPjZryCNyvvBHxZXqj5YCGKtwIDAQAB
</artwork></figure>
    </section>
    </section>
    <section title="Relying Party Use">
      <t>In order to use the TAL to retrieve and validate a (putative)
      trust anchor, an RP SHOULD:</t>

      <t><list style="numbers">

        <t>Retrieve the object referenced by (one of) the URI(s)
        contained in the TAL.</t>

        <t>Confirm that the retrieved object is a current, self-signed
        RPKI CA certificate that conforms to the profile as specified
        in <xref target="RFC6487" />.</t>

        <t>Confirm that the public key in the TAL matches the public
        key in the retrieved object.</t>

        <t>Perform other checks, as deemed appropriate (locally), to
        ensure that the RP is willing to accept the entity publishing
        this self-signed CA certificate to be a trust anchor. These tests apply
        to the validity of attestations made in the context of the
        RPKI relating to all resources described in the INR extension
        of this certificate.</t>

      </list></t>

      <t>An RP SHOULD perform these functions for each instance of TAL
      that it is holding for this purpose every time the RP performs a
      resynchronization across the local repository cache. In any
      case, an RP also SHOULD perform these functions prior to the
      expiration of the locally cached copy of the retrieved trust
      anchor referenced by the TAL.</t>

      <t>In the case where a TAL contains multiple URIs, an RP MAY use
      a locally defined preference rule to select the URI to retrieve
      the self-signed RPKI CA certificate that is to be used as a
      trust anchor.  Some examples are:

<?rfc subcompact="yes"?>
      <list style="symbols">
      <t>Using the order provided in the TAL</t>
      <t>Selecting the URI randomly from the available list</t>
      <t>Creating a prioritized list of URIs based on RP-specific
      parameters, such as connection establishment delay</t></list></t>
<?rfc subcompact="no"?>

      <t>If the connection to the preferred URI fails, or the retrieved
      CA certificate public key does not match the TAL public key, the
      RP SHOULD retrieve the CA certificate from the next URI, according
      to the local preference ranking of URIs.</t>


    </section>
    <section title="Security Considerations">

      <t>Compromise of a trust anchor private key permits unauthorized parties to
      masquerade as a trust anchor, with potentially severe consequences. Reliance on
      an inappropriate or incorrect trust anchor has similar potentially
      severe consequences.</t>

      <t>This TAL does not directly provide a list of resources covered by
      the referenced self-signed CA certificate. Instead, the RP is
      referred to the trust anchor itself and the INR extension(s) within
      this certificate.  This provides necessary operational flexibility,
      but it also allows the certificate issuer to claim to be
      authoritative for any resource.  Relying parties should either have
      great confidence in the issuers of such certificates that they are
      configuring as trust anchors, or they should issue their own
      self-signed certificate as a trust anchor and, in doing so, impose
      constraints on the subordinate certificates.</t> </section> 


  </middle>
  <back>
    <references title="Normative References">
      <?rfc include='reference.RFC.2119.xml'?>
      <?rfc include='reference.RFC.3779.xml'?>
      <?rfc include='reference.RFC.4648.xml'?>
      <?rfc include='reference.RFC.5280.xml'?>
      <?rfc include='reference.RFC.5781.xml'?>
      <?rfc include='reference.RFC.6487.xml'?>


      <reference anchor="X.509">
        <front>
          <title>The Directory: Public-key and attribute certificate frameworks</title>
          <author><organization>ITU-T</organization>
          </author>
          <date month="October" year="2012" />
        </front>
	<seriesInfo name="ITU-T Recommendation" value="X.509"/>
	<seriesInfo name="ISO/&wj;IEC" value="9594-8"/>
      </reference>

    </references>
    <references title="Informative References">
      <?rfc include='reference.RFC.4158.xml'?>
      <?rfc include='reference.RFC.5914.xml'?>
      <?rfc include='reference.RFC.6486.xml'?>
      <?rfc include='reference.RFC.6480.xml'?>
    </references>

      <section title="Acknowledgments" numbered="no"> 

   <t>This approach to trust anchor material was originally described by
   Robert Kisteleki.</t>

      <t>The authors acknowledge the contributions of Rob Austein and Randy
      Bush, who assisted with drafting this document and with helpful
      review comments.</t>

      <t>The authors acknowledge with work of Roque Gagliano, Terry
      Manderson, and Carlos Martinez Cagnazzo in developing the ideas behind
      the inclusion of multiple URIs in the TAL.</t>

   </section>
  </back>
</rfc>
