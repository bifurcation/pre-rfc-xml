<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC3264 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3264.xml">
<!ENTITY RFC4145 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4145.xml">
<!ENTITY RFC4474 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4474.xml">
<!ENTITY RFC4566 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4566.xml">
<!ENTITY RFC4572 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4572.xml">
<!ENTITY RFC5245 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5245.xml">
<!ENTITY RFC5280 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml">
<!ENTITY RFC5389 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5389.xml">
<!ENTITY RFC5479 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5479.xml">
<!ENTITY RFC5763 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5763.xml">
<!ENTITY RFC5764 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5764.xml">
<!ENTITY RFC6347 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6347.xml">

]>


<?rfc toc="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc rfcedstyle="yes"?>  
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc number="7345" ipr="trust200902" category="std" submissionType="IETF" consensus="yes">
	<front>
		<title abbrev="UDPTL over DTLS">
			UDP Transport Layer (UDPTL) over&nbsp;Datagram&nbsp;Transport&nbsp;Layer&nbsp;Security&nbsp;(DTLS)
		</title>
    		<author initials="C.H." surname="Holmberg" fullname="Christer Holmberg">
			<organization>Ericsson</organization>
			<address>
				<postal>
					<street>Hirsalantie 11</street>
					<code>02420</code>
					<city>Jorvas</city>
					<country>Finland</country>
				</postal>
				<email>christer.holmberg@ericsson.com</email>
			</address>
		</author>
		<author initials="I.S." surname="Sedlacek" fullname="Ivo Sedlacek">
			<organization>Ericsson</organization>
			<address>
				<postal>
					<street>Sokolovska 79</street>
					<code>18600</code>
					<city>Praha</city>
					<country>Czech Republic</country>
				</postal>
				<email>ivo.sedlacek@ericsson.com</email>
			</address>
		</author>
		<author initials="G.S" surname="Salgueiro" fullname="Gonzalo Salgueiro">
			<organization abbrev="Cisco">Cisco Systems, Inc.</organization>
			<address>
				<postal>
					<street>7200-12 Kit Creek Road</street>
					<city>Research Triangle Park</city>
					<region>NC</region>
					<code>27709</code>
					<country>US</country>
				</postal>
				<email>gsalguei@cisco.com</email>
			</address>
		</author>

		<date month="August" year="2014" />
		<area>Transport</area>
		<workgroup>MMUSIC Working Group</workgroup>
		<keyword>SDP</keyword>
		<keyword>SIP</keyword>
		<keyword>DTLS</keyword>
		<keyword>UDPTL</keyword>
		<keyword>fax</keyword>
		<keyword>transport</keyword>
		<abstract>
			<t>
				This document specifies how the UDP Transport Layer (UDPTL) protocol,
				the predominant transport protocol for T.38 fax, can be transported 
				over the Datagram Transport Layer Security (DTLS) protocol, how the 
				usage of UDPTL over DTLS is indicated in the Session Description 
				Protocol (SDP), and how UDPTL over DTLS is negotiated in a session 
				established using the Session Initiation Protocol (SIP).
			</t>
		</abstract>
	</front>
	
	<middle>
		<section title="Introduction" toc="default">
			<t>
				While it is possible to transmit highly sensitive documents using 
				traditional telephony encryption devices, secure fax on the Public 
				Switched Telephone Network (PSTN) was never widely considered or
				prioritized. This was mainly because of the challenges involved 
				with malevolent physical access to telephony equipment. As real-time 
				communications transition to IP networks, where information might 
				potentially be intercepted or spoofed, an appropriate level of 
				security for fax that offers integrity and confidentiality protection 
				is vital.
			</t>
			<t>
				The overwhelmingly predominant fax transport protocol is UDPTL-based,
				as described in Section 9.1 of <xref target="ITU.T38.2010"/>. The protocol stack for fax transport using UDPTL is 
				shown in <xref target="figure_UDPTL_UDP_stack"/>.
			</t>
			<figure anchor="figure_UDPTL_UDP_stack" title="Protocol Stack for UDPTL over UDP">
              <artwork><![CDATA[		  
                      +-----------------------------+
                      | Internet facsimile protocol |
                      +-----------------------------+
                      |            UDPTL            |
                      +-----------------------------+
                      |            UDP              |
                      +-----------------------------+
                      |            IP               |
                      +-----------------------------+
           ]]></artwork>
            </figure>
			<t>
				The following mechanisms are available for securing fax:
			</t>
			<t>
				<list style="symbols">
				<t>
					Annex H of <xref target="ITU.T30.2005"/> specifies 
					an application-layer integrity and confidentiality 
					protection of fax that is independent
					of the transport protocol and is based on the RSA algorithm for use with the T.30 telephony protocol
					by Group 3 facsimile equipment (G3FE).
				</t>
				<t>
					<xref target="ITU.T38.2010"/> specifies fax transport 
					over RTP/SAVP, which enables integrity and confidentiality protection of fax in IP networks.

				</t>
				</list>
			</t>
			<t>
				Both of these mechanisms have been available for many years and never
				gained any significant adoption in the market. This has prompted an
				effort to develop an approach, based on open
				standards, for securing fax
				communications over an IP-based transport.

			</t>				
			<t>
				Telephony-based protocols like T.30 offer application-level security
				options like the RSA-based approach detailed in Annex H of the T.30
				specification <xref target="ITU.T30.2005"/>. The problem is that it is very sparingly implemented
				and not enforced at the transport level.
			</t>				
			<t>
				It is worth noting that while T.38 over RTP offers a very viable
				option for such standards-based IP security
				solution using Secure Realtime Transport
				Protocol (SRTP), this
				fax-over-IP transport never gained any traction in the marketplace
				and accounts for a negligible percentage of fax-over-IP
				implementations.
			</t>				
			<t>
				Thus, security mechanisms offering integrity and confidentiality
				protection should be limited to UDPTL-based fax transport, which is
				the only broad-based fax-over-IP solution. The 3rd Generation
				Partnership Project (3GPP) launched a study on how best to provide
				secure fax in the IP Multimedia Subsystem (IMS) for UDPTL.  Results
				of the study confirmed that this security was best achieved by using
				UDPTL over DTLS.
			</t>				
			<t>
				This document specifies fax transport using UDPTL over DTLS <xref target="RFC6347"/>, which enables integrity and confidentiality 
				protection of fax in IP networks. The protocol
				stack that enhances fax transport 
				to offer integrity and confidentiality using UDPTL over DTLS is shown in
				<xref target="figure_UDPTL_DTLS_UDP_stack"/>.
			</t>
			<figure anchor="figure_UDPTL_DTLS_UDP_stack" title="Protocol Stack for UDPTL over DTLS over UDP">
              <artwork><![CDATA[		  
                      +-----------------------------+
                      | Internet facsimile protocol |
                      +-----------------------------+
                      |            UDPTL            |
                      +-----------------------------+
                      |            DTLS             |
                      +-----------------------------+
                      |            UDP              |
                      +-----------------------------+
                      |            IP               |
                      +-----------------------------+
           ]]></artwork>
            </figure>
			<t>
				The primary motivations for the mechanism in this document are:
				<list style="symbols">
					<t>
						The design of DTLS <xref target="RFC6347" /> is 
						clearly defined and well understood, and implementations are widely available.
					</t>
					<t>
						No DTLS extensions are required in order to enable UDPTL transport over DTLS.
					</t>
					<t>
						Fax transport using UDPTL over DTLS only requires insertion of the DTLS layer between 
						the UDPTL layer and the UDP
						layer, as shown in <xref
						target="figure_UDPTL_DTLS_UDP_stack"/>. The
						UDPTL layer and the layers
						above the UDPTL layer 

						require no modifications.
					</t>
					<t>
						UDPTL <xref target="ITU.T38.2010"  /> is by far the 
						most widely deployed fax transport protocol in IP networks.
					</t>
					<t>
						3GPP and the IP fax community need a mechanism to transport UDPTL over DTLS in order to 
						provide secure fax in SIP-based networks (including IMS).
					</t>
				</list>
			</t>
			<t>
				This document specifies the transport of UDPTL over DTLS using the DTLS record 
				layer "application_data" packets <xref target="RFC5246" />
				<xref target="RFC6347" />.
			</t>
			<t>
				Since the DTLS record layer "application_data" packet does not indicate whether 
				it carries UDPTL or some other protocol, the usage of a dedicated DTLS association 
				for transport of UDPTL needs to be negotiated, e.g., using the Session Description 
				Protocol (SDP) <xref target="RFC4566" /> and the SDP 
				offer/answer mechanism <xref target="RFC3264" />.
			</t>
			<t>
				Therefore, this document specifies a new &lt;proto&gt; value <xref target="RFC4566"/> for the SDP media description ("m=" line) 
				<xref target="RFC3264" />, in order to indicate 
				UDPTL over DTLS in SDP messages <xref target="RFC4566" />.
			</t>
		</section>
		<section title="Conventions" toc="default">
			<t>
				The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", 
				"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted 
				as described in BCP 14, RFC 2119 <xref target="RFC2119"  />.
			</t>
			<t>
				DTLS uses the term "session" to refer to a long-lived set of
				keying material that spans DTLS associations. In this document,
				in order to be consistent with SIP/SDP usage of "session" terminology, 
				we use "session" to refer to a multimedia session and use the term "DTLS session" 
				to refer to the DTLS construct. We use the term "DTLS association" to refer 
				to a particular DTLS cipher suite and keying material set that is associated 
				with a single host/port quartet. The same DTLS session can be used to 
				establish the keying material for multiple DTLS associations. For 
				consistency with other SIP/SDP usage, we use the term "connection" when 
				what's being referred to is a multimedia stream that is not specifically 
				DTLS.
			</t>
		</section>
		<section title="Secure Channel" toc="default">
			<t>
				The UDPTL-over-DTLS media stream is negotiated using the SDP 
				offer/answer mechanism <xref target="RFC3264"/>. See <xref target="sec-sdp-of"/> for more details.
			</t>
			<t>
				DTLS is used as specified in <xref target="RFC6347"/>. Once the DTLS handshake is successfully completed 
				(in order to prevent facsimile data from being transmitted insecurely), the 
				UDPTL packets MUST be transported in DTLS record layer "application_data" 
				packets.
			</t>
		</section>
		<section anchor="sec-sdp-of" title="SDP Offerer/Answerer Procedures" toc="default">
			<section title="General" toc="default">
				<t>
					An endpoint (i.e., both the offerer and the answerer) MUST create an SDP 
					media description ("m=" line) for each UDPTL-over-DTLS media stream and 
					MUST assign a UDP/TLS/UDPTL value (see <xref target="table_SDP_proto_values"/>) to the "proto" field of the "m=" line.
				</t>
				<t>
					The procedures in this section apply to an "m=" line associated with a UDPTL-over-DTLS
					media stream.				
				</t>
				<t>
					In order to negotiate a UDPTL-over-DTLS media stream, the following SDP attributes are used:
					<list style="symbols">
						<t>
							The SDP attributes defined for UDPTL over UDP, as described in 
							<xref target="ITU.T38.2010"  />; and
						</t>
						<t>
							The SDP attributes, defined in <xref target="RFC4145"/> and <xref target="RFC4572"/>, as described in this section.					
						</t>
					</list>
				</t>
				<t>
					The endpoint MUST NOT use the SDP "connection" attribute 
					<xref target="RFC4145"  />.
				</t>
				<t>
					In order to negotiate the TLS roles for the UDPTL-over-DTLS transport
					connection, the endpoint MUST use the SDP "setup" attribute 
					<xref target="RFC4145"  />.
				</t>
				<t>
					If the endpoint supports, and is willing to use, a cipher suite with an 
					associated certificate, the endpoint MUST include an SDP "fingerprint" attribute 
					<xref target="RFC4572"  />. The endpoint MUST support 
					SHA-256 for generating and verifying the SDP "fingerprint" attribute 
					value. The use of SHA-256 is preferred. 

					UDPTL over DTLS, at a minimum, MUST support TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 
					and MUST support TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256. UDPTL over DTLS MUST 
					prefer TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 and any other Perfect Forward Secrecy 
					(PFS) cipher suites over non-PFS cipher suites. Implementations SHOULD disable 
					TLS-level compression.
				</t>
				<t>
					If a cipher suite with an associated certificate is selected during the 
					DTLS handshake, the certificate received during the DTLS handshake MUST match 
					the fingerprint received in the SDP "fingerprint" attribute. If the fingerprint 
					does not match the hashed certificate, then the endpoint MUST tear down the media 
					session immediately. Note that it is permissible to wait until the other side's 
					fingerprint has been received before establishing the connection; however, this 
					may have undesirable latency effects.
				</t>
			</section>
			
			<section title="Generating the Initial Offer" toc="default">
				<t>
					The offerer SHOULD assign the SDP "setup" attribute with a value of
					"actpass", unless the offerer insists on being either the sender or 
					receiver of the DTLS ClientHello message, in which case the offerer 
					can use either a value of "active" (the offerer will be the sender of 
					ClientHello) or "passive" (the offerer will be the receiver of ClientHello). 
					The offerer MUST NOT assign an SDP "setup" attribute with a "holdconn" 
					value. 
				</t>	
				<t>							
					If the offerer assigns the SDP "setup" attribute with a 
					value of "actpass" or "passive", the offerer 
					MUST be prepared to receive a DTLS ClientHello message 
					before it receives the SDP answer.
				</t>	
			</section>
			
			<section title="Generating the Answer" toc="default">
				<t>
					If the answerer accepts the offered UDPTL-over-DTLS transport
					connection, in the associated SDP answer, the answerer MUST assign 
					an SDP "setup" attribute with a value of either "active" or 
					"passive", according to the procedures in 
					<xref target="RFC4145"  />.
					The answerer MUST NOT assign an SDP "setup" attribute with a
					value of "holdconn".
				</t>
				<t>
					If the answerer assigns an SDP "setup" attribute with a value of 
					"active" value, the answerer MUST initiate a DTLS handshake by 
					sending a DTLS ClientHello message on the negotiated media stream, 
					towards the IP address and port of the offerer. 
				</t>
			</section>

			<section title="Offerer Processing of the Answer" toc="default">
				<t>
					When the offerer receives an SDP answer, if the offerer ends 
					up being active it MUST initiate a DTLS handshake by 
					sending a DTLS ClientHello message on the negotiated media 
					stream, towards the IP address and port of the answerer.
				</t>
			</section>

			<section title="Modifying the Session" toc="default">
				<t>
					Once an offer/answer exchange has been completed, either
					endpoint MAY send a new offer in order to modify the session.
					The endpoints can reuse the existing DTLS association if
					the key fingerprint values and transport parameters indicated 
					by each endpoint are unchanged. Otherwise, following 
					the rules for the initial offer/answer exchange, the endpoints 
					can negotiate and create a new DTLS association and, once created,
					delete the previous DTLS association, following the same rules 
					for the initial offer/answer exchange. Each endpoint needs
					to be prepared to receive data on both the new and old DTLS associations
					as long as both are alive.
				</t>
			</section>
		</section>

		<section title="Miscellaneous Considerations" toc="default">
			<section title="Anonymous Calls" toc="default">
				<t>
					When making anonymous calls, a new self-signed certificate SHOULD be
					used for each call, and attributes inside the certificate MUST NOT contain 
					information that allows either correlation or identification of the user making 
					anonymous calls. This is particularly important for the "subjectAltName"
					and "commonName" attributes.
				</t>



			</section>					
			<section title="NAT Traversal" toc="default">
				<section title="ICE Usage" toc="default">
				<t>
					When Interactive Connectivity
					Establishment (ICE) <xref target="RFC5245"/> is being
					used, the ICE connectivity checks are performed before the DTLS
					handshake begins. Note that if aggressive nomination mode is used,
					multiple candidate pairs may be marked valid before ICE finally
					converges on a single candidate
					pair. User Agents (UAs) MUST treat all
					ICE candidate pairs associated with a single component as part of the
					same DTLS association. Thus, there will be only one DTLS handshake
					even if there are multiple valid candidate pairs. Note that this may
					mean adjusting the endpoint IP addresses if the selected candidate
					pair shifts, just as if the DTLS packets were an ordinary media stream.
					In the case of an ICE restart, the DTLS handshake procedure is repeated, and 
					a new DTLS association is created. Once the DTLS handshake is completed
					and the new DTLS association has been created, the previous DTLS association 
					is deleted. 
				</t>
				</section>
				<section title="STUN Interaction" toc="default">
				<t>
					The UA MUST send the Session Traversal
					Utilities for NAT (STUN) packets <xref target="RFC5389"  /> 
					directly over UDP, not over DTLS.
				</t>			  
				<t>
					The UA MUST support the following mechanism for demultiplexing packets arriving on 
					the IP address and port associated with the DTLS association:
					<list style="symbols">
					<t>
						If the value of the first byte of the packet is 0 or 1, then the packet is STUN.
					</t>
					<t>
						If the value of the first byte of the packet is between 20 and 63 (inclusive), 
						the packet is DTLS.
					</t>
					</list>
				</t>
				</section>
			</section>
			<section title="Rekeying" toc="default">
				<t>
					During rekeying, packets protected by the previous set of keys can
					arrive after the DTLS handshake caused by rekeying has completed,
					because packets can be reordered on the wire.					
					To compensate for this fact, receivers MUST maintain both sets of keys 
					for some time in order to be able to decrypt and verify older packets. The duration 
					of maintaining the previous set of keys after the finish of the DTLS handshake is 
					out of the scope of this document.
				</t>
			</section>
			<section title="Compatibility with UDPTL over UDP" toc="default">
				<t>
					If a user requires fax to be transported securely using UDPTL over DTLS, and 
					if the remote user does not support UDPTL over DTLS, then a fax media stream 
					cannot be established.
				</t>
				<t>
					If a user prefers fax to be transported securely using UDPTL over DTLS but is willing
					to transport the fax insecurely in case the remote user does not support UDPTL over 
					DTLS, then the SDP Capability
					Negotiation mechanism <xref target="RFC5939"/> can be used to offer 
					both UDPTL over DTLS and UDPTL over UDP. Alternatively, if the remote user rejects
					an SDP offer for UDPTL over DTLS, a new SDP offer for a UDPTL-over-UDP media stream can be sent.
				</t>
			</section>
		</section>
		<section anchor="section.sec" title="Security Considerations">
			<t>
				Fax may be used to transmit a wide range of sensitive data, including
				personal, corporate, and governmental information. It is therefore
          			critical to be able to protect against threats to the confidentiality 
				and integrity of the transmitted data.
			</t>
			<t>
				The mechanism in this document provides integrity and confidentiality  
				protection for fax by specifying fax transport using UDPTL over DTLS
				<xref target="RFC6347"  />.
			</t>		
			<t>
				DTLS media stream negotiated using SIP/SDP requires a mechanism to ensure
				that the certificate received via DTLS was issued by the remote
				party of the SIP session.
			</t>
			<t>
				The standard DTLS strategy for authenticating the communicating
				parties is to give the server (and optionally the client) a PKIX
				<xref target="RFC5280"  /> certificate.
				The client then verifies the certificate and checks that the name in 
				the certificate matches the server's domain name. This works because 
				there are a relatively small number of servers and the cost for issuing 
				and deploying PKIX certificates can be justified. Issuing and deploying 
				PKIX certificates to all clients is not realistic in most deployment scenarios.
			</t>
			<t>
				The design described in this document is intended to leverage the
				integrity protection of the SIP signaling, while not requiring
				confidentiality. As long as each side of the connection can verify
				the integrity of the SDP received from the other side, then the DTLS
				handshake cannot be hijacked via a man-in-the-middle attack.  This
				integrity protection is easily provided by the caller to the callee
				via the SIP Identity <xref target="RFC4474"/>
				mechanism. Other mechanisms,
				such as the S/MIME mechanism <xref target="RFC3261"/>
				or perhaps future mechanisms yet to be specified, could also serve this purpose.
			</t>
			<t>
				While this mechanism can still be used without such integrity
				mechanisms, the security provided is limited to defense against
				passive attack by intermediaries.  An active attack on the signaling
				plus an active attack on the media plane can allow an attacker to
attack the connection (R-SIG-MEDIA in the notation of <xref target="RFC5479"/>).
			</t>
		</section>
		<section anchor="section.iana" title="IANA Considerations">
			<t>
				This document updates the "Session Description Protocol (SDP) Parameters" registry as 
				specified in Section 8.2.2 of <xref target="RFC4566" />.
Specifically, the values in <xref target="table_SDP_proto_values"/> have been
added to the SDP "proto" field
registry.
			</t>
			<texttable anchor="table_SDP_proto_values" title='SDP "proto" Field Values'>
				<ttcol align='center'>Type</ttcol>
				<ttcol align='center'>SDP Name</ttcol>
				<ttcol align='center'>Reference</ttcol>
				<c>proto</c>
				<c>UDP/TLS/UDPTL</c>
				<c>[RFC7345]</c>
			</texttable>

		</section>
		<section title="Acknowledgments">
			<t>
				Special thanks to Peter Dawes, who provided
				comments on the initial draft version of the document, and to
				Paul E.&nbsp;Jones, James Rafferty, Albrecht Schwarz, Oscar Ohlsson, David Hanes, Adam Gensler, Ari
				Keranen, Flemming Andreasen, John Mattsson, and Marc Petit-Huguenin, who provided valuable feedback and input. 
				Barry Leiba, Spencer Dawkins, Pete Resnick, Kathleen Moriarty, and Stephen Farrell provided valuable 
				feedback during the IESG review. Thanks to Scott Brim for performing the Gen-ART review. Thanks to 
				Alissa Cooper for her help as sponsoring Area Director.
			</t>
		</section>


	</middle>
	<back>



		<references title="Normative References">
			<?rfc include="reference.RFC.2119"?>
			<?rfc include="reference.RFC.3261"?>
			<?rfc include="reference.RFC.3264"?>
			<?rfc include="reference.RFC.4145"?>
			<?rfc include="reference.RFC.4474"?>
			<?rfc include="reference.RFC.4566"?>
			<?rfc include="reference.RFC.4572"?>			
			<?rfc include="reference.RFC.5245"?>			
			<?rfc include="reference.RFC.5280"?>			
			<?rfc include="reference.RFC.5389"?>			
			<?rfc include="reference.RFC.6347"?>
			<reference anchor="ITU.T30.2005">
				<front>
					<title>Procedures for document facsimile transmission in the general switched telephone network</title>
					<author>
						<organization>International Telecommunications Union</organization>
					</author>
					<date month="September" year="2005"/>
				</front>
				<seriesInfo name="ITU-T" value="Recommendation T.30"/>
			</reference>
			<reference anchor="ITU.T38.2010">
				<front>
					<title>Procedures for real-time Group 3 facsimile communication over IP networks</title>
					<author>
						<organization>International Telecommunications Union</organization>
					</author>
					<date month="September" year="2010"/>
				</front>
				<seriesInfo name="ITU-T" value="Recommendation T.38"/>
			</reference>
		</references>
		<references title="Informative References">
			<?rfc include="reference.RFC.5246"?>
			<?rfc include="reference.RFC.5479"?>
			<?rfc include="reference.RFC.5939"?>			
		</references>
      <section anchor="section.example" title="Examples">
        <section title="General">
          <t>
				Prior to establishing the session, both Alice and Bob generate self-signed certificates
				that are used for a single session or, more likely, reused for multiple sessions.
          </t>
          <t>
				The SIP signaling from Alice to her proxy is
				transported over TLS to ensure an
				integrity-protected channel between Alice and
				her identity service. Alice's identity service
				asserts 
				identity of Alice and protects the SIP message, e.g., using SIP Identity. Transport between 
				proxies should also be protected, e.g., by use of TLS.
          </t>
          <t>
				In order to simplify the flow, only one element is shown for Alice's and Bob's proxies.
          </t>
          <t>
				For the sake of brevity and simplicity, only the mandatory SDP T.38
				attributes are shown.
          </t>
        </section>

         <section title="Basic Message Flow">
			<t>
				<xref target="example_1_figure"/> shows an example message flow of session 
				establishment for T.38 fax securely transported using UDPTL over DTLS.
			</t>
			<t>
				In this example flow, Alice acts as the passive endpoint of the DTLS association, and Bob acts as 
				the active endpoint of the DTLS association.
			</t>
			<t>
            <figure anchor="example_1_figure" title="Basic Message Flow">
              <artwork><![CDATA[
      Alice                    Proxies                   Bob
        | (1) SIP INVITE         |                        |
        |----------------------->|                        |
        |                        | (2) SIP INVITE         |
        |                        |----------------------->|
        |                        |   (3) DTLS ClientHello |
        |<------------------------------------------------|
        |    (4) remaining messages of DTLS handshake     |
        |<----------------------------------------------->|
        |                        |                        |
        |                        |                        |
        |                        |         (5) SIP 200 OK |
        |                        |<-----------------------|
        |         (6) SIP 200 OK |                        |
        |<-----------------------|                        |
        | (7) SIP ACK            |                        |
        |------------------------------------------------>|
        |      (8) T.38 message using UDPTL over DTLS     |
        |<----------------------------------------------->|
        |                        |                        |
           ]]></artwork>
            </figure>
          </t>
          <t>Message (1):

<list>
<t>
<xref target="example_1_message_1"/> shows the initial INVITE request 
		sent by Alice to Alice's proxy. The initial INVITE request contains an SDP offer.
</t>

<t>
The "m=" line in the SDP offer indicates T.38 fax using UDPTL over DTLS.
</t>

<t>
					The SDP "setup" attribute with a value of "actpass" in the SDP
					offer indicates that Alice has requested to be either the active
					or passive endpoint.
</t>

<t>
					The SDP "fingerprint" attribute in the SDP offer contains the
					certificate fingerprint computed from Alice's self-signed
					certificate.
              </t>

</list>
	  </t>

              <t>
                <figure anchor="example_1_message_1" title="Message (1)">
                  <artwork><![CDATA[
INVITE sip:bob@example.com SIP/2.0
To: <sip:bob@example.com>
From: "Alice"<sip:alice@example.com>;tag=843c7b0b
Via: SIP/2.0/TLS ua1.example.com;branch=z9hG4bK-0e53sadfkasldkfj
Contact: <sip:alice@ua1.example.com>
Call-ID: 6076913b1c39c212@REVMTEpG
CSeq: 1 INVITE
Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, UPDATE
Max-Forwards: 70
Content-Type: application/sdp
Content-Length: xxxx
Supported: from-change

v=0
o=- 1181923068 1181923196 IN IP4 ua1.example.com
s=-
c=IN IP4 ua1.example.com
t=0 0
m=image 6056 UDP/TLS/UDPTL t38
a=setup:actpass
a=fingerprint: SHA-1 \
  4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB
a=T38FaxRateManagement:transferredTCF
               ]]></artwork>
                </figure>

              </t>

              <t>Message (2):
<list>
<t>
                <xref target="example_1_message_2"/> shows the SIP INVITE request sent by Bob's proxy to Bob.
                </t>
                <t>
   					When received, Bob verifies the identity provided in the SIP INVITE request.
		</t>
</list>
	      </t>

<t>
                <figure anchor="example_1_message_2" title="Message (2)">
                  <artwork><![CDATA[
INVITE sip:bob@ua2.example.com SIP/2.0
To: <sip:bob@example.com>
From: "Alice"<sip:alice@example.com>;tag=843c7b0b
Via: SIP/2.0/TLS proxy.example.com;branch=z9hG4bK-0e53sadfkasldk
Via: SIP/2.0/TLS ua1.example.com;branch=z9hG4bK-0e53sadfkasldkfj
Record-Route: <sip:proxy.example.com;lr>
Contact: <sip:alice@ua1.example.com>
Call-ID: 6076913b1c39c212@REVMTEpG
CSeq: 1 INVITE
Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, UPDATE
Max-Forwards: 69
Content-Type: application/sdp
Content-Length: xxxx
Supported: from-change

v=0
o=- 1181923068 1181923196 IN IP4 ua1.example.com
s=-
c=IN IP4 ua1.example.com
t=0 0
m=image 6056 UDP/TLS/UDPTL t38
a=setup:actpass
a=fingerprint: SHA-1 \
  4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB
a=T38FaxRateManagement:transferredTCF
               ]]></artwork>
                </figure>
</t>

              <t>Message (3):
<list>
<t>
					Assuming that Alice's identity is valid, Bob sends a DTLS ClientHello directly to Alice.
</t>
</list>
</t>

              <t>Message (4):

<list>
<t>		
Alice and Bob exchange further messages of DTLS handshake (HelloVerifyRequest, ClientHello, 
ServerHello, Certificate, ServerKeyExchange, CertificateRequest, ServerHelloDone, Certificate, 
ClientKeyExchange, CertificateVerify, ChangeCipherSpec, and Finished).
              </t>

              <t>
When Bob receives the certificate of Alice via DTLS, Bob checks whether the certificate fingerprint 
calculated from Alice's certificate received via DTLS matches the certificate fingerprint received 
in the a=fingerprint SDP attribute of <xref target="example_1_message_2"  />. 
In this message flow, the check is successful; thus, session setup continues.					
              </t>
			  <t>
Note that, unlike in this example, it is not necessary to wait for the DTLS handshake to finish before 
the SDP answer is sent. If Bob has sent the SIP 200 (OK) response and later detects that the certificate 
fingerprints do not match, he will terminate the session.
			  </t>
</list>
	      </t>

              <t>Message (5):

<list>
<t>
                <xref target="example_1_message_5"  /> shows a SIP 200 (OK) response to the initial 
				SIP INVITE request, sent by Bob to Bob's proxy. The SIP 200 (OK) response contains an SDP answer.
              </t>

              <t>
					The "m=" line in the SDP answer indicates T.38 fax using UDPTL over DTLS.
              </t>

              <t>
					The SDP "setup" attribute with a value of "active" in the SDP
					answer indicates that Bob has requested to be the active endpoint.
              </t>

              <t>
					The SDP "fingerprint" attribute in the SDP answer contains the
					certificate fingerprint computed from Bob's self-signed
					certificate.
              </t>

</list>
	      </t>

              <t>
                <figure anchor="example_1_message_5" title="Message (5)">
                  <artwork><![CDATA[
SIP/2.0 200 OK
To: <sip:bob@example.com>;tag=6418913922105372816
From: "Alice" <sip:alice@example.com>;tag=843c7b0b
Via: SIP/2.0/TLS proxy.example.com:5061;branch=z9hG4bK-0e53sadfkasldk
Via: SIP/2.0/TLS ua1.example.com;branch=z9hG4bK-0e53sadfkasldkfj
Record-Route: <sip:proxy.example.com;lr>
Call-ID: 6076913b1c39c212@REVMTEpG
CSeq: 1 INVITE
Contact: <sip:bob@ua2.example.com>
Content-Type: application/sdp
Content-Length: xxxx
Supported: from-change

v=0
o=- 8965454521 2105372818 IN IP4 ua2.example.com
s=-
c=IN IP4 ua2.example.com
t=0 0
m=image 12000 UDP/TLS/UDPTL t38
a=setup:active
a=fingerprint: SHA-1 \
  FF:FF:FF:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB
a=T38FaxRateManagement:transferredTCF
               ]]></artwork>
                </figure>
              </t>

              <t>Message (6):

<list>
<t>
                <xref target="example_1_message_6"/> shows a SIP 200 (OK) response 
				to the initial SIP INVITE request, sent by Alice's proxy to Alice. Alice checks if the certificate 
				fingerprint calculated from the Bob's certificate received via DTLS is the same as the certificate 
				fingerprint received in the a=fingerprint SDP attribute of <xref target="example_1_message_6"/>. 
				In this message flow, the check is successful;
				thus, the session setup continues.
              </t>
</list>
	      </t>

              <t>
                <figure anchor="example_1_message_6" align="center" title="Message (6)">
                  <artwork><![CDATA[
SIP/2.0 200 OK
To: <sip:bob@example.com>;tag=6418913922105372816
From: "Alice" <sip:alice@example.com>;tag=843c7b0b
Via: SIP/2.0/TLS ua1.example.com;branch=z9hG4bK-0e53sadfkasldkfj
Record-Route: <sip:proxy.example.com;lr>
Call-ID: 6076913b1c39c212@REVMTEpG
CSeq: 1 INVITE
Contact: <sip:bob@ua2.example.com>
Content-Type: application/sdp
Content-Length: xxxx
Supported: from-change

v=0
o=- 8965454521 2105372818 IN IP4 ua2.example.com
s=-
c=IN IP4 ua2.example.com
t=0 0
m=image 12000 UDP/TLS/UDPTL t38
a=setup:active
a=fingerprint: SHA-1 \
  FF:FF:FF:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB
a=T38FaxRateManagement:transferredTCF
               ]]></artwork>
                </figure>
              </t>

              <t>Message (7):
<list>
<t>
					Alice sends the SIP ACK request to Bob.
              </t>
</list>
	      </t>

              <t>Message (8):
<list>
<t>
					At this point, Bob and Alice can exchange T.38 fax securely transported using UDPTL over DTLS.
              </t>
</list>
	      </t>


        </section>
		<section title="Message Flow of T.38 Fax Replacing Audio Media Stream in an Existing Audio-Only Session">
			<t>
Traditionally, most sessions with non-secure transport of T.38 fax,
transported using UDPTL, are established by modifying an ongoing 
audio session into a fax session. <xref target="example_2_figure"/> shows an example message flow of 
modifying an existing audio session into a session with T.38 fax 
securely transported using UDPTL over DTLS.
			</t>
			<t>
				In this example flow, Alice acts as the passive endpoint of the DTLS association, 
				and Bob acts as the active endpoint of the DTLS association.
			</t>
			<t>
            <figure anchor="example_2_figure" title="Message Flow of T.38 Fax Replacing Audio Media Stream in an Existing Audio-Only Session">
              <artwork><![CDATA[
      Alice                    Proxies                   Bob
        |                        |                        |
        |        (1) Audio-only session initiation        |
        |<-----------------------+----------------------->|
        |                        |                        |
        | (2) SIP re-INVITE      |                        |
        |------------------------------------------------>|
        |                        |   (3) DTLS ClientHello |
        |<------------------------------------------------|
        |    (4) remaining messages of DTLS handshake     |
        |<----------------------------------------------->|
        |                        |                        |
        |                        |                        |
        |                        |         (5) SIP 200 OK |
        |<------------------------------------------------|
        | (6) SIP ACK            |                        |
        |------------------------------------------------>|
        |      (7) T.38 message using UDPTL over DTLS     |
        |<----------------------------------------------->|
        |                        |                        |
           ]]></artwork>
            </figure>
			</t>
			<t>Message (1):

<list>
<t>
                Session establishment of audio-only session. The proxies decide not to record-route.
				</t>
</list>
			</t>

				<t>Message (2):

<list>
<t>
                Alice sends SIP re-INVITE request. The SDP offer included in the SIP re-INVITE 
				request is shown in <xref target="example_2_message_2"/>.
				</t>

				<t>
				The first "m=" line in the SDP offer indicates audio media stream being removed. 
				The second "m=" line in the SDP offer indicates T.38 fax using UDPTL over DTLS being added.
				</t>

				<t>
				The SDP "setup" attribute with a value of "actpass" in the SDP offer indicates 
				that Alice has requested to be either the active or passive endpoint.
				</t>
				<t>
				The SDP "fingerprint" attribute in the SDP offer contains the certificate 
				fingerprint computed from Alice's self-signed certificate.
				</t>
</list>
				</t>


				<t>
                <figure anchor="example_2_message_2" title="SDP Offer of Message (2)">
                <artwork><![CDATA[
v=0
o=- 2465353433 3524244442 IN IP4 ua1.example.com
s=-
c=IN IP4 ua1.example.com
t=0 0
m=audio 0 UDP/TLS/RTP/SAVP 0
m=image 46056 UDP/TLS/UDPTL t38
a=setup:actpass
a=fingerprint: SHA-1 \
  4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB
a=T38FaxRateManagement:transferredTCF
               ]]></artwork>
                </figure>
              </t>

              <t>Message (3):

<list>
<t>
					 Bob sends a DTLS ClientHello directly to Alice.
              </t>
</list>
	      </t>

              <t>Message (4):

<list>
<t>
					Alice and Bob exchange further messages of DTLS handshake (HelloVerifyRequest, 
					ClientHello, ServerHello, Certificate, ServerKeyExchange, CertificateRequest, 
					ServerHelloDone, Certificate, ClientKeyExchange, CertificateVerify, 
					ChangeCipherSpec, and Finished).
              </t>

              <t>
					When Bob receives the certificate of Alice via DTLS, Bob checks whether the 
					certificate fingerprint calculated from Alice's certificate received via 
					DTLS matches the certificate fingerprint received in the SDP "fingerprint" 
					attribute of <xref target="example_2_message_2"/>. 
					In this message flow, the check is
					successful; thus, session setup continues.
              </t>
</list>
	      </t>

              <t>Message (5):

<list>
<t>
                Bob sends a SIP 200 (OK) response to the SIP re-INVITE request. The SIP 200 (OK) 
				response contains an SDP answer shown in <xref target="example_2_message_5"/>.
              </t>

              <t>
					The first "m=" line in the SDP offer indicates audio media stream being removed. 
					The second "m=" line in the SDP answer indicates T.38 fax using UDPTL over DTLS being added.
              </t>

              <t>
					The SDP "setup" attribute with a value of "active" in the SDP answer indicates 
					that Bob has requested to be the active endpoint.
              </t>

              <t>
					The SDP "fingerprint" attribute in the SDP answer contains the certificate 
					fingerprint computed from Bob's self-signed certificate.
              </t>
</list>
	      </t>

              <t>
                <figure anchor="example_2_message_5" title="SDP Answer of Message (5)">
                  <artwork><![CDATA[
v=0
o=- 4423478999 5424222292 IN IP4 ua2.example.com
s=-
c=IN IP4 ua2.example.com
t=0 0
m=audio 0 UDP/TLS/RTP/SAVP 0
m=image 32000 UDP/TLS/UDPTL t38
a=setup:active
a=fingerprint: SHA-1 \
  FF:FF:FF:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB
a=T38FaxRateManagement:transferredTCF
               ]]></artwork>
                </figure>
              </t>

              <t>Message (6):

<list>
<t>
					Alice sends the SIP ACK request to Bob.

              </t>
</list>
	      </t>

              <t>Message (7):

	      <list>
<t>
					At this point, Bob and Alice can exchange T.38 fax securely 
					transported using UDPTL over DTLS.
              </t>
            </list>

          </t>
        </section>
      </section>
	</back>
</rfc>

