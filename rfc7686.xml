<?xml version="1.0" encoding="US-ASCII"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.28 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfc2629xslt/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc number="7686" category="std" submissionType="IETF" consensus="yes"
  ipr="trust200902">

  <front>
    <title abbrev=".onion">The &quot;.onion&quot; Special-Use Domain Name</title>

    <author initials="J." surname="Appelbaum" fullname="Jacob Appelbaum">
      <organization abbrev="The Tor Project, Inc.">The Tor Project, Inc. &amp; Technische Universiteit Eindhoven</organization>
      <address>
        <email>jacob@appelbaum.net</email>
      </address>
    </author>
    <author initials="A." surname="Muffett" fullname="Alec Muffett">
      <organization>Facebook</organization>
      <address>
        <email>alecm@fb.com</email>
      </address>
    </author>

    <date month="October" year="2015"/>

    <area>General</area>
    <workgroup>dnsop</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>onion</keyword> <keyword>tld</keyword> <keyword>dns</keyword>

    <abstract>


<t>This document registers the ".onion" Special-Use Domain Name.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">

<t>The Tor network <xref target="Dingledine2004"/> has the ability to host network services
using the ".onion" Special-Use Top-Level Domain Name. Such names can be used as
other domain names would be (e.g., in URLs <xref target="RFC3986"/>), but instead of using
the DNS infrastructure, .onion names functionally correspond to the identity of
a given service, thereby combining location and authentication.</t>

<t>.onion names are used to provide access to end to end encrypted, secure,
anonymized services; that is, the identity and location of the server is
obscured from the client. The location of the client is obscured from the
server. The identity of the client may or may not be disclosed through an
optional cryptographic authentication process.</t>

<t>.onion names are self-authenticating, in that they are derived from the
cryptographic keys used by the server in a client-verifiable manner during
connection establishment. As a result, the cryptographic label component of a
.onion name is not intended to be human-meaningful.</t>

<t>The Tor network is designed to not be subject to any central controlling
authorities with regards to routing and service publication, so .onion names
cannot be registered, assigned, transferred or revoked. "Ownership" of a .onion
name is derived solely from control of a public/private key pair that
corresponds to the algorithmic derivation of the name.</t>

<t>In this way, .onion names are "special" in the sense defined by Section 3
of <xref target="RFC6761"/>; they require hardware and software implementations to change their
handling in order to achieve the desired properties of the name (see
<xref target="security"/>). These differences are listed in <xref target="onion"/>.</t>

<t>Like Top-Level Domain Names, .onion names can have an arbitrary number of
subdomain components. This information is not meaningful to the Tor protocol,
but can be used in application protocols like HTTP <xref target="RFC7230"/>.</t>

<t>Note that .onion names are required to conform with DNS name syntax (as defined in
Section 3.5 of <xref target="RFC1034"/> and Section 2.1 of <xref target="RFC1123"/>), as they will still
be exposed to DNS implementations.</t>

<t>See <xref target="tor-address"/> and <xref target="tor-rendezvous"/> for the details of the creation and
use of .onion names.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="onion" title="The &quot;.onion&quot; Special-Use Domain Name">

<t>These properties have the following effects upon parties using or processing
.onion names (as per <xref target="RFC6761"/>):</t>

<t><list style="numbers">
  <t>Users: Human users are expected to recognize .onion names as having
different security properties (see <xref target="intro"/>) and also as being only available
through software that is aware of .onion names.</t>
  <t>Application Software: Applications (including proxies) that implement the
Tor protocol MUST recognize .onion names as special by either accessing them
directly or using a proxy (e.g., SOCKS <xref target="RFC1928"/>) to do so. Applications
that do not implement the Tor protocol SHOULD generate an error upon the use of
.onion and SHOULD NOT perform a DNS lookup.</t>
  <t>Name Resolution APIs and Libraries: Resolvers MUST either respond to
requests for .onion names by resolving them according to <xref target="tor-rendezvous"/> or
by responding with NXDOMAIN <xref target="RFC1035"/>.

</t>
  <t>Caching DNS Servers: Caching servers, where not explicitly adapted to
interoperate with Tor, SHOULD NOT attempt to look up records for .onion names.
They MUST generate NXDOMAIN for all such queries.</t>
  <t>Authoritative DNS Servers: Authoritative servers MUST respond to queries
for .onion with NXDOMAIN.</t>
  <t>DNS Server Operators: Operators MUST NOT configure an authoritative DNS
server to answer queries for .onion. If they do so, client software is likely
to ignore any results (see above).</t>
  <t>DNS Registries/Registrars: Registrars MUST NOT register .onion names; all
such requests MUST be denied.</t>
</list></t>

<t>Note that the restriction upon the registration of .onion names does not
prohibit IANA from inserting a record into the root zone database to reserve
the name.</t>

<t>Likewise, it does not prevent non-DNS service providers (such as trust
providers) from supporting .onion names in their applications.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document registers ".onion" in the registry of Special-Use Domain Names
<xref target="RFC6761"/>. See <xref target="onion"/> for the registration template.</t>

</section>
<section anchor="security" title="Security Considerations">

<t>The security properties of .onion names can be compromised if, for example:</t>

<t><list style="symbols">
  <t>The server "leaks" its identity in another way (e.g., in an application-level message), or</t>
  <t>The access protocol is implemented or deployed incorrectly, or</t>
  <t>The access protocol itself is found to have a flaw.</t>
</list></t>

<t>Users must take special precautions to ensure that the .onion name they are
communicating with is the intended one, as attackers may be able to find keys
that produce service names that are visually or semantically similar to the
desired service. This risk is magnified because .onion names are typically not
human-meaningful. It can be mitigated by generating human-meaningful .onion
names (at considerable computing expense) or through users using bookmarks and
other trusted stores when following links.</t>

<t>Also, users need to understand the difference between a .onion name used and
accessed directly via Tor-capable software, versus .onion subdomains of other
top-level domain names and providers (e.g., the difference between
example.onion and example.onion.tld).</t>

<t>The cryptographic label for a .onion name is constructed by applying a
function to the public key of the server, the output of which is rendered
as a string and concatenated with the string .onion. Dependent upon the
specifics of the function used, an attacker may be able to find a key that
produces a collision with the same .onion name with substantially less work
than a cryptographic attack on the full strength key. If this is possible the
attacker may be able to impersonate the service on the network.</t>

<t>
  A legacy client may inadvertently attempt to resolve a .onion name
  through the DNS. This causes a disclosure that the client is
  attempting to use Tor to reach a specific service. Malicious
  resolvers could be engineered to capture and record such leaks, which
  might have very adverse consequences for the well-being of the
  user. This issue is mitigated if the client's software is updated to not
 leak such queries or updated to support [tor-rendezvous], or if the client's
DNS software is updated to drop any request to the .onion special-use domain name.
</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>


<reference  anchor='RFC2119' target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor='RFC6761' target='http://www.rfc-editor.org/info/rfc6761'>
<front>
<title>Special-Use Domain Names</title>
<author initials='S.' surname='Cheshire' fullname='S. Cheshire'><organization /></author>
<author initials='M.' surname='Krochmal' fullname='M. Krochmal'><organization /></author>
<date year='2013' month='February' />
<abstract><t>This document describes what it means to say that a Domain Name (DNS name) is reserved for special use, when reserving such a name is appropriate, and the procedure for doing so.  It establishes an IANA registry for such domain names, and seeds it with entries for some of the already established special domain names.</t></abstract>
</front>
<seriesInfo name='RFC' value='6761'/>
<seriesInfo name='DOI' value='10.17487/RFC6761'/>
</reference>


<reference anchor="Dingledine2004"
	   target="https://svn.torproject.org/svn/projects/design-paper/tor-design.html">
  <front>
    <title>Tor: The Second-Generation Onion Router</title>
    <author initials="R." surname="Dingledine">
      <organization></organization>
    </author>
    <author initials="N." surname="Mathewson">
      <organization></organization>
    </author>
    <author initials="P." surname="Syverson">
      <organization></organization>
    </author>
    <date month="August" year="2004"/>
  </front>
</reference>

<reference anchor="tor-rendezvous" target="https://spec.torproject.org/rend-spec">
  <front>
    <title>Tor Rendezvous Specification</title>
 <author><organization>The Tor Project</organization></author>
<!--
    <author initials="N." surname="Mathewson">
      <organization></organization>
    </author>
    <author initials="R." surname="Dingledine">
      <organization></organization>
    </author> -->
    <date year="2014" month="April"/>
  </front>
</reference>

<reference anchor="tor-address" target="https://spec.torproject.org/address-spec">
  <front>
    <title>Special Hostnames in Tor</title>
    <author initials="N." surname="Mathewson">
      <organization></organization>
    </author>

<author><organization>The Tor Project</organization></author>
<!--     <author initials="R." surname="Dingledine">
      <organization></organization>
    </author> -->
    <date year="2006" />
  </front>
</reference>


    </references>

    <references title='Informative References'>


<reference  anchor='RFC1034' target='http://www.rfc-editor.org/info/rfc1034'>
<front>
<title>Domain names - concepts and facilities</title>
<author initials='P.V.' surname='Mockapetris' fullname='P.V. Mockapetris'><organization /></author>
<date year='1987' month='November' />
<abstract><t>This RFC is the revised basic definition of The Domain Name System.  It obsoletes RFC-882.  This memo describes the domain style names and their used for host address look up and electronic mail forwarding.  It discusses the clients and servers in the domain name system and the protocol used between them.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1034'/>
<seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>

<reference  anchor='RFC1035' target='http://www.rfc-editor.org/info/rfc1035'>
<front>
<title>Domain names - implementation and specification</title>
<author initials='P.V.' surname='Mockapetris' fullname='P.V. Mockapetris'><organization /></author>
<date year='1987' month='November' />
<abstract><t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System.  It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1035'/>
<seriesInfo name='DOI' value='10.17487/RFC1035'/>
</reference>


<reference  anchor='RFC1123' target='http://www.rfc-editor.org/info/rfc1123'>
<front>
<title>Requirements for Internet Hosts - Application and Support</title>
<author initials='R.' surname='Braden' fullname='R. Braden' role='editor'><organization /></author>
<date year='1989' month='October' />
<abstract><t>This RFC is an official specification for the Internet community.  It incorporates by reference, amends, corrects, and supplements the primary protocol standards documents relating to hosts.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='3'/>
<seriesInfo name='RFC' value='1123'/>
<seriesInfo name='DOI' value='10.17487/RFC1123'/>
</reference>



<reference  anchor='RFC1928' target='http://www.rfc-editor.org/info/rfc1928'>
<front>
<title>SOCKS Protocol Version 5</title>
<author initials='M.' surname='Leech' fullname='M. Leech'><organization /></author>
<author initials='M.' surname='Ganis' fullname='M. Ganis'><organization /></author>
<author initials='Y.' surname='Lee' fullname='Y. Lee'><organization /></author>
<author initials='R.' surname='Kuris' fullname='R. Kuris'><organization /></author>
<author initials='D.' surname='Koblas' fullname='D. Koblas'><organization /></author>
<author initials='L.' surname='Jones' fullname='L. Jones'><organization /></author>
<date year='1996' month='March' />
<abstract><t>This memo describes a protocol that is an evolution of the previous version of the protocol, version 4 [1]. This new protocol stems from active discussions and prototype implementations.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='1928'/>
<seriesInfo name='DOI' value='10.17487/RFC1928'/>
</reference>



<reference  anchor='RFC3986' target='http://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor='RFC7230' target='http://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements" numbered="no">

<t>Thanks to Roger Dingledine, Linus Nordberg, and Seth David Schoen for their
input and review.</t>

<t>This specification builds upon previous work by Christian Grothoff, Matthias
Wachs, Hellekin O.&nbsp;Wolf, Jacob Appelbaum, and Leif Ryge to register .onion in
conjunction with other, similar Special-Use Top-Level Domain Names.</t>

</section>


  </back>
</rfc>

