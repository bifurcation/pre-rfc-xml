<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd"[

]>

<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc category="std" ipr="trust200902" number="8169" submissionType="IETF" consensus="yes">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<front>

	<title abbrev='Residence Time Measurement'>Residence Time Measurement
	in MPLS Networks</title>

	<author initials='G.' surname="Mirsky" fullname='Greg Mirsky'>
		<organization>ZTE Corp.</organization>
		<address>
			<email>gregimirsky@gmail.com</email>
		</address> 
	</author>
	
 	<author initials='S.' surname="Ruffini" fullname='Stefano Ruffini'>
		<organization>Ericsson</organization>
		<address>
			<email>stefano.ruffini@ericsson.com</email>
		</address> 
	</author>

 	<author initials='E.' surname="Gray" fullname='Eric Gray'>
		<organization>Ericsson</organization>
		<address>
			<email>eric.gray@ericsson.com</email>
		</address> 
	</author>

	<author initials='J.' surname="Drake" fullname='John Drake'>
		<organization>Juniper Networks</organization>
		<address>
			<email>jdrake@juniper.net</email>
		</address> 
	</author>
	
 	<author initials='S.' surname="Bryant" fullname='Stewart Bryant'>
		<organization>Huawei</organization>
		<address>
			<email>stewart.bryant@gmail.com</email>
		</address> 
	</author>

 	<author initials='A.' surname="Vainshtein" fullname='Alexander Vainshtein'>
		<organization>ECI Telecom</organization>
		<address>
			<email>Alexander.Vainshtein@ecitele.com; Vainshtein.alex@gmail.com</email>
		</address> 
	</author>

    <date month="May" year="2017" />

    <area>Routing</area>

    <workgroup>MPLS Working Group</workgroup>

   <keyword>G-ACh</keyword>
   
   <keyword>Resident Time</keyword>
   
   <keyword>MPLS</keyword>
	
	<abstract>
	<t>
	This document specifies a new Generic Associated Channel (G-ACh) for
	Residence Time Measurement (RTM) and 
	describes how it can be used
	by time synchronization protocols within an MPLS domain.
	 </t>
	 <t>
	 Residence time is the variable part of the propagation delay of
	 timing and synchronization messages;
	 knowing this delay for each message allows for a more
	 accurate determination of the
	 delay to be taken into account when applying the value included in a
	 Precision Time Protocol event message.
	 </t>
	</abstract>
</front>

<middle>
  <section anchor="intro" title="Introduction">


        <t>
        Time synchronization protocols, e.g., the Network Time Protocol version 4 (NTPv4) <xref target="RFC5905"/> and 
        the Precision Time Protocol version 2 (PTPv2) <xref target="IEEE.1588"/>, define timing messages that 
        can be used to synchronize clocks across a network domain. Measurement of the cumulative
        time that one of these timing messages spends transiting the nodes
        on the path from ingress node to egress node is termed 
        "residence time" and is used to improve the accuracy of clock  synchronization. 
        Residence time is the sum of the difference between the time of receipt at an ingress interface 
        and the time of transmission from an egress interface for each node along the network path 
        from an ingress node to an egress node. This document defines a new Generic Associated Channel (G-ACh) 
        value and an associated Residence Time Measurement (RTM) message that can be
        used in a Multiprotocol Label Switching (MPLS) network to measure residence time over a Label Switched Path (LSP).

         </t>
          <t>

  This document describes RTM over an LSP signaled using RSVP&nbhy;TE <xref target="RFC3209"/>.
  Using RSVP-TE, the LSP's path can be either explicitly specified or determined during signaling.
  Although it is possible to use RTM over an LSP instantiated using the Label Distribution Protocol <xref target="RFC5036"/>,
  that is outside the scope of this document. 
  </t>
 <t>
 Comparison with alternative proposed solutions such as <xref target="TIMING-OVER-MPLS"/>
  is outside the scope of this document.
 </t>

         
     <section title="Conventions Used in This Document">
         <section title="Terminology">
    <t> <list style="hanging" hangIndent="8">
          <t hangText="MPLS:">     Multiprotocol Label Switching</t>
          <t hangText="ACH:">      Associated Channel Header</t>
          <t hangText="TTL:">      Time to Live</t>
          <t hangText="G-ACh:">    Generic Associated Channel</t>
          <t hangText="GAL:">      Generic Associated Channel Label</t>
          <t hangText="NTP:">      Network Time Protocol</t>
          <t hangText="ppm:">      parts per million</t>
          <t hangText="PTP:">      Precision Time Protocol</t>
          <t hangText="BC:">       boundary clock</t>
          <t hangText="LSP:">      Label Switched Path</t> 
          <t hangText="OAM:">      Operations, Administration, and Maintenance</t>
          <t hangText="RRO:">      Record Route Object          </t>
          <t hangText="RTM:">      Residence Time Measurement</t>
          <t hangText="IGP:">      Internal Gateway Protocol</t>
          <t hangText="BGP-LS:">   Border Gateway Protocol - Link State</t>
         </list></t>
         </section>    
         
        <section title="Requirements Language">
             <t>
	  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
                "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and 
	  "OPTIONAL" in this document are to be interpreted as described in 
	  <xref target="RFC2119"></xref>.
             </t>
          </section>
      </section>
     </section>
      
     <section anchor="residence-time" title="Residence Time Measurement">
          <t>
           "Packet Loss and Delay Measurement for MPLS Networks" <xref target="RFC6374"/> can be used to
           measure one-way or two-way end-to-end propagation delay over an LSP or a pseudowire (PW). But these measurements
           are insufficient for use in some applications, for example, time synchronization across a network
           as defined in the PTP. In PTPv2 <xref target="IEEE.1588"/>, the residence time
           is accumulated in the correctionField of the PTP event message, which is defined in <xref target="IEEE.1588"/>
           and referred to as using a one-step clock, 
           or in the associated follow-up message (or Delay_Resp message associated with
           the Delay_Req message), which is referred to as using a two-step clock (see the detailed discussion in <xref target="one-two-step-modes"/>).

           </t>

           <t>
           IEEE 1588 uses this residence time to correct for the transit times of nodes on an LSP,
           effectively making the transit nodes transparent.
           </t>

           <t>
           This document proposes a mechanism that can be used as one type of
	   on-path support 
           for a clock synchronization protocol or can be used to perform one-way
	   measurement of residence time.
           The proposed mechanism accumulates residence time from all nodes that support 
           this extension along the path of a particular LSP in the Scratch Pad 
           field of an RTM message (<xref target="residence-time-format"/>).
           This value can then be used by the egress node to update, for example, the correctionField of the PTP 
           event packet carried within the RTM message prior to performing its PTP processing. 
           </t>

<section anchor="one-two-step-modes" title="One-Step Clock and Two-Step Clock Modes">

<t>
One-step mode refers to the mode of operation where an egress interface updates the correctionField
value of an original event message. Two-step mode refers to the mode of operation where this update
is made in a subsequent follow-up message.
</t>
<t>
Processing of the follow-up message, if present, requires the downstream endpoint to wait for the
arrival of the follow-up message in order to combine correctionField values from both the
original (event) message and the subsequent (follow-up) message.  In a similar fashion,
each two-step node needs to wait for the related follow-up message, if there is one, in order
to update that follow-up message (as opposed to creating a new one).  Hence, the first node
that uses two-step mode MUST do two things:
<list style="numbers">
<t>
Mark the original event message to indicate that a follow-up message will be forthcoming. This is necessary in order to 
<list style="symbols">
<t>
Let any subsequent two-step node know that there is already a follow-up message, and 
</t>
<t>
Let the endpoint know to wait for a follow-up message.
</t>
</list>
</t>
<t>
Create a follow-up message in which to put the RTM determined as an initial correctionField value.
</t>
</list>
</t>
<t>
IEEE 1588v2 <xref target="IEEE.1588"/> defines this behavior for PTP messages.
</t>
<t>
Thus, for example, with reference to the PTP protocol, the PTPType field identifies whether the message is a
Sync message, Follow_up message, Delay_Req message, or Delay_Resp message. The 10-octet-long Port ID field
contains the identity of the source port <xref target="IEEE.1588"/>, that is, 
the specific PTP port of the boundary clock (BC) connected to the MPLS network.
The Sequence ID is the sequence ID of the PTP message carried in the Value field of the message.
</t>
<t>
PTP messages also include a bit that indicates whether or not a follow-up message will be coming. 
This bit MAY be set by a two-step mode PTP device. The value MUST NOT be unset until the original and
follow-up messages are combined by an endpoint (such as a BC).
</t>

<t>
For compatibility with PTP, RTM (when used for PTP packets) must behave in a similar fashion.
It should be noted that the handling of Sync event messages and
of Delay_Req/Delay_Resp event messages that cross a two-step RTM node is different.
The following outlines the handling of a PTP Sync event message by the two-step RTM node.
The details of handling Delay_Resp/Delay_Req PTP event messages by the two-step RTM node are discussed in <xref target="two-step-egress"/>.
As a summary, a two-step RTM-capable egress interface will need to examine the S bit in the Flags field
of the PTP sub-TLV (for RTM messages that indicate they are for PTP), and -- if it is clear (set to zero) --
it MUST set the S bit and create a follow-up PTP Type RTM message.  If the S bit is already set, then the
RTM-capable node MUST wait for the RTM message with the PTP type of follow-up and matching
originator and sequence number to make the corresponding residence time update to the Scratch Pad field.
The wait period MUST be reasonably bounded.
</t>
<t>
Thus, an RTM packet, containing residence time information relating to an earlier packet, also contains
information identifying that earlier packet.
</t>
<t>
In practice, an RTM node operating in two-step mode behaves like a two-step transparent clock. 
</t>
<t>
A one-step-capable RTM node MAY elect to operate in either one-step mode (by making an update to
the Scratch Pad field of the RTM message containing the PTP event message) or two-step mode
(by making an update to the Scratch Pad of a follow-up message when presence of a follow-up is indicated),
but it MUST NOT do both.
</t>
<t>
Two main subcases identified for an RTM node operating as a two-step clock are described in the following sub-sections.
 </t>

<section anchor="two-step-egress" title="RTM with Two-Step Upstream PTP Clock">

<t>
If any of the previous RTM-capable nodes or the previous PTP clock
(e.g., the BC connected to the first node) is a two-step clock and if the local RTM-capable node is also operating a two-tep clock, the residence time is added to the RTM
packet that has been created to include the second PTP packet (i.e., the follow-up message in the
downstream direction). This RTM packet carries
the related accumulated residence time, the appropriate values of the Sequence ID and Port ID (the
same identifiers carried in the original packet), and the two-step flag set to 1.
</t>
<t>
Note that the fact that an upstream RTM-capable node operating in two-step
mode has created a follow-up message does not require any subsequent RTM-capable 
node to also operate in two-step mode, as long as that RTM-capable node
forwards the follow-up message on the same LSP on which it forwards the
corresponding previous message.
</t>
<t>
A one-step-capable RTM node MAY elect to update the RTM follow-up message
as if it were operating in two-step mode; however, it MUST NOT update both messages.
</t>
<t>  
A PTP Sync packet is carried in the RTM packet in order to indicate to the RTM node that
RTM must be performed on that specific packet. 
</t>
 <t>
To handle the residence time of the Delay_Req message in the upstream
direction, an RTM
packet must be created to carry the residence time in the associated
downstream Delay_Resp message.
 </t>
 <t>
 The last RTM node of the MPLS network, in addition to updating the correctionField of the associated PTP
 packet, must also react properly to the two-step flag of the PTP packets.
 </t>
</section>

<section anchor="one-step-egress" title="Two-Step RTM with One-Step Upstream PTP Clock">
<t>
 When the PTP network connected to the MPLS operates in one-step clock 
 mode and an RTM node operates in two-step mode, the
 follow-up RTM packet must be created by the RTM node itself. The RTM packet
 carrying the PTP event packet needs now to indicate that a follow-up message will be coming.
 </t>
 <t>
 The egress RTM-capable node of the LSP will remove RTM encapsulation
 and, in case of 
 two-step clock mode being indicated, will generate PTP messages to include
 the follow-up correction as appropriate 
 (according to <xref target="IEEE.1588"/>). 
 In this case, the common header of the PTP packet carrying the synchronization message 
 would have to be modified by setting the twoStepFlag field indicating that there is now a 
 follow-up message associated to the current message.
 </t>
</section> 
 
</section>
           
          </section>
          
          <section anchor="associated-channel" title="G-ACh for Residence Time Measurement">
          <t>
          <xref target="RFC5586"/> and <xref target="RFC6423"/> 
          define the G-ACh to extend the applicability of the Pseudowire Associated
          Channel Header (ACH) <xref target="RFC5085"/> to LSPs. G-ACh provides a mechanism to transport OAM 
          and other control messages over an LSP. Processing of these messages by selected transit nodes
          is controlled by the use of the Time-to-Live (TTL) value in the MPLS header of these messages.
          </t>
          <t>
          The message format for RTM is presented in <xref target="residence-time-format"/>.
         <figure align="left" anchor="residence-time-format"
                title="RTM G-ACh Message Format for Residence Time Measurement">
          <artwork><![CDATA[    
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |0 0 0 1|Version|   Reserved    |           RTM G-ACh           |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                                                               |
 |                        Scratch Pad                            |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |            Type               |             Length            |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                       Value (optional)                        |
 ~                                                               ~
 |                                                               |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork>
        </figure>

</t>

<t>
<list style="symbols">
<t>The first four octets are defined as a G-ACh header in <xref target="RFC5586"/>.</t>
<t>The Version field is set to 0, as defined in <xref target="RFC4385"/>.  </t>
<t>The Reserved field MUST be 
set to 0 on transmit and ignored on receipt. </t>
<t>The RTM G-ACh field (value 0x000F; see <xref target="rtm-gach"/>) identifies the packet
as such.  </t>

<t>The Scratch Pad field is 8 octets in length. It is used to accumulate the residence 
time spent in each RTM-capable node transited by the packet on its path from ingress node to egress node.
The first RTM-capable node MUST initialize the Scratch
Pad field with its RTM. 
Its format is a 64-bit signed integer, and it indicates the value of the residence time measured in nanoseconds and multiplied by 2^16. Note that depending on whether the timing procedure is 
a one-step or two-step operation (<xref target="one-two-step-modes"/>),
the residence time is either for the timing packet carried in the Value field of this RTM 
message or for an associated timing packet carried in the Value field of another RTM message.
</t>
<t>
The Type field identifies the type and encapsulation of a timing packet carried in the Value field,
e.g., NTP <xref target="RFC5905"/> or PTP <xref target="IEEE.1588"/>.
Per this document, IANA has created a sub-registry called the "MPLS RTM TLV
 Registry" in the "Generic
 Associated Channel (G-ACh) Parameters" registry 
 (see <xref target="rtm-tlv-registry"/>).
 </t>
<t>
The Length field contains the length, in octets, of any Value field defined for the Type given in the Type field.
</t>

<t>
The TLV MUST be included in the RTM message, even if the length of the Value field is zero.
</t>
</list>
</t>

<section anchor="ptp-sub-tlv" title="PTP Packet Sub-TLV">
<t>
<xref target="ptp-sub-tlv-fig"/> presents the format of a PTP sub-TLV that MUST be
included in the Value field of an RTM message preceding the carried timing 
packet when the timing packet is PTP.
         <figure align="left" anchor="ptp-sub-tlv-fig" title="PTP Sub-TLV Format">
          <artwork><![CDATA[
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |             Type              |             Length            |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                         Flags                         |PTPType|
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                            Port ID                            |
 |                                                               |
 |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                               |           Sequence ID         |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
        </figure>
        
</t>
          <t>
          where the Flags field has the following format:
         <figure align="left" anchor="flags-filed-format"
                title="Flags Field Format of PTP Packet Sub-TLV">
          <artwork><![CDATA[    
  0                   1                   2
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |S|                      Reserved                       |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
        </figure>
</t>

<t>
<list style="symbols">
<t>The Type field identifies the PTP packet sub-TLV and is set to 1 according to <xref target="rtm-su-tlv-registry"/>.</t>
<t>The Length field of the PTP sub-TLV contains the number of octets of the Value part of the TLV and MUST be 20.</t>
<t>
The Flags field currently defines one bit, the S bit, that defines whether the current message
has been processed by a two-step node, where the flag is cleared if the message has been handled
exclusively by one-step nodes and there is no follow-up message and is set if there has been at least
one two-step node and a follow-up message is forthcoming.
</t>
<t>
The PTPType field indicates the type of PTP packet to which this PTP sub-TLV applies. PTPType is the messageType
field of a PTPv2 packet with possible values defined in Table 19 of <xref target="IEEE.1588"/>. 
</t>
<t>The 10-octet-long Port ID field contains the identity of the source port. </t>
<t>The Sequence ID is the sequence ID of the PTP message to which this PTP sub-TLV applies. </t>
</list>

A tuple of PTPType, Port ID, and Sequence ID uniquely identifies the PTP timing message included in an RTM message and is used in two-step RTM mode; see <xref target="two-step-egress"/>.
</t>

</section>
 
<section title="PTP Associated Value Field">
<t>
The Value field (see Figure 1) -- in addition to the PTP sub-TLV -- MAY carry a packet of the PTP 
Time synchronization protocol (as was identified by the Type field).  It is important to note 
that the timing message packet may be authenticated or encrypted and carried over this LSP
unchanged (and inaccessible to intermediate RTM capable LSRs) while the residence time is 
accumulated in the Scratch Pad field.</t>
<t>
The LSP ingress RTM-capable LSR populates the identifying tuple information of the PTP sub-TLV 
(see section 3.1) prior to including the (possibly authenticated/encrypted) PTP message packet
after the PTP sub-TLV in the Value field of the RTM message for an RTM message of the PTP Type 
(Type 1; see <xref target="rtm-su-tlv-registry"/>).

</t>
</section>
</section>

 
<section anchor="cp-operation-theory" title="Control-Plane Theory of Operation">
 <t>
The operation of RTM depends upon TTL expiry to deliver an RTM packet from one RTM-capable interface to the next
along the path from ingress node to egress node. This means that a node with RTM-capable interfaces MUST be able to
compute a TTL, which will cause the expiry of an RTM packet at the next node with RTM-capable interfaces. 
 </t>

<section anchor="rtm-capability" title="RTM Capability">
<t>
Note that the RTM capability of a node is with respect to the pair of interfaces that will be used to
forward an RTM packet. In general, the ingress interface of this pair must be able to capture
the arrival time of the packet and encode it in some way such that this information will be
available to the egress interface of a node.
</t>
<t>
The supported mode (one-step or two-step) of any pair of interfaces is determined
by the capability of the egress interface. For both modes, the egress interface implementation
MUST be able to determine the precise departure time of the same packet and determine from
this, and the arrival time information from the corresponding ingress interface, the difference
representing the residence time for the packet.
</t>
<t>
An interface with the ability to do this and update the associated Scratch Pad in real time
(i.e., while the packet is being forwarded) is said to be one-step capable.
</t>
<t>
Hence, while both ingress and egress interfaces are required to support RTM for the pair to
be RTM capable, it is the egress interface that determines whether or not the node is one-step
or two-step capable with respect to the interface pair.
</t>
<t>
The RTM capability used in the sub-TLV shown in Figures <xref target="ospf-rtm-capab-sub-tlv" format="counter"/>
and <xref target="isis-rtm-capab-sub-tlv" format="counter"/> is thus
a non-routing-related capability associated with the interface being advertised based on its egress 
capability. The ability of any pair of interfaces on a node that includes
this egress interface to support any mode of RTM depends on the ability of the ingress interface 
of a node to record packet arrival time and convey it to the egress interface on the node.
</t>
<t>

When a node uses an IGP to support the RTM capability advertisement, the IGP sub-TLV MUST reflect the
RTM capability (one-step or two-step) associated with the advertised interface. Changes of RTM capability
are unlikely to be frequent and would result, for example, from the operator&#39;s decision to include or 
exclude a particular port from RTM processing or switch between RTM modes.
</t>
</section>

<section anchor="rtm-capability-sub-tlv" title="RTM Capability Sub-TLV">

<t>
<xref target="RFC4202"/> explains that the Interface Switching Capability Descriptor
describes the switching capability of an interface.  For bidirectional links, the switching
capabilities of an interface are defined to be the same in either direction, that is, for data
entering the node through that interface and for data leaving the node through that interface.
That principle SHOULD be applied when a node advertises RTM capability.
</t>
<t>
A node that supports RTM MUST be able to act in two-step mode and MAY also support one-step RTM mode.
A detailed discussion of one-step and two-step RTM modes is contained in <xref target="one-two-step-modes"/>.
</t>
</section>

<section anchor="rtm-routing-protocol" title="RTM Capability Advertisement in Routing Protocols">

<section anchor="rtm-capability-ospfv2" title="RTM Capability Advertisement in OSPFv2">
<t>
The format for the RTM Capability sub-TLV in OSPF is presented in <xref target="ospf-rtm-capab-sub-tlv"/>.

         <figure align="left" anchor="ospf-rtm-capab-sub-tlv"
                title="RTM Capability Sub-TLV in OSPFv2">
          <artwork><![CDATA[    
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |              Type             |             Length            |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | RTM |  Value       ...                          
 +-+-+-+-+-+-+-+-+-+- ...
]]></artwork>
        </figure>
</t>
<t>
<list  style="symbols">
<t>Type value (5) has been assigned by IANA in the "OSPFv2 Extended Link TLV
Sub-TLVs" registry (see <xref
target="iana-ospfv2-rtm-capability-sub-tlv"/>).</t>
<t>Length value equals the number of octets of the Value field.</t>
<t>
Value contains a variable number of bitmap fields so that the overall number of bits in the fields
equals Length * 8.
</t>
<t>
   Bits are defined/sent starting with Bit 0.  Additional
    bitmap field definitions that may be defined in the future SHOULD be assigned
   in ascending bit order so as to minimize the number of bits that will
   need to be transmitted.
</t>
<t>
   Undefined bits MUST be transmitted as 0 and MUST be ignored on
   receipt.
</t>
<t>
   Bits that are NOT transmitted MUST be treated as if they are set to 0
   on receipt.
   </t>
   <t>RTM (capability) is a 3-bit-long bitmap field with values defined as follows:
<list style="symbols">
<t>0b001 - one-step RTM supported</t>
<t>0b010 - two-step RTM supported</t>
<t>0b100 - reserved</t>
</list>
</t>

</list>
</t>

<t>
The capability to support RTM on a particular link (interface) is 
advertised in the OSPFv2 Extended Link Opaque LSA as
described in Section 3 of <xref target="RFC7684"/> via the RTM Capability sub-TLV.
</t>

</section> 

<section anchor="rtm-capability-ospfv3" title="RTM Capability Advertisement in OSPFv3">
<t>
  The capability to support RTM on a particular link (interface) can be advertised in OSPFv3 using 
  LSA extensions as described in <xref target="OSPFV3-EXTENDED-LSA"/>. 
  The sub-TLV SHOULD use the same format as in <xref target="rtm-capability-ospfv2"/>.
  The type allocation and full details of exact use of OSPFv3 LSA extensions
  is for further study.
</t>
</section> 

<section anchor="isis-rtm-ext" title="RTM Capability Advertisement in IS-IS">
<t>
The capability to support RTM on a particular link (interface) is
   advertised in a new sub-TLV that may be included in TLVs advertising
   Intermediate System (IS) Reachability on a specific link (TLVs 22, 23, 222, and 223).
</t>
<t>
The format for the RTM Capability sub-TLV is presented in <xref target="isis-rtm-capab-sub-tlv"/>.

         <figure align="left" anchor="isis-rtm-capab-sub-tlv"
                title="RTM Capability Sub-TLV">
          <artwork><![CDATA[    
  0                   1                   2                   
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 ...
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...
 |      Type     |     Length    | RTM |   Value      ...        
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...
]]></artwork>
        </figure>
</t>
<t>
<list  style="symbols">
<t>
Type value (40) has been assigned by IANA in the
"Sub-TLVs for TLVs 22, 23, 141, 222, and 223"
registry for IS-IS (see <xref target="iana-isis-rtm-capability-sub-tlv"/>).
</t>
<t>
Definitions, rules of handling, and values for the Length and Value fields are as defined
in <xref target="rtm-capability-ospfv2"/>.
</t>
<t>RTM (capability) is a 3-bit-long bitmap field with values defined
in <xref target="rtm-capability-ospfv2"/>.</t>

</list>
</t>
</section> 

<section anchor="rtm-capability-bgpls" title="RTM Capability Advertisement in BGP-LS">
<t>
The format for the RTM Capability TLV is presented in <xref target="ospf-rtm-capab-sub-tlv"/>.
</t>
<t>
Type value (1105) has been assigned by IANA in the "BGP-LS Node Descriptor, Link
Descriptor, Prefix Descriptor, 
and Attribute TLVs" sub-registry (see <xref
target="iana-bgpls-rtm-capability-sub-tlv"/>).
</t>
<t>
Definitions, rules of handling, and values for fields Length, Value, and RTM are as defined
in <xref target="rtm-capability-ospfv2"/>.
</t>
<t>
The RTM capability will be advertised in BGP-LS as a Link Attribute TLV associated with 
the Link NLRI as described in Section 3.3.2 of <xref target="RFC7752"/>.
</t>
</section> 

</section>

 <section anchor="rsvp-operation-RTM" title="RSVP-TE Control-Plane Operation to Support RTM">
 <t>
 Throughout this document, we refer to a node as an
 RTM-capable node when at least one of its interfaces is RTM capable. <xref target="rtm-capability-figure"/> 
 provides an example of roles a node may have with respect to RTM capability:
 </t>

         <figure align="left" anchor="rtm-capability-figure"
                title="RTM-Capable Roles">
          <artwork><![CDATA[    
 -----     -----     -----     -----     -----     -----     -----
 | A |-----| B |-----| C |-----| D |-----| E |-----| F |-----| G |
 -----     -----     -----     -----     -----     -----     -----                       
]]></artwork>
        </figure>
<t>
<list style="symbols">

<t>A is a boundary clock with its egress port in Master state. Node A transmits
IP-encapsulated timing packets whose destination IP address is G.</t>
<t>B is the ingress Label Edge Router (LER) for the MPLS LSP and is the first RTM-capable node. 
It creates RTM packets, and in each it places 
a timing packet, possibly encrypted, in the Value field and initializes the 
Scratch Pad field with its RTM.</t>
<t>C is a transit node that is not RTM capable. It forwards RTM packets without modification.</t>
<t>D is an RTM-capable transit node. It updates the Scratch Pad field of the RTM packet without updating
the timing packet.</t>
<t>E is a transit node that is not RTM capable. It forwards RTM packets without modification.</t>
<t>F is the egress LER and the last RTM-capable node. It removes the RTM ACH encapsulation and
processes the timing packet carried in the Value field 
using the value in the Scratch Pad field. In particular, the value in the Scratch Pad field of the 
RTM ACH is used in updating the Correction field of the PTP message(s). The LER should also include 
its own residence time before creating the outgoing PTP packets. 
The details of this process depend on whether or not the node F is itself operating as
a one-step or two-step clock.</t>
<t>G is a boundary clock with its ingress port in Slave state. Node G receives PTP messages.
</t>
</list>
</t>
 <t>
 An ingress node that is configured to perform RTM along a path through an MPLS network 
 to an egress node MUST verify that
 the selected egress node has an interface that supports RTM via the egress node&apos;s 
 advertisement of the RTM
 Capability sub-TLV, as covered in <xref target="rtm-routing-protocol"/>. In the Path
message that the ingress node uses to instantiate the LSP to that egress node,
it places an LSP_ATTRIBUTES object <xref target="RFC5420"/> with an RTM_SET 
Attribute Flag set, as described in <xref target="iana-rtm-set-flag"/>,
which indicates to the egress node that RTM is requested for this LSP.
The RTM_SET Attribute Flag SHOULD NOT be set in
the LSP_REQUIRED_ATTRIBUTES object <xref target="RFC5420"/>, 
unless it is known that all nodes recognize the RTM attribute (but need not necessarily implement it),
because a node that does not recognize the RTM_SET Attribute Flag would reject the Path message.
</t>
<t>
If an egress node receives a Path message with the RTM_SET Attribute Flag in an LSP_ATTRIBUTES object,
the egress node MUST include an initialized
RRO <xref target="RFC3209"/> and LSP_ATTRIBUTES object where the RTM_SET Attribute Flag is set and 
the RTM_SET TLV (<xref target="rtm-set-tlv"/>) is initialized. When the 
Resv message is received by the ingress node, the RTM_SET TLV
will contain an ordered list, from egress
node to ingress node, of the RTM-capable nodes along the LSP&apos;s path. 
 </t>
 <t>
After the ingress node receives the Resv, it MAY begin sending RTM packets on the
LSP&apos;s path.  Each RTM packet has its Scratch Pad field initialized and its TTL set to expire on the
closest downstream RTM-capable node.    
</t>
<t> 
It should be noted that RTM can also be used for LSPs instantiated using <xref target="RFC3209"/>
in an environment in which all interfaces in an IGP support RTM.  In this case, the RTM_SET TLV 
and LSP_ATTRIBUTES object MAY be omitted.
</t>
  
  <section anchor="rtm-set-tlv" title="RTM_SET TLV">
  <t>
  RTM-capable interfaces can be recorded via the RTM_SET TLV.
 The RTM_SET sub-object format is a generic TLV format,
  presented in <xref target="RTM_SET-figure"/>.
  
         <figure align="left" anchor="RTM_SET-figure"
                title="RTM_SET TLV Format">
          <artwork><![CDATA[    
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |     Type      |     Length    |I|         Reserved            |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 ~                             Value                             ~
 |                                                               |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
        </figure>
</t>

<t>
Type value (5) has been assigned by IANA in the RSVP-TE "Attributes TLV
Space" sub-registry (see <xref target="iana-rtm-set-type"/>).
</t>

<t>
The Length contains the total length of the sub-object in bytes, including the Type and Length fields.  
</t>
<t>
The I bit indicates whether the downstream RTM-capable node along the LSP is present in the RRO.
</t>
<t>
The Reserved field must be zeroed on initiation and ignored on receipt.
</t>
<t>
         The content of an RTM_SET TLV is a series of variable-length sub&nbhy;TLVs.  
         Only a single RTM_SET can be present in a given LSP_ATTRIBUTES object.
         The sub-TLVs are defined in <xref target="RTM_SET-sub-TLVs"/>.
  </t>
<t>
 The following processing procedures apply to every RTM-capable node along the LSP. In this paragraph,
 an RTM-capable node is referred to as a node for sake of brevity.  Each
 node MUST examine the Resv message for whether the RTM_SET Attribute Flag in the LSP_ATTRIBUTES object is set.
 If the RTM_SET flag is set, the node MUST inspect the LSP_ATTRIBUTES object for presence of an RTM_SET TLV.
 If more than one is found, then the LSP setup MUST fail with generation
 of the ResvErr message with Error Code "Duplicate TLV" (<xref
 target="iana-error-code"/>) and Error Value
 that contains the Type value in its 8 least significant bits. If no RTM_SET TLV is found, 
 then the LSP setup MUST fail with generation
 of the ResvErr message with Error Code "RTM_SET TLV Absent" (<xref target="iana-error-code"/>).
 If one RTM_SET TLV has been found, the node will use the ID of the 
 first node in the RTM_SET in conjunction with the RRO
 to compute the hop count to its downstream node with a reachable RTM-capable interface. 
 If the node cannot find a matching ID in the RRO, then it MUST try to use 
 the ID of the next node in the RTM_SET until it
 finds the match or reaches the end of the RTM_SET TLV. If a match has been found, 
 the calculated value is used by the node as the TTL
 value in the outgoing label to reach the next RTM-capable node on the LSP.  
 Otherwise, the TTL value MUST be set to 255.   
 The node MUST add an RTM_SET sub-TLV with the same address it used in the RRO sub&nbhy;object
 at the beginning of the RTM_SET TLV in the associated outgoing Resv message before forwarding it upstream.
 
 If the calculated TTL value has been set to 255, as described above, then the I 
 flag in the node's RTM_SET TLV MUST be set to 1
 before the Resv message is forwarded upstream. Otherwise, 
 the I flag MUST be cleared (0).
</t>
<t>
   The ingress node MAY inspect the I bit received in each RTM_SET TLV
   contained in the LSP_ATTRIBUTES object of a received Resv
   message. The presence of the RTM_SET TLV with the I bit set to 1 indicates
   that some RTM nodes along the LSP could not be included in the
   calculation of the residence time.  An ingress node MAY choose to resignal
   the LSP to include all RTM nodes or simply notify the user via a management
   interface.
</t>
   <t>
There are scenarios when some information is removed from an RRO due to 
policy processing (e.g., as may happen between providers)
or the RRO is limited due to size constraints.
Such changes affect the core assumption of this method and the processing of RTM packets.
RTM SHOULD NOT be used if it is not guaranteed that the RRO contains complete information.
</t>
    <section anchor="RTM_SET-sub-TLVs" title="RTM_SET Sub-TLVs">
    <t>
    The RTM Set sub-object contains an ordered list, from egress node to
     ingress node, of the RTM-capable nodes along the LSP's path.
    </t>
    <t>
   The contents of an RTM_SET sub-object are a series of variable-length
   sub-TLVs.  Each sub-TLV has its own Length
   field.  The Length contains the total length of the sub-TLV in
   bytes, including the Type and Length fields.  The Length MUST always
   be a multiple of 4, and at least 8 (smallest IPv4 sub-object).
    </t>
    <t>
   Sub-TLVs are organized as a last-in-first-out stack.  The first-out
   sub-TLV relative to the beginning of RTM_SET TLV is considered the top.
   The last-out sub-TLV is considered the bottom.  When a new sub&nbhy;TLV is
   added, it is always added to the top. 
   </t>
   <t>
   The RTM_SET TLV is intended to include the subset of the RRO sub-TLVs that 
   represent those egress interfaces on the LSP that are RTM capable.  
   After a node chooses an egress interface to use in the RRO sub-TLV, 
   that same egress interface, if RTM capable,  SHOULD be placed into 
   the RTM_SET TLV using one of the following: IPv4 sub-TLV, IPv6 sub-TLV, or Unnumbered 
   Interface sub-TLV.  The address family chosen SHOULD match that of the RESV 
   message and that used in the RRO; the unnumbered interface sub-TLV is used 
   when the egress interface has no assigned IP address.  A node MUST NOT 
   place more sub-TLVs in the RTM_SET TLV than the number of RTM-capable 
   egress interfaces the LSP traverses that are under that node's control.
   Only a single RTM_SET sub-TLV with the given
   Value field MUST be present in the RTM_SET TLV. If more than one sub-TLV with the same value (e.g., a duplicated address) is found, 
   the LSP setup MUST fail with the generation of a ResvErr message with the Error Code
   "Duplicate sub&nbhy;TLV" (<xref target="iana-error-code"/>) and the Error Value containing
   a 16-bit value composed of (Type of TLV, Type of sub-TLV).
    </t>
    <t>
    Three kinds of sub-TLVs for RTM_SET are currently defined.
    </t>
    
    <section anchor="ipv4-sub-object" title="IPv4 Sub-TLV">
    <t>
         <figure align="left" anchor="ipv4-sub-figure"
                title="IPv4 Sub-TLV Format">


          <artwork><![CDATA[    
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |    Type     |     Length    |            Reserved             |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
 |                       IPv4 address                            |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
]]></artwork>
        </figure>
</t>
<t>
      Type
</t>
<t><list><t>  
         0x01  IPv4 address.
</t></list></t>
<t>
      Length
</t>
<t><list><t>
         The Length contains the total length of the sub-TLV in bytes,
         including the Type and Length fields.  The Length is always 8.
</t></list></t>
<t>
      IPv4 address
</t>
<t><list><t>    
         A 32-bit unicast host address. 
</t></list></t>
<t>
     Reserved
</t>
<t><list><t>
Zeroed on initiation and ignored on receipt.    
</t></list></t>
<t>
</t>            
    </section>
    
    <section anchor="ipv6-sub-TLV" title="IPv6 Sub-TLV">
    <t>
         <figure align="left" anchor="ipv6-sub-figure"
                title="IPv6 Sub-TLV Format">
          <artwork><![CDATA[    
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |    Type     |     Length    |            Reserved             |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
 |                                                               |
 |                         IPv6 address                          |
 |                                                               |
 |                                                               |   
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
]]></artwork>
        </figure>
 </t>    
<t>
      Type
</t>
<t><list><t>  
         0x02  IPv6 address.
</t></list></t>
<t>
      Length
</t>
<t><list><t>
         The Length contains the total length of the sub-TLV in bytes,
         including the Type and Length fields.  The Length is always 20.
</t></list></t>
<t>
      IPv6 address
</t>
<t><list><t>    
         A 128-bit unicast host address.
</t></list></t>
<t>
     Reserved
</t>
<t><list><t>
Zeroed on initiation and ignored on receipt.     
</t></list></t>
    </section>

    <section anchor="unnum-sub-TLV" title="Unnumbered Interface Sub-TLV">
    <t>
         <figure align="left" anchor="unnum-sub-figure"
                title="IPv4 Sub-TLV Format">
          <artwork><![CDATA[    
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |    Type     |     Length    |            Reserved             |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
 |                          Node ID                              |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
 |                       Interface ID                            |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
]]></artwork>
        </figure>
</t>
<t>
      Type
</t>
<t><list><t>  
         0x03  Unnumbered interface.
</t></list></t>
<t>
      Length
</t>
<t><list><t>
         The Length contains the total length of the sub-TLV in bytes,
         including the Type and Length fields.  The Length is always 12.
</t></list></t>
<t>
      Node ID
</t>
<t><list><t>    
         The Node ID interpreted as the Router ID as discussed in Section 2 of <xref target="RFC3477"/>.
</t></list></t>
<t>
      Interface ID
</t>
<t><list><t>    
         The identifier assigned to the link by the node specified by the Node ID.
</t></list></t>
<t>
     Reserved
</t>
<t><list><t>
Zeroed on initiation and ignored on receipt.     
</t></list></t>

  </section>
  
</section>

    </section>

  </section>
  
  </section>
    
  <section anchor="dp-operation-theory" title="Data-Plane Theory of Operation">
  <t>
  After instantiating an LSP for a path using RSVP-TE <xref target="RFC3209"/> 
  as described in <xref target="rsvp-operation-RTM"/>,
 the ingress node MAY begin sending RTM packets to the first downstream
  RTM-capable node on that path. Each RTM packet has its Scratch Pad field initialized
  and its TTL set to expire on the next downstream RTM-capable node.
  Each RTM-capable node on the explicit path receives an RTM packet and
  records the time at which it receives that packet at its ingress interface as well as the time
 at which it transmits that packet from its egress interface. 
 These actions should be done as close to the physical
 layer as possible at the same point of packet processing, striving to avoid introducing
 the appearance of jitter in propagation delay whereas it should be accounted as residence time.
 The RTM-capable node determines the difference between those two
  times; for one-step operation, this difference is determined just prior to or while sending the packet,
  and the RTM-capable egress interface adds it to the value in
 the Scratch Pad field of the message in progress. Note, for the purpose
 of calculating a residence time, a common free running clock
  synchronizing all the involved interfaces may be sufficient,
  as, for example, 4.6 ppm accuracy leads to a 4.6 nanosecond error for residence time
  on the order of 1 millisecond. This may be acceptable for applications where the 
  target accuracy is in the order of hundreds of nanoseconds. As an example, several applications 
  being considered in the area of wireless applications are satisfied with an accuracy 
  of 1.5 microseconds <xref target="ITU-T.G.8271"/>.
  </t>
  <t>
  For two-step operation, the difference between packet arrival time (at an ingress interface)
  and subsequent departure time (from an egress interface) is determined at some later
  time prior to sending a subsequent follow-up message, so that this value can be used
  to update the correctionField in the follow-up message.
  </t>
  <t>
  See <xref target="one-two-step-modes"/> for further details on the difference between one-step and two-step operation.
  </t>
<t>
  The last RTM-capable node on the LSP MAY then use the value in the Scratch Pad field to perform time correction,
  if there is no follow&nbhy;up message. 
For example, the egress node
 may be a PTP boundary clock synchronized to a Master Clock and
  will use the value in the Scratch Pad field to update PTP's correctionField. 
  </t>

  </section>   
 
 <section anchor="PTP-scenarios" title="Applicable PTP Scenarios">
 <t>
 This approach can be directly integrated in a PTP network based
 on the IEEE 1588 delay request-response mechanism. The RTM-capable nodes act
 as end-to-end transparent clocks, and boundary clocks, at the edges
 of the
 MPLS network, typically use the value in the Scratch Pad field to update the
 correctionField of
 the corresponding PTP event packet prior to performing the usual PTP processing.
 </t>
 </section>

 
 <section anchor="iana-consider" title="IANA Considerations">
 
     <section anchor="rtm-gach" title="New RTM G-ACh">
     <t>
     IANA has assigned a new G-ACh as follows:
     </t>

  <texttable anchor="residence-time-table" title="New Residence Time Measurement">
    <ttcol align='left'>Value</ttcol>
    <ttcol align='center'>Description</ttcol>
    <ttcol align='left'>Reference</ttcol>
     <c>0x000F</c>
    <c>Residence&nbsp;Time&nbsp;Measurement</c>
    <c>This&nbsp;document</c>
   </texttable>
     </section>
 
     <section anchor="rtm-tlv-registry" title="New MPLS RTM TLV Registry">
     <t>
     IANA has created a sub-registry in the "Generic Associated Channel (G-ACh)
     Parameters" registry
     called the "MPLS RTM TLV Registry". All codepoints in the range 0 through
     127 in this registry shall be allocated
     according to the "IETF Review" procedure as specified in <xref
     target="RFC5226"/>. Codepoints in the range
     128 through 191 in this registry shall be allocated according to the
     "First Come First Served" procedure as
     specified in <xref target="RFC5226"/>.
     This document defines the following new RTM TLV types:
     </t>

  <texttable anchor="rtm-tlv-table" title="RTM TLV Types">
    <ttcol align='left'>Value</ttcol>
    <ttcol align='center'>Description</ttcol>
    <ttcol align='left'>Reference</ttcol>
    <c>0</c>
    <c>Reserved</c>
    <c>This&nbsp;document</c>
    <c>1</c>
    <c>No payload</c>
    <c>This&nbsp;document</c>
    <c>2</c>
    <c>PTPv2, Ethernet encapsulation</c>
    <c>This&nbsp;document</c>
    <c>3</c>
    <c>PTPv2, IPv4 encapsulation</c>
    <c>This&nbsp;document</c>
    <c>4</c>
    <c>PTPv2, IPv6 encapsulation</c>
    <c>This&nbsp;document</c>
     <c>5</c>
    <c>NTP</c>
    <c>This&nbsp;document</c>
     <c>6-191</c>
    <c>Unassigned</c>
    <c></c>
     <c>192-254</c>
    <c>Reserved for Private Use</c>
    <c>This&nbsp;document</c>
    <c>255</c>
    <c>Reserved</c>
    <c>This&nbsp;document</c>

    </texttable>

     </section>


     <section anchor="rtm-su-tlv-registry" title="New MPLS RTM Sub-TLV Registry">

     <t>

     IANA has created a sub-registry in the "MPLS RTM TLV Registry" (see
     <xref target="rtm-tlv-registry"/>)
     called the "MPLS RTM Sub-TLV Registry". All codepoints in the range 0
     through 127 in this registry shall be allocated
     according to the "IETF Review" procedure as specified in <xref target="RFC5226"/>. Codepoints in the range
     128 through 191 in this registry shall be allocated according to the "First Come First Served" procedure as
     specified in <xref target="RFC5226"/>.
    This document defines the following new RTM sub-TLV types:

     </t>

  <texttable anchor="rtm-sub-tlv-table" title="RTM Sub-TLV Type">
    <ttcol align='left'>Value</ttcol>
    <ttcol align='center'>Description</ttcol>
    <ttcol align='left'>Reference</ttcol>
    <c>0</c>
    <c>Reserved</c>
    <c>This&nbsp;document</c>
    <c>1</c>
    <c>PTP</c>
    <c>This&nbsp;document</c>
     <c>2-191</c>
    <c>Unassigned</c>
    <c></c>
     <c>192-254</c>
    <c>Reserved for Private Use</c>
    <c>This&nbsp;document</c>
    <c>255</c>
    <c>Reserved</c>
    <c>This&nbsp;document</c>

    </texttable>
     
     </section>
     
     <section anchor="iana-ospfv2-rtm-capability-sub-tlv" title="RTM Capability Sub-TLV in OSPFv2">
     <t>
     IANA has assigned a new type for the RTM Capability sub-TLV in the
     "OSPFv2 Extended Link TLV
     Sub-TLVs" registry as follows:
     </t>

  <texttable anchor="iana-ospfv2-rtm-cap-sub-tlv" title="RTM Capability Sub-TLV">
    <ttcol align='left'>Value</ttcol>
    <ttcol align='center'>Description</ttcol>
    <ttcol align='left'>Reference</ttcol>
     <c>5</c>
    <c>RTM Capability</c>
    <c>This&nbsp;document</c>
   </texttable>
     </section>

     <section anchor="iana-isis-rtm-capability-sub-tlv" title="RTM Capability Sub-TLV in IS-IS">
     <t>
     IANA has assigned a new type for the RTM Capability sub-TLV
     from the "Sub-TLVs for TLVs 22, 23, 141, 222, and 223" registry as follows:
     </t>

  <texttable anchor="iana-isis-rtm-sub-tlv-type" title="IS-IS RTM Capability Sub-TLV Registry Description">
    <ttcol align='left'>Type</ttcol>
    <ttcol align='center'>Description</ttcol>
    <ttcol align='left'>22</ttcol>
    <ttcol align='left'>23</ttcol>
    <ttcol align='left'>141</ttcol>
    <ttcol align='left'>222</ttcol>
    <ttcol align='left'>223</ttcol>
    <ttcol align='left'>Reference</ttcol>
    <c>40</c>
    <c>RTM&nbsp;Capability</c>
    <c>y</c>
    <c>y</c>
    <c>n</c>
    <c>y</c>
    <c>y</c>
    <c>This&nbsp;document</c>
   </texttable>
     </section>
     
     <section anchor="iana-bgpls-rtm-capability-sub-tlv" title="RTM Capability TLV in BGP-LS">
     <t>
     IANA has assigned a new codepoint for the RTM Capability TLV from the
     "BGP-LS Node Descriptor, 
     Link Descriptor, Prefix Descriptor, and Attribute TLVs" sub-registry in
     the "Border Gateway 
     Protocol - Link State (BGP-LS) Parameters" registry as follows:
     </t>

  <texttable anchor="iana-bgpls-rtm-cap-sub-tlv" title="RTM Capability TLV in BGP-LS">
    <ttcol align='left'>TLV Code Point</ttcol>
    <ttcol align='center'>Description</ttcol>
    <ttcol align='center'>IS-IS TLV/Sub-TLV</ttcol>
    <ttcol align='left'>Reference</ttcol>
     <c>1105</c>
    <c>RTM Capability</c>
    <c>22/40</c>
    <c>This&nbsp;document</c>
   </texttable>
     </section>
      
     <section anchor="iana-rtm-set-type" title="RTM_SET Sub-object RSVP Type and Sub-TLVs">
     <t>
     IANA has assigned a new type for the RTM_SET sub-object from the RSVP-TE
     "Attributes TLV Space" sub-registry as follows:
     </t>

<!--[rfced] Fyi, we will fix the bad word breaks in Table 7 during
post-xml2rfc processing (i.e., just prior to publication).-->

 <texttable anchor="iana-rtm-set-type-tbl" title="RTM_SET Sub-object Type">
    <ttcol align='left'>Type&nbsp;</ttcol>
    <ttcol align='center'>&nbsp;Name</ttcol>
    <ttcol align='center'>Allowed&nbsp; on &nbsp;LSP_ATTRIBUTES&nbsp;</ttcol>
    <ttcol align='center'>Allowed&nbsp; on &nbsp;LSP_REQUIRED_ATTRIBUTES&nbsp;</ttcol>
    <ttcol align='center'>Allowed&nbsp; on LSP Hop Attributes&nbsp;</ttcol>
    <ttcol align='left'>Reference&nbsp;</ttcol>
     <c>5&nbsp;</c>
    <c>&nbsp;RTM_SET&nbsp;sub-object</c>
     <c>Yes</c>
     <c>No</c>
     <c>No</c>
     <c>This&nbsp;document</c>
   </texttable>

   <t>
   IANA has created a new sub-registry for sub-TLV types of the RTM_SET
   sub-object called the "RTM_SET Object Sub-Object Types" registry.
   All codepoints in the range 0 through 127 in this registry shall be
   allocated
     according to the "IETF Review" procedure as specified in <xref
     target="RFC5226"/>. Codepoints in the range
     128 through 191 in this registry shall be allocated according to the
     "First Come First Served" procedure as
     specified in <xref target="RFC5226"/>.
      This document defines the following new values of RTM_SET object
      sub&nbhy;object types:
   </t>
   
  <texttable anchor="iana-rtm-set-sub-type-tbl" title="RTM_SET Object Sub-object Types">
    <ttcol align='left'>Value</ttcol>
    <ttcol align='center'>Description</ttcol>
    <ttcol align='left'>Reference</ttcol>
     <c>0</c>
    <c>Reserved</c>
    <c>This&nbsp;document</c>
     <c>1</c>
    <c>IPv4 address</c>
    <c>This&nbsp;document</c>
     <c>2</c>
    <c>IPv6 address</c>
    <c>This&nbsp;document</c>
     <c>3</c>
    <c>Unnumbered interface</c>
    <c>This&nbsp;document</c>
     <c>4-191</c>
    <c>Unassigned</c>
    <c></c>
     <c>192-254</c>
    <c>Reserved for Private Use</c>
    <c>This&nbsp;document</c>
     <c>255</c>
    <c>Reserved</c>
    <c>This&nbsp;document</c>
    
   </texttable> 
   
     </section>
     
    
      <section anchor="iana-rtm-set-flag" title="RTM_SET Attribute Flag">
<t>
IANA has assigned a new flag in the RSVP-TE "Attribute Flags" registry.
</t>

<texttable anchor="iana-rtm-set-flag-table" title="RTM_SET Attribute Flag">
    <ttcol align='left'>Bit No</ttcol>
    <ttcol align='left'>Name</ttcol>
     <ttcol align='left'>Attribute Flags Path</ttcol>
    <ttcol align='left'>Attribute Flags Resv</ttcol>
     <ttcol align='left'>RRO</ttcol>
     <ttcol align='left'>ERO</ttcol>
     <ttcol align='left'>Reference</ttcol>
    <c>15</c>
    <c>RTM_SET</c>
    <c>Yes</c>
    <c>Yes</c>
    <c>No</c>
    <c>No</c>
     <c>This&nbsp;document</c>
    </texttable>

</section>

     <section anchor="iana-error-code" title="New Error Codes">
<t>
IANA has assigned the following new error codes in the RSVP "Error Codes and
Globally-Defined Error Value Sub-Codes" registry.

</t>

  <texttable anchor="iana-error-code-table" title="New Error Codes">
    <ttcol align='left'>Error Code</ttcol>
    <ttcol align='left'>Meaning</ttcol>
    <ttcol align='left'>Reference</ttcol>
    <c>41</c>
    <c>Duplicate TLV</c>
    <c>This&nbsp;document</c>
    <c>42</c>
    <c>Duplicate sub-TLV</c>
    <c>This&nbsp;document</c>
    <c>43</c>
    <c>RTM_SET&nbsp;TLV&nbsp;Absent</c>
     <c>This&nbsp;document</c>
    </texttable>

</section>

 </section>
     
     <section anchor="security" title="Security Considerations">
     <t>
     Routers that support RTM are subject to the same security considerations as defined in
     <xref target="RFC4385"/> and <xref target="RFC5085"/>.
     </t>
     <t>
     In addition -- particularly as applied to use related to PTP -- there is a presumed trust model that 
     depends on the existence of a trusted relationship of at least all PTP-aware nodes on the path
     traversed by PTP messages.  This is necessary as these nodes are expected to correctly modify
     specific content of the data in PTP messages, and proper operation of the protocol depends on this ability.
     In practice, this means that those portions of messages cannot be covered by either confidentiality or 
     integrity protection. Though there are methods that make it possible in theory to provide either or both
     such protections and still allow for intermediate nodes to make detectable but authenticated modifications,
     such methods do not seem practical at present, particularly for timing protocols that are sensitive to latency
     and/or jitter.
     </t>
     <t>
     The ability to potentially authenticate and/or encrypt RTM and PTP data for scenarios both with and without
     participation of intermediate RTM-/PTP-capable nodes is left for further study.
     </t>
     <t>
     While it is possible for a supposed compromised node to intercept and modify the G-ACh content,
     this is an issue that exists for nodes in general -- for any and all data that may be carried over an LSP -- and
     is therefore the basis for an additional presumed trust model associated with existing LSPs and nodes.
     </t>
     <t>
     Security requirements of time protocols are provided in RFC 7384 <xref target="RFC7384"/>.
     </t>
     </section>
     
  </middle>
  
    <back>
    <references title="Normative References">


  <?rfc include="reference.RFC.2119"?>
  <?rfc include="reference.RFC.5905"?>
  <?rfc include="reference.RFC.5586"?>
  <?rfc include="reference.RFC.5085"?>
  <?rfc include="reference.RFC.4385"?>
  <?rfc include="reference.RFC.6423"?>
  <?rfc include="reference.RFC.3209"?>
  <?rfc include="reference.RFC.3477"?>
  <?rfc include="reference.RFC.7684"?>
  <?rfc include="reference.RFC.5420"?>
  <?rfc include="reference.RFC.7752"?>
   
 <reference anchor="IEEE.1588">
<front>
<title>IEEE Standard for a Precision Clock Synchronization Protocol for Networked Measurement and Control Systems</title>
<author><organization>IEEE</organization>
</author>
<date />
</front>
<seriesInfo name="IEEE" value="Std 1588-2008"/>
<seriesInfo name="DOI" value="10.1109/IEEESTD.2008.4579760"/>
</reference> 

    </references>

    <references title="Informative References">
  
  <?rfc include="reference.RFC.6374"?>
  <?rfc include="reference.RFC.5226"?>
  <?rfc include="reference.RFC.4202"?>
  <?rfc include="reference.RFC.7384"?>
    <?rfc include="reference.RFC.5036"?>

<!--draft-ietf-ospf-ospfv3-lsa-extend-14; Active, I-D exists-->
<reference anchor='OSPFV3-EXTENDED-LSA'>
<front>
<title>OSPFv3 LSA Extendibility</title>
<author initials='A' surname='Lindem' fullname='Acee Lindem'>
    <organization />
</author>
<author initials='A' surname='Roy' fullname='Abhay Roy'>
    <organization />
</author>
<author initials='D' surname='Goethals' fullname='Dirk Goethals'>
    <organization />
</author>
<author initials='V' surname='Vallem' fullname='Veerendranatha Vallem'>
    <organization />
</author>
<author initials='F' surname='Baker' fullname='Fred Baker'>
    <organization />
</author>
<date month='April' year='2017' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-ospf-ospfv3-lsa-extend-14' />
</reference>

<!--draft-ietf-tictoc-1588overmpls-07; Expired-->
<reference anchor='TIMING-OVER-MPLS'>
<front>
<title>Transporting Timing messages over MPLS Networks</title>
<author initials='S' surname='Davari' fullname='Shahram Davari'>
    <organization />
</author>
<author initials='A' surname='Oren' fullname='Amit Oren'>
    <organization />
</author>
<author initials='M' surname='Bhatia' fullname='Manav Bhatia'>
    <organization />
</author>
<author initials='P' surname='Roberts' fullname='Peter Roberts'>
    <organization />
</author>
<author initials='L' surname='Montini' fullname='Laurent Montini'>
    <organization />
</author>
<date month='October' year='2015' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-tictoc-1588overmpls-07' />
</reference>

 <reference anchor="ITU-T.G.8271">
<front>
<title>Time and phase synchronization aspects of packet networks</title>
<author><organization>ITU-T
</organization>
</author>
<date month="July" year="2016"/>
</front>
<seriesInfo name="ITU-T" value="Recomendation G.8271/Y.1366"/>
</reference> 
    </references>

 <section title="Acknowledgments" numbered="no">
         <t>
        The authors want to thank Loa Andersson, Lou Berger, Acee Lindem, Les
	Ginsberg, and Uma Chunduri for their thorough reviews, thoughtful
	comments,
        and, most of all, patience.
         </t>  
      </section>

 </back>
 </rfc>
