<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "http://xml.resource.org/authoring/rfc2629.dtd"
[

<!ENTITY RFC3912 SYSTEM "reference.RFC.3912.xml">
<!ENTITY RFC4034 SYSTEM "reference.RFC.4034.xml">
<!ENTITY RFC5396 SYSTEM "reference.RFC.5396.xml">
<!ENTITY RFC5890 SYSTEM "reference.RFC.5890.xml">
<!ENTITY RFC5910 SYSTEM "reference.RFC.5910.xml">
<!ENTITY RFC5952 SYSTEM "reference.RFC.5952.xml">
<!ENTITY RFC5988 SYSTEM "reference.RFC.5988.xml">
<!ENTITY RFC6350 SYSTEM "reference.RFC.6350.xml">
<!ENTITY RFC6839 SYSTEM "reference.RFC.6839.xml">
<!ENTITY RFC7095 SYSTEM "reference.RFC.7095.xml">
]>
<?rfc toc="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>


<rfc category="std" number="7483" submissionType='IETF' consensus='yes' ipr="trust200902" >
    <front>
        <title abbrev="RDAP JSON Responses">JSON Responses for the
	Registration Data Access Protocol (RDAP)</title>
        <author fullname="Andrew Lee Newton" initials="A.L." surname="Newton">
            <organization abbrev="ARIN">American Registry for Internet Numbers</organization>
            <address>
                <postal>
                    <street>3635 Concorde Parkway</street>
                    <city>Chantilly</city>
                    <region>VA</region>
                    <country>United States</country>
                    <code>20151</code>
                </postal>
                <email>andy@arin.net</email>
                <uri>http://www.arin.net</uri>
            </address>
        </author>
        <author initials="S." surname="Hollenbeck" fullname="Scott Hollenbeck">
            <organization>Verisign Labs</organization>
            <address>
        <postal>
          <street>12061 Bluemont Way</street>
          <city>Reston</city>
          <region>VA</region>
          <code>20190</code>
          <country>United States</country>
        </postal>
        <email>shollenbeck@verisign.com</email>
        <uri>http://www.verisignlabs.com/</uri>
      </address>
        </author>

        <date month='March' year='2015'/>

        <abstract>
            <t> This document describes JSON data structures representing registration information
                maintained by Regional Internet Registries (RIRs) and Domain Name Registries (DNRs).
                These data structures are used to form Registration Data Access Protocol (RDAP)
                query responses. </t>
        </abstract>
    </front>
    <middle>
        <section title="Introduction" anchor="introduction">

            <t> This document describes responses in the <xref target="RFC7159">JSON</xref> format
                for the queries as defined by the <xref target="RFC7482">
                Registration Data Access Protocol Query Format</xref>. 
                A communication protocol for exchanging queries and responses is described 
                in <xref target="RFC7480"></xref>.
            </t>
            <section title="Terminology and Definitions" anchor="terminology_definitions">
                <t>The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;,
                    &quot;SHALL NOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;, &quot;MAY&quot;,
                    and &quot;OPTIONAL&quot; in this document are to be interpreted as described in <xref target="RFC2119"/>
                    when specified in their uppercase forms.</t>
                
                <t>The following list describes terminology and definitions used throughout this
                    document: <list style="hanging" hangIndent="18">
                        <t hangText="DNR:">Domain Name Registry</t>
                        <t hangText="LDH:">letters, digits, hyphen</t>
                        <t hangText="member:">data found within an object as defined by <xref
                            target="RFC7159">JSON</xref>.</t>
                        <t hangText="object:">a data structure as defined by <xref target="RFC7159"
                            >JSON</xref>.</t>
                        <t hangText="object class:">the definition of members that may be found in JSON
                            objects described in this document.</t>
                        <t hangText="object instance:">an instantiation or specific instance of an
                            object class.</t>
                        <t hangText="RDAP:">Registration Data Access Protocol</t>
                        <t hangText="RIR:">Regional Internet Registry</t>
                    </list>
                </t>
            </section>
            <section title="Data Model" anchor="data_model">
            <t>
                The data model for JSON responses is specified in five sections:
                <list style="numbers">
                    <t>simple data types conveyed in JSON strings</t>
                    <t>data structures specified as JSON arrays or objects that are used repeatedly when building up larger objects</t>
                    <t>object classes representing structured data corresponding to a lookup of a single object</t>
                    <t>arrays of objects representing structured data corresponding to a search for multiple objects</t>
                    <t>the response to an error</t>
                </list>
            </t>
            <t> 
                The object classes represent responses for two major categories of data: responses
                returned by RIRs for registration data related to IP
                addresses, reverse DNS names, and Autonomous System numbers and responses returned
                by DNRs for registration data related to forward DNS names.
                The following object classes are returned by both RIRs and DNRs:
                <list style="numbers">
                    <t>domains</t>
                    <t>nameservers</t>
                    <t>entities</t>
                </list>
                The information served by both RIRs and DNRs for these object classes overlap
                extensively and are given in this document as a unified model for both classes of
                service.
            </t>
            <t>
               In addition to the object classes listed above, RIRs also serve the following
               object classes:
                <list style="numbers">
                    <t>IP networks</t>
                    <t>Autonomous System numbers</t>
                </list>
            </t>
            <t>
                Object classes defined in this document represent a minimal set of what a
                compliant client/server needs to understand to function correctly; however,
                some deployments may want to include additional object classes to suit
                individual needs.  Anticipating this
                need for extension, <xref target="json_naming"></xref> of this document defines a mechanism for
                extending the JSON objects that are described in this document.
            </t>
            <t>
                Positive responses take two forms. A response to a lookup of a single object in the registration
                system yields a JSON object, which is the subject of the lookup. A response to a search for
                multiple objects yields a JSON object that contains an array of JSON objects that are the subject
                of the search. In each type of response, other data structures are present within the topmost
                JSON object.
            </t>
        </section>
        </section>

        <section title="Use of JSON">
          
            <section title="Naming" anchor="json_naming">
                <t> 
                    Clients of these JSON responses SHOULD ignore unrecognized JSON
                    members in responses. Servers can insert members into the JSON
                    responses, which are not specified in this document, but that does not
                    constitute an error in the response. Servers that insert such
                    unspecified members into JSON responses SHOULD have member names prefixed
                    with a short identifier followed by an underscore followed by a
                    meaningful name.  It has been observed that these short identifiers aid software implementers
                    with identifying the specification of the JSON member, and failure to
                    use one could cause an implementer to assume the server is
                    erroneously using a name from this specification.  This allowance
                    does not apply to jCard <xref target="RFC7095"></xref> objects.  The full JSON name (the
                    prefix plus the underscore plus the meaningful name) SHOULD adhere to
                    the character and name limitations of the prefix registry described
                    in <xref target="RFC7480"></xref>.  Failure to use these limitations
                    could result in slower adoption as these limitations have been observed
                    to aid some client programming models.
                </t>
                <figure anchor="json_example_no_extra_values">
                    <preamble> Consider the following JSON response with JSON members, all of which are
                        specified in this document. </preamble>
                    <artwork xml:space="preserve">
{
  "handle" : "ABC123",
  "remarks" : 
  [
    {
      "description" : 
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]  
    }
  ]
}                        
                </artwork>
                </figure>

           <t> If The Registry of the Moon desires to express information not found in this
                    specification, it might select "lunarNic" as its identifying prefix and insert,
                    as an example, the member named "lunarNic_beforeOneSmallStep" to signify registrations
                    occurring before the first moon landing and the member named
                    "lunarNic_harshMistressNotes" that contains other descriptive text. </t>
                <figure anchor="json_example_with_extra_values">
                    <preamble> Consider the following JSON response with JSON names, some of which
                        should be ignored by clients without knowledge of their meaning. </preamble>
                    <artwork xml:space="preserve">
{
  "handle" : "ABC123",
  "lunarNic_beforeOneSmallStep" : "TRUE THAT!",
  "remarks" : 
  [
    {
      "description" : 
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]  
    }
  ],
  "lunarNic_harshMistressNotes" : 
  [
    "In space,",
    "nobody can hear you scream."
  ]
}                        
                </artwork>
                </figure>
                <t> Insertion of unrecognized members ignored by clients may also be used for future
                    revisions to this specification. </t>
                <t> 
                    Clients processing JSON responses need to be prepared for members
                    representing registration data specified in this document to be
                    absent from a response.  In other words, servers are free to not
                    include JSON members containing registration data based on their
                    own policies.
                </t>
                <t>Finally, all JSON names specified in this document are case sensitive. Both servers
                and clients MUST transmit and process them using the specified character case.</t>
            </section>
        </section>
        <section title="Common Data Types" anchor="common_data_types">
            <t><xref target="RFC7159">JSON</xref> defines the data types of a number, character
                string, boolean, array, object, and null. This section describes the semantics and/or
                syntax reference for common, JSON character strings used in this document.
            </t>
            <t>
                <list style="hanging" hangIndent="18">
                    <t hangText="handle: ">DNRs and RIRs have registry-unique identifiers that may
                        be used to specifically reference an object instance. The semantics of this
                        data type as found in this document are to be a registry-unique reference to
                        the closest enclosing object where the value is found. The data type names
                        "registryId", "roid", "nic-handle", "registrationNo", etc., are terms often
                        synonymous with this data type. In this document, the term "handle" is used.
                        The term exposed to users by clients is a presentation issue beyond the
                        scope of this document.</t>
                    <t hangText="IPv4 addresses: ">The representation of IPv4 addresses in this
                        document uses the dotted-decimal notation. An example of this textual representation is
                        "192.0.2.0".</t>
                    <t hangText="IPv6 addresses: ">The representation of IPv6 addresses in this
                        document follow the forms outlined in <xref target="RFC5952"/>. An example
                        of this textual representation is "2001:db8::1:0:0:1".</t>
                    <t hangText="country codes: ">Where the identity of a geopolitical nation or
                        country is needed, these identities are represented with the alpha-2 or
                        two-character country code designation as defined in <xref
                            target="ISO.3166.1988"/>. The alpha-2 representation is used because it
                        is freely available, whereas the alpha-3 and numeric-3 standards are not.</t>
                    <t hangText="LDH names: ">Textual representations of DNS names where the labels
                        of the domain are all "letters, digits, hyphen" labels as described by <xref target="RFC5890"></xref>.
                        Trailing periods are optional.</t>
                    <t hangText="Unicode names: ">Textual representations of DNS names where one or
                        more of the labels are U-labels as described by <xref target="RFC5890"></xref>.
                        Trailing periods are optional.</t>
                    <t hangText="dates and times: ">The syntax for values denoting dates and times
                        is defined in <xref target="RFC3339"/>.</t>
                    <t hangText="URIs: ">The syntax for values denoting a Uniform Resource
                        Identifier (URI) is defined by <xref target="RFC3986"/>.</t>
                </list>
            </t>
            <t>Contact information is defined using jCards as described in <xref target="RFC7095"></xref>.</t>
        </section>

        <section title="Common Data Structures">
            <t> This section defines common data structures used in responses and object classes.</t>
            <section title="RDAP Conformance" anchor="rdap_conformance">
                <t> The data structure named "rdapConformance" is an array of
                    strings, each providing a hint as to the specifications used in the construction
                    of the response. This data structure appears only in the topmost JSON object of
                    a response.</t>
                <figure anchor="rdapConformance">
                    <preamble>An example rdapConformance data structure:</preamble>
                    <artwork xml:space="preserve">
"rdapConformance" : 
[
  "rdap_level_0"
]
                </artwork>
                </figure>
                <t>
                    The string literal "rdap_level_0" signifies conformance with this specification.
                    When custom JSON values are inserted into responses, conformance to those custom
                    specifications MUST use a string prefixed with the appropriate identifier from
                    the IANA RDAP Extensions registry specified in <xref target="RFC7480"></xref>.
                    For example, if the fictional Registry of the Moon wants to signify that their
                    JSON responses are conformant with their registered extensions, the string used
                    might be "lunarNIC_level_0". These prefixes aid the identification of specifications
                    for software implementers, and failure to use them could result in slower adoption
                    of extensions.
                </t>
                <figure anchor="rdapConformance_lunarNic">
                    <preamble>Example rdapConformance structure with custom extensions noted:</preamble>
                    <artwork xml:space="preserve">
"rdapConformance" : 
[
  "rdap_level_0",
  "lunarNic_level_0"
]
                </artwork>
                </figure>
            </section>
            <section title="Links" anchor="links">
                <t> The "links" array is found in data structures to signify links to other
                    resources on the Internet.
                    The relationship of these links is defined by the IANA registry described
                    by <xref target="RFC5988"/>. </t>
                <figure anchor="link_example">
                    <preamble>The following is an example of the link structure:</preamble>
                    <artwork xml:space="preserve">
    {
      "value" : "http://example.com/context_uri",
      "rel" : "self",
      "href" : "http://example.com/target_uri",
      "hreflang" : [ "en", "ch" ],
      "title" : "title",
      "media" : "screen",
      "type" : "application/json"
    }
                </artwork>
                </figure>
                <t> The JSON name/values of "rel", "href", "hreflang", "title", "media", and "type"
                    correspond to values found in Section 5 of <xref target="RFC5988"/>. The "value"
                    JSON value is the context URI as described by <xref target="RFC5988"/>. The
                    "href" JSON value MUST be specified. All other JSON values are OPTIONAL. </t>
                
                <figure anchor="links_example">
                    <preamble>This is an example of the "links" array as it might be found in an object
                        class:</preamble>
                    <artwork xml:space="preserve">
    "links" :
    [
        {
          "value" : "http://example.com/ip/2001:db8::123",
          "rel" : "self",
          "href" : "http://example.com/ip/2001:db8::123",
          "type" : "application/rdap+json"
        },
        {
          "value" : "http://example.com/ip/2001:db8::123",
          "rel" : "up",
          "href" : "http://example.com/ip/2001:db8::/48",
          "type" : "application/rdap+json"
        }

    ]
                </artwork>
                </figure>
            </section>
            <section title="Notices and Remarks" anchor="notices_and_remarks">
                <t> The "notices" and "remarks" data structures take the same form.
                    The notices structure denotes information about the service
                    providing RDAP information and/or information about the entire response, 
                    whereas the remarks structure denotes
                    information about the object class that contains it
                    (see <xref target="object_classes"></xref> regarding object classes).
                </t>
                <t>
                    Both are arrays of objects. Each
                    object contains an optional "title" string representing the title of the object,
                    an optional "type" string denoting a registered type of remark or notice
                    (see <xref target="notice_remark_type_registrations"></xref>), an
                    array of strings named "description" for the purposes of conveying any
                    descriptive text, and an optional "links" array as described
                    in <xref target="links"/>. </t>
                <figure anchor="notices_example">
                    <preamble>An example of the notices data structure:</preamble>
                    <artwork xml:space="preserve">
"notices" : 
[
  {
    "title" : "Terms of Use",
    "description" : 
    [
      "Service subject to The Registry of the Moon's TOS.",
      "Copyright (c) 2020 LunarNIC"
    ],
    "links" : 
    [
      {
        "value" : "http://example.net/entity/XXXX",
        "rel" : "alternate",
        "type" : "text/html",
        "href" : "http://www.example.com/terms_of_use.html"
      }
    ]
  }
]
                </artwork>
                </figure>
                <t>
                    It is the job of the clients to determine line breaks, spacing,
                    and display issues for sentences within the character strings
                    of the "description" array. 
                    Each string in the "description" array contains a single complete
                    division of human-readable text indicating to clients where there
                    are semantic breaks.
                </t>
                <figure anchor="remarks_example">
                    <preamble>An example of the remarks data structure:</preamble>
                    <artwork xml:space="preserve">
"remarks" : 
[
  {
    "description" : 
    [
      "She sells sea shells down by the sea shore.",
      "Originally written by Terry Sullivan."
    ]  
  }
]
                </artwork>
                </figure>
                <t>
                    Note that objects in the "remarks" array may also have a "links" array.
                </t>
                <t>
                    While the "title" and "description" fields are intended primarily for human
                    consumption, the "type" string contains a well-known value to be registered
                    with IANA (see <xref target="notice_remark_type_registrations"></xref>)
                    for programmatic use.
                </t>
                <figure anchor="remarks_with_type_example">
                    <preamble>An example of the remarks data structure:</preamble>
                    <artwork xml:space="preserve">
"remarks" : 
[
  {
    "type" : "object truncated due to authorization",
    "description" : 
    [
      "Some registration data may not have been given.",
      "Use proper authorization credentials to see all of it."
    ]  
  }
]
                </artwork>
                </figure>
                <t>
                    While the "remarks" array will appear in many object classes in a response, the
                    "notices" array appears only in the topmost object of a response.
                </t>
            </section>
            <section title="Language Identifier" anchor="language_identifier">
                <t> This data structure consists solely of a name/value pair, where the name is "lang" 
                    and the value is a string containing a language identifier as described in <xref target="RFC5646"></xref>.
                </t>
                <figure anchor="language_example">
                    <artwork xml:space="preserve">
"lang" : "mn-Cyrl-MN"
                </artwork>
                </figure>
                <t>The "lang" attribute may appear anywhere in an object class or data structure
                    except for in jCard objects.</t>
            </section>
            <section title="Events" anchor="events">
                <t>
                    This data structure represents events that have occurred on an instance of
                    an object class (see <xref target="object_classes"></xref> regarding object classes).
                </t>
                <figure anchor="events_example">
                    <preamble>This is an example of an "events" array.</preamble>
                    <artwork xml:space="preserve">
"events" :
[
  {
    "eventAction" : "registration",
    "eventActor" : "SOMEID-LUNARNIC",
    "eventDate" : "1990-12-31T23:59:59Z"
  },
  {
    "eventAction" : "last changed",
    "eventActor" : "OTHERID-LUNARNIC",
    "eventDate" : "1991-12-31T23:59:59Z"
  }
]
                </artwork>
                </figure>
                <t>
                    The "events" array consists of objects, each with the following members:
                    <list style="symbols">
                        <t>"eventAction" -- a string denoting the reason for the event</t>
                        <t>"eventActor" -- an optional identifier denoting the actor responsible for the event</t>
                        <t>"eventDate" -- a string containing the time and date the event occurred.</t>
                        <t>"links" -- see <xref target="links"></xref></t>
                    </list>
                </t>
                <t>
                    Events can be future dated. One use case for future dating of events is to
                    denote when an object expires from a registry.
                </t>
                <t>
                    The "links" array in this data structure is provided for references
                    to the event actor. In order to reference an RDAP entity, a "rel" of
                    "related" and a "type" of "application/rdap+json" is used in the link
                    reference.
                </t>
                <t>
                    See <xref target="event_action_registrations"></xref> for a list of 
                    values for the "eventAction" string. See <xref target="modeling_events"></xref>
                    regarding the various ways events can be modeled.
                </t>
            </section>
            <section title="Status" anchor="status">
                <t>This data structure, named "status", is an array of strings indicating the state of a registered object 
                    (see <xref target="status_registrations"></xref> for a list of values).</t>
            </section>
            <section title="Port 43 WHOIS Server" anchor="port43">
                <t>
                    This data structure, a member named "port43", is a simple string containing the 
                    fully qualified host name or IP address of the WHOIS
                    <xref target="RFC3912"/> server where the containing object instance may be
                    found. Note that this is not a URI, as there is no WHOIS URI scheme.
                </t>
            </section>
            <section title="Public IDs" anchor="public_ids">
                <t>
                    This data structure maps a public identifier to an object class.
                    It is named "publicIds" and is an array of objects, with each object containing the
                    following members:
                        <list style="symbols">
                            <t>type -- a string denoting the type of public identifier</t>
                            <t>identifier -- a public identifier of the type denoted by "type"</t>
                        </list>
                </t>
                <figure anchor="publicids_example">
                    <preamble>The following is an example of a publicIds structure.</preamble>
                    <artwork xml:space="preserve">

"publicIds":
[
  {
    "type":"IANA Registrar ID",
    "identifier":"1"
  }
]
                        
                    </artwork>
                </figure>
            </section>
            <section title="Object Class Name" anchor="object_class_name">
                <t>
                    This data structure, a member named "objectClassName", gives the object class
                    name of a particular object as a string.  This identifies the type of
                    object being processed.  An objectClassName is REQUIRED in all RDAP
                    response objects so that the type of the object can be interpreted.
                </t>
            </section>
            <section title="An Example">
                <figure anchor="json_example_with_notices_and_rdapConformance">
                    <preamble> This is an example response with both rdapConformance and notices
                        embedded:</preamble>
                    <artwork xml:space="preserve">                    
{
  "rdapConformance" : 
  [
    "rdap_level_0"
  ],
  "notices" : 
  [
    {
      "title" : "Content Removed",
      "description" : 
      [
        "Without full authorization, content has been removed.",
        "Sorry, dude!"
      ],
      "links" : 
      [
        {
          "value" : "http://example.net/ip/192.0.2.0/24",
          "rel" : "alternate",
          "type" : "text/html",
          "href" : "http://www.example.com/redaction_policy.html"
        }
      ]
    }
  ],
  "lang" : "en",
  "objectClassName" : "ip network",
  "startAddress" : "192.0.2.0",
  "endAddress" : "192.0.2.255",
  "handle" : "XXXX-RIR",
  "ipVersion" : "v4",
  "name": "NET-RTR-1",
  "parentHandle" : "YYYY-RIR",
  "remarks" : 
  [
    {
      "description" : 
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]  
    }
  ]
}                        
                </artwork>
                </figure>
            </section>
        </section>
        <section title="Object Classes" anchor="object_classes">
            <t>
                Object classes represent structures appropriate for a response from the
                queries specified in <xref target="RFC7482"></xref>.
            </t>
            <t>
                Each object class contains a "links" array as specified in <xref target="links"></xref>.
                For every object class instance in a response, whether the object class instance is directly
                representing the response to a query or is embedded in other object class instances or
                is an item in a search result set,
                servers SHOULD provide a link representing a URI for that object class instance using the
                "self" relationship as described in the IANA registry specified by <xref target="RFC5988"></xref>.
                As explained in <xref target="nameserver_object_class"></xref>, this may be not
                always be possible for nameserver data. Clients MUST be able to process object
                instances without a self link. When present, clients can use the self link
                for caching data. Servers MAY provide more than one self link for any given
                object instance. Failure to provide any self link by a server may result in
                clients being unable to cache object class instances.
            </t>
            <t>
                Clients using self links for caching SHOULD not cache any object
                class instances where the authority of the self link is different
                than the authority of the server returning the data. Failing to do
                so might result in cache poisoning.
            </t>
            <t>
                Self links MUST contain a "type" element containing the "application/rdap+json" media type
                when referencing RDAP object instances as defined by this document.
            </t>
            <figure anchor="self_links">
                <preamble>This is an example of the "links" array with a self link to an object class:</preamble>
                <artwork xml:space="preserve">
    "links" :
    [
        {
          "value" : "http://example.com/ip/2001:db8::123",
          "rel" : "self",
          "href" : "http://example.com/ip/2001:db8::123",
          "type" : "application/rdap+json"
        }
    ]
                </artwork>
            </figure>
        <section title="The Entity Object Class" anchor="entity_object_class">
            <t> The entity object class appears throughout this document and is an appropriate
                response for the /entity/XXXX query defined in <xref
                    target="RFC7482">"Registration Data Access Protocol (RDAP)
		Query Format"</xref>. 
                This object class
                represents the information of organizations, corporations, governments, non-profits,
                clubs, individual persons, and informal groups of people. All of these
                representations are so similar that it is best to represent them in <xref
                    target="RFC7159">JSON</xref> with one construct, the entity object class, to aid
                in the reuse of code by implementers. </t>
<t>
    The entity object class uses <xref target="RFC7095">jCard</xref> to represent contact information,
    such as postal addresses, email addresses, phone numbers and names of 
    organizations and individuals. Many of the types of information that can be
    represented with jCard have no use in RDAP, such as birthdays,
    anniversaries, and gender.
</t>
                <figure anchor="example_entity">
                    <preamble>The entity object is served by both RIRs and DNRs.
                        The following is an example of an entity that might be served
                        by an RIR.
                    </preamble>
                    <artwork xml:space="preserve">
                    
{
  "objectClassName" : "entity",
  "handle":"XXXX",
  "vcardArray":[
    "vcard",
    [
      ["version", {}, "text", "4.0"],
      ["fn", {}, "text", "Joe User"],
      ["n", {}, "text",
        ["User", "Joe", "", "", ["ing. jr", "M.Sc."]]
      ],
      ["kind", {}, "text", "individual"],
      ["lang", {
        "pref":"1"
      }, "language-tag", "fr"],
      ["lang", {
        "pref":"2"
      }, "language-tag", "en"],
      ["org", {
        "type":"work"
      }, "text", "Example"],
      ["title", {}, "text", "Research Scientist"],
      ["role", {}, "text", "Project Lead"],
      ["adr",
        { "type":"work" }, 
        "text",
        [
          "",
          "Suite 1234",
          "4321 Rue Somewhere",
          "Quebec",
          "QC",
          "G1V 2M2",
          "Canada"
        ]
      ],
      ["adr",
        {
          "type":"home",
          "label":"123 Maple Ave\nSuite 90001\nVancouver\nBC\n1239\n"
        },
        "text",
        [
          "", "", "", "", "", "", ""
        ]
      ],
      ["tel",
        {
          "type":["work", "voice"],
          "pref":"1"
        },
        "uri",
        "tel:+1-555-555-1234;ext=102"
      ],
      ["tel",
        { "type":["work", "cell", "voice", "video", "text"] },
        "uri",
        "tel:+1-555-555-4321"
      ],
      ["email",
        { "type":"work" },
        "text",
        "joe.user@example.com"
      ],
      ["geo", {
        "type":"work"
      }, "uri", "geo:46.772673,-71.282945"],
      ["key",
        { "type":"work" },
        "uri",
        "http://www.example.com/joe.user/joe.asc"
      ],
      ["tz", {},
        "utc-offset", "-05:00"],
      ["url", { "type":"home" }, 
        "uri", "http://example.org"]
    ]
  ],
  "roles":[ "registrar" ],
  "publicIds":[
    {
      "type":"IANA Registrar ID",
      "identifier":"1"
    }
  ],
  "remarks":[
    {
      "description":[
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]
    }
  ],
  "links":[
    {
      "value":"http://example.com/entity/XXXX",
      "rel":"self",
      "href":"http://example.com/entity/XXXX",
      "type" : "application/rdap+json"
    }
  ],
  "events":[
    {
      "eventAction":"registration",
      "eventDate":"1990-12-31T23:59:59Z"
    }
  ],
  "asEventActor":[
    {
      "eventAction":"last changed",
      "eventDate":"1991-12-31T23:59:59Z"
    }
  ]
}
                    
                </artwork>
                </figure>


                <t> The entity object class can contain the following members:<list style="symbols">
                        <t>objectClassName -- the string "entity"</t>
                        <t>handle -- a string representing a registry unique identifier of the
                            entity</t>
                        <t>vcardArray -- a jCard with the entity's contact information</t>
                        <t>roles -- an array of strings, each signifying the relationship an object
                            would have with its closest containing object
                            (see <xref target="role_registrations"></xref> for a list of values)
                        </t>
                        <t>publicIds -- see <xref target="public_ids"></xref></t>
                        <t>entities -- an array of entity objects as defined by this section</t>
                        <t>remarks -- see <xref target="notices_and_remarks"></xref></t>
                        <t>links -- see <xref target="links"/></t>
                        <t>events -- see <xref target="events"></xref></t>
                        <t>asEventActor -- this data structure takes the same form as the
                        events data structure (see <xref target="events"></xref>), but
                        each object in the array MUST NOT have an "eventActor" member.
                        These objects denote that the entity is an event actor for the
                        given events. See <xref target="modeling_events"></xref>
                            regarding the various ways events can be modeled.</t>
                        <t>status -- see <xref target="status"></xref></t>
                        <t>port43 -- see <xref target="port43"></xref></t>
                        <t>networks -- an array of IP network objects as defined in <xref target="ip_network_object_class"></xref></t>
                        <t>autnums -- an array of autnum objects as defined in <xref target="as_entity_object_class"></xref></t>
                </list>
                </t>
            <t>
                Entities may also have other entities embedded with them in an array. This can be used
                to model an organization with specific individuals fulfilling designated roles of responsibility.
            </t>
            <figure anchor="entity_with_entities_example">
                <preamble>The following is an elided example of an entity with embedded entities.</preamble>
                <artwork xml:space="preserve">
                    
{
  "objectClassName" : "entity",
  "handle" : "ANENTITY",
  "roles" : [ "registrar" ],
  ...
  "entities" : 
  [
    {
      "objectClassName" : "entity",
      "handle": "ANEMBEDDEDENTITY",
      "roles" : [ "technical" ],
      ...
    },
    ...
  ],
  ...  
}
                    
                </artwork>
            </figure>
                <figure anchor="example_dnr_entity">
                    <preamble>The following is an example of an entity that might be served by a DNR.
                    </preamble>
                    <artwork xml:space="preserve">
                    
{
  "objectClassName" : "entity",
  "handle":"XXXX",
  "vcardArray":[
    "vcard",
    [
      ["version", {}, "text", "4.0"],
      ["fn", {}, "text", "Joe User"],
      ["kind", {}, "text", "individual"],
      ["lang", {
        "pref":"1"
      }, "language-tag", "fr"],
      ["lang", {
        "pref":"2"
      }, "language-tag", "en"],
      ["org", {
        "type":"work"
      }, "text", "Example"],
      ["title", {}, "text", "Research Scientist"],
      ["role", {}, "text", "Project Lead"],
      ["adr",
        { "type":"work" },
        "text",
        [
          "",
          "Suite 1234",
          "4321 Rue Somewhere",
          "Quebec",
          "QC",
          "G1V 2M2",
          "Canada"
        ]
      ],
      ["tel",
        { "type":["work", "voice"], "pref":"1" },
        "uri", "tel:+1-555-555-1234;ext=102"
      ],
      ["email",
        { "type":"work" }, 
        "text", "joe.user@example.com"
      ]
    ]
  ],
  "status":[ "validated", "locked" ],
  "remarks":[
    {
      "description":[
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]
    }
  ],
  "links":[
    {
      "value":"http://example.com/entity/XXXX",
      "rel":"self",
      "href":"http://example.com/entity/XXXX",
      "type":"application/rdap+json"
    }
  ],
  "port43":"whois.example.net",
  "events":[
    {
      "eventAction":"registration",
      "eventDate":"1990-12-31T23:59:59Z"
    },
    {
      "eventAction":"last changed",
      "eventDate":"1991-12-31T23:59:59Z",
      "eventActor":"joe@example.com"
    }
  ]
}        
                    
                </artwork>
                </figure>
            <t>
                See <xref target="suggested_entity_modeling"></xref> for use of the entity object class
                to model various types of entities found in both RIRs and DNRs.
                See <xref target="structured_unstructured_addresses"></xref> regarding structured vs.
                unstructured postal addresses in entities.
            </t>
        </section>
        <section title="The Nameserver Object Class" anchor="nameserver_object_class">
            <t> The nameserver object class represents information regarding DNS nameservers
                used in both forward and reverse DNS.
                RIRs and some DNRs register or expose nameserver information as an attribute of a domain
                name, while other DNRs model nameservers as "first class objects". </t>
            <t> The nameserver object class accommodates both models and degrees of variation in
                between. </t>
            <figure anchor="full_nameserver_example">
                <preamble>The following is an example of a nameserver object.</preamble>
                <artwork xml:space="preserve">
                    
  {
    "objectClassName" : "nameserver",
    "handle" : "XXXX",
    "ldhName" : "ns1.xn--fo-5ja.example",
    "unicodeName" : "ns1.foo.example",
    "status" : [ "active" ],
    "ipAddresses" :
    {
      "v4": [ "192.0.2.1", "192.0.2.2" ],
      "v6": [ "2001:db8::123" ]
    },    
    "remarks" : 
    [
      {
        "description" : 
        [
          "She sells sea shells down by the sea shore.",
          "Originally written by Terry Sullivan."
        ]  
      }
    ],
    "links" : 
    [
      {
        "value" : "http://example.net/nameserver/xxxx",
        "rel" : "self",
        "href" : "http://example.net/nameserver/xxxx",
        "type" : "application/rdap+json"
      }
    ],
    "port43" : "whois.example.net",
    "events" : 
    [
      {
        "eventAction" : "registration",
        "eventDate" : "1990-12-31T23:59:59Z"
      },
      {
        "eventAction" : "last changed",
        "eventDate" : "1991-12-31T23:59:59Z",
        "eventActor" : "joe@example.com"
      }
    ]
  }
                    
                </artwork>
            </figure>
            <t>
                <xref target="full_nameserver_example"/> is an example of a nameserver object with
                all values given. Registries using a first-class nameserver data model would embed
                this in domain objects as well as allowing references to it with the "/nameserver"
                query type (all depending on the registry operators policy). Other registries may
                pare back the information as needed. <xref target="simplest_nameserver_example"/> is
                an example of a nameserver object as would be found in RIRs and some DNRs, while
                    <xref target="near_simplest_nameserver_example"/> is an example of a nameserver
                object as would be found in other DNRs. </t>
            <figure anchor="simplest_nameserver_example">
                <preamble>The following is an example of the simplest nameserver object:</preamble>
                <artwork xml:space="preserve">
                    
  {
    "objectClassName" : "nameserver",
    "ldhName" : "ns1.example.com"
  }
                    
                </artwork>
            </figure>
            <figure anchor="near_simplest_nameserver_example">
                <preamble>The following is an example of a simple nameserver object that might be
                    commonly used by DNRs:</preamble>
                <artwork xml:space="preserve">
                    
  {
    "objectClassName" : "nameserver",
    "ldhName" : "ns1.example.com",
    "ipAddresses" : { "v6" : [ "2001:db8::123", "2001:db8::124" ] }
  }
                    
                </artwork>
            </figure>
            <t>
                As nameservers can be modeled by some registries to be first-class objects,
                they may also have an array of <xref target="entity_object_class">entities</xref>
                embedded to signify parties responsible for the maintenance, registrations, etc.,
                of the nameservers.
            </t>
            <figure anchor="nameserver_with_entities_example">
                <preamble>The following is an elided example of a nameserver with embedded entities.</preamble>
                <artwork xml:space="preserve">
                    
{
  "objectClassName" : "nameserver",
  "handle" : "XXXX",
  "ldhName" : "ns1.xn--fo-5ja.example",
  ...
  "entities" : 
  [
    ...
  ],
  ...  
}
                    
                </artwork>
            </figure>
            <t> The nameserver object class can contain the following members: <list style="symbols">
                    <t>objectClassName -- the string "nameserver"</t>
                    <t>handle -- a string representing a registry unique identifier of the
                        nameserver</t>
                    <t>ldhName -- a string containing the LDH name of the nameserver
                       (see <xref target="common_data_types"></xref>)</t>
                    <t>unicodeName -- a string containing a DNS Unicode name of the nameserver
                       (see <xref target="common_data_types"></xref>)</t>
                    <t>ipAddresses -- an object containing the following members:
                        <list style="symbols">
                            <t>v6 -- an array of strings containing IPv6 addresses of the nameserver</t>
                            <t>v4 -- an array of strings containing IPv4 addresses of the nameserver</t>
                        </list>
                    </t>
                    <t>entities -- an array of entity objects as defined by <xref
                    target="entity_object_class"/></t>
                    <t>status -- see <xref target="status"></xref></t>
                    <t>remarks -- see <xref target="notices_and_remarks"></xref></t>
                    <t>links -- see <xref target="links"></xref></t>
                    <t>port43 -- see <xref target="port43"></xref></t>
                    <t>events -- see <xref target="events"></xref></t>
                </list>
            </t>
        </section>
        <section title="The Domain Object Class" anchor="domain_object_class">
            <t> The domain object class represents a DNS name and point of delegation. For RIRs,
                these delegation points are in the reverse DNS tree, whereas for DNRs, these
                delegation points are in the forward DNS tree.
            </t>
            <t> In both cases, the high-level structure of the domain object class consists of
                information about the domain registration, nameserver information related to the
                domain name, and entities related to the domain name (e.g., registrant information,
                contacts, etc.). </t>
            <figure anchor="example_elided_domain">
                <preamble>The following is an elided example of the domain object showing the high-level
                    structure:</preamble>
                <artwork xml:space="preserve">
                    
{
  "objectClassName" : "domain",
  "handle" : "XXX",
  "ldhName" : "blah.example.com",
  ...
  "nameservers" : 
  [
    ...
  ],
  ...
  "entities" : 
  [
    ...
  ]  
}
                    
                </artwork>
            </figure>
            <t> The domain object class can contain the following members: <list
                style="symbols">
                <t>objectClassName -- the string "domain"</t>
                <t>handle -- a string representing a registry unique identifier of the
                    domain object instance</t>
                <t>ldhName -- a string describing a domain name in LDH form as
                    described in <xref target="common_data_types"></xref></t>
                <t>unicodeName -- a string containing a domain name with U-labels as
                    described in <xref target="common_data_types"></xref></t>
                <t>variants -- an array of objects, each containing the following values:
                    <list style="symbols">
                        <t>relation -- an array of strings, with each string denoting the
                            relationship between the variants and the containing domain
                            object (see <xref target="variant_relations"></xref> for a
                            list of suggested variant relations).</t>
                        <t>idnTable -- the name of the Internationalized Domain Name (IDN) table of codepoints, such as
                            one listed with the IANA (see <xref target="IANA_IDNTABLES">IDN tables</xref>).</t>
                        <t>variantNames -- an array of objects, with each object containing
                            an "ldhName" member and a "unicodeName" member 
                            (see <xref target="common_data_types"></xref>).</t>
                    </list>
                </t>
                <t>nameservers -- an array of nameserver objects as defined by <xref
                    target="nameserver_object_class"/></t>
                <t>
                    secureDNS -- an object with the following members:
                    <list style="symbols">
                        <t>zoneSigned -- true if the zone has been signed, false otherwise.</t>
                        <t>delegationSigned -- boolean true if there are DS records in the
                            parent, false otherwise.</t>
                        <t>maxSigLife -- an integer representing the signature lifetime in seconds to be used when creating
                            the RRSIG DS record in the parent zone <xref target="RFC5910"></xref>.</t>
                        <t>dsData -- an array of objects, each with the following members:
                          <list style="symbols">
                            <t>keyTag -- an integer as specified by the key tag field of a DNS
                            DS record as specified by <xref target="RFC4034"></xref> in presentation format</t>
                            <t>algorithm -- an integer as specified by the algorithm field of a
                            DNS DS record as described by RFC 4034 in presentation format</t>
                            <t>digest -- a string as specified by the digest field of a DNS DS
                            record as specified by RFC 4034 in presentation format</t>
                            <t>digestType -- an integer as specified by the digest type field of
                            a DNS DS record as specified by RFC 4034 in presentation
                            format</t>
                            <t>events -- see <xref target="events"></xref></t>
                            <t>links -- see <xref target="links"></xref></t>
                          </list></t>
                        <t>keyData -- an array of objects, each with the following members:
                          <list style="symbols">
                              <t>flags -- an integer representing the flags field value in the <xref target="RFC4034">DNSKEY record</xref>
                                  in presentation format</t>
                              <t>protocol -- an integer representation of the protocol field value of the 
                                  <xref target="RFC4034">DNSKEY record</xref> in presentation format</t>
                              <t>publicKey -- a string representation of the public key in the <xref target="RFC4034">DNSKEY record</xref>
                                  in presentation format</t>
                              <t>algorithm -- an integer as specified by the algorithm field of a
                                  DNSKEY record as specified by <xref target="RFC4034"></xref> in presentation format</t>
                              <t>events -- see <xref target="events"></xref></t>
                              <t>links -- see <xref target="links"></xref></t>                              
                          </list>
                        </t>
                    </list>
                    See <xref target="secure_dns"></xref> for background information on these objects.
                </t>
                <t>entities -- an array of entity objects as defined by <xref
                    target="entity_object_class"/></t>
                <t>status -- see <xref target="status"></xref></t>
                <t>publicIds -- see <xref target="public_ids"></xref></t>
                <t>remarks -- see <xref target="notices_and_remarks"></xref></t>
                <t>links -- see <xref target="links"></xref></t>
                <t>port43 -- see <xref target="port43"></xref></t>
                <t>events -- see <xref target="events"></xref></t>
                <t>network -- represents the IP network for which a reverse DNS domain is referenced. See <xref target="ip_network_object_class"></xref></t>
            </list>
            </t>
            
                <figure anchor="example_reverse_dns">
                    <preamble>The following is an example of a JSON domain object representing a reverse
                        DNS delegation point that might be served by an RIR.</preamble>
                    <artwork xml:space="preserve">
                    
{
  "objectClassName" : "domain",
  "handle" : "XXXX",
  "ldhName" : "0.2.192.in-addr.arpa",
  "nameservers" : 
  [ 
    { 
      "objectClassName" : "nameserver", 
      "ldhName" : "ns1.rir.example" 
    }, 
    { 
      "objectClassName" : "nameserver", 
      "ldhName" : "ns2.rir.example" 
    }
  ],
  "secureDNS":
  {
    "delegationSigned": true,
    "dsData":
    [
      {
        "keyTag": 12345,
        "algorithm": 3,
        "digestType": 1,
        "digest": "49FD46E6C4B45C55D4AC"
      }
    ]
  },
  "remarks" : 
  [
    {
      "description" : 
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]  
    }
  ],
  "links" : 
  [
    {
      "value": "http://example.net/domain/XXXX",
      "rel" : "self",
      "href" : "http://example.net/domain/XXXXX",
      "type" : "application/rdap+json"
    }
  ],
  "events" : 
  [
    {
      "eventAction" : "registration",
      "eventDate" : "1990-12-31T23:59:59Z"
    },
    {
      "eventAction" : "last changed",
      "eventDate" : "1991-12-31T23:59:59Z",
      "eventActor" : "joe@example.com"
    }
  ],
  "entities" : 
  [
    {
      "objectClassName" : "entity",
      "handle" : "XXXX",
      "vcardArray":[
        "vcard",
        [
          ["version", {}, "text", "4.0"],
          ["fn", {}, "text", "Joe User"],
          ["kind", {}, "text", "individual"],
          ["lang", {
            "pref":"1"
          }, "language-tag", "fr"],
          ["lang", {
            "pref":"2"
          }, "language-tag", "en"],
          ["org", {
            "type":"work"
          }, "text", "Example"],
          ["title", {}, "text", "Research Scientist"],
          ["role", {}, "text", "Project Lead"],
          ["adr",
            { "type":"work" },
            "text",
            [
              "",
              "Suite 1234",
              "4321 Rue Somewhere",
              "Quebec",
              "QC",
              "G1V 2M2",
              "Canada"
            ]
          ],
          ["tel",
            { "type":["work", "voice"], "pref":"1" },
            "uri", "tel:+1-555-555-1234;ext=102"
          ],
          ["email",
            { "type":"work" },
            "text", "joe.user@example.com"
          ]
        ]
      ],
      "roles" : [ "registrant" ],
      "remarks" : 
      [
        {
          "description" : 
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]  
        }
      ],
      "links" : 
      [
        {
          "value": "http://example.net/entity/xxxx",
          "rel" : "self",
          "href" : "http://example.net/entity/xxxx",
          "type" : "application/rdap+json"
        }
      ],
      "events" : 
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z",
          "eventActor" : "joe@example.com"
        }
      ]
    }        
  ],
  "network" :
  {
    "objectClassName" : "ip network",
    "handle" : "XXXX-RIR",
    "startAddress" : "192.0.2.0",
    "endAddress" : "192.0.2.255",
    "ipVersion" : "v6",
    "name": "NET-RTR-1",
    "type" : "DIRECT ALLOCATION",
    "country" : "AU",
    "parentHandle" : "YYYY-RIR",
    "status" : [ "active" ]
  }
} 
                    
                </artwork>
                </figure>
                <figure anchor="example_forward_dns">
                    <preamble>The following is an example of a JSON domain object representing a forward
                        DNS delegation point that might be served by a DNR.</preamble>
                    <artwork xml:space="preserve">
                    
{
  "objectClassName" : "domain",
  "handle" : "XXXX",
  "ldhName" : "xn--fo-5ja.example",
  "unicodeName" : "foo.example",
  "variants" : 
  [
    {
      "relation" : [ "registered", "conjoined" ],
      "variantNames" : 
      [
        { 
          "ldhName" : "xn--fo-cka.example", 
          "unicodeName" : "foo.example" 
        },
        { 
          "ldhName" : "xn--fo-fka.example",
          "unicodeName" : "foo.example"
        }
      ]
    },
    {
      "relation" : [ "unregistered", "registration restricted" ],
      "idnTable": ".EXAMPLE Swedish",
      "variantNames" : 
      [ 
        {
          "ldhName": "xn--fo-8ja.example", 
          "unicodeName" : "foo.example"
        }
      ]
    }
  ],
  "status" : [ "locked", "transfer prohibited" ],
  "publicIds":[
    {
      "type":"ENS_Auth ID",
      "identifier":"1234567890"
    }
  ],
  "nameservers" : 
  [
    {
      "objectClassName" : "nameserver",
      "handle" : "XXXX",
      "ldhName" : "ns1.example.com",
      "status" : [ "active" ],
      "ipAddresses" : 
      { 
        "v6": [ "2001:db8::123", "2001:db8::124" ],
        "v4": [ "192.0.2.1", "192.0.2.2" ]
      },
      "remarks" : 
      [
        {
          "description" : 
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]  
        }
      ],
      "links" : 
      [
        {
          "value" : "http://example.net/nameserver/XXXX",
          "rel" : "self",
          "href" : "http://example.net/nameserver/XXXX",
          "type" : "application/rdap+json"
        }
      ],
      "events" : 
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z"
        }
      ] 
    },
    {
      "objectClassName" : "nameserver",
      "handle" : "XXXX",
      "ldhName" : "ns2.example.com",
      "status" : [ "active" ],
      "ipAddresses" : 
      { 
        "v6" : [ "2001:db8::125", "2001:db8::126" ],
        "v4" : [ "192.0.2.3", "192.0.2.4" ]
      },
      "remarks" : 
      [
        {
          "description" : 
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]  
        }
      ],
      "links" : 
      [
        {
          "value" : "http://example.net/nameserver/XXXX",
          "rel" : "self",
          "href" : "http://example.net/nameserver/XXXX",
          "type" : "application/rdap+json"
        }
      ],
      "events" : 
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z"
        }
      ] 
    }
  ],
  "secureDNS":
  {
     "zoneSigned": true,
     "delegationSigned": true,
     "maxSigLife": 604800,
     "keyData":
     [
       {
         "flags": 257,
         "protocol": 3,
         "algorithm": 1,
         "publicKey": "AQPJ////4Q==",
         "events":
         [
           {
             "eventAction": "last changed",
             "eventDate": "2012-07-23T05:15:47Z"
           }
         ]
       }
     ]
  },
  "remarks" : 
  [
    {
      "description" : 
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]  
    }
  ],
  "links" : 
  [
    {
      "value": "http://example.net/domain/XXXX",
      "rel" : "self",
      "href" : "http://example.net/domain/XXXX",
      "type" : "application/rdap+json"
    }
  ],
  "port43" : "whois.example.net",
  "events" : 
  [
    {
      "eventAction" : "registration",
      "eventDate" : "1990-12-31T23:59:59Z"
    },
    {
      "eventAction" : "last changed",
      "eventDate" : "1991-12-31T23:59:59Z",
      "eventActor" : "joe@example.com"
    },
    {
      "eventAction" : "transfer",
      "eventDate" : "1991-12-31T23:59:59Z",
      "eventActor" : "joe@example.com"
    },
    {
      "eventAction" : "expiration",
      "eventDate" : "2016-12-31T23:59:59Z",
      "eventActor" : "joe@example.com"
    }
  ],
  "entities" : 
  [
    {
      "objectClassName" : "entity",
      "handle" : "XXXX",
      "vcardArray":[
        "vcard",
        [
          ["version", {}, "text", "4.0"],
          ["fn", {}, "text", "Joe User"],
          ["kind", {}, "text", "individual"],
          ["lang", {
            "pref":"1"
          }, "language-tag", "fr"],
          ["lang", {
            "pref":"2"
          }, "language-tag", "en"],
          ["org", {
            "type":"work"
          }, "text", "Example"],
          ["title", {}, "text", "Research Scientist"],
          ["role", {}, "text", "Project Lead"],
          ["adr",
            { "type":"work" },
            "text",
            [
              "",
              "Suite 1234",
              "4321 Rue Somewhere",
              "Quebec",
              "QC",
              "G1V 2M2",
              "Canada"
            ]
          ],
          ["tel",
            { "type":["work", "voice"], "pref":"1" },
            "uri", "tel:+1-555-555-1234;ext=102"
          ],
          ["email",
            { "type":"work" },
            "text", "joe.user@example.com"
          ]
        ]
      ],
      "status" : [ "validated", "locked" ],
      "roles" : [ "registrant" ],
      "remarks" : 
      [
        {
          "description" : 
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]  
        }
      ],
      "links" : 
      [
        {
          "value" : "http://example.net/entity/xxxx",
          "rel" : "self",
          "href" : "http://example.net/entity/xxxx",
          "type" : "application/rdap+json"
        }
      ],
      "events" : 
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z"
        }
      ]
    }        
  ]
} 
                    
                </artwork>
                </figure>


        </section>
        <section title="The IP Network Object Class" anchor="ip_network_object_class">
            <t> The IP network object class models IP network registrations found in RIRs and is the
                expected response for the "/ip" query as defined by <xref
                    target="RFC7482"/>. There is no equivalent object class for
                DNRs. The high-level structure of the IP network object class consists of
                information about the network registration and entities related to the IP network
                (e.g., registrant information, contacts, etc.). </t>
            <figure anchor="example_elided_ip">
                <preamble>The following is an elided example of the IP network object type showing
                    the high-level structure:</preamble>
                <artwork xml:space="preserve">
                    
{
  "objectClassName" : "ip network",
  "handle" : "XXX",
  ...
  "entities" : 
  [
    ...
  ]  
}
                    
                </artwork>
            </figure>
            <figure anchor="example_ip">
                <preamble>The following is an example of the JSON object for the network
                    registration information.</preamble>
                <artwork xml:space="preserve">
                        
{
  "objectClassName" : "ip network",
  "handle" : "XXXX-RIR",
  "startAddress" : "2001:db8::",
  "endAddress" : "2001:db8:0:ffff:ffff:ffff:ffff:ffff",
  "ipVersion" : "v6",
  "name": "NET-RTR-1",
  "type" : "DIRECT ALLOCATION",
  "country" : "AU",
  "parentHandle" : "YYYY-RIR",
  "status" : [ "active" ],
  "remarks" : 
  [
    {
      "description" : 
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]  
    }
  ],
  "links" : 
  [
    {
      "value" : "http://example.net/ip/2001:db8::/48",
      "rel" : "self",
      "href" : "http://example.net/ip/2001:db8::/48",
      "type" : "application/rdap+json"
    },
    {
      "value" : "http://example.net/ip/2001:db8::/48",
      "rel" : "up",
      "href" : "http://example.net/ip/2001:C00::/23",
      "type" : "application/rdap+json"
    }
  ],
  "events" : 
  [
    {
      "eventAction" : "registration",
      "eventDate" : "1990-12-31T23:59:59Z"
    },
    {
      "eventAction" : "last changed",
      "eventDate" : "1991-12-31T23:59:59Z"
    }
  ],
  "entities" : 
  [
    {
      "objectClassName" : "entity",
      "handle" : "XXXX",
      "vcardArray":[
        "vcard",
        [
          ["version", {}, "text", "4.0"],
          ["fn", {}, "text", "Joe User"],
          ["kind", {}, "text", "individual"],
          ["lang", {
            "pref":"1"
          }, "language-tag", "fr"],
          ["lang", {
            "pref":"2"
          }, "language-tag", "en"],
          ["org", {
            "type":"work"
          }, "text", "Example"],
          ["title", {}, "text", "Research Scientist"],
          ["role", {}, "text", "Project Lead"],
          ["adr",
            { "type":"work" },
            "text",
            [
              "",
              "Suite 1234",
              "4321 Rue Somewhere",
              "Quebec",
              "QC",
              "G1V 2M2",
              "Canada"
            ]
          ],
          ["tel",
            { "type":["work", "voice"], "pref":"1" },
            "uri", "tel:+1-555-555-1234;ext=102"
          ],
          ["email",
            { "type":"work" },
            "text", "joe.user@example.com"
          ]
        ]
      ],
      "roles" : [ "registrant" ],
      "remarks" : 
      [
        {
          "description" : 
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]  
        }
      ],
      "links" : 
      [
        {
          "value" : "http://example.net/entity/xxxx",
          "rel" : "self",
          "href" : "http://example.net/entity/xxxx",
          "type" : "application/rdap+json"
        }
      ],
      "events" : 
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z"
        }
      ]
    }        
  ]
}

                    </artwork>
            </figure>
            <t> The IP network object class can contain the following members: <list style="symbols">
                    <t>objectClassName -- the string "ip network"</t>
                    <t>handle -- a string representing an RIR-unique identifier of the network
                        registration</t>
                    <t>startAddress -- the starting IP address of the network, either IPv4 or
                        IPv6</t>
                    <t>endAddress -- the ending IP address of the network, either IPv4 or IPv6</t>
                    <t>ipVersion -- a string signifying the IP protocol version of the network: "v4"
                        signifies an IPv4 network, and "v6" signifies an IPv6 network</t>
                    <t>name -- an identifier assigned to the network registration by the
                        registration holder</t>
                    <t>type -- a string containing an RIR-specific classification of the network</t>
                    <t>country -- a string containing the two-character country code of
                        the network </t>
                    <t>parentHandle -- a string containing an RIR-unique identifier of the parent
                        network of this network registration</t>
                    <t>status -- an array of strings indicating the state of the IP network</t>
                    <t>entities -- an array of entity objects as defined by <xref
                            target="entity_object_class"/></t>
                <t>remarks -- see <xref target="notices_and_remarks"></xref></t>
                <t>links -- see <xref target="links"></xref></t>
                <t>port43 -- see <xref target="port43"></xref></t>
                <t>events -- see <xref target="events"></xref></t>
                
                </list>
            </t>
        </section>
        <section title="Autonomous System Number Entity Object Class"
            anchor="as_entity_object_class">
            <t> The Autonomous System number (autnum) object class models Autonomous System number
                registrations found in RIRs and represents the expected response to an "/autnum" query
                as defined by <xref target="RFC7482"/>. There is no equivalent
                object class for DNRs. The high-level structure of the autnum object class consists
                of information about the network registration and entities related to the autnum
                registration (e.g., registrant information, contacts, etc.) and is similar to the
                IP network entity object class.</t>
            <figure anchor="example_autnum">
                <preamble>The following is an example of a JSON object representing an
                    autnum.</preamble>
                <artwork xml:space="preserve">
                        
{
  "objectClassName" : "autnum",
  "handle" : "XXXX-RIR",
  "startAutnum" : 10,
  "endAutnum" : 15,
  "name": "AS-RTR-1",
  "type" : "DIRECT ALLOCATION",
  "status" : [ "active" ],
  "country": "AU",
  "remarks" : 
  [
    {
      "description" : 
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]  
    }
  ],
  "links" : 
  [
    {
      "value" : "http://example.net/autnum/xxxx",
      "rel" : "self",
      "href" : "http://example.net/autnum/xxxx",
      "type" : "application/rdap+json"
    }
  ],
  "events" : 
  [
    {
      "eventAction" : "registration",
      "eventDate" : "1990-12-31T23:59:59Z"
    },
    {
      "eventAction" : "last changed",
      "eventDate" : "1991-12-31T23:59:59Z"
    }
  ],
  "entities" : 
  [
    {
      "objectClassName" : "entity",
      "handle" : "XXXX",
      "vcardArray":[
        "vcard",
        [
          ["version", {}, "text", "4.0"],
          ["fn", {}, "text", "Joe User"],
          ["kind", {}, "text", "individual"],
          ["lang", {
            "pref":"1"
          }, "language-tag", "fr"],
          ["lang", {
            "pref":"2"
          }, "language-tag", "en"],
          ["org", {
            "type":"work"
          }, "text", "Example"],
          ["title", {}, "text", "Research Scientist"],
          ["role", {}, "text", "Project Lead"],
          ["adr",
            { "type":"work" },
            "text",
            [
              "",
              "Suite 1234",
              "4321 Rue Somewhere",
              "Quebec",
              "QC",
              "G1V 2M2",
              "Canada"
            ]
          ],
          ["tel",
            { "type":["work", "voice"], "pref":"1" },
            "uri", "tel:+1-555-555-1234;ext=102"
          ],
          ["email",
            { "type":"work" },
            "text", "joe.user@example.com"
          ]
        ]
      ],
      "roles" : [ "registrant" ],
      "remarks" : 
      [
        {
          "description" : 
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]  
        }
      ],
      "links" : 
      [
        {
          "value" : "http://example.net/entity/XXXX",
          "rel" : "self",
          "href" : "http://example.net/entity/XXXX",
          "type" : "application/rdap+json"
        }
      ],
      "events" : 
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z"
        }
      ]
    }        
  ]
}
                        
                    </artwork>
            </figure>
            <t> The Autonomous System number object class can contain the following members: <list style="symbols">
                    <t>objectClassName -- the string "autnum"</t>
                    <t>handle -- a string representing an RIR-unique identifier of the autnum
                        registration</t>
                    <t>startAutnum -- a number representing the <xref target="RFC5396">starting number</xref> in the block
                        of Autonomous System numbers</t>
                    <t>endAutnum -- a number representing the <xref target="RFC5396">ending number</xref> in the block of
                        Autonomous System numbers</t>
                    <t>name -- an identifier assigned to the autnum registration by the registration
                        holder</t>
                    <t>type -- a string containing an RIR-specific classification of the autnum</t>
                    <t>status -- an array of strings indicating the state of the autnum</t>
                    <t>country -- a string containing the name of the two-character country code of
                        the autnum </t>
                <t>entities -- an array of entity objects as defined by <xref
                    target="entity_object_class"/></t>
                <t>remarks -- see <xref target="notices_and_remarks"></xref></t>
                <t>links -- see <xref target="links"></xref></t>
                <t>port43 -- see <xref target="port43"></xref></t>
                <t>events -- see <xref target="events"></xref></t>
                
                </list></t>
        </section>
            
        </section>
        <section title="Error Response Body" anchor="error_body">
            <t> Some non-answer responses may return entity bodies with information that could be
                more descriptive. </t>
            <t> The basic structure of that response is an object class containing an error code
                number (corresponding to the HTTP response code) followed by a string named "title"
                and an array of strings named "description". </t>
            <figure anchor="json_error">
                <preamble>This is an example of the common response
                    body.</preamble>

                <artwork xml:space="preserve">                    
{
  "errorCode": 418,
  "title": "Your Beverage Choice is Not Available",
  "description": 
  [
    "I know coffee has more ummppphhh.",
    "Sorry, dude!" 
  ]
}
                </artwork>
            </figure>

           
            <figure anchor="json_error_full">
                <preamble>This is an example of the common response
                    body with an rdapConformance and notices data structures:</preamble>

                <artwork xml:space="preserve">                    
{
  "rdapConformance" : 
  [
    "rdap_level_0"
  ],
  "notices" : 
  [
    {
      "title" : "Beverage Policy",
      "description" : 
      [
        "Beverages with caffeine for keeping horses awake."
      ],
      "links" : 
      [
        {
          "value" : "http://example.net/ip/192.0.2.0/24",
          "rel" : "alternate",
          "type" : "text/html",
          "href" : "http://www.example.com/redaction_policy.html"
        }
      ]
    }
  ],
  "lang" : "en",
  "errorCode": 418,
  "title": "Your beverage choice is not available",
  "description": 
  [
    "I know coffee has more ummppphhh.",
    "Sorry, dude!" 
  ]
}
                </artwork>
            </figure>
            
        </section>
        <section title="Responding to Help Queries">
            <t>
                The appropriate response to /help queries as defined by <xref target="RFC7482"/>
                is to use the notices structure as defined in <xref target="notices_and_remarks"></xref>.
            </t>
            <figure anchor="help_full_example">
                <preamble>This is an example of a response to a /help query including the rdapConformance data structure.</preamble>
                <artwork xml:space="preserve">                    
{
  "rdapConformance" : 
  [
    "rdap_level_0"
  ],
  "notices" : 
  [
    {
      "title" : "Authentication Policy",
      "description" : 
      [
        "Access to sensitive data for users with proper credentials."
      ],
      "links" : 
      [
        {
          "value" : "http://example.net/help",
          "rel" : "alternate",
          "type" : "text/html",
          "href" : "http://www.example.com/auth_policy.html"
        }
      ]
    }
  ]
}
                </artwork>
            </figure>
        </section>
        <section title="Responding To Searches" anchor="responding_searches">
            <t>
                 <xref target="RFC7482"></xref> specifies three types of searches: 
                domains, nameservers, and entities.
                Responses to these searches take the form of an array of object instances where each instance is an appropriate
                object class for the search (i.e., a search for /domains yields an array of domain object instances). These arrays
                are contained within the response object.
            </t>
            <t>
                The names of the arrays are as follows:
                <list style="symbols">
                    <t>for /domains searches, the array is "domainSearchResults"</t>
                    <t>for /nameservers searches, the array is "nameserverSearchResults"</t>
                    <t>for /entities searches, the array is "entitySearchResults"</t>
                </list>
            </t>

            <figure anchor="search_response_example">
                <preamble>The following is an elided example of a response to a /domains search.</preamble>
                <artwork xml:space="preserve">

{
  "rdapConformance" :
  [
    "rdap_level_0"
  ],
  ...
  "domainSearchResults" :
  [
    {
      "objectClassName" : "domain",
      "handle" : "1-XXXX",
      "ldhName" : "1.example.com",
      ...
    },
    {
      "objectClassName" : "domain",
      "handle" : "2-XXXX",
      "ldhName" : "2.example.com",
      ...
    }
  ]
}

                </artwork>
            </figure>
        </section>
        <section title="Indicating Truncated Responses" anchor="truncated_responses">
            <t>
                In cases where the data of a response needs to be limited or parts of the data
                need to be omitted, the response is considered "truncated". A truncated response
                is still valid JSON, but some of the results in a search set or some of the
                data in an object are not provided by the server.
                A server may indicate this by including
                a typed notice in the response object.
            </t>
            <figure anchor="search_response_truncated_example">
                <preamble>The following is an elided example of a search response that has been truncated.</preamble>
                <artwork xml:space="preserve">

{
  "rdapConformance" :
  [
    "rdap_level_0"
  ],
  "notices" : 
  [
    {
      "title" : "Search Policy",
      "type" : "result set truncated due to authorization",
      "description" : 
      [
        "Search results are limited to 25 per day per querying IP."
      ],
      "links" : 
      [
        {
          "value" : "http://example.net/help",
          "rel" : "alternate",
          "type" : "text/html",
          "href" : "http://www.example.com/search_policy.html"
        }
      ]
    }
  ],
  "domainSearchResults" :
  [
    ...
  ]
}

                </artwork>
            </figure>
            <t>
                A similar technique can be used with a typed remark where a single object has been returned
                and data in that object has been truncated. Such an example might be an entity object
                with only a partial set of the IP networks associated with it.
            </t>
            <figure anchor="entity_with_results_truncated">
                <preamble>The following is an elided example of an entity truncated data.</preamble>
                <artwork xml:space="preserve">
                    
{
  "objectClassName" : "entity",
  "handle" : "ANENTITY",
  "roles" : [ "registrant" ],
  ...
  "entities" : 
  [
    {
      "objectClassName" : "entity",
      "handle": "ANEMBEDDEDENTITY",
      "roles" : [ "technical" ],
      ...
    },
    ...
  ],
  "networks" :
  [
    ...
  ],
  ...  
  "remarks" : 
  [
    {
      "title" : "Data Policy",
      "type" : "object truncated due to unexplainable reason",
      "description" : 
      [
        "Some of the data in this object has been removed."
      ],
      "links" : 
      [
        {
          "value" : "http://example.net/help",
          "rel" : "alternate",
          "type" : "text/html",
          "href" : "http://www.example.com/data_policy.html"
        }
      ]
    }
  ]
}
                    
                </artwork>
            </figure>
        </section>
        <section title="IANA Considerations" anchor="iana_considerations">
            <section title="RDAP JSON Media Type Registration">
                <t> This specification registers the "application/rdap+json" media type. <list>
                    <t>Type name: application</t>
                    <t>Subtype name: rdap+json</t>
                    <t>Required parameters: n/a</t>
                    <t>Encoding considerations: See Section 3.1 of <xref target="RFC6839"></xref>.</t>
                    <t>Security considerations: The media represented by this identifier does not have security considerations beyond that found in Section 6 of <xref target="RFC7159"></xref>.</t>
                    <t>Interoperability considerations: There are no known interoperability problems regarding this media format.</t>
                    <t>Published specification: RFC 7483</t>
                    <t>Applications that use this media type: Implementations of the Registration Data Access Protocol (RDAP).</t>
                    <t>Additional information: This media type is a product of the IETF
                        WEIRDS working group. The WEIRDS charter, information on the WEIRDS
                        mailing list, and other documents produced by the WEIRDS working group can
                        be found at 
<vspace/>
&lt;https://datatracker.ietf.org/wg/weirds/&gt;.</t>
                    <t>Person &amp; email address to contact for further information: IESG
                        &lt;iesg@ietf.org&gt;</t>
                    <t>Intended usage: COMMON</t>
                    <t>Restrictions on usage: none</t>
                    <t>Author: Andy Newton</t>
                    <t>Change controller: IETF</t>
                    <t>Provisional Registration: No (upon publication of this RFC)</t>
                </list>
                </t>
            </section>
            <section title="JSON Values Registry">
            <t>
                 IANA has created a category in the protocol
                registries labeled "Registration Data Access Protocol (RDAP)", and within that
                category, IANA has established a URL-referenceable, stand-alone registry labeled
                "RDAP JSON Values". This new registry is for use in the 
                <xref target="notices_and_remarks">notices and remarks</xref>, 
                <xref target="status">status</xref>, <xref target="entity_object_class">role</xref>,
                <xref target="events">event action</xref>, and <xref target="domain_object_class">domain variant relation</xref>
                fields specified in RDAP.
            </t>
            <t>
                Each entry in the registry contains the following fields:
                <list style="numbers">
                    <t>Value -- the string value being registered.</t>
                    <t>Type -- the type of value being registered. It should be one of the following:
                    <list style="symbols">
                        <t>"notice or remark type" -- denotes a type of notice or remark.</t>
                        <t>"status" -- denotes a value for the "status" object member as defined by <xref target="status"></xref>.</t>
                        <t>"role" -- denotes a value for the "role" array as defined in <xref target="entity_object_class"></xref>.</t>
                        <t>"event action" -- denotes a value for an event action as defined in <xref target="events"></xref>.</t>
                        <t>"domain variant relation" -- denotes a relationship between a domain and a domain variant as
                        defined in <xref target="domain_object_class"></xref>.</t>
                    </list>
                    </t>
                    <t>Description -- a one- or two-sentence description regarding the meaning of the value, how it might be used, and/or
                    how it should be interpreted by clients.</t>
                    <t>Registrant Name -- the name of the person registering the value.</t>
                    <t>Registrant Contact Information -- an email address, postal address, or some other information to be used
                    to contact the registrant.</t>
                </list>
            </t>
            <t>
                This registry is operated under the "Expert Review" policy defined in <xref target="RFC5226"></xref>.
            </t>
            <t>
                Review of registrations into this registry by the designated expert(s) should be narrowly judged on the following
                criteria:
                <list style="numbers">
                  <t>
                      Values in need of being placed into multiple types must be assigned a separate registration
                      for each type.
                  </t>
                    <t>
                        Values must be strings. They should be multiple words separated by single space characters. Every character
                    should be lowercased. If possible, every word should be given in English and each character should be US-ASCII.
                    </t>
                    <t>
                        Registrations should not duplicate the meaning of any existing registration. That is, if a request for
                        a registration is significantly similar in nature to an existing registration, the request should be denied.
                        For example, the terms "maintainer" and "registrant" are significantly similar in nature as they both
                        denote a holder of a domain name or Internet number resource. In cases where it may be reasonably argued
                        that machine interpretation of two similar values may alter the operation of client software, designated experts
                        should not judge the values to be of significant similarity.
                    </t>
                    <t>
                        Registrations should be relevant to the common usages of RDAP. Designated experts may rely upon the serving
                        of the value by a DNR or RIR to make this determination.
                    </t>
                </list>
            </t>
                <t>
                    The following sections provide initial
                    registrations into this registry.
                </t>
                <section title="Notice and Remark Types" anchor="notice_remark_type_registrations">
                    <t>The following values have been registered in the "RDAP JSON Values"
                        registry: <list style="numbers">
                            <t>
                                <list style="symbols">
                                    <t>Value: result set truncated due to authorization</t>
                                    <t>Type: notice and remark type</t>
                                    <t>Description: The list of results does not contain all results due to lack of authorization.
                                           This may indicate to some clients that proper authorization will yield a longer result
                                           set.</t>
                                    <t>Registrant Name: IESG</t>
                                    <t>Registrant Contact Information: iesg@ietf.org</t>
                                </list>
                            </t>
                            <t>
                                <list style="symbols">
                                    <t>Value: result set truncated due to excessive load</t>
                                    <t>Type: notice and remark type</t>
                                    <t>Description: The list of results does not contain all results due to an excessively heavy load on the server.
                                        This may indicate to some clients that requerying at a later time will yield a longer result
                                        set.</t>
                                    <t>Registrant Name: IESG</t>
                                    <t>Registrant Contact Information: iesg@ietf.org</t>
                                </list>
                            </t>
                            <t>
                                <list style="symbols">
                                    <t>Value: result set truncated due to unexplainable reasons</t>
                                    <t>Type: notice and remark type</t>
                                    <t>Description: The list of results does not contain all results for an unexplainable reason.
                                        This may indicate to some clients that requerying for any reason will not yield a longer result set.</t>
                                    <t>Registrant Name: IESG</t>
                                    <t>Registrant Contact Information: iesg@ietf.org</t>
                                </list>
                            </t>
                            <t>
                                <list style="symbols">
                                    <t>Value: object truncated due to authorization</t>
                                    <t>Type: notice and remark type</t>
                                    <t>Description: The object does not contain all data due to lack of authorization.
                                        </t>
                                    <t>Registrant Name: IESG</t>
                                    <t>Registrant Contact Information: iesg@ietf.org</t>
                                </list>
                            </t>
                            <t>
                                <list style="symbols">
                                    <t>Value: object truncated due to excessive load</t>
                                    <t>Type: notice and remark type</t>
                                    <t>Description: The object does not contain all data due to an excessively heavy load on the server.
                                        This may indicate to some clients that requerying at a later time will yield all data of the object.</t>
                                    <t>Registrant Name: IESG</t>
                                    <t>Registrant Contact Information: iesg@ietf.org</t>
                                </list>
                            </t>
                            <t>
                                <list style="symbols">
                                    <t>Value: object truncated due to unexplainable reasons</t>
                                    <t>Type: notice and remark type</t>
                                    <t>Description: The object does not contain all data for an unexplainable reason.
                                        </t>
                                    <t>Registrant Name: IESG</t>
                                    <t>Registrant Contact Information: iesg@ietf.org</t>
                                </list>
                            </t>
                        </list>
                    </t>
                </section>
            <section title="Status" anchor="status_registrations">
                <t>The following values have been registered in the "RDAP JSON Values" registry:
                    <list style="numbers">
                        <t>
                            <list style="symbols">
                                <t>Value: validated</t>
                                <t>Type: status</t>
                                <t>Description: Signifies that the data of the object instance has been
                                    found to be accurate. This type of status is usually found on entity
                                    object instances to note the validity of identifying contact
                                    information.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: renew prohibited</t>
                                <t>Type: status</t>
                                <t>Description: Renewal or reregistration of the object instance is forbidden.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: update prohibited</t>
                                <t>Type: status</t>
                                <t>Description: Updates to the object instance are forbidden.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: transfer prohibited</t>
                                <t>Type: status</t>
                                <t>Description: Transfers of the registration from one registrar
                                    to another are forbidden. This type of status normally applies to DNR
                                    domain names.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: delete prohibited</t>
                                <t>Type: status</t>
                                <t>Description: Deletion of the registration of the object
                                    instance is forbidden. This type of status normally applies to DNR
                                    domain names.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: proxy</t>
                                <t>Type: status</t>
                                <t>Description: The registration of the object instance has been performed
                                    by a third party. This is most commonly applied to entities.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: private</t>
                                <t>Type: status</t>
                                <t>Description: The information of the object instance is not designated
                                    for public consumption. This is most commonly applied to entities.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: removed</t>
                                <t>Type: status</t>
                                <t>Description: Some of the information of the object instance has not
                                    been made available and has been removed. This is most commonly applied to entities.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: obscured</t>
                                <t>Type: status</t>
                                <t>Description: Some of the information of the object instance has been
                                    altered for the purposes of not readily revealing the actual information
                                    of the object instance. This is most commonly applied to entities.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: associated</t>
                                <t>Type: status</t>
                                <t>Description: The object instance is associated with other object instances
                                in the registry. This is most commonly used to signify that a nameserver is
                                associated with a domain or that an entity is associated with a network resource
                                or domain.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: active</t>
                                <t>Type: status</t>
                                <t>Description: The object instance is in use. For domain names, it signifies
                                that the domain name is published in DNS. For network and autnum registrations,
                                it signifies that they are allocated or assigned for use in operational networks.
                                This maps to the "OK" status of the Extensible Provisioning Protocol (EPP) <xref target="RFC5730"></xref> .</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: inactive</t>
                                <t>Type: status</t>
                                <t>Description: The object instance is not in use. See "active".</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: locked</t>
                                <t>Type: status</t>
                                <t>Description: Changes to the object instance cannot be made, including the association of other
                                object instances.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: pending create</t>
                                <t>Type: status</t>
                                <t>Description: A request has been received for the creation of the object instance, but
                                this action is not yet complete.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: pending renew</t>
                                <t>Type: status</t>
                                <t>Description: A request has been received for the renewal of the object instance, but
                                    this action is not yet complete.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: pending transfer</t>
                                <t>Type: status</t>
                                <t>Description: A request has been received for the transfer of the object instance, but
                                    this action is not yet complete.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: pending update</t>
                                <t>Type: status</t>
                                <t>Description: A request has been received for the update or modification of the object instance, but
                                    this action is not yet complete.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: pending delete</t>
                                <t>Type: status</t>
                                <t>Description: A request has been received for the deletion or removal of the object instance, but
                                    this action is not yet complete. For domains, this might mean that the name is no longer published
                                in DNS but has not yet been purged from the registry database.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>                        
                    </list>
                </t>
            </section>
            <section title="Event Actions" anchor="event_action_registrations">
                <t>The following values have been registered in the "RDAP JSON Values" registry:
                    <list style="numbers">
                        <t>
                            <list style="symbols">
                                <t>Value: registration</t>
                                <t>Type: event action</t>
                                <t>Description: The object instance was initially registered.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: reregistration</t>
                                <t>Type: event action</t>
                                <t>Description: The object instance was registered subsequently to initial registration.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: last changed</t>
                                <t>Type: event action</t>
                                <t>Description: An action noting when the information in the object instance was last changed.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: expiration</t>
                                <t>Type: event action</t>
                                <t>Description: The object instance has been removed or will be removed at a predetermined
                                    date and time from the registry.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: deletion</t>
                                <t>Type: event action</t>
                                <t>Description: The object instance was removed from the registry at a point in time that was not predetermined.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: reinstantiation</t>
                                <t>Type: event action</t>
                                <t>Description: The object instance was reregistered after having been
                                    removed from the registry.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: transfer</t>
                                <t>Type: event action</t>
                                <t>Description: The object instance was transferred from one registrant to another.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: locked</t>
                                <t>Type: event action</t>
                                <t>Description: The object instance was locked (see the "locked" status).</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: unlocked</t>
                                <t>Type: event action</t>
                                <t>Description: The object instance was unlocked (see the "locked" status).</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        
                    </list>
                </t>
            </section>
            <section title="Roles" anchor="role_registrations">
                <t>The following values have been registered in the "RDAP JSON Values" registry:
                    <list style="numbers">
                        <t>
                            <list style="symbols">
                                <t>Value: registrant</t>
                                <t>Type: role</t>
                                <t>Description: The entity object instance is the registrant of the
                                    registration. In some registries, this is known as a maintainer.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: technical</t>
                                <t>Type: role</t>
                                <t>Description: The entity object instance is a technical contact for the
                                    registration.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: administrative</t>
                                <t>Type: role</t>
                                <t>Description: The entity object instance is an administrative contact for
                                    the registration.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: abuse</t>
                                <t>Type: role</t>
                                <t>Description: The entity object instance handles network abuse issues on
                                    behalf of the registrant of the registration.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: billing</t>
                                <t>Type: role</t>
                                <t>Description: The entity object instance handles payment and billing
                                    issues on behalf of the registrant of the registration.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: registrar</t>
                                <t>Type: role</t>
                                <t>Description: The entity object instance represents the authority
                                    responsible for the registration in the registry.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: reseller</t>
                                <t>Type: role</t>
                                <t>Description: The entity object instance represents a third party
                                    through which the registration was conducted (i.e., not the registry or registrar).</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: sponsor</t>
                                <t>Type: role</t>
                                <t>Description: The entity object instance represents a domain policy
                                    sponsor, such as an ICANN-approved sponsor.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: proxy</t>
                                <t>Type: role</t>
                                <t>Description: The entity object instance represents a proxy for another
                                entity object, such as a registrant.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: notifications</t>
                                <t>Type: role</t>
                                <t>Description: An entity object instance designated to receive notifications about
                                association object instances.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: noc</t>
                                <t>Type: role</t>
                                <t>Description: The entity object instance handles communications related to a
                                network operations center (NOC).</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                    </list>
                </t>
            </section>
            <section title="Variant Relations" anchor="variant_relations">
                <t>The following values have been registered in the "RDAP JSON Values" registry:
                    <list style="numbers">
                        <t>
                            <list style="symbols">
                                <t>Value: registered</t>
                                <t>Type: domain variant relation</t>
                                <t>Description: The variant names are registered in the registry.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: unregistered</t>
                                <t>Type: domain variant relation</t>
                                <t>Description: The variant names are not found in the registry.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: registration restricted</t>
                                <t>Type: domain variant relation</t>
                                <t>Description: Registration of the variant names is
                                    restricted to certain parties or within certain rules.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: open registration</t>
                                <t>Type: domain variant relation</t>
                                <t>Description: Registration of the variant names is available to
                                    generally qualified registrants.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="symbols">
                                <t>Value: conjoined</t>
                                <t>Type: domain variant relation</t>
                                <t>Description: Registration of the variant names occurs automatically with the
                                    registration of the containing domain registration.</t>
                                <t>Registrant Name: IESG</t>
                                <t>Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                    </list>
                </t>
            </section>
            </section>
        </section>
        <section title="Security Considerations" anchor="security_considerations">
            <t>
                This specification models information serialized in JSON format.
                As JSON is a subset of JavaScript, implementations are advised to
                follow the security considerations outlined in Section 6 of <xref target="RFC7159"></xref>
                to prevent code injection.
            </t>
            <t>
                Though not specific to JSON, RDAP implementers should be aware of the
                security considerations specified in <xref target="RFC7480"></xref>
                and the security requirements and considerations in <xref target="RFC7481"></xref>.
            </t>
            <t>
                Clients caching data, especially clients using RDAP-specific caches
                (instead of HTTP-layer caches), should have safeguards to prevent cache
                poisoning. See <xref target="object_classes"></xref> for advice on using
                the self links for caching.
            </t>
            <t>
                Finally, service operators should be aware of the privacy mechanisms noted in
                <xref target="privacy_considerations"></xref>.
            </t>
        </section>
        <section title="Internationalization Considerations"
            anchor="internationalization_considerations">
            <section title="Character Encoding">
                <t> The default text encoding for JSON responses in RDAP is UTF-8 <xref target="RFC3629"/>, and all
                    servers and clients MUST support UTF-8.</t>
            </section>
            <section title="URIs and IRIs">
                <t>
                    <xref target="RFC7480"/> defines the use of URIs and IRIs in
                    RDAP. </t>
            </section>
            <section title="Language Tags">
                <t>
                    <xref target="language_identifier"/> defines the use of language tags in the
                    JSON responses defined in this document. </t>
            </section>
            <section title="Internationalized Domain Names">
                <t>
                    IDNs are denoted in this specification by
                    the separation of DNS names in LDH form and Unicode form (see <xref target="common_data_types"></xref>).
                    Representation of IDNs in registries is described by the "variants" object in 
                    <xref target="domain_object_class"></xref> and the suggested values
                    listed in <xref target="variant_relations"></xref>.
                </t>
            </section>
        </section>
        <section title="Privacy Considerations" anchor="privacy_considerations">
            <t>
                This specification suggests status values to denote contact and
                registrant information that has been marked as private and/or has
                been removed or obscured.  See <xref target="status_registrations"></xref> for the complete list
                of status values.  A few of the status values indicate that there are privacy
                concerns associated with the object instance.  The following status codes SHOULD be used to describe data elements
                of a response when appropriate:
                <list>
                    <t>private -- The object is not be shared in query responses, unless
                    the user is authorized to view this information.</t>

                    <t>removed -- Data elements within the object have been collected
                    but have been omitted from the response. This option can be used to
                    prevent unauthorized access to associated object instances without
                    the need to mark them as private.</t>

                    <t>obscured -- Data elements within the object have been collected,
                    but the response value has been altered so that values are not easily
                    discernible. A value changed from "1212" to "XXXX" is an example of
                    obscured data. This option may reveal privacy sensitive information
                    and should only be used when data sensitivity does not require a more
                    protective option like "private" or "removed".</t>
                </list>
                
                
                See Appendix A.1 for an example of applying those values to
                contacts and registrants.
            </t>
        </section>
        
    </middle>
    <back>

        <references title="Normative References">

<reference anchor='RFC2119' target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
</author>
<date year='1997' month='March' />
<area>General</area>
</front>
<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723'  />
</reference>

<reference anchor='RFC3339' target='http://www.rfc-editor.org/info/rfc3339'>
<front>
<title>Date and Time on the Internet: Timestamps</title>
<author initials='G.' surname='Klyne' fullname='Graham Klyne' role='editor'>
<organization>Clearswift Corporation</organization>
</author>
<author initials='C.' surname='Newman' fullname='Chris Newman'>
<organization>Sun Microsystems</organization>
</author>
<date year='2002' month='July' />
</front>
<seriesInfo name='RFC' value='3339' />
</reference>

<reference anchor='RFC3629' target='http://www.rfc-editor.org/info/rfc3629'>
<front>
<title>UTF-8, a transformation format of ISO 10646</title>
<author initials='F.' surname='Yergeau' fullname='F. Yergeau'>
<organization /></author>
<date year='2003' month='November' />
</front>
<seriesInfo name='STD' value='63' />
<seriesInfo name='RFC' value='3629' />
</reference>

<reference anchor='RFC3986' target='http://www.rfc-editor.org/info/rfc3986'>
<front>
<title abbrev='URI Generic Syntax'>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='Tim Berners-Lee'>
<organization abbrev='W3C/MIT'>World Wide Web Consortium</organization>
</author>
<author initials='R.' surname='Fielding' fullname='Roy T. Fielding'>
<organization abbrev='Day Software'>Day Software</organization>
</author>
<author initials='L.' surname='Masinter' fullname='Larry Masinter'>
<organization abbrev='Adobe Systems'>Adobe Systems Incorporated</organization>
</author>
<date year='2005' month='January' />
<area>Applications</area>
</front>
<seriesInfo name='STD' value='66' />
<seriesInfo name='RFC' value='3986' />
</reference>
     
&RFC4034;

<reference anchor='RFC5226'  target='http://www.rfc-editor.org/info/rfc5226'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'>
<organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'>
<organization /></author>
<date year='2008' month='May' />
</front>
<seriesInfo name='BCP' value='26' />
<seriesInfo name='RFC' value='5226' />
</reference>

&RFC5396; 

<reference anchor='RFC5646' target='http://www.rfc-editor.org/info/rfc5646'>
<front>
<title>Tags for Identifying Languages</title>
<author initials='A.' surname='Phillips' fullname='A. Phillips'>
<organization /></author>
<author initials='M.' surname='Davis' fullname='M. Davis'>
<organization /></author>
<date year='2009' month='September' />
</front>
<seriesInfo name='BCP' value='47' />
<seriesInfo name='RFC' value='5646' />
</reference>
&RFC5890; 
&RFC5952; 
&RFC5988; 
&RFC7095; 

<reference anchor='RFC7159' target='http://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray'>
<organization /></author>
<date year='2014' month='March' />
</front>
<seriesInfo name='RFC' value='7159' />
</reference>

<!--draft-ietf-weirds-using-http = 7480 -->
<reference anchor='RFC7480' target='http://www.rfc-editor.org/info/rfc7480'>
<front>
<title>HTTP Usage in the Registration Data Access Protocol (RDAP)</title>
<author initials='A' surname='Newton' fullname='Andrew Newton'>
    <organization />
</author>
<author initials='B' surname='Ellacott' fullname='Byron Ellacott'>
    <organization />
</author>
<author initials='N' surname='Kong' fullname='Ning Kong'>
    <organization />
</author>
<date month='February' year='2015' />
</front>
<seriesInfo name='RFC' value='7480' />
</reference>

<!--draft-ietf-weirds-rdap-query = 7482 -->
<reference anchor='RFC7482' target='http://www.rfc-editor.org/info/rfc7482'>
<front>
<title>Registration Data Access Protocol (RDAP) Query Format</title>
<author initials='A' surname='Newton' fullname='Andrew Newton'>
    <organization />
</author>
<author initials='S' surname='Hollenbeck' fullname='Scott Hollenbeck'>
    <organization />
</author>
<date month='February' year='2015' />
</front>
<seriesInfo name='RFC' value='7482' />
</reference>

<!--draft-ietf-weirds-rdap-sec = 7481 -->
<reference anchor='RFC7481' target='http://www.rfc-editor.org/info/rfc7481'>
<front>
<title>Security Services for the Registration Data Access Protocol (RDAP)</title>
<author initials='S' surname='Hollenbeck' fullname='Scott Hollenbeck'>
    <organization />
</author>
<author initials='N' surname='Kong' fullname='Ning Kong'>
    <organization />
</author>
<date month='February' year='2015' />
</front>
<seriesInfo name='RFC' value='7481' />
</reference>

                <reference anchor="ISO.3166.1988">
                <front>
                    <title>Codes for the representation of names of countries, 3rd edition</title>
                    <author>
                        <organization>International Organization for Standardization</organization>
                    </author>
                    <date month="August" year="1988"/>
                </front>
                <seriesInfo name="ISO" value="Standard 3166"/>
            </reference>
        </references>

        <references title="Informative References">

 &RFC3912;

<reference anchor='RFC5730' target='http://www.rfc-editor.org/info/rfc5730'>
<front>
<title>Extensible Provisioning Protocol (EPP)</title>
<author initials='S.' surname='Hollenbeck' fullname='S. Hollenbeck'>
<organization /></author>
<date year='2009' month='August' />
</front>
<seriesInfo name='STD' value='69' />
<seriesInfo name='RFC' value='5730' />
</reference>
 &RFC5910;
 &RFC6350;
 &RFC6839; 

              <reference
                anchor="JSON_ascendancy" target="https://devcentral.f5.com/weblogs/macvittie/archive/2011/04/27/the-stealthy-ascendancy-of-json.aspx">
                <front>
                    <title>The Stealthy Ascendancy of JSON</title>
                    <author initials='L' surname="MacVittie" fullname="Lori MacVittie">
                        <organization>F5 Dev Central</organization>
                    </author>
                    <date month="April" year="2011"/>
                </front>
            </reference>

            <reference anchor="IANA_IDNTABLES" target="http://www.iana.org/domains/idn-tables">
                <front>
                    <title>Repository of IDN Practices</title>
                    <author initials="" surname="" fullname="">
                        <organization>IANA</organization>
                    </author>
                    <date/>
                </front>
            </reference>

            <reference anchor="JSON_performance_study" target="http://www.cs.montana.edu/izurieta/pubs/caine2009.pdf">
                <front>
                    <title>Comparison of JSON and XML Data Interchange Formats: A Case Study</title>
                    <author initials="N" surname="Nurseitov" fullname="Nurzhan Nurseitov">
                        <organization>Montana State University - Bozeman</organization>
                    </author>
                    <author initials="M" surname="Paulson" fullname="Michael Paulson">
                        <organization>Montana State University - Bozeman</organization>
                    </author>
                    <author initials="R" surname="Reynolds" fullname="Randall Reynolds">
                        <organization>Montana State University - Bozeman</organization>
                    </author>
                    <author initials="C" surname="Izurieta" fullname="Clemente Izurieta">
                        <organization>Montana State University - Bozeman</organization>
                    </author>
                    <date year="2009"/>
                </front>
            </reference>
        </references>
        
        <section title="Suggested Data Modeling with the Entity Object Class" anchor="suggested_entity_modeling">
            <section title="Registrants and Contacts" anchor="suggested_registrant_contact_modeling">
                <t> This document does not provide specific object classes for registrants and
                    contacts. Instead, the entity object class may be used to represent a registrant
                    or contact. When the entity object is embedded inside a containing object such
                    as a domain name or IP network, the "roles" string array can be used to signify
                    the relationship. It is recommended that the values from <xref
                        target="role_registrations"/> be used. </t>
                <figure anchor="example_elided_containing_object_embedded_entity">
                    <preamble>The following is an example of an elided containing object with an
                        embedded entity that is both a registrant and administrative contact:</preamble>
                    <artwork xml:space="preserve">
                        
{
  ...
  "entities" : 
  [
    {
      "objectClassName" : "entity",
      "handle" : "XXXX",
      "vcardArray":[
        "vcard",
        [
          ["version", {}, "text", "4.0"],
          ["fn", {}, "text", "Joe User"],
          ["kind", {}, "text", "individual"],
          ["lang", {
            "pref":"1"
          }, "language-tag", "fr"],
          ["lang", {
            "pref":"2"
          }, "language-tag", "en"],
          ["org", {
            "type":"work"
          }, "text", "Example"],
          ["title", {}, "text", "Research Scientist"],
          ["role", {}, "text", "Project Lead"],
          ["adr",
            { "type":"work" },
            "text",
            [
              "",
              "Suite 1234",
              "4321 Rue Somewhere",
              "Quebec",
              "QC",
              "G1V 2M2",
              "Canada"
            ]
          ],
          ["tel",
            { "type":["work", "voice"], "pref":"1" },
            "uri", "tel:+1-555-555-1234;ext=102"
          ],
          ["email",
            { "type":"work" },
            "text", "joe.user@example.com"
          ]
        ]
      ],
      "roles" : [ "registrant", "administrative" ],
      "remarks" : 
      [
        {
          "description" : 
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]  
        }
      ],
      "events" : 
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z"
        }
      ]
    }        
  ]
}
                    
                </artwork>
                </figure>
                <t>
                    In many use cases, it is necessary to hide or obscure the information of
                    a registrant or contact due to policy or other operational matters. Registries
                    can denote these situations with "status" values (see <xref target="status_registrations"></xref>).
                </t>
                <figure anchor="example_registrant">
                    <preamble>The following is an elided example of a registrant with information
                    changed to reflect that of a third party.</preamble>
                    <artwork xml:space="preserve">
                        
{
  ...
  "entities" : 
  [
    {
      "objectClassName" : "entity",
      "handle" : "XXXX",
      ...
      "roles" : [ "registrant", "administrative" ],
      "status" : [ "proxy", "private", "obscured" ]
    }        
  ]
}
                    
                </artwork>
                </figure>
            </section>
            <section title="Registrars">
                <t> This document does not provide a specific object class for registrars, but like
                    registrants and contacts (see <xref
                        target="suggested_registrant_contact_modeling"/>), the "roles" string array
                    maybe used. Additionally, many registrars have publicly assigned identifiers.
                    The publicIds structure (<xref target="public_ids"></xref>) represents that
                    information.
                </t>
                <figure anchor="example_registrar">
                    <preamble>The following is an example of an elided containing object with an
                        embedded entity that is a registrar:</preamble>
                    <artwork xml:space="preserve">
        
{
  ...
  "entities":[
    {
      "objectClassName" : "entity",
      "handle":"XXXX",
      "vcardArray":[
        "vcard",
        [
          ["version", {}, "text", "4.0"],
          ["fn", {}, "text", "Joe's Fish, Chips, and Domains"],
          ["kind", {}, "text", "org"],
          ["lang", {
            "pref":"1"
          }, "language-tag", "fr"],
          ["lang", {
            "pref":"2"
          }, "language-tag", "en"],
          ["org", {
            "type":"work"
          }, "text", "Example"],
          ["adr",
            { "type":"work" },
            "text",
            [
              "",
              "Suite 1234",
              "4321 Rue Somewhere",
              "Quebec",
              "QC",
              "G1V 2M2",
              "Canada"
            ]
          ],
          ["tel",
            {
              "type":["work", "voice"],
              "pref":"1"
            },
            "uri", "tel:+1-555-555-1234;ext=102"
          ],
          ["email",
            { "type":"work" },
            "text", "joes_fish_chips_and_domains@example.com"
          ]
        ]
      ],
      "roles":[ "registrar" ],
      "publicIds":[
        {
          "type":"IANA Registrar ID",
          "identifier":"1"
        }
      ],
      "remarks":[
        {
          "description":[
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]
        }
      ],
      "links":[
        {
          "value":"http://example.net/entity/XXXX",
          "rel":"alternate",
          "type":"text/html",
          "href":"http://www.example.com"
        }
      ]
    }
  ]
}
                    
                </artwork>
                </figure>
            </section>
        </section>
        <section title="Modeling Events" anchor="modeling_events">
            <t>
                Events represent actions that have taken place against a registered object at a
                certain date and time. Events have three properties: the action, the actor,
                and the date and time of the event (which is sometimes in the future). In some
                cases, the identity of the actor is not captured.
            </t>
            <t>
                Events can be modeled in three ways:
                <list style="numbers">
                    <t>events with no designated actor</t>
                    <t>events where the actor is only designated by an identifier</t>
                    <t>events where the actor can be modeled as an entity</t>
                </list>
            </t>
            <t>
                For the first use case, the events data structure (<xref target="events"></xref>)
                is used without the "eventActor" object member.
            </t>
            <figure anchor="event_example_without_actor">
                <preamble>This is an example of an "events" array without the "eventActor".</preamble>
                <artwork xml:space="preserve">
"events" :
[
  {
    "eventAction" : "registration",
    "eventDate" : "1990-12-31T23:59:59Z"
  }
]
                </artwork>
            </figure>
            <t>
                For the second use case, the events data structure (<xref target="events"></xref>)
                is used with the "eventActor" object member.
            </t>
            <figure anchor="event_example_with_actor">
                <preamble>This is an example of an "events" array with the "eventActor".</preamble>
                <artwork xml:space="preserve">
"events" :
[
  {
    "eventAction" : "registration",
    "eventActor" : "XYZ-NIC",
    "eventDate" : "1990-12-31T23:59:59Z"
  }
]
                </artwork>
            </figure>
            <t>
                For the third use case, the "asEventActor" array is used when an entity
                (<xref target="entity_object_class"></xref>) is embedded into another
                object class. The "asEventActor" array follows the same structure as the
                "events" array but does not have "eventActor" attributes.
            </t>
            <figure anchor="example_elided_domain_entity_actor">
                <preamble>The following is an elided example of a domain object with
                an entity as an event actor.</preamble>
                <artwork xml:space="preserve">
                    
{
  "objectClassName" : "domain",
  "handle" : "XXXX",
  "ldhName" : "foo.example",
  "status" : [ "locked", "transfer prohibited" ],
  ...
  "entities" : 
  [
    {
      "handle" : "XXXX",
      ...
      "asEventActor" :
      [
        {
          "eventAction" : "last changed",
          "eventDate" : "1990-12-31T23:59:59Z"
        }
      ]
    }        
  ]
} 
                    
                </artwork>
            </figure>
        </section>
        <section anchor="structured_unstructured_addresses" title="Structured vs. Unstructured Addresses">
            <t>
                The <xref target="entity_object_class">entity</xref> object class uses <xref target="RFC7095">jCard</xref>
                to represent contact information, including postal addresses. jCard has the ability to represent multiple language
                preferences, multiple email address and phone numbers, and multiple postal addresses in both a structured and unstructured
                format. This section describes the use of jCard for representing structured and unstructured addresses.
            </t>
            <figure anchor="jcard_exmaple">
                <preamble>The following is an example of a jCard.</preamble>
                <artwork xml:space="preserve">

{
  "vcardArray":[
    "vcard",
    [
      ["version", {}, "text", "4.0"],
      ["fn", {}, "text", "Joe User"],
      ["n", {}, "text",
        ["User", "Joe", "", "", ["ing. jr", "M.Sc."]]
      ],
      ["kind", {}, "text", "individual"],
      ["lang", {
        "pref":"1"
      }, "language-tag", "fr"],
      ["lang", {
        "pref":"2"
      }, "language-tag", "en"],
      ["org", {
        "type":"work"
      }, "text", "Example"],
      ["title", {}, "text", "Research Scientist"],
      ["role", {}, "text", "Project Lead"],
      ["adr",
        { "type":"work" },
        "text",
        [
          "",
          "Suite 1234",
          "4321 Rue Somewhere",
          "Quebec",
          "QC",
          "G1V 2M2",
          "Canada"
        ]
      ],
      ["adr",
        {
          "type":"home",
          "label":"123 Maple Ave\nSuite 90001\nVancouver\nBC\n1239\n"
        },
        "text",
        [
          "", "", "", "", "", "", ""
        ]
      ],
      ["tel",
        { "type":["work", "voice"], "pref":"1" },
        "uri", "tel:+1-555-555-1234;ext=102"
      ],
      ["tel",
        {
          "type":["work", "cell", "voice", "video", "text"]
        },
        "uri",
        "tel:+1-555-555-1234"
      ],
      ["email",
        { "type":"work" },
        "text", "joe.user@example.com"
      ],
      ["geo", {
        "type":"work"
      }, "uri", "geo:46.772673,-71.282945"],
      ["key",
        { "type":"work" },
        "uri", "http://www.example.com/joe.user/joe.asc"
      ],
      ["tz", {},
        "utc-offset", "-05:00"],
      ["url", { "type":"home" },
        "uri", "http://example.org"]
    ]
  ]
}

                </artwork>
            </figure>
            <t>
                The arrays in <xref target="jcard_exmaple"></xref> with the first member of "adr" represent
                postal addresses. In the first example, the postal address is given as an array of strings
                and constitutes a structured address. For components of the structured address that are not
                applicable, an empty string is given. Each member of that array aligns with the positions
                of a vCard as given in <xref target="RFC6350"></xref>. In this example, the following
                data corresponds to the following positional meanings:
                <list style="numbers">
                    <t>post office box -- not applicable; empty string</t>
                    <t>extended address (e.g., apartment or suite number) -- Suite 1234</t>
                    <t>street address -- 4321 Rue Somewhere</t>
                    <t>locality (e.g., city) -- Quebec</t>
                    <t>region (e.g., state or province) -- QC</t>
                    <t>postal code -- G1V 2M2</t>
                    <t>country name (full name) -- Canada</t>
                </list>
            </t>
            <t>
                The second example is an unstructured address. It uses the label attribute, which is a
                string containing a newline (\n) character to separate address components in an unordered,
                unspecified manner. Note that in this example, the structured address array is still given but
                that each string is an empty string.
            </t>
        </section>
        <section title="Secure DNS" anchor="secure_dns">
            <t><xref target="domain_object_class"></xref> defines the "secureDNS" member to represent
            secure DNS information about domain names.</t>
            <t>
                DNSSEC provides data integrity for DNS through the digital signing of
                resource records. To enable DNSSEC, the zone is signed by one or more
                private keys and the signatures are stored as RRSIG records. To complete the
                chain of trust in the DNS zone hierarchy, a digest of each DNSKEY record
                (which contains the public key) must be loaded into the parent zone,
                stored as DS records, and signed by the parent's
                private key (RRSIG DS record), as indicated in <xref target="RFC4034">"Resource Records for the DNS Security
                Extensions"</xref>. Creating the DS records in the parent zone can be
                done by the registration authority <xref target="RFC5910">"Domain Name System (DNS) Security
                Extensions Mapping for the Extensible Provisioning Protocol (EPP)"</xref>.
             </t>
             <t>
                Only DS-related information is provided by RDAP, since other information
                is not generally stored in the registration database. Other DNSSEC-related
                information can be retrieved with other DNS tools such as dig.
            </t>
            <t>The <xref target="domain_object_class">domain object class</xref> can represent
            this information using either the "dsData" or "keyData" object arrays. Client implementers
            should be aware that some registries do not collect or do not publish all of the 
            secure DNS meta-information.</t>
        </section>
        <section title="Motivations for Using JSON">
            <t> This section addresses a common question regarding the use of JSON over other data
                formats, most notably XML. </t>
            <t> It is often pointed out that many DNRs and one RIR support the <xref
                    target="RFC5730">EPP</xref> standard, which is an XML serialized protocol. The
                logic is that since EPP is a common protocol in the industry, it follows that XML
                would be a more natural choice. While EPP does influence this specification quite a
                bit, EPP serves a different purpose, which is the provisioning of Internet resources
                between registries and accredited registrars and serving a much narrower audience
                than that envisioned for RDAP. </t>
            <t> By contrast, RDAP has a broader audience and is designed for public consumption of
                data. Experience from RIRs with first generation RESTful web services for WHOIS
                indicate that a large percentage of clients operate within browsers and other platforms
                where full-blown XML stacks are not readily available and where JSON is a better
                fit. </t>
            <t> Additionally, while EPP is used in much of the DNR community it is not a universal
                constant in that industry. And finally, EPP's use of XML predates the specification
                of JSON. If EPP had been defined today, it may very well have used JSON instead of
                XML. </t>
            <t> Beyond the specific DNR and RIR communities, the trend in the broader Internet
                industry is also switching to JSON over XML, especially in the area of RESTful web
                services (see <xref target="JSON_ascendancy"/>). Studies have also found that JSON is
                generally less bulky and consequently faster to parse (see <xref
                    target="JSON_performance_study"/>). </t>
        </section>

<section title="Acknowledgements">
            <t> This document is derived from original work on RIR responses in JSON by Byron J.
                Ellacott, Arturo L. Servin, Kaveh Ranjbar, and
                Andrew L. Newton. Additionally, this document incorporates work on DNR
                responses in JSON by Ning Kong, Linlin Zhou, Jiagui Xie, and Sean Shen. </t>

            <t> The components of the DNR object classes are derived from a categorization of WHOIS
                response formats created by Ning Kong, Linlin Zhou, Guangqing Deng,
                Steve Sheng, Francisco Arias, Ray Bellis, and Frederico Neves. </t>
            <t>
                Tom Harrison, Murray Kucherawy, Ed Lewis, Audric Schiltknecht, Naoki Kambe, 
                and Maarten Bosteels
                contributed significant review comments and provided
                clarifying text. James Mitchell provided text regarding the processing of unknown
                JSON attributes and identified issues leading to the remodeling of events. Ernie Dainow
                and Francisco Obispo provided concrete suggestions that led to a better variant
                model for domain names.
            </t>
            <t>
                Ernie Dainow provided the background information on the secure DNS attributes
                and objects for domains, informative text on DNSSEC, and many other attributes
                that appear throughout the object classes of this document.
            </t>
            <t>
                The switch to and incorporation of jCard was performed by Simon Perreault.
            </t>
            <t>
                Olaf Kolkman and Murray Kucherawy chaired the IETF's WEIRDS working group
                from which this document has been created.
            </t>

        </section>
    </back>
</rfc>
