<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd'>

<rfc ipr="trust200902" category="std" number="8460" submissionType="IETF" consensus="yes">
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc topblock="yes"?>
<?rfc comments="no"?>
<front>

<title abbrev="SMTP TLS Reporting">SMTP TLS Reporting</title>

<author initials="D." surname="Margolis" fullname="Daniel Margolis">
<organization>Google, Inc.</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>dmargolis@google.com</email>
<uri></uri>
</address>
</author>
<author initials="A." surname="Brotman" fullname="Alexander Brotman">
<organization>Comcast, Inc.</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>alex_brotman@comcast.com</email>
<uri></uri>
</address>
</author>
<author initials="B." surname="Ramakrishnan" fullname="Binu Ramakrishnan">
<organization>Oath, Inc.</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>prbinu@yahoo.com</email>
<uri></uri>
</address>
</author>
<author initials="J." surname="Jones" fullname="Janet Jones">
<organization>Microsoft, Inc.</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>janet.jones@microsoft.com</email>
<uri></uri>
</address>
</author>
<author initials="M." surname="Risher" fullname="Mark Risher">
<organization>Google, Inc.</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>risher@google.com</email>
<uri></uri>
</address>
</author>
<date year="2018" month="September"/>

<area>Applications</area>
<workgroup>Using TLS in Applications</workgroup>
<keyword></keyword>

<abstract>
<t>A number of protocols exist for establishing encrypted channels between
SMTP Mail Transfer Agents (MTAs), including STARTTLS, DNS-Based Authentication of Named Entities (DANE) TLSA, and MTA Strict Transport Security (MTA-STS).
These protocols can fail due to misconfiguration or active attack,
leading to undelivered messages or delivery over unencrypted or
unauthenticated channels.  This document describes a reporting mechanism
and format by which sending systems can share statistics and specific
information about potential failures with recipient domains. Recipient
domains can then use this information to both detect potential attacks and
diagnose unintentional misconfigurations.
</t>
</abstract>


</front>

<middle>

<section anchor="introduction" title="Introduction">
<t>The STARTTLS extension to SMTP <xref target="RFC3207"/> allows SMTP clients and hosts
to establish secure SMTP sessions over TLS. The protocol design uses an
approach that has come to be known as &quot;Opportunistic Security&quot; (OS)
<xref target="RFC7435"/>. This method maintains interoperability with clients that do
not support STARTTLS, but it means that any attacker could potentially
eavesdrop on a session.  An attacker could perform a downgrade or
interception attack by deleting parts of the SMTP session (such as the
&quot;250 STARTTLS&quot; response) or redirect the entire SMTP session (perhaps
by overwriting the resolved MX record of the delivery domain).
</t>

<t>Because such &quot;downgrade attacks&quot; are not necessarily apparent to the
receiving MTA, this document defines a mechanism for sending domains to
report on failures at multiple stages of the MTA-to-MTA conversation.
</t>

<t>Recipient domains may also use the mechanisms defined by MTA-STS
<xref target="RFC8461"/> or DANE <xref target="RFC6698"/> to
publish additional encryption and authentication requirements; this
document defines a mechanism for sending domains that are compatible
with MTA-STS or DANE to share success and failure statistics with
recipient domains.
</t>

<t>Specifically, this document defines a reporting schema that covers
failures in routing, DNS resolution, and STARTTLS negotiation; policy validation errors for both DANE <xref target="RFC6698"/> and MTA-STS <xref target="RFC8461"/>; and a standard TXT record that recipient domains can use to
indicate where reports in this format should be sent. The report can
also serve as a heartbeat to indicate that systems are successfully negotiating
TLS during sessions as expected.
</t>
<t>This document is intended as a companion to the specification for SMTP
MTA-STS <xref target="RFC8461"/> and adds
reporting abilities for those implementing DANE <xref target="RFC7672"/>.
</t>

<section anchor="terminology" title="Terminology">
        <t>
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
    NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
    "MAY", and "OPTIONAL" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
<t>We also define the following terms for further use in this document:
</t>
<t>
<list style="symbols">
<t>MTA-STS Policy: A mechanism by which administrators can specify the expected
TLS availability, presented identity, and desired actions for a given
email recipient domain. MTA-STS is defined in <xref target="RFC8461"/>.</t>

<t>DANE Policy: A mechanism by which administrators can use DNSSEC
to commit an MTA to support STARTTLS and to publish criteria to
be used to validate its presented certificates.  DANE for SMTP
is defined in <xref target="RFC7672"/>, with the base specification defined in <xref target="RFC6698"/>
(and updated by <xref target="RFC7671"/>).</t>

<t>TLSRPT (TLS Reporting) Policy: A policy specifying the endpoint to which Sending MTAs
should deliver reports.</t>

<t>Policy Domain: The domain against which a TLSRPT, an MTA-STS, or a DANE policy
is defined.  For TLSRPT and MTA-STS, this is typically the same as the envelope
recipient domain <xref target="RFC5321"/>, but when mail is routed to a &quot;smarthost&quot;
gateway by local policy, the &quot;smarthost&quot; domain name is used instead.
For DANE, the Policy Domain is the &quot;TLSA base domain&quot; of the receiving
SMTP server as described in Section 2.2.3 of RFC 7672 and Section 3 of RFC 6698.</t>

<t>Sending MTA: The MTA initiating the relay of an email message.</t>

<t>Aggregate Report URI (rua): A comma-separated list of locations where
the report is to be submitted.</t>

<t>ABNF: Augmented Backus-Naur Form, a syntax for formally specifying
syntax, defined in <xref target="RFC5234"/> and <xref target="RFC7405"/>.</t>

</list>
</t>
</section>
</section>

<section anchor="related-technologies" title="Related Technologies">
<t>
<list style="symbols">
<t>This document is intended as a companion to the specification for SMTP
MTA-STS <xref target="RFC8461"/>.</t>

<t>SMTP TLSRPT defines a mechanism for sending domains that are
compatible with MTA-STS or DANE to share success and failure
statistics with recipient domains.  DANE is defined in <xref target="RFC6698"/>, and
MTA-STS is defined in <xref target="RFC8461"/>.</t>
</list>
</t>
</section>

<section anchor="reporting-policy" title="Reporting Policy">
<t>A domain publishes a record to its DNS indicating that it wishes to
receive reports. These SMTP TLSRPT policies are distributed via DNS from
the Policy Domain's zone as TXT records (similar to Domain-based Message Authentication, Reporting, and Conformance (DMARC) policies)
under the name <spanx style="verb">_smtp._tls</spanx>. For example, for the Policy Domain
<spanx style="verb">example.com</spanx>, the recipient's TLSRPT policy can be retrieved from
<spanx style="verb">_smtp._tls.example.com</spanx>.
</t>
<t>Policies consist of the following directives:
</t>
<t>
<list style="symbols">
<t><spanx style="verb">v</spanx>: This document defines version 1 of TLSRPT, for which this value MUST be
equal to <spanx style="verb">TLSRPTv1</spanx>. Other versions may be defined in later documents.</t>

<t><spanx style="verb">rua</spanx>: A URI specifying the endpoint to which aggregate information
about policy validation results should be sent (see
<xref target="reporting-schema"/>, &quot;Reporting Schema&quot;, for more information). Two
URI schemes are supported: <spanx style="verb">mailto</spanx> and <spanx style="verb">https</spanx>.  As with DMARC
<xref target="RFC7489"/>, the Policy Domain can specify a comma-separated list of
URIs.</t>

<t>In the case of <spanx style="verb">https</spanx>, reports should be submitted via POST
<xref target="RFC7231"/> to the specified URI.  Report submitters MAY ignore
certificate validation errors when submitting reports via HTTPS POST.</t>

<t>In the case of <spanx style="verb">mailto</spanx>, reports should be submitted to the specified email
address <xref target="RFC6068"/>. When sending failure reports via SMTP, Sending MTAs
MUST deliver reports despite any TLS-related failures and SHOULD NOT include
this SMTP session in the next report. This may mean that the reports are delivered unencrypted. Reports sent via SMTP MUST
contain a valid DomainKeys Identified Mail (DKIM) <xref target="RFC6376"/> signature by the reporting domain. Reports
lacking such a signature MUST be ignored by the recipient.  DKIM signatures
MUST NOT use the &quot;l=&quot; attribute to limit the body length used in the
signature. This ensures attackers cannot append extraneous or misleading data to a report without breaking the signature. The DKIM TXT record SHOULD contain the appropriate service type
declaration, <spanx style="verb">s=tlsrpt</spanx>.  If not present, the receiving system MAY ignore
reports lacking that service type.</t>
</list></t>
<t>
Sample DKIM record:</t>

<figure align="left"><artwork align="left">
   dkim_selector._domainkey.example.com TXT
         "v=DKIM1;k=rsa;s=tlsrpt;p=Mlf4qwSZfase4fa=="
</artwork></figure>


<t>The formal definition of the <spanx style="verb">_smtp._tls</spanx> TXT record, defined using
<xref target="RFC5234"/> and <xref target="RFC7405"/>, is as follows:
</t>

<figure align="center"><artwork align="center" type="abnf">
    tlsrpt-record     = tlsrpt-version 1*(field-delim tlsrpt-field)
                        [field-delim]

    field-delim       = *WSP ";" *WSP

    tlsrpt-field      = tlsrpt-rua /        ; Note that the
                        tlsrpt-extension    ; tlsrpt-rua record is
                                            ; required.

    tlsrpt-version    = %s"v=TLSRPTv1"

    tlsrpt-rua        = %s"rua="
                        tlsrpt-uri *(*WSP "," *WSP tlsrpt-uri)

    tlsrpt-uri        = URI
                        ; "URI" is imported from [RFC3986];
                        ; commas (ASCII 0x2C), exclamation 
                        ; points (ASCII 0x21), and semicolons
                        ; (ASCII 0x3B) MUST be encoded

    tlsrpt-extension  = tlsrpt-ext-name "=" tlsrpt-ext-value

    tlsrpt-ext-name   = (ALPHA / DIGIT) *31(ALPHA / 
                        DIGIT / "_" / "-" / ".")

    tlsrpt-ext-value  = 1*(%x21-3A / %x3C / %x3E-7E)
                        ; chars excluding "=", ";", SP, and control 
                        ; chars
</artwork></figure>
<t>If multiple TXT records for <spanx style="verb">_smtp._tls</spanx> are returned by the resolver,
records that do not begin with <spanx style="verb">v=TLSRPTv1;</spanx> are discarded. 
If the
number of resulting records is not one, senders MUST assume the
recipient domain does not implement TLSRPT. If the resulting TXT record
contains multiple strings (as described in Section 3.3 of <xref target="RFC7208"/>),
then the record MUST be treated as if those strings are concatenated
without adding spaces.
</t>
<t>The record supports the ability to declare more than one rua, and if
there exists more than one, the reporter MAY attempt to deliver to
each of the supported rua destinations.  A receiver MAY opt to only
attempt delivery to one of the endpoints; however, the report SHOULD NOT
be considered successfully delivered until one of the endpoints accepts
delivery of the report.
</t>
<t>Parsers MUST accept TXT records that are syntactically valid (i.e.,
valid key/value pairs separated by semicolons) and implement a
superset of this specification, in which case unknown fields SHALL be
ignored.
</t>

<section anchor="example-reporting-policy" title="Example Reporting Policy">

<section anchor="report-using-mailto" title="Report Using MAILTO">

<figure align="center"><artwork align="center">
_smtp._tls.example.com. IN TXT \
        "v=TLSRPTv1;rua=mailto:reports@example.com"
</artwork></figure>

</section>

<section anchor="report-using-https" title="Report Using HTTPS">

<figure align="center"><artwork align="center">
_smtp._tls.example.com. IN TXT \
        "v=TLSRPTv1; \
        rua=https://reporting.example.com/v1/tlsrpt"
</artwork></figure>

</section>
</section>
</section>

<section anchor="reporting-schema" title="Reporting Schema">
<t>The report is composed as a plaintext file encoded in the Internet JSON (I-JSON) format
<xref target="RFC7493"/>.
</t>
<t>Aggregate reports contain the following fields:
</t>
<t>
<list style="symbols">
<t>Report metadata:
<list style="symbols">
<t>The organization responsible for the report</t>
<t>Contact information for one or more responsible parties for the
contents of the report</t>
<t>A unique identifier for the report</t>
<t>The reporting date range for the report</t>
</list></t>

<t>Policy, consisting of:
<list style="symbols">
<t>One of the following policy types: (1) the MTA-STS Policy applied
(as a string), (2) the DANE TLSA record applied (as a string, with
each RR entry of the RRset listed and separated by a semicolon), and (3)
the literal string <spanx style="verb">no-policy-found</spanx>, if neither a DANE nor MTA-STS
Policy could be found.</t>
<t>The domain for which the policy is applied</t>
<t>The MX host</t>
</list></t>

<t>Aggregate counts, comprising result type, Sending MTA IP, receiving
MTA hostname, session count, and an optional additional information
field containing a URI for recipients to review further information on
a failure type.</t>
</list>
</t>
<t>Note that the failure types are non-exclusive; an aggregate report may
contain overlapping <spanx style="verb">counts</spanx> of failure types when a single send attempt
encountered multiple errors. Reporters may report multiple applied
policies (for example, an MTA-STS Policy and a DANE TLSA record for the
same domain and MX). Because of this, even in the case where only a single
policy was applied, the &quot;policies&quot; field of the report body MUST be an array and
not a singular value.
</t>
<t>In the case of multiple failure types, the <spanx style="verb">failure-details</spanx> array
would contain multiple entries.  Each entry would have its own set of
information pertaining to that failure type.
</t>

<section anchor="report-timeframe" title="Report Time Frame">
<t>The report SHOULD cover a full day, from 00:00-24:00 UTC.  This should
allow for easier correlation of failure events. 
To avoid unintentionally overloading the system processing the reports, the reports should be
delivered after some delay, perhaps several hours.
</t>
<t>As an example, a sending site might want to introduce a random delay of up
to four hours:
</t>

<figure align="center"><artwork align="center">
func generate_sleep_delay() {
  min_delay = 1
  max_delay = 14400
  rand = random(min_delay, max_delay)
  return rand
}

func generate_report(policy_domain) {
  do_rpt_work(policy_domain)
  send_rpt(policy_domain)
}

func generate_tlsrpt() {
  sleep(generate_sleep_delay())
  for policy_domain in list_of_tlsrpt_enabled_domains {
    generate_report(policy_domain)      
  }
}
</artwork></figure>
</section>

<section anchor="delivery-summary" title="Delivery Summary">

<section anchor="success-count" title="Success Count">
<t>
<list style="symbols">
<t><spanx style="verb">total-successful-session-count</spanx>: This indicates that the Sending MTA
was able to successfully negotiate a policy-compliant TLS connection
and serves to provide a &quot;heartbeat&quot; to receiving domains that signifies reporting
is functional and tabulating correctly.  This field contains an
aggregate count of successful connections for the reporting system.

<vspace/></t>
</list>
</t>
</section>

<section anchor="failure-count" title="Failure Count">
<t>
<list style="symbols">
<t><spanx style="verb">total-failure-session-count</spanx>: This indicates that the Sending MTA was
unable to successfully establish a connection with the receiving platform.
<xref target="result-types"/>, &quot;Result Types&quot;, will elaborate on the failed
negotiation attempts.  This field contains an aggregate count of
failed connections.</t>
</list>
</t>
</section>
</section>

<section anchor="result-types" title="Result Types">

<t>The list of result types will start with the minimal set below and is
expected to grow over time based on real-world experience. The initial
set is outlined in Sections <xref target="negotiation-failures" format="counter"/> to <xref target="transient-failures" format="counter"/>:
</t>

<section anchor="negotiation-failures" title="Negotiation Failures">
<t>
<list style="symbols">
<t><spanx style="verb">starttls-not-supported</spanx>: This indicates that the recipient MX did not
support STARTTLS.</t>

<t><spanx style="verb">certificate-host-mismatch</spanx>: This indicates that the certificate
presented did not adhere to the constraints specified in the MTA-STS
or DANE policy, e.g., if the MX hostname does not match any identities
listed in the subject alternative name (SAN) <xref target="RFC5280"/>.</t>

<t><spanx style="verb">certificate-expired</spanx>: This indicates that the certificate has
expired.</t>

<t><spanx style="verb">certificate-not-trusted</spanx>: This is a label that covers multiple
certificate-related failures that include, but are not limited to, errors
such as untrusted/unknown certification authorities (CAs), certificate name constraints,
certificate chain errors, etc. When using this declaration, the
reporting MTA SHOULD utilize the <spanx style="verb">failure-reason-code</spanx> to provide more
information to the receiving entity.</t>

<t><spanx style="verb">validation-failure</spanx>: This indicates a general failure for a reason
not matching a category above.  When using this declaration, the
reporting MTA SHOULD utilize the <spanx style="verb">failure-reason-code</spanx> to provide more
information to the receiving entity.</t>
</list>
</t>
</section>

<section anchor="policy-failures" title="Policy Failures">

<section anchor="danespecific-policy-failures" title="DANE-Specific Policy Failures">
<t>
<list style="symbols">
<t>"tlsa-invalid": This indicates a validation error in the TLSA record
associated with a DANE policy.  None of the records in the RRset were
found to be valid.</t>

<t>"dnssec-invalid": This indicates that no valid records were
returned from the recursive resolver.</t>

<t>"dane-required": This indicates that the sending system is
configured to require DANE TLSA records for all the MX hosts
of the destination domain, but no DNSSEC-validated TLSA records
were present for the MX host that is the subject of the report.
Mandatory DANE for SMTP is described in Section 6 of <xref target="RFC7672"/>.
Such policies may be created by mutual agreement between two
organizations that frequently exchange sensitive content via
email.</t>
</list>
</t>
</section>

<section anchor="mtastsspecific-policy-failures" title="MTA-STS-specific Policy Failures">
<t>
<list style="symbols">

<t>"sts-policy-fetch-error": This indicates a failure to retrieve an MTA-STS policy, for example, because the policy host is unreachable.</t>

<t>"sts-policy-invalid": This indicates a validation error for the
overall MTA-STS Policy.</t>

<t>"sts-webpki-invalid": This indicates that the MTA-STS Policy could not
be authenticated using PKIX validation.

<vspace/></t>
</list>
</t>
</section>
</section>

<section anchor="general-failures" title="General Failures">
<t>When a negotiation failure cannot be categorized into one of the
&quot;Negotiation Failures&quot; stated above, the reporter SHOULD use the
"validation-failure" category.  As TLS grows and becomes more complex,
new mechanisms may not be easily categorized.  This allows for a generic
feedback category.  When this category is used, the reporter SHOULD also
use "failure-reason-code" to give some feedback to the receiving
entity.  This is intended to be a short text field, and the contents of
the field should be an error code or error text, such as
&quot;X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION&quot;.
</t>
</section>

<section anchor="transient-failures" title="Transient Failures">
<t>Transient errors due to too-busy networks, TCP timeouts, etc., are not
required to be reported.
</t>
</section>
</section>

<section anchor="json-report-schema" title="JSON Report Schema">
<t>The JSON schema is derived from the HTTP Public Key Pinning (HPKP) JSON schema; see Section 3 of <xref target="RFC7469"/>.
</t>

<figure align="center" title="JSON Report Format
"><artwork align="center">
{
  "organization-name": organization-name,
  "date-range": {
    "start-datetime": date-time,
    "end-datetime": date-time
  },
  "contact-info": email-address,
  "report-id": report-id,
  "policies": [{
    "policy": {
      "policy-type": policy-type,
      "policy-string": policy-string,
      "policy-domain": domain,
      "mx-host": mx-host-pattern
    },
    "summary": {
      "total-successful-session-count": total-successful-session-count,
      "total-failure-session-count": total-failure-session-count
    },
    "failure-details": [
      {
        "result-type": result-type,
        "sending-mta-ip": ip-address,
        "receiving-mx-hostname": receiving-mx-hostname,
        "receiving-mx-helo": receiving-mx-helo,
        "receiving-ip": receiving-ip,
        "failed-session-count": failed-session-count,
        "additional-information": additional-info-uri,
        "failure-reason-code": failure-reason-code
        }
      ]
    }
  ]
}

</artwork></figure>
<t>
<list style="symbols">
<t><spanx style="verb">organization-name</spanx>: The name of the organization responsible for the
report.  It is provided as a string.</t>

<t>"date-time": The date-time indicates the start and end times for the
report range. It is provided as a string formatted according to
 &quot;Internet Date/Time Format&quot;, Section 5.6 of <xref target="RFC3339"/>.  The report
should be for a full UTC day, 00:00-24:00.</t>

<t>"email-address": The contact information for the party responsible for
the report. It is provided as a string formatted according to &quot;Addr-Spec Specification&quot;, Section
3.4.1 of <xref target="RFC5322"/>.</t>

<t>"report-id": A unique identifier for the report. Report authors may
use whatever scheme they prefer to generate a unique identifier. It is
provided as a string.</t>

<t>"policy-type": The type of policy that was applied by the sending
domain.  Presently, the only three valid choices are "tlsa", "sts",
and the literal string "no-policy-found". It is provided as a string.</t>

<t>"policy-string": An encoding of the applied policy as a JSON array of
strings, whether it's a TLSA record (<xref target="RFC6698"/>, Section 2.3) or an MTA-STS
Policy. Examples follow in the next section.</t>

<t>"domain": The Policy Domain against which the MTA-STS or
DANE policy is defined. In the case of Internationalized Domain Names
<xref target="RFC5891"/>, the domain MUST consist of the Punycode-encoded
A-labels <xref target="RFC3492"/> and not the U-labels.</t>

<t>"mx-host-pattern": In the case where "policy-type" is "sts", it's the pattern of MX hostnames from the applied
policy. It is provided as a JSON array of strings and is interpreted in the same
manner as the rules in &quot;MX Host Validation&quot;; see Section
4.1 of <xref target="RFC8461"/>.  In the case of Internationalized Domain Names
<xref target="RFC5891"/>, the domain MUST consist of the Punycode-encoded
A-labels <xref target="RFC3492"/> and not the U-labels.</t>

<t>"result-type": A value from <xref target="result-types"/>, &quot;Result Types&quot;,  above.</t>

<t>"ip-address": The IP address of the Sending MTA that attempted the
STARTTLS connection. It is provided as a string representation of an
IPv4 (see below) or IPv6 <xref target="RFC5952"/> address in dot-decimal or
colon-hexadecimal notation.</t>

<t>"receiving-mx-hostname": The hostname of the receiving MTA MX record
with which the Sending MTA attempted to negotiate a STARTTLS
connection.</t>

<t>"receiving-mx-helo" (optional): The HELLO (HELO) or Extended HELLO (EHLO) string from the
banner announced during the reported session.</t>

<t>"receiving-ip": The destination IP address that was used when
creating the outbound session. It is provided as a string
representation of an IPv4 (see below) or IPv6 <xref target="RFC5952"/> address
in dot-decimal or colon-hexadecimal notation.</t>

<t>"total-successful-session-count": The aggregate count (an integer, encoded as a
JSON number) of successfully negotiated TLS-enabled connections to the
receiving site.</t>

<t>"total-failure-session-count": The aggregate count (an integer, encoded as a JSON
number) of failures to negotiate a TLS-enabled connection to the receiving
site.</t>

<t>"failed-session-count": The number of (attempted) sessions that match
the relevant <spanx style="verb">result-type</spanx> for this section (an integer, encoded as a JSON
number).</t>

<t>"additional-info-uri" (optional): A URI <xref target="RFC3986"/> that points to
additional information around the relevant "result-type". For example,
this URI might host the complete certificate chain presented during an
attempted STARTTLS session.</t>

<t>"failure-reason-code": A text field to include a TLS-related error
code or error message.

<vspace/></t>
</list>
</t>
<t>For report purposes, an IPv4 address is defined via the following ABNF:
</t>

<figure align="center"><artwork align="center" type="abnf">
 IPv4address = dec-octet "." dec-octet "." dec-octet "." dec-octet     
 dec-octet     = DIGIT                 ; 0-9
               / %x31-39 DIGIT         ; 10-99
               / "1" 2DIGIT            ; 100-199
               / "2" %x30-34 DIGIT     ; 200-249
               / "25" %x30-35          ; 250-255
</artwork></figure>


<t>And an IPv6 address is defined via the following ABNF:</t>

<figure align="left"><artwork align="left" type="abnf">

  IPv6address = &lt;as defined in [RFC5954]&gt;   
    
</artwork></figure>


</section>

<section anchor="policy-samples" title="Policy Samples">
<t>Part of the report body includes the policy that is applied when attempting
relay to the destination.
</t>
<t>For DANE TLSA policies, this is a JSON array of strings each representing the
RDATA of a single TLSA resource record as a space-separated list of its four
TLSA fields; the fields are in presentation format (defined in <xref target="RFC6698"/>,
Section 2.2) with no internal spaces or grouping parentheses:
</t>

<figure align="center"><artwork align="center">
[
"3 0 1 1F850A337E6DB9C609C522D136A475638CC43E1ED424F8EEC8513
       D747D1D085D",
"3 0 1 12350A337E6DB9C6123522D136A475638CC43E1ED424F8EEC8513
       D747D1D1234"
]
</artwork></figure>
<t>For MTA-STS policies, this is an array of JSON strings that represents the
policy that is declared by the receiving site, including any errors that may be
present. Note that where there are multiple &quot;mx&quot; values, they must be listed
as separate &quot;mx&quot; elements in the policy array rather than as a single nested &quot;mx&quot;
sub-array.
</t>

<figure align="center"><artwork align="center">
[
"version: STSv1",
"mode: testing",
"mx: mx1.example.com",
"mx: mx2.example.com",
"mx: mx.backup-example.com",
"max_age: 604800"
]
</artwork></figure>
</section>
</section>

<section anchor="report-delivery" title="Report Delivery">

<t>
   Reports can be delivered either via SMTP (as an email message) or via
   HTTP POST.
</t>

<section anchor="report-filename" title="Report Filename">
<t>The filename is RECOMMENDED to be constructed using the following ABNF:
</t>

<figure align="center"><artwork align="center" type="abnf">
 filename        = sender "!" policy-domain "!" begin-timestamp
                   "!" end-timestamp [ "!" unique-id ] "." extension

 unique-id       = 1*(ALPHA / DIGIT)

 sender          = domain ; from [RFC5321] -- this is used
                   ; as the domain for the `contact-info`
                   ; address in the report body.
                   ; In the case of Internationalized Domain 
                   ; Names [RFC5891], the domain MUST consist of 
                   ; the Punycode-encoded A-labels [RFC3492] and 
                   ; not the U-labels. 

 policy-domain   = domain
                   ; In the case of Internationalized Domain 
                   ; Names [RFC5891], the domain MUST consist of 
                   ; the Punycode-encoded A-labels [RFC3492] and 
                   ; not the U-labels.

 begin-timestamp = 1*DIGIT
                   ; seconds since 00:00:00 UTC January 1, 1970
                   ; indicating start of the time range contained
                   ; in the report

 end-timestamp   = 1*DIGIT
                   ; seconds since 00:00:00 UTC January 1, 1970
                   ; indicating end of the time range contained
                   ; in the report

 extension       = "json" / "json.gz"

</artwork></figure>
<t>The extension MUST be &quot;json&quot; for a plain JSON file or &quot;json.gz&quot; for a
JSON file compressed using gzip.
</t>
<t>&quot;unique-id&quot; allows an optional unique ID generated by the Sending MTA to
distinguish among multiple reports generated simultaneously by different
sources for the same Policy Domain. For example, this is a possible
filename for a compressed report to the Policy Domain &quot;example.net&quot;
from the Sending MTA &quot;mail.sndr.example.com&quot;:
</t>
<t><spanx style="verb">mail.sndr.example.com!example.net!1470013207!1470186007!001.json.gz</spanx>
</t>
</section>

<section anchor="compression" title="Compression">
<t>The report SHOULD be subjected to gzip <xref target="RFC1952"/> compression for both email
and HTTPS transport. Declining to apply compression can cause the report to
be too large for a receiver to process (a commonly observed receiver
limit is ten megabytes); compressing the file increases the chances of
acceptance of the report at some computational cost.
</t>
</section>

<section anchor="email-transport" title="Email Transport">
<t>The report MAY be delivered by email. To make the reports
machine-parsable for the receivers, we define a top-level media type
<spanx style="verb">multipart/report</spanx> with a new parameter <spanx style="verb">report-type="tlsrpt"</spanx>. Inside
it, there are two parts: The first part is human readable, typically
<spanx style="verb">text/plain</spanx>, and the second part is machine readable with a new media
type defined called <spanx style="verb">application/tlsrpt+json</spanx>.  If compressed, the
report should use the media type <spanx style="verb">application/tlsrpt+gzip</spanx>.
</t>
<t>In addition, the following two new top-level message header fields are
defined:
</t>
<t><spanx style="verb">TLS-Report-Domain: Receiver-Domain</spanx>
</t>
<t><spanx style="verb">TLS-Report-Submitter: Sender-Domain</spanx>
</t>
<t>The <spanx style="verb">TLS-Report-Submitter</spanx> value MUST match the value found in the
 domain <xref target="RFC5321"/> of the <spanx style="verb">contact-info</spanx> from the report body.  These
message header fields MUST be included and should allow for easy searching
for all reports submitted by a reporting domain or a particular submitter,
for example, in IMAP <xref target="RFC3501"/>:
</t>
<t><spanx style="verb">s SEARCH HEADER "TLS-Report-Domain" "example.com"</spanx>
</t>
<t>It is presumed that the aggregate reporting address will be equipped to
process new message header fields and extract MIME parts with the
prescribed media type and filename, and ignore the rest.  These
additional headers SHOULD be included in the DKIM <xref target="RFC6376"/> signature
for the message.
</t>

<t>The RFC5322.Subject field for report submissions SHOULD conform to
the following ABNF:
</t>

<figure align="center"><artwork align="center">
tlsrpt-subject = %s"Report" FWS               ; "Report"
                 %s"Domain:" FWS              ; "Domain:"
                 domain-name FWS              ; per [RFC6376]
                 %s"Submitter:" FWS           ; "Submitter:"
                 domain-name FWS              ; per [RFC6376]
                 %s"Report-ID:" FWS           ; "Report-ID:
                 "&lt;" id-left "@" id-right "&gt;" ; per [RFC5322]
                 [CFWS]                       ; per [RFC5322]
                                              ; (as with FWS)

</artwork></figure>
<t>The first domain-name indicates the DNS domain name about which the
 report was generated. The second domain-name indicates the DNS domain
 name representing the Sending MTA generating the report.  The purpose
 of the "Report-ID:" portion of the field is to enable the Policy Domain
 to identify and ignore duplicate reports that might be sent by a
 Sending MTA.
</t>
<t>For instance, this is a possible Subject field for a report to the
 Policy Domain &quot;example.net&quot; from the Sending MTA
 &quot;mail.sender.example.com&quot;.  It is line-wrapped as allowed
 by <xref target="RFC5322"/>:
</t>

<figure align="center"><artwork align="center">
     Subject: Report Domain: example.net
         Submitter: mail.sender.example.com
         Report-ID: &lt;735ff.e317+bf22029@mailexample.net&gt;
</artwork></figure>

<section anchor="example-report" title="Example Report">

<figure align="center"><artwork align="center">
 From: tlsrpt@mail.sender.example.com
     Date: Fri, May 09 2017 16:54:30 -0800
     To: mts-sts-tlsrpt@example.net
     Subject: Report Domain: example.net
         Submitter: mail.sender.example.com
         Report-ID: &lt;735ff.e317+bf22029@example.net&gt;
     TLS-Report-Domain: example.net
     TLS-Report-Submitter: mail.sender.example.com
     MIME-Version: 1.0
     Content-Type: multipart/report; report-type="tlsrpt";
         boundary="----=_NextPart_000_024E_01CC9B0A.AFE54C00"
     Content-Language: en-us

     This is a multipart message in MIME format.

     ------=_NextPart_000_024E_01CC9B0A.AFE54C00
     Content-Type: text/plain; charset="us-ascii"
     Content-Transfer-Encoding: 7bit

     This is an aggregate TLS report from mail.sender.example.com

     ------=_NextPart_000_024E_01CC9B0A.AFE54C00
     Content-Type: application/tlsrpt+gzip
     Content-Transfer-Encoding: base64
     Content-Disposition: attachment;
         filename="mail.sender.example!example.com!
                   1013662812!1013749130.json.gz"

     &lt;gzipped content of report&gt;

------=_NextPart_000_024E_01CC9B0A.AFE54C00--
...
</artwork></figure>
<t>Note that, when sending failure reports via SMTP, Sending MTAs MUST NOT
honor MTA-STS or DANE TLSA failures.
</t>
</section>
</section>

<section anchor="https-transport" title="HTTPS Transport">
<t>The report MAY be delivered by POST to HTTPS. If compressed, the report
SHOULD use the media type "application/tlsrpt+gzip"; otherwise it SHOULD use the media type
"application/tlsrpt+json" (see <xref target="iana-considerations"/>,
&quot;IANA Considerations&quot;).
</t>

<t>The receiving system MUST return a &quot;successful&quot; response from its HTTPS
server, typically a 200 or 201 HTTP code <xref target="RFC7231"/>.  Other codes could
indicate a delivery failure and may be retried as per local sender policy.
The receiving system is not expected to process reports at receipt time and
MAY store them for processing at a later time.
</t>
</section>

<section anchor="delivery-retry" title="Delivery Retry">
<t>In the event of a delivery failure, regardless of the delivery method, a
sender SHOULD attempt redelivery for up to 24 hours after the initial
attempt.  As previously stated, the reports are optional, so while it is
ideal to attempt redelivery, it is not required.  If multiple retries
are attempted, ideally they SHOULD be done with exponential backoff.
</t>
</section>

<section anchor="metadata-variances" title="Metadata Variances">
<t>As stated above, there are a variable number of ways to declare
information about the data therein.  If any of the items declared via
subject or filename disagree with the report, the report MUST be
considered the authoritative source.
</t>
</section>
</section>

<section anchor="iana-considerations" title="IANA Considerations">
<t>The following are the IANA considerations discussed in this document.
</t>

<section anchor="message-headers" title="Message Headers">
<t>Below is the Internet Assigned Numbers Authority (IANA) Permanent
Message Header Field registration information per <xref target="RFC3864"/>.
</t>

<figure align="center"><artwork align="center">
 Header field name:           TLS-Report-Domain
 Applicable protocol:         mail
 Status:                      standard
 Author/Change controller:    IETF
 Specification document(s):   RFC 8460


 Header field name:           TLS-Report-Submitter
 Applicable protocol:         mail
 Status:                      standard
 Author/Change controller:    IETF
 Specification document(s):   RFC 8460
</artwork></figure>
</section>

<section anchor="report-type" title="Report Type">
<t>This document creates a new registry for the &quot;report-type&quot; parameter to
the Content-Type header field for the &quot;multipart/report&quot; top-level media
type defined in <xref target="RFC6522"/>.
</t>
<t>The registry name is &quot;Report Type Registry&quot;, and the procedure for
updating the registry will be &quot;Specification Required&quot; <xref target="RFC8126"/>.
</t>
<t>An entry in this registry should contain:
</t>
<t>
<list style="symbols">
<t>the report-type being registered</t>
<t>one or more registered media types that can be used with this report-type</t>
<t>the document containing the registration action</t>
<t>an optional comment</t>
</list>
</t>
<t>The initial entries are:
</t>
<t>Report-Type: tlsrpt<vspace />
Media Type: application/tlsrpt+gzip, application/tlsrpt+json<vspace />
Registered By: [RFC8460]<vspace />
Comment: Media types suitable for use with this report-type are defined in
Sections 6.4 and 6.5 of [RFC8460]
</t>
<t>Report-Type: disposition-notification<vspace />
Media Type: message/disposition-notification<vspace />
Registered By: <xref target="RFC8098"/>, Section 10
</t>
<t>Report-Type: disposition-notification<vspace />
Media Type: message/global-disposition-notification<vspace />
Registered By: <xref target="RFC6533"/>, Section 6
</t>
<t>Report-Type: delivery-status<vspace />
Media Type: message/delivery-status<vspace />
Registered By: <xref target="RFC3464"/>, Section 6.2
</t>
<t>Report-Type: delivery-status<vspace />
Media Type: message/global-delivery-status<vspace />
Registered By: <xref target="RFC6533"/>, Section 6
</t>
</section>

<section anchor="gzip-media-type-suffix" title="+gzip Media Type Suffix">
<t>This document registers a new media type suffix &quot;+gzip&quot;. The gzip
format is a public domain, cross-platform, interoperable file
storage and transfer format, specified in <xref target="RFC1952"/>; it
supports compression and is used as the underlying representation
by a variety of file formats. The media type &quot;application/gzip&quot;
has been registered for such files. The suffix &quot;+gzip&quot; MAY be
used with any media type whose representation follows that
established for &quot;application/gzip&quot;. The registration form 
for the structured syntax suffix for use with media types is as follows:
</t>
<t>Type name:  gzip file storage and transfer format.
</t>
<t>+suffix:  +gzip
</t>
<t>References:  <xref target="RFC1952"/> <xref target="RFC6713"/>
</t>
<t>Encoding considerations:  gzip is a binary encoding.
</t>
<t>Fragment identifier considerations: The syntax and semantics
      of fragment identifiers specified for
      +gzip SHOULD be as specified for &quot;application/gzip&quot;.  (At
      publication of this document, there is no fragment identification
      syntax defined for &quot;application/gzip&quot;.) The syntax and semantics
      for fragment identifiers for a specific &quot;xxx/yyy+gzip&quot; SHOULD be
      processed as follows:
</t>

<figure align="center"><artwork align="center">
  For cases defined in +gzip, where the fragment identifier
  resolves per the +gzip rules, process as specified in
  +gzip.

  For cases defined in +gzip, where the fragment identifier does
  not resolve per the +gzip rules, process as specified in
  "xxx/yyy+gzip".

  For cases not defined in +gzip, process as specified in
  "xxx/yyy+gzip".
</artwork></figure>

<t>Interoperability considerations:  N/A
</t>
<t>Security considerations: gzip format doesn't provide confidentiality protection.
      Integrity protection is provided by an Adler-32 checksum, which is not
      cryptographically strong. See also the security considerations of <xref target="RFC6713"/>.
      Each individual media type registered with a +gzip suffix can have additional
      security considerations.  Additionally, gzip objects can contain multiple
      files and associated paths.  File paths must be validated when the files
      are extracted; a malicious file path could otherwise cause the extractor
      to overwrite application or system files.
</t>
<t>Contact: art@ietf.org
</t>
<t>Author/Change controller:  Internet Engineering Task Force
      (iesg@ietf.org).
</t>
</section>

<section anchor="applicationtlsrptjson-media-type" title="application/tlsrpt+json Media Type">
<t>This document registers multiple media types, beginning with Table 1
below.
</t>

<figure align="center"><artwork align="center">
+-------------+----------------+-------------+-------------------+
| Type        | Subtype        | File Ext    | Specification     |
+-------------+----------------+-------------+-------------------+
| application | tlsrpt+json    |  .json      | Section 5.3       |
+-------------+----------------+-------------+-------------------+
               
                Table 1: SMTP TLS Reporting Media Type
</artwork></figure>
<t>Type name: application
</t>
<t>Subtype name: tlsrpt+json
</t>
<t>Required parameters: N/A
</t>
<t>Optional parameters: N/A
</t>
<t>Encoding considerations: Encoding considerations are identical to
      those specified for the <spanx style="verb">application/json</spanx> media type. See
      <xref target="RFC7493"/>.
</t>
<t>Security considerations: Security considerations relating to SMTP
      TLS Reporting are discussed in Section 7.
</t>
<t>Interoperability considerations: This document specifies the format of
      conforming messages and the interpretation thereof.
</t>
<t>Published specification: Section 5.3 of RFC 8460.
</t>
<t>Applications that use this media type: Mail User Agents (MUAs) and
      Mail Transfer Agents.
</t>
<t>Additional information:

<list style="empty">
  <t>Deprecated alias names for this type:  N/A</t>
  <t>Magic number(s):  N/A</t>
  <t>File extension(s):  ".json"</t>
  <t>Macintosh file type code(s):  N/A</t>
</list></t>
<t>Person &amp; email address to contact for further information: 
<vspace blankLines="0"/>
See the Authors' Addresses section.
</t>
<t>Intended usage:  COMMON
</t>
<t>Restrictions on usage:  N/A
</t>
<t>Author:  See the Authors' Addresses section.
</t>
<t>Change controller:  Internet Engineering Task Force (iesg@ietf.org).
</t>
</section>

<section anchor="applicationtlsrptgzip-media-type" title="application/tlsrpt+gzip Media Type">

<figure align="center"><artwork align="center">
+-------------+----------------+-------------+-------------------+
| Type        | Subtype        | File Ext    | Specification     |
+-------------+----------------+-------------+-------------------+
| application | tlsrpt+gzip    |  .gz        | Section 5.3       |
+-------------+----------------+-------------+-------------------+
         
                Table 2: SMTP TLS Reporting Media Type
</artwork></figure>
<t>Type name: application
</t>
<t>Subtype name: tlsrpt+gzip
</t>
<t>Required parameters: N/A
</t>
<t>Optional parameters: N/A
</t>
<t>Encoding considerations: Binary
</t>
<t>Security considerations: Security considerations relating to SMTP
      TLS Reporting are discussed in Section 7.  Security
      considerations related to gzip compression are discussed
      in RFC 6713.
</t>
<t>Interoperability considerations: This document specifies the format of
      conforming messages and the interpretation thereof.
</t>
<t>Published specification: Section 5.3 of RFC 8460.
</t>
<t>Applications that use this media type: Mail User Agents (MUAs) and
      Mail Transfer Agents.
</t>
<t>Additional information:
<list style="empty">
  <t>Deprecated alias names for this type:  N/A</t>
  <t>Magic number(s):  The first two bytes are 0x1f, 0x8b.</t>
  <t>File extension(s):  ".gz"</t>
  <t>Macintosh file type code(s):  N/A</t>
</list></t>
<t>Person &amp; email address to contact for further information: 
<vspace blankLines="0"/>
See the Authors' Addresses section.
</t>
<t>Intended usage:  COMMON
</t>
<t>Restrictions on usage:  N/A
</t>
<t>Author:  See the Authors' Addresses section.
</t>
<t>Change controller:  Internet Engineering Task Force
      (iesg@ietf.org).
</t>
</section>

<section anchor="starttls-validation-result-types" title="STARTTLS Validation Result Types">
<t>This document creates a new registry, &quot;STARTTLS Validation Result
Types&quot;. The initial entries in the registry are:
</t>


<figure align="center"><artwork align="center">
+-----------------------------+--------------+
| Result Type                 |  Description |
+-----------------------------+--------------+
| starttls-not-supported      |  Section 4.3 |
| certificate-host-mismatch   |  Section 4.3 |
| certificate-expired         |  Section 4.3 |
| tlsa-invalid                |  Section 4.3 |
| dnssec-invalid              |  Section 4.3 |
| dane-required               |  Section 4.3 |
| certificate-not-trusted     |  Section 4.3 |
| sts-policy-invalid          |  Section 4.3 |
| sts-webpki-invalid          |  Section 4.3 |
| validation-failure          |  Section 4.3 |
| sts-policy-fetch-error      |  Section 4.3 |
+-----------------------------+--------------+
</artwork></figure>
<t>The above entries are described in <xref target="result-types"/>, &quot;Result
Types&quot;. New result types can be added to this registry using the &quot;Expert
Review&quot; IANA registration policy.
</t>
</section>
</section>

<section anchor="security-considerations" title="Security Considerations">
<t>SMTP TLS Reporting provides visibility into misconfigurations or
attempts to intercept or tamper with mail between hosts who support
STARTTLS. There are several security risks presented by the existence of
this reporting channel:
</t>
<t>
<list style="symbols">
<t>Flooding of the Aggregate Report URI (rua) endpoint: An attacker could
flood the endpoint with excessive reporting traffic and prevent the
receiving domain from accepting additional reports. This type of
Denial-of-Service attack would limit visibility into STARTTLS
failures, leaving the receiving domain blind to an ongoing attack.</t>

<t>Untrusted content: An attacker could inject malicious code into the
report, exploiting any vulnerabilities in the report-handling systems of the receiving domain. Implementers
are advised to take precautions against evaluating the contents of the
report.</t>

<t>Report snooping: An attacker could create a bogus TLSRPT record to
receive statistics about a domain the attacker does not own. Since an
attacker that is able to poison DNS is already able to receive counts of SMTP
connections (and, absent DANE or MTA-STS policies, actual SMTP message
payloads), this does not present a significant new vulnerability.</t>

<t>Ignoring HTTPS validation when submitting reports: When reporting benign
misconfigurations, it is likely that a misconfigured SMTP server may also
mean a misconfigured HTTPS server; as a result, reporters who require
HTTPS validity on the reporting endpoint may fail to alert administrators
about such misconfigurations. Conversely, in the event of an actual attack,
an attacker who wishes to create a gap in reporting and could intercept
HTTPS reports could, just as easily, simply thwart the resolution of the
TLSRPT TXT record or establishment of the TCP session to the HTTPS endpoint.
Furthermore, such a man-in-the-middle attacker could discover most or all of
the metadata exposed in a report merely through passive observation. As a
result, we consider the risks of failure to deliver reports on
misconfigurations to outweigh those of attackers intercepting reports.</t>

<t>Reports as DDoS: TLSRPT allows specifying destinations for the reports
that are outside the authority of the Policy Domain, which allows
domains to delegate processing of reports to a partner organization.
However, an attacker who controls the Policy Domain DNS could also use
this mechanism to direct the reports to an unwitting victim, flooding
that victim with excessive reports.  DMARC <xref target="RFC7489"/> defines a
solution for verifying delegation to avoid such attacks; the need for
this is greater with DMARC, however, because DMARC allows an attacker
to trigger reports to a target from an innocent third party by sending
mail to that third party (which triggers a report from the third party to
the target).  In the case of TLSRPT, the attacker would have to induce
the third party to send mail to the attacker in order to trigger reports
from the third party to the victim; this reduces the risk of such an
attack and the need for a verification mechanism.</t>
</list>
</t>
<t>Finally, because TLSRPT is intended to help administrators discover
man-in-the-middle attacks against transport-layer encryption, including
attacks designed to thwart negotiation of encrypted connections (by
downgrading opportunistic encryption or, in the case of MTA-STS,
preventing discovery of a new MTA-STS Policy), we must also consider the
risk that an adversary who can induce such a downgrade attack can also
prevent discovery of the TLSRPT TXT record (and thus prevent discovery
of the successful downgrade attack). Administrators are thus encouraged
to deploy TLSRPT TXT records with a large TTL (reducing the window for
successful application of transient attacks against DNS resolution of the
record) or to deploy DNSSEC on the deploying zone.
</t>
</section>

<section anchor="privacy-considerations" title="Privacy Considerations">
<t>MTAs are generally considered public knowledge; however, the internals
of how those MTAs are configured and the users of those MTAs may not be
as public.  It should be noted that providing a receiving site with
information about TLS failures may reveal information about the sender's configuration
or even information about the senders themselves.  For example, sending
a report may disclose what TLS implementation the sender uses, as the inability to negotiate a session may be a known incompatibility between two implementions.  This may, indirectly, leak information on the reporter's operating system or even region, if, for example, a rare TLS implemention is popular among certain users or in certain locations.
</t>
</section>

</middle>
<back>

<references title="Normative References">

<!--draft-ietf-uta-mta-sts-21; Active - in EDIT*R state-->
<reference anchor='RFC8461' target="https://www.rfc-editor.org/info/rfc8461">
<front>
<title>SMTP MTA Strict Transport Security (MTA-STS)</title>
<author initials='D' surname='Margolis' fullname='Daniel Margolis'>
    <organization />
</author>
<author initials='M' surname='Risher' fullname='Mark Risher'>
    <organization />
</author>
<author initials='B' surname='Ramakrishnan' fullname='Binu Ramakrishnan'>
    <organization />
</author>
<author initials='A' surname='Brotman' fullname='Alexander Brotman'>
    <organization />
</author>
<author initials='J' surname='Jones' fullname='Janet Jones'>
    <organization />
</author>
<date month='September' year='2018' />
</front>
<seriesInfo name="RFC" value="8461" />
<seriesInfo name="DOI" value="10.17487/RFC8461" />

</reference>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1952.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3339.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3492.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7208.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5280.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5321.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5322.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5891.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5952.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6068.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6376.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6522.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6698.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6713.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7231.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7405.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7493.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7671.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7672.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"?>
</references>
<references title="Informative References">
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3207.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3464.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3501.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3864.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6533.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7435.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7469.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7489.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8098.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"?>
</references>

<section anchor="example-reporting-policy-1" title="Example Reporting Policy">

<section anchor="report-using-mailto-1" title="Report Using MAILTO">

<figure align="center"><artwork align="center">
_smtp._tls.mail.example.com. IN TXT \
        "v=TLSRPTv1;rua=mailto:reports@example.com"
</artwork></figure>
</section>

<section anchor="report-using-https-1" title="Report Using HTTPS">

<figure align="center"><artwork align="center">
_smtp._tls.mail.example.com. IN TXT \
        "v=TLSRPTv1; \
        rua=https://reporting.example.com/v1/tlsrpt"
</artwork></figure>
</section>
</section>

<section anchor="example-json-report" title="Example JSON Report">
<t>Below is an example JSON report for messages from Company-X to Company-Y,
where 100 sessions were attempted to Company-Y servers with an expired
certificate, and 200 sessions were attempted to Company-Y servers that
did not successfully respond to the <spanx style="verb">STARTTLS</spanx> command.  Additionally, 3
sessions failed due to &quot;X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED&quot;.
</t>

<figure align="center"><artwork align="center">
{
  "organization-name": "Company-X",
  "date-range": {
    "start-datetime": "2016-04-01T00:00:00Z",
    "end-datetime": "2016-04-01T23:59:59Z"
  },
  "contact-info": "sts-reporting@company-x.example",
  "report-id": "5065427c-23d3-47ca-b6e0-946ea0e8c4be",
  "policies": [{
    "policy": {
      "policy-type": "sts",
      "policy-string": ["version: STSv1","mode: testing",
            "mx: *.mail.company-y.example","max_age: 86400"],
      "policy-domain": "company-y.example",
      "mx-host": "*.mail.company-y.example"
    },
    "summary": {
      "total-successful-session-count": 5326,
      "total-failure-session-count": 303
    },
    "failure-details": [{
      "result-type": "certificate-expired",
      "sending-mta-ip": "2001:db8:abcd:0012::1",
      "receiving-mx-hostname": "mx1.mail.company-y.example",
      "failed-session-count": 100
    }, {
      "result-type": "starttls-not-supported",
      "sending-mta-ip": "2001:db8:abcd:0013::1",
      "receiving-mx-hostname": "mx2.mail.company-y.example",
      "receiving-ip": "203.0.113.56",
      "failed-session-count": 200,
      "additional-information": "https://reports.company-x.example/ 
        report_info ? id = 5065427 c - 23 d3# StarttlsNotSupported "
    }, {
      "result-type": "validation-failure",
      "sending-mta-ip": "198.51.100.62",
      "receiving-ip": "203.0.113.58",
      "receiving-mx-hostname": "mx-backup.mail.company-y.example",
      "failed-session-count": 3,
      "failure-reason-code": "X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED"
    }]
  }]
}

</artwork></figure>

</section>
<section title="Contributors" numbered="no">

<figure align="left"><artwork align="left">

Laetitia Baudoin 
Google, Inc.  
lbaudoin@google.com

</artwork></figure>

</section>

</back>
</rfc>
