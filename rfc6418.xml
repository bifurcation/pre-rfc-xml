<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc2119 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
]>

<rfc category="info" ipr="trust200902" number="6418" submissionType="IETF" consensus="yes">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
  <?rfc toc="yes" ?>
  <?rfc symrefs="yes" ?>
  <?rfc sortrefs="yes"?>
  <?rfc compact="yes" ?>
  <?rfc subcompact="no" ?>
  <?rfc rfcedstyle="yes" ?>

  <front>
    <title abbrev="Multiple Interfaces Problem Statement"> Multiple Interfaces and Provisioning Domains Problem Statement</title>
    <author initials="M." surname="Blanchet" fullname="Marc Blanchet">
      <organization>Viagenie</organization>
      <address>
    <postal>
      <street>2875 boul. Laurier, suite D2-630</street>
      <city>Quebec</city>
      <region>QC</region>
      <code>G1V 2M2</code>
      <country>Canada</country>
    </postal>
    <email>Marc.Blanchet@viagenie.ca</email>
    <uri>http://viagenie.ca</uri>
  </address>
    </author>
    <author initials="P." surname="Seite" fullname="Pierrick Seite">
      <organization>France Telecom - Orange</organization>
      <address>
        <postal>
          <street>4, rue du Clos Courtel, BP 91226</street>
          <city>Cesson-Sevigne</city>
          <code>35512</code>
          <country>France</country>
        </postal>
        <email>pierrick.seite@orange.com</email>
       </address>
    </author>
    <date month="October" year="2011" />

<keyword>problem statement, multi-homing, multiple interfaces, MIF</keyword>

    <abstract>
      <t>This document describes issues encountered by a node attached to
multiple provisioning domains. This node receives configuration information
from each of its provisioning domains, where some configuration objects are
global to the node and others are local to the interface. Issues such as
selecting the wrong interface to send traffic happen when conflicting
node-scoped configuration objects are received and inappropriately used.
Moreover, other issues are the result of simultaneous attachment to
multiple networks, such as domain selection or addressing and naming
space overlaps, regardless of the provisioning mechanism. While multiple
provisioning domains are typically seen on nodes with multiple interfaces,
this document also discusses situations involving single-interface nodes.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>A multihomed node may have multiple provisioning domains (via physical
and/or virtual interfaces). For example, a node may be simultaneously connected
to a wired Ethernet LAN, an 802.11 LAN, a 3G cell network,
one or multiple VPN connections, or one or multiple tunnels (automatic or
manual). Current laptops and smartphones typically have multiple access
network interfaces and, thus, are often connected to different
provisioning domains.</t>

      <t> A multihomed node receives configuration information from each of its
attached networks, through various mechanisms such as
DHCPv4 <xref target="RFC2131"/>, DHCPv6 <xref target="RFC3315"/>,
PPP <xref target="RFC1661"/>, and IPv6 Router Advertisements
<xref target="RFC4861"/>. Some received configuration objects are
specific to an interface, such as the IP address and the link prefix.
Others are typically
considered by implementations as being global to the node, such as the routing
information (e.g., default gateway), DNS server IP addresses, and address
selection policies, herein referred to as "node-scoped".</t>

      <t>When the received node-scoped configuration objects have different
values from each provisioning domain, such as different DNS server IP
addresses, different default gateways, or different address selection policies,
the node has to decide which one to use or how it will merge them.</t>

        <t>Other issues are the result of simultaneous attachment to multiple
networks, such as addressing and naming space overlaps, regardless of the
provisioning mechanism.</t>

      <t> The following sections define the multiple interfaces (MIF) node
and the scope of this work, describe related work, list issues,
and then summarize the underlying problems.</t>

      <t> A companion document, <xref target="RFC6419"/>,
discusses some current practices of various implementations dealing with
MIF.</t>
    </section>

    <section title="Terminology">
      <t>
      Administrative domain
      <list style='empty'>
        <t> A group of hosts, routers, and networks operated and managed by a single organization <xref target="RFC1136"/>.</t>
      </list>
      </t>

      <t>
      Provisioning domain
      <list style='empty'>
        <t>A set of consistent configuration information (e.g., default router,
network prefixes, DNS) and the corresponding interface.  One administrative
domain may have multiple provisioning domains. Successful attachment to the
provisioning domain implies that the terminal attaches to the corresponding
interface with appropriate configuration information.</t>
      </list>
      </t>

      <t>
      Reference to IP version
      <list style='empty'>
      <t>When a protocol keyword such as IP, PPP, or DHCP is used in this document
without any reference to a specific IP version, then it implies both IPv4 and
IPv6. A specific IP version keyword such as DHCPv4 or DHCPv6 is meant to be
specific to that IP version.
      </t>
      </list>
      </t>
    </section>

    <section title="Scope and Existing Work">
      <t> This section describes existing related work and defines the scope of the problem.  </t>
      <section title="Interactions Below IP" anchor="belowIP">
      <t>Some types of interfaces have link-layer characteristics that may be
used in determining how multiple provisioning domain issues will be dealt
with. For instance, link layers may have authentication and encryption
characteristics that could be used as criteria for interface
selection. However, network discovery and selection on lower layers as defined
by <xref target="RFC5113"/> is out of scope of this document. Moreover,
interoperability with lower-layer mechanisms such as services defined in IEEE
802.21, which aims at facilitating handover between heterogeneous networks
<xref target="MIH"/>, is also out of scope.</t>

       <t>Some mechanisms (e.g., based on a virtual IP interface)
allow sharing a single IP address over multiple interfaces to networks with
disparate access technologies. From the IP-stack view on the node, there is
only a single interface and single IP address. Therefore, this situation is out
of scope of this problem statement. Furthermore, link aggregation done
under IP where a single interface is shown to the IP stack is also out of
scope. </t>
       </section> 

      <section title="MIF Node Characterization">
        <t>
        A MIF node has the following characteristics:

      <list style='symbols'>
       <t>A MIF node is an <xref target="RFC1122"/> IPv4- and/or <xref target="RFC4294"/> IPv6-compliant node.</t>
       <t>A MIF node is configured with more than one IP address (excluding loopback and link-local).</t>
       <t>A MIF node can attach to more than one provisioning domain, as presented to the IP stack. </t>
       <t>The interfaces may be virtual or physical. </t>
       <t>Configuration objects come from one or more administrative domains.</t>
       <t>The IP addresses may be from the same or different address families, such as IPv4 and IPv6. </t>
       <t>Communications using these IP addresses may happen simultaneously and independently.</t>
       <t>Some communications using these IP addresses are possible on all the provisioning domains, while some are only possible on a smaller set of the provisioning domains.</t>
       <t>While the MIF node may forward packets between its interfaces, the
forwarding of packets is not taken into account in this definition and is
out of scope for this document.</t>
      </list>
        </t>
        </section>
<section title="Host Requirements">
<t>"Requirements for Internet Hosts -- Communication Layers"
<xref target="RFC1122"/> describes the multihomed node as if it
has multiple IP addresses, which may be associated with one or more
physical interfaces connected to the same or different networks.</t>

<t>Section 3.3.1.3 of <xref target="RFC1122"/> states that the node
maintains a route cache table where each entry contains the local IP
address, the destination IP address, Type(s) of Service (superseded by the
Differentiated Services Code Point <xref target="RFC2474"/>), and the next-hop
gateway IP address. The route cache entry would have data about the
properties of the path, such as the average round-trip delay measured by a
transport protocol. Nowadays, implementations are not caching this
information. </t>

        <t>
          <xref target="RFC1122"/> defines two host models: 
          <list style='symbols'>
            <t>The "strong" host model defines a multihomed host as a set of
logical hosts within the same physical host. In this model, a packet must be
sent on an interface that corresponds to the source address of that packet.</t> 
            <t>The "weak" host model describes a host that has some embedded
gateway functionality. In the weak host model, the host can send and receive
packets on any interface.</t>
        </list>
        </t>

         <t>The multihomed node computes routes for outgoing datagrams
differently, depending on the model. Under the strong model, the route is
computed based on the source IP address, the destination IP address, and the
Differentiated Services Code Point. Under the weak model, the source IP address
is not used; only the destination IP address and the Differentiated
Services Code Point are used.</t>
      </section>

      <section title="Mobility and Other IP Protocols" anchor="MobilityIP">
        <t>
The scope of this document is only about nodes implementing <xref
target="RFC1122"/> for IPv4 and <xref target="RFC4294"/> for IPv6 without
additional features or special-purpose support for transport layers, mobility,
multihoming, or identifier-locator split mechanisms. Dealing with multiple
interfaces with such mechanisms is related but considered as a separate problem
and is under active study elsewhere in the IETF <xref target="RFC4960"/>
<xref target="RFC5206"/> <xref target="RFC5533"/> <xref target="RFC5648"/>
<xref target="RFC6182"/>.</t>

<t>
When an application is using one interface while another interface with better
characteristics becomes available, the ongoing application session could be
transferred to the newly enabled interface. However, in some cases, the ongoing
session shall be kept on the current interface while initiating the new
session on  the new interface. The problem of interface selection is
within the MIF scope and may leverage specific node functions (<xref
target="CM"/>). However, if transfer of an IP session is required, IP mobility
mechanisms, such as <xref target="RFC6275"/>, shall be used.</t>
      </section>

      <section title="Address Selection" anchor="addrsel">
        <t>"Default Address Selection for Internet Protocol version 6
(IPv6)" <xref target="RFC3484"/> defines algorithms for source and
destination IP address selections. Default address selection
as defined in <xref target="RFC3484"/> is mandatory to implement in
IPv6 nodes, which also means dual-stack nodes.
A node-scoped policy table managed by the IP stack is defined.
Mechanisms to update the policy table are defined in <xref target="ADDR-SELECT-SOL"/>.</t>

      <t>Issues on using default address selection were found in <xref
target="RFC5220"/> and <xref target="RFC5221"/> in the context of multiple
prefixes on the same link.</t>

      </section>

      <section title="Finding and Sharing IP Addresses with Peers">
        <t> Interactive Connectivity Establishment <xref
target="RFC5245">(ICE)</xref> is a technique for NAT traversal for UDP-based
(and TCP-based) media streams established by the offer/answer model.
The multiplicity of IP addresses, ports, and transport mechanisms in
Session Description Protocol (SDP) offers are tested for connectivity
by peer-to-peer connectivity checks. The result is candidate IP addresses and
ports for establishing a connection with the other peer. However, ICE does not
solve issues when incompatible configuration objects are received on different
interfaces.  </t>

        <t> Some application protocols do referrals of IP addresses, port
numbers, and transport for further exchanges. For instance, applications can
provide reachability information to themselves or to a third party. The general
problem of referrals is related to the multiple-interface problem, since, in
this context, referrals must provide consistent information depending on which
provisioning domain is used. Referrals are discussed in
<xref target="REFERRAL-PS"/> and <xref target="SHIM6-APP-REFER"/>. 
     </t>
      </section>

<section title="Provisioning Domain Selection" anchor="INTF-SEL">        
<t> In a MIF context, the node may simultaneously handle multiple domains with disparate characteristics, 
especially when supporting multiple access technologies. Selection is simple if the application is restricted 
to one specific provisioning domain: the application must start on the default provisioning domain if 
available; otherwise, the application does not start. However, if the application can be run on several 
provisioning domains, the selection problem can be difficult. </t>

<t>There is no standard method for selecting a provisioning domain, but some
recommendations exist while restricting the scope to the interface selection
problem. For example, <xref target="TS23.234"/> proposes a default mechanism
for the interface selection. This method uses the following information
(non-exhaustive list):

        <list style="symbols">
                <t>preferences provided by the user</t>
                <t>policies provided by the network operator</t>
                <t>quality of the radio link</t>
                <t>network resource considerations (e.g., available Quality of
                  Service (QoS), IP connectivity check)</t>
                <t>the application QoS requirements in order to map
                  applications to the best interface</t>
        </list>
</t>
<t> However, <xref target="TS23.234"/> is designed for a specific
multiple-interfaces use case. A generic way to handle these characteristics is
yet to be defined.</t>

</section>

<section title="Session Management" anchor="CM">
  <t>Some implementations, especially in the mobile world, rely on a higher-level
session manager, also called a connection manager, to deal with issues brought by
simultaneous attachment to multiple provisioning domains. Typically, the
session manager may deal with the selection of the interface, and/or the
provisioning domain, on behalf of the applications, or tackle complex
issues such as how to resolve conflicting policies
(<xref target="POL-ISSUES"/>). As discussed in <xref target="INTF-SEL"/>,
the session manager may encounter difficulties because of multiple and
diverse criteria.</t>

  <t>Session managers usually leverage the link-layer interface to gather
information (e.g., lower-layer authentication and encryption methods; see <xref
target="belowIP"/>) and/or for control purposes. Such a link-layer interface may
not provide all required services to make a proper decision (e.g., interface
selection). Some OSes or terminals already implement session managers <xref
target="RFC6419"/>, and vendor-specific platforms
sometimes provide a specific sockets API (<xref target="API"/>) that a
session manager can use. 

However, the generic architecture of a
session manager and its associated API are not currently standardized,
so session manager behavior may differ between OSes and platforms. 
</t>

<t>
Management of multiple interfaces sometimes relies on a virtual interface. For
instance, a virtual interface allows support of multihoming, inter-technology
handovers, and IP flow mobility in a Proxy Mobile IPv6 network <xref
target="LOGICAL-IF-SUPPORT"/>. This virtual interface
allows a multiple-interface node sharing a set of IP addresses on multiple
physical interfaces and can also add benefits to multi-access scenarios such as
Third Generation Partnership Project (3GPP) Multi Access Packet Data
Network (PDN) Connectivity <xref target="TS23.402"/>. In most cases,
the virtual interface will map several physical network interfaces, and the
session manager should control the configuration of each one of these
virtual and physical interfaces, as well as the mapping between the virtual and
sub-interfaces.  
</t>

<t>
In a situation involving multiple interfaces, active application sessions
should survive path failures. Here, the session manager may come into play
but only relying on existing mechanisms to manage multipath TCP (MPTCP) <xref
target="RFC6182"/> or failover (Mobile IPv6 (MIP6) <xref
target="RFC6275"/>, Shim6 <xref target="RFC5533"/>). A description of
the interaction between these mechanisms and the session manager is out of
scope of this document.
</t>
</section>

<section title="Sockets API" anchor="API">
  <t> An Application Programming Interface (API) may expose objects that user
applications or session managers use for dealing with multiple interfaces.
For example, <xref target="RFC3542"/> defines how an application using the
advanced sockets API specifies the interface or the source IP address through
a simple bind() operation or with the IPV6_PKTINFO socket option.</t>

  <t>Other APIs have been defined to solve issues similar to MIF. For instance,
<xref target="RFC5014"/> defines an API to influence the default address
selection mechanism by specifying attributes of the source addresses it
prefers. <xref target="RFC6316"/> gives another
example, in a multihoming context, by defining a sockets API enabling
interactions between applications and the multihoming shim layer for advanced
locator management, and access to information about failure detection and path
exploration.</t>
       </section>
    </section>

    <section title="MIF Issues">
      <t>This section describes the various issues when using a MIF node that
has already received configuration objects from its various provisioning
domains, or when multiple interfaces are used and result in wrong domain
selection, addressing, or naming space overlaps. They occur, for example, when:

        <list style="numbers">
          <t>one interface is on the Internet and one is on a corporate private network. The latter may be through VPN.</t>
          <t>one interface is on one access network (i.e., WiFi) and the other
one is on another access network (3G) with specific services.</t>

        </list>
      </t>

      <section title="DNS Resolution Issues" anchor="DNSissues">

      <t>A MIF node (M1) has an active interface (I1)
connected to a network (N1), which has its DNS servers (S1 as
primary DNS server) and another active interface (I2) connected to a
network (N2), which has its DNS servers (S2 as primary DNS server).
S1 serves some private namespace, "private.example.com".
The user or the application uses a name "a.private.example.com", which
is within the private namespace of S1 and only resolvable by S1.
Any of the following situations may occur:

        <list style="numbers">
          <t>The M1 stack, based on its routing table, uses I2 to reach S1 to resolve "a.private.example.com". M1 never reaches S1. The name is not resolved.</t>
          <t>M1 keeps only one set of DNS server addresses from the received
configuration objects. Let us assume that M1 keeps S2's address as the
primary DNS server. M1 sends the forward DNS query for
a.private.example.com to S2. S2 responds with an error for a nonexistent
domain (NXDOMAIN). The name is not resolved. This issue also arises when
performing a reverse DNS lookup. In the same situation, the reverse DNS query
fails.</t>
          <t>M1 keeps only one set of DNS server addresses from the received
configuration objects. Let us assume that M1 keeps S2's address.
M1 sends the DNS query for a.private.example.com to S2. S2 queries its
upstream DNS and gets an IP address for a.private.example.com.
However, the IP address is not the same one that S1
would have given. Therefore, the application tries to connect to the wrong
destination node, or to the wrong interface, which may imply
security issues or result in lack of service.</t>

          <t>S1 or S2 has been used to resolve "a.private.example.com" to an
<xref target="RFC1918"/> address. Both N1 and N2 are
<xref target="RFC1918"/>-addressed networks. If addresses overlap,
traffic may be sent using the wrong
interface. This issue is not related to receiving multiple configuration
objects, but to an address overlap between interfaces or attaching
networks.</t>  
          <t>M1 has resolved a Fully Qualified Domain Name (FQDN)
to a locally valid IP address when connected
to N1. If the node loses connection to N1, the node may try to connect, via
N2, to the same IP address as earlier, but as the address was only locally
valid, connection setup fails. Similarly, M1 may have received NXDOMAIN for an
FQDN when connected to N1. After detachment from N1, the node should not assume
the FQDN continues to be nonexistent on N2.</t>
          <t>M1 requests a AAAA record from a DNS server on a network that uses
protocol translators and DNS64 <xref target="RFC6147"/>. If M1 receives
a synthesized AAAA record, it is guaranteed to be valid only on the
network from which it was learned.  If M1 uses synthesized AAAA on any other
network interface, traffic may be lost, dropped, or forwarded to the wrong
network.</t>
        </list>
      </t>

          <t>
          Some networks require the user to authenticate on a captive web
portal before providing Internet connectivity. If this redirection is achieved
by modifying the DNS reply, specific issues may occur.
          Consider a MIF node (M1) with an active interface (I1) connected to a
network (N1), which has its DNS server (S1), and another active interface (I2)
connected to a network (N2), which has its DNS server (S2). Until the user has
not authenticated, S1 is configured to respond to any A or AAAA record query
with the IP address of a captive portal, so as to redirect web browsers to an
access control portal web page. This captive portal can be reached only via
I1. When the user has authenticated to the captive portal, M1 can resolve an
FQDN when connected to N1. However, if the address is only locally valid on N1,
any of the issues described above may occur. When the user has not
authenticated, any of the following situations may occur:

        <list style="numbers">
                <t>M1 keeps only one set of DNS server addresses from
the received configuration objects and kept S2 address. M1 sends the forward
DNS query for a.example.com to S2.  S2 responds with the correct answer, R1. M1
attempts to contact R1 by way of I1. The connection fails. Or, the connection
succeeds, bypassing the security policy on N1, possibly exposing the owner of
M1 to prosecution.</t>
                <t>M1 keeps only one set of DNS server addresses from
the received configuration objects and kept S1 address.  M1 sends the DNS query
for a.example.com to S1.  S1 provides the address of its captive portal. M1
attempts to contact this IP address using I1. The application fails to connect,
resulting in lack of service.  Or, the application succeeds in connecting but
connects to the captive portal rather than the intended destination, resulting
in lack of service (i.e., an IP connectivity check issue, as described in <xref
target="SM-issues"/>).</t>
        </list>
          </t>
    </section>

    <section title="Node Routing">
      <t>Consider a MIF node (M1) with an active interface (I1)
connected to a network (N1) and another active interface (I2)
connected to a network (N2). The user or the application is trying to
reach an IP address (IP1). Any of the following situations may occur:

        <list style='numbers'>
          <t>For IP1, M1 has one default route (R1) via network (N1). To reach
IP1, the M1 stack uses R1 and sends through I1. If IP1 is only reachable by
N2, IP1 is never reached or is not the right target.</t>
          <t>For the IP1 address family, M1 has one default route (R1, R2) per
network (N1, N2). IP1 is reachable by both networks, but the N2 path has better
characteristics, such as better round-trip time, least cost, better bandwidth,
etc. These preferences could be defined by the user, provisioned by the network
operator, or otherwise appropriately configured. The M1 stack uses R1 and
tries to send through I1. IP1 is reached, but the service would be better
via I2. 
</t>
     <t>For the IP1 address family, M1 has a default route (R1), a specific
X.0.0.0/8 route R1B (for example, but not restricted to an <xref target="RFC1918"/> prefix)
to N1,
and a default route (R2) to N2. IP1 is reachable by N2 only, but the prefix
(X.0.0.0/8) is used in both networks. Because of the most specific route R1B,
the M1 stack sends packets through I2, and those packets never reach
the target.</t>
        </list>
      </t>

      <t>A MIF node may have multiple routes to a destination. However, by
default, it does not have any hint concerning which interface would be the best
to use for that destination. The first-hop selection may leverage on local
routing policy, allowing some actors (e.g., network operator or service
provider) to influence the routing table, i.e., make a decision regarding which
interface to use. For instance, a user on such a multihomed node might want a
local policy to influence which interface will be used based on various
conditions. Some Standards Development Organizations (SDOs)
have defined policy-based routing selection
mechanisms. For instance, the Access Network Discovery and Selection Function
(ANDSF) <xref target="TS23.402"/> provides inter-system routing policies to
terminals with both a 3GPP interface and non-3GPP interfaces.  However, the routing
selection may still be difficult, due to disjoint criteria as discussed in
<xref target="CM"/>. Moreover, information required to make the right decision
may not be available. For instance, interfaces to a lower layer may not provide
all required hints concerning the selection (e.g., information on
interface quality).
      </t>
      <t>A node usually has a node-scoped routing table. However, a MIF node is
connected to multiple provisioning domains; if each of these domains pushes
routing policies to the node, then conflicts between policies may happen, and
the node has no easy way to merge or reconcile them.</t>
      <t> On a MIF node, some source addresses are not valid if used on some
interfaces. For example, an <xref target="RFC1918"/> source address
might be appropriate on the
VPN interface but not on the public interface of the MIF node. If the source
address is not chosen appropriately, then packets may be filtered in the path
if source address filtering is in place (<xref target="RFC2827"/>, <xref
target="RFC3704"/>), and reply packets may never come back to the source.</t>
    </section>

    <section title="Conflicting Policies" anchor="POL-ISSUES">
      <t>The distribution of configuration policies (e.g., address selection,
routing, DNS selection) to end nodes is being discussed (e.g., ANDSF in <xref
target="TS23.402"/>, <xref target="DHCPv6-ROUTE-OPTIONS"/>). If
implemented in multiple provisioning domains, such mechanisms may conflict and
create issues for the multihomed node. Considering a MIF node (M1) with an
active interface (I1) connected to a network (N1) and another active interface
(I2) connected to a network (N2), the following conflicts may occur:

        <list style='numbers'>
          <t>M1 receives from both networks (N1 and N2) an update of its
default address selection policy. However, the policies are specific to each
network. The policies are merged by the M1 stack.
Based on the merged policy, the
chosen source address is from N1, but packets are sent to N2. The source
address is not reachable from N2; therefore, the return packet is lost. Merging
address selection policies may have important impacts on routing.</t>
          <t>
          A node usually has a node-scoped routing table. However, each
of the connected provisioning domains (N1 and N2) may push routing policies to
the node; conflicts between policies may then happen, and the node has no easy
way to merge or reconcile them.
          </t>
          <t>
          M1 receives from one of the networks an update of its access
selection policy, e.g., via the 3GPP/ANDSF <xref target="TS23.402"/>. However,
the policy is in conflict with the local policy (e.g., user-defined or default
OS policy). Assuming that the network provides a list of overloaded access
networks, if the policy sent by the network is ignored, the packet may be sent
to an access network with poor quality of communication.
          </t>
        </list>
      </t>
    </section>

        <section title="Session Management" anchor="SM-issues">
        <t>
        Consider that a node has selected an interface and managed to configure
it (i.e., the node obtained a valid IP address from the network). However,
Internet connectivity is not available. The problem could be due to the
following reasons:

        <list style='numbers'>
        <t>The network requires a web-based authentication (e.g., the access
network is a WiFi hot spot). In this case, the user can only access a captive
portal. For instance, the network may perform HTTP redirection or modify DNS
behavior (<xref target="DNSissues"/>) until the user has not
authenticated.</t>
        <t>The IP interface is configured as active, but Layer 2 is so
poor (e.g., poor radio condition) that no Layer 3 traffic can succeed.</t>
        </list>
        </t>
        <t>
        In this situation, the session manager should be able to
perform IP connectivity checks before selecting an interface. 
        </t>
        <t>
        Session issues may also arise when the node discovers a new
provisioning domain. Consider a MIF node (M1) with an active interface (I1)
connected to a network (N1) where an application is running a TCP session. A
new network (N2) becomes available. If N2 is selected (e.g., because of better
quality of communication), M1 gets IP connectivity to N2 and updates the
routing table priority. So, if no specific route to the correspondent node 
is in place, and
if the node implements the weak host model <xref target="RFC1122"/>, the TCP
connection breaks as the next hop changes. In order to continue communicating
with the correspondent node, M1 should try to reconnect to the server via N2.
In some situations, it could be preferable to maintain current sessions on N1
while new sessions start on N2. 
        </t>
        </section>

      <section title="Single Interface on Multiple Provisioning Domains">
        <t> When a node using a single interface is connected to multiple
networks, such as different default routers, similar issues to those
described above will
happen. Even with a single interface, a node may wish to connect to more than
one provisioning domain: that node may use more than one IP source address and
may have more than one default router. The node may want to access services
that can only be reached using one of the provisioning domains. In this case, it
needs to use the right outgoing source address and default gateway to reach
that service. In this situation, that node may also need to use different DNS
servers to get domain names in those different provisioning domains.</t>
      </section>
    </section>

    <section title="Underlying Problems and Causes">
      <t> This section lists the underlying problems, and their causes, that
lead to the issues discussed in the previous section. The problems can be
divided into five categories: 1) configuration, 2) DNS resolution,
3) routing, 4) address selection, and 5) session management and APIs.
They are shown below:

        <list style='numbers'>
            <t> Configuration. In a MIF context, configuration information
specific to a provisioning domain may be ignored because:
            <list style='letters'>
        <t>Configuration objects (e.g., DNS servers, NTP servers)
are node-scoped. So, the IP stack is not able to maintain the mapping between
configuration information and the corresponding provisioning domain.</t>
        <t>The same configuration objects (e.g., DNS server addresses, NTP
server addresses) received from multiple provisioning domains may be
overwritten.</t>
        <t>Host implementations usually do not keep separate network
configurations (such as DNS server addresses) per provisioning domain.</t>
           </list>
           </t>
           
          <t>DNS resolution
        <list style='letters'>
        <t>Some FQDNs can be resolvable only by sending queries to the
right server (e.g., intranet services). However, a DNS query could be sent to
the wrong interface because DNS server addresses may be node-scoped.</t>
        <t>A DNS answer may be only valid on a specific provisioning
domain, but applications may not be aware of that mapping because DNS answers
may not be kept with the provisioning from which the answer comes.</t>
            </list>
            </t>
            
           <t>Routing
           <list style='letters'>
        <t>In the MIF context, routing information could be specific to
each interface. This could lead to routing issues because, in current node
implementations, routing tables are node-scoped.</t>
        <t>Current node implementations do not take into account the
Differentiated Services Code Point or path characteristics in the routing
table.</t>
  <t>Even if implementations take into account path characteristics, the node
has no way to properly merge or reconcile the provisioning domain
preferences.</t>
        <t>A node attached to multiple provisioning domains could be
provided with incompatible selection policies. If the different actors
(e.g., user and network operator) are allowed to provide their own policies,
the node has no way to properly merge or reconcile multiple selection
policies.</t>
<t>The problem of first-hop selection could not be solved via configuration
(<xref target="INTF-SEL"/>), and may leverage on sophisticated and specific
mechanisms (<xref target="CM"/>).  </t>
           </list>
           </t>

           <t> Address selection
           <list style='letters'>
        <t>Default address selection policies may be specific to their
corresponding provisioning domain. However, a MIF node may not be able to
manage address selection policies per provisioning domain, because default
address selection policies are node-scoped.</t>
        <t> On a MIF node, some source addresses are not valid if used
on some interfaces or even on some default routers on the same interface. In
this situation, the source address should be taken into account in the routing
table, but current node implementations do not support such a feature.</t>
        <t>Source address or address selection policies could be
specified by applications. However, there are no advanced APIs that support
such applications. </t>
           </list>
           </t>
           
              <t> Session management and APIs
               <list style='letters'>
        <t>Some implementations, especially in the mobile world, have
higher-level APIs and/or session managers (aka connection managers) to address MIF
issues. These mechanisms are not standardized and do not necessarily behave the
same way across different OSes and/or platforms in the presence of MIF
problems. This lack of consistency is an issue for the user and operator, who could
experience different session manager behaviors, depending on the terminal.</t>
        <t>Session managers usually leverage on an interface to the link layer
to gather information (e.g., lower-layer authentication and encryption methods)
and/or for control purposes. However, such a link-layer interface may not provide
all required services (e.g., may not provide all information that would
allow a proper interface selection). </t>
        <t>A MIF node can support different session managers, which may
have contradictory ways of solving MIF issues. For instance, because of
different selection algorithms, two different session managers could select
different domains in the same context. Or, when dealing with different domain
selection policies, one session manager may give precedence to user policy
while another could favor mobile operator policy.</t>
        <t> When host routing is updated and if the weak host model is
supported, ongoing TCP sessions may break if routes change for these
sessions. When TCP sessions should be bound to the interface, the strong host
model should be used.</t>
        <t> When provided by different actors (e.g., user, network,
default OS), policies may conflict and, thus, need to be reconciled at the
host level. Policy conflict resolution may impact other functions (e.g.,
naming, routing).</t>
        <t>Even if the node has managed to configure an interface,
Internet connectivity could be unavailable. This could be due to an access
control function coming into play above Layer 3, or because of poor Layer 2
conditions. An IP connectivity check should be performed before selecting an
interface.</t>
          </list>
           </t>
           
        </list>
      </t>
    </section>

    <section title="Security Considerations">
      <t>The problems discussed in this document have security implications,
such as when packets sent on the wrong interface might be leaking some
confidential information. Configuration parameters from one provisioning domain
could cause a denial of service on another provisioning domain (e.g., DNS
issues). Moreover, the undetermined behavior of IP stacks in the multihomed
context brings additional threats where an interface on a multihomed node might
be used to conduct attacks targeted to the networks connected by the other
interfaces. Corrupted provisioning domain selection policy may induce a node to
make decisions causing certain traffic to be forwarded to the attacker.</t>

      <t> Additional security concerns are raised by possible future
mechanisms that provide additional information to the node so that it can make
a more intelligent decision with regards to the issues discussed in this
document. Such future mechanisms may themselves be vulnerable and may not be
easy to protect in the general case.</t>
    </section>

    <section title="Contributors">
      <t>This document is a joint effort with the authors of the MIF requirements
document <xref target="MIF-REQ"/>.  This includes, in alphabetical order: Jacni
Qin, Carl Williams, and Peng Yang.
</t>

    </section>

    <section title="Acknowledgements">
      <t> The documents written prior to the existence of the MIF working group, and the
discussions during the MIF Birds of a Feather (BOF) meeting and around the MIF
charter scope on the mailing list, brought very good input to the problem
statement. This document steals a lot of text from these discussions and
initial documents (e.g., <xref target="MIF-REQ"/>,
<xref target="IP-MULTIPLE-CONN"/>, <xref target="MIF-DNS-SERVER-SELECT"/>).
Therefore, the authors would like to acknowledge the following people
(in no specific order), from whom some text has been taken:
Jari Arkko, Keith Moore, Sam Hartman, George
Tsirtsis, Scott Brim, Ted Lemon, Bernie Volz, Giyeong Son, Gabriel Montenegro,
Julien Laganier, Teemu Savolainen, Christian Vogt, Lars Eggert, Margaret
Wasserman, Hui Deng, Ralph Droms, Ted Hardie, Christian Huitema, Remi
Denis-Courmont, Alexandru Petrescu, Zhen Cao, Gaetan Feige, Telemaco Melia,
and Juan-Carlos Zuniga. Apologies to any contributors who have
inadvertently not been named.
        </t>
    </section>
   
  </middle>
  <back>
  <?rfc rfcedstyle="no" ?>
    <references title="Informative References">

<reference anchor='RFC1122'>
<front>
<title>Requirements for Internet Hosts - Communication Layers</title>
<author initials='R.' surname='Braden' fullname='Robert Braden' role="editor">
</author>
<date year='1989' month='October' />
</front>
<seriesInfo name='STD' value='3' />
<seriesInfo name='RFC' value='1122' />
</reference>

      <?rfc include="reference.RFC.1136" ?>

<reference anchor='RFC1661'>
<front>
<title abbrev='Point-to-Point Protocol'>The Point-to-Point Protocol (PPP)</title>
<author initials='W.' surname='Simpson' fullname='William Allen Simpson' role="editor">
</author>
<date year='1994' month='July' />
</front>
<seriesInfo name='STD' value='51' />
<seriesInfo name='RFC' value='1661' />
</reference>

<reference anchor='RFC1918'>
<front>
<title>Address Allocation for Private Internets</title>
<author initials='Y.' surname='Rekhter' fullname='Yakov Rekhter'>
</author>
<author initials='B.' surname='Moskowitz' fullname='Robert G. Moskowitz'>
</author>
<author initials='D.' surname='Karrenberg' fullname='Daniel Karrenberg'>
</author>
<author initials='G.' surname='de Groot' fullname='Geert Jan de Groot'>
</author>
<author initials='E.' surname='Lear' fullname='Eliot Lear'>
</author>
<date year='1996' month='February' /></front>
<seriesInfo name='BCP' value='5' />
<seriesInfo name='RFC' value='1918' />
</reference>

      <?rfc include="reference.RFC.2131" ?>
      <?rfc include="reference.RFC.2474" ?>
      <?rfc include="reference.RFC.2827" ?>

<reference anchor='RFC3315'>
<front>
<title>Dynamic Host Configuration Protocol for IPv6 (DHCPv6)</title>
<author initials='R.' surname='Droms' fullname='R. Droms' role="editor">
<organization /></author>
<author initials='J.' surname='Bound' fullname='J. Bound'>
<organization /></author>
<author initials='B.' surname='Volz' fullname='B. Volz'>
<organization /></author>
<author initials='T.' surname='Lemon' fullname='T. Lemon'>
<organization /></author>
<author initials='C.' surname='Perkins' fullname='C. Perkins'>
<organization /></author>
<author initials='M.' surname='Carney' fullname='M. Carney'>
<organization /></author>
<date year='2003' month='July' /></front>
<seriesInfo name='RFC' value='3315' />
</reference>

      <?rfc include="reference.RFC.3484" ?>
      <?rfc include="reference.RFC.3542" ?>
      <?rfc include="reference.RFC.3704" ?>

<reference anchor='RFC6275'>
<front>
<title>Mobility Support in IPv6</title>
<author initials='C.' surname='Perkins' fullname='C. Perkins' role="editor">
<organization /></author>
<author initials='D.' surname='Johnson' fullname='D. Johnson'>
<organization /></author>
<author initials='J.' surname='Arkko' fullname='J. Arkko'>
<organization /></author>
<date year='2011' month='July' />
</front>
<seriesInfo name='RFC' value='6275' />
</reference>

<reference anchor='RFC4294'>
<front>
<title>IPv6 Node Requirements</title>
<author initials='J.' surname='Loughney' fullname='J. Loughney' role="editor">
<organization /></author>
<date year='2006' month='April' />
</front>
<seriesInfo name='RFC' value='4294' />
</reference>

      <?rfc include="reference.RFC.4861" ?>

<reference anchor='RFC4960'>
<front>
<title>Stream Control Transmission Protocol</title>
<author initials='R.' surname='Stewart' fullname='R. Stewart' role="editor">
<organization /></author>
<date year='2007' month='September' />
</front>
<seriesInfo name='RFC' value='4960' />
</reference>

      <?rfc include="reference.RFC.5014" ?>

<reference anchor='RFC5113'>
<front>
<title>Network Discovery and Selection Problem</title>
<author initials='J.' surname='Arkko' fullname='J. Arkko'>
<organization /></author>
<author initials='B.' surname='Aboba' fullname='B. Aboba'>
<organization /></author>
<author initials='J.' surname='Korhonen' fullname='J. Korhonen' role="editor">
<organization /></author>
<author initials='F.' surname='Bari' fullname='F. Bari'>
<organization /></author>
<date year='2008' month='January' />
</front>
<seriesInfo name='RFC' value='5113' />
</reference>

<reference anchor='RFC5206'>
<front>
<title>End-Host Mobility and Multihoming with the Host Identity Protocol</title>
<author initials='P.' surname='Nikander' fullname='P. Nikander'>
<organization /></author>
<author initials='T.' surname='Henderson' fullname='T. Henderson' role="editor">
<organization /></author>
<author initials='C.' surname='Vogt' fullname='C. Vogt'>
<organization /></author>
<author initials='J.' surname='Arkko' fullname='J. Arkko'>
<organization /></author>
<date year='2008' month='April' />
</front>
<seriesInfo name='RFC' value='5206' />
</reference>

      <?rfc include="reference.RFC.5220" ?>
      <?rfc include="reference.RFC.5221" ?>
      <?rfc include="reference.RFC.5245" ?>
      <?rfc include="reference.RFC.5533" ?>

<reference anchor='RFC5648'>
<front>
<title>Multiple Care-of Addresses Registration</title>
<author initials='R.' surname='Wakikawa' fullname='R. Wakikawa' role="editor">
<organization /></author>
<author initials='V.' surname='Devarapalli' fullname='V. Devarapalli'>
<organization /></author>
<author initials='G.' surname='Tsirtsis' fullname='G. Tsirtsis'>
<organization /></author>
<author initials='T.' surname='Ernst' fullname='T. Ernst'>
<organization /></author>
<author initials='K.' surname='Nagami' fullname='K. Nagami'>
<organization /></author>
<date year='2009' month='October' />
</front>
<seriesInfo name='RFC' value='5648' />
</reference>

<!-- draft-ietf-mif-dns-server-selection (I-D Exists) -->
<reference anchor='MIF-DNS-SERVER-SELECT'>
<front>
<title>Improved DNS Server Selection for Multi-Interfaced Nodes</title>
<author initials='T' surname='Savolainen' fullname='Teemu Savolainen'>
    <organization />
</author>
<author initials='J' surname='Kato' fullname='Jun-ya Kato'>
    <organization />
</author>
<author initials='T' surname='Lemon' fullname='Ted Lemon'>
    <organization />
</author>
<date month='October' year='2011' />
</front>
<seriesInfo name='Work in' value='Progress' />
</reference>

<!-- draft-ietf-mif-dhcpv6-route-option (I-D Exists) -->
<reference anchor='DHCPv6-ROUTE-OPTIONS'>
<front>
<title>DHCPv6 Route Options</title>
<author initials='W' surname='Dec' fullname='Wojciech Dec' role="editor">
    <organization />
</author>
<author initials='T' surname='Mrugalski' fullname='Tomasz Mrugalski'>
    <organization />
</author>
<author initials='T' surname='Sun' fullname='Tao Sun'>
    <organization />
</author>
<author initials='B' surname='Sarikaya' fullname='Behcet Sarikaya'>
    <organization />
</author>
<date month='September' year='2011' />
</front>
<seriesInfo name='Work in' value='Progress' />
</reference>

<!-- draft-ietf-netext-logical-interface-support (I-D Exists) -->
<reference anchor='LOGICAL-IF-SUPPORT'>
<front>
<title>Logical Interface Support for multi-mode IP Hosts</title>
<author initials='T' surname='Melia' fullname='Telemaco Melia' role="editor">
    <organization />
</author>
<author initials='S' surname='Gundavelli' fullname='Sri Gundavelli' role="editor">
    <organization />
</author>
<date month='September' year='2011' />
</front>
<seriesInfo name='Work in' value='Progress' />
</reference>

<!-- draft-hui-ip-multiple-connections-ps (Expired) -->
<reference anchor='IP-MULTIPLE-CONN'>
<front>
<title>Problem Statement and Requirement of Simple IP Multi-homing of the Host</title>
<author initials='M' surname='Hui' fullname='Min Hui'>
    <organization />
</author>
<author initials='H' surname='Deng' fullname='Hui Deng'>
    <organization />
</author>
<date month='March' year='2009' />
</front>
<seriesInfo name='Work in' value='Progress' />
</reference>

<!-- draft-ietf-mif-current-practices (RFC-to-be 6419; AUTH48) -->
<reference anchor='RFC6419'>
<front>
<title>Current Practices for Multiple-Interface Hosts</title>
<author initials='M' surname='Wasserman' fullname='Margaret Wasserman'>
    <organization />
</author>
<author initials='P' surname='Seite' fullname='Pierrick Seite'>
    <organization />
</author>
<date month='October' year='2011' />
</front>
<seriesInfo name='RFC' value='6419'/>
</reference>

<!-- draft-ietf-6man-addr-select-sol (Expired; Dead) -->
<reference anchor='ADDR-SELECT-SOL'>
<front>
<title>Solution approaches for address-selection problems</title>
<author initials='A' surname='Matsumoto' fullname='Arifumi Matsumoto'>
    <organization />
</author>
<author initials='T' surname='Fujisaki' fullname='Tomohiro Fujisaki'>
    <organization />
</author>
<author initials='R' surname='Hiromi' fullname='Ruri Hiromi'>
    <organization />
</author>
<date month='March' year='2010' />
</front>
<seriesInfo name='Work in' value='Progress' />
</reference>

<!-- draft-yang-mif-req (Expired) -->
<reference anchor='MIF-REQ'>
<front>
<title>Requirements on multiple Interface (MIF) of simple IP</title>
<author initials='P' surname='Yang' fullname='Peng Yang'>
    <organization />
</author>
<author initials='P' surname='Seite' fullname='Pierrick  Seite'>
    <organization />
</author>
<author initials='C' surname='Williams' fullname='Carl Williams'>
    <organization />
</author>
<author initials='J' surname='Qin' fullname='Jacni Qin'>
    <organization />
</author>
<date month='February' year='2009' />
</front>
<seriesInfo name='Work in' value='Progress' />
</reference>

      <?rfc include="reference.RFC.6147" ?>

<!-- draft-carpenter-referral-ps (Expired) -->
<reference anchor='REFERRAL-PS'>
<front>
<title>Problem Statement for Referral</title>
<author initials='B' surname='Carpenter' fullname='Brian Carpenter'>
    <organization />
</author>
<author initials='S' surname='Jiang' fullname='Sheng Jiang'>
    <organization />
</author>
<author initials='Z' surname='Cao' fullname='Zhen Cao'>
    <organization />
</author>
<date month='February' year='2011' />
</front>
<seriesInfo name='Work in' value='Progress' />
</reference>

<!-- draft-ietf-shim6-multihome-shim-api = RFC 6316 (pub. 7/2011) -->
<reference anchor='RFC6316'>
<front>
<title>Sockets Application Program Interface (API) for Multihoming Shim</title>
<author initials='M.' surname='Komu' fullname='M. Komu'>
<organization /></author>
<author initials='M.' surname='Bagnulo' fullname='M. Bagnulo'>
<organization /></author>
<author initials='K.' surname='Slavov' fullname='K. Slavov'>
<organization /></author>
<author initials='S.' surname='Sugimoto' fullname='S. Sugimoto' role="editor">
<organization /></author>
<date year='2011' month='July' />
</front>
<seriesInfo name='RFC' value='6316' />
</reference>

<!-- draft-ietf-shim6-app-refer (Expired) -->
<reference anchor='SHIM6-APP-REFER'>
<front>
<title>Shim6 Application Referral Issues</title>
<author initials='E' surname='Nordmark' fullname='Erik Nordmark'>
    <organization />
</author>
<date month='July' year='2005' />
</front>
<seriesInfo name='Work in' value='Progress' />
</reference>

      <?rfc include="reference.RFC.6182" ?>
<!-- draft-ietf-mptcp-architecture = RFC 6182 (pub. 3/2011) -->

      <reference anchor="MIH">
        <front>
         <title>IEEE Standard for Local and Metropolitan Area Networks
        - Part 21: Media Independent Handover Services</title>
          <author>
            <organization>IEEE</organization>
          </author>
          <date month="January" year="2009" />
        </front>
       <seriesInfo name='IEEE LAN/MAN Std' value='802.21-2008' />
      </reference>

      <reference anchor="TS23.234">
          <front>
         <title>3GPP system to Wireless Local Area Network (WLAN) interworking
         </title>
          <author>
            <organization>3GPP</organization>
          </author>
          <date month="December" year="2009" />
        </front>
        <seriesInfo name='TS' value='23.234' />
          </reference>

       <reference anchor="TS23.402">
          <front>
         <title>Architecture enhancements for non-3GPP accesses
           </title>
          <author>
            <organization>3GPP</organization>
          </author>
          <date month="December" year="2010" />
        </front>
        <seriesInfo name='TS' value='23.402' />
          </reference>
    </references>
  <?rfc rfcedstyle="yes" ?>
  </back>
</rfc>
