<?xml version="1.0" encoding="us-ascii"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc subcompact="no"?>
<rfc number="5586" category="std" updates="3032, 4385, 5085">
  <front>
    <title abbrev="G-ACh and GAL">MPLS Generic Associated Channel</title>

    <author fullname="Matthew Bocci" initials="M." role="editor" surname="Bocci">
      <organization>Alcatel-Lucent</organization>

      <address>
        <postal>
          <street>Voyager Place, Shoppenhangers Road</street>

          <city>Maidenhead</city>

          <region>Berks</region>

          <code>SL6 2PJ</code>

          <country>UK</country>
        </postal>

        <email>matthew.bocci@alcatel-lucent.com</email>
      </address>
    </author>

    <author fullname="Martin Vigoureux" initials="M." role="editor" surname="Vigoureux">
      <organization>Alcatel-Lucent</organization>

      <address>
        <postal>
          <street>Route de Villejust</street>

          <city>Nozay</city>

          <region/>

          <code>91620</code>

          <country>France</country>
        </postal>

        <email>martin.vigoureux@alcatel-lucent.com</email>
      </address>
    </author>

    <author fullname="Stewart Bryant" initials="S." surname="Bryant">
      <organization>Cisco Systems</organization>

      <address>
        <email>stbryant@cisco.com</email>
      </address>
    </author>

    <date month="June" year="2009"/>

    <area>Routing</area>

    <workgroup>MPLS Working Group</workgroup>

    <keyword>MPLS-TP</keyword>

    <keyword>MPLS</keyword>

    <keyword>OAM</keyword>

    <keyword>GAL</keyword>

    <keyword>G-ACh</keyword>

    <abstract>
      <t>This document generalizes the applicability of the pseudowire (PW)
      Associated Channel Header (ACH), enabling the realization of a control
      channel associated to MPLS Label Switched Paths (LSPs) and MPLS Sections
      in addition to MPLS pseudowires. In order to identify the presence of
      this Associated Channel Header in the label stack, this document also
      assigns one of the reserved MPLS label values to the Generic Associated
      Channel Label (GAL), to be used as a label based exception
      mechanism.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>There is a need for Operations, Administration, and Maintenance (OAM)

<!-- [rfced] OAM is also expanded in other RFCs as:

OAM        - Operations, Administration, and Management (OAM)
               [recommended by Dan Romascanu 2008-02-11] or
           - Operations and Management (OAM) or
           - Operations and Maintenance (OAM)

Where, Dan recommended Operations, Administration, and Management
(OAM).  Is "Operations, Administration, and Maintenance (OAM)" a new
expansion?  -->

      mechanisms that can be used for fault detection, diagnostics,
      maintenance, and other functions on a pseudowire (PW) and a Label
      Switched Path (LSP). These functions can be used between any two Label
      Edge Routers (LERs)/Label Switching Router (LSRs) or Terminating
      Provider Edge routers (T-PEs)/Switching Provider Edge routers (S-PEs)
      along the path of an LSP or PW, respectively <xref target="MPLS-TP"/>. Some of these functions can
      be supported using existing tools such as Virtual Circuit Connectivity
      Verification (VCCV) <xref target="RFC5085"/>, Bidirectional
      Forwarding Detection for MPLS LSPs (BFD-MPLS) <xref target="BFD-MPLS"/>, LSP-Ping <xref target="RFC4379"/>, or BFD-VCCV <xref target="BFD-VCCV"/>. However, a requirement has been
      indicated to augment this set of maintenance functions, in particular
      when MPLS networks are used for packet transport services and transport
      network operations <xref target="OAM-REQ"/>. Examples of these
      functions include performance monitoring, automatic protection
      switching, and support for management and signaling communication
      channels. These tools MUST be applicable to, and function in essentially
      the same manner (from an operational point of view) on MPLS PWs, MPLS
      LSPs, and MPLS Sections. They MUST also operate in-band on the PW or LSP
      such that they do not depend on Packet Switched Network (PSN) routing or
      on user traffic, and MUST NOT depend on dynamic control plane
      functions.</t>

      <t>VCCV <xref target="RFC5085"/> can use an Associated Channel
      Header (ACH) to provide a PW associated control channel between a PW's
      endpoints, over which OAM and other control messages can be exchanged.
      This document generalizes the applicability of the ACH to enable the
      same associated control channel mechanism to be used for Sections, LSPs,
      and PWs. The associated control channel thus generalized is known as the
      Generic Associated Channel (G-ACh). The ACH, specified in RFC 4385 <xref target="RFC4385"/>, may be used with additional code points to
      support additional MPLS maintenance functions on the G-ACh.</t>

      <t>Generalizing the applicability of the ACH to LSPs and Sections also
      requires a method to identify that a packet contains an ACH followed by
      a non-service payload. Therefore, this document also defines a label-based exception mechanism that serves to inform an LSR (or LER) that a
      packet it receives on an LSP or Section belongs to an associated control
      channel. The label used for that purpose is one of the MPLS reserved
      labels and is referred to as the GAL (G-ACh Label). The GAL mechanism is
      defined to work together with the ACH for LSPs and MPLS Sections.</t>

      <t>RFC 4379 <xref target="RFC4379"/> and BFD-MPLS <xref target="BFD-MPLS"/> define alert mechanisms that enable
      an MPLS LSR to identify and process MPLS OAM packets when these are
      encapsulated in an IP header. These alert mechanisms are based, for
      example, on Time To Live (TTL) expiration and/or on the use of an IP
      destination address in the range of 127.0.0.0/8 or
      0:0:0:0:0:FFFF:127.0.0.0/104 for IPv4 and IPv6, respectively. These
      mechanisms are the default mechanisms for identifying MPLS OAM packets
      when encapsulated in an IP header. However, it may not always be possible
      to use these mechanisms in some MPLS applications, e.g., MPLS Transport
      Profile (MPLS-TP) <xref target="MPLS-TP"/>,
      particularly when IP-based demultiplexing cannot be used. This document
      defines a mechanism that is RECOMMENDED for identifying and
      encapsulating MPLS OAM and other maintenance messages when IP based
      mechanisms such as those used in <xref target="RFC4379"/> and
      <xref target="BFD-MPLS"/> are not available. Yet, this
      mechanism MAY be used in addition to IP-based mechanisms.</t>

      <t>Note that, in this document, maintenance functions and packets should
      be understood in the broad sense. That is, a set of maintenance and
      management mechanisms that include OAM, Automatic Protection Switching
      (APS), Signaling Communication Channel (SCC), and Management
      Communication Channel (MCC) messages.</t>

      <t>Also note that the GAL and ACH are applicable to MPLS and PWs in
      general. This document specifies general mechanism and uses MPLS-TP as
      an example application. The application of the GAL and ACH to other
      specific MPLS uses is outside the scope of this document.</t>

      <section title="Objectives">
        <t>This document defines a mechanism that provides a solution to the
        extended maintenance needs of emerging applications for MPLS. It
        creates a generic control channel mechanism that may be applied to
        MPLS LSPs and Sections, while maintaining compatibility with the PW
        associated channel. It also normalizes the use of the ACH for PWs in a
        transport context, and defines a label-based exception mechanism to
        alert LERs/LSRs of the presence of an ACH after the bottom of the
        label stack.</t>
      </section>

      <section title="Scope">
        <t>This document defines the encapsulation header for Section, LSP,
        and PW associated control channel messages.</t>

        <t>This document does not define how associated control channel capabilities are
 signaled or negotiated between LERs/LSRs or between PEs, nor
 does it define the operation of various OAM functions.</t>

        <t>This document does not deprecate existing MPLS and PW OAM
        mechanisms.</t>
      </section>

      <section title="Requirements Language and Terminology">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.</t>

        <t>This document uses the following additional terminology:</t>

        <t>ACH: Associated Channel Header</t>

        <t>G-ACh: Generic Associated Channel</t>

        <t>GAL: G-ACh Label</t>

        <t>G-ACh packet: Any packet containing a message belonging to a
        protocol that is carried on a PW, LSP, or MPLS Section associated
        control channel. Examples include maintenance protocols such as OAM
        functions, signaling communications, or management communications.</t>

        <t>The terms "Section" and "Concatenated Segment" are defined in <xref target="TP-REQ"/> as follows (note that
        the terms "Section" and "Section Layer Network" are synonymous):</t>

        <t>Section Layer Network: A section layer is a server layer (which may
        be MPLS-TP or a different technology) that provides for the transfer
        of the section layer client information between adjacent nodes in the
        transport path layer or transport service layer. Note that G.805 <xref target="G805"/> defines the section layer as one of the two layer networks in a transmission media layer network. The other layer
        network is the physical media layer network.</t>

        <t>Concatenated Segment: A serial-compound link connection as defined
        in <xref target="G805"/>. A concatenated segment is a contiguous
        part of an LSP or multi-segment PW that comprises a set of segments
        and their interconnecting nodes in sequence.</t>

      </section>
    </section>

    <section title="Generic Associated Channel Header">
      <t>VCCV <xref target="RFC5085"/> defines three Control Channel
      (CC) Types that may be used to exchange OAM messages through a PW. CC
      Type 1 uses an ACH and is referred to as "In-band VCCV"; CC Type 2 uses
      the MPLS Router Alert Label to indicate VCCV packets and is referred to
      as "Out-of-Band VCCV"; CC Type 3 uses the TTL to force the packet to be
      processed by the targeted router control plane and is referred to as
      "MPLS PW Label with TTL == 1".</t>

      <section title="Definition">
        <t>The use of the ACH, previously limited to PWs, is here generalized
        to also apply to LSPs and to Sections. Note that for PWs, the PWE3
        control word <xref target="RFC4385"/> MUST be present in the
        encapsulation of user packets when the ACH is used to realize the
        associated control channel.</t>

        <t>The ACH used by CC Type 1 is depicted in figure below:</t>

        <t><figure anchor="G-ACH" title="Associated Channel Header">
            <artwork><![CDATA[ 0                   1                   2                   3 
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
|0 0 0 1|Version|   Reserved    |         Channel Type          | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
]]></artwork>
          </figure></t>

        <t>In the above figure, the first nibble is set to 0001b to indicate a
        control channel associated with a PW, LSP, or Section. The Version
        field is set to 0, as specified in RFC 4385 <xref target="RFC4385"/>. Bits 8 to 15 of the ACH are reserved and
        MUST be set to 0 and ignored on reception. Bits 16 to 31 are used to
        encode the possible Channel Types. This 16-bit field is in network
        byte order.</t>

        <t>Note that VCCV <xref target="RFC5085"/> also includes
        mechanisms for negotiating the Control Channel and Connectivity
        Verification (i.e., OAM function) Types between PEs. It is anticipated
        that similar mechanisms will be applied to LSPs. Such application will
        require further specification. However, such specification is beyond
        the scope of this document.</t>

        <t>The G-ACh MUST NOT be used to transport user traffic.</t>
      </section>

      <section title="Allocation of Channel Types">
        <t>The Channel Type field indicates the type of message carried on the
        associated control channel, e.g., IPv4 or IPv6 if IP demultiplexing is
        used for messages sent on the associated control channel, or OAM or
        other maintenance function if IP demultiplexing is not used. For
        associated control channel packets where IP is not used as the
        multiplexer, the Channel Type indicates the specific protocol carried
        in the associated control channel.</t>

        <t>Values for the Channel Type field currently used for VCCV are
        specified elsewhere, e.g., in RFC 4446 <xref target="RFC4446"/>
        and RFC 4385 <xref target="RFC4385"/>. Additional Channel Type
        values and the associated maintenance functionality will be defined in
        other documents. Each document, specifying a protocol solution relying
        on the ACH, MUST also specify the applicable Channel Type field
        value.</t>

        <t>Note that these values are allocated from the PW Associated Channel
        Type registry <xref target="RFC4446"/>, but this document
        modifies the existing policy to accommodate a level of
        experimentation. See <xref target="IANA"/> for further
        details.</t>
      </section>
    </section>

    <section title="ACH TLVs ">
      <t>In some applications of the generalized associated control channel, it
      is necessary to include one or more ACH TLVs to provide additional
      context information to the G-ACh packet. One use of these ACH TLVs might
      be to identify the source and/or intended destination of the associated
      channel message. However, the use of this construct is not limited to
      providing addressing information nor is the applicability restricted to
      transport network applications.</t>

      <t>If the G-ACh message MAY be preceded by one or more ACH TLVs, then
      this MUST be explicitly specified in the definition of an ACH Channel
      Type. If the ACH Channel Type definition does state that one or more ACH
      TLVs MAY precede the G-ACh message, an ACH TLV Header MUST follow the
      ACH. If no ACH TLVs are required in a specific associated channel
      packet, but the Channel Type nevertheless defines that ACH TLVs MAY be
      used, an ACH TLV Header MUST be present but with a length field set to
      zero to indicate that no ACH TLV follow this header.</t>

      <t>If an ACH Channel Type specification does not explicitly specify that
      ACH TLVs MAY be used, then the ACH TLV Header MUST NOT be used.</t>

      <section title="ACH TLV Payload Structure">
        <t>This section defines and describes the structure of an ACH payload
        when an ACH TLV Header is present.</t>

        <t>The following figure (<xref target="ACHContext"/>) shows the
        structure of a G-ACh packet payload.</t>

        <t><figure anchor="ACHContext" title="G-ACh Packet Payload">
            <artwork><![CDATA[+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                              ACH                              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         ACH TLV Header                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               ~
~                     zero or more ACH TLVs                     ~
~                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               ~
~                        G-ACh Message                          ~
~                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+]]></artwork>
          </figure></t>
      </section>

      <section title="ACH TLV Header">
        <t>The ACH TLV Header defines the length of the set of ACH TLVs that
        follow.</t>

        <t><figure anchor="ACH-TLV-Head" title="ACH TLV Header">
            <artwork><![CDATA[ 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Length               |            Reserved           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+]]></artwork>
          </figure></t>

        <t>The Length field specifies the length in octets of the complete set
        of TLVs including sub-TLVs that follow the ACH TLV Header. A length of
        zero indicates that no ACH TLV follow this header. Note that no
        padding is required for the set of ACH TLVs.</t>

        <t>The Reserved field is for future use and MUST be set to zero on
        transmission and ignored on reception.</t>
      </section>

      <section title="ACH TLV Object">
        <t>ACH TLVs MAY follow an ACH TLV Header. The structure of ACH TLVs is
        defined and described in this section.</t>

        <t>An ACH TLV consists of a 16-bit Type field, followed by a 16-bit
        Length field that specifies the number of octets of the Value field,
        which follows the Length field. This 32-bit word is followed by zero
        or more octets of Value information. The format and semantics of the
        Value information are defined by the TLV Type as recorded in the TLV
        Type registry. See <xref target="IANA"/> for further details.
        Note that the Value field of ACH TLVs MAY contain sub-TLVs. Note that
        no padding is required for individual TLVs or sub-TLVs.</t>

        <t><figure anchor="ACHTLVFormat" title="ACH TLV Format">
            <artwork><![CDATA[ 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           TLV Type            |          Length               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               ~
~                             Value                             ~
~                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+]]></artwork>
          </figure></t>
      </section>
    </section>

    <section title="Generalized Exception Mechanism">
      <t>Generalizing the associated control channel mechanism to LSPs and
      Sections also requires a method to identify that a packet contains an
      ACH followed by a non-service payload. This document specifies that a
      label is used for that purpose and calls this special label the G-ACh
      Label (GAL). One of the reserved label values defined in RFC 3032 <xref target="RFC3032"/> is assigned for this purpose. IANA
assigned the value 13 to the GAL.</t>

      <t>The GAL provides an alert based exception mechanism to:</t>

      <t><list style="symbols">
          <t>differentiate specific packets (i.e., G-ACh packets) from others,
          such as user-plane ones.</t>

          <t>indicate that the ACH appears immediately after the bottom of the
          label stack.</t>
        </list>The GAL MUST only be used where both these purposes apply.</t>

      <section title="Relationship with Existing MPLS OAM Alert Mechanisms">
        <t>RFC 4379 <xref target="RFC4379"/> and BFD-MPLS <xref target="BFD-MPLS"/> define alert mechanisms that enable
        an MPLS LSR to identify and process MPLS OAM packets when these are
        encapsulated in an IP header. These alert mechanisms are based, for
        example, on Time To Live (TTL) expiration and/or on the use of an IP
        destination address in the range of 127.0.0.0/8 or
        0:0:0:0:0:FFFF:127.0.0.0/104 for IPv4 and IPv6, respectively.</t>

        <t>These mechanisms are the default mechanisms for identifying MPLS
        OAM packets when encapsulated in an IP header although the mechanism
        defined in this document MAY also be used.</t>
      </section>

      <section title="GAL Applicability and Usage">
        <t>In MPLS-TP, the GAL MUST be used with packets on a G-ACh on LSPs,
        Concatenated Segments of LSPs, and with Sections, and MUST NOT be used
        with PWs. It MUST always be at the bottom of the label stack (i.e., S
        bit set to 1). However, in other MPLS environments, this document
        places no restrictions on where the GAL may appear within the label
        stack or its use with PWs. Where the GAL is at the bottom of the label
        stack (i.e., S bit set to 1), then it MUST always be followed by an
        ACH.</t>

        <t>The GAL MUST NOT appear in the label stack when transporting normal
        user-plane packets. Furthermore, when present, the GAL MUST NOT appear
        more than once in the label stack.</t>

        <t>A receiving LSR, LER, or PE MUST NOT forward a G-ACh packet to
        another node based on the GAL label.</t>

        <section title="GAL Processing">
          <t>The Traffic Class (TC) field (formerly known as the EXP field) of
          the Label Stack Entry (LSE) containing the GAL follows the
          definition and processing rules specified and referenced in <xref target="RFC5462"/>.</t>

          <t>The Time-To-Live (TTL) field of the LSE that contains the GAL
          follows the definition and processing rules specified in <xref target="RFC3443"/>.</t>

          <section title="MPLS Label Switched Paths and Segments">
            <t>The following figure (<xref target="LSP-OAM"/>) depicts
            two LERs (A and D) and two LSRs (B and C) for a given LSP that is
            established from A to D and switched in B and C.</t>

            <t><figure anchor="LSP-OAM" title="Maintenance over an LSP">
                <artwork><![CDATA[     +---+             +---+             +---+             +---+
     | A |-------------| B |-------------| C |-------------| D |
     +---+             +---+             +---+             +---+]]></artwork>
              </figure></t>

            <t>In this example, a G-ACh exists on the LSP that extends between
            LERs A and D, via LSRs B and C. Only A and D may initiate new
            G-ACh packets. A, B, C, and D may process and respond to G-ACh
            packets.</t>

            <t>The following figure (<xref target="LSP-OAM-Message"/>)
            depicts the format of an MPLS-TP G-ACh packet when used for an
            LSP.</t>

            <t><figure anchor="LSP-OAM-Message" title="G-ACh Packet Format for an LSP">
                <artwork><![CDATA[ 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|               LSP Label               |  TC |S|       TTL     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                  GAL                  |  TC |S|       TTL     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                              ACH                              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                  ACH TLV Header (if present)                  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               ~
~                     Zero or more ACH TLVs                     ~
~                           (if present)                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               ~
~                         G-ACh Message                         ~
~                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+]]></artwork>
              </figure></t>

            <t>Note that it is possible that the LSP may be tunneled in
            another LSP (e.g., if an MPLS Tunnel exists between B and C), and
            as such other LSEs may be present in the label stack.</t>

            <t>To send a G-ACh message on the LSP associated control channel,
            the LER (A) generates a G-ACh message, to which it MAY prepend an
            ACH TLV Header and appropriate ACH TLVs. It then adds an ACH, onto
            which it pushes a GAL LSE. Finally, the LSP Label LSE is pushed
            onto the resulting packet.</t>

            <t><list style="symbols">
                <t>The TTL field of the GAL LSE MUST be set to at least 1. The
                exact value of the TTL is application specific. See Section
                4.2.1 for definition and processing rules.</t>

                <t>The S bit of the GAL MUST be set according to its position
                in the label stack (see Section 4.2).</t>

                <t>The setting of the TC field of the GAL is application
                specific. See Section 4.2.1 for definition and processing
                rules.</t>
              </list>LSRs MUST NOT modify the G-ACh message, the ACH or the
            GAL towards the targeted destination.</t>

            <t><list style="hanging">
                <t hangText="Note:">This is because once a G-ACh packet has
                been sent on an LSP, no node has visibility of it unless the
                LSP label TTL expires or the GAL is exposed when the LSP label
                is popped. If this is at the targeted destination, for example,
                indicated by an address in an ACH TLV, then processing can
                proceed as specified below. If this is not the targeted
                destination, but the node has agreed to process packets on
                that ACH channel, then the processing applied to the packet is
                out of scope of this document.</t>
              </list></t>

            <t>Upon reception of the labeled packet, the targeted destination,
            after having checked both the LSP Label and GAL LSEs fields,
            SHOULD pass the whole packet to the appropriate processing
            entity.</t>
          </section>

          <section title="MPLS Section">
            <t>The following figure (<xref target="Section-OAM"/>)
            depicts an example of an MPLS Section.</t>

            <t><figure anchor="Section-OAM" title="Maintenance over an MPLS Section">
                <artwork><![CDATA[                       +---+             +---+
                       | A |-------------| Z |
                       +---+             +---+]]></artwork>
              </figure></t>

            <t>With regard to the MPLS Section, a G-ACh exists between A and
            Z. Only A and Z can insert, extract, or process packets on this
            G-ACh.</t>

            <t>The following figure (<xref target="Section-OAM-Message"/>) depicts the format of a
            G-ACh packet when used for an MPLS Section. The GAL MAY provide
            the exception mechanism for a control channel in its own right
            without being associated with a specific LSP, thus providing
            maintenance-related communications across a specific link
            interconnecting two LSRs. In this case, the GAL is the only label
            in the stack.</t>

            <t><figure anchor="Section-OAM-Message" title="G-ACh Packet Format for an MPLS Section">
                <artwork><![CDATA[ 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                  GAL                  |  TC |S|       TTL     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                             ACH                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                  ACH TLV Header (if present)                  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               ~
~                     Zero or more ACH TLVs                     ~
~                         (if present)                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               ~
~                         G-ACh message                         ~
~                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+]]></artwork>
              </figure></t>

            <t>To send a G-ACh message on a control channel associated to the
            Section, the head-end LSR (A) of the Section generates a G-ACh
            message, to which it MAY prepend an ACH TLV Header and appropriate
            ACH TLVs. Next, the LSR adds an ACH. Finally, it pushes a GAL
            LSE.</t>

            <t><list style="symbols">
                <t>The TTL field of the GAL MUST be set to at least 1. The
                exact value of the TTL is application specific. See Section
                4.2.1 for definition and processing rules.</t>

                <t>The S bit of the GAL MUST be set according to its position
                in the label stack. (see Section 4.2).</t>

                <t>The setting of the TC field of the GAL is application
                specific. See Section 4.2.1 for definition and processing
                rules.</t>
              </list></t>

            <t>Intermediate nodes of the MPLS Section MUST NOT modify the G-ACh
            message, the ACH and the GAL towards the tail-end LSR (Z). Upon
            reception of the G-ACh packet, the tail-end LSR (Z), after having
            checked the GAL LSE fields, SHOULD pass the whole packet to the
            appropriate processing entity.</t>
          </section>
        </section>
      </section>

      <section title="Relationship with RFC 3429">
        <t>RFC 3429 <xref target="RFC3429"/> describes the assignment of
        one of the reserved label values, defined in RFC 3032 <xref target="RFC3032"/>, to the "OAM Alert Label" that is used by
        user-plane MPLS OAM functions for the identification of MPLS OAM
        packets. The value of 14 is used for that purpose.</t>

        <t>Both this document and RFC 3429 <xref target="RFC3429"/>
        therefore describe the assignment of reserved label values for similar
        purposes. The rationale for the assignment of a new reserved label can
        be summarized as follows:</t>

        <t><list style="symbols">
            <t>Unlike the mechanisms described and referenced in RFC 3429
            <xref target="RFC3429"/>, G-ACh messages will not reside
            immediately after the GAL but instead behind the ACH, which itself
            resides after the bottom of the label stack.</t>

            <t>The set of maintenance functions potentially operated in the
            context of the G-ACh is wider than the set of OAM functions
            referenced in RFC 3429 <xref target="RFC3429"/>.</t>

            <t>It has been reported that there are existing implementations
            and running deployments using the "OAM Alert Label" as described
            in RFC 3429 <xref target="RFC3429"/>. It is therefore not
            possible to modify the "OAM Alert Label" allocation, purpose, or
            usage. Nevertheless, it is RECOMMENDED that no further OAM
            extensions based on "OAM Alert Label" (Label 14) usage be
            specified or developed.</t>
          </list></t>
      </section>
    </section>

    <section anchor="Section-Compatibility" title="Compatibility">
      <t>Procedures for handling a packet received with an invalid incoming
      label are specified in RFC 3031 <xref target="RFC3031"> </xref>.</t>

      <t>An LER, LSR, or PE MUST discard received associated channel packets on
      which all of the MPLS or PW labels have been popped if any one of the
      following conditions is true:</t>

      <t><list style="symbols">
          <t>It is not capable of processing packets on the Channel Type
          indicated by the ACH of the received packet.</t>

          <t>It has not, through means outside the scope of this document,
          indicated to the sending LSR, LER, or PE that it will process
          associated channel packets on the Channel Type indicated by the ACH
          of the received packet.</t>

          <t>The packet is received on an Experimental Channel Type that is
          locally disabled.</t>

          <t>If the ACH was indicated by the presence of a GAL, and the first
          nibble of the ACH of the received packet is not 0001b.</t>

          <t>The ACH version is not recognized.</t>
        </list>In addition, the LER, LSR, or PE MAY increment an error counter
      and MAY also issue a system and/or Simple Network Management Protocol (SNMP) notification.</t>
    </section>

    <section title="Congestion Considerations">
      <t>The congestion considerations detailed in RFC 5085 <xref target="RFC5085"/> apply.</t>
    </section>

    <section title="Major Contributing Authors">
      <t>The editors would like to thank George Swallow, David Ward, and Rahul
      Aggarwal who made a major contribution to the development of this
      document.</t>

<artwork>
   George Swallow
   Cisco Systems
   Email: swallow@cisco.com

   David Ward
   Cisco Systems
   Email: dward@cisco.com

   Rahul Aggarwal
   Juniper Networks
   Email: rahul@juniper.net
</artwork>


    </section>

    <section anchor="Acknowledgments" title="Acknowledgments">
      <t>The editors gratefully acknowledge the contributions of Sami Boutros,
      Italo Busi, Marc Lasserre, Lieven Levrau, and Siva Sivabalan.</t>

      <t>The authors would also like to thank Malcolm Betts, ITU-T Study Group
      15, and all members of the teams (the Joint Working Team, the MPLS
      Interoperability Design Team in IETF and the MPLS-TP Ad Hoc Team in
      ITU-T) involved in the definition and specification of the MPLS
      Transport Profile.</t>
    </section>

    <section title="Security Considerations">
      <t>The security considerations for the associated control channel are
      described in RFC 4385 <xref target="RFC4385"> </xref>. Further security
      considerations MUST be described in the relevant associated channel type
      specification.</t>

      <t>RFC 5085 <xref target="RFC5085"/> provides data plane related
      security considerations. These also apply to a G-ACh, whether the alert
      mechanism uses a GAL or only an ACH.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>IANA allocated label value 13 to the GAL
      from the pool of reserved labels in the "Multiprotocol Label Switching
      Architecture (MPLS) Label Values" registry.</t>

      <t>Channel Types for the Associated Channel Header are allocated from
      the IANA "PW Associated Channel Type" registry <xref target="RFC4446"/>. The PW Associated Channel Type registry is
      currently allocated based on the IETF consensus process (termed "IETF
      Review" in <xref target="RFC5226"/>). This allocation process was
      chosen based on the consensus reached in the PWE3 working group that
      pseudowire associated channel mechanisms should be reviewed by the IETF
      and only those that are consistent with the PWE3 architecture and
      requirements should be allocated a code point.</t>

      <t>However, a requirement has emerged (see <xref target="OAM-REQ"/>) to allow for
      optimizations or extensions to OAM and other control protocols running
      in an associated channel to be experimented without resorting to the
      IETF standards process, by supporting experimental code points. This
      would prevent code points used for such functions from being used from
      the range allocated through the IETF standards and thus protects an
      installed base of equipment from potential inadvertent overloading of
      code points. In order to support this requirement, IANA has changed
      the code point allocation scheme for the PW Associated
      Channel Type be changed as follows:</t>

      <t>0 - 32751 : IETF Review</t>

      <t>32760 - 32767 : Experimental</t>

      <t>Code points in the experimental range MUST be used according to the
      guidelines of RFC 3692 <xref target="RFC3692"/>. Functions using
      experimental G-ACh code points MUST be disabled by default. The Channel
      Type value used for a given experimental OAM function MUST be
      configurable, and care MUST be taken to ensure that different OAM
      functions that are not inter-operable are configured to use different
      Channel Type values.</t>

      <t>The PW Associated Channel Type registry has been updated to
      include a column indicating whether the ACH is followed by a ACH TLV
      header (Yes/No). There are two ACH Channel Type code-points currently
      assigned and in both cases no ACH TLV header is used. Thus, the new
      format of the PW Channel Type registry is:</t>

      <t><figure anchor="PW-CT-registry" title="PW Channel Type Registry">
          <artwork><![CDATA[Registry:
Value  Description                   TLV Follows  Reference
-----  ----------------------------  -----------  ---------
0x21   ACH carries an IPv4 packet    No           [RFC4385]
0x57   ACH carries an IPv6 packet    No           [RFC4385]]]></artwork>
        </figure></t>

      <t><vspace blankLines="6"/>IANA created a new registry
      called the Associated Channel Header TLV Registry. The allocation policy
      for this registry is IETF review. This registry MUST record the
      following information. There are no initial entries.</t>

      <t><figure anchor="ACH-TLV-registry" title="ACH TLV Registry">
          <artwork><![CDATA[Name       Type  Length   Description                  Reference
                (octets)]]></artwork>
        </figure></t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.5226"?>

      <?rfc include="reference.RFC.3031"?>

      <?rfc include="reference.RFC.3032"?>

      <?rfc include="reference.RFC.3443"?>

      <?rfc include="reference.RFC.4385"?>

      <?rfc include="reference.RFC.4446"?>

      <?rfc include="reference.RFC.5085"?>

      <?rfc include="reference.RFC.3692"?>

      <?rfc include="reference.RFC.5462"?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.3429'?>

<!--      <?rfc include='reference.I-D.ietf-mpls-tp-requirements'?> -->

<reference anchor="TP-REQ">
<front>
<title>MPLS-TP Requirements</title>

<author initials="B" surname="Niven-Jenkins" fullname="Ben Niven-Jenkins" role="editor">
    <organization/>
</author>

<author initials="D" surname="Brungard" fullname="Deborah Brungard" role="editor">
    <organization/>
</author>

<author initials="M" surname="Betts" fullname="Malcolm Betts" role="editor">
    <organization/>
</author>

<author initials="N" surname="Sprecher" fullname="Nurit Sprecher">
    <organization/>
</author>

<author initials="S" surname="Ueno" fullname="Satoshi Ueno">
    <organization/>
</author>

<date month="May" day="18" year="2009"/>

<abstract><t>This document specifies the requirements of an MPLS Transport Profile (MPLS-TP).  This document is a product of a joint International Telecommunications Union (ITU)-IETF effort to include an MPLS Transport Profile within the IETF MPLS and PWE3 architectures to support the capabilities and functionalities of a packet transport network as defined by International Telecommunications Union - Telecommunications Standardization Sector (ITU-T).  This work is based on two sources of requirements; MPLS and PWE3 architectures as defined by IETF, and packet transport networks as defined by ITU-T.  The requirements expressed in this document are for the behavior of the protocol mechanisms and procedures that constitute building blocks out of which the MPLS transport profile is constructed.  The requirements are not implementation requirements.</t></abstract>

</front>

<seriesInfo name="Work in" value="Progress"/>

</reference>


<!--      <?rfc include='reference.I-D.ietf-mpls-tp-oam-requirements'?> -->
<reference anchor="OAM-REQ">
<front>
<title>Requirements for OAM in MPLS Transport Networks</title>

<author initials="M" surname="Vigoureux" fullname="Martin Vigoureux" role="editor">
    <organization/>
</author>

<author initials="D" surname="Ward" fullname="David  Ward" role="editor">
    <organization/>
</author>

<author initials="M" surname="Betts" fullname="Malcolm Betts" role="editor">
    <organization/>
</author>

<date month="March" day="9" year="2009"/>

<abstract><t>This document lists the requirements for the Operations, Administration and Maintenance functionality of MPLS Transport Profile.  These requirements apply to pseudowires, Label Switched Paths, and Sections.  Architectural, functional and operational requirements are covered in this document.</t></abstract>

</front>

<seriesInfo name="Work in" value="Progress"/>

</reference>


<!--      <?rfc include='reference.I-D.ietf-mpls-tp-framework'?>-->

<reference anchor="MPLS-TP">
<front>
<title>A Framework for MPLS in Transport Networks</title>

<author initials="M" surname="Bocci" fullname="Matthew Bocci">
    <organization/>
</author>

<author initials="S" surname="Bryant" fullname="Stewart Bryant">
    <organization/>
</author>

<author initials="L" surname="Levrau" fullname="Lieven Levrau">
    <organization/>
</author>

<date month="November" day="27" year="2008"/>

<abstract><t>This document specifies an archiectectural framework for the application of MPLS in transport networks.  It describes a profile of MPLS that enables operational models typical in transport networks networks, while providing additional OAM, survivability and other maintenance functions not currently supported by MPLS.</t></abstract>

</front>

<seriesInfo name="Work in" value="Progress"/>

</reference>


      <?rfc include='reference.RFC.4379'?>

<!--      <?rfc include='reference.I-D.ietf-bfd-mpls'?> -->
<reference anchor="BFD-MPLS">
<front>
<title>BFD For MPLS LSPs</title>

<author initials="R" surname="Aggarwal" fullname="Rahul Aggarwal">
    <organization/>
</author>

<author initials="K" surname="Kompella" fullname="Kireeti Kompella">
    <organization/>
</author>

<author initials="T" surname="Nadeau" fullname="Thomas Nadeau">
    <organization/>
</author>

<author initials="G" surname="Swallow" fullname="George  Swallow">
    <organization/>
</author>

<date month="June" day="20" year="2008"/>

<abstract><t>One desirable application of Bi-directional Forwarding Detection (BFD) is to detect a Multi Protocol Label Switched (MPLS) Label Switched Path (LSP) data plane failure. LSP-Ping is an existing mechanism for detecting MPLS data plane failures and for verifying the MPLS LSP data plane against the control plane. BFD can be used for the former, but not for the latter. However the control plane processing required for BFD control packets is relatively smaller than the processing required for LSP-Ping messages. A combination of LSP-Ping and BFD can be used to provide faster data plane failure detection and/or make it possible to provide such detection on a greater number of LSPs. This document describes the applicability of BFD in relation to LSP-Ping for this application. It also describes procedures for using BFD in this environment.</t></abstract>

</front>

<seriesInfo name="Work in" value="Progress"/>

</reference>


<!--      <?rfc include='reference.I-D.ietf-pwe3-vccv-bfd'?> -->

<reference anchor="BFD-VCCV">
<front>
<title>Bidirectional Forwarding Detection (BFD) for the Pseudowire Virtual Circuit  Connectivity Verification (VCCV)</title>

<author initials="T" surname="Nadeau" fullname="Thomas Nadeau">
    <organization/>
</author>

<author initials="C" surname="Pignataro" fullname="Carlos Pignataro">
    <organization/>
</author>

<date month="May" day="13" year="2009"/>

<abstract><t>This document describes new Connectivity Verification (CV) types using Bidirectional Forwarding Detection (BFD) with Virtual Circuit Connectivity Verification (VCCV).  VCCV provides a control channel that is associated with a Pseudowire (PW), as well as the corresponding operations and management functions such as connectivity verification to be used over that control channel.</t></abstract>

</front>

<seriesInfo name="Work in" value="Progress"/>

</reference>


      <reference anchor="G805" target="">
        <front>
          <title>Generic Functional Architecture of Transport Networks</title>

          <author fullname="International Telecommunication Union" surname="International Telecommunication Union"/>

          <date month="March" year="2000"/>
        </front>

        <seriesInfo name="ITU-T" value="G.805"/>
      </reference>
    </references>
  </back>
</rfc>
