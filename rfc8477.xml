<?xml version="1.0" encoding="US-ASCII"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc compact="yes"?>
<?rfc text-list-symbols="o*+-"?>
<?rfc subcompact="no"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc toc="yes"?>

<rfc category="info" submissionType="IAB" number="8477" consensus="yes" ipr="trust200902">

  <front>
    <title abbrev="IOTSI Workshop 2016">Report from the Internet of Things (IoT) Semantic&nbsp;Interoperability&nbsp;(IOTSI)&nbsp;Workshop&nbsp;2016</title>



    <author initials="J." surname="Jimenez" fullname="Jaime Jimenez">
      <organization></organization>
      <address>
        <email>jaime.jimenez@ericsson.com</email>
      </address>
    </author>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization></organization>
      <address>
        <email>hannes.tschofenig@arm.com</email>
      </address>
    </author>
    <author initials="D." surname="Thaler" fullname="Dave Thaler">
      <organization></organization>
      <address>
        <email>dthaler@microsoft.com</email>
      </address>
    </author>

    <date year="2018" month="October"/>



       <abstract>

<t>This document provides a summary of the "Workshop on Internet of
Things (IoT) Semantic Interoperability (IOTSI)",
which took place in Santa Clara, California March 17-18, 2016.  The main
goal of the workshop was to foster a discussion on the different
approaches used by companies and Standards Developing Organizations (SDOs)
to accomplish interoperability at the application layer.  This report
summarizes the discussions and lists recommendations to the standards
community.  The views and positions in this report are those of the
workshop participants and do not necessarily reflect those of the
authors or the Internet Architecture Board (IAB), which organized
the workshop.
<!--begin DNE text -->
Note that this document is a report on the proceedings of the 
      workshop.  The views and positions documented in this report are 
      those of the workshop participants and do not necessarily reflect IAB 
      views and positions.

<!--end DNE text -->
</t>

    </abstract>


  </front>

  <middle>


<section anchor="section-1" title="Introduction">

<!--Begin DNE text -->
<t>The Internet Architecture Board (IAB) holds occasional workshops
designed to consider long-term issues and strategies for the
Internet, and to suggest future directions for the Internet
architecture.
<!--End DNE text -->
The investigated topics often require coordinated
efforts from many organizations and industry bodies to improve an
identified problem.  One of the targets of the workshops is to
establish communication between relevant organizations, especially
when the topics are out of the scope of the Internet Engineering
Task Force (IETF).
<!--Begin DNE text -->
This long-term planning function of the IAB is
complementary to the ongoing engineering efforts performed by working
groups of the IETF.
<!--End DNE text -->
</t>

<t>With the expansion of the Internet of Things (IoT), interoperability
becomes more and more important. Standards Developing Organizations (SDOs)
have done a tremendous amount of work to standardize new protocols
and profile existing protocols.</t>

<t>At the application layer and at the level of solution frameworks, 
interoperability is not yet mature. Particularly, the
work on data formats (in the form of data models and information
models) has not seen the same level of consistency throughout
SDOs.</t>

<t>One common problem is the lack of an encoding-independent standardization
of the information, the so-called information model. Another problem is
the strong relationship between data formats and the underlying communication architecture, 
such as a design in Remote Procedure Call (RPC) style or a RESTful design (where REST refers to Representational State Transfer). Furthermore, groups develop solutions that are very similar on the surface but differ slightly in their standardized outcome, leading to interoperability
problems. Finally, some groups favor different encodings for use with
various application-layer protocols.</t>

<t>Thus, the IAB decided to organize a workshop to reach out to relevant
stakeholders to explore the state of the art and identify
commonality and gaps <xref target="IOTSIAG"/><xref target="IOTSIWS"/>. In particular, the IAB was
interested to learn about the following aspects:</t>

<t><list style="symbols">
  <t>What is the state of the art in data and information models? What should
an information model look like?</t>
  <t>What is the role of formal languages, such as schema languages, in
describing information and data models?</t>
  <t>What is the role of metadata, which is attached to data to make it self-describing?</t>
  <t>How can we achieve interoperability when different organizations, companies,
and individuals develop extensions?</t>
  <t>What is the experience with interworking various data models developed
from different groups, or with data models that evolved over time?</t>
  <t>What functionality should online repositories for sharing schemas have?</t>
  <t>How can existing data models be mapped against each other to offer interworking?</t>
  <t>Is there room for harmonization, or are the use cases of different groups
and organizations so unique that there is no possibility for cooperation?</t>
  <t>How can organizations better work together to increase awareness and information sharing?</t>
</list></t>

</section>
<section anchor="section-2" title="Terminology">

<t>The first roadblock to interoperability at the level of data models is the lack of a
common vocabulary to start the discussion.
<xref target="RFC3444"/> provides a starting point by separating conceptual models for designers,
or "information models", from concrete detailed definitions for implementers, or
"data models". There are concepts that are
undefined in that RFC and elsewhere, such as the interaction with the
resources of an endpoint, or "interaction model".  Therefore, the three
"main" common models that were identified were:</t>

<t><list style="hanging" hangIndent="3">
  <t hangText='Information Model'><vspace blankLines='0'/>
  An information model defines an environment at the highest level of abstraction and
expresses the desired functionality.
Information models can be defined informally (e.g., in prose) or more
formally (e.g., Unified Modeling Language (UML), Entity-Relationship Diagrams, etc.).
Implementation details are hidden.</t>
</list></t>

<t><list style="hanging" hangIndent="3">
  <t hangText='Data Model'><vspace blankLines='0'/>
  

A data model defines concrete data representations at a lower level of
abstraction, including implementation- and protocol-specific details.
Some examples are SNMP Management Information Base (MIB) modules, World Wide
Web Consortium (W3C) Thing Description (TD) Things, YANG modules, Lightweight Machine-to-Machine (LwM2M) Schemas, Open Connectivity Foundation (OCF) Schemas, and so on.</t>
</list></t>

<t><list style="hanging" hangIndent="3">
  <t hangText='Interaction Model'><vspace blankLines='0'/>
  An interaction model defines how data is accessed and retrieved from the endpoints,
being, therefore, tied to the specific
communication pattern that the system has (e.g., REST methods,
Publish/Subscribe operations, or RPC calls).</t>
</list></t>

<t>Another identified terminology issue is the semantic meaning overload
that some terms have.  The meaning can vary depending on the context in which the
term is used.  Some examples of such terms are as follows: semantics, models,
encoding, serialization format, media types, and encoding types.  Due
to time constraints, no concrete terminology was agreed upon, but
work will continue within each organization to create various
terminology documents.  The participants agreed to set up a GitHub repository
<xref target="IOTSIGIT"/> for sharing information.</t>

</section>
<section anchor="section-4" title="What Problems to Solve">

<t>The participants agreed that there is not simply a single problem to be solved but
rather a range of problems. During the workshop, the following problems were discussed:</t>

<t><list style="symbols">
  <t>Formal Languages for Documentation Purposes</t>
</list></t>

<t>To simplify review and publication, SDOs need
formal descriptions of their data and interaction models.
Several of them use a tabular representation found in the specification itself
but use a formal language as an alternative way of describing objects and resources
for formal purposes.  Some examples of formal language use are as follows.</t>

<t>The Open Mobile Alliance (OMA), now OMA SpecWorks, used an XML Schema <xref
target="LWM2M-Schema"/> to describe their object and resource definitions. The
XML files of standardized objects are available for download at
<xref target="OMNA"/>.</t>

<t>The Bluetooth Special Interest Group (SIG) defined Generic Attribute Profile (GATT) services and characteristics for use with 
Bluetooth Smart/Low Energy. The services and characteristics are shown in a tabular form on 
the Bluetooth SIG website <xref target="SIG"/> and are defined as XML instance documents.</t>

<t>The Open Connectivity Foundation (OCF) uses JSON Schemas to formally define
data models and RESTful API Modeling Language (RAML) to define interaction models.  The standard files are
available online at &lt;oneIoTa.org&gt;.</t>

<t>The AllSeen Alliance uses AllJoyn Introspection XML to define data and interaction
models in the same formal language, tailored for RPC-style interaction.  The standard
files are available online on the AllSeen Alliance website, but both standard and
vendor-defined model files can be obtained by directly querying a device for them at runtime.</t>

<t>The World Wide Web Consortium (W3C) uses the Resource Description Framework (RDF)
to define data and interaction models using a format tailored for the web.</t>

<t>The Internet Engineering Task Force (IETF) uses YANG to define data and interaction models.
Other SDOs may use various other formats.</t>

<t><list style="symbols">
  <t>Formal Languages for Code Generation</t>
</list></t>

<t>Code-generation tools that use formal data and information modeling languages
are needed by developers. For example, the AllSeen Visual Studio
Plugin <xref target="AllSeen-Plugin"/> offers a wizard to generate code based on
the formal description of the data model.  Another example of a data
modeling language that can be used for code generation is YANG.  A
popular tool to help with code generation of YANG modules is pyang <xref target="PYANG"/>.
An example of a tool that can generate code for multiple ecosystems is
OpenDOF <xref target="OpenDOF"/>. Use cases discussed for code generation included easing
development of server-side device functionality, clients, and compliance tests.</t>


<t><list style="symbols">
  <t>Debugging Support</t>
</list></t>

<t>Debugging tools are needed that implement generic object browsers, which
use standard data models and/or retrieve formal language descriptions
from the devices themselves. As one example, the
nRF Bluetooth Smart sniffer from Nordic Semiconductor <xref target="nRF-Sniffer"/> can be
used to display services and characteristics defined by the Bluetooth SIG.
As another example, AllJoyn Explorer <xref target="AllJoynExplorer"/> can be used to browse
and interact with any resource exposed by an AllJoyn device, including both
standard and vendor-defined data models, by retrieving the formal descriptions
from the device at runtime.</t>

<t><list style="symbols">
  <t>Translation</t>
</list></t>

<t>The working assumption is that devices need to have a common data model 
with a priori knowledge of data types and actions. However, that would imply 
that each consortium/organization will try to define their own data
model. That would cause a major interoperability problem, possibly a completely
intractable one  given the number of variations, extensions, compositions, or
versioning changes that will happen for each data model.</t>


<t>Another potential approach is to have a minimal amount of information on the
device to allow for a runtime binding to a specific model, the objective being
to require as little prior knowledge as possible.</t>

<t>Moreover, gateways, bridges  and other similar devices need to dynamically
translate (or map) one data model to another one. Complexity will increase 
as there are also multiple protocols and schemas that make interoperability
harder to achieve.</t>

<t><list style="symbols">
  <t>Runtime Discovery</t>
</list></t>

<t>Runtime discovery allows IoT devices to exchange metadata about the data, potentially along with the
data exchanged itself. In some cases, the metadata not only describes data but also the interaction model as well. 
An example of such an approach has been shown with Hypermedia as the Engine of
Application State (HATEOAS) <xref target="HATEOAS"/>.
Another example is that all AllJoyn devices support such runtime discovery
using a protocol mechanism called "introspection", where the metadata is 
queried from the device itself <xref target="AllSeen"/>.</t>

<t>There are various models, whether deployed or possible, for such discovery.
The metadata might be extracted from a specification, looked up on a 
cloud repository (e.g., oneIoTa for OCF models), looked up via a vendor's
site, or obtained from the device itself (such as in the AllJoyn case).  The 
relevant metadata might be obtained from the same place or different
pieces might be obtained from different places, such as separately obtaining (a) syntax information, (b) end-user descriptions in 
a desired language, and (c) developer-specific comments for implementers.</t>

</section>
<section anchor="section-5" title="Translation">

<t>In an ideal world where organizations and companies cooperate and agree on a
single data model standard, there is no need for gateways that translate from one data model
to another one. However, this is far from reality today, and there are many
proprietary data models in addition to the already standardized ones. As a 
consequence, gateways are needed to translate between data models. This leads to 
(n^2)-n combinations, in the worst case.</t>

<t>There are analogies with gateways back in the 1980s that were used to
translate between network layer protocols.  Eventually, IP took over, providing
the necessary end-to-end interoperability at the network layer. Unfortunately,
the introduction of gateways leads to the loss of expressiveness
due to the translation between data models. The functionality of IP was so 
valuable in the market that advanced features of other networking 
protocols became less attractive and were not used anymore.</t>

<t>Participants discussed an alternative that they called a "red star", shown
in <xref target="red-star"/>, where data models are translated to a common
data model shown in the middle. This 
reduces the number of translations that are needed down to 2n (in the best case). 
The problem, of course, is that everyone wants their own data model to be the red star in the center.</t>

<figure title="The &quot;Red Star&quot; in Data/Information Models" anchor="red-star"><artwork><![CDATA[
   +-----+                                        +-----+
   |     |                                        |     |
   |     |  --                                 -- |     |
   |     |    --                             --   |     |
   +-----+      --                         --     +-----+
                  --                    ---
                    --                --
                      --            --
                        --        --
     ---                  -- A  --                  ---
    /   \                ___/ \___                 /   \
   |     | ---------------',   .'---------------  |     |
    \   /                 /. ^ .\                  \   /
     ---                 /'     '\                  ---   
                        --        --
                      --            --
                    --                --
                  --                    --
                --                        --
       /\     --                            --     /\
      /  \  --                                --  /  \
     /    \                                      /    \
    /      \                                    /      \
   /--------\                                  /--------\
]]></artwork></figure>

<t>While the workshop itself was not a suitable forum to discuss the design of 
such translation in detail, several questions were raised:</t>

<t><list style="symbols">
  <t>Do we need a "red star" that does everything, or could we design something that 
offers a more restricted functionality?</t>
  <t>How do we handle loss of data and functionality?</t>
  <t>Should data be translated between data models, or should data models themselves be translated?</t>
  <t>How can interaction models be translated? They need to be dealt with in addition 
 to the data models.</t>
  <t>Many (if not all) data and interaction models have some bizarre functionality 
 that cannot be translated easily. How can those be handled?</t>
  <t>What limitations are we going to accept in these translations?</t>
</list></t>


<t>The participants also addressed the question of when translation should be done.
Two use cases were discussed:
<list style="format (%c)">
<t>Design time: A translation between data model
descriptions, such as translating a YANG module to a RAML/JSON model,
can be performed once, during design time.
A single information model might be mapped to a number of different data models.</t>

<t>Run time: Runtime translation of values in two standard data models can only be
algorithmically done when the data model on one side is algorithmically derived
from the data model on the other side.  This was called a "derived model".
It was discussed that the availability of runtime discovery can aid in
semantic translation, such as when a vendor-specific data model on one
side of a protocol bridge is resolved and the translator can algorithmically 
derive the semantically equivalent vendor-specific data model on the other
side. This situation is discussed in <xref target="BridgeTaxonomy"/>.</t>
</list></t>
<t>The participants agreed that algorithm translation will generally require
custom code whenever one is translating to anything other than a derived model.</t>

<t>Participants concluded that it is typically easier to translate data between systems that
follow the same communication architecture.</t>

</section>
<section anchor="section-6" title="Dealing with Change">

<t>A large part of the workshop was dedicated to the evolution of
devices and server-side applications.
Interactions between devices and services and how their relationship
evolves over time is complicated by their respective interaction models.</t>

<t>The workshop participants discussed various approaches to deal with change.  In the most basic case, a
developer might use a description of an API and implement 
the protocol steps.  Sometimes, the data or information model can be used to generate code stubs.  Subsequent changes to an API
require changes on the clients to upgrade to the new version, which
requires some development of new code to satisfy the needs of the new
API.</t>

<t>These interactions could be made machine understandable in the first place,
enabling for changes to happen at runtime.
In that scenario, a machine client could discover the possible interactions with a
service, adapting to changes as they occur without specific code
being developed to adapt to them.</t>

<t>The challenge seems to be to code the human-readable specification into a machine-readable format.  Machine-readable languages require a shared vocabulary to
give meaning to the tags.</t>

<t>These types of interactions are often based on the REST architectural
style. Its principle is that a device or endpoint only needs a
single entry point, with a host providing descriptions of the API
in-band by means of web links and forms.</t>

<t>By defining IoT-specific relation types, it is possible to drive
interactions through links instead of hard-coding URIs into a RESTful
client, thus making the system flexible enough for later changes.
The definition of the basic hypermedia formats for IoT is still a work
in progress. However, some of the existing mechanisms can be reused,
such as resource discovery, forms, or links.</t>

</section>

<section title="IANA Considerations">
  <t>This document has no IANA actions.</t>
</section>

<section anchor="section-7" title="Security Considerations">

<t>There were two types of security considerations discussed: use of formal data
models for security configuration and security of data and data models in general.</t>

<t>It was observed that the security assumptions and configuration, or "security model", varies by ecosystem today,
making the job of a translator difficult.  For example, there are different types of security
principals (e.g., user vs. device vs. application), the use of Access Control Lists (ACLs) versus capabilities,
and what types of policies can be expressed, all vary by ecosystem.  As a result,
the security model architecture generally dictates where translation can be done.</t>

<t>One approach discussed was whether two endpoints might be able to use some overlay
security model across a translator between two ecosystems, which only works if
the two endpoints agree on a common data model for their communication.  Another approach
discussed was simply having a translator act as a trusted intermediary, which enables
the translator to translate between different data models.</t>

<t>One suggestion discussed was either adding metadata into the
formal data model language or having it accompany the data values over the wire, tagging
the data with privacy levels.  However, sometimes even the privacy level of information
might itself be sensitive.  Still, it was observed that being able to dynamically
learn security requirements might help provide better UIs and translators.</t>

</section>
<section anchor="section-8" title="Collaboration">

<t>The participants discussed how best to share information among their various organizations.
One discussion was around having joint meetings. One current challenge reported was that
organizations were not aware of when and where each other's meetings were scheduled,
and sharing such information could help organizations better collocate meetings.
To facilitate this exchange, the participants agreed to add links to their respective
meeting schedules from a common page in the IOTSI repository <xref target="IOTSIGIT"/>.</t>

<t>Another challenge reported was that organizations did not know how to find each other's
published data models, and sharing such information could better facilitate reuse of the
same information model.  To facilitate this exchange, the participants discussed whether
a common repository might be used by multiple organizations.  The OCF's oneIoTa repository
was discussed as one possibility, but it was reported that its terms of use at the time
of the workshop prevented this.  The OCF agreed to take this back and look at updating
the terms of use to allow other organizations to use it, as the restriction was not
the intent.  &lt;schema.org&gt; was discussed as another possibility.  In the meantime, the
participants agreed to add links to their respective repositories from a common page in
the IOTSI repository <xref target="IOTSIGIT"/>.</t>

<t>It was also agreed that the iotsi@iab.org mailing list would remain open and available
for sharing information between all relevant organizations.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>

<?rfc include="reference.RFC.3444" ?>



<reference anchor="AllSeen-Plugin">
  <front>
    <title>Using the AllJoyn Studio Extension</title>
    <author initials="B." surname="Rockwell" fullname="B. Rockwell">
      <organization></organization>
    </author>
    <date year="2015" month="August" day="17"/>
  </front>
</reference>

<reference anchor="HATEOAS" target="https://www.iab.org/wp-content/IAB-uploads/2016/03/2016-IAB-HATEOAS.pdf">
  <front>
    <title>Semantic Interoperability Requires Self-describing Interaction Models: HATEOAS for the Internet of Things</title>
    <author initials="M." surname="Kovatsch" fullname="M. Kovatsch">
      <organization></organization>
    </author>
    <author initials="Y.N." surname="Hassan">
      <organization></organization>
    </author>
    <author initials="K." surname="Hartke">
      <organization></organization>
    </author>
    <date />
  </front>
  <seriesInfo name="Proceedings of the IAB IoT Semantic Interoperability Workshop" value="2016"/>
</reference>

<reference anchor="AllSeen" target="https://www.iab.org/wp-content/IAB-uploads/2016/03/AllSeen-summary-IOTSI.pdf">
  <front>
    <title>Summary of AllSeen Alliance Work Relevant to Semantic Interoperability</title>
    <author initials="D." surname="Thaler" fullname="D. Thaler">
      <organization></organization>
    </author>
    <date year="2016"/>
  </front>
</reference>

<reference anchor="BridgeTaxonomy" target="https://www.iab.org/wp-content/IAB-uploads/2016/03/DThaler-IOTSI.pdf">
  <front>
    <title>IoT Bridge Taxonomy</title>
    <author initials="D." surname="Thaler" fullname="D. Thaler">
      <organization></organization>
    </author>
    <date />
  </front>
<seriesInfo name="IAB IOTSI Workshop" value="2016" />
</reference>

<reference anchor="IOTSIAG" target="https://www.iab.org/activities/workshops/iotsi/agenda/">
  <front>
    <title>IoT Semantic Interoperability Workshop Agenda</title>
    <author >
      <organization>IAB</organization>
    </author>
    <date year="2016"/>
  </front>
</reference>


<reference anchor="IOTSIGIT" target="https://github.com/iotsi/iotsi">
  <front>
    <title>Starting place for the IoT Semantic Interoperability Workshop
    (IOTSI) Information Resource</title>
    <author >
      <organization></organization>
    </author>
    <date year="2018" month="July"/>
  </front>
<seriesInfo name='commit' value="ff21f74"/>
</reference>

<reference anchor="IOTSIWS" target="https://www.iab.org/activities/workshops/iotsi/">
  <front>
    <title>IoT Semantic Interoperability Workshop 2016</title>
    <author >
      <organization>IAB</organization>
    </author>
    <date year="2016"/>
  </front>
</reference>

<reference anchor="LWM2M-Schema" >
  <front>
    <title>LWM2M XML Schema - LWM2M Editor Schema</title>
    <author >
      <organization>OMA</organization>
    </author>
    <date year="2018" month="July"/>
  </front>
</reference>

<reference anchor="OMNA">
  <front>
    <title>OMA LightweightM2M (LwM2M) Object and Resource Registry</title>
    <author >
      <organization>OMA</organization>
    </author>
    <date />
  </front>
</reference>

<reference anchor="SIG" target="https://www.bluetooth.com/specifications/gatt">
  <front>
    <title>GATT Specifications</title>
    <author >
      <organization>Bluetooth SIG</organization>
    </author>
    <date />
  </front>
</reference>

<reference anchor="PYANG" target="https://github.com/mbj4668/pyang">
  <front>
    <title>An extensible YANG validator and converter in python</title>
    <author>
      <organization></organization>
    </author>
    <date year="2018" month="September" day="13"/>
  </front>
<seriesInfo name="commit" value="15c807f" />
</reference>

<reference anchor="nRF-Sniffer">
  <front>
    <title>nRF Sniffer: Smart/Bluetooth low energy packet sniffer</title>
    <author >
      <organization>Nordic Semiconductor</organization>
    </author>
    <date />
  </front>
</reference>

<reference anchor="AllJoynExplorer">
  <front>
    <title>AllJoyn</title>
    <author >
      <organization>Microsoft</organization>
    </author>
    <date />
  </front>
</reference>

<reference anchor="OpenDOF" target="https://opendof.org">
  <front>
    <title>The OpenDOF Project</title>
    <author >
      <organization>OpenDOF</organization>
    </author>
    <date />
  </front>
</reference>


</references>


<section title="Program Committee" >

<t>This workshop was organized by the following individuals: Jari Arkko,
Ralph Droms, Jaime Jimenez, Michael Koster, Dave Thaler, and Hannes
Tschofenig.</t>

</section>
<section title="Accepted Position Papers">


<t><list style="symbols">
  <t>Jari Arkko, "Gadgets and Protocols Come and Go, Data Is Forever"</t>
  <t>Carsten Bormann, "Noise in Specifications hurts"</t>
  <t>Benoit Claise, "YANG as the Data Modelling Language in the IoT space"</t>
  <t>Robert Cragie, "The ZigBee Cluster Library over IP"</t>
  <t>Dee Denteneer, Michael Verschoor, and Teresa Zotti, "Fairhair: interoperable IoT services for major Building Automation and Lighting Control ecosystems"</t>
  <t>Universal Devices, "Object Oriented Approach to IoT Interoperability"</t>
  <t>Bryant Eastham, "Interoperability and the OpenDOF Project"</t>
  <t>Stephen Farrell and Alissa Cooper, "It's Often True: Security's Ignored (IOTSI) - and Privacy too"</t>
  <t>Christian Groves, Lui Yan, and Yang Weiwei, "Overview of IoT semantics landscape"</t>
  <t>Ted Hardie, "Loci of Interoperability for the Internet of Things"</t>
  <t>Russ Housley, "Vehicle-to-Vehicle and Vehicle-to-Infrastructure Communications"</t>
  <t>Jaime Jimenez, Michael Koster, and Hannes Tschofenig, "IPSO Smart Objects"</t>
  <t>David Jones, "IOTDB - interoperability Through Semantic Metastandards"</t>
  <t>Sebastian Kaebisch and Darko Anicic, "Thing Description as Enabler of Semantic Interoperability on the Web of Things"</t>
  <t>Achilleas Kemos, "Alliance for Internet of Things Innovation Semantic Interoperability Release 2.0, AIOTI WG03 - IoT Standardisation"</t>
  <t>Ari Keraenen and Cullen Jennings, "SenML: simple building block for IoT semantic interoperability"</t>
  <t>Dongmyoung Kim, Yunchul Choi, and Yonggeun Hong, "Research on Unified Data Model and Framework to Support Interoperability between IoT Applications"</t>
  <t>Michael Koster, "Model-Based Hypertext Language"</t>
  <t>Matthias Kovatsch, Yassin N.  Hassan, and Klaus Hartke, "Semantic Interoperability Requires Self-describing Interaction Models"</t>
  <t>Kai Kreuzer, "A Pragmatic Approach to Interoperability in the Internet of Things"</t>
  <t>Barry Leiba, "Position Paper"</t>
  <t>Marcello Lioy, "AllJoyn"</t>
  <t>Kerry Lynn and Laird Dornin, "Modeling RESTful APIs with JSON Hyper-Schema"</t>
  <t>Erik Nordmark, "Thoughts on IoT Semantic Interoperability: Scope of security issues"</t>
  <t>Open Geospatial Consortium, "OGC SensorThings API: Communicating "Where" in the Web of Things"</t>
  <t>Jean Paoli and Taqi Jaffri, "IoT Information Model Interoperability: An Open, Crowd-Sourced Approach in Three Parallel Parti"</t>
  <t>Joaquin Prado, "OMA Lightweight M2M Resource Model"</t>
  <t>Dave Raggett and Soumya Kanti Datta, "Input paper for IAB Semantic Interoperability Workshop"</t>
  <t>Pete Rai and Stephen Tallamy, "Semantic Overlays Over Immutable Data to Facilitate Time and Context Specific Interoperability"</t>
  <t>Jasper Roes and Laura Daniele, "Towards semantic interoperability in the IoT using the Smart Appliances REFerence ontology (SAREF) and its extensions"</t>
  <t>Max Senges, "Submission for IAB IoT Sematic Interoperability workshop"</t>
  <t>Bill Silverajan, Mert Ocak and Jaime Jimenez, "Implementation Experiences of Semantic Interoperability for RESTful Gateway Management"</t>
  <t>Ned Smith, Jeff Sedayao, and Claire Vishik, "Key Semantic Interoperability Gaps in the Internet-of-Things Meta-Models"</t>
  <t>Robert Sparks and Ben Campbell, "Considerations for certain IoT-based services"</t>
  <t>J. Clarke Stevens, "Open Connectivity Foundation oneIoTa Tool"</t>
  <t>J. Clarke Stevens and Piper Merriam, "Derived Models for Interoperability Between IoT Ecosystems"</t>
  <t>Ravi Subramaniam, "Semantic Interoperability in Open Connectivity Foundation (OCF) - formerly Open Interconnect Consortium (OIC)"</t>
  <t>Andrew Sullivan, "Position paper for IOTSI workshop"</t>
  <t>Darshak Thakore, "IoT Security in the context of Semantic Interoperability"</t>
  <t>Dave Thaler, "IoT Bridge Taxonomy"</t>
  <t>Dave Thaler, "Summary of AllSeen Alliance Work Relevant to Semantic Interoperability"</t>
  <t>Mark Underwood, Michael Gruninger, Leo Obrst, Ken Baclawski, Mike
  Bennett, Gary Berg-Cross, Torsten Hahmann, and Ram Sriram, "Internet of Things: Toward Smart Networked Systems and Societies"</t>
  <t>Peter van der Stok and Andy Bierman, "YANG-Based Constrained Management Interface (CoMI)"</t>
</list></t>

</section>

<section title="List of Participants">
<?rfc subcompact="yes"?>
<t><list>
  <t>Andy Bierman, YumaWorks</t>
  <t>Carsten Bormann, Uni Bremen/TZI</t>
  <t>Ben Campbell, Oracle</t>
  <t>Benoit Claise, Cisco</t>
  <t>Alissa Cooper, Cisco</t>
  <t>Robert Cragie, ARM Limited</t>
  <t>Laura Daniele, TNO</t>
  <t>Bryant Eastham, OpenDOF</t>
  <t>Christian Groves, Huawei</t>
  <t>Ted Hardie, Google</t>
  <t>Yonggeun Hong, ETRI</t>
  <t>Russ Housley, Vigil Security</t>
  <t>David Janes, IOTDB</t>
  <t>Jaime Jimenez, Ericsson</t>
  <t>Shailendra Karody, Catalina Labs</t>
  <t>Ari Keraenen, Ericsson</t>
  <t>Michael Koster, SmartThings</t>
  <t>Matthias Kovatsch, Siemens</t>
  <t>Kai Kreuzer, Deutsche Telekom</t>
  <t>Barry Leiba, Huawei</t>
  <t>Steve Liang, Uni Calgary</t>
  <t>Marcello Lioy, Qualcomm</t>
  <t>Kerry Lynn, Verizon</t>
  <t>Mayan Mathen, Catalina Labs</t>
  <t>Erik Nordmark, Arista</t>
  <t>Jean Paoli, Microsoft</t>
  <t>Joaquin Prado, OMA</t>
  <t>Dave Raggett, W3C</t>
  <t>Max Senges, Google</t>
  <t>Ned Smith, Intel</t>
  <t>Robert Sparks, Oracle</t>
  <t>Ram Sriram, NIST</t>
  <t>Clarke Stevens</t>
  <t>Ram Subramanian, Intel</t>
  <t>Andrew Sullivan, DIN</t>
  <t>Darshak Thakore, CableLabs</t>
  <t>Dave Thaler, Microsoft</t>
  <t>Hannes Tschofenig, ARM Limited</t>
  <t>Michael Verschoor, Philips Lighting</t>
</list></t>
<?rfc subcompact="no"?>

</section>

<section title="IAB Members at the Time of Approval" numbered="no">
<?rfc subcompact="yes"?>
  <t><list>
  <t>Jari Arkko</t>
  <t>Alissa Cooper</t>
  <t>Ted Hardie</t>
  <t>Christian Huitema</t>
  <t>Gabriel Montenegro</t>
  <t>Erik Nordmark</t>
  <t>Mark Nottingham</t>
  <t>Melinda Shore</t>
  <t>Robert Sparks</t>
  <t>Jeff Tantsura</t>
  <t>Martin Thomson</t>
  <t>Brian Trammell</t>
  <t>Suzanne Woolf</t>
  </list></t>
<?rfc subcompact="no"?>
  </section>

<section title="Acknowledgements" numbered="no">

<t>We would like to thank all paper authors and participants for their
contributions and Ericsson for hosting the workshop.</t>

</section>


  </back>


</rfc>

