<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "http://xml.resource.org/authoring/rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc compact="yes"?>  
<?rfc subcompact="no"?>

<rfc number="6506" category="std" submissionType="IETF" consensus="yes"
     ipr="trust200902">

  <front>
    <title abbrev="Authentication Trailer for OSPFv3">Supporting Authentication Trailer for OSPFv3</title>

    <author fullname="Manav Bhatia" initials="M.B." surname="Bhatia">
      <organization>Alcatel-Lucent</organization>
      <address>
        <postal>
          <street></street>
          <city>Bangalore</city>
          <country>India</country>
        </postal>

        <email>manav.bhatia@alcatel-lucent.com</email>
      </address>
    </author>

    <author fullname="Vishwas Manral" initials="V.M." surname="Manral">
      <organization>Hewlett Packard</organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <code></code>
          <region></region>
          <country>USA</country>
        </postal>

        <email>vishwas.manral@hp.com</email>
      </address>
    </author>

    <author fullname="Acee Lindem" initials="A.C." surname="Lindem">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>102 Carric Bend Court</street>
          <city>Cary</city>
          <region>NC 27519</region>
          <country>USA</country>
        </postal>

        <email>acee.lindem@ericsson.com</email>
      </address>
    </author>

    <date month="February" year="2012" />

    <area>Routing Area</area>
    <workgroup>OSPF Working Group</workgroup>


    <abstract>
      <t>Currently, OSPF for IPv6 (OSPFv3) uses IPsec as the only mechanism for authenticating protocol packets. 
            This behavior is different from authentication mechanisms present in other routing protocols
             (OSPFv2, Intermediate System to Intermediate System (IS-IS), RIP, and Routing Information Protocol Next Generation
(RIPng)). In some environments, it has been found that IPsec is 
             difficult to configure and maintain and thus cannot be used.  This document 
             defines an alternative mechanism to authenticate OSPFv3 protocol packets 
             so that OSPFv3 does not only depend upon IPsec for authentication.
</t>
    </abstract>
  </front>
  <middle>
    <section title="Introduction">


      <t> Unlike Open Shortest Path First version 2 (OSPFv2) <xref target="RFC2328"></xref>, 
	OSPF for IPv6 (OSPFv3)  <xref target="RFC5340"></xref> does not
include the AuType 
and Authentication fields in its headers for authenticating protocol packets.
	
		 Instead, OSPFv3 relies on the IPsec protocols Authentication
Header (AH) <xref target="RFC4302"></xref> 
		and Encapsulating Security Payload (ESP) <xref target="RFC4303"></xref>
		to provide integrity, authentication, and/or confidentiality.
   </t> <t>
	<xref target="RFC4552"></xref> describes how IPv6 AH and ESP extension headers can 
		be used to provide authentication and/or confidentiality to OSPFv3.
	</t> <t>
		However, there are some environments, e.g., Mobile Ad Hoc Networks (MANETs), 
		where IPsec is difficult to configure and maintain, and this mechanism 
		cannot be used.  
  </t> <t>
		<xref target="RFC4552"></xref>  discusses, at length, the reasoning behind 
		using manually configured keys, rather than some automated key management 
		protocol such as Internet Key Exchange version 2
(IKEv2) <xref target="RFC5996"></xref>. The primary problem 
		is the lack of a suitable key management mechanism, as OSPFv3 adjacencies 
		are formed on a one-to-many basis and most key management mechanisms
		are designed for a one-to-one communication model. This forces the system 
		administrator to use manually configured security associations (SAs) and
		cryptographic keys to provide the authentication and, if desired, confidentiality services.
	</t> <t>
		Regarding replay protection, <xref target="RFC4552"></xref>  states that:
	</t> <t>
		<list><t>
   Since it is not possible using the current standards to provide
   complete replay protection while using manual keying, the proposed
   solution will not provide protection against replay attacks.
</t>
                </list>
	</t> <t>
		Since there is no replay protection provided there are a number of 
		vulnerabilities in OSPFv3 that have been discussed in 
		<xref target="RFC6039"></xref>.
	</t> <t>
		Since there is no deterministic way to differentiate between encrypted and 
		unencrypted ESP packets by simply examining the packet, it could be
		difficult for some implementations to prioritize certain OSPFv3 packet types, 
		e.g., Hello packets, over the other types.

	</t> <t> This document defines a new mechanism that works similarly to OSPFv2 
		<xref target="RFC5709"></xref> 
to provide authentication to the OSPFv3 packets and attempts to solve the problems related to replay protection
       and deterministically disambiguating different OSPFv3 packets 
       as described above.

 	</t><t> This document adds support for the Secure Hash Algorithms (SHAs) defined
   in the US NIST Secure Hash Standard (SHS), which is specified by NIST
   FIPS 180-3. <xref target="FIPS-180-3"></xref> includes SHA-1, SHA-224, SHA-256, SHA-384,
   and SHA-512.  The Hashed Message Authentication Code (HMAC)
   authentication mode defined in NIST FIPS 198-1 <xref target="FIPS-198-1"></xref> is used.
</t>

<t> It is believed that HMAC as defined in <xref target="RFC2104"></xref> is
      mathematically identical to <xref target="FIPS-198-1"></xref>;
      it is also believed that algorithms in <xref target="RFC6234"></xref>
    are  mathematically identical to <xref target="FIPS-198-1"></xref>.
</t>
         <section title="Requirements">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in RFC 2119 <xref
        target="RFC2119"></xref>.</t>       
	</section>
  
        </section>

      <section title="Proposed Solution">
	<t> To perform non-IPsec Cryptographic Authentication, OSPFv3
		routers append a special data block, henceforth referred to as the
		Authentication Trailer, to the end of the OSPFv3 packets. The length
		of the Authentication Trailer is not included in the length of the
		OSPFv3 packet but is included in the IPv6 payload length, as 
        shown in Figure 1. </t>

<figure title='Figure 1: Authentication Trailer in OSPFv3'>
	 <artwork align='center'>
 +---------------------+ --              --  +----------------------+
 | IPv6 Payload Length | ^               ^   | IPv6 Payload Length  |
 | PL = OL + LL        | |               |   | PL = OL + LL + AL    |
 |                     | v               v   |                      |
 +---------------------+ --              --  +----------------------+
 | OSPFv3 Header       | ^               ^   | OSPFv3 Header        |
 | Length = OL         | |               |   | Length = OL          |
 |                     | |    OSPFv3     |   |                      |
 |.....................| |    Packet     |   |......................|
 |                     | |    Length     |   |                      |
 | OSPFv3 Packet       | |               |   | OSPFv3 Packet        |
 |                     | v               v   |                      |
 +---------------------+ --              --  +----------------------+
 |                     | ^               ^   |                      |
 | Optional LLS        | |    LLS Data   |   | Optional LLS         |
 | LLS Block Len = LL  | |    Block      |   | LLS Block Len = LL   |
 |                     | v    Length     v   |                      |
 +---------------------+ --              --  +----------------------+
                                         ^   |                      |
                    AL = PL - (OL + LL)  |   | Authentication       |
                                         |   | AL = Fixed Trailer + |
                                         v   |      Digest Length   |
                                         --  +----------------------+
	</artwork>
         </figure>

	<t> The presence of the Link-Local Signaling (LLS)  <xref target="RFC5613"></xref>
            block is determined by the L-bit setting in the OSPFv3 Options field in OSPFv3
            Hello and Database Description packets. If present, the LLS data block is included 
            along with the OSPFv3 packet in the Cryptographic Authentication 
            computation.
	</t>
<section anchor = "OSPFv3Options" title="AT-Bit in Options Field">
 <t> A new AT-bit (AT stands for Authentication Trailer) is introduced
       into the OSPFv3 Options field. OSPFv3 routers MUST set the AT-bit in 
       OSPFv3 Hello and Database Description packets to indicate that all the 
       packets on this link will include an Authentication Trailer. 
       For OSPFv3 Hello and Database Description 
       packets, the AT-bit indicates the AT is present. For other OSPFv3 packet
       types, the OSPFv3 AT-bit setting from the OSPFv3 Hello/Database
       Description setting is preserved in the OSPFv3 neighbor data structure.
       OSPFv3 packet types that don't include an OSPFv3 Options field will use
       the setting from the neighbor data structure to determine whether or not
       the AT is expected.</t>
<figure title='Figure 2: OSPFv3 Options Field'>
	 <artwork align='center'>
 0                   1                      2
 0 1 2 3 4 5 6 7 8 9 0 1 2 3  4 5  6 7 8  9 0 1  2 3
+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+--+-+-+--+-+-+--+-+--+
| | | | | | | | | | | | | |AT|L|AF|*|*|DC|R|N|MC|E|V6|
+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+--+-+-+--+-+-+--+-+--+
	</artwork>
         </figure>
	<t> The AT-bit, as shown in the figure above, MUST be set in all OSPFv3 Hello and
            Database Description packets that contain an Authentication Trailer.</t>
</section>
 <section anchor="BasicOp" title="Basic Operation">
      <t> The procedure followed for computing the Authentication Trailer
		 is much the same as described in <xref target="RFC5709"></xref> 
		and <xref target="RFC2328"></xref>. One difference is that the
LLS data block, if present,
                is included in the Cryptographic Authentication computation.</t>
		<t>The way the authentication data is carried in the Authentication
		Trailer is very similar to how it is done in case of <xref target="RFC2328"></xref>.
		The only difference between the OSPFv2 Authentication Trailer and the OSPFv3
                Authentication Trailer is that information in addition to the message digest
                is included. The additional information in the OSPFv3 Authentication Trailer 
                is included in the message digest computation
                and is therefore protected by OSPFv3 Cryptographic Authentication as described herein.</t> 
        <t>Consistent with OSPFv2 Cryptographic Authentication <xref target="RFC2328"></xref>, 
           both OSPFv3 header checksum calculation and verification are omitted when the OSPFv3
           authentication mechanism described in this specification is used.</t>
        </section>
     <section anchor="IPv6Souce" title="IPv6 Source Address Protection">
     <t>While OSPFv3 always uses the Router ID to identify OSPFv3 neighbors,
        the IPv6 source address is learned from OSPFv3 Hello packets and copied into the neighbor data
        structure <xref target="RFC5340"></xref>.  Hence, OSPFv3 is susceptible to Man-in-the-Middle attacks
        where the IPv6 source address is modified. To thwart such attacks, the IPv6
        source address will be included in the message digest calculation and protected by OSPFv3
        authentication. 
        Refer to <xref target="Crypto-Aspects"></xref> for details. This is different than the procedure
        specified in <xref target="RFC5709"></xref> but consistent with 
       <xref target="MANUAL-KEY"/>.</t>
     </section>
</section>
<section anchor="OSPFv3SA" title="OSPFv3 Security Association">
	<t> An OSPFv3 Security Association (SA) contains a set of parameters 
		shared between any two legitimate OSPFv3 speakers. 
	</t><t> Parameters associated with an OSPFv3 SA are as follows: </t>
	 <t><list style="symbols">
	<t> Security Association Identifier (SA ID)  <vspace blankLines="1" />
		This is a 16-bit unsigned integer used to uniquely identify an OSPFv3 SA, 
		as manually configured by the network operator.<vspace blankLines="1" />

		The receiver determines the active SA by looking at the SA ID 
		field in the incoming protocol packet. <vspace blankLines="1" />

		The sender, based on the active configuration, selects an SA 
		to use and puts the correct Key ID value associated with the SA
		in the OSPFv3 protocol packet. If multiple valid and active OSPFv3 
		SAs exist for a given interface, the sender may use any
                of those SAs to protect the packet.<vspace blankLines="1" />

		Using SA IDs makes changing keys while maintaining protocol operation convenient. 
		Each SA ID specifies two independent parts, the authentication algorithm 
		and the Authentication Key, as explained below. <vspace blankLines="1" />

		Normally, an implementation would allow the network operator to configure a 
		set of keys in a key chain, with each key in the chain having a
fixed lifetime. 
		The actual operation of these mechanisms is outside the scope of this document.<vspace blankLines="1" />

		Note that each SA ID can indicate a key with a different authentication algorithm. 
		This allows the introduction of new authentication mechanisms without 
		disrupting existing OSPFv3 adjacencies.
	 </t>
	<t> Authentication Algorithm <vspace blankLines="1" />
		This signifies the authentication algorithm to be used with this 
		OSPFv3 SA. This information is never sent in clear text over the wire. 
		Because this information is not sent on the wire, the implementer 
		chooses an implementation-specific representation for this information. <vspace blankLines="1" />

		Currently, the following algorithms are supported: 
                <list><t>HMAC-SHA-1, </t>
                      <t>HMAC-SHA-256, </t>
                      <t>HMAC-SHA-384, and </t>
                      <t>HMAC-SHA-512. </t>
                </list>
	</t>
	<t> Authentication Key <vspace blankLines="1" />
		This value denotes the Cryptographic Authentication Key associated
		with this OSPFv3 SA. The length of this key is variable and depends 
		upon the authentication algorithm specified by the OSPFv3 SA.
	</t>
        <t> KeyStartAccept <vspace blankLines="1" />
              The time that this OSPFv3 router will accept packets that have been
              created with this OSPFv3 SA.
	</t>
        <t> KeyStartGenerate <vspace blankLines="1" />
                 The time that this OSPFv3 router will begin using this OSPFv3 SA
                 for OSPFv3 packet generation.
	</t>
        <t>KeyStopGenerate <vspace blankLines="1" />
                The time that this OSPFv3 router will stop using this OSPFv3 SA
                for OSPFv3 packet generation.
        </t>
        <t>KeyStopAccept <vspace blankLines="1" />
                The time that this OSPFv3 router will stop accepting packets
                generated with this OSPFv3 SA.
        </t>
	 </list> </t>
        <t>In order to achieve smooth key transition, KeyStartAccept SHOULD be
           less than KeyStartGenerate, and KeyStopGenerate SHOULD be less than
           KeyStopAccept.  If KeyStartGenerate or KeyStartAccept are left
           unspecified, the time will default to 0, and the key will be used 
           immediately. If KeyStopGenerate or KeyStopAccept are left
           unspecified, the time will default to infinity, and the key's lifetime
           will be infinite.  When a new key replaces
           an old, the KeyStartGenerate time for the new key MUST be less than
           or equal to the KeyStopGenerate time of the old key.</t>
        <t>Key storage SHOULD persist across a system restart, warm or cold, to
           avoid operational issues.  In the event that the last key associated
           with an interface expires, it is unacceptable to revert to an
           unauthenticated condition and not advisable to disrupt routing.
           Therefore, the router SHOULD send a "last Authentication Key
           expiration" notification to the network operator and treat the key as
           having an infinite lifetime until the lifetime is extended, the key
           is deleted by the network operator, or a new key is configured.</t>
</section>
<section anchor="Auth Procedure" title="Authentication Procedure">
<section anchor="Auth trailer" title="Authentication Trailer">


	<t>The Authentication Trailer that is appended to the OSPFv3 
	protocol packet is described below:
	</t>

<figure title='Figure 3: Authentication Trailer Format'>
	 <artwork align='center'>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|      Authentication Type      |        Auth Data Len          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Reserved            |   Security Association ID     | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Cryptographic Sequence Number (High-Order 32 Bits)  | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Cryptographic Sequence Number (Low-Order 32 Bits)   | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
|                Authentication Data (Variable)                 |
~                                                               ~
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	</artwork>
         </figure>

	<t>The various fields in the Authentication Trailer are:</t>
        <t><list style="symbols">
	<t>  Authentication Type <vspace blankLines="1" />

                        16-bit field identifying the type of authentication. The following
                        values are defined in this specification:
            <list style="empty">
                 <t>0 - Reserved. <vspace blankLines="0"/>
                    1 - HMAC Cryptographic Authentication as described herein.</t>
            </list> </t>
	
	<t>  Auth Data Len <vspace blankLines="1" />

                        The length in octets of the Authentication Trailer (AT) including both the 
                        16-octet fixed header and the variable length message digest. </t>
        <t> Reserved <vspace blankLines="1" />

                        This field is reserved.  It SHOULD be set to 0 when sending protocol packets 
                        and MUST be ignored when receiving protocol packets.</t>
	
	<t>  Security Association Identifier (SA ID) <vspace blankLines="1" />

			16-bit field that maps to the authentication algorithm and the secret 
            key used to create the message digest appended to the OSPFv3 protocol packet.
           <vspace blankLines="1" />	
            Though the SA ID implicitly implies the algorithm, the HMAC output
  size should not be used by implementers as an implicit hint because
  additional algorithms may be defined in the future that have the
  same output size.

</t>
	
	<t>  Cryptographic Sequence Number <vspace blankLines="1" />		

		64-bit strictly increasing sequence number that is used to guard against replay attacks.
                The 64-bit sequence number MUST be incremented for every OSPFv3 packet sent by the OSPFv3
                router. Upon reception, the sequence number MUST be greater than the sequence 
                number in the last OSPFv3 packet accepted from the sending OSPFv3 neighbor. Otherwise, 
                the OSPFv3 packet is considered a replayed packet and dropped.<vspace blankLines="1" />
                
                OSPFv3 routers implementing this specification MUST use available mechanisms to
                preserve the sequence number's strictly increasing property for the deployed life
                of the OSPFv3 router (including cold restarts). One mechanism for accomplishing this
                would be to use the high-order 32 bits of the sequence number as a wrap/boot count
                that is incremented anytime the OSPFv3 router loses its sequence number state. 
                Sequence number wrap is described in <xref target="Sequence-Wrap"></xref>.
            </t>

	<t>  Authentication Data <vspace blankLines="1" />
	 Variable data that is carrying the digest for the protocol packet 
         and optional LLS data block.</t>
	</list></t>
          <section anchor="Sequence-Wrap" title="Sequence Number Wrap">
             <t>When incrementing the sequence number for each transmitted
OSPFv3 packet, 
                the sequence number should be treated as an unsigned 64-bit
value. If the lower-order 32-bit value wraps, the higher-order 32&nbhy;bit value should be incremented and saved in 
                non-volatile storage. If by some chance the OSPFv3 router is deployed long enough
                that there is a possibility that the 64-bit sequence number may wrap, all keys,
                independent of their key distribution mechanism, MUST be reset to avoid the possibility
                of replay attacks. Once the keys have been changed, the higher-order sequence number 
                can be reset to 0 and saved to non-volatile storage.</t>
           </section>
 </section>
        <section anchor="checksum" title="OSPFv3 Header Checksum">
           <t>Both OSPFv3 header checksum calculation and verification are omitted when the OSPFv3
              authentication mechanism described in this specification is used. This implies: 
             <list style="symbols">
             <t>For OSPFv3 packets to be transmitted, the OSPFv3 header checksum computation is 
              omitted, and the OSPFv3 header checksum SHOULD be
              set to 0 prior to computation of the OSPFv3 Authentication
              Trailer message digest.</t>
             <t>For received OSPFv3 packets including an OSPFv3 Authentication Trailer, 
                OSPFv3 header checksum verification MUST be omitted. However, if the 
                OSPFv3 packet does include a non-zero OSPFv3 header checksum, it will not be
                modified by the receiver and will simply be included in the OSPFv3 Authentication
                Trailer message digest verification.</t></list>
         </t></section>
	<section anchor="Crypto Auth Procedure" title="Cryptographic Authentication Procedure">
	<t> As noted earlier, the SA ID maps to the authentication algorithm
and the secret key used to generate and verify the message digest.  This 
		specification discusses the computation of OSPFv3 Cryptographic Authentication 
		data when any of the NIST SHS family of algorithms is used in the Hashed 
		Message Authentication Code (HMAC) mode. <vspace blankLines="1" />		

		The currently valid algorithms (including mode) for OSPFv3 Cryptographic 
		Authentication include: 
                <list style="symbols"><t>HMAC-SHA-1, </t>
                      <t>HMAC-SHA-256,</t>
                      <t>HMAC-SHA-384, and</t>
                      <t>HMAC-SHA-512.</t>
                </list>

		Of the above, implementations of this specification MUST include support for at least 
		HMAC-SHA-256 and SHOULD include support for HMAC-SHA-1 and MAY also 
		include support for HMAC-SHA-384 and HMAC&nbhy;SHA&nbhy;512.<vspace blankLines="1" />	

       Implementations of this specification MUST use HMAC-SHA-256 as the default authentication algorithm.
	</t>
	</section>
      <section anchor="Cross-Protocol" title="Cross-Protocol Attack Mitigation">
        <t>In order to prevent cross-protocol replay attacks for protocols sharing common
        keys, the two-octet OSPFv3 Cryptographic Protocol ID is appended to the Authentication Key
        prior to use. Other protocols using Cryptographic Authentication as specified herein
        MUST similarly append their respective Cryptographic Protocol IDs to their keys 
        in this step.  Refer to the <xref target="IANA">IANA Considerations</xref>.
     	</t></section> 
      <section anchor="Crypto-Aspects" title="Cryptographic Aspects">
        <t> In the algorithm description below, the following nomenclature, which 
	is consistent with <xref target="FIPS-198-1"></xref>, is used:</t>

<t>
	H is the specific hashing algorithm (e.g., SHA-256). </t>

<t>
	K is the Authentication Key from the OSPFv3 Security Association.</t>

<t> 
	Ks is a Protocol-Specific Authentication Key obtained by appending Authentication Key (K) 
        with the two-octet OSPFv3 Cryptographic Protocol ID.</t>
 <t>
	Ko is the cryptographic key used with the hash algorithm.</t>

<t>
	B is the block size of H, measured in octets rather than bits. Note that B is the internal block size, not the hash size. </t> 
	
  <t> <list style="empty"> <t> For SHA-1 and SHA-256:   B == 64 </t>
     <t>For SHA-384 and SHA-512: B == 128 </t>
	</list></t>

     <t> L is the length of the hash, measured in octets rather than bits.</t>

<t>	XOR is the exclusive-or operation. </t>
<t>	Opad is the hexadecimal value 0x5c repeated B times. </t>
<t>	Ipad is the hexadecimal value 0x36 repeated B times. </t>
<t>	Apad is a value that is the same length as the hash output or message digest. The 
        first 16 octets contain the IPv6 source address followed by the hexadecimal 
        value 0x878FE1F3 repeated (L-16)/4 times.
        This implies that hash output is always
        a length of at least 16 octets.


	<list style="numbers"> 
	 <t> Preparation of the Key<vspace blankLines="1" />	
                The OSPFv3 Cryptographic Protocol ID is appended to the Authentication Key (K) 
                yielding a Protocol-Specific Authentication Key (Ks). 
		In this application, Ko is always L octets long and is computed
as follows: 
<list style="empty"><t>
		If the Protocol-Specific Authentication Key (Ks) is L octets long, then Ko is 
                equal to K.&nbsp;&nbsp;If the Protocol-Specific Authentication Key (Ks) is more than L octets long, then 
                Ko is set to H(Ks).  If the Protocol-Specific Authentication Key (Ks) is less than
                L octets long, then Ko is set to the Protocol-Specific Authentication Key (Ks) 
                with zeros appended to the end of the Protocol-Specific 
                Authentication Key (Ks) such that Ko is L octets long.</t>
</list></t>

	<t> First-Hash<vspace blankLines="1" />
		First, the OSPFv3 packet's Authentication Data field in the 
                Authentication Trailer is filled with the value Apad. 
                This is very similar to the appendage 
                described in <xref target="RFC2328"></xref>, Section D.4.3,
                Items (6)(a) and (6)(d)).<vspace blankLines="1" />
		Then, a First-Hash, also known as the inner hash, is computed 
	   as follows:<list style="empty"> <t> 
		First-Hash = H(Ko XOR Ipad || (OSPFv3 Packet))</t></list>


<list style="empty"> <t> 
		 Implementation Note: The First-Hash above includes the Authentication Trailer, as well 
       as the OSPFv3 packet, as per <xref target="RFC2328"></xref>, Section D.4.3, and, if present, the
       LLS data block <xref target="RFC5613"></xref>.</t> </list>
		The definition of Apad (above) ensures it is always the same
	   length as the hash output.  This is consistent with RFC 2328.
	   Note that the "(OSPFv3 Packet)" referenced in the First-Hash function 
	   above includes both the optional LLS data block and 
           the OSPFv3 Authentication Trailer. <vspace blankLines="1" />


	   The digest length for SHA-1 is 20 octets; for SHA-256, 32 
	   octets; for SHA-384, 48 octets; and for SHA-512, 64 octets. </t>

	<t> Second-Hash <vspace blankLines="1" />
		Then a Second-Hash, also known as the outer hash, is 
	   computed as follows:
		<list style="empty"> <t> Second-Hash = H(Ko XOR Opad || First-Hash) </t> </list>
	</t>

	<t> Result <vspace blankLines="1" />
		The resulting Second-Hash becomes the authentication data 
   that is sent in the Authentication Trailer of the OSPFv3 
   packet. The length of the authentication data is always 
   identical to the message digest size of the specific hash 
   function H that is being used. <vspace blankLines="1" />

   This also means that the use of hash functions with larger 
   output sizes will also increase the size of the OSPFv3 packet 
   as transmitted on the wire.

    <list style="empty"> <t> 
      Implementation Note: <xref target="RFC2328"></xref>, Appendix D
      specifies that the Authentication 
      Trailer is not counted in the OSPF packet's own Length 
      field but is included in the packet's IP Length field.
      Similar to this, the Authentication Trailer is not 
      included in the OSPFv3 header length but is included
      in the IPv6 header payload length. </t></list>
	</t>		
	</list></t>
 </section>

	<section anchor="Verification" title="Message Verification">
      <t> A router would determine that OSPFv3 is using an Authentication
		trailer by examining the AT-bit in the Options field in the OSPFv3 header
		for Hello and Database Description packets. The specification in the
		Hello and Database Description options indicates that other OSPFv3
		packets will include the Authentication Trailer.<vspace blankLines="1" />

                The Authentication Trailer (AT) is accessed using the OSPFv3 packet header
                length to access the data after the OSPFv3 packet and, if an LLS data block 
                <xref target="RFC5613"></xref> is present, using 
                the LLS data block length to access the data after the LLS data block. 
                The L-bit in the OSPFv3 options in Hello and 
                Database Description packets is examined to determine if an LLS data block is
                present. If an LLS data block is present (as specified by the L-bit), it is included
                along with the OSPFv3 Hello or Database Description packet in the cryptographic 
                authentication computation. 
                <vspace blankLines="1" /> 

                Due to the placement of the AT following the LLS data block 
                and the fact that the LLS data block is included in the Cryptographic Authentication 
                computation, OSPFv3 routers supporting this specification MUST minimally support
                examining the L-bit in the OSPFv3 options and using the length
in the LLS data block 
                to access the AT. It is RECOMMENDED that OSPFv3 routers supporting this specification
                fully support OSPFv3 Link-Local Signaling <xref target="RFC5613"></xref>. 
                <vspace blankLines="1" /> 
                
    
		If usage of the Authentication Trailer (AT), as specified herein,
                is configured for an OSPFv3 link, OSPFv3 Hello and Database Description
                packets with the AT-bit clear in the options will be dropped. All
                OSPFv3 packet types will be dropped if AT is configured for the link and the
                IPv6 header length is less than the amount necessary to include an 
                Authentication Trailer.<vspace blankLines="1" />

                If the cryptographic sequence number in the AT is less than or equal to
                the last sequence number successfully received from the neighbor, the OSPFv3
                packet MUST be dropped, and an error event SHOULD be logged.<vspace blankLines="1" /> 

		Authentication-algorithm-dependent processing needs to be 
		performed, using the algorithm specified by the appropriate 
		OSPFv3 SA for the received packet. <vspace blankLines="1" />

		Before an implementation performs any processing, it needs to save
		the values of the Authentication Data field from the Authentication 
		Trailer appended to the OSPFv3 packet.<vspace blankLines="1" />

		It should then set the Authentication Data field with Apad before the 
		authentication data is computed (as described in 
<xref target="Crypto-Aspects"> </xref>). The calculated data is compared with 
		the received authentication data in the Authentication Trailer.
                If the two do not match, the packet MUST be discarded and 
		an error event SHOULD be logged. </t>
	<t> After the OSPFv3 packet has been successfully authenticated, implementations
           MUST store the 64-bit cryptographic sequence number for future replay checks.
	</t>
	</section>
</section>
    <section anchor="Backward" title="Migration and Backward Compatibility">
    <t>All OSPFv3 routers participating on a link SHOULD be migrated to OSPFv3 Authentication at the 
       same time. As with OSPFv2 authentication, a mismatch in the SA ID, Authentication Type, or message digest
       will result in failure to form an adjacency. For multi-access links, communities of OSPFv3 routers could be migrated
       using different Interface Instance IDs. However, at least one router would need to form adjacencies between 
       both the OSPFv3 routers including and not including the Authentication Trailer. This would result in 
       sub-optimal routing as well as added complexity and is only recommended in cases where 
       authentication is desired on the link and migrating all the routers on the link
       at the same time isn't feasible. </t> 
      <t>In support of uninterrupted deployment, an OSPFv3 router implementing this specification
         MAY implement a transition mode where it includes the 
		Authentication Trailer in transmitted packets but does not verify this information in received packets. 
		This is provided as a transition aid for networks in the process of migrating 
		to the authentication mechanism described in this specification.</t>		
    </section>
    <section anchor="Security" title="Security Considerations">
      <t>The document proposes extensions to OSPFv3 that would make it 
			more secure than <xref target="RFC5340"></xref>. It does not provide confidentiality 
			as a routing protocol contains information that does not need to be kept 
			secret. It does, however, provide means to authenticate
                        the sender of the packets 
			that are of interest. It addresses all the security issues that have been 
           identified in <xref target="RFC6039"></xref>.</t>

<t>
			It should be noted that the authentication method described in this document is 
			not being used to authenticate the specific originator of a packet but is 
			rather being used to confirm that the packet has indeed been issued by a 
			router that has access to the Authentication Key.
</t>
 
<t>
                        Deployments SHOULD use sufficiently long and random values for the 
                        Authentication Key so that guessing and other cryptographic attacks on the key
                        are not feasible in their environments. Furthermore, it is RECOMMENDED that 
                        Authentication Keys incorporate at least 128 pseudo-random bits to minimize
                        the risk of such attacks. In support of these recommendations, management 
                        systems SHOULD support hexadecimal input of Authentication Keys.
</t>

<t>
			The mechanism described herein is not perfect and does not need to be perfect. 
			Instead, this mechanism represents a significant increase in the effort
			required for an adversary to successfully attack the OSPFv3 protocol while not causing 
			undue implementation, deployment, or operational complexity. 
</t>

<t>
			Refer to <xref target="RFC4552"></xref> for additional considerations on manual keying.
</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>IANA has allocated the AT-bit (0x000400) in the "OSPFv3 Options (24 bits)" registry as 
           described in <xref target="OSPFv3Options"> </xref>.</t>
      <t>IANA has created the "OSPFv3 Authentication Trailer Options" registry. This new 
         registry initially includes the "OSPFv3 Authentication Types" registry, which defines 
         valid values for the Authentication Type field in the OSPFv3 Authentication
Trailer. The registration procedure is Standards Action.</t>
       <figure title="OSPFv3 Authentication Types">
        <artwork>
      +-------------+-----------------------------------+
      | Value/Range | Designation                       |
      +-------------+-----------------------------------+
      | 0           | Reserved                          |
      |             |                                   |
      | 1           | HMAC Cryptographic Authentication |
      |             |                                   |
      | 2-65535     | Unassigned                        |
      +-------------+-----------------------------------+
     </artwork> 
    </figure>
      <t>Finally, IANA has created the 
         "Keying and Authentication for Routing Protocols (KARP) Parameters" category. 
         This new category initially includes the "Authentication Cryptographic Protocol ID" 
         registry, which provides unique protocol-specific values for cryptographic
         applications, such as but not limited to, prevention of cross-protocol replay 
         attacks. Values can be assigned for both native IPv4/IPv6 protocols and 
         UDP/TCP protocols. The registration procedure is Standards Action.</t>
       <figure title="Cryptographic Protocol ID">
        <artwork>
      +-------------+----------------------+
      | Value/Range | Designation          |
      +-------------+----------------------+
      | 0           | Reserved             | 
      |             |                      | 
      | 1           | OSPFv3               |   
      |             |                      | 
      | 2-65535     | Unassigned           |
      +-------------+----------------------+
     </artwork> 
    </figure>
    </section>   
  </middle>

  <back>
    <references title="Normative References">
          <?rfc include='reference.RFC.2119'?>
          <?rfc include='reference.RFC.2328'?>
	  <?rfc include='reference.RFC.5340'?>
          <?rfc include='reference.RFC.5709'?>
     </references>

    <references title="Informative References">

	  <?rfc include='reference.RFC.4552'?>    
	  <?rfc include='reference.RFC.5996'?>    
	  <?rfc include='reference.RFC.4302'?>    
	  <?rfc include='reference.RFC.4303'?>    
	  <?rfc include='reference.RFC.2104'?>  
    <?rfc include='reference.RFC.6234'?>    
    <?rfc include='reference.RFC.5613'?> 
    <?rfc include='reference.RFC.6039'?>


<reference anchor='MANUAL-KEY'>
<front>
<title>Security Extension for OSPFv2 when using Manual Key Management</title>

<author initials='M' surname='Bhatia' fullname='Manav Bhatia'>
    <organization />
</author>

<author initials='S' surname='Hartman' fullname='Sam Hartman'>
    <organization />
</author>

<author initials='D' surname='Zhang' fullname='Dacheng Zhang'>
    <organization />
</author>

<author initials='A' surname='Lindem' fullname='Acee Lindem'>
    <organization />
</author>

<date month='October' day='26' year='2011' />

</front>

<seriesInfo name='Work in' value='Progress' />
</reference>


<reference anchor="FIPS-180-3">
        <front>
          <title>Secure Hash Standard (SHS)</title>
          <author initials="" surname="US National Institute of Standards and Technology">
            <organization>Unknown</organization>
          </author>
       <date month="October" year="2008" />
        </front>
        <seriesInfo name="FIPS PUB" value="180-3" />
      </reference>


<reference anchor="FIPS-198-1">
        <front>
          <title> The  Keyed-Hash Message Authentication Code (HMAC)</title>
         <author initials="" surname="US National Institute of Standards and Technology">
            <organization>Unknown</organization>
          </author>
       <date month="July" year="2008" />
        </front>
        <seriesInfo name="FIPS PUB" value="198" />
      </reference>


    </references>

<section title="Acknowledgments">
  <t>First and foremost, thanks to the authors of RFC 5709 <xref target="RFC5709"></xref>, from which
     this work was derived.</t> 
  <t>Thanks to Sam Hartman for discussions on replay mitigation and 
     the use of a 64-bit strictly increasing sequence number. Also, thanks to Sam for comments during
     IETF last call with respect to the OSPFv3 SA and sharing of key between protocols.</t>
  <t>Thanks to Michael Barnes for numerous comments and strong input on the coverage of
     LLS by the Authentication Trailer (AT).</t>
  <t>Thanks to Rajesh Shetty for numerous comments, including the suggestion to include an Authentication
     Type field in the Authentication Trailer for extendibility.</t>
  <t>Thanks to Uma Chunduri for suggesting that we may want to protect the IPv6 source address even
     though OSPFv3 uses the Router ID for neighbor identification.</t>
  <t>Thanks to Srinivasan KL, Shraddha H, Alan Davey, Russ White, Stan Ratliff,
and Glen Kent for their support and review comments.
</t>
  <t>Thanks to Alia Atlas for comments made under the purview of the Routing Directorate review.</t>
  <t>Thanks to Stephen Farrell for comments during the IESG review. Stephen was also involved in the
     discussion of cross-protocol attacks.</t>
</section>
  </back>
</rfc>
