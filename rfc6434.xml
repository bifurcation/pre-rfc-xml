<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc rfcedstyle="yes"?>
<?rfc compact="yes"?>  
<?rfc subcompact="no"?>
<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes" ?>
<?rfc iprnotified="no" ?>


<rfc number="6434" category="info" ipr="pre5378Trust200902" obsoletes="4294"
submissionType="IETF" consensus="yes">

  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <front>
    <title>IPv6 Node Requirements</title>

    <author fullname="Ed Jankiewicz" initials="E" surname="Jankiewicz">
      <organization>SRI International, Inc.</organization>
      <address>
        <postal>
          <street>333 Ravenswood Ave.</street>
          <city>Menlo Park, CA</city>
          <code>94025</code>
          <country>USA</country>
        </postal>
        <phone>+1 443 502 5815</phone>
        <email>edward.jankiewicz@sri.com</email>
      </address>
    </author>

    <author fullname="John Loughney" initials="J" surname="Loughney">
      <organization>Nokia</organization>
      <address>
        <postal>
          <street>200 South Mathilda Ave.</street>
          <city> Sunnyvale, CA</city>
          <code>94086</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 283 8068</phone>
        <email>john.loughney@nokia.com</email>
      </address>
    </author>

    <author fullname="Thomas Narten" initials="T" surname="Narten">
      <organization>IBM Corporation</organization>
      <address>
        <postal>
          <street>3039 Cornwallis Ave.</street>
	  <street>PO Box 12195</street>
          <city>Research Triangle Park, NC</city>
          <code>27709-2195</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 254 7798</phone>
        <email>narten@us.ibm.com</email>
      </address>
    </author>
    <date month="December" year="2011" />

    <workgroup>Internet Engineering Task Force</workgroup>


<keyword>IPv6</keyword>
<keyword>Internet Protocol Version 6</keyword>
<keyword>Internet Protocol</keyword>
<keyword>IP</keyword>

  <abstract>
    <t>This document defines requirements for IPv6 nodes.  It is
    expected that IPv6 will be deployed in a wide range of devices and
    situations.  Specifying the requirements for IPv6 nodes allows
    IPv6 to function well and interoperate in a large number of
    situations and deployments.</t>
    <t>This document obsoletes RFC 4294.</t>
  </abstract>

</front>

<middle>

  <section title="Introduction">

    <t>This document defines common functionality required from both
    IPv6 hosts and routers.  Many IPv6 nodes will implement optional
    or additional features, but this document collects and summarizes
    requirements from other published Standards Track documents in one
    place.</t>

    <t>This document tries to avoid discussion of protocol details
    and references RFCs for this purpose.  This document is intended
    to be an applicability statement and to provide guidance as to which
    IPv6 specifications should be implemented in the general case and
    which specifications may be of interest to specific deployment
    scenarios. This document does not update any individual protocol
    document RFCs.</t>

    <t>Although this document points to different specifications, it
    should be noted that in many cases, the granularity of a
    particular requirement will be smaller than a single specification,
    as many specifications define multiple, independent pieces, some
    of which may not be mandatory. In addition, most specifications
    define both client and server behavior in the same specification,
    while many implementations will be focused on only one of those
    roles. </t>

    <t> This document defines a minimal level of requirement needed
    for a device to provide useful internet service and considers a
    broad range of device types and deployment scenarios. Because of
    the wide range of deployment scenarios, the minimal requirements
    specified in this document may not be sufficient for all
    deployment scenarios. It is perfectly reasonable (and indeed
    expected) for other profiles to define additional or stricter
    requirements appropriate for specific usage and deployment
    environments. For example, this document does not mandate that all
    clients support DHCP, but some deployment scenarios may deem
    it appropriate to make such a requirement.  For example,
    government agencies in the USA have defined profiles for
    specialized requirements for IPv6 in target environments (see
    <xref target='DODv6' /> and <xref target='USGv6' />).</t>

    <t>As it is not always possible for an implementer to know the
    exact usage of IPv6 in a node, an overriding requirement for IPv6
    nodes is that they should adhere to Jon Postel's Robustness
    Principle: "Be conservative in what you do, be liberal in what you accept
      from others" <xref target='RFC0793' />.</t>

   <section title="Scope of This Document">
     <t> IPv6 covers many specifications.  It is intended that IPv6
     will be deployed in many different situations and environments.
     Therefore, it is important to develop requirements for IPv6
     nodes to ensure interoperability. </t>

     <t>This document assumes that all IPv6 nodes meet the minimum
     requirements specified here.</t>
   </section>


  <section title="Description of IPv6 Nodes">

    <t>From the Internet Protocol, Version 6 (IPv6) Specification <xref target='RFC2460' />, we have 
    the following definitions:</t>

<figure><artwork><![CDATA[
IPv6 node   - a device that implements IPv6.

IPv6 router - a node that forwards IPv6 packets not explicitly 
              addressed to itself.

IPv6 host   - any node that is not a router.
]]></artwork></figure>

  </section>

  </section>

  <section title="Requirements Language">
    <t>The key words &quot;MUST&quot;, &quot;MUST NOT&quot;,
       &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;,
       &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,
       &quot;MAY&quot;, and &quot;OPTIONAL&quot; in this document are to be
       interpreted as described in <xref target="RFC2119">RFC 2119</xref>.</t>
  </section>


  <section title="Abbreviations Used in This Document">

<figure><artwork><![CDATA[
ATM   Asynchronous Transfer Mode

AH    Authentication Header

DAD   Duplicate Address Detection

ESP   Encapsulating Security Payload

ICMP  Internet Control Message Protocol

IKE   Internet Key Exchange

MIB   Management Information Base

MLD   Multicast Listener Discovery

MTU   Maximum Transmission Unit

NA    Neighbor Advertisement

NBMA  Non-Broadcast Multiple Access

ND    Neighbor Discovery

NS    Neighbor Solicitation

NUD   Neighbor Unreachability Detection

PPP   Point-to-Point Protocol
]]></artwork></figure>

  </section>

  <section title="Sub-IP Layer">

    <t>An IPv6 node must include support for one or more IPv6
    link-layer specifications.  Which link-layer specifications an
    implementation should include will depend upon what link-layers
    are supported by the hardware available on the system.  It is
    possible for a conformant IPv6 node to support IPv6 on some of its
    interfaces and not on others. </t>

    <t>As IPv6 is run over new layer 2 technologies, it is expected
    that new specifications will be issued.  In the following, we list some of
the layer 2 technologies for which an IPv6 specification has been developed. 
It is provided for informational purposes only and may
    not be complete.</t>

    <t>
	<list style="hanging">
	  
	  <t hangText="-"> Transmission of IPv6 Packets over Ethernet
	  Networks <xref target='RFC2464' /></t>
	  
	  <t hangText="-"> IPv6 over ATM Networks
	  <xref target='RFC2492' /></t>
	  
	  
	  <t hangText="-"> Transmission of IPv6 Packets over Frame
	  Relay Networks Specification <xref target='RFC2590' /></t>
	  
	  <t hangText="-"> Transmission of IPv6 Packets over IEEE 1394
	  Networks <xref target='RFC3146' /></t>
	  
	  <t hangText="-"> Transmission of IPv6, IPv4, and Address
	  Resolution Protocol (ARP) Packets over Fibre Channel
	  <xref target='RFC4338' /></t>
	  
	  <t hangText="-"> Transmission of IPv6 Packets over IEEE
	  802.15.4 Networks <xref target='RFC4944' /></t>
	  
	  <t hangText="-"> Transmission of IPv6 via the IPv6
	  Convergence Sublayer over IEEE 802.16 Networks
	  <xref target='RFC5121' /></t>

	  <t hangText="-"> IP version 6 over PPP
	  <xref target='RFC5072' /></t>
	</list>

    </t>
    
    <t> In addition to traditional physical link-layers, it is also
    possible to tunnel IPv6 over other protocols. Examples
    include:</t>

    <t>
	<list style="hanging">
	  
	  <t hangText="-"> Teredo: Tunneling IPv6 over UDP through
	  Network Address Translations (NATs) <xref target='RFC4380'
	  /></t>

	  <t hangText="-"> Section 3 of "Basic Transition Mechanisms for IPv6
Hosts and Routers"  <xref target='RFC4213' /></t>

    
	</list>

    </t>
    
  </section>

  <section title="IP Layer">

    <section title="Internet Protocol Version 6 - RFC 2460">

      <t>The Internet Protocol Version 6 is specified in <xref target='RFC2460' />.  This specification MUST be supported.</t>

      <t>Any unrecognized extension headers or options MUST be
      processed as described in RFC 2460.</t>

      <t>The node MUST follow the packet transmission rules in RFC 2460.</t>

      <t>Nodes MUST always be able to send, receive, and process
      fragment headers.  All conformant IPv6 implementations MUST be
      capable of sending and receiving IPv6 packets; the forwarding
      functionality MAY be supported. Overlapping fragments MUST be
      handled as described in <xref target='RFC5722' />. </t>

      <t>RFC 2460 specifies extension headers and the processing for
      these headers.</t>

      <t> An IPv6 node MUST be able to process these headers.  An
	exception is Routing Header type 0 (RH0), which was deprecated
	by <xref target='RFC5095' /> due to security concerns and
	which MUST be treated as an unrecognized routing type.</t>

<t>All nodes SHOULD support the setting and use of the IPv6 Flow
Label field as defined in the IPv6 Flow Label specification
<xref target='RFC6437' />.  Forwarding nodes such as routers and load distributors
MUST NOT depend only on Flow Label values being uniformly
distributed.  It is RECOMMENDED that source hosts support the flow
label by setting the Flow Label field for all packets of a given
flow to the same value chosen from an approximation to a discrete
uniform distribution.

</t>
 
    </section>
 
    <section title="Neighbor Discovery for IPv6 - RFC 4861" anchor="ND">

      <t>Neighbor Discovery is defined in <xref target='RFC4861' />; the
definition was updated by <xref target='RFC5942' />. Neighbor Discovery
      SHOULD be supported.  RFC 4861 states:</t>

      <t><list style='hanging'> <t>
   Unless specified otherwise (in a document that covers operating IP
   over a particular link type) this document applies to all link types.
   However, because ND uses link-layer multicast for some of its
   services, it is possible that on some link types (e.g., Non-Broadcast
   Multi-Access (NBMA) links), alternative protocols or mechanisms to
   implement those services will be specified (in the appropriate
   document covering the operation of IP over a particular link type).
   The services described in this document that are not directly
   dependent on multicast, such as Redirects, next-hop determination,
   Neighbor Unreachability Detection, etc., are expected to be provided
   as specified in this document.
The details of how one uses ND on
  NBMA links are addressed in <xref target='RFC2491' />.  
</t> </list></t>

      <t>Some detailed analysis of Neighbor Discovery follows:</t>

      <t>Router Discovery is how hosts locate routers that reside on
      an attached link.  Hosts MUST support Router Discovery
      functionality.</t>

      <t>Prefix Discovery is how hosts discover the set of address
      prefixes that define which destinations are on-link for an
      attached link. Hosts MUST support Prefix Discovery.</t>

      <t>Hosts MUST also implement Neighbor Unreachability Detection
      (NUD) for all paths between hosts and neighboring nodes.  NUD is
      not required for paths between routers.  However, all nodes MUST
      respond to unicast Neighbor Solicitation (NS) messages.</t>

      <t>Hosts MUST support the sending of Router Solicitations and
      the receiving of Router Advertisements.  The ability to
      understand individual Router Advertisement options is dependent
      on supporting the functionality making use of the particular
      option.</t>

      <t>All nodes MUST support the sending and receiving of Neighbor
      Solicitation (NS) and Neighbor Advertisement (NA) messages.  NS
      and NA messages are required for Duplicate Address Detection
      (DAD).</t>

      <t>Hosts SHOULD support the processing of Redirect
      functionality.  Routers MUST support the sending of Redirects,
      though not necessarily for every individual packet (e.g., due to
      rate limiting). Redirects are only useful on networks supporting
      hosts. In core networks dominated by routers, Redirects are
      typically disabled.  The sending of Redirects SHOULD be disabled
      by default on backbone routers. They MAY be enabled by default
      on routers intended to support hosts on edge networks. </t>

      <t> "IPv6 Host-to-Router Load Sharing"    <xref target='RFC4311'/> includes additional recommendations on how to select from a
      set of available routers. <xref target='RFC4311'/> SHOULD be supported. </t>


    </section>

    <section title="Default Router Preferences and More-Specific
    Routes - RFC 4191">

    <t>"Default Router Preferences and More-Specific Routes" <xref target='RFC4191' /> provides support for nodes attached to
    multiple (different) networks, each providing routers that
    advertise themselves as default routers via Router
    Advertisements. In some scenarios, one router may provide
    connectivity to destinations the other router does not, and
    choosing the "wrong" default router can result in reachability
    failures. In such cases, RFC 4191 can help.</t>

    <t> Small Office/Home Office (SOHO) deployments supported by
    routers adhering to <xref target='RFC6204' /> use
    RFC 4191  to advertise routes to certain local
    destinations. Consequently, nodes that will be deployed in SOHO
    environments SHOULD implement RFC 4191.</t>

    </section>

    <section title="SEcure Neighbor Discovery (SEND) - RFC 3971">

      <t>
	SEND <xref target='RFC3971' /> and Cryptographically Generated
	Address (CGA) <xref target='RFC3972' /> provide a way to
	secure the message exchanges of Neighbor Discovery. SEND is a
	new technology in that it has no IPv4 counterpart, but it has
	significant potential to address certain classes of spoofing
	attacks. While there have been some implementations of SEND,
	there has been only limited deployment experience to date in
	using the technology.  In addition, the IETF working group Cga &amp;
	Send maIntenance (csi) is currently working on additional
	extensions intended to make SEND more attractive for
	deployment.</t>

      <t>At this time, SEND is considered optional, and IPv6 nodes MAY
      provide SEND functionality.</t>

    </section>
 
    <section title="IPv6 Router Advertisement Flags Option - RFC
      5175">

      <t> Router Advertisements include an 8-bit field of single-bit
      Router Advertisement flags.  The Router Advertisement Flags
      Option extends the number of available flag bits by 48 bits. At
      the time of this writing, 6 of the original 8 single-bit flags have
      been assigned, while 2 remain available for future
      assignment. No flags have been defined that make use of the new
      option, and thus, strictly speaking, there is no requirement to
      implement the option today. However, implementations that are
      able to pass unrecognized options to a higher-level entity that
      may be able to understand them (e.g., a user-level process using
      a "raw socket" facility) MAY take steps to handle the option in
      anticipation of a future usage.</t>
    
    </section>

    <section title="Path MTU Discovery and Packet Size">
      <section title="Path MTU Discovery - RFC 1981">

        <t> "Path MTU Discovery for IP version 6" <xref target='RFC1981' /> SHOULD be
	  supported.  From <xref target='RFC2460' />:</t>

        <t><list style='hanging'>
            <t> It is strongly recommended that IPv6 nodes implement
	    Path MTU Discovery <xref target='RFC1981' />, in order to
            discover and 
	    take advantage of path MTUs greater than 1280 octets.
	    However, a minimal IPv6 implementation (e.g., in a boot
	    ROM) may simply restrict itself to sending packets no
	    larger than 1280 octets, and omit implementation of Path
	    MTU Discovery.</t>

        </list></t>
	<t> The rules in <xref target='RFC2460' /> and
	  <xref target='RFC5722' /> MUST be followed for packet
	  fragmentation and reassembly.  </t>

	<t> One operational issue with Path MTU Discovery occurs when
	firewalls block ICMP Packet Too Big messages. Path MTU
	Discovery relies on such messages to determine what size
	messages can be successfully sent. "Packetization Layer Path
	MTU Discovery" <xref target='RFC4821' /> avoids having a
	dependency on Packet Too Big messages.
    </t>
	
      </section>

    </section>

    <section title="IPv6 Jumbograms - RFC 2675">


     <t> IPv6 Jumbograms <xref target='RFC2675' /> are an optional
      extension that allow the sending of IP datagrams larger than
      65.535 bytes.  IPv6 Jumbograms make use of IPv6 hop-by-hop
      options and are only suitable on paths in which every hop and
      link are capable of supporting Jumbograms (e.g., within a campus
      or datacenter). To date, few implementations exist, and there is
      essentially no reported experience from usage. Consequently,
      IPv6 Jumbograms <xref target='RFC2675' /> remain optional at
      this time.</t>

    </section>

    <section title="ICMP for the Internet Protocol Version 6 (IPv6) -
      RFC 4443">

      <t>ICMPv6 <xref target='RFC4443' /> MUST be supported. "Extended
      ICMP to Support Multi-Part Messages" <xref target='RFC4884' />
      MAY be supported.</t>

      </section>

    <section title="Addressing">

    <section title="IP Version 6 Addressing Architecture - RFC 4291">
        <t>The IPv6 Addressing Architecture <xref target='RFC4291' />
        MUST be supported.</t> </section>

      <section title="IPv6 Stateless Address Autoconfiguration - RFC 4862">
 
        <t>Hosts MUST support IPv6 Stateless Address Autoconfiguration
        as defined in <xref target='RFC4862' />.  Configuration of
        static address(es) may be supported as well.</t>

        <t>Nodes that are routers MUST be able to generate link-local
        addresses as described in <xref target='RFC4862'/>.</t>

        <t>From RFC 4862:</t>

        <t><list style='hanging'> <t>

	The autoconfiguration process specified in this document
	applies only to hosts and not routers.  Since host
	autoconfiguration uses information advertised by routers,
	routers will need to be configured by some other means.
	However, it is expected that routers will generate link-local
	addresses using the mechanism described in this document.  In
	addition, routers are expected to successfully pass the
	Duplicate Address Detection procedure described in this
	document on all addresses prior to assigning them to an
	interface.</t> </list></t>

      <t>All nodes MUST implement Duplicate Address Detection. Quoting
      from Section 5.4 of RFC 4862:</t>
      
      <t><list style='hanging'> <t> Duplicate Address Detection MUST
         be performed on all unicast addresses prior to assigning them
         to an interface, regardless of whether they are obtained
         through stateless autoconfiguration, DHCPv6, or manual
         configuration, with the following [exceptions noted therein].
         </t> </list></t>

      <t>"Optimistic Duplicate Address Detection (DAD) for
      IPv6" <xref target='RFC4429' /> specifies a mechanism to reduce
      delays associated with generating addresses via Stateless
      Address Autoconfiguration <xref target='RFC4862' />.  RFC 4429
      was developed in conjunction with Mobile IPv6 in order to reduce
      the time needed to acquire and configure addresses as devices
      quickly move from one network to another, and it is desirable to
      minimize transition delays.  For general purpose devices, RFC 4429 remains optional at this time.
      </t>
      </section>      <section title="Privacy Extensions for Address Configuration in IPv6 - RFC 4941">

	<t>
	     Privacy Extensions for Stateless Address
	     Autoconfiguration <xref target='RFC4941' /> addresses a
	     specific problem involving a client device whose user is
	     concerned about its activity or location being
	     tracked. The problem arises both for a static client and
	     for one that regularly changes its point of attachment to
	     the Internet. When using Stateless Address
	     Autoconfiguration <xref target='RFC4862' />, the Interface Identifier
	     portion of formed addresses stays constant and is
	     globally unique. Thus, although a node's global IPv6
	     address will change if it changes its point of
	     attachment, the Interface Identifier portion of those
	     addresses remains the same, making it possible for servers
	     to track the location of an individual device as it moves
	     around or its pattern of activity if it remains in one
	     place. This may raise privacy concerns as described in 
	     <xref target='RFC4862' />.
	</t>
	
	<t>
	    In such situations, RFC 4941 SHOULD be implemented. In
	    other cases, such as with dedicated servers in a data
	    center, RFC 4941 provides limited or no benefit.
	</t>
	<t>Implementers of RFC 4941 should be aware that certain
	addresses are reserved and should not be chosen for use as
	temporary addresses. Consult "Reserved IPv6 Interface
	Identifiers" <xref target='RFC5453' /> for more details.
	</t>
	
      </section>

      <section title="Default Address Selection for IPv6 - RFC 3484">

        <t>The rules specified in the Default Address Selection for
        IPv6 <xref target='RFC3484' /> document MUST be implemented.
        IPv6 nodes will need to deal with multiple addresses
        configured simultaneously.</t> </section>

      <section title="Stateful Address Autoconfiguration (DHCPv6) - RFC 3315" anchor="stateful1">

         <t> DHCPv6 <xref target='RFC3315' /> can be used to obtain and
 	configure addresses. In general, a network may provide for the
 	configuration of addresses through Router Advertisements,
 	DHCPv6, or both.  There will be a wide range of IPv6 deployment
 	models and differences in address assignment requirements,
 	some of which may require DHCPv6 for address assignment.
 	Consequently, all hosts SHOULD implement address configuration
 	via DHCPv6.</t>

        <t> In the absence of a router, IPv6 nodes using DHCP for
	address assignment MAY initiate DHCP to obtain IPv6 addresses
	and other configuration information, as described in Section
	5.5.2 of <xref target='RFC4862' />.</t>

        </section> </section>

    <section title="Multicast Listener Discovery (MLD) for IPv6" anchor="mld">

      <t> Nodes that need to join multicast groups MUST support MLDv1
      <xref target='RFC2710' />. MLDv1 is needed by any node that is
      expected to receive and process multicast traffic. Note that
      Neighbor Discovery (as used on most link types -- see <xref
target="ND" />) depends on multicast and requires that nodes join Solicited
      Node multicast addresses.</t>

      <t> MLDv2 <xref target='RFC3810' /> extends the functionality of
      MLDv1 by supporting Source-Specific Multicast.  The original
      MLDv2 protocol <xref target='RFC3810' /> supporting
      Source-Specific Multicast <xref target='RFC4607' /> supports two
      types of "filter modes". Using an INCLUDE filter, a node
      indicates a multicast group along with a list of senders for
      the group from which it wishes to receive traffic. Using an EXCLUDE
      filter, a node indicates a multicast group along with a list of
      senders from which it wishes to exclude receiving traffic. In
      practice, operations to block source(s) using EXCLUDE mode are
      rarely used but add considerable implementation complexity to
      MLDv2.  Lightweight MLDv2 <xref target='RFC5790' /> is a
      simplified subset of the original MLDv2 specification that omits
      EXCLUDE filter mode to specify undesired source(s). </t>
      
      <t> Nodes SHOULD implement either MLDv2 <xref target='RFC3810'
      /> or Lightweight MLDv2 <xref target='RFC5790' />. Specifically,
      nodes supporting applications using Source-Specific Multicast
      that expect to take advantage of MLDv2's EXCLUDE functionality
      <xref target='RFC3810' /> MUST support MLDv2 as defined in <xref
      target='RFC3810' />, <xref target='RFC4604' />, and <xref
      target='RFC4607' />.  Nodes supporting applications that expect
      to only take advantage of MLDv2's INCLUDE functionality as well
      as Any-Source Multicast will find it sufficient to support MLDv2
      as defined in <xref target='RFC5790' />. </t>

      <t> If a node only supports applications that use Any-Source
      Multicast (i.e, they do not use Source-Specific Multicast),
      implementing MLDv1 <xref target='RFC2710' /> is sufficient.  In
      all cases, however, nodes are strongly encouraged to implement
      MLDv2 or Lightweight MLDv2 rather than MLDv1, as the presence of
      a single MLDv1 participant on a link requires that all other
      nodes on the link operate in version 1 compatibility mode.</t>

      <t>When MLDv1 is used, the rules in the Source Address Selection
      for the Multicast Listener Discovery (MLD) Protocol <xref
      target='RFC3590' /> MUST be followed.</t>


    </section>
  </section>

  <section title="DHCP versus Router Advertisement Options for Host Configuration">

      <t> In IPv6, there are two main protocol mechanisms for
      propagating configuration information to hosts: Router
      Advertisements (RAs) and DHCP. Historically, RA options have been
      restricted to those deemed essential for basic network
      functioning and for which all nodes are configured with exactly
      the same information.  Examples include the Prefix Information
      Options, the MTU option, etc. On the other hand, DHCP has
      generally been preferred for configuration of more general
      parameters and for parameters that may be client-specific. That
      said, identifying the exact line on whether a particular option
      should be configured via DHCP versus an RA option has not always
      been easy. Generally speaking, however, there has been a desire
      to define only one mechanism for configuring a given option,
      rather than defining multiple (different) ways of configuring
      the same information.</t>

      <t>One issue with having multiple ways of configuring the same
      information is that interoperability suffers if a host chooses one
      mechanism but the
      network operator chooses a different mechanism. For "closed"
      environments, where the network operator
      has significant influence over what devices connect to the
      network and thus what configuration mechanisms they support, the
      operator may be able to ensure that a particular mechanism is
      supported by all connected hosts. In more open environments,
      however, where arbitrary devices may connect (e.g., a WIFI
      hotspot), problems can arise. To maximize interoperability in
      such environments, hosts would need to implement multiple
      configuration mechanisms to ensure interoperability.</t>

      <t>Originally, in IPv6, configuring information about DNS servers
      was performed exclusively via DHCP. In 2007, an RA option was
      defined but was published as Experimental <xref
      target='RFC5006' />. In 2010, "IPv6 Router Advertisement Options
      for DNS Configuration" <xref target='RFC6106' /> was published
      as a Standards Track document. Consequently, DNS configuration
      information can now be learned either through DHCP or through
      RAs. Hosts will need to decide which mechanism (or whether both)
      should be implemented. Specific guidance regarding DNS server
      discovery is discussed in <xref target="DNSandDHCP" />.</t>

   </section>


  <section title="DNS and DHCP" anchor="DNSandDHCP">

    <section title="DNS">

      <t>DNS is described in <xref target='RFC1034' />, <xref
      target='RFC1035' />, <xref target='RFC3363' />, and <xref
      target='RFC3596' />.  Not all nodes will need to resolve names;
      those that will never need to resolve DNS names do not need to
      implement resolver functionality.  However, the ability to
      resolve names is a basic infrastructure capability on which
      applications rely, and most nodes will need to provide
      support.  All nodes SHOULD implement stub-resolver <xref target='RFC1034'
/> functionality, as in <xref target='RFC1034'/>, Section
      5.3.1, with support for:</t>

      <t><list style='hanging'>
        <t hangText="-">AAAA type Resource Records <xref target='RFC3596' />;</t>
        <t hangText="-">reverse addressing in ip6.arpa using PTR records <xref target='RFC3596' />;</t>
        <t hangText="-">Extension Mechanisms for DNS (EDNS0) <xref target='RFC2671' /> to allow for DNS packet sizes larger than 512 octets.</t>
      </list></t>

      <t>Those nodes are RECOMMENDED to support DNS security extensions <xref target='RFC4033' /> <xref target='RFC4034' /> <xref target='RFC4035' />.</t>

      <t>Those nodes are NOT RECOMMENDED to support the experimental A6 Resource Records 
      <xref target='RFC3363' />.</t>
    </section>

    <section title="Dynamic Host Configuration Protocol for IPv6 (DHCPv6) - RFC 3315">


      <section title="Other Configuration Information">

      <t>IPv6 nodes use DHCP <xref target='RFC3315' /> to obtain
         address configuration information (see <xref target="stateful1" />) and to
         obtain additional (non-address) configuration.  If a host
         implementation supports applications or other protocols that
         require configuration that is only available via DHCP, hosts
         SHOULD implement DHCP. For specialized devices on which no
         such configuration need is present, DHCP may not be
         necessary.</t>

        <t>An IPv6 node can use the subset of DHCP (described in
        <xref target='RFC3736' />) to obtain other configuration
        information.</t>

      </section>

      <section title="Use of Router Advertisements in Managed Environments">

        <t>Nodes using the Dynamic Host Configuration Protocol for
        IPv6 (DHCPv6) are expected to determine their default router
        information and on-link prefix information from received
        Router Advertisements.</t>

      </section>
    </section>
    <section title="IPv6 Router Advertisement Options for DNS
        Configuration - RFC 6106">

        <t>Router Advertisements have historically limited options to
        those that are critical to basic IPv6 functioning. Originally,
        DNS configuration was not included as an RA option, and DHCP
        was the recommended way to obtain DNS configuration
        information. Over time, the thinking surrounding such an
        option has evolved. It is now generally recognized that few
        nodes can function adequately without having access to a
        working DNS resolver.  <xref target='RFC5006'/> was published as an
        Experimental document in 2007, and recently, a revised version
        was placed on the Standards Track  <xref target='RFC6106' />.</t>

	<t>Implementations SHOULD implement the DNS RA option
	<xref target='RFC6106' />. </t>

      </section>
  </section>

  <section title="IPv4 Support and Transition">

    <t>IPv6 nodes MAY support IPv4.</t>

    <section title="Transition Mechanisms">

      <section title="Basic Transition Mechanisms for IPv6 Hosts and Routers - RFC 4213">

        <t>If an IPv6 node implements dual stack and tunneling, then
        <xref target='RFC4213' /> MUST be supported.</t>

      </section>
    </section>
  </section>

  <section title="Application Support">

    <section title="Textual Representation of IPv6 Addresses - RFC
    5952">
      
      <t>Software that allows users and operators to input IPv6
      addresses in text form SHOULD support "A Recommendation for
      IPv6 Address Text Representation" <xref target='RFC5952' />.</t>
      
    </section>

    <section title="Application Programming Interfaces (APIs)">
      <t>There are a number of IPv6-related APIs. This document does
      not mandate the use of any, because the choice of API does not
      directly relate to on-the-wire behavior of
      protocols. Implementers, however, would be advised to consider
      providing a common API or reviewing existing APIs for the type
      of functionality they provide to applications.  </t>

      <t> "Basic Socket Interface Extensions for IPv6"
      <xref target='RFC3493' /> provides IPv6 functionality used by
      typical applications. Implementers should note that RFC3493 has
      been picked up and further standardized by the Portable Operating System
Interface (POSIX) <xref target='POSIX' />.</t>

      <t>"Advanced Sockets Application Program Interface (API) for
              IPv6" <xref target='RFC3542' /> provides access to
              advanced IPv6 features needed by diagnostic and other
              more specialized applications.</t>

      <t> "IPv6 Socket API for Source Address Selection"
      <xref target='RFC5014' /> provides facilities that allow an
      application to override the default Source Address Selection
      rules of  <xref target='RFC3484' />.</t>


      <t> "Socket Interface Extensions for Multicast Source Filters"
      <xref target='RFC3678' /> provides support for expressing source
      filters on multicast group memberships.</t>

      <t> "Extension to Sockets API for Mobile IPv6"
      <xref target='RFC4584' /> provides application support for
      accessing and enabling Mobile IPv6 <xref target='RFC6275' /> features.</t>
      
      </section>

  </section>

  

  <section title="Mobility" anchor="mobility">

    <t>Mobile IPv6 <xref target='RFC6275'/> and associated
    specifications <xref target='RFC3776' /> <xref target='RFC4877' />
    allow a node to change its point of attachment within the
    Internet, while maintaining (and using) a permanent address. All
    communication using the permanent address continues to proceed as
    expected even as the node moves around. The definition of Mobile
    IP includes requirements for the following types of nodes:</t>

    <t><list style='hanging'>
      <t>  -  mobile nodes</t>
      <t>  -  correspondent nodes with support for route optimization</t>
      <t>  -  home agents</t>
      <t>  -  all IPv6 routers</t>
    </list></t>

    <t> At the present time, Mobile IP has seen only limited
    implementation and no significant deployment, partly because it
    originally assumed an IPv6-only environment rather than a mixed
    IPv4/IPv6 Internet. Recently, additional work has been done to
    support mobility in mixed-mode IPv4 and IPv6
    networks <xref target='RFC5555' />. </t>

    <t> More usage and deployment experience is needed with mobility
    before any specific approach can be recommended for broad
    implementation in all hosts and routers. Consequently, <xref
    target='RFC6275' />, <xref target='RFC5555' />, and associated
    standards such as <xref target='RFC4877' /> are considered a MAY
    at this time.</t>

  </section>

  <section title="Security" anchor="sec">

    <t> This section describes the specification for security for IPv6
   nodes.  </t>

   <t> Achieving security in practice is a complex undertaking.
   Operational procedures, protocols, key distribution mechanisms,
   certificate management approaches, etc., are all components that
   impact the level of security actually achieved in practice. More
   importantly, deficiencies or a poor fit in any one individual
   component can significantly reduce the overall effectiveness of a
   particular security approach.  </t>

    <t> IPsec provides channel security at the Internet layer, making
   it possible to provide secure communication for all (or a subset
   of) communication flows at the IP layer between pairs of internet
   nodes. IPsec provides sufficient flexibility and granularity that
   individual TCP connections can (selectively) be protected, etc.
   </t>
   
    <t> Although IPsec can be used with manual keying in some cases,
       such usage has limited applicability and is not recommended.
       </t>

   
    <t> A range of security technologies and approaches proliferate
   today (e.g., IPsec, Transport Layer Security (TLS), Secure SHell (SSH), etc.) No one approach has emerged as
   an ideal technology for all needs and environments. Moreover, IPsec
   is not viewed as the ideal security technology in all cases and is
   unlikely to displace the others.  </t>

   <t> Previously, IPv6 mandated implementation of IPsec and
      recommended the key management approach of IKE. This document
      updates that recommendation by making support of the IPsec
      Architecture <xref target='RFC4301' /> a SHOULD for all IPv6 nodes. 
Note that
      the IPsec Architecture requires (e.g.,  Section 4.5 of RFC 4301) the
      implementation of both manual and automatic key management.
      Currently, the default automated key management protocol to
      implement is IKEv2  <xref target='RFC5996' />.  </t>

      <t> This document recognizes that there exists a range of device
   types and environments where approaches to security other than
   IPsec can be justified. For example, special-purpose devices may
   support only a very limited number or type of applications, and an
   application-specific security approach may be sufficient for
   limited management or configuration capabilities. Alternatively,
   some devices may run on extremely constrained hardware (e.g.,
   sensors) where the full IPsec Architecture is not justified.
   </t>

    <section title="Requirements">
    
      <t> "Security Architecture for the Internet Protocol"
   <xref target='RFC4301' /> SHOULD be supported by all IPv6
   nodes. Note that the IPsec Architecture requires (e.g., Section 4.5 of
   <xref target='RFC4301' />) the implementation of both manual and automatic key
   management.  Currently, the default automated key management
   protocol to implement is IKEv2. As required in <xref target='RFC4301' />, IPv6
   nodes implementing the IPsec Architecture MUST implement ESP
   <xref target='RFC4303' /> and MAY implement AH
   <xref target='RFC4302' />.
    </t> </section>
    
    <section title="Transforms and Algorithms">
    
    <t> The current set of mandatory-to-implement algorithms for the
	IPsec Architecture are defined in "Cryptographic
	Algorithm Implementation Requirements For ESP and AH"
	<xref target='RFC4835' />.  IPv6 nodes implementing the IPsec
	Architecture MUST conform to the requirements in <xref target='RFC4835'/>.
	Preferred cryptographic algorithms often change more
	frequently than security protocols. Therefore, implementations
	MUST allow for migration to new algorithms, as RFC 4835 is
	replaced or updated in the future.</t>

     <t> The current set of mandatory-to-implement algorithms for
	IKEv2 are defined in "Cryptographic Algorithms for Use in the
	Internet Key Exchange Version 2 (IKEv2)"
	<xref target='RFC4307' />.  IPv6 nodes implementing IKEv2 MUST
	conform to the requirements in <xref target='RFC4307'/> and/or any future
	updates or replacements to <xref target='RFC4307'/>.
      
    </t>

    </section>      
  </section>

  <section title="Router-Specific Functionality">

    <t>This section defines general host considerations for IPv6 nodes
    that act as routers.  Currently, this section does not discuss
    routing-specific requirements.</t>

      <section title="IPv6 Router Alert Option - RFC 2711">

        <t>The IPv6 Router Alert Option <xref target='RFC2711' /> is
        an optional IPv6 Hop-by-Hop Header that is used in conjunction
        with some protocols (e.g., RSVP <xref target='RFC2205' /> or
        Multicast Listener Discovery (MLD) <xref target='RFC2710' />).  The Router Alert option will
        need to be implemented whenever protocols that mandate its
        usage (e.g., MLD) are implemented.  See <xref target="mld" />.</t>

      </section>

      <section title="Neighbor Discovery for IPv6 - RFC 4861">

        <t>Sending Router Advertisements and processing Router
        Solicitations MUST be supported.</t>

      <t> Section 7 of <xref target='RFC6275' /> includes some mobility-specific
	  extensions to Neighbor Discovery. Routers SHOULD implement
	  Sections 7.3 and 7.5, even if they do not implement Home
	  Agent functionality.</t>
	

      </section>

      <section title="Stateful Address Autoconfiguration (DHCPv6) - RFC 3315">

        <t> A single DHCP server (<xref target='RFC3315' /> or <xref
	target='RFC4862' />) can provide configuration information to
	devices directly attached to a shared link, as well as to
	devices located elsewhere within a site. Communication between
	a client and a DHCP server located on different links requires
	the use of DHCP relay agents on routers.</t>

	<t> In simple deployments, consisting of a single router and
	either a single LAN or multiple LANs attached to the single
	router, together with a WAN connection, a DHCP server
	embedded within the router is one common deployment scenario
	(e.g., <xref target='RFC6204' />). However, there is no need
	for relay agents in such scenarios.  </t>

	<t> In more complex deployment scenarios, such as within
	enterprise or service provider networks, the use of DHCP
	requires some level of configuration, in order to configure
	relay agents, DHCP servers, etc. In such environments, the
	DHCP server might even be run on a traditional server, rather
	than as part of a router. </t>

	<t> Because of the wide range of deployment scenarios, support
	for DHCP server functionality on routers is optional. However,
	routers targeted for deployment within more complex scenarios
	(as described above) SHOULD support relay agent functionality.
	Note that "Basic Requirements for IPv6 Customer Edge Routers"
	<xref target='RFC6204' /> requires implementation of a DHCPv6
	server function in IPv6 Customer Edge (CE) routers. </t>

      </section>
    </section>

  <section title="Network Management">

    <t>Network management MAY be supported by IPv6 nodes.  However,
    for IPv6 nodes that are embedded devices, network management may
    be the only possible way of controlling these nodes.</t>

    <section title="Management Information Base (MIB) Modules">

      <t>The following two MIB modules SHOULD be supported by nodes that
support a Simple Network Management Protocol (SNMP) agent.</t>

      <section title="IP Forwarding Table MIB">

        <t>The IP Forwarding Table MIB <xref target='RFC4292' /> SHOULD be supported by nodes that support an 
        SNMP agent.</t>

      </section>

      <section title="Management Information Base for the Internet Protocol (IP)">

        <t>The IP MIB <xref target='RFC4293' /> SHOULD be supported by nodes that support an SNMP agent.</t>

      </section>

    </section>
  </section>


  <section title="Security Considerations">

    <t>This document does not directly affect the security of the
    Internet, beyond the security considerations associated with the
    individual protocols. </t>

    <t>Security is also discussed in <xref target="sec" /> above.</t>

  </section>



  <section title="Authors and Acknowledgments">

    <section title="Authors and Acknowledgments (Current Document)">
      <t>For this version of the IPv6 Node Requirements document, the
  authors would like to thank Hitoshi Asaeda, Brian Carpenter, Tim
  Chown, Ralph Droms, Sheila Frankel, Sam Hartman, Bob Hinden, Paul
  Hoffman, Pekka Savola, Yaron Sheffer, and Dave Thaler for their
  comments.  </t>
  </section>

    <section title="Authors and Acknowledgments from RFC
  4279">

    <t>The original version of this document (RFC 4279) was written by
    the IPv6 Node Requirements design team:

<figure><artwork><![CDATA[
   Jari Arkko
   jari.arkko@ericsson.com
   
   Marc Blanchet
   marc.blanchet@viagenie.qc.ca
   
   Samita Chakrabarti
   samita.chakrabarti@eng.sun.com
   
   Alain Durand
   alain.durand@sun.com
   
   Gerard Gastaud
   gerard.gastaud@alcatel.fr
   
   Jun-ichiro Itojun Hagino
   itojun@iijlab.net
   
   Atsushi Inoue
   inoue@isl.rdc.toshiba.co.jp
   
   Masahiro Ishiyama
   masahiro@isl.rdc.toshiba.co.jp
   
   John Loughney
   john.loughney@nokia.com
   
   Rajiv Raghunarayan
   raraghun@cisco.com

   Shoichi Sakane
   shouichi.sakane@jp.yokogawa.com
   
   Dave Thaler
   dthaler@windows.microsoft.com
   
   Juha Wiljakka
   juha.wiljakka@Nokia.com
]]></artwork></figure>
</t>

    <t>The authors would like to thank Ran Atkinson, Jim Bound, Brian Carpenter, Ralph Droms, 
    Christian Huitema, Adam Machalek, Thomas Narten, Juha Ollila, and Pekka Savola for their comments. 
    Thanks to Mark Andrews for comments and corrections on DNS text. Thanks to Alfred Hoenes for tracking
    the updates to various RFCs.</t>

  </section>
</section>


  <section title="Appendix: Changes from RFC 4294">

      <t>
    There have been many editorial clarifications as well as
    significant additions and updates. While this section highlights
    some of the changes, readers should not rely on this section for a
    comprehensive list of all changes. </t>

    <t>
    <list style='numbers'>

    <t>Updated the Introduction to indicate that this document is an
    applicability statement and is aimed at
    general nodes. </t>
    <t>Significantly updated the section on Mobility protocols,
    adding references and downgrading previous SHOULDs to MAYs.</t>
    <t>Changed Sub-IP Layer section to just list relevant RFCs, and
    added some more RFCs. </t>
    <t>Added section on SEND (it is a MAY).</t>
    <t>Revised section on Privacy Extensions <xref target='RFC4941' /> to add more
    nuance to recommendation.</t>
    <t>Completely revised IPsec/IKEv2 section, downgrading overall
    recommendation to a SHOULD.</t>
    <t>Upgraded recommendation of DHCPv6 to SHOULD.</t>
    <t>Added background section on DHCP versus RA options, added
    SHOULD recommendation for DNS configuration via RAs <xref target='RFC6106'
/>, and cleaned up DHCP recommendations. </t>

    <t> Added recommendation that routers implement Sections 7.3 and
	7.5 of <xref target='RFC6275' />.</t>
    <t>Added pointer to subnet clarification document <xref target='RFC5942' />.</t>
    <t>Added text that "IPv6 Host-to-Router Load Sharing"
	<xref target='RFC4311' /> SHOULD be implemented.</t>
    <t>Added reference to <xref target='RFC5722' /> (Overlapping Fragments),
and made it a MUST to implement.</t>
       <t>Made "A Recommendation for IPv6 Address Text Representation"
       <xref target='RFC5952' /> a SHOULD. </t>

    
    <t>Removed mention of "DNAME" from the discussion about
    <xref target='RFC3363' />.</t>
    <t>Numerous updates to reflect newer versions of IPv6
    documents, including <xref target='RFC4443' />, <xref target='RFC4291' />,
<xref target='RFC3596' />, and <xref target='RFC4213' />.</t>

    <t>Removed discussion of "Managed" and "Other" flags in
    RAs. There is no consensus at present on how to process these
    flags, and discussion of their semantics was removed in the most
    recent update of Stateless Address Autoconfiguration <xref
target='RFC4862' />. </t>
    <t>Added many more references to optional IPv6 documents. </t>
    <t> Made "A Recommendation for IPv6 Address Text Representation"
       <xref target='RFC5952' /> a SHOULD. </t>
    <t>Added reference to <xref target='RFC5722' /> (Overlapping Fragments),
and made it a
	MUST to implement.</t>
    <t> Updated MLD section to include reference to Lightweight MLD
	<xref target='RFC5790' />. </t>
    <t> Added SHOULD recommendation for "Default Router Preferences
	    and More-Specific Routes" <xref target='RFC4191' />.</t>

<t>Made "IPv6 Flow Label Specification" <xref target='RFC6437' /> a SHOULD.</t>

     </list>
    </t>

  </section>

</middle>

<back>
 <references title="Normative References">
  <?rfc include="reference.RFC.1034" ?>
  <?rfc include="reference.RFC.1035" ?>
  <?rfc include="reference.RFC.1981" ?>
  <?rfc include="reference.RFC.2119" ?>
  <?rfc include="reference.RFC.2460" ?>
  <?rfc include="reference.RFC.2671" ?>
  <?rfc include="reference.RFC.2710" ?>
  <?rfc include="reference.RFC.2711" ?>
  <?rfc include="reference.RFC.3315" ?>
  <?rfc include="reference.RFC.3484" ?>
  <?rfc include="reference.RFC.3590" ?>
  <?rfc include="reference.RFC.3596" ?>
  <?rfc include="reference.RFC.3736" ?>
  <?rfc include="reference.RFC.3810" ?>
  <?rfc include="reference.RFC.4033" ?>
  <?rfc include="reference.RFC.4034" ?>
  <?rfc include="reference.RFC.4035" ?>
  <?rfc include="reference.RFC.4213" ?>
  <?rfc include="reference.RFC.4291" ?>
  <?rfc include="reference.RFC.4292" ?>
  <?rfc include="reference.RFC.4293" ?>
  <?rfc include="reference.RFC.4301" ?>
  <?rfc include="reference.RFC.4303" ?>
  <?rfc include="reference.RFC.4307" ?>
  <?rfc include="reference.RFC.4311" ?>
  <?rfc include="reference.RFC.4443" ?>
  <?rfc include="reference.RFC.4604" ?>
  <?rfc include="reference.RFC.4607" ?>
  <?rfc include="reference.RFC.4861" ?>
  <?rfc include="reference.RFC.4862" ?>
  <?rfc include="reference.RFC.4835" ?>
  <?rfc include="reference.RFC.4941" ?>
  <?rfc include="reference.RFC.5095" ?>
  <?rfc include="reference.RFC.5453" ?>
  <?rfc include="reference.RFC.5722" ?>
  <?rfc include="reference.RFC.5790" ?>
  <?rfc include="reference.RFC.5942" ?>
  <?rfc include="reference.RFC.5952" ?>
  <?rfc include="reference.RFC.5996" ?>
  <?rfc include="reference.RFC.6106" ?>
  <?rfc include="reference.RFC.6204" ?>
  <?rfc include="reference.RFC.6437" ?>
 </references>
 <references title="Informative References">
  <?rfc include="reference.RFC.0793" ?>
  <?rfc include="reference.RFC.2205" ?>

  <?rfc include="reference.RFC.2464" ?>
  <?rfc include="reference.RFC.2491" ?>
  <?rfc include="reference.RFC.2492" ?>
  <?rfc include="reference.RFC.2590" ?>
  <?rfc include="reference.RFC.2675" ?>
  <?rfc include="reference.RFC.3146" ?>
  <?rfc include="reference.RFC.3363" ?>
  <?rfc include="reference.RFC.3493" ?>
  <?rfc include="reference.RFC.3542" ?>
  <?rfc include="reference.RFC.3678" ?>
  <?rfc include="reference.RFC.6275" ?>
  <?rfc include="reference.RFC.3776" ?>
  <?rfc include="reference.RFC.3971" ?>
  <?rfc include="reference.RFC.3972" ?>
  <?rfc include="reference.RFC.4191" ?>
  <?rfc include="reference.RFC.4302" ?>
  <?rfc include="reference.RFC.4338" ?>
  <?rfc include="reference.RFC.4380" ?>
  <?rfc include="reference.RFC.4429" ?>
  <?rfc include="reference.RFC.4584" ?>
  <?rfc include="reference.RFC.4821" ?>
  <?rfc include="reference.RFC.4877" ?>
  <?rfc include="reference.RFC.4884" ?>
  <?rfc include="reference.RFC.4944" ?>
  <?rfc include="reference.RFC.5006" ?>
  <?rfc include="reference.RFC.5014" ?>
  <?rfc include="reference.RFC.5072" ?>
  <?rfc include="reference.RFC.5121" ?>
  <?rfc include="reference.RFC.5555" ?>

<reference anchor="POSIX"
	   target="http://www.ieee.org">

<front>
<title>IEEE Std. 1003.1-2008 Standard for Information
                  Technology -- Portable Operating System Interface
                  (POSIX), ISO/IEC 9945:2009</title>
<author>
<organization>IEEE</organization>
</author>
<date />
</front>

</reference>
  
<reference anchor="USGv6"
  target="http://www.antd.nist.gov/usgv6/usgv6-v1.pdf">

<front>
<title>A Profile for IPv6 in the U.S. Government - Version 1.0
</title>
<author>
<organization>National Institute of Standards and Technology</organization>
</author>
<date month="July" year="2008" />
</front>
</reference>

<reference anchor="DODv6" target="http://jitc.fhu.disa.mil/apl/ipv6/pdf/disr_ipv6_50.pdf">
<front>
<title>DoD IPv6 Standard Profiles For IPv6 Capable Products Version
5.0
</title>
<author>
<organization>DISR IPv6 Standards Technical Working Group</organization>
</author>
<date month="July" year="2010" />
</front>
</reference>
  
 </references>
</back>
</rfc>
