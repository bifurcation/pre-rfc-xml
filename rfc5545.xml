<?xml version="1.0" encoding="US-ASCII"?>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt'?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc subcompact="no"?>

<!DOCTYPE rfc
 PUBLIC "" "rfc2629.dtd">
<rfc number="5545" category="std" obsoletes="2445" >
<front>
 <title abbrev="iCalendar">
   Internet Calendaring and Scheduling Core Object Specification
   (iCalendar)
 </title>
 <author fullname="Bernard Desruisseaux" surname="Desruisseaux" role="editor" initials="B">
   <organization abbrev="Oracle">Oracle Corporation</organization>
   <address>
     <postal>
       <street>600 blvd. de Maisonneuve West</street>
       <street>Suite 1900</street>
       <city>Montreal</city>
       <region>QC</region>
       <code>H3A 3J2</code>
       <country>CANADA</country>
     </postal>
     <email>bernard.desruisseaux@oracle.com</email>
     <uri>http://www.oracle.com/</uri>
   </address>
 </author>
 <date month="September" year="2009"/>
 <area>Applications</area>

 <keyword>calsify</keyword>
 <keyword>calsched</keyword>
 <keyword>calsch</keyword>
 <keyword>caldav</keyword>
 <keyword>calendar</keyword>
 <keyword>calendaring</keyword>
 <keyword>meeting</keyword>
 <keyword>event</keyword>
 <keyword>task</keyword>
 <keyword>to-do</keyword>
 <keyword>journal</keyword>
 <keyword>appointment</keyword>
 <keyword>agenda</keyword>
 <keyword>schedule</keyword>
 <keyword>scheduling</keyword>
 <keyword>ical</keyword>
 <keyword>icalendar</keyword>
 <keyword>itip</keyword>
 <keyword>imip</keyword>
 <keyword>text/calendar</keyword>
 <keyword>ischedule</keyword>
 <keyword>xCalendar</keyword>

<note title="">
<t>
 This document may contain material from IETF Documents or IETF
 Contributions published or made publicly available before November 10,
 2008. The person(s) controlling the copyright in some of this material
 may not have granted the IETF Trust the right to allow modifications
 of such material outside the IETF Standards Process.  Without
 obtaining an adequate license from the person(s) controlling the
 copyright in such materials, this document may not be modified outside
 the IETF Standards Process, and derivative works of it may not be
 created outside the IETF Standards Process, except to format it for
 publication as an RFC or to translate it into languages other than
 English.
</t>
</note>

 <abstract>

       <t>
         This document defines the iCalendar data format for representing
         and exchanging calendaring and scheduling information such as
         events, to-dos, journal entries, and free/busy information,
         independent of any particular calendar service or protocol.
       </t>


 </abstract>    

</front>
<middle>
<section title="Introduction" anchor="INTRODUCTION">
 <t>
   The use of calendaring and scheduling has grown considerably
   in the last decade. Enterprise and inter-enterprise business
   has become dependent on rapid scheduling of events and actions
   using this information technology.


   This memo
   is intended to progress the level of interoperability possible
   between dissimilar calendaring and scheduling applications. This
   memo defines a MIME content type for exchanging electronic
   calendaring and scheduling information. The Internet Calendaring
   and Scheduling Core Object Specification, or iCalendar, allows
   for the capture and exchange of information normally stored
   within a calendaring and scheduling application; such as a
   Personal Information Manager (PIM) or a Group-Scheduling product.
 </t>
 <t>
   The iCalendar format is suitable as an exchange format between
   applications or systems. The format is defined in terms of a MIME
   content type. This will enable the object to be exchanged using
   several transports, including but not limited to SMTP, HTTP, a
   file system, desktop interactive protocols such as the use of a
   memory-based clipboard or drag/drop interactions, point-to-point
   asynchronous communication, wired-network transport, or some
   form of unwired transport such as infrared.
 </t>
 <t>
   The memo also provides for the definition of iCalendar object
   methods that will map this content type to a set of messages
   for supporting calendaring and scheduling operations such as
   requesting, replying to, modifying, and canceling meetings
   or appointments, to-dos, and journal entries. The iCalendar
   object methods can be used to define other calendaring and
   scheduling operations such as requesting for and replying with
   free/busy time data. Such a scheduling protocol is defined in
   the iCalendar Transport-independent Interoperability Protocol
   (iTIP) defined in <xref target="2446bis"/>.
 </t>
 <t>
   The memo also includes a formal grammar for the content type
   based on the Internet ABNF defined in


     <xref target="RFC5234"/>.

   This ABNF is required for the implementation of parsers and to serve
   as the definitive reference when ambiguities or questions arise in
   interpreting the descriptive prose definition of the memo.


       Additional restrictions that could not easily be expressed
       with the ABNF syntax are specified as comments in the ABNF.
       Comments with normative statements should be treated as such.


 </t>
</section><!-- INTRODUCTION -->

<section title="Basic Grammar and Conventions" anchor="BASIC_GRAMMAR_AND_CONVENTIONS">
 <t>
   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
   NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",



   "MAY",
   and "OPTIONAL" in this document are to be


     interpreted

   as described in <xref target="RFC2119"/>.
 </t>
 <t>
   This memo makes use of both a descriptive prose and a more formal
   notation for defining the calendaring and scheduling format.
 </t>
 <t>
   The notation used in this memo is the ABNF notation of


     <xref target="RFC5234"/>.

   Readers intending on implementing


     the

   format defined in this memo should be familiar with this notation
   in order to properly interpret the specifications of this memo.
 </t>
 <t>
   All numeric 
    values used in this
   memo are given in decimal notation.
 </t>
 <t>
   All names of properties, property parameters, enumerated
   property values, and property parameter values are
   case-insensitive. However, all other property values are
   case-sensitive, unless otherwise stated.
   <list>
     <t>
       Note: All indented editorial notes, such as this one, are intended
       to provide the reader with additional information. The information
       is not essential to the building of an implementation conformant
       with this memo. The information is provided to highlight a
       particular feature or characteristic of the memo.
     </t>
   </list>
 </t>
 <t>
   The format for the iCalendar object is based on the syntax of the 


     text/directory media type <xref target="RFC2425"/>.

   While the iCalendar object is not a profile of the


     text/directory media type <xref target="RFC2425"/>,

   it does reuse a number of the elements from the
   <xref target="RFC2425"/> specification.
 </t>

 <section title="Formatting Conventions" anchor="FORMATTING_CONVENTIONS">
   <t>
     The


       elements

     defined in this memo are defined in prose. Many
     of the terms used to describe these have common usage that
     is different than the standards usage of this memo. In order
     to reference, within this memo, elements of the calendaring and
     scheduling model, core object (this memo), or interoperability
     protocol <xref target="2446bis"/> some formatting conventions
     have been used. Calendaring and scheduling roles are referred to
     in quoted-strings of text with the first character of each word
     in uppercase. For example, "Organizer" refers to a role of a
     "Calendar User" within the scheduling protocol defined by
     <xref target="2446bis"/>.  Calendar components defined by this memo
     are referred to with capitalized, quoted-strings of text. All
     calendar components start with the letter "V". For example,
     "VEVENT" refers to the event calendar component, "VTODO" refers
     to the to-do calendar component, and "VJOURNAL" refers to the
     daily journal calendar component.  Scheduling methods defined
     by <xref target="2446bis">iTIP</xref> are referred to with capitalized,
     quoted-strings of text. For example, "REQUEST" refers to
     the method for requesting a scheduling calendar component be
     created or modified, and "REPLY" refers to the method a recipient
     of a request uses to update their status with the "Organizer"
     of the calendar component.
   </t>
   <t>
     The properties defined by this memo are referred to with
     capitalized, quoted-strings of text, followed by the word
     "property". For example, "ATTENDEE" property refers to the
     iCalendar property used to convey the calendar address of a
     calendar user. Property parameters defined by this memo are
     referred to with lowercase, quoted-strings of text, followed by
     the word "parameter". For example, "value" parameter refers to
     the iCalendar property parameter used to override the default
     value type for a property value. Enumerated values defined by
     this memo are referred to with capitalized text, either alone
     or followed by the word "value". For example, the "MINUTELY"
     value can be used with the "FREQ" component of the "RECUR"
     value type to specify repeating components based on an interval
     of one minute or more.
   </t>

       <t>
         The following table lists the different characters from the
         <xref target="US-ASCII"/> character set that is referenced
         in this document. For each character, the table specifies the
         character name used throughout this document, along with
         its US-ASCII decimal codepoint.
       </t>
       <texttable>
         <ttcol>Character name</ttcol>
         <ttcol>Decimal codepoint</ttcol>

         <c>HTAB</c>                   <c>  9</c>
         <c>LF</c>                     <c> 10</c>
         <c>CR</c>                     <c> 13</c>
         <c>DQUOTE</c>                 <c> 22</c>
         <c>SPACE</c>                  <c> 32</c>
         <c>PLUS SIGN</c>              <c> 43</c>
         <c>COMMA</c>                  <c> 44</c>
         <c>HYPHEN-MINUS</c>           <c> 45</c>
         <c>PERIOD</c>                 <c> 46</c>
         <c>SOLIDUS</c>                <c> 47</c>
         <c>COLON</c>                  <c> 58</c>
         <c>SEMICOLON</c>              <c> 59</c>
         <c>LATIN CAPITAL LETTER N</c> <c> 78</c>
         <c>LATIN CAPITAL LETTER T</c> <c> 84</c>
         <c>LATIN CAPITAL LETTER X</c> <c> 88</c>
         <c>LATIN CAPITAL LETTER Z</c> <c> 90</c>
         <c>BACKSLASH</c>              <c> 92</c>
         <c>LATIN SMALL LETTER N</c>   <c>110</c>
       </texttable>
 </section><!-- FORMATTING_CONVENTIONS -->

 <section title="Related Memos" anchor="RELATED_MEMOS">
   <t>
     Implementers will need to be familiar with several other
     memos that, along with this memo, form a framework for
     Internet calendaring and scheduling standards. This memo



     specifies a core specification of objects, value types,
     properties, and property parameters.
   </t>
   <t>
     <list style="symbols">
       <t>
         <xref target="2446bis">iTIP</xref> specifies an interoperability
         protocol for scheduling between different implementations;
       </t>
       <t>
         <xref target="2447bis">iCalendar Message-Based Interoperability Protocol (iMIP)</xref> specifies an Internet email
         binding for <xref target="2446bis"/>.
       </t>
     </list>
   </t>
   <t>
     This memo does not attempt to repeat the specification
     of concepts or definitions from these other memos. Where
     possible, references are made to the memo that provides for
     the specification of these concepts or definitions.
   </t>
 </section><!-- RELATED_MEMOS -->




</section><!-- BASIC_GRAMMAR_AND_CONVENTIONS -->





<section title="iCalendar Object Specification" anchor="ICALENDAR_OBJECT_SPECIFICATION">
 <t>
   The following sections define the details of a Calendaring
   and Scheduling Core Object Specification.


       The Calendaring and Scheduling Core Object is a collection
       of calendaring and scheduling information. Typically, this
       information will consist of an iCalendar stream with one or
       more iCalendar objects. The body of the iCalendar object
       consists of a sequence of calendar properties and one or
       more calendar components.


 </t>


     <t>
       <xref target="CONTENT_LINES"/>
         defines the content line format;
       <xref target="PROPERTY_PARAMETERS"/>
         defines the property parameter format;
       <xref target="PROPERTY_VALUE_DATA_TYPES"/>
         defines the data types for property values;
       <xref target="ICALENDAR_OBJECT"/>
         defines the iCalendar object format;
       <xref target="PROPERTY"/>
         defines the iCalendar property format;
       <xref target="CALENDAR_COMPONENTS"/>
         defines the calendar component format;
       <xref target="CALENDAR_PROPERTIES"/>
         defines calendar properties; and
       <xref target="COMPONENT_PROPERTIES"/>
         defines calendar component properties.
     </t>


 <t>
   This information is intended to be an integral part of the MIME
   content type registration. In addition, this information can be used
   independent of such content registration. In particular, this memo has
   direct applicability for use as a calendaring and scheduling exchange
   format in file-, memory-, or network-based transport mechanisms.
 </t>

 <section title="Content Lines" anchor="CONTENT_LINES">




   <t>
     The iCalendar object is organized into individual lines of
     text, called content lines. Content lines are delimited by
     a line break, which is a CRLF sequence (CR character followed
     by LF character).
   </t>
   <t>
     Lines of text SHOULD NOT be longer than 75 octets, excluding
     the line break. Long content lines SHOULD be split into
     a multiple line representations using a line "folding"
     technique. That is, a long line can be split between any
     two characters by inserting a CRLF immediately followed by
     a single linear white-space character (i.e., SPACE
     or HTAB). Any sequence of CRLF
     followed immediately by a single linear white-space character
     is ignored (i.e., removed) when processing the content type.
   </t>
   <t>
     For example, the line:
     <figure>
<artwork><![CDATA[
  DESCRIPTION:This is a long description that exists on a long line.
]]></artwork>
     </figure>
     Can be represented as:
     <figure>
<artwork><![CDATA[
  DESCRIPTION:This is a lo
   ng description
    that exists on a long line.
]]></artwork>
     </figure>
   </t>
   <t>
     The process of moving from this folded multiple-line
     representation to its single-line representation is called
     "unfolding". Unfolding is accomplished by removing the
     CRLF and the linear white-space character that
     immediately follows.
   </t>
   <t>
     When parsing a content line, folded lines MUST first be
     unfolded according to the unfolding procedure described
     above.



         <list>
           <t>
             Note: It is possible for very simple implementations to
             generate improperly folded lines in the middle of a UTF-8
             multi-octet sequence. For this reason, implementations
             need to unfold lines in such a way to properly restore
             the original sequence.
           </t>
         </list>


   </t>
   <t>
     The content information associated with an iCalendar object
     is formatted using a syntax similar to that defined by <xref target="RFC2425"/>. That is, the content information consists
     of CRLF-separated content lines.
   </t>
   <t>
     The following notation defines the lines of content in an
     iCalendar object:
     <figure>
<artwork name="abnf"><![CDATA[
  contentline   = name *(";" param ) ":" value CRLF
  ; This ABNF is just a general definition for an initial parsing
  ; of the content line into its property name, parameter list,
  ; and value string

  ; When parsing a content line, folded lines MUST first
  ; be unfolded according to the unfolding procedure
  ; described above.  When generating a content line, lines
  ; longer than 75 octets SHOULD be folded according to
  ; the folding procedure described above.

  name          = iana-token / x-name

  iana-token    = 1*(ALPHA / DIGIT / "-")
  ; iCalendar identifier registered with IANA

  x-name        = "X-" [vendorid "-"] 1*(ALPHA / DIGIT / "-")
  ; Reserved for experimental use.

  vendorid      = 3*(ALPHA / DIGIT)
  ; Vendor identification

  param         = param-name "=" param-value *("," param-value)
  ; Each property defines the specific ABNF for the parameters
  ; allowed on the property.  Refer to specific properties for
  ; precise parameter ABNF.

  param-name    = iana-token / x-name

  param-value   = paramtext / quoted-string

  paramtext     = *SAFE-CHAR

  value         = *VALUE-CHAR

  quoted-string = DQUOTE *QSAFE-CHAR DQUOTE

  QSAFE-CHAR    = WSP / %x21 / %x23-7E / NON-US-ASCII
  ; Any character except CONTROL and DQUOTE

  SAFE-CHAR     = WSP / %x21 / %x23-2B / %x2D-39 / %x3C-7E
                / NON-US-ASCII
  ; Any character except CONTROL, DQUOTE, ";", ":", ","

  VALUE-CHAR    = WSP / %x21-7E / NON-US-ASCII
  ; Any textual character

  NON-US-ASCII  = UTF8-2 / UTF8-3 / UTF8-4
  ; UTF8-2, UTF8-3, and UTF8-4 are defined in [RFC3629]

  CONTROL       = %x00-08 / %x0A-1F / %x7F
  ; All the controls except HTAB 
]]></artwork>
     </figure>
   </t>
   <t>
     The property value component of a content line has a format
     that is property specific. Refer to the section describing
     each property for a definition of this format.
   </t>
   <t>
     All names of properties, property parameters, enumerated
     property values and property parameter values are
     case-insensitive. However, all other property values are
     case-sensitive, unless otherwise stated.
   </t>

   <section title="List and Field Separators" anchor="LIST_AND_FIELD_SEPARATORS">
     <t>
       Some properties and parameters allow a list of values. Values
       in a list of values MUST be separated by a COMMA character. There is no significance to the
       order of values in a list. For those parameter values (such
       as those that specify URI values) that are specified in
       quoted-strings, the individual quoted-strings are separated
       by a COMMA character.
     </t>
     <t>
       Some property values are defined in terms of multiple
       parts. These structured property values MUST have their
       value parts separated by a SEMICOLON character.
     </t>
     <t>
       Some properties allow a list of parameters. Each property
       parameter in a list of property parameters MUST be separated
       by a SEMICOLON character.
     </t>
     <t>
       Property parameters with values containing a COLON

         character,
       a SEMICOLON

         character

       or a COMMA character


       MUST be placed in quoted text.
     </t>
     <t>
       For example, in the following properties, a SEMICOLON is
       used to separate property parameters from each other and
       a COMMA character is used to separate property values in a value list.
       <figure>
<artwork><![CDATA[
  ATTENDEE;RSVP=TRUE;ROLE=REQ-PARTICIPANT:mailto:
   jsmith@example.com

  RDATE;VALUE=DATE:19970304,19970504,19970704,19970904
]]></artwork>
       </figure>
     </t>
   </section><!-- LIST_AND_FIELD_SEPARATORS -->

   <section title="Multiple Values" anchor="MULTIPLE_VALUES">

     <t>
       Some properties defined in the iCalendar object can have multiple
       values. The general rule for encoding multi-valued items is to
       simply create a new content line for each value, including the
       property name. However, it should be noted that some properties
       support encoding multiple values in a single property by separating
       the values with a COMMA character. Individual
       property definitions should be consulted for determining whether
       a specific property allows multiple values and in which of these
       two forms.


           Multi-valued properties MUST NOT be used to specify multiple
           language variants of the same value. Calendar applications
           SHOULD display all values.


     </t>
   </section><!-- MULTIPLE_VALUES -->

   <section title="Binary Content" anchor="BINARY_CONTENT">

     <t>
       Binary content information in an iCalendar object SHOULD be
       referenced using a URI within a property value. That is, the
       binary content information SHOULD be placed in an external MIME
       entity that can be referenced by a URI from within the iCalendar
       object. In applications where this is not feasible, binary

       content
       information can be included within an iCalendar object, but only
       after first encoding it into text using the "BASE64" encoding
       method defined in
       <xref target="RFC4648"/>.
       Inline binary

       content
       SHOULD only be used in applications whose
       special circumstances demand that an iCalendar object be expressed
       as a single entity. A property containing inline binary content
       information MUST specify the "ENCODING" property parameter.
       Binary content information placed external to the iCalendar object
       MUST be referenced by a uniform resource identifier (URI).
     </t>
     <t>
       The following example specifies an "ATTACH" property that
       references an attachment external to the iCalendar object with
       a URI reference:
       <figure>
<artwork><![CDATA[
  ATTACH:http://example.com/public/quarterly-report.doc
]]></artwork>
       </figure>
     </t>
     <t>
       The following example specifies an "ATTACH" property with inline
       binary encoded content information:
       <figure>


<artwork><![CDATA[
  ATTACH;FMTTYPE=text/plain;ENCODING=BASE64;VALUE=BINARY:VGhlIH
   F1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZy4
]]></artwork>


       </figure>
     </t>
   </section><!-- BINARY_CONTENT -->

   <section title="Character Set" anchor="CHARACTER_SET">

     <t>
       There is not a property parameter to declare the


         charset

       used in a property value. The default


         charset

       for an iCalendar


         stream

       is UTF-8 as defined in


         <xref target="RFC3629"/>.

     </t>
     <t>
       The "charset" Content-Type parameter


         MUST

       be used in MIME transports to specify


         the charset being used.

     </t>
   </section><!-- CHARACTER_SET -->
 </section><!-- CONTENT_LINES -->

 <section title="Property Parameters" anchor="PROPERTY_PARAMETERS">

   <t>
     A property can have attributes with which it is associated. These "property
     parameters" contain meta-information about the property or the
     property value. Property parameters are provided to specify such
     information as the location of an alternate text representation
     for a property value, the language of a text property value, the
     value type of the property value, and other attributes.
   </t>
   <t>
     Property parameter values that contain the COLON, SEMICOLON, or COMMA
     character separators MUST be specified as quoted-string text values.
     Property parameter values MUST NOT contain the

     DQUOTE character. The

     DQUOTE character is used as a delimiter for
     parameter values that contain restricted characters or URI text.
     For example:
     <figure>
<artwork><![CDATA[
  DESCRIPTION;ALTREP="cid:part1.0001@example.org":The Fall'98 Wild
    Wizards Conference - - Las Vegas\, NV\, USA
]]></artwork>
     </figure>
   </t>
   <t>
     Property parameter values that are not in quoted-strings are case-insensitive.
   </t>
   <t>
     The general property parameters defined by this memo are defined
     by the following notation:
     <figure>
<artwork name="abnf"><![CDATA[
  icalparameter = altrepparam       ; Alternate text representation
                / cnparam           ; Common name
                / cutypeparam       ; Calendar user type
                / delfromparam      ; Delegator
                / deltoparam        ; Delegatee
                / dirparam          ; Directory entry
                / encodingparam     ; Inline encoding
                / fmttypeparam      ; Format type
                / fbtypeparam       ; Free/busy time type
                / languageparam     ; Language for text
                / memberparam       ; Group or list membership
                / partstatparam     ; Participation status
                / rangeparam        ; Recurrence identifier range
                / trigrelparam      ; Alarm trigger relationship
                / reltypeparam      ; Relationship type
                / roleparam         ; Participation role
                / rsvpparam         ; RSVP expectation
                / sentbyparam       ; Sent by
                / tzidparam         ; Reference to time zone object
                / valuetypeparam    ; Property value data type
                / other-param

  other-param   = (iana-param / x-param)

  iana-param  = iana-token "=" param-value *("," param-value)
  ; Some other IANA-registered iCalendar parameter.

  x-param     = x-name "=" param-value *("," param-value)
  ; A non-standard, experimental parameter.
]]></artwork>
     </figure>


         Applications MUST ignore x-param and iana-param values
         they don't recognize.


   </t>

   <section title="Alternate Text Representation" anchor="PARAM.ALTREP">

     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           ALTREP
         </t>
         <t hangText="Purpose:">
           To specify an alternate text representation for the property
           value.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
  altrepparam = "ALTREP" "=" DQUOTE uri DQUOTE
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter specifies a URI that points to an
           alternate representation for a textual property value. A property
           specifying this parameter MUST also include a value that reflects
           the default representation of the text value.
           The



           URI
           parameter


             value

           MUST



           be specified in a quoted-string.


               <list>
                 <t>
                   Note: While there is no restriction imposed on the
                   URI schemes allowed for this parameter,
                   <xref target="RFC2392">Content Identifier (CID)</xref>,
                   <xref target="RFC2616">HTTP</xref>, and
                   <xref target="RFC2818">HTTPS</xref> are
                   the URI schemes most commonly used by current
                   implementations. 
                 </t>
               </list>


         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    DESCRIPTION;ALTREP="CID:part3.msg.970415T083000@example.com":
     Project XYZ Review Meeting will include the following agenda
      items: (a) Market Overview\, (b) Finances\, (c) Project Man
     agement
]]></artwork>
           </figure>

           The "ALTREP" property parameter value might point to a
           "text/html" content portion.

           <figure>
<artwork><![CDATA[
    Content-Type:text/html
    Content-Id:<part3.msg.970415T083000@example.com>

    <html>
      <head>
       <title></title>
      </head>
      <body>
        <p>
          <b>Project XYZ Review Meeting</b> will include
          the following agenda items:
          <ol>
            <li>Market Overview</li>
            <li>Finances</li>
            <li>Project Management</li>
          </ol>
        </p>
      </body>
    </html>
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.ALTREP -->

   <section title="Common Name" anchor="PARAM.CN">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           CN
         </t>
         <t hangText="Purpose:">
           To specify the common name to be associated with the
           calendar user specified by the property.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
  cnparam    = "CN" "=" param-value
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on properties with a CAL-ADDRESS
           value type. The parameter specifies the common name to be
           associated with the calendar user specified by the property. The
           parameter value is text. The parameter value can be used for
           display text to be associated with the calendar address specified
           by the property.
         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    ORGANIZER;CN="John Smith":mailto:jsmith@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.CN -->

   <section title="Calendar User Type" anchor="PARAM.CUTYPE">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           CUTYPE
         </t>
         <t hangText="Purpose:">
           To identify the type of calendar user specified by the property.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    cutypeparam        = "CUTYPE" "="
                       ("INDIVIDUAL"   ; An individual
                      / "GROUP"        ; A group of individuals
                      / "RESOURCE"     ; A physical resource
                      / "ROOM"         ; A room resource
                      / "UNKNOWN"      ; Otherwise not known
                      / x-name         ; Experimental type
                      / iana-token)    ; Other IANA-registered
                                       ; type
    ; Default is INDIVIDUAL
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on properties with a CAL-ADDRESS
           value type. The parameter identifies the type of calendar user
           specified by the property. If not specified on a property that
           allows this parameter, the default is INDIVIDUAL.


               Applications MUST treat x-name and iana-token values
               they don't recognize the same way as they would
               the UNKNOWN value.


         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    ATTENDEE;CUTYPE=GROUP:mailto:ietf-calsch@example.org
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.CUTYPE -->

   <section title="Delegators" anchor="PARAM.DELEGATED-FROM">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           DELEGATED-FROM
         </t>
         <t hangText="Purpose:">
           To specify the calendar users that have delegated their
           participation to the calendar user specified by the property.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    delfromparam       = "DELEGATED-FROM" "=" DQUOTE cal-address
                          DQUOTE *("," DQUOTE cal-address DQUOTE)
]]></artwork>
           </figure>
         </t>


         <t hangText="Description:">
           This parameter can be specified on properties with a CAL-ADDRESS
           value type.



           This parameter specifies those calendar

           users
           that have delegated their participation in
           a group-scheduled event or to-do to the calendar user specified
           by the property.



           The individual calendar address parameter values MUST each
           be specified in a quoted-string.
         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    ATTENDEE;DELEGATED-FROM="mailto:jsmith@example.com":mailto:
     jdoe@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.DELEGATED-FROM -->

   <section title="Delegatees" anchor="PARAM.DELEGATED-TO">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           DELEGATED-TO
         </t>
         <t hangText="Purpose:">
           To specify the calendar users to whom the calendar user
           specified by the property has delegated participation.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following
           notation:
           <figure>
<artwork name="abnf"><![CDATA[
    deltoparam = "DELEGATED-TO" "=" DQUOTE cal-address DQUOTE
                 *("," DQUOTE cal-address DQUOTE)
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on properties with a CAL-ADDRESS
           value type. This parameter specifies those calendar users whom
           have been delegated participation in a group-scheduled event or
           to-do by the calendar user specified by the property.



           The individual calendar address parameter values
           MUST each be specified in a quoted-string.
         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    ATTENDEE;DELEGATED-TO="mailto:jdoe@example.com","mailto:jqpublic
     @example.com":mailto:jsmith@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.DELEGATED-TO -->

   <section title="Directory Entry Reference" anchor="PARAM.DIR">

     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           DIR
         </t>
         <t hangText="Purpose:">
           To specify reference to a directory entry associated with
           the calendar user specified by the property.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    dirparam   = "DIR" "=" DQUOTE uri DQUOTE
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on properties with a CAL-ADDRESS
           value type. The parameter specifies a reference to the directory
           entry associated with the calendar user specified by the
           property. The parameter value is a URI.  The



           URI parameter


             value

           MUST


            be specified in a quoted-string.


               <list>
                 <t>
                   Note: While there is no restriction imposed on the
                   URI schemes allowed for this parameter,
                   <xref target="RFC2392">CID</xref>,
                   <xref target="RFC2397">DATA</xref>,
                   <xref target="RFC1738">FILE</xref>,
                   <xref target="RFC1738">FTP</xref>,
                   <xref target="RFC2616">HTTP</xref>,
                   <xref target="RFC2818">HTTPS</xref>,
                   <xref target="RFC4516">LDAP</xref>, and
                   <xref target="RFC2392">MID</xref> are
                   the URI schemes most commonly used by current
                   implementations.
                 </t>
               </list>


         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    ORGANIZER;DIR="ldap://example.com:6666/o=ABC%20Industries,
     c=US???(cn=Jim%20Dolittle)":mailto:jimdo@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.DIR -->

   <section title="Inline Encoding" anchor="PARAM.ENCODING">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           ENCODING
         </t>
         <t hangText="Purpose:">
           To specify an alternate inline encoding for the property value.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    encodingparam      = "ENCODING" "="
                       ( "8BIT"
       ; "8bit" text encoding is defined in [RFC2045]
                       / "BASE64"
       ; "BASE64" binary encoding format is defined in [RFC4648]
                       )
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">


             This

           property parameter identifies the inline encoding used in a
           property value. The default encoding is "8BIT", corresponding
           to a property value consisting of text. The "BASE64" encoding
           type corresponds to a property value encoded using the "BASE64"
           encoding defined in <xref target="RFC2045"/>.
         </t>
         <t>
           If the value type parameter is ";VALUE=BINARY", then the
           inline encoding parameter MUST be specified with the value
           ";ENCODING=BASE64".
         </t>
         <t hangText="Example:">
           <figure>


<artwork><![CDATA[
  ATTACH;FMTTYPE=text/plain;ENCODING=BASE64;VALUE=BINARY:TG9yZW
   0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW
   5nIGVsaXQsIHNlZCBkbyBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IG
   xhYm9yZSBldCBkb2xvcmUgbWFnbmEgYWxpcXVhLiBVdCBlbmltIGFkIG1pbm
   ltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbiB1bGxhbWNvIG
   xhYm9yaXMgbmlzaSB1dCBhbGlxdWlwIGV4IGVhIGNvbW1vZG8gY29uc2VxdW
   F0LiBEdWlzIGF1dGUgaXJ1cmUgZG9sb3IgaW4gcmVwcmVoZW5kZXJpdCBpbi
   B2b2x1cHRhdGUgdmVsaXQgZXNzZSBjaWxsdW0gZG9sb3JlIGV1IGZ1Z2lhdC
   BudWxsYSBwYXJpYXR1ci4gRXhjZXB0ZXVyIHNpbnQgb2NjYWVjYXQgY3VwaW
   RhdGF0IG5vbiBwcm9pZGVudCwgc3VudCBpbiBjdWxwYSBxdWkgb2ZmaWNpYS
   BkZXNlcnVudCBtb2xsaXQgYW5pbSBpZCBlc3QgbGFib3J1bS4=
]]></artwork>


           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.ENCODING -->

   <section title="Format Type" anchor="PARAM.FMTTYPE">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           FMTTYPE
         </t>
         <t hangText="Purpose:">
           To specify the content type of a referenced object.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    fmttypeparam = "FMTTYPE" "=" type-name "/" subtype-name
                   ; Where "type-name" and "subtype-name" are
                   ; defined in Section 4.2 of [RFC4288].
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on properties that are used to
           reference an object. The parameter specifies the


             media type <xref target="RFC4288"/>

           of the referenced object. For example, on the "ATTACH" property,
           an FTP type URI value does not, by itself, necessarily convey
           the type of content associated with the resource. The parameter
           value MUST be the


             text

           for either an IANA-registered


             media

           type or a non-standard


             media

           type.
         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    ATTACH;FMTTYPE=application/msword:ftp://example.com/pub/docs/
     agenda.doc
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.FMTTYPE -->

   <section title="Free/Busy Time Type" anchor="PARAM.FBTYPE">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           FBTYPE
         </t>
         <t hangText="Purpose:">
           To specify the free or busy time type.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    fbtypeparam        = "FBTYPE" "=" ("FREE" / "BUSY"
                       / "BUSY-UNAVAILABLE" / "BUSY-TENTATIVE"
                       / x-name
             ; Some experimental iCalendar free/busy type.
                       / iana-token)
             ; Some other IANA-registered iCalendar free/busy type.
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">


             This

           parameter specifies the free or busy time type. The value
           FREE indicates that the time interval is free for scheduling.
           The value BUSY indicates that the time interval is busy because
           one or more events have been scheduled for that interval. The
           value BUSY-UNAVAILABLE indicates that the time interval is
           busy and that the interval can not be scheduled. The value
           BUSY-TENTATIVE indicates that the time interval is busy because
           one or more events have been tentatively scheduled for that
           interval. If not specified on a property that allows this
           parameter, the default is BUSY.


               Applications MUST treat x-name and iana-token values
               they don't recognize the same way as they would
               the BUSY value.


         </t>
         <t hangText="Example:">
           The following is an example of this parameter on a
           "FREEBUSY"
           property.
           <figure>
<artwork><![CDATA[
    FREEBUSY;FBTYPE=BUSY:19980415T133000Z/19980415T170000Z
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.FBTYPE -->

   <section title="Language" anchor="PARAM.LANGUAGE">

     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           LANGUAGE
         </t>
         <t hangText="Purpose:">
           To specify the language for text values in a property or
           property parameter.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    languageparam = "LANGUAGE" "=" language

    language = Language-Tag
               ; As defined in [RFC5646].
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">



               This


           parameter identifies the language of the text in the property


             value and of all

           property parameter
           values of the property.
           The value of the


             "LANGUAGE"

           property parameter is that defined in


             <xref target="RFC5646"/>.
         </t>
         <t>
           For transport in a MIME entity, the Content-Language header
           field can be used to set the default language for the entire
           body part.  Otherwise, no default language is assumed.
         </t>
         <t hangText="Example:">


               The following are examples of this parameter on the
               "SUMMARY" and "LOCATION" properties:


           <figure>
<artwork><![CDATA[
    SUMMARY;LANGUAGE=en-US:Company Holiday Party

    LOCATION;LANGUAGE=en:Germany

    LOCATION;LANGUAGE=no:Tyskland
]]></artwork>
           </figure>



         </t>
       </list>
     </t>
   </section><!-- PARAM.LANGUAGE -->

   <section title="Group or List Membership" anchor="PARAM.MEMBER">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           MEMBER
         </t>
         <t hangText="Purpose:">
           To specify the group or list membership of the calendar user
           specified by the property.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    memberparam        = "MEMBER" "=" DQUOTE cal-address DQUOTE
                         *("," DQUOTE cal-address DQUOTE)
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on properties with a
           CAL-ADDRESS value type. The parameter identifies the groups
           or list membership for the calendar user specified by the
           property. The parameter value is either a single calendar address in
           a quoted-string or a COMMA-separated list of calendar addresses, each in a quoted-string. The individual
           calendar address parameter values MUST each be specified in
           a quoted-string.
         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    ATTENDEE;MEMBER="mailto:ietf-calsch@example.org":mailto:
     jsmith@example.com

    ATTENDEE;MEMBER="mailto:projectA@example.com","mailto:pr
     ojectB@example.com":mailto:janedoe@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.MEMBER -->
   <section title="Participation Status" anchor="PARAM.PARTSTAT">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           PARTSTAT
         </t>
         <t hangText="Purpose:">
           To specify the participation status for the calendar user
           specified by the property.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    partstatparam    = "PARTSTAT" "=" 
                      (partstat-event
                     / partstat-todo
                     / partstat-jour)

    partstat-event   = ("NEEDS-ACTION"    ; Event needs action
                     / "ACCEPTED"         ; Event accepted
                     / "DECLINED"         ; Event declined
                     / "TENTATIVE"        ; Event tentatively
                                          ; accepted
                     / "DELEGATED"        ; Event delegated
                     / x-name             ; Experimental status
                     / iana-token)        ; Other IANA-registered
                                          ; status
    ; These are the participation statuses for a "VEVENT".
    ; Default is NEEDS-ACTION.

]]></artwork>
           </figure>
           <figure>
<artwork name="abnf"><![CDATA[
    partstat-todo    = ("NEEDS-ACTION"    ; To-do needs action
                     / "ACCEPTED"         ; To-do accepted
                     / "DECLINED"         ; To-do declined
                     / "TENTATIVE"        ; To-do tentatively
                                          ; accepted
                     / "DELEGATED"        ; To-do delegated
                     / "COMPLETED"        ; To-do completed
                                          ; COMPLETED property has
                                          ; DATE-TIME completed
                     / "IN-PROCESS"       ; To-do in process of
                                          ; being completed
                     / x-name             ; Experimental status
                     / iana-token)        ; Other IANA-registered
                                          ; status
    ; These are the participation statuses for a "VTODO".
    ; Default is NEEDS-ACTION.

]]></artwork>
           </figure>
           <figure>
<artwork name="abnf"><![CDATA[
    partstat-jour    = ("NEEDS-ACTION"    ; Journal needs action
                     / "ACCEPTED"         ; Journal accepted
                     / "DECLINED"         ; Journal declined
                     / x-name             ; Experimental status
                     / iana-token)        ; Other IANA-registered
                                          ; status
    ; These are the participation statuses for a "VJOURNAL".
    ; Default is NEEDS-ACTION.
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on properties with a CAL-ADDRESS
           value type. The parameter identifies the participation status for
           the calendar user specified by the property value. The parameter
           values differ depending on whether they are associated with a
           group-scheduled "VEVENT", "VTODO", or "VJOURNAL". The values
           MUST match one of the values allowed for the given calendar
           component.
           If not specified on a property that allows this
           parameter, the default value is NEEDS-ACTION.


               Applications MUST treat x-name and iana-token values
               they don't recognize the same way as they would the
               NEEDS-ACTION value.


         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    ATTENDEE;PARTSTAT=DECLINED:mailto:jsmith@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.PARTSTAT -->

   <section title="Recurrence Identifier Range" anchor="PARAM.RANGE">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           RANGE
         </t>
         <t hangText="Purpose:">
           To specify the effective range of recurrence instances from
           the instance specified by the recurrence identifier specified
           by the property.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>

<artwork name="abnf"><![CDATA[
    rangeparam = "RANGE" "=" "THISANDFUTURE"
    ; To specify the instance specified by the recurrence identifier
    ; and all subsequent recurrence instances.
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on a property that specifies
           a recurrence identifier. The parameter specifies the
           effective range of recurrence instances that is specified
           by the property. The effective range is from the recurrence


             identifier

           specified by the property. If this parameter is not
           specified

             on

           an allowed property, then the default range is the
           single instance specified by the recurrence identifier value
           of the property.



           The parameter value can


             only

           be "THISANDFUTURE" to indicate a range defined by the
           recurrence identifier and all subsequent instances.


               The value "THISANDPRIOR" is deprecated by this
               revision of iCalendar and MUST NOT be generated by
               applications.


         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    RECURRENCE-ID;RANGE=THISANDFUTURE:19980401T133000Z
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.RANGE -->

   <section title="Alarm Trigger Relationship" anchor="PARAM.RELATED">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           RELATED
         </t>
         <t hangText="Purpose:">
           To specify the relationship of the alarm trigger with
           respect to the start or end of the calendar component.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following
           notation:
           <figure>
<artwork name="abnf"><![CDATA[
    trigrelparam       = "RELATED" "="
                        ("START"       ; Trigger off of start
                       / "END")        ; Trigger off of end
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on properties that specify an
           alarm trigger with a "DURATION" value type. The parameter specifies
           whether the alarm will trigger relative to the start or end
           of the calendar component. The parameter value START will set
           the alarm to trigger off the start of the calendar component;
           the parameter value END will set the alarm to trigger off the
           end of the calendar component. If the parameter is not specified
           on an allowable property, then the default is START.
         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    TRIGGER;RELATED=END:PT5M
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.RELATED -->

   <section title="Relationship Type" anchor="PARAM.RELTYPE">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           RELTYPE
         </t>
         <t hangText="Purpose:">
           To specify the type of hierarchical relationship associated
           with the calendar component specified by the property.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    reltypeparam       = "RELTYPE" "="
                        ("PARENT"    ; Parent relationship - Default
                       / "CHILD"     ; Child relationship
                       / "SIBLING"   ; Sibling relationship
                       / iana-token  ; Some other IANA-registered
                                     ; iCalendar relationship type
                       / x-name)     ; A non-standard, experimental
                                     ; relationship type
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on a property that
           references another related calendar. The parameter specifies the
           hierarchical relationship type of the calendar component referenced
           by the property. The parameter value can be PARENT, to indicate that
           the referenced calendar component is a superior of calendar
           component; CHILD to indicate that the referenced calendar component
           is a subordinate of the calendar component; or SIBLING to indicate that
           the referenced calendar component is a peer of the calendar
           component. If this parameter is not specified on an allowable
           property, the default relationship type is PARENT.


               Applications MUST treat x-name and iana-token values
               they don't recognize the same way as they would
               the PARENT value.


         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    RELATED-TO;RELTYPE=SIBLING:19960401-080045-4000F192713@
     example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.RELTYPE -->

   <section title="Participation Role" anchor="PARAM.ROLE">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           ROLE
         </t>
         <t hangText="Purpose:">
           To specify the participation role for the calendar user
           specified by the property.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    roleparam  = "ROLE" "="
                ("CHAIR"             ; Indicates chair of the
                                     ; calendar entity
               / "REQ-PARTICIPANT"   ; Indicates a participant whose
                                     ; participation is required
               / "OPT-PARTICIPANT"   ; Indicates a participant whose
                                     ; participation is optional
               / "NON-PARTICIPANT"   ; Indicates a participant who
                                     ; is copied for information
                                     ; purposes only
               / x-name              ; Experimental role
               / iana-token)         ; Other IANA role
    ; Default is REQ-PARTICIPANT
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on properties with a CAL-ADDRESS
           value type. The parameter specifies the participation role
           for the calendar user specified by the property in the group
           schedule calendar component. If not specified on a property
           that allows this parameter, the default value is REQ-PARTICIPANT.


               Applications MUST treat x-name and iana-token values
               they don't recognize the same way as they would
               the REQ-PARTICIPANT value.


         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    ATTENDEE;ROLE=CHAIR:mailto:mrbig@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.ROLE -->

   <section title="RSVP Expectation" anchor="PARAM.RSVP">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           RSVP
         </t>
         <t hangText="Purpose:">
           To specify whether there is an expectation of a favor of a
           reply from the calendar user specified by the property value.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    rsvpparam = "RSVP" "=" ("TRUE" / "FALSE")
    ; Default is FALSE
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on properties with a CAL-ADDRESS
           value type. The parameter identifies the expectation of a reply
           from the calendar user specified by the property value. This
           parameter is used by the "Organizer" to request a participation
           status reply from an "Attendee" of a group-scheduled event
           or to-do.  If not specified on a property that allows this
           parameter, the default value is FALSE.
         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    ATTENDEE;RSVP=TRUE:mailto:jsmith@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.RSVP -->

   <section title="Sent By" anchor="PARAM.SENT-BY">
     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           SENT-BY
         </t>
         <t hangText="Purpose:">
           To specify the calendar user that is acting on behalf of the
           calendar user specified by the property.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    sentbyparam        = "SENT-BY" "=" DQUOTE cal-address DQUOTE
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter can be specified on properties with a CAL-ADDRESS
           value type. The parameter specifies the calendar user that
           is acting on behalf of the calendar user specified by the
           property. The parameter value MUST be a mailto URI as defined in
           <xref target="RFC2368"/>.
           The individual calendar address
           parameter values MUST each be specified in a quoted-string.
         </t>
         <t hangText="Example:">
           <figure>
<artwork><![CDATA[
    ORGANIZER;SENT-BY="mailto:sray@example.com":mailto:
     jsmith@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PARAM.SENT-BY -->

   <section title="Time Zone Identifier" anchor="PARAM.TZID">

     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           TZID
         </t>
         <t hangText="Purpose:">
           To specify the identifier for the time zone definition for a
           time component in the property value.
         </t>
         <t hangText="Format Definition:">
           This property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    tzidparam  = "TZID" "=" [tzidprefix] paramtext

    tzidprefix = "/"
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">
           This parameter MUST be specified on the "DTSTART", "DTEND",
           "DUE", "EXDATE", and "RDATE" properties when either a DATE-TIME
           or TIME value type is specified and when the value is
           neither a UTC or a "floating" time. Refer to the DATE-TIME
           or TIME value type definition for a description of UTC and
           "floating time" formats. This property parameter specifies a
           text value that uniquely identifies the "VTIMEZONE" calendar
           component to be used when evaluating the time portion of the
           property. The value of the "TZID" property parameter will be equal
           to the value of the "TZID" property for the matching time zone
           definition. An individual "VTIMEZONE" calendar component MUST
           be specified for each unique "TZID" parameter value specified
           in the iCalendar object.
         </t>
         <t>The parameter MUST be specified on properties with a DATE-TIME
    value if the DATE-TIME is not either a UTC or a "floating" time.
Failure to include and follow VTIMEZONE definitions in iCalendar
objects may lead to inconsistent understanding of the local time at any
given location.
         </t>
         <t>
           The presence of the SOLIDUS character
           as a prefix, indicates that this "TZID" represents a unique ID
           in a globally defined time zone registry (when such registry
           is defined).
           <list>
             <t>
               Note: This document does not define a naming convention for
               time zone identifiers. Implementers may want to use the naming
               conventions defined in existing time zone specifications such
               as the public-domain


                 TZ database

               <xref target="TZDB"/>. The
               specification of globally unique time zone identifiers is
               not addressed by this document and is left for future study.
             </t>
           </list>
         </t>
         <t>
           The following are examples of this property parameter:
           <figure>
<artwork><![CDATA[
    DTSTART;TZID=America/New_York:19980119T020000

    DTEND;TZID=America/New_York:19980119T030000
]]></artwork>
           </figure>
           The "TZID" property parameter MUST NOT be applied to

             DATE properties and

           DATE-TIME or TIME properties whose time values are specified in UTC.
         </t>
         <t>
           The use of local time in a DATE-TIME or TIME value without the
           "TZID" property parameter is to be interpreted as
           floating time,
           regardless of the existence of
           "VTIMEZONE" calendar components in the iCalendar object.
         </t>
         <t>
           For more information, see the sections on the
           value types DATE-TIME and TIME. 
         </t>
       </list>
     </t>
   </section><!-- PARAM.TZID -->

   <section title="Value Data Types" anchor="PARAM.VALUE">

     <t>
       <list style="hanging">
         <t hangText="Parameter Name:">
           VALUE
         </t>
         <t hangText="Purpose:">
           To explicitly specify the value type format for a property value.
         </t>
         <t hangText="Format Definition:">


             This

           property parameter is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    valuetypeparam = "VALUE" "=" valuetype

    valuetype  = ("BINARY"
               / "BOOLEAN"
               / "CAL-ADDRESS"
               / "DATE"
               / "DATE-TIME"
               / "DURATION"
               / "FLOAT"
               / "INTEGER"
               / "PERIOD"
               / "RECUR"
               / "TEXT"
               / "TIME"
               / "URI"
               / "UTC-OFFSET"
               / x-name
               ; Some experimental iCalendar value type.
               / iana-token)
               ; Some other IANA-registered iCalendar value type.
]]></artwork>
           </figure>
         </t>
         <t hangText="Description:">


             This

           parameter specifies the


             value

           type and format of the property value. The property values MUST
           be of a single value type.  For example, a "RDATE" property
           cannot have a combination of DATE-TIME and TIME value types.
         </t>
         <t>
           If the property's value is the default value type, then this
           parameter need not be specified. However, if the property's
           default value type is overridden by some other allowable value
           type, then this parameter MUST be specified.
         </t>
         <t>


               Applications MUST preserve the value data for x-name
               and iana-token values that they don't recognize without
               attempting to interpret or parse the value data.


         </t>
       </list>
     </t>
   </section><!-- PARAM.VALUE -->
</section><!-- PROPERTY_PARAMETERS -->

<section title="Property Value Data Types" anchor="PROPERTY_VALUE_DATA_TYPES">
 <t>
   The properties in an iCalendar object are strongly typed. The
   definition of each property restricts the value to be one of the
   value data types, or simply value types, defined in this section. The
   value type for a property will either be specified implicitly as the
   default value type or will be explicitly specified with the "VALUE"
   parameter. If the value type of a property is one of the alternate
   valid types, then it MUST be explicitly specified with the "VALUE"
   parameter.
 </t>

 <section title="Binary" anchor="VALUE.BINARY">
   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         BINARY
       </t>
       <t hangText="Purpose:">
         This value type is used to identify properties that contain
         a character encoding of inline binary data. For example, an
         inline attachment of


           a document

         might be included in an iCalendar object.
       </t>
       <t hangText="Format Definition:">


           This

         value type is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    binary     = *(4b-char) [b-end]
    ; A "BASE64" encoded character string, as defined by [RFC4648].

    b-end      = (2b-char "==") / (3b-char "=")

    b-char = ALPHA / DIGIT / "+" / "/"
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         Property values with this value type MUST also include the inline
         encoding parameter sequence of ";ENCODING=BASE64". That is,
         all inline binary data MUST first be character encoded using the
         "BASE64" encoding method defined in <xref target="RFC2045"/>. No
         additional content value encoding (i.e., BACKSLASH character
         encoding, see <xref target="VALUE.TEXT"/>)
         is defined for this
         value type.
       </t>
       <t hangText="Example:">
         The following is an



         example of a "BASE64" encoded binary value data:
         <figure>


<artwork><![CDATA[
  ATTACH;FMTTYPE=image/vnd.microsoft.icon;ENCODING=BASE64;VALUE
   =BINARY:AAABAAEAEBAQAAEABAAoAQAAFgAAACgAAAAQAAAAIAAAAAEABAAA
   AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgIAAAICAgADAwMAA////AAAA
   AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
   AAAAAAAAAAAAAAAAAAAAAAMwAAAAAAABNEMQAAAAAAAkQgAAAAAAJEREQgAA
   ACECQ0QgEgAAQxQzM0E0AABERCRCREQAADRDJEJEQwAAAhA0QwEQAAAAAERE
   AAAAAAAAREQAAAAAAAAkQgAAAAAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
   AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
   AAAAAAAAAAAA
]]></artwork>


         </figure>
       </t>
     </list>
   </t>
 </section><!-- VALUE.BINARY -->

 <section title="Boolean" anchor="VALUE.BOOLEAN">
   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         BOOLEAN
       </t>
       <t hangText="Purpose:">
         This value type is used to identify properties that contain
         either a "TRUE" or "FALSE" Boolean value.
       </t>
       <t hangText="Format Definition:">


           This

         value type is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    boolean    = "TRUE" / "FALSE"
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         These values are case-insensitive text. No additional
         content value encoding (i.e., BACKSLASH character encoding, see <xref target="VALUE.TEXT"/>) is
         defined for this value type.
       </t>
       <t hangText="Example:">
         The following is an example of a hypothetical property that
         has a BOOLEAN value type:
         <figure>
<artwork><![CDATA[
    TRUE
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- VALUE.BOOLEAN -->

 <section title="Calendar User Address" anchor="VALUE.CAL-ADDRESS">
   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         CAL-ADDRESS
       </t>
       <t hangText="Purpose:">
         This value type is used to identify properties that contain
         a calendar user address.
       </t>
       <t hangText="Format Definition:">


           This

         value type is



         defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    cal-address        = uri
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         The value is a URI as defined by


           <xref target="RFC3986"/>

         or any other IANA-registered form for a URI. When used to address
         an Internet email transport address for a calendar user, the value
         MUST be a mailto URI, as defined by
         <xref target="RFC2368"/>.
         No additional content value encoding (i.e., BACKSLASH character
         encoding, see <xref target="VALUE.TEXT"/>) is defined for this value type.
       </t>
       <t hangText="Example:">
         <figure>
<artwork><![CDATA[
 mailto:jane_doe@example.com
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- VALUE.CAL-ADDRESS -->

 <section title="Date" anchor="VALUE.DATE">
   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         DATE
       </t>
       <t hangText="Purpose:">
         This value type is used to identify values that contain a
         calendar date.
       </t>
       <t hangText="Format Definition:">


           This

         value type is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    date               = date-value

    date-value         = date-fullyear date-month date-mday
    date-fullyear      = 4DIGIT
    date-month         = 2DIGIT        ;01-12
    date-mday          = 2DIGIT        ;01-28, 01-29, 01-30, 01-31
                                       ;based on month/year
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         If the property permits, multiple "date" values are specified
         as a COMMA-separated list of
         values. The format for the value type is


           based on

         the


           <xref target="ISO.8601.2004"/>

         complete representation, basic format
         for a calendar date. The textual format specifies a four-digit
         year, two-digit month, and two-digit day of the month. There
         are no separator characters between the year, month, and day
         component text.
       </t>
       <t>
         No additional content value encoding (i.e., BACKSLASH character
         encoding, see <xref target="VALUE.TEXT"/>) is defined for this value type.
       </t>
       <t hangText="Example:">
         The following represents July 14, 1997:
         <figure>
<artwork><![CDATA[
    19970714
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- VALUE. -->

 <section title="Date-Time" anchor="VALUE.DATE-TIME">

   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         DATE-TIME
       </t>
       <t hangText="Purpose:">
         This value type is used to identify values that specify a
         precise calendar date and time of day.
       </t>
       <t hangText="Format Definition:">


           This

         value type is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    date-time  = date "T" time ;As specified in the DATE and TIME
                               ;value definitions
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         If the property permits, multiple "DATE-TIME" values are specified
         as a COMMA-separated list of
         values. No additional content value encoding (i.e., BACKSLASH
         character encoding, see <xref target="VALUE.TEXT"/>) is defined for this value type.
       </t>
       <t>
         The "DATE-TIME" value type is used to identify values that contain
         a precise calendar date and time of day.
         The format is based on the


           <xref target="ISO.8601.2004"/>

         complete representation, basic
         format for a calendar date and time of day. The text format is
         a concatenation of the "date", followed by the LATIN CAPITAL
         LETTER T character, the time designator,
         followed by the "time" format.
       </t>
       <t>
         The "DATE-TIME" value type expresses time values in three forms:
       </t>
       <t>
         The form of date and time with UTC offset MUST NOT be used. For
         example, the following is not valid for a DATE-TIME value:
         <figure>
<artwork><![CDATA[
    19980119T230000-0800       ;Invalid time format
]]></artwork>
         </figure>
       </t>
       <t>
         FORM #1: DATE WITH LOCAL TIME
       </t>
       <t>
         The date with local time form is simply a


           DATE-TIME

         value that does not contain the UTC designator nor does it
         reference a time zone. For example, the following represents


           January

         18, 1998, at 11 PM:
         <figure>
<artwork><![CDATA[
    19980118T230000
]]></artwork>
         </figure>
       </t>
       <t>


           DATE-TIME

         values of this type are said to be "floating" and are
         not bound to any time zone in particular. They are used to
         represent the same hour, minute, and second value regardless
         of which time zone is currently being observed. For example,
         an event can be defined that indicates that an individual will
         be busy from 11:00 AM to 1:00 PM every day, no matter which
         time zone the person is in. In these cases, a local time can be
         specified. The recipient of an iCalendar object with a property
         value consisting of a local time, without any relative time
         zone information, SHOULD interpret the value as being fixed to
         whatever time zone the "ATTENDEE" is in at any given moment.
         This means that two


           "Attendees",

         in different time zones,
         receiving the same event definition as a floating time, may be
         participating in the event at different actual times. Floating
         time SHOULD only be used where that is the reasonable behavior.
       </t>
       <t>
         In most cases, a fixed time is desired. To properly communicate
         a fixed time in a property value, either UTC time or local time
         with time zone reference MUST be specified.
       </t>
       <t>
         The use of local time in a DATE-TIME value without the "TZID" property
         parameter is to be interpreted as floating time, regardless of the
         existence of "VTIMEZONE" calendar components in the iCalendar object.
       </t>
       <t>
         FORM #2: DATE WITH UTC TIME
       </t>
       <t>
         The date with UTC time, or absolute time, is identified by a
         LATIN CAPITAL LETTER Z suffix character,
         the UTC designator, appended to the time value. For example,
         the following represents January 19, 1998, at 0700 UTC:
         <figure>
<artwork><![CDATA[
    19980119T070000Z
]]></artwork>
         </figure>
         The "TZID" property parameter MUST NOT be applied to DATE-TIME
         properties whose time values are specified in UTC.
       </t>
       <t>
         FORM #3: DATE WITH LOCAL TIME AND TIME ZONE REFERENCE
       </t>
       <t>
         The date and local time with reference to time zone information
         is identified by the use the "TZID" property parameter to reference
         the appropriate time zone definition. "TZID" is discussed in
         detail in
         <xref target="PARAM.TZID"/>.
         For example, the following represents 2:00 A.M. in New York on
         January 19, 1998:
         <figure>
<artwork><![CDATA[
    TZID=America/New_York:19980119T020000
]]></artwork>
         </figure>
       </t>
       <t>


             If, based on the definition of the referenced time zone,
             the local time described occurs more than once (when changing
             from daylight to standard time), the DATE-TIME value refers
             to the first occurrence of the referenced time.  Thus,
             TZID=America/New_York:20071104T013000 indicates November
             4, 2007 at 1:30 A.M. EDT (UTC-04:00). If the local time
             described does not occur (when changing from standard
             to daylight time), the DATE-TIME value is interpreted
             using the UTC offset before the gap in local times.  Thus,
             TZID=America/New_York:20070311T023000 indicates March 11,
             2007 at 3:30 A.M. EDT (UTC-04:00), one hour after 1:30 A.M.
             EST (UTC-05:00).


       </t>
       <t>


             A time value MUST only specify the second 60 when specifying
             a positive leap second.  For example:
             <figure>
<artwork><![CDATA[
    19970630T235960Z
]]></artwork>
             </figure>
             Implementations that do not support leap seconds SHOULD
             interpret the second 60 as equivalent to the second 59.


       </t>
       <t hangText="Example:">
         The following represents July 14, 1997, at 1:30 PM in New York
         City in each of the three time formats, using the "DTSTART"
         property.
         <figure>
<artwork><![CDATA[
    DTSTART:19970714T133000                   ; Local time
    DTSTART:19970714T173000Z                  ; UTC time
    DTSTART;TZID=America/New_York:19970714T133000
                                              ; Local time and time
                                              ; zone reference
]]></artwork>
         </figure>




       </t>
     </list>
   </t>
 </section><!-- VALUE.DATE-TIME -->

 <section title="Duration" anchor="VALUE.DURATION">

   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         DURATION
       </t>
       <t hangText="Purpose:">
         This value type is used to identify properties that contain
         a duration of time.
       </t>
       <t hangText="Format Definition:">


           This

         value type is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    dur-value  = (["+"] / "-") "P" (dur-date / dur-time / dur-week)

    dur-date   = dur-day [dur-time]
    dur-time   = "T" (dur-hour / dur-minute / dur-second)
    dur-week   = 1*DIGIT "W"
    dur-hour   = 1*DIGIT "H" [dur-minute]
    dur-minute = 1*DIGIT "M" [dur-second]
    dur-second = 1*DIGIT "S"
    dur-day    = 1*DIGIT "D"
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         If the property permits, multiple "duration" values are specified
         by a COMMA-separated list of values. The format is


           based on

         the


           <xref target="ISO.8601.2004"/>


           complete representation

         basic format

           with designators

         for the duration of time.
         The format can represent



             nominal durations (weeks and days) and accurate
             durations (hours, minutes, and seconds).




             Note that unlike <xref target="ISO.8601.2004"/>, this
             value type doesn't support the "Y" and "M" designators
             to specify durations in terms of years and months.


       </t>
       <t>


             The duration of a week or a day depends on its position in
             the calendar.  In the case of discontinuities in the time
             scale, such as the change from standard time to daylight
             time and back, the computation of the exact duration
             requires the subtraction or addition of the change of
             duration of the discontinuity.




             Leap seconds MUST NOT be considered when computing an
             exact duration.




             When computing an exact duration,
             the greatest order time components MUST be added first,
             that is, the number of days MUST be added first, followed
             by the number of hours, number of minutes,
             and number of seconds.


       </t>


           <t>
             Negative durations are typically used to schedule an
             alarm to trigger before an associated time
             (see <xref target="TRIGGER"/>).
           </t>


       <t>
         No additional content value encoding (i.e., BACKSLASH character
         encoding, see <xref target="VALUE.TEXT"/>) are defined for this value type.
       </t>
       <t hangText="Example:">
         A duration of 15 days, 5 hours, and 20 seconds would be:
         <figure>
<artwork><![CDATA[
    P15DT5H0M20S
]]></artwork>
         </figure>
         A duration of 7 weeks would be:
         <figure>
<artwork><![CDATA[
    P7W
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- VALUE.DURATION -->

 <section title="Float" anchor="VALUE.FLOAT">
   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         FLOAT
       </t>
       <t hangText="Purpose:">
         This value type is used to identify properties that contain
         a real-number value.
       </t>
       <t hangText="Format Definition:">


           This

         value type is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    float      = (["+"] / "-") 1*DIGIT ["." 1*DIGIT]
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         If the property permits, multiple "float" values are
         specified by a COMMA-separated list
         of values.
       </t>
       <t>
         No additional content value encoding (i.e., BACKSLASH character
         encoding, see <xref target="VALUE.TEXT"/>) is defined for this value type.
       </t>
       <t hangText="Example:">
         <figure>
<artwork><![CDATA[
    1000000.0000001
    1.333
    -3.14
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- VALUE.FLOAT -->

 <section title="Integer" anchor="VALUE.INTEGER">
   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         INTEGER
       </t>
       <t hangText="Purpose:">
         This value type is used to identify properties that contain
         a signed integer value.
       </t>
       <t hangText="Format Definition:">


           This

         value type is defined by the following notation: 
         <figure>
<artwork name="abnf"><![CDATA[
    integer    = (["+"] / "-") 1*DIGIT
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         If the property permits, multiple "integer" values are specified
         by a COMMA-separated list
         of values. The valid range for "integer" is -2147483648 to
         2147483647. If the sign is not specified, then the value is
         assumed to be positive.
       </t>
       <t>
         No additional content value encoding (i.e., BACKSLASH character
         encoding, see <xref target="VALUE.TEXT"/>) is defined for this value type.
       </t>
       <t hangText="Example:">
         <figure>
<artwork><![CDATA[
    1234567890
    -1234567890
    +1234567890
    432109876
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- VALUE.INTEGER -->

 <section title="Period of Time" anchor="VALUE.PERIOD">
   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         PERIOD
       </t>
       <t hangText="Purpose:">
         This value type is used to identify values that contain a
         precise period of time.
       </t>
       <t hangText="Format Definition:">


           This value

         type is defined by the following notation: 
         <figure>
<artwork name="abnf"><![CDATA[
    period     = period-explicit / period-start

    period-explicit = date-time "/" date-time
    ; [ISO.8601.2004] complete representation basic format for a
    ; period of time consisting of a start and end.  The start MUST
    ; be before the end.

    period-start = date-time "/" dur-value
    ; [ISO.8601.2004] complete representation basic format for a
    ; period of time consisting of a start and positive duration
    ; of time.
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         If the property permits, multiple "period" values are specified
         by a COMMA-separated list
         of values. There are two forms of a period of time. First,
         a period of time is identified by its start and its end. This
         format is


           based on

         the


           <xref target="ISO.8601.2004"/>

         complete
         representation, basic format for "DATE-TIME" start of the period,
         followed by a SOLIDUS character followed
         by the "DATE-TIME" of the end of the period. The start of the
         period MUST be before the end of the period.  Second, a period
         of time can also be defined by a start and a positive duration
         of time. The format is


           based on

         the


           <xref target="ISO.8601.2004"/>

         complete representation, basic format for the "DATE-TIME" start
         of the period, followed by a SOLIDUS character, followed by the


           <xref target="ISO.8601.2004"/>

         basic format for "DURATION" of the period.
       </t>
       <t hangText="Example:">
         The period starting at 18:00:00 UTC, on January 1, 1997 and
         ending at 07:00:00 UTC on January 2, 1997 would be:
         <figure>
<artwork><![CDATA[
    19970101T180000Z/19970102T070000Z
]]></artwork>
         </figure>
         The period start at 18:00:00 on January 1, 1997 and lasting 5
         hours and 30 minutes would be:
         <figure>
<artwork><![CDATA[
    19970101T180000Z/PT5H30M
]]></artwork>
         </figure>
         No additional content value encoding (i.e., BACKSLASH character
         encoding, see <xref target="VALUE.TEXT"/>) is defined for this value type.
       </t>
     </list>
   </t>
 </section><!-- VALUE.PERIOD -->

 <section title="Recurrence Rule" anchor="VALUE.RECUR">













   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         RECUR
       </t>
       <t hangText="Purpose:">
         This value type is used to identify properties that contain
         a recurrence rule specification.
       </t>
       <t hangText="Format Definition:">


           This

         value type is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    recur           = recur-rule-part *( ";" recur-rule-part )
                    ;
                    ; The rule parts are not ordered in any
                    ; particular sequence.
                    ;
                    ; The FREQ rule part is REQUIRED,
                    ; but MUST NOT occur more than once.
                    ;
                    ; The UNTIL or COUNT rule parts are OPTIONAL,
                    ; but they MUST NOT occur in the same 'recur'.
                    ;
                    ; The other rule parts are OPTIONAL,
                    ; but MUST NOT occur more than once.

    recur-rule-part = ( "FREQ" "=" freq )
                    / ( "UNTIL" "=" enddate )
                    / ( "COUNT" "=" 1*DIGIT )
                    / ( "INTERVAL" "=" 1*DIGIT )
                    / ( "BYSECOND" "=" byseclist )
                    / ( "BYMINUTE" "=" byminlist )
                    / ( "BYHOUR" "=" byhrlist )
                    / ( "BYDAY" "=" bywdaylist )
                    / ( "BYMONTHDAY" "=" bymodaylist )
                    / ( "BYYEARDAY" "=" byyrdaylist )
                    / ( "BYWEEKNO" "=" bywknolist )
                    / ( "BYMONTH" "=" bymolist )
                    / ( "BYSETPOS" "=" bysplist )
                    / ( "WKST" "=" weekday ) 

    freq        = "SECONDLY" / "MINUTELY" / "HOURLY" / "DAILY"
                / "WEEKLY" / "MONTHLY" / "YEARLY"

    enddate     = date / date-time

    byseclist   = ( seconds *("," seconds) )

    seconds     = 1*2DIGIT       ;0 to 60

    byminlist   = ( minutes *("," minutes) )

    minutes     = 1*2DIGIT       ;0 to 59

    byhrlist    = ( hour *("," hour) )

    hour        = 1*2DIGIT       ;0 to 23

    bywdaylist  = ( weekdaynum *("," weekdaynum) )

    weekdaynum  = [[plus / minus] ordwk] weekday

    plus        = "+"

    minus       = "-"

    ordwk       = 1*2DIGIT       ;1 to 53

    weekday     = "SU" / "MO" / "TU" / "WE" / "TH" / "FR" / "SA"
    ;Corresponding to SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY,
    ;FRIDAY, and SATURDAY days of the week.

    bymodaylist = ( monthdaynum *("," monthdaynum) )

    monthdaynum = [plus / minus] ordmoday

    ordmoday    = 1*2DIGIT       ;1 to 31

    byyrdaylist = ( yeardaynum *("," yeardaynum) )

    yeardaynum  = [plus / minus] ordyrday

    ordyrday    = 1*3DIGIT      ;1 to 366

    bywknolist  = ( weeknum *("," weeknum) )

    weeknum     = [plus / minus] ordwk

    bymolist    = ( monthnum *("," monthnum) )

    monthnum    = 1*2DIGIT       ;1 to 12

    bysplist    = ( setposday *("," setposday) )

    setposday   = yeardaynum
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">





           This

         value type is a structured value consisting of a
         list of one or more recurrence grammar parts. Each rule part is
         defined by a NAME=VALUE pair. The rule parts are separated from
         each other by the SEMICOLON character.
         The rule parts are not ordered in any particular sequence.
         Individual rule parts MUST only be specified once.


             Compliant applications MUST accept rule parts
             ordered in any sequence, but to ensure backward
             compatibility with applications that pre-date this
             revision of iCalendar the FREQ rule part MUST be the
             first rule part specified in a RECUR value.


       </t>
       <t>
         The FREQ rule part identifies the type of recurrence rule. This
         rule part MUST be specified in the recurrence rule.
         Valid values include SECONDLY, to specify repeating events based
         on an interval of a second or more; MINUTELY, to specify repeating
         events based on an interval of a minute or more; HOURLY, to
         specify repeating events based on an interval of an hour or
         more; DAILY, to specify repeating events based on an interval
         of a day or more; WEEKLY, to specify repeating events based on
         an interval of a week or more; MONTHLY, to specify repeating
         events based on an interval of a month or more; and YEARLY, to
         specify repeating events based on an interval of a year or more.
       </t>
       <t> 
         The INTERVAL rule part contains a positive integer representing



             at which intervals


         the recurrence rule repeats.
         The default value is "1", meaning
         every second for a SECONDLY rule,



         every minute for a MINUTELY rule,
         every hour for an HOURLY rule,
         every day for a DAILY rule,
         every week for a WEEKLY rule,
         every month for a MONTHLY
         rule,
         and every year for a YEARLY rule.


             For example, within a DAILY rule,
             a value of "8" means every eight days.


       </t>
       <t> 
         The UNTIL rule part defines a


           DATE or DATE-TIME

         value that bounds the recurrence rule in an inclusive manner.
         If the value specified by UNTIL is synchronized with the
         specified recurrence, this


           DATE or DATE-TIME

         becomes the last instance of the recurrence.


             The value of the UNTIL rule part MUST have the same value
             type as the "DTSTART" property.
             Furthermore, if the "DTSTART" property is specified as a
             date with local time, then the UNTIL rule part MUST also
             be specified as a date with local time. If the
             "DTSTART" property is specified as a date with UTC time
             or a date with local time and time zone reference, then
             the UNTIL rule part MUST be specified as a date with UTC
             time.
             In the case of the "STANDARD" and "DAYLIGHT" sub-components
             the UNTIL rule part MUST always be specified as a date with
             UTC time.


         If specified as a


           DATE-TIME

         value, then it MUST be specified in


          a

         UTC time format. If not present, and the COUNT rule part is
         also not present, the "RRULE" is considered to repeat forever.
       </t>
       <t> 
         The COUNT rule part defines the number of occurrences at which
         to range-bound the recurrence. The "DTSTART" property
         value

           always
          counts as the first occurrence.
       </t>
       <t> 
         The BYSECOND rule part specifies a COMMA-separated list of
         seconds within a minute. Valid
         values are 0 to 60. The BYMINUTE rule part specifies a
         COMMA-separated list of minutes
         within an hour. Valid values are 0 to 59. The BYHOUR rule part
         specifies a COMMA-separated list of hours of the day.
         Valid values are 0 to 23.


             The BYSECOND, BYMINUTE and BYHOUR rule parts MUST NOT be
             specified when the associated "DTSTART" property has a DATE
             value type. These rule parts MUST be ignored in RECUR value
             that violate the above requirement (e.g., generated by
             applications that pre-date this revision of iCalendar). 


       </t>
       <t>
         The BYDAY rule part specifies a COMMA-separated list of days
         of the week;

           SU indicates Sunday;

         MO indicates Monday; TU indicates Tuesday;
         WE indicates Wednesday; TH indicates Thursday;
         FR indicates Friday; and SA indicates Saturday.
       </t>
       <t>
         Each BYDAY value can also be preceded by a positive (+n)
         or negative (-n) integer.
         If present, this indicates the nth occurrence of


           a

         specific day within the MONTHLY or YEARLY
         "RRULE".
         For example, within a MONTHLY rule, +1MO (or simply
         1MO) represents the first Monday within the month, whereas
         -1MO represents the last Monday of the month.


             The numeric value in a BYDAY rule part with the FREQ rule
             part set to YEARLY corresponds to an offset within the month
             when the BYMONTH rule part is present, and corresponds to
             an offset within the year when the BYWEEKNO or BYMONTH rule
             parts are present.


         If an integer modifier is not present, it means all days of this
         type within the specified frequency. For example, within a
         MONTHLY rule, MO represents all Mondays within the month.


             The BYDAY rule part MUST NOT be specified with a
             numeric value when the FREQ rule part is not set
             to MONTHLY or YEARLY.
             Furthermore, the BYDAY rule part MUST NOT be specified
             with a numeric value with the FREQ rule part set to
             YEARLY when the BYWEEKNO rule part is specified.


       </t>
       <t>
         The BYMONTHDAY rule part specifies a
         COMMA-separated list of days of the month. Valid values
         are 1 to 31 or -31 to -1. For example, -10 represents the tenth
         to the last day of the month.


             The BYMONTHDAY rule part MUST NOT be specified when
             the FREQ rule part is set to WEEKLY.


       </t>
       <t>
         The BYYEARDAY rule part specifies a COMMA-separated list of
         days of the year. Valid values
         are 1 to 366 or -366 to -1. For example, -1 represents the last
         day of the year (December 31st) and -306 represents the 306th
         to the last day of the year (March 1st).


             The BYYEARDAY rule part MUST NOT be specified when
             the FREQ rule part is set to DAILY, WEEKLY, or
             MONTHLY.


       </t>
       <t>
         The BYWEEKNO rule part specifies a COMMA-separated list of
         ordinals specifying weeks of the
         year. Valid values are 1 to 53 or -53 to -1. This corresponds
         to weeks according to week numbering as defined in


           <xref target="ISO.8601.2004"/>.
         A week is defined as a seven day period,
         starting on the day of the week defined to be the week start
         (see WKST). Week number one of the calendar year is the first
         week that contains at least four (4) days in that calendar
         year. This rule part



             MUST NOT be used when the FREQ rule part
             is set to anything other than YEARLY.


         For example, 3 represents the third week of the year.
         <list>
           <t>
             Note: Assuming a Monday week start, week 53 can only
             occur when Thursday is January 1 or if it is a leap year
             and Wednesday is January 1.
           </t>
         </list>
       </t>
       <t>
         The BYMONTH rule part specifies a COMMA-separated list of months of the year. Valid values
         are 1 to 12.
       </t>
       <t>
         The WKST rule part specifies the day on which the workweek
         starts.  Valid values are MO, TU, WE, TH, FR, SA, and SU. This is
         significant when a WEEKLY "RRULE" has an interval greater than 1,
         and a BYDAY rule part is specified. This is also significant when
         in a YEARLY "RRULE" when a BYWEEKNO rule part is specified. The
         default value is MO.
       </t>
       <t>
         The BYSETPOS rule part specifies a COMMA-separated list of
         values that corresponds to the nth occurrence within the set of


           recurrence instances

         specified by the rule.


             BYSETPOS operates on a set of recurrence instances in one
             interval of the recurrence rule.




             For example, in a WEEKLY rule, the interval would be one week




             A set of recurrence instances starts at the beginning
             of the interval defined by the FREQ rule part.


         Valid values are 1 to 366 or -366 to -1. It MUST only be
         used in conjunction with another BYxxx rule part. For example
         "the last work day of the month" could be represented as:
         <figure>
<artwork><![CDATA[
    FREQ=MONTHLY;BYDAY=MO,TU,WE,TH,FR;BYSETPOS=-1
]]></artwork>
         </figure>
         Each BYSETPOS value can include a positive (+n) or negative
         (-n) integer. If present, this indicates the nth occurrence of
         the specific occurrence within the set of


          occurrences

         specified by the rule.
       </t>
       <t>



             Recurrence rules may generate recurrence instances with an
             invalid date (e.g., February 30) or nonexistent local time
             (e.g., 1:30 AM on a day where the local time is moved
             forward by an hour at 1:00 AM). Such recurrence instances
             MUST be ignored and MUST NOT be counted as part of the
             recurrence set.


       </t>
       <t>
         Information, not contained in the rule, necessary to determine
         the various recurrence instance start time and dates are derived
         from the Start Time ("DTSTART")


           component

         attribute. For example,
         "FREQ=YEARLY;BYMONTH=1" doesn't specify a specific day within
         the month or a time. This information would be the same as what
         is specified for "DTSTART".
       </t>
       <t>
         BYxxx rule parts modify the recurrence in some manner. BYxxx rule
         parts for a period of time that is the same or greater than the
         frequency generally reduce or limit the number of occurrences of
         the recurrence generated. For example, "FREQ=DAILY;BYMONTH=1"
         reduces the number of recurrence instances from all days (if
         BYMONTH


          rule part

         is not present) to all days in January. BYxxx
         rule parts for a period of time less than the frequency
         generally increase or expand the number of occurrences of the
         recurrence. For example, "FREQ=YEARLY;BYMONTH=1,2" increases
         the number of days within the yearly recurrence set from 1
         (if BYMONTH


          rule part

         is not present) to 2.
       </t>
       <t>
         If multiple BYxxx rule parts are specified, then after evaluating
         the specified FREQ and INTERVAL rule parts, the BYxxx rule
         parts are applied to the current set of evaluated occurrences in
         the following order: BYMONTH, BYWEEKNO, BYYEARDAY, BYMONTHDAY,
         BYDAY, BYHOUR, BYMINUTE, BYSECOND and BYSETPOS; then COUNT and
         UNTIL are evaluated.
       </t>


             <t>
               The table below summarizes the dependency of BYxxx rule part
               expand or limit behavior on the FREQ rule part value.
             </t>
             <t>
               The term "N/A" means that the corresponding BYxxx rule part
               MUST NOT be used with the corresponding FREQ value.
             </t>
             <t>
               BYDAY has some special behavior depending on the FREQ value
               and this is described in separate notes below the table.
             </t><t><figure><artwork><![CDATA[
+----------+--------+--------+-------+-------+------+-------+------+
|          |SECONDLY|MINUTELY|HOURLY |DAILY  |WEEKLY|MONTHLY|YEARLY|
+----------+--------+--------+-------+-------+------+-------+------+
|BYMONTH   |Limit   |Limit   |Limit  |Limit  |Limit |Limit  |Expand|
+----------+--------+--------+-------+-------+------+-------+------+
|BYWEEKNO  |N/A     |N/A     |N/A    |N/A    |N/A   |N/A    |Expand|
+----------+--------+--------+-------+-------+------+-------+------+
|BYYEARDAY |Limit   |Limit   |Limit  |N/A    |N/A   |N/A    |Expand|
+----------+--------+--------+-------+-------+------+-------+------+
|BYMONTHDAY|Limit   |Limit   |Limit  |Limit  |N/A   |Expand |Expand|
+----------+--------+--------+-------+-------+------+-------+------+
|BYDAY     |Limit   |Limit   |Limit  |Limit  |Expand|Note 1 |Note 2|
+----------+--------+--------+-------+-------+------+-------+------+
|BYHOUR    |Limit   |Limit   |Limit  |Expand |Expand|Expand |Expand|
+----------+--------+--------+-------+-------+------+-------+------+
|BYMINUTE  |Limit   |Limit   |Expand |Expand |Expand|Expand |Expand|
+----------+--------+--------+-------+-------+------+-------+------+
|BYSECOND  |Limit   |Expand  |Expand |Expand |Expand|Expand |Expand|
+----------+--------+--------+-------+-------+------+-------+------+
|BYSETPOS  |Limit   |Limit   |Limit  |Limit  |Limit |Limit  |Limit |
+----------+--------+--------+-------+-------+------+-------+------+
]]></artwork></figure>
               <list style="hanging" hangIndent="6">
                 <t hangText="Note 1:">
                   Limit if BYMONTHDAY is present; otherwise, special
                   expand for MONTHLY.
                 </t>
                 <t hangText="Note 2:">
                   Limit if BYYEARDAY or BYMONTHDAY is present;              
                   otherwise, special expand for WEEKLY if BYWEEKNO present;  
                   otherwise, special expand for MONTHLY if BYMONTH present;  
                   otherwise, special expand for YEARLY.                      
                 </t>
               </list>
             </t>


       <t>
         Here is an example of evaluating multiple BYxxx rule parts.
         <figure>
<artwork><![CDATA[
    DTSTART;TZID=America/New_York:19970105T083000
    RRULE:FREQ=YEARLY;INTERVAL=2;BYMONTH=1;BYDAY=SU;BYHOUR=8,9;
     BYMINUTE=30
]]></artwork>
         </figure>
         First, the "INTERVAL=2" would be applied to "FREQ=YEARLY"
         to arrive at "every other year". Then, "BYMONTH=1" would be
         applied to arrive at "every January, every other year". Then,
         "BYDAY=SU" would be applied to arrive at "every Sunday in
         January, every other year".  Then, "BYHOUR=8,9" would be applied
         to arrive at "every Sunday in January at 8 AM and 9 AM, every
         other year". Then, "BYMINUTE=30" would be applied to arrive at
         "every Sunday in January at 8:30 AM and 9:30 AM, every other
         year". Then, lacking information from "RRULE", the second is
         derived from "DTSTART", to end up in "every Sunday in January
         at 8:30:00 AM and 9:30:00 AM, every other year". Similarly,
         if the BYMINUTE, BYHOUR, BYDAY, BYMONTHDAY, or BYMONTH rule part
         were missing, the appropriate minute, hour, day, or month would
         have been retrieved from the "DTSTART" property.
       </t>
       <t>


             If the computed local start time of a recurrence instance
             does not exist, or occurs more than once, for the specified
             time zone, the time of the recurrence instance is
             interpreted in the same manner as an explicit DATE-TIME
             value describing that date and time, as specified in
             <xref target="VALUE.DATE-TIME"/>.


       </t>
       <t>
         No additional content value encoding (i.e., BACKSLASH character
         encoding, see <xref target="VALUE.TEXT"/>) is defined for this value type.
       </t>
       <t hangText="Example:">
         The following is a rule that specifies 10


          occurrences

         that occur every other day:
         <figure>
<artwork><![CDATA[
    FREQ=DAILY;COUNT=10;INTERVAL=2
]]></artwork>
         </figure>
         There are other examples specified in


           <xref target="RECURRENCE_RULE"/>.

       </t>
     </list>
   </t>
 </section><!-- VALUE.RECUR -->

 <section title="Text" anchor="VALUE.TEXT">

   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         TEXT
       </t>
       <t hangText="Purpose:">
         This value type is used to identify values that contain human-readable text.
       </t>
       <t hangText="Format Definition:">





           This

         value type is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    text       = *(TSAFE-CHAR / ":" / DQUOTE / ESCAPED-CHAR)
       ; Folded according to description above

    ESCAPED-CHAR = ("\\" / "\;" / "\," / "\N" / "\n")
       ; \\ encodes \, \N or \n encodes newline
       ; \; encodes ;, \, encodes ,

    TSAFE-CHAR = WSP / %x21 / %x23-2B / %x2D-39 / %x3C-5B /
                 %x5D-7E / NON-US-ASCII
       ; Any character except CONTROLs not needed by the current
       ; character set, DQUOTE, ";", ":", "\", ","
]]></artwork>
         </figure>



       </t>
       <t hangText="Description:">
         If the property permits, multiple


           TEXT

         values are specified by
         a COMMA-separated list of values.
       </t>
       <t>
         The language in which the text is represented can be controlled
         by the "LANGUAGE" property parameter.
       </t>
       <t>
         An intentional formatted text line break MUST only be included
         in a "TEXT" property value by representing the line break with
         the character sequence of BACKSLASH,
         followed by a LATIN SMALL LETTER N
         or a LATIN CAPITAL LETTER N, that is
         "\n" or "\N".
       </t>
       <t>
         The "TEXT" property values may also contain special characters
         that are used to signify delimiters, such as a COMMA character
         for lists of values or a SEMICOLON character for structured
         values. In order to support the inclusion of these special
         characters in "TEXT" property values, they MUST be escaped
         with a BACKSLASH character. A BACKSLASH character in a
         "TEXT" property value MUST be escaped with
         another BACKSLASH character. A COMMA character in a "TEXT"
         property value MUST be escaped with a BACKSLASH character.
         A SEMICOLON character in a "TEXT"
         property value MUST be escaped with a BACKSLASH character.
         However, a COLON character in a "TEXT"
         property value SHALL NOT be escaped with a BACKSLASH character.
       </t>
       <t hangText="Example:">
         A multiple line value of:
         <figure>
<artwork><![CDATA[
    Project XYZ Final Review
    Conference Room - 3B
    Come Prepared.
]]></artwork>
         </figure>
         would be represented as:
         <figure>
<artwork><![CDATA[
    Project XYZ Final Review\nConference Room - 3B\nCome Prepared.
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- VALUE.TEXT -->

 <section title="Time" anchor="VALUE.TIME">
   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         TIME
       </t>
       <t hangText="Purpose:">
         This value type is used to identify values that contain a time
         of day.
       </t>
       <t hangText="Format Definition:">


           This

         value type is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    time         = time-hour time-minute time-second [time-utc]

    time-hour    = 2DIGIT        ;00-23
    time-minute  = 2DIGIT        ;00-59
    time-second  = 2DIGIT        ;00-60
    ;The "60" value is used to account for positive "leap" seconds.

    time-utc     = "Z"
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         If the property permits, multiple "time" values are specified
         by a COMMA-separated list of
         values. No additional content value encoding (i.e., BACKSLASH
         character encoding, see <xref target="VALUE.TEXT"/>) is defined for this value type.
       </t>
       <t>
         The "TIME"


           value

         type is used to identify values that contain a time of day.
         The format is based on the


           <xref target="ISO.8601.2004"/>

         complete representation, basic format for a time of day. The
         text format consists of a two-digit, 24-hour of the day (i.e.,
         values 00-23), two-digit minute in the hour (i.e., values 00-59),
         and two-digit seconds in the minute (i.e., values 00-60). The
         seconds value of 60 MUST only be used to account for

           positive

         "leap" seconds. Fractions of a second are not supported by
         this format.
       </t>
       <t>
         In parallel to the "DATE-TIME" definition above, the "TIME"
         value type expresses time values in three forms:
       </t>
       <t>
         The form of time with UTC offset MUST NOT be used. For example,
         the following is


           not valid

         for a time value:
         <figure>
<artwork><![CDATA[
    230000-0800        ;Invalid time format
]]></artwork>
         </figure>
       </t>
       <t>
         FORM #1 LOCAL TIME
       </t>
       <t>
         The local time form is simply a time value that does not contain
         the UTC designator nor does it reference a time zone. For
         example, 11:00 PM:
         <figure>
<artwork><![CDATA[
    230000
]]></artwork>
         </figure>
       </t>
       <t>
         Time values of this type are said to be "floating" and are
         not bound to any time zone in particular. They are used to
         represent the same hour, minute, and second value regardless
         of which time zone is currently being observed. For example,
         an event can be defined that indicates that an individual will
         be busy from 11:00 AM to 1:00 PM every day, no matter which
         time zone the person is in. In these cases, a local time can be
         specified. The recipient of an iCalendar object with a property
         value consisting of a local time, without any relative time
         zone information, SHOULD interpret the value as being fixed to
         whatever time zone the "ATTENDEE" is in at any given moment.
         This means that two


           "Attendees",

         may participate in the same event
         at different UTC times; floating time SHOULD only be used where
         that is reasonable behavior.
       </t>
       <t>
         In most cases, a fixed time is desired. To properly communicate
         a fixed time in a property value, either UTC time or local time
         with time zone reference MUST be specified.
       </t>
       <t>
         The use of local time in a TIME value without the "TZID" property
         parameter is to be interpreted as
         floating time,
         regardless of the existence of "VTIMEZONE" calendar components
         in the iCalendar object.
       </t>
       <t>
         FORM #2: UTC TIME
       </t>
       <t>
         UTC time, or absolute time, is identified by a LATIN CAPITAL LETTER Z
         suffix character, the UTC designator,
         appended to the time value. For example, the following represents
         07:00 AM UTC:
         <figure>
<artwork><![CDATA[
    070000Z
]]></artwork>
         </figure>
       </t>
       <t>
         The "TZID" property parameter MUST NOT be applied to TIME
         properties whose time values are specified in UTC.
       </t>
       <t>
         FORM #3: LOCAL TIME AND TIME ZONE REFERENCE
       </t>
       <t>
         The local time with reference to time zone information form is
         identified by the use the "TZID" property parameter to reference
         the appropriate time zone definition. "TZID" is discussed in
         detail in


           <xref target="PARAM.TZID"/>.
       </t>
       <t hangText="Example:">
         The following represents 8:30 AM in New York in winter, five
         hours behind UTC, in each of the three formats:
         <figure>
<artwork><![CDATA[
    083000
    133000Z
    TZID=America/New_York:083000
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- VALUE.TIME -->

 <section title="URI" anchor="VALUE.URI">
   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         URI
       </t>
       <t hangText="Purpose:">
         This value type is used to identify values that contain a
         uniform resource identifier (URI) type of reference to the
         property value.
       </t>
       <t hangText="Format Definition:">


           This value

         type is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    uri = <As defined in Section 3 of [RFC3986]>
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         This value type might be used to reference binary
         information, for values that are large, or otherwise undesirable to
         include directly in the iCalendar object.
       </t>
       <t>



             Property values with this value type MUST follow the
             generic URI syntax defined in <xref target="RFC3986"/>.


       </t>
       <t>



       </t>
       <t>
         When a property parameter value is a URI value type,
         the URI MUST be specified as a quoted-string value.
       </t>
       <t>
         No additional content value encoding (i.e., BACKSLASH
         character encoding, see <xref target="VALUE.TEXT"/>) is defined for this value type.
       </t>
       <t hangText="Example:">
         The following is a URI for a network file:
         <figure>
<artwork><![CDATA[
    http://example.com/my-report.txt
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- VALUE.URI -->

 <section title="UTC Offset" anchor="VALUE.UTC-OFFSET">
   <t>
     <list style="hanging">
       <t hangText="Value Name:">
         UTC-OFFSET
       </t>
       <t hangText="Purpose:">
         This value type is used to identify properties that contain an
         offset from UTC to local time.
       </t>
       <t hangText="Format Definition:">


           This value

         type is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    utc-offset = time-numzone

    time-numzone = ("+" / "-") time-hour time-minute [time-second]
]]></artwork>
         </figure>
       </t>

       <t hangText="Description:">
         The PLUS SIGN character MUST be specified
         for positive UTC offsets (i.e., ahead of UTC).


             The HYPHEN-MINUS character MUST be
             specified for negative UTC offsets (i.e., behind of UTC).


         The value of "-0000" and "-000000" are not allowed.
         The time-second, if present,


           MUST NOT

         be 60; if absent, it defaults to zero.
       </t>
       <t>
         No additional content value encoding (i.e., BACKSLASH character
         encoding, see <xref target="VALUE.TEXT"/>) is defined for this value type.
       </t>
       <t hangText="Example:">
         The following UTC offsets are given for standard time for New
         York (five hours behind UTC) and Geneva (one hour ahead of UTC):
         <figure>
<artwork><![CDATA[
    -0500

    +0100
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- VALUE.UTC-OFFSET -->
</section><!-- PROPERTY_VALUE_DATA_TYPES -->

<section title="iCalendar Object" anchor="ICALENDAR_OBJECT">

 <t>
   The Calendaring and Scheduling Core Object is a collection of
   calendaring and scheduling information. Typically, this information
   will consist of


       an iCalendar stream with


   a single iCalendar object. However, multiple
   iCalendar objects can be sequentially grouped
   together
    in an iCalendar stream.
   The first line and last line of the iCalendar object MUST contain a
   pair of iCalendar object delimiter strings. The syntax for an iCalendar


     stream

   is as follows:
   <figure>
<artwork name="abnf"><![CDATA[
    icalstream = 1*icalobject

    icalobject = "BEGIN" ":" "VCALENDAR" CRLF
                 icalbody
                 "END" ":" "VCALENDAR" CRLF
]]></artwork>
   </figure>
 </t>
 <t>
   The following is a simple example of an iCalendar object:
   <figure>
<artwork><![CDATA[
    BEGIN:VCALENDAR
    VERSION:2.0
    PRODID:-//hacksw/handcal//NONSGML v1.0//EN
    BEGIN:VEVENT
    UID:19970610T172345Z-AF23B2@example.com
    DTSTAMP:19970610T172345Z
    DTSTART:19970714T170000Z
    DTEND:19970715T040000Z
    SUMMARY:Bastille Day Party
    END:VEVENT
    END:VCALENDAR
]]></artwork>
   </figure>
 </t>
</section><!-- ICALENDAR_OBJECT -->

<section title="Property" anchor="PROPERTY">
 <t>
   A property is the definition of an individual attribute
   describing a calendar

     object

   or a calendar component. A property takes the form defined
   by the "contentline" notation defined in


     <xref target="CONTENT_LINES"/>.
 </t>
 <t>
   The following is an example of a property:
   <figure>
<artwork><![CDATA[
    DTSTART:19960415T133000Z
]]></artwork>
   </figure>
 </t>
 <t>
   This memo imposes no ordering of properties within an iCalendar
   object.
 </t>
 <t>
   Property names, parameter names, and enumerated parameter values are
   case-insensitive. For example, the property name "DUE" is the same
   as "due" and "Due", DTSTART;TZID=America/New_York:19980714T120000 is the
   same as DtStart;TzID=America/New_York:19980714T120000.
 </t>
</section><!-- PROPERTY -->

<section title="Calendar Components" anchor="CALENDAR_COMPONENTS">
 <t>
   The body of the iCalendar object consists of a sequence of
   calendar properties and one or more calendar components. The
   calendar properties are attributes that apply to the calendar

     object

   as a whole. The calendar components are collections of properties that
   express a particular calendar semantic. For example, the calendar
   component can specify an event, a to-do, a journal entry, time zone
   information,



   free/busy time information, or an alarm.
 </t>
 <t>
   The body of the iCalendar object is defined by the following
   notation:
   <figure>
<artwork name="abnf"><![CDATA[
    icalbody   = calprops component

    calprops   = *(
               ;
               ; The following are REQUIRED,
               ; but MUST NOT occur more than once.
               ;
               prodid / version /
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               calscale / method /
               ;
               ; The following are OPTIONAL,
               ; and MAY occur more than once.
               ;
               x-prop / iana-prop
               ;
               )

    component  = 1*(eventc / todoc / journalc / freebusyc /
                 timezonec / iana-comp / x-comp)

    iana-comp  = "BEGIN" ":" iana-token CRLF
                 1*contentline
                 "END" ":" iana-token CRLF

    x-comp     = "BEGIN" ":" x-name CRLF
                 1*contentline
                 "END" ":" x-name CRLF
]]></artwork>
   </figure>
 </t>

 <t>
   An iCalendar object MUST include the "PRODID" and "VERSION" calendar
   properties. In addition, it MUST include at least one calendar
   component. Special forms of iCalendar objects are possible to publish
   just busy time (i.e., only a "VFREEBUSY" calendar component) or time
   zone (i.e., only a "VTIMEZONE" calendar component) information. In
   addition, a complex iCalendar object



   that is used to capture a complete snapshot of the contents of
   a calendar

     is possible

   (e.g., composite of many different calendar components). More commonly,
   an iCalendar object will consist of just a single "VEVENT", "VTODO",
   or "VJOURNAL" calendar component.


       Applications MUST ignore x-comp and iana-comp values they
       don't recognize.




       Applications that support importing iCalendar objects SHOULD
       support all of the component types defined in this document,
       and SHOULD NOT silently drop any components as that can lead
       to user data loss.


 </t>

 <section title="Event Component" anchor="EVENT_COMPONENT">






   <t>
     <list style="hanging">
       <t hangText="Component Name:">
         VEVENT
       </t>
       <t hangText="Purpose:">
         Provide a grouping of component properties that describe
         an event. 
       </t>
       <t hangText="Format Definition:">
         A "VEVENT" calendar component is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    eventc     = "BEGIN" ":" "VEVENT" CRLF
                 eventprop *alarmc
                 "END" ":" "VEVENT" CRLF

    eventprop  = *(
               ;
               ; The following are REQUIRED,
               ; but MUST NOT occur more than once.
               ;
               dtstamp / uid /
               ;
               ; The following is REQUIRED if the component
               ; appears in an iCalendar object that doesn't
               ; specify the "METHOD" property; otherwise, it
               ; is OPTIONAL; in any case, it MUST NOT occur
               ; more than once.
               ;
               dtstart /
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               class / created / description / geo /
               last-mod / location / organizer / priority /
               seq / status / summary / transp /
               url / recurid /
               ;
               ; The following is OPTIONAL,
               ; but SHOULD NOT occur more than once.
               ;
               rrule /
               ;
               ; Either 'dtend' or 'duration' MAY appear in
               ; a 'eventprop', but 'dtend' and 'duration'
               ; MUST NOT occur in the same 'eventprop'.
               ;
               dtend / duration /
               ;
               ; The following are OPTIONAL,
               ; and MAY occur more than once.
               ;
               attach / attendee / categories / comment /
               contact / exdate / rstatus / related /
               resources / rdate / x-prop / iana-prop
               ;
               )
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         A "VEVENT" calendar component is a grouping of component
         properties, possibly including "VALARM" calendar components,
         that represents a scheduled amount of time on a calendar. For
         example, it can be an activity; such as a one-hour long,
         department meeting from 8:00 AM to 9:00 AM, tomorrow. Generally,
         an event will take up time on an individual calendar. Hence,
         the event will appear as an opaque interval in a search for busy
         time. Alternately, the event can have its Time Transparency set
         to "TRANSPARENT" in order to prevent blocking of the event in
         searches for busy time.
       </t>
       <t>
         The "VEVENT" is also the calendar component used to specify an
         anniversary or daily reminder within a calendar. These events
         have a DATE value type for the "DTSTART" property instead of
         the default value type of DATE-TIME. If such a "VEVENT" has a
         "DTEND" property, it MUST be specified as a DATE value also. The
         anniversary type of "VEVENT" can span more than one date
         (i.e.,
         "DTEND" property value is set to a calendar date after the
         "DTSTART" property value).


             If such a "VEVENT" has a "DURATION" property, it MUST be
             specified as a "dur-day" or "dur-week" value.


       </t>
       <t>
         The "DTSTART" property for a "VEVENT" specifies the inclusive
         start of the event. For recurring events, it also specifies
         the very first instance in the recurrence set. The "DTEND"
         property for a "VEVENT" calendar component specifies the
         non-inclusive end of the event. For cases where a "VEVENT"
         calendar component specifies a "DTSTART" property with a DATE


           value

         type but no "DTEND"

           nor "DURATION"

         property, the



             event's duration is taken to be one day.


         For cases where a "VEVENT" calendar component specifies
         a "DTSTART" property with a DATE-TIME value type but no "DTEND"
         property, the event ends on the same calendar date and time of
         day specified by the "DTSTART" property.
       </t>
       <t>
         The "VEVENT" calendar component cannot be nested within another
         calendar component. However, "VEVENT" calendar components can
         be related to each other or to a "VTODO" or to a "VJOURNAL"
         calendar component with the "RELATED-TO" property.
       </t>
       <t hangText="Example:">
         The following is an example of the "VEVENT" calendar component
         used to represent a meeting that will also be opaque to searches
         for busy time:
         <figure>
<artwork><![CDATA[
    BEGIN:VEVENT
    UID:19970901T130000Z-123401@example.com 
    DTSTAMP:19970901T130000Z 
    DTSTART:19970903T163000Z
    DTEND:19970903T190000Z
    SUMMARY:Annual Employee Review
    CLASS:PRIVATE
    CATEGORIES:BUSINESS,HUMAN RESOURCES
    END:VEVENT
]]></artwork>
         </figure>
       </t>
       <t>
         The following is an example of the "VEVENT" calendar component
         used to represent a reminder that will not be opaque, but rather
         transparent, to searches for busy time:
         <figure>
<artwork><![CDATA[
    BEGIN:VEVENT
    UID:19970901T130000Z-123402@example.com 
    DTSTAMP:19970901T130000Z 
    DTSTART:19970401T163000Z
    DTEND:19970402T010000Z
    SUMMARY:Laurel is in sensitivity awareness class.
    CLASS:PUBLIC
    CATEGORIES:BUSINESS,HUMAN RESOURCES
    TRANSP:TRANSPARENT
    END:VEVENT
]]></artwork>
         </figure>
       </t>
       <t>
         The following is an example of the "VEVENT" calendar component
         used to represent an anniversary that will occur annually:



         <figure>
<artwork><![CDATA[
    BEGIN:VEVENT
    UID:19970901T130000Z-123403@example.com 
    DTSTAMP:19970901T130000Z 
    DTSTART;VALUE=DATE:19971102
    SUMMARY:Our Blissful Anniversary
    TRANSP:TRANSPARENT
    CLASS:CONFIDENTIAL
    CATEGORIES:ANNIVERSARY,PERSONAL,SPECIAL OCCASION
    RRULE:FREQ=YEARLY
    END:VEVENT
]]></artwork>
         </figure>
       </t>
       <t>


             The following is an example of the "VEVENT" calendar component
             used to represent a multi-day event scheduled from June 28th,
             2007 to July 8th, 2007 inclusively. Note that the "DTEND"
             property is set to July 9th, 2007, since the "DTEND" property
             specifies the non-inclusive end of the event.
             <figure>
<artwork><![CDATA[
    BEGIN:VEVENT
    UID:20070423T123432Z-541111@example.com
    DTSTAMP:20070423T123432Z
    DTSTART;VALUE=DATE:20070628
    DTEND;VALUE=DATE:20070709
    SUMMARY:Festival International de Jazz de Montreal
    TRANSP:TRANSPARENT
    END:VEVENT
]]></artwork>
             </figure>


       </t>
     </list>
   </t>
 </section><!-- EVENT_COMPONENT -->

 <section title="To-Do Component" anchor="TO_DO_COMPONENT">


   <t>
     <list style="hanging">
       <t hangText="Component Name:">
         VTODO
       </t>
       <t hangText="Purpose:">
         Provide a grouping of calendar properties that describe a to-do.
       </t>
       <t hangText="Format Definition:">
         A "VTODO" calendar component is defined by the following notation:
       </t>
       <t>
         <figure>
<artwork name="abnf"><![CDATA[
    todoc      = "BEGIN" ":" "VTODO" CRLF
                 todoprop *alarmc
                 "END" ":" "VTODO" CRLF

    todoprop   = *(
               ;
               ; The following are REQUIRED,
               ; but MUST NOT occur more than once.
               ;
               dtstamp / uid /
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               class / completed / created / description / 
               dtstart / geo / last-mod / location / organizer /
               percent / priority / recurid / seq / status /
               summary / url /
               ;
               ; The following is OPTIONAL,
               ; but SHOULD NOT occur more than once.
               ;
               rrule /
               ;
               ; Either 'due' or 'duration' MAY appear in
               ; a 'todoprop', but 'due' and 'duration'
               ; MUST NOT occur in the same 'todoprop'.
               ; If 'duration' appear in a 'todoprop',
               ; then 'dtstart' MUST also appear in
               ; the same 'todoprop'.
               ;
               due / duration /
               ;
               ; The following are OPTIONAL,
               ; and MAY occur more than once.
               ;
               attach / attendee / categories / comment / contact /
               exdate / rstatus / related / resources /
               rdate / x-prop / iana-prop
               ;
               )
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         A "VTODO" calendar component is a grouping of component
         properties and possibly "VALARM" calendar components that
         represent an action-item or assignment. For example, it can be
         used to represent an item of work assigned to an individual;
         such as "turn in travel expense today".
       </t>
       <t>
         The "VTODO" calendar component cannot be nested within another
         calendar component. However, "VTODO" calendar components can
         be related to each other or to a


           "VEVENT"

         or to a "VJOURNAL" calendar component with the "RELATED-TO"
         property.
       </t>
       <t>
         A "VTODO" calendar component without the "DTSTART" and "DUE" (or
         "DURATION") properties specifies a to-do that will be associated
         with each successive calendar date, until it is completed.
       </t>
       <t hangText="Examples:">


             The following is an example of a "VTODO" calendar component
             that needs to be completed before May 1st, 2007.
             On midnight May 1st, 2007 this to-do would be considered
             overdue.
             <figure>
<artwork><![CDATA[
    BEGIN:VTODO
    UID:20070313T123432Z-456553@example.com
    DTSTAMP:20070313T123432Z
    DUE;VALUE=DATE:20070501
    SUMMARY:Submit Quebec Income Tax Return for 2006
    CLASS:CONFIDENTIAL
    CATEGORIES:FAMILY,FINANCE
    STATUS:NEEDS-ACTION
    END:VTODO
]]></artwork>
             </figure>


       </t>
       <t>
         The following is an example of a "VTODO" calendar
         component

             that was due before 1:00 P.M. UTC on July 9th, 2007
             and was completed on  July 7th, 2007 at 10:00 A.M. UTC.


         <figure>
<artwork><![CDATA[
    BEGIN:VTODO
    UID:20070514T103211Z-123404@example.com
    DTSTAMP:20070514T103211Z
    DTSTART:20070514T110000Z
    DUE:20070709T130000Z
    COMPLETED:20070707T100000Z
    SUMMARY:Submit Revised Internet-Draft
    PRIORITY:1
    STATUS:NEEDS-ACTION
    END:VTODO
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- TO_DO_COMPONENT -->

 <section title="Journal Component" anchor="JOURNAL_COMPONENT">


   <t>
     <list style="hanging">
       <t hangText="Component Name:">
         VJOURNAL
       </t>
       <t hangText="Purpose:">
         Provide a grouping of component properties that describe a
         journal entry.
       </t>
       <t hangText="Format Definition:">
         A "VJOURNAL" calendar component is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    journalc   = "BEGIN" ":" "VJOURNAL" CRLF
                 jourprop
                 "END" ":" "VJOURNAL" CRLF

    jourprop   = *(
               ;
               ; The following are REQUIRED,
               ; but MUST NOT occur more than once.
               ;
               dtstamp / uid /
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               class / created / dtstart / 
               last-mod / organizer / recurid / seq /
               status / summary / url /
               ;
               ; The following is OPTIONAL,
               ; but SHOULD NOT occur more than once.
               ;
               rrule /
               ;
               ; The following are OPTIONAL,
               ; and MAY occur more than once.
               ;
               attach / attendee / categories / comment /
               contact / description / exdate / related / rdate /
               rstatus / x-prop / iana-prop
               ;
               )
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         A "VJOURNAL" calendar component is a grouping of component
         properties that represent one or more descriptive text notes
         associated with a particular calendar date. The "DTSTART"
         property is used to specify the calendar date with which the journal
         entry is associated. Generally, it will have a DATE value
         data type, but it can also be used to specify a DATE-TIME value
         data type.  Examples of a journal entry include a daily record
         of a legislative body or a journal entry of individual telephone
         contacts for the day or an ordered list of accomplishments for
         the day. The "VJOURNAL" calendar component can also be used to
         associate a document with a calendar date.
       </t>
       <t>
         The "VJOURNAL" calendar component does not take up time on a
         calendar. Hence, it does not play a role in free or busy time
         searches


           --

         it is as though it has a time transparency value
         of TRANSPARENT. It is transparent to any such searches.
       </t>
       <t>
         The "VJOURNAL" calendar component cannot be nested within another
         calendar component. However, "VJOURNAL" calendar components
         can be related to each other or to a "VEVENT" or to a "VTODO"
         calendar component, with the "RELATED-TO" property.
       </t>
       <t hangText="Example:">
         The following is an example of the "VJOURNAL" calendar component:
         <figure>
<artwork><![CDATA[
    BEGIN:VJOURNAL
    UID:19970901T130000Z-123405@example.com 
    DTSTAMP:19970901T130000Z 
    DTSTART;VALUE=DATE:19970317
    SUMMARY:Staff meeting minutes
    DESCRIPTION:1. Staff meeting: Participants include Joe\,
      Lisa\, and Bob. Aurora project plans were reviewed.
      There is currently no budget reserves for this project.
      Lisa will escalate to management. Next meeting on Tuesday.\n
      2. Telephone Conference: ABC Corp. sales representative
      called to discuss new printer. Promised to get us a demo by
      Friday.\n3. Henry Miller (Handsoff Insurance): Car was
      totaled by tree. Is looking into a loaner car. 555-2323
      (tel).
    END:VJOURNAL
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- JOURNAL_COMPONENT -->

 <section title="Free/Busy Component" anchor="FREE_BUSY_COMPONENT">


   <t>
     <list style="hanging">
       <t hangText="Component Name:">
         VFREEBUSY
       </t>
       <t hangText="Purpose:">
         Provide a grouping of component properties that describe either
         a request for free/busy time, describe a response to a request
         for free/busy time, or describe a published set of busy time.
       </t>
       <t hangText="Format Definition:">
         A "VFREEBUSY" calendar component is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    freebusyc  = "BEGIN" ":" "VFREEBUSY" CRLF
                 fbprop
                 "END" ":" "VFREEBUSY" CRLF

    fbprop     = *(
               ;
               ; The following are REQUIRED,
               ; but MUST NOT occur more than once.
               ;
               dtstamp / uid /
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               contact / dtstart / dtend /
               organizer / url /
               ;
               ; The following are OPTIONAL,
               ; and MAY occur more than once.
               ;
               attendee / comment / freebusy / rstatus / x-prop /
               iana-prop
               ;
               )
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         A "VFREEBUSY" calendar component is a grouping of component
         properties that represents either a request for free or busy time information,  a reply to a
         request for free or busy time information, or a published set
         of busy time information.
       </t>
       <t>
         When used to request free/busy time information, the "ATTENDEE"
         property specifies the calendar users whose free/busy time is being
         requested; the "ORGANIZER" property specifies the calendar user who
         is requesting the free/busy time; the "DTSTART" and "DTEND"
         properties specify the window of time for which the free/busy time is
         being requested; the "UID" and "DTSTAMP" properties are specified to
         assist in proper sequencing of multiple free/busy time requests.
       </t>
       <t>
         When used to reply to a request for free/busy time, the "ATTENDEE"
         property specifies the calendar user responding to the free/busy time
         request; the "ORGANIZER" property specifies the calendar user that
         originally requested the free/busy time; the "FREEBUSY" property
         specifies the free/busy time information (if it exists); and the
         "UID" and "DTSTAMP" properties are specified to assist in proper
         sequencing of multiple free/busy time replies.
       </t>
       <t>
         When used to publish busy time, the "ORGANIZER" property specifies
         the calendar user associated with the published busy time; the
         "DTSTART" and "DTEND" properties specify an inclusive time window
         that surrounds the busy time information; the "FREEBUSY" property
         specifies the published busy time information; and the "DTSTAMP"
         property specifies the DATE-TIME that iCalendar object was created.
       </t>

       <t>
         The "VFREEBUSY" calendar component cannot be nested within another
         calendar component. Multiple "VFREEBUSY" calendar components can be
         specified within an iCalendar object. This permits the grouping of
         free/busy information into logical collections, such as monthly
         groups of busy time information.
       </t>
       <t>
         The "VFREEBUSY" calendar component is intended for use in iCalendar
         object methods involving requests for free time, requests for busy
         time, requests for both free and busy, and the associated replies.
       </t>
       <t>
         Free/Busy information is represented with the "FREEBUSY" property.
         This property provides a terse representation of time periods. One or
         more "FREEBUSY" properties can be specified in the "VFREEBUSY"
         calendar component.
       </t>
       <t>
         When present in a "VFREEBUSY" calendar component, the "DTSTART" and
         "DTEND" properties SHOULD be specified prior to any "FREEBUSY"
         properties.



       </t>
       <t>
        The recurrence properties ("RRULE",


        "RDATE", "EXDATE") are not permitted within a "VFREEBUSY" calendar
        component. Any recurring events are resolved into their individual
        busy time periods using the "FREEBUSY" property.
       </t>
       <t hangText="Example:">
         The following is an example of a "VFREEBUSY" calendar component
         used to request free or busy time information:
         <figure>
<artwork><![CDATA[
    BEGIN:VFREEBUSY
    UID:19970901T082949Z-FA43EF@example.com 
    ORGANIZER:mailto:jane_doe@example.com
    ATTENDEE:mailto:john_public@example.com
    DTSTART:19971015T050000Z
    DTEND:19971016T050000Z
    DTSTAMP:19970901T083000Z
    END:VFREEBUSY
]]></artwork>
         </figure>
       </t>
       <t>
         The following is an example of a "VFREEBUSY" calendar component
         used to reply to the request with busy time information:
         <figure>
<artwork><![CDATA[
    BEGIN:VFREEBUSY
    UID:19970901T095957Z-76A912@example.com 
    ORGANIZER:mailto:jane_doe@example.com
    ATTENDEE:mailto:john_public@example.com
    DTSTAMP:19970901T100000Z
    FREEBUSY:19971015T050000Z/PT8H30M,
     19971015T160000Z/PT5H30M,19971015T223000Z/PT6H30M
    URL:http://example.com/pub/busy/jpublic-01.ifb
    COMMENT:This iCalendar file contains busy time information for
      the next three months.
    END:VFREEBUSY
]]></artwork>
         </figure>
       </t>
       <t>
         The following is an example of a "VFREEBUSY" calendar component
         used to publish busy time information:
         <figure>
<artwork><![CDATA[
    BEGIN:VFREEBUSY
    UID:19970901T115957Z-76A912@example.com
    DTSTAMP:19970901T120000Z 
    ORGANIZER:jsmith@example.com
    DTSTART:19980313T141711Z
    DTEND:19980410T141711Z
    FREEBUSY:19980314T233000Z/19980315T003000Z
    FREEBUSY:19980316T153000Z/19980316T163000Z
    FREEBUSY:19980318T030000Z/19980318T040000Z
    URL:http://www.example.com/calendar/busytime/jsmith.ifb
    END:VFREEBUSY
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- FREE_BUSY_COMPONENT -->

 <section title="Time Zone Component" anchor="TIME_ZONE_COMPONENT">







   <t>
     <list style="hanging">
       <t hangText="Component Name:">
         VTIMEZONE
       </t>
       <t hangText="Purpose:">
         Provide a grouping of component properties that defines a
         time zone.
       </t>
       <t hangText="Format Definition:">
         A "VTIMEZONE" calendar component is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    timezonec  = "BEGIN" ":" "VTIMEZONE" CRLF
                 *(
                 ;
                 ; 'tzid' is REQUIRED, but MUST NOT occur more
                 ; than once.
                 ;
                 tzid /
                 ;
                 ; 'last-mod' and 'tzurl' are OPTIONAL,
                 ; but MUST NOT occur more than once.
                 ;
                 last-mod / tzurl /
                 ;
                 ; One of 'standardc' or 'daylightc' MUST occur
                 ; and each MAY occur more than once.
                 ;
                 standardc / daylightc /
                 ;
                 ; The following are OPTIONAL,
                 ; and MAY occur more than once.
                 ;
                 x-prop / iana-prop
                 ;
                 )
                 "END" ":" "VTIMEZONE" CRLF

    standardc  = "BEGIN" ":" "STANDARD" CRLF
                 tzprop
                 "END" ":" "STANDARD" CRLF

    daylightc  = "BEGIN" ":" "DAYLIGHT" CRLF
                 tzprop
                 "END" ":" "DAYLIGHT" CRLF

    tzprop     = *(
                 ;
                 ; The following are REQUIRED,
                 ; but MUST NOT occur more than once.
                 ;
                 dtstart / tzoffsetto / tzoffsetfrom /
                 ;
                 ; The following is OPTIONAL,
                 ; but SHOULD NOT occur more than once.
                 ;
                 rrule /
                 ; 
                 ; The following are OPTIONAL,
                 ; and MAY occur more than once.
                 ;
                 comment / rdate / tzname / x-prop / iana-prop
                 ;
                 )
]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         A time zone is unambiguously defined by the set of time
         measurement rules determined by the governing body for a given
         geographic area. These rules describe, at a minimum, the base  offset
         from UTC for the time zone, often referred to as the Standard Time
         offset. Many locations adjust their Standard Time forward or backward
         by one hour, in order to accommodate seasonal changes in number of
         daylight hours, often referred to as Daylight Saving Time. Some
         locations adjust their time by a fraction of an hour. Standard Time
         is also known as Winter Time. Daylight Saving Time is also known as
         Advanced Time, Summer Time, or Legal Time in certain countries. The
         following table shows the changes in time zone rules in effect for
         New York City starting from 1967. Each line represents a description
         or rule for a particular observance.
       </t>
     </list>
   </t>
<?rfc rfcedstyle="no" ?>
   <texttable>
     <preamble>Effective Observance Rule</preamble>
     <ttcol>Date</ttcol>
     <ttcol>(Date-Time)</ttcol>
     <ttcol>Offset</ttcol>
     <ttcol>Abbreviation</ttcol>

     <c>1967-1973</c>
     <c>last Sun in Apr, 02:00</c>
     <c>-0400</c>
     <c>EDT</c>

     <c>1967-2006</c>
     <c>last Sun in Oct, 02:00</c>
     <c>-0500</c>
     <c>EST</c>

     <c>1974-1974</c>
     <c>Jan 6,  02:00</c>
     <c>-0400</c>
     <c>EDT</c>

     <c>1975-1975</c>
     <c>Feb 23, 02:00</c>
     <c>-0400</c>
     <c>EDT</c>

     <c>1976-1986</c>
     <c>last Sun in Apr, 02:00</c>
     <c>-0400</c>
     <c>EDT</c>

     <c>1987-2006</c>
     <c>first Sun in Apr, 02:00</c>
     <c>-0400</c>
     <c>EDT</c>

     <c>

         2007-*

     </c>
     <c>

         second Sun in Mar, 02:00

     </c>
     <c>

         -0400

     </c>
     <c>

         EDT

     </c>

     <c>

         2007-*

     </c>
     <c>

         first Sun in Nov, 02:00

     </c>
     <c>

         -0500

     </c>
     <c>

         EST

     </c>

   </texttable>
<?rfc rfcedstyle="yes" ?>
   <t>
     <list style="hanging" hangIndent="6">
       <t>
         Note: The specification of a global time zone registry is
         not addressed by this document and is left for future study.
         However, implementers may find the


           TZ database

         <xref target="TZDB"/> a useful reference.
         It is an informal,
         public-domain collection of time zone information, which is
         currently being maintained by volunteer Internet participants,
         and is used in several operating systems. This database contains
         current and historical time zone information for a wide variety
         of locations around the globe; it provides a time zone identifier
         for every unique time zone rule set in actual use since 1970,
         with historical data going back to the introduction of standard
         time.
       </t>
     </list>
     <list style="hanging">
       <t>
         Interoperability between two calendaring and scheduling applications,
         especially for recurring events, to-dos or journal entries, is
         dependent on the ability to capture and convey date and time
         information in an unambiguous format. The specification of current
         time zone information is integral to this behavior.
       </t>
       <t>
         If present, the "VTIMEZONE" calendar component defines the set of
         Standard Time and Daylight Saving Time observances (or rules) for a
         particular time zone for a given interval of time. The "VTIMEZONE"
         calendar component cannot be nested within other calendar components.
         Multiple "VTIMEZONE" calendar components can exist in an iCalendar
         object. In this situation, each "VTIMEZONE" MUST represent a unique
         time zone definition. This is necessary for some classes of events,
         such as airline flights, that start in one time zone and end in
         another.
       </t>
       <t>



       </t>
       <t>
         The "VTIMEZONE" calendar component MUST include the "TZID" property
         and at least one definition of a


           "STANDARD"

         or


           "DAYLIGHT"


           sub-component.
         The


           "STANDARD"

         or


           "DAYLIGHT"


           sub-component
         MUST include the "DTSTART", "TZOFFSETFROM", and
         "TZOFFSETTO" properties.
       </t>
       <t>
         An individual "VTIMEZONE" calendar component MUST be specified for
         each unique "TZID" parameter value specified in the iCalendar object.


             In addition, a "VTIMEZONE" calendar component, referred to
             by a recurring calendar component, MUST provide valid time
             zone information for all recurrence instances.


       </t>
       <t>
         Each "VTIMEZONE" calendar component consists of a collection of one
         or more sub-components that describe the rule for a particular
         observance (either a Standard Time or a Daylight Saving Time
         observance). The "STANDARD" sub-component consists of a collection of
         properties that describe Standard Time. The "DAYLIGHT" sub-component
         consists of a collection of properties that describe Daylight Saving
         Time. In general, this collection of properties consists of:
         <list style="symbols">
           <t>
             the first onset DATE-TIME for the observance;
           </t>
           <t>
             the last onset DATE-TIME for the observance, if a last onset
             is known;
           </t>
           <t>
             the offset to be applied for the observance;
           </t>
           <t>
             a rule that describes the day and time when the observance
             takes effect;
           </t>
           <t>
             an optional name for the observance.
           </t>
         </list>
       </t>
       <t>
         For a given time zone, there may be multiple unique definitions of
         the observances over a period of time. Each observance is described
         using either a "STANDARD" or "DAYLIGHT" sub-component. The collection
         of these sub-components is used to describe the time zone for a given
         period of time. The offset to apply at any given time is found by
         locating the observance that has the last onset date and time before
         the time in question, and using the offset value from that
         observance.
       </t>
       <t>
         The top-level properties in a "VTIMEZONE" calendar component are:
       </t>
       <t>
         The mandatory "TZID" property is a text value that uniquely
         identifies the 
         "VTIMEZONE"
         calendar component within the scope of an iCalendar object.
       </t>
       <t>
         The optional "LAST-MODIFIED" property is a UTC value that specifies
         the date and time that this time zone definition was last updated.
       </t>
       <t>
         The optional "TZURL" property is a url value
         that points to a published "VTIMEZONE" definition. "TZURL" SHOULD
         refer to a resource that is accessible by anyone who might
         need to interpret the object. This SHOULD NOT normally be a

         "file"
         URL or other URL that is not widely accessible.
       </t>
       <t>
         The collection of properties that are used to define the "STANDARD" and
         "DAYLIGHT" sub-components include:
       </t>
       <t>
         The mandatory "DTSTART" property gives the effective onset date and
         local time for the time zone sub-component definition. "DTSTART" in
         this usage MUST be specified as a


           date with a local time

         value.
       </t>
       <t>
         The mandatory "TZOFFSETFROM" property gives the UTC offset that is
         in use when the onset of this time zone observance begins.
         "TZOFFSETFROM" is combined with "DTSTART" to define the effective
         onset for the time zone sub-component definition. For example, the
         following represents the time at which the observance of Standard
         Time took effect in Fall 1967 for New York City:
         <figure>
<artwork><![CDATA[
    DTSTART:19671029T020000

    TZOFFSETFROM:-0400
]]></artwork>
         </figure>
         The mandatory "TZOFFSETTO" property gives the UTC offset for the
         time zone sub-component (Standard Time or Daylight Saving Time) when
         this observance is in use.
       </t>
       <t>
         The optional "TZNAME" property is the customary name for the
         time zone.



         This could be used for displaying dates.
       </t>
       <t>


           The

         onset

           DATE-TIME values

         for the observance defined by the time zone sub-component
         is defined by



         the

           "DTSTART",

         "RRULE", and 
         "RDATE"


           properties.


       </t>
       <t>
         The "RRULE" property defines the recurrence rule for the onset of the
         observance defined by this time zone sub-component. Some specific
         requirements for the usage of "RRULE" for this purpose include:
         <list style="symbols">
           <t>
             If observance is known to have an effective end date, the
             "UNTIL" recurrence rule parameter MUST be used to specify the
             last valid onset of this observance (i.e., the UNTIL DATE-TIME
             will be equal to the last instance generated by the recurrence
             pattern). It MUST be specified in UTC time.
           </t>
           <t>
             The "DTSTART" and the


               "TZOFFSETFROM"

             properties MUST be used when generating the onset DATE-TIME
             values (instances) from the
             "RRULE".
           </t>
         </list>
       </t>
       <t>


           The

         "RDATE" property can

           also

         be used to define the onset of the observance by giving the
         individual onset date and times. "RDATE" in this usage MUST
         be specified as a


           date with local time

         value, relative to the UTC offset specified
         in the "TZOFFSETFROM" property.
       </t>
       <t>
         The optional "COMMENT" property is also allowed for descriptive
         explanatory text.
       </t>
       <t hangText="Example:">
         The following are examples of the "VTIMEZONE" calendar
         component:
       </t>


           <t>
            This is an example showing all the time zone rules for
            New York City since April 30, 1967 at 03:00:00 EDT.
            <figure>
<artwork><![CDATA[
    BEGIN:VTIMEZONE
    TZID:America/New_York
    LAST-MODIFIED:20050809T050000Z
    BEGIN:DAYLIGHT
    DTSTART:19670430T020000
    RRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=-1SU;UNTIL=19730429T070000Z
    TZOFFSETFROM:-0500
    TZOFFSETTO:-0400
    TZNAME:EDT
    END:DAYLIGHT
    BEGIN:STANDARD
    DTSTART:19671029T020000
    RRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU;UNTIL=20061029T060000Z
    TZOFFSETFROM:-0400
    TZOFFSETTO:-0500
    TZNAME:EST
    END:STANDARD
    BEGIN:DAYLIGHT
    DTSTART:19740106T020000
    RDATE:19750223T020000
    TZOFFSETFROM:-0500
    TZOFFSETTO:-0400
    TZNAME:EDT
    END:DAYLIGHT
    BEGIN:DAYLIGHT
    DTSTART:19760425T020000
    RRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=-1SU;UNTIL=19860427T070000Z
    TZOFFSETFROM:-0500
    TZOFFSETTO:-0400
    TZNAME:EDT
    END:DAYLIGHT
    BEGIN:DAYLIGHT
    DTSTART:19870405T020000
    RRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU;UNTIL=20060402T070000Z
    TZOFFSETFROM:-0500
    TZOFFSETTO:-0400
    TZNAME:EDT
    END:DAYLIGHT
    BEGIN:DAYLIGHT
    DTSTART:20070311T020000
    RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU
    TZOFFSETFROM:-0500
    TZOFFSETTO:-0400
    TZNAME:EDT
    END:DAYLIGHT
    BEGIN:STANDARD
    DTSTART:20071104T020000
    RRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU
    TZOFFSETFROM:-0400
    TZOFFSETTO:-0500
    TZNAME:EST
    END:STANDARD
    END:VTIMEZONE
]]></artwork>
             </figure>
           </t>


       <t>
         This is an example showing time zone information for


           New York City

         using


           only the "DTSTART"

         property. Note that this is only suitable
         for a recurring event that starts on or later than


           March 11, 2007

         at 03:00:00 EDT (i.e., the earliest effective transition
         date and time) and ends no later than


           March 9, 2008 at 01:59:59 EST

         (i.e., latest valid date and time for EST in this scenario).
         For example, this can be used for a recurring event that occurs
         every Friday,

         8:00 A.M.-9:00 A.M.,
         starting June 1,

         2007,
         ending December 31,

         2007,
         <figure>
<artwork><![CDATA[
    BEGIN:VTIMEZONE
    TZID:America/New_York
    LAST-MODIFIED:20050809T050000Z
    BEGIN:STANDARD
    DTSTART:20071104T020000
    TZOFFSETFROM:-0400
    TZOFFSETTO:-0500
    TZNAME:EST
    END:STANDARD
    BEGIN:DAYLIGHT
    DTSTART:20070311T020000
    TZOFFSETFROM:-0500
    TZOFFSETTO:-0400
    TZNAME:EDT
    END:DAYLIGHT
    END:VTIMEZONE
]]></artwork>
         </figure>
       </t>
       <t>
         This is a simple example showing the current time zone rules for


           New York City

         using a "RRULE"
         recurrence pattern. Note that there is no effective end date to
         either of the Standard Time or Daylight Time rules. This
         information would be valid for a recurring event starting
         today and continuing indefinitely.
         <figure>
<artwork><![CDATA[
    BEGIN:VTIMEZONE
    TZID:America/New_York
    LAST-MODIFIED:20050809T050000Z
    TZURL:http://zones.example.com/tz/America-New_York.ics
    BEGIN:STANDARD
    DTSTART:20071104T020000
    RRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU
    TZOFFSETFROM:-0400
    TZOFFSETTO:-0500
    TZNAME:EST
    END:STANDARD
    BEGIN:DAYLIGHT
    DTSTART:20070311T020000
    RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU
    TZOFFSETFROM:-0500
    TZOFFSETTO:-0400
    TZNAME:EDT
    END:DAYLIGHT
    END:VTIMEZONE
]]></artwork>
         </figure>
       </t>
       <t>
         This is an example showing a



             set of rules for a fictitious time zone


         where the Daylight Time rule has an effective end date
         (i.e., after that date, Daylight Time is no longer observed).
         <figure>
<artwork><![CDATA[
    BEGIN:VTIMEZONE
    TZID:Fictitious
    LAST-MODIFIED:19870101T000000Z
    BEGIN:STANDARD
    DTSTART:19671029T020000
    RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10
    TZOFFSETFROM:-0400
    TZOFFSETTO:-0500
    TZNAME:EST
    END:STANDARD
    BEGIN:DAYLIGHT
    DTSTART:19870405T020000
    RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4;UNTIL=19980404T070000Z
    TZOFFSETFROM:-0500
    TZOFFSETTO:-0400
    TZNAME:EDT
    END:DAYLIGHT
    END:VTIMEZONE
]]></artwork>
         </figure>
       </t>
       <t>
         This is an example showing a



             set of rules for a fictitious time zone


         where the first Daylight Time rule has an effective end date.
         There is a second Daylight Time rule that picks up where the
         other left off.
         <figure>
<artwork><![CDATA[
    BEGIN:VTIMEZONE
    TZID:Fictitious
    LAST-MODIFIED:19870101T000000Z
    BEGIN:STANDARD
    DTSTART:19671029T020000
    RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10
    TZOFFSETFROM:-0400
    TZOFFSETTO:-0500
    TZNAME:EST
    END:STANDARD
    BEGIN:DAYLIGHT
    DTSTART:19870405T020000
    RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4;UNTIL=19980404T070000Z
    TZOFFSETFROM:-0500
    TZOFFSETTO:-0400
    TZNAME:EDT
    END:DAYLIGHT
    BEGIN:DAYLIGHT
    DTSTART:19990424T020000
    RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=4
    TZOFFSETFROM:-0500
    TZOFFSETTO:-0400
    TZNAME:EDT
    END:DAYLIGHT
    END:VTIMEZONE
]]></artwork>
         </figure>
       </t>
     </list>
   </t>
 </section><!-- TIME_ZONE_COMPONENT -->

 <section title="Alarm Component" anchor="ALARM_COMPONENT">


   <t>
     <list style="hanging">
       <t hangText="Component Name:">
         VALARM
       </t>
       <t hangText="Purpose:">
         Provide a grouping of component properties that define an alarm.
       </t>
       <t hangText="Format Definition:">
         A "VALARM" calendar component is defined by the following notation:
         <figure>
<artwork name="abnf"><![CDATA[
    alarmc     = "BEGIN" ":" "VALARM" CRLF
                 (audioprop / dispprop / emailprop)
                 "END" ":" "VALARM" CRLF

    audioprop  = *(
               ;
               ; 'action' and 'trigger' are both REQUIRED,
               ; but MUST NOT occur more than once.
               ;
               action / trigger /
               ;
               ; 'duration' and 'repeat' are both OPTIONAL,
               ; and MUST NOT occur more than once each;
               ; but if one occurs, so MUST the other.
               ;
               duration / repeat /
               ;
               ; The following is OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               attach /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               x-prop / iana-prop
               ;
               )

    dispprop   = *(
               ;
               ; The following are REQUIRED,
               ; but MUST NOT occur more than once.
               ;
               action / description / trigger /
               ;
               ; 'duration' and 'repeat' are both OPTIONAL,
               ; and MUST NOT occur more than once each;
               ; but if one occurs, so MUST the other.
               ;
               duration / repeat /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               x-prop / iana-prop
               ;
               )

    emailprop  = *(
               ;
               ; The following are all REQUIRED,
               ; but MUST NOT occur more than once.
               ;
               action / description / trigger / summary /
               ;
               ; The following is REQUIRED,
               ; and MAY occur more than once.
               ;
               attendee /
               ;
               ; 'duration' and 'repeat' are both OPTIONAL,
               ; and MUST NOT occur more than once each;
               ; but if one occurs, so MUST the other.
               ;
               duration / repeat /
               ;
               ; The following are OPTIONAL,
               ; and MAY occur more than once.
               ;
               attach / x-prop / iana-prop
               ;
               )

]]></artwork>
         </figure>
       </t>
       <t hangText="Description:">
         A "VALARM" calendar component is a grouping of component
         properties that is a reminder or alarm for an event or a to-do. For
         example, it may be used to define a reminder for a pending event or
         an overdue to-do.
       </t>
       <t>
         The "VALARM" calendar component MUST include the "ACTION" and
         "TRIGGER" properties. The "ACTION" property further constrains the
         "VALARM" calendar component in the following ways:
       </t>
       <t>
         When the action is "AUDIO", the alarm can also include one and only
         one "ATTACH" property, which MUST point to a sound resource, which is
         rendered when the alarm is triggered.
       </t>
       <t>
         When the action is "DISPLAY", the alarm MUST also include a
         "DESCRIPTION" property, which contains the text to be displayed when
         the alarm is triggered.
       </t>
       <t>
         When the action is "EMAIL", the alarm MUST include a "DESCRIPTION"
         property, which contains the text to be used as the message body, a
         "SUMMARY" property, which contains the text to be used as the message
         subject, and one or more "ATTENDEE" properties, which contain the
         email address of attendees to receive the message. It can also
         include one or more "ATTACH" properties, which are intended to be
         sent as message attachments. When the alarm is triggered, the email
         message is sent.
       </t>



       <t>
         The "VALARM" calendar component MUST only appear within either a
         "VEVENT" or "VTODO" calendar component. "VALARM" calendar components
         cannot be nested. Multiple mutually independent "VALARM" calendar
         components can be specified for a single "VEVENT" or "VTODO" calendar
         component.
       </t>
       <t>
         The "TRIGGER" property specifies when the alarm will be triggered.
         The "TRIGGER" property specifies a duration prior to the start of an
         event or a to-do. The "TRIGGER" edge may be explicitly set to be
         relative to the "START" or "END" of the event or to-do with the
         "RELATED" parameter of the "TRIGGER" property. The "TRIGGER" property
         value type can alternatively be set to an absolute calendar date


           with UTC time.

       </t>
       <t>
         In an alarm set to trigger on the "START" of an event or to-do, the
         "DTSTART" property MUST be present in the associated event or to-do.
         In an alarm in a "VEVENT" calendar component set to trigger on the
         "END" of the event, either the "DTEND" property MUST be present, or
         the "DTSTART" and "DURATION" properties MUST both be present. In an
         alarm in a "VTODO" calendar component set to trigger on the "END" of
         the to-do, either the "DUE" property MUST be present, or the
         "DTSTART" and "DURATION" properties MUST both be present.
       </t>
       <t>
         The alarm can be defined such that it triggers repeatedly. A
         definition of an alarm with a repeating trigger MUST include
         both the "DURATION" and "REPEAT" properties. The "DURATION"
         property specifies the delay period, after which the alarm will
         repeat. The "REPEAT" property specifies the number of additional
         repetitions that the alarm will be triggered.
         This 
         repetition
         count is in addition to the initial triggering of the alarm. Both
         of these properties MUST be present in order to specify a
         repeating alarm. If one of these two properties is absent,
         then the alarm will not repeat beyond the initial trigger.
       </t>
       <t>
         The "ACTION" property is used within the "VALARM" calendar component
         to specify the type of action invoked when the alarm is triggered.
         The "VALARM" properties provide enough information for a specific
         action to be invoked. It is typically the responsibility of a
         "Calendar User Agent" (CUA) to deliver the alarm in the specified
         fashion. An "ACTION" property value of AUDIO specifies an alarm that
         causes a sound to be played to alert the user; DISPLAY specifies an
         alarm that causes a text message to be displayed to the user;

           and

         EMAIL specifies an alarm that causes an electronic email message
         to be delivered to one or more email addresses.



       </t>
       <t>
         In an AUDIO alarm, if the optional "ATTACH" property is included, it
         MUST specify an audio sound resource. The intention is that the sound
         will be played as the alarm effect. If an "ATTACH" property is
         specified that does not refer to a sound resource, or if the
         specified sound resource cannot be rendered (because its format is
         unsupported, or because it cannot be retrieved), then the CUA or
         other entity responsible for playing the sound may choose a fallback
         action, such as playing a built-in default sound, or playing no sound
         at all.
       </t>
       <t>
         In a DISPLAY alarm, the intended alarm effect is for the text value
         of the "DESCRIPTION" property to be displayed to the user.
       </t>
       <t>
         In an EMAIL alarm, the intended alarm effect is for an email message
         to be composed and delivered to all the addresses specified by the
         "ATTENDEE" properties in the "VALARM" calendar component. The
         "DESCRIPTION" property of the "VALARM" calendar component MUST be
         used as the body text of the message, and the "SUMMARY" property MUST
         be used as the subject text. Any "ATTACH" properties in the "VALARM"
         calendar component SHOULD be sent as attachments to the message.

         <list>
           <t>
             Note: Implementations should carefully consider whether
             they accept alarm components from untrusted sources,
             e.g., when importing calendar objects from external
             sources. One reasonable policy is to always ignore alarm
             components that the calendar user has not set herself,
             or at least ask for confirmation in such a case.
           </t>
         </list>
       </t>


       <t hangText="Example:">
         The following example is for a "VALARM" calendar component that
         specifies an audio alarm that will sound at a precise time and
         repeat 4 more times at 15-minute intervals:
         <figure>
<artwork><![CDATA[
    BEGIN:VALARM
    TRIGGER;VALUE=DATE-TIME:19970317T133000Z
    REPEAT:4
    DURATION:PT15M
    ACTION:AUDIO
    ATTACH;FMTTYPE=audio/basic:ftp://example.com/pub/
     sounds/bell-01.aud
    END:VALARM
]]></artwork>
         </figure>
       </t>
       <t>
         The following example is for a "VALARM" calendar component that
         specifies a display alarm that will trigger 30 minutes before the
         scheduled start of the event or



         of the to-do it is associated with and will repeat 2 more times
         at 15-minute intervals:
         <figure>
<artwork><![CDATA[
    BEGIN:VALARM
    TRIGGER:-PT30M
    REPEAT:2
    DURATION:PT15M
    ACTION:DISPLAY
    DESCRIPTION:Breakfast meeting with executive\n
     team at 8:30 AM EST.
    END:VALARM
]]></artwork>
         </figure>
       </t>
       <t>
         The following example is for a "VALARM" calendar component that
         specifies an email alarm that will trigger 2 days before the
         scheduled due DATE-TIME of a to-do with which it is associated. It does
         not repeat. The email has a subject, body, and attachment link.
         <figure>
<artwork><![CDATA[
    BEGIN:VALARM
    TRIGGER;RELATED=END:-P2D
    ACTION:EMAIL
    ATTENDEE:mailto:john_doe@example.com
    SUMMARY:*** REMINDER: SEND AGENDA FOR WEEKLY STAFF MEETING ***
    DESCRIPTION:A draft agenda needs to be sent out to the attendees
      to the weekly managers meeting (MGR-LIST). Attached is a
      pointer the document template for the agenda file.
    ATTACH;FMTTYPE=application/msword:http://example.com/
     templates/agenda.doc
    END:VALARM
]]></artwork>
         </figure>
       </t>



     </list>
   </t>
 </section><!-- ALARM_COMPONENT -->
</section><!-- CALENDAR_COMPONENTS -->

 <section title="Calendar Properties" anchor="CALENDAR_PROPERTIES">
   <t>
     The Calendar Properties are attributes that apply to the iCalendar
     object, as a whole. These properties do not appear within a calendar
     component. They SHOULD be specified after the "BEGIN:VCALENDAR"

     delimiter string
      and prior to any calendar component.
   </t>

   <section title="Calendar Scale" anchor="CALENDAR_SCALE">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           CALSCALE
         </t>
         <t hangText="Purpose:">
           This property defines the calendar scale used for the calendar
           information specified in the iCalendar object.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">


             This property

           can be specified

             once

           in an iCalendar object. The default
           value is "GREGORIAN".
         </t>
         <t hangText="Description:">
           This memo is based on the Gregorian calendar scale. The Gregorian
           calendar scale is assumed if this property is not specified in
           the iCalendar object. It is expected that other calendar scales
           will be defined in other specifications or by future versions
           of this memo.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    calscale   = "CALSCALE" calparam ":" calvalue CRLF

    calparam   = *(";" other-param)

    calvalue   = "GREGORIAN"
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    CALSCALE:GREGORIAN
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- CALENDAR_SCALE -->

   <section title="Method" anchor="METHOD">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           METHOD
         </t>
         <t hangText="Purpose:">
           This property defines the iCalendar object method associated
           with the calendar object.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">


             This

           property can be specified

             once

           in an iCalendar object. 
         </t>
         <t hangText="Description:">
           When used in a MIME message entity, the value of this
           property MUST be the same as the Content-Type "method"
           parameter value.



           If either the "METHOD" property or the
           Content-Type "method" parameter is specified, then the other
           MUST also be specified.
         </t>
         <t>
           No methods are defined by this specification. This is the
           subject of other specifications, such as the iCalendar
           Transport-independent Interoperability Protocol (iTIP)
           defined by <xref target="2446bis"/>.
         </t>
         <t>
           If this property is not present in the iCalendar object,
           then a scheduling transaction MUST NOT be assumed. In such
           cases, the iCalendar object is merely being used to transport
           a snapshot of some calendar information; without the intention
           of conveying a scheduling semantic.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    method     = "METHOD" metparam ":" metvalue CRLF

    metparam   = *(";" other-param)

    metvalue   = iana-token
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is a hypothetical example of this property to
           convey that the iCalendar object is a

             scheduling

           request:
           <figure>
<artwork><![CDATA[
    METHOD:REQUEST
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- METHOD -->

   <section title="Product Identifier" anchor="PRODUCT_IDENTIFIER">

     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           PRODID
         </t>
         <t hangText="Purpose:">
           This property specifies the identifier for the product that
           created the iCalendar object.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           The property MUST be specified once in an iCalendar object.
         </t>
         <t hangText="Description:">
           The vendor of the implementation SHOULD assure that this
           is a globally unique identifier; using some technique such
           as an FPI value, as defined in <xref target="ISO.9070.1991"/>.
         </t>
         <t>
           This property SHOULD


             NOT

           be used to alter the interpretation of an
           iCalendar object beyond the semantics specified in this memo. For
           example, it is not to be used to further the understanding of
           non-standard properties.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    prodid     = "PRODID" pidparam ":" pidvalue CRLF

    pidparam   = *(";" other-param)

    pidvalue   = text
    ;Any text that describes the product and version
    ;and that is generally assured of being unique.
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property. It does not imply
           that English is the default language.
           <figure>
<artwork><![CDATA[
    PRODID:-//ABC Corporation//NONSGML My Product//EN
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PRODUCT_IDENTIFIER -->

   <section title="Version" anchor="VERSION">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           VERSION
         </t>
         <t hangText="Purpose:">
           This property specifies the identifier corresponding to the
           highest version number or the minimum and maximum range of the
           iCalendar specification that is required in order to interpret
           the iCalendar object.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property MUST be specified


             once in

           an iCalendar object.

         </t>
         <t hangText="Description:">
           A value of "2.0" corresponds to this memo.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    version    = "VERSION" verparam ":" vervalue CRLF

    verparam   = *(";" other-param)

    vervalue   = "2.0"         ;This memo
               / maxver
               / (minver ";" maxver)

    minver     = <A IANA-registered iCalendar version identifier>
    ;Minimum iCalendar version needed to parse the iCalendar object.

    maxver     = <A IANA-registered iCalendar version identifier>
    ;Maximum iCalendar version needed to parse the iCalendar object.
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    VERSION:2.0
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- VERSION -->
 </section><!-- CALENDAR_PROPERTIES  -->

 <section title="Component Properties" anchor="COMPONENT_PROPERTIES">
   <t>
     The following properties can appear within calendar components,
     as specified by each component property definition.
   </t>

 <section title="Descriptive Component Properties" anchor="DESCRIPTIVE_COMPONENT_PROPERTIES">
   <t>
     The following properties specify descriptive information about
     calendar components.
   </t>

   <section title="Attachment" anchor="ATTACHMENT">


     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           ATTACH
         </t>
         <t hangText="Purpose:">


             This

           property provides the capability to associate a document
           object with a calendar component.
         </t>
         <t hangText="Value Type:">
           The default value type for this property is URI. The value
           type can also be set to BINARY to indicate inline binary
           encoded content information.
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           inline encoding,
           and value data type property parameters can be specified
           on this property.


               The format type parameter can be specified on this property
               and is RECOMMENDED for inline binary encoded content
               information.


         </t>
         <t hangText="Conformance:">


             This

           property can be specified

             multiple times

           in a "VEVENT", "VTODO", "VJOURNAL", or "VALARM" calendar
           component


               with the exception of AUDIO alarm that only allows
               this property to occur once.
         </t>
         <t hangText="Description:">



               This property is used in "VEVENT", "VTODO", and "VJOURNAL"
               calendar components to associate a resource (e.g., document)
               with the calendar component. This property is used in
               "VALARM" calendar components to specify an audio sound
               resource or an email message attachment. This property
               can be specified as a URI pointing to a resource or as
               inline binary encoded content.


         </t>
         <t>


               When this property is specified as inline binary encoded
               content, calendar applications MAY attempt to guess the
               media type of the resource via inspection of its content
               if and only if the media type of the resource is not
               given by the "FMTTYPE" parameter. If the media type
               remains unknown, calendar applications SHOULD treat it
               as type "application/octet-stream".


         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    attach     = "ATTACH" attachparam ( ":" uri ) /
                 (
                   ";" "ENCODING" "=" "BASE64"
                   ";" "VALUE" "=" "BINARY"
                   ":" binary
                 )
                 CRLF

    attachparam = *(
                ;
                ; The following is OPTIONAL for a URI value,
                ; RECOMMENDED for a BINARY value,
                ; and MUST NOT occur more than once.
                ;
                (";" fmttypeparam) /
                ;
                ; The following is OPTIONAL,
                ; and MAY occur more than once.
                ;
                (";" other-param)
                ;
                )
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following are examples of this property:
           <figure>
<artwork><![CDATA[
    ATTACH:CID:jsmith.part3.960817T083000.xyzMail@example.com

    ATTACH;FMTTYPE=application/postscript:ftp://example.com/pub/
     reports/r-960812.ps
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- ATTACHMENT -->

   <section title="Categories" anchor="CATEGORIES">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           CATEGORIES
         </t>
         <t hangText="Purpose:">
           This property defines the categories for a calendar component.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard, 
           and language property parameters can be specified
           on this property.
         </t>
         <t hangText="Conformance:">
           The property can be specified within "VEVENT", "VTODO", or
           "VJOURNAL" calendar components.
         </t>
         <t hangText="Description:">
           This property is used to specify categories or subtypes of the
           calendar component. The categories are useful in searching for
           a calendar component of a particular type and category. Within
           the "VEVENT", "VTODO", or "VJOURNAL" calendar components, more
           than one category can be specified as a
           COMMA-separated list of categories.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    categories = "CATEGORIES" catparam ":" text *("," text)
                 CRLF

    catparam   = *(
               ;
               ; The following is OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" languageparam ) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following are examples of this property:
           <figure>
<artwork><![CDATA[
    CATEGORIES:APPOINTMENT,EDUCATION

    CATEGORIES:MEETING
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- CATEGORIES -->

   <section title="Classification" anchor="CLASSIFICATION">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           CLASS
         </t>
         <t hangText="Purpose:">
           This property defines the access classification for a calendar
           component.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           The property can be specified once in a "VEVENT", "VTODO", or
           "VJOURNAL" calendar components.
         </t>
         <t hangText="Description:">
           An access classification is only one component of the
           general security system within a calendar application. It
           provides a method of capturing the scope of the access the
           calendar owner intends for information within an individual
           calendar entry. The access classification of an individual
           iCalendar component is useful when measured along with
           the other security components of a calendar system (e.g.,
           calendar user authentication, authorization, access rights,
           access role, etc.). Hence, the semantics of the individual
           access classifications cannot be completely defined by
           this memo alone. Additionally, due to the "blind" nature
           of most exchange processes using this memo, these access
           classifications cannot serve as an enforcement statement for
           a system receiving an iCalendar object. Rather, they provide
           a method for capturing the intention of the calendar owner
           for the access to the calendar component.


               If not specified in a component that allows this
               property, the default value is PUBLIC.
               Applications MUST treat x-name and iana-token values
               they don't recognize the same way as they would
               the PRIVATE value.


         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    class      = "CLASS" classparam ":" classvalue CRLF

    classparam = *(";" other-param)

    classvalue = "PUBLIC" / "PRIVATE" / "CONFIDENTIAL" / iana-token
               / x-name
    ;Default is PUBLIC
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    CLASS:PUBLIC
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- CLASSIFICATION -->

   <section title="Comment" anchor="COMMENT">

     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           COMMENT
         </t>
         <t hangText="Purpose:">
           This property specifies non-processing information intended
           to provide a comment to the calendar user.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           alternate text representation, and language
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified

             multiple times

           in "VEVENT", "VTODO", "VJOURNAL",


             and

           "VFREEBUSY" calendar components

           as well as in the "STANDARD" and "DAYLIGHT"
           sub-components.
         </t>
         <t hangText="Description:">



               This property is used to specify a comment to the
               calendar user.


         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    comment    = "COMMENT" commparam ":" text CRLF

    commparam  = *(
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" altrepparam) / (";" languageparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    COMMENT:The meeting really needs to include both ourselves
      and the customer. We can't hold this meeting without them.
      As a matter of fact\, the venue for the meeting ought to be at
      their site. - - John
]]></artwork>
           </figure>
         </t>




       </list>
     </t>
   </section><!-- COMMENT -->

   <section title="Description" anchor="DESCRIPTION">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           DESCRIPTION
         </t>
         <t hangText="Purpose:">
           This property provides a more complete description of the
           calendar component than that provided by the "SUMMARY"
           property.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           alternate text representation, and language
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           The property can be specified in the "VEVENT", "VTODO",
           "VJOURNAL", or "VALARM" calendar components. The property
           can be specified multiple times only within a "VJOURNAL"
           calendar component.
         </t>
         <t hangText="Description:">
           This property is used in the "VEVENT" and "VTODO" to capture
           lengthy textual descriptions associated with the activity.
         </t>
         <t>
           This property is used in the "VJOURNAL" calendar component
           to capture one
           or 
           more textual journal entries.
         </t>
         <t>
           This property is used in the "VALARM" calendar component to
           capture the display text for a DISPLAY category of alarm,

             and

           to capture the body text for an EMAIL category of alarm.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    description        = "DESCRIPTION" descparam ":" text CRLF

    descparam  = *(
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" altrepparam) / (";" languageparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of


             this

           property with formatted
           line breaks in the property value:
           <figure>
<artwork><![CDATA[
    DESCRIPTION:Meeting to provide technical review for "Phoenix"
      design.\nHappy Face Conference Room. Phoenix design team
      MUST attend this meeting.\nRSVP to team leader.
]]></artwork>
           </figure>
         </t>



       </list>
     </t>
   </section><!-- DESCRIPTION -->

   <section title="Geographic Position" anchor="GEOGRAPHIC_POSITION">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           GEO
         </t>
         <t hangText="Purpose:">
           This property specifies information related to the global
           position for the activity specified by a calendar component.
         </t>
         <t hangText="Value Type:">
           FLOAT. The value MUST be two SEMICOLON-separated FLOAT values.
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified in  "VEVENT" or "VTODO"
           calendar components.
         </t>
         <t hangText="Description:">


             This

           property value specifies latitude and longitude, in that
           order (i.e., "LAT LON" ordering). The longitude represents the
           location


             east

           or


             west

           of the prime meridian as a positive or negative real number,
           respectively. The longitude and latitude values MAY be
           specified up to six decimal places, which will allow for
           accuracy to within one meter of geographical position.
           Receiving applications MUST accept values of this
           precision and MAY truncate values of greater precision.
         </t>
         <t>
           Values for latitude and longitude shall be expressed as
           decimal fractions of degrees. Whole degrees of latitude shall
           be represented by a two-digit decimal number ranging from 0
           through 90. Whole degrees of longitude shall be represented
           by a decimal number ranging from 0 through 180. When a decimal
           fraction of a degree is specified, it shall be separated from
           the whole number of degrees by a decimal point.
         </t>
         <t>
           Latitudes north of the equator shall be specified by a plus
           sign (+), or by the absence of a minus sign (-), preceding
           the digits designating degrees. Latitudes
           south of the Equator
           shall be designated by a minus sign (-) preceding the digits
           designating degrees. A point on the Equator shall be assigned
           to the Northern Hemisphere.
         </t>
         <t>
           Longitudes east of the prime meridian shall be specified
           by a plus sign (+), or by the absence of a minus sign (-),
           preceding the digits designating degrees. Longitudes west of
           the meridian shall be designated by minus sign (-) preceding
           the digits designating degrees. A point on the prime meridian
           shall be assigned to the Eastern Hemisphere. A point on the
           180th meridian shall be assigned to the Western Hemisphere. One
           exception to this last convention is permitted. For the special
           condition of describing a band of latitude around the earth,
           the East Bounding Coordinate data element shall be assigned
           the value +180 (180) degrees.
         </t>
         <t>
           Any spatial address with a latitude of +90 (90) or -90
           degrees will specify the position at the North or South
           Pole, respectively. The component for longitude may have any
           legal value.
         </t>
         <t>
           With the exception of the special condition described
           above, this form is specified in
           <xref target="ANSI INCITS 61-1986"/>.
         </t>

         <t>
           The simple formula for converting degrees-minutes-seconds
           into decimal degrees is:
         </t>
         <t>
           decimal = degrees + minutes/60 + seconds/3600.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    geo        = "GEO" geoparam ":" geovalue CRLF

    geoparam   = *(";" other-param)

    geovalue   = float ";" float
    ;Latitude and Longitude components
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    GEO:37.386013;-122.082932
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- GEOGRAPHIC_POSITION -->

   <section title="Location" anchor="LOCATION">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           LOCATION
         </t>
         <t hangText="Purpose:">


             This

           property defines the intended venue for the activity
           defined by a calendar component.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           alternate text representation, and language
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified in "VEVENT" or "VTODO"
           calendar component.
         </t>
         <t hangText="Description:">
           Specific venues such as conference or meeting rooms may
           be explicitly specified using this property. An alternate
           representation may be specified that is a URI that points to
           directory information with more structured specification of
           the location. For example, the alternate representation may
           specify either an LDAP


             URL

           <xref target="RFC4516"/>
           pointing to an LDAP server entry
           or a CID


             URL

           <xref target="RFC2392"/>
           pointing to a MIME body part containing a Virtual-Information Card (vCard)
           <xref target="RFC2426"/> for the location.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    location   = "LOCATION"  locparam ":" text CRLF

    locparam   = *(
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" altrepparam) / (";" languageparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following are some examples of this property:
           <figure>
<artwork><![CDATA[
    LOCATION:Conference Room - F123\, Bldg. 002

    LOCATION;ALTREP="http://xyzcorp.com/conf-rooms/f123.vcf":
     Conference Room - F123\, Bldg. 002
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- LOCATION -->

   <section title="Percent Complete" anchor="PERCENT_COMPLETE">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           PERCENT-COMPLETE
         </t>
         <t hangText="Purpose:">
           This property is used by an assignee or delegatee of a to-do
           to convey the percent completion of a to-do to the
           "Organizer".
         </t>
         <t hangText="Value Type:">
           INTEGER
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified

             once

           in a "VTODO" calendar component.
         </t>
         <t hangText="Description:">
           The property value is a positive integer between 0 and 100. A value of "0" indicates the to-do has not yet been
           started. A value of "100" indicates that the to-do has been
           completed. Integer values in between indicate the percent
           partially complete.
         </t>
         <t>
           When a to-do is assigned to multiple individuals, the property
           value indicates the percent complete for that portion of the
           to-do assigned to the assignee or delegatee. For example,
           if a to-do is assigned to both individuals "A" and "B". A
           reply from "A" with a percent complete of "70" indicates that
           "A" has completed 70% of the to-do assigned to them. A reply
           from "B" with a percent complete of "50" indicates "B" has
           completed 50% of the to-do assigned to them.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    percent = "PERCENT-COMPLETE" pctparam ":" integer CRLF

    pctparam   = *(";" other-param)
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property to show 39%
           completion:
           <figure>
<artwork><![CDATA[
    PERCENT-COMPLETE:39
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PERCENT_COMPLETE -->

   <section title="Priority" anchor="PRIORITY">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           PRIORITY
         </t>
         <t hangText="Purpose:">


             This

           property defines the relative priority for a calendar
           component.
         </t>
         <t hangText="Value Type:">
           INTEGER
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">


             This

           property can be specified in



           "VEVENT"


             and

           "VTODO"
           calendar components.
         </t>
         <t hangText="Description:">

           This
           priority is specified as an integer in the range 0 to 9.
           A value of 0 specifies an undefined priority.
           A value of 1 is the highest priority.
           A value of 2 is the second highest priority.
           Subsequent numbers specify a decreasing ordinal priority.
           A value of 9 is the lowest priority.
         </t>
         <t>
           A CUA with a three-level priority scheme of "HIGH", "MEDIUM",
           and "LOW" is mapped into this property such that a property
           value in the range of 1 to 4 specifies "HIGH" priority.
           A value of 5 is the normal or "MEDIUM" priority.
           A value in the range of 6 to 9 is "LOW" priority.
         </t>
         <t>
           A CUA with a priority schema of "A1", "A2", "A3", "B1",
           "B2", ..., "C3" is mapped into this property such that a
           property value of 1 specifies "A1",
           a property value of 2 specifies "A2",
           a property value of 3 specifies "A3",
           and so forth up to a property value of 9 specifies "C3".
         </t>
         <t>
           Other integer values are reserved for future use.
         </t>
         <t>
           Within a "VEVENT" calendar component, this property specifies
           a priority for the event. This property may be useful when
           more than one event is scheduled for a given time period.
         </t>
         <t>
           Within a "VTODO" calendar component, this property specified a
           priority for the to-do. This property is useful in prioritizing
           multiple action items for a given time period.
         </t>
         <t hangText="Format Definition:">


             This

           property is

           defined
            by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    priority   = "PRIORITY" prioparam ":" priovalue CRLF
    ;Default is zero (i.e., undefined).

    prioparam  = *(";" other-param)

    priovalue   = integer       ;Must be in the range [0..9]
       ; All other values are reserved for future use.
]]></artwork>
           </figure>
         </t>



             <t hangText="Example:">
               The following is an example of a property with the highest
               priority:
               <figure>
<artwork><![CDATA[
    PRIORITY:1
]]></artwork>
               </figure>
             </t>


         <t>
           The following is an example of a property with a next highest
           priority:
           <figure>
<artwork><![CDATA[
    PRIORITY:2
]]></artwork>
           </figure>
         </t>
         <t>

           The following is an
           example of a property with no priority.  This is equivalent
           to not specifying the "PRIORITY" property:
           <figure>
<artwork><![CDATA[
    PRIORITY:0
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- PRIORITY -->

   <section title="Resources" anchor="RESOURCES">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           RESOURCES
         </t>
         <t hangText="Purpose:">
           This property defines the equipment or resources anticipated
           for an activity specified by a calendar


             component.

         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           alternate text representation, and language
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified

             once

           in "VEVENT" or "VTODO" calendar component.
         </t>
         <t hangText="Description:">
           The property value is an arbitrary text. More than one
           resource can be specified as a 
           COMMA-separated list of resources.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    resources  = "RESOURCES" resrcparam ":" text *("," text) CRLF

    resrcparam = *(
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" altrepparam) / (";" languageparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    RESOURCES:EASEL,PROJECTOR,VCR

    RESOURCES;LANGUAGE=fr:Nettoyeur haute pression
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- RESOURCES -->

   <section title="Status" anchor="STATUS">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           STATUS
         </t>
         <t hangText="Purpose:">
           This property defines the overall status or confirmation for
           the calendar component.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified

             once

           in "VEVENT", "VTODO", or "VJOURNAL" calendar components.
         </t>
         <t hangText="Description:">
           In a group-scheduled calendar component, the property is used
           by the "Organizer" to provide a confirmation of the event to
           the "Attendees". For example in a "VEVENT" calendar component,
           the "Organizer" can indicate that a meeting is tentative,
           confirmed, or cancelled. In a "VTODO" calendar component, the
           "Organizer" can indicate that an action item needs action,
           is completed, is in process or being worked on, or has been
           cancelled. In a "VJOURNAL" calendar component, the "Organizer"
           can indicate that a journal entry is draft, final, or has been
           cancelled or removed.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    status          = "STATUS" statparam ":" statvalue CRLF

    statparam       = *(";" other-param)

    statvalue       = (statvalue-event
                    /  statvalue-todo
                    /  statvalue-jour)

    statvalue-event = "TENTATIVE"    ;Indicates event is tentative.
                    / "CONFIRMED"    ;Indicates event is definite.
                    / "CANCELLED"    ;Indicates event was cancelled.
    ;Status values for a "VEVENT"

    statvalue-todo  = "NEEDS-ACTION" ;Indicates to-do needs action.
                    / "COMPLETED"    ;Indicates to-do completed.
                    / "IN-PROCESS"   ;Indicates to-do in process of.
                    / "CANCELLED"    ;Indicates to-do was cancelled.
    ;Status values for "VTODO".

    statvalue-jour  = "DRAFT"        ;Indicates journal is draft.
                    / "FINAL"        ;Indicates journal is final.
                    / "CANCELLED"    ;Indicates journal is removed.
   ;Status values for "VJOURNAL".
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property for a "VEVENT"
           calendar component:
           <figure>
<artwork><![CDATA[
    STATUS:TENTATIVE
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of this property for a "VTODO"
           calendar component:
           <figure>
<artwork><![CDATA[
    STATUS:NEEDS-ACTION
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of this property for a "VJOURNAL"
           calendar component:
           <figure>
<artwork><![CDATA[
    STATUS:DRAFT
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- STATUS -->

   <section title="Summary" anchor="SUMMARY">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           SUMMARY
         </t>
         <t hangText="Purpose:">
           This property defines a short summary or subject for the
           calendar component.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           alternate text representation, and language
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           The property can be specified in "VEVENT", "VTODO", "VJOURNAL",
           or "VALARM" calendar components.
         </t>
         <t hangText="Description:">
           This property is used in the "VEVENT", "VTODO", and "VJOURNAL"
           calendar components to capture a short, one-line summary
           about the activity or journal entry.
         </t>
         <t>
           This property is used in the "VALARM" calendar component to
           capture the subject of an EMAIL category of alarm.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    summary    = "SUMMARY" summparam ":" text CRLF

    summparam  = *(
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" altrepparam) / (";" languageparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    SUMMARY:Department Party
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- SUMMARY -->
 </section><!-- DESCRIPTIVE_COMPONENT_PROPERTIES -->

 <section title="Date and Time Component Properties" anchor="DATE_AND_TIME_COMPONENT_PROPERTIES">
   <t>
     The following properties specify date and time related information
     in calendar components.
   </t>

   <section title="Date-Time Completed" anchor="DATE_TIME_COMPLETED">

     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           COMPLETED
         </t>
         <t hangText="Purpose:">
           This property defines the date and time that a to-do was
           actually completed.
         </t>
         <t hangText="Value Type:">
           DATE-TIME
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           The property can be specified in a "VTODO" calendar component.


               The value MUST be specified as a date with UTC time.


         </t>
         <t hangText="Description:">



               This property defines the date and time that a to-do was
               actually completed.


         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    completed  = "COMPLETED" compparam ":" date-time CRLF

    compparam  = *(";" other-param)
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
 COMPLETED:19960401T150000Z
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- DATE_TIME_COMPLETED -->

   <section title="Date-Time End" anchor="DATE_TIME_END">

     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           DTEND
         </t>
         <t hangText="Purpose:">
           This property specifies the date and time that a calendar
           component ends.
         </t>
         <t hangText="Value Type:">
           The default value type is DATE-TIME. The value type can be
           set to a DATE value type.
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           value data type,

             and

           time zone identifier property
           parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified in "VEVENT" or "VFREEBUSY"
           calendar components.
         </t>
         <t hangText="Description:">
           Within the "VEVENT" calendar component, this property defines
           the date and time by which the event ends. The


               value type of this property MUST be the same as
               the "DTSTART" property, and its


           value MUST be later in time than the value of the
           "DTSTART" property.


               Furthermore, this property MUST be specified as a
               date with local time if and only if the "DTSTART"
               property is also specified as a date with local time.


         </t>
         <t>
           Within the "VFREEBUSY" calendar component, this property
           defines the end date and time for the free or busy time
           information. The time MUST be specified in the UTC time
           format. The value MUST be later in time than the value of the
           "DTSTART" property.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    dtend      = "DTEND" dtendparam ":" dtendval CRLF

    dtendparam = *(
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" "VALUE" "=" ("DATE-TIME" / "DATE")) /
               (";" tzidparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )

    dtendval   = date-time / date
    ;Value MUST match value type
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    DTEND:19960401T150000Z

    DTEND;VALUE=DATE:19980704
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- DATE_TIME_END -->

   <section title="Date-Time Due" anchor="DATE_TIME_DUE">


     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           DUE
         </t>
         <t hangText="Purpose:">
           This property defines the date and time that a to-do is
           expected to be completed.
         </t>
         <t hangText="Value Type:">
           The default value type is DATE-TIME. The value type can be
           set to a DATE value type.
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           value data type,

             and

           time zone identifier property
           parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           The property can be specified once in a "VTODO" calendar
           component.
         </t>
         <t hangText="Description:">


               This property defines the date and time before which a
               to-do is expected to be completed.





               For cases where this property is specified in a "VTODO"
               calendar component that also specifies a "DTSTART" property,
               the value type of this property MUST be the same as the
               "DTSTART" property, and the value of this property MUST be
               later in time than the value of the "DTSTART" property.




               Furthermore, this property MUST be specified as a
               date with local time if and only if the "DTSTART"
               property is also specified as a date with local time.


         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    due        = "DUE" dueparam ":" dueval CRLF

    dueparam   = *(
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" "VALUE" "=" ("DATE-TIME" / "DATE")) /
               (";" tzidparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )

    dueval     = date-time / date
    ;Value MUST match value type
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    DUE:19980430T000000Z
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- DATE_TIME_DUE -->

   <section title="Date-Time Start" anchor="DATE_TIME_START">

     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           DTSTART
         </t>
         <t hangText="Purpose:">
           This property specifies when the calendar component begins.
         </t>
         <t hangText="Value Type:">
           The default value type is DATE-TIME. The time value MUST be
           one of the forms defined for the DATE-TIME value type. The
           value type can be set to a DATE value type.
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           value data type,

             and

           time zone identifier property
           parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified

             once

           in the "VEVENT", "VTODO",

             or

           "VFREEBUSY" 
           calendar components

           as well as in the "STANDARD" and "DAYLIGHT"
           sub-components.


               This property is REQUIRED in all types of recurring
               calendar components that specify the "RRULE" property.
               This property is also REQUIRED in "VEVENT" calendar
               components




               contained in iCalendar objects that don't specify
               the "METHOD" property.


         </t>
         <t hangText="Description:">
           Within the "VEVENT" calendar component, this property
           defines the start date and time for the event.






         </t>
         <t>
           Within the "VFREEBUSY" calendar component, this property
           defines the start date and time for the free or busy time
           information. The time MUST be specified in UTC time.
         </t>
         <t>
           Within the


             "STANDARD" and "DAYLIGHT" sub-components,
           this property defines the effective start date and time for
           a time zone specification. This property is REQUIRED within each
           "STANDARD"
           and "DAYLIGHT"


             sub-components

           included in "VTIMEZONE" calendar components and MUST be
           specified as a


             date with local time

           without the "TZID" property parameter.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    dtstart    = "DTSTART" dtstparam ":" dtstval CRLF

    dtstparam  = *(
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" "VALUE" "=" ("DATE-TIME" / "DATE")) /
               (";" tzidparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )

    dtstval    = date-time / date
    ;Value MUST match value type
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    DTSTART:19980118T073000Z
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- DATE_TIME_START -->

   <section title="Duration" anchor="DURATION">

     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           DURATION
         </t>
         <t hangText="Purpose:">


             This

           property specifies a positive duration of time.
         </t>
         <t hangText="Value Type:">
           DURATION
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">


             This

           property can be specified in "VEVENT", "VTODO",



           or "VALARM" calendar components.
         </t>
         <t hangText="Description:">
           In a "VEVENT" calendar component the property may be used to
           specify a duration of the event, instead of an explicit end
           DATE-TIME. In a "VTODO" calendar component the property may
           be used to specify a duration for the to-do, instead of an
           explicit due DATE-TIME.



           In a "VALARM" calendar component the property may be
           used to specify the delay period prior to repeating an alarm.


               When the "DURATION" property relates to a "DTSTART"
               property that is specified as a DATE value, then the
               "DURATION" property MUST be specified as a "dur-day"
               or "dur-week" value.


         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    duration   = "DURATION" durparam ":" dur-value CRLF
                 ;consisting of a positive duration of time.

                 durparam   = *(";" other-param)
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property that specifies an
           interval of time of one hour and zero minutes and zero seconds:
           <figure>
<artwork><![CDATA[
    DURATION:PT1H0M0S
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of this property that specifies
           an interval of time of 15 minutes.
           <figure>
<artwork><![CDATA[
    DURATION:PT15M
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- DURATION -->

   <section title="Free/Busy Time" anchor="FREE_BUSY_TIME">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           FREEBUSY
         </t>
         <t hangText="Purpose:">


             This

           property defines one or more free or busy time intervals.
         </t>
         <t hangText="Value Type:">
           PERIOD

         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard, and 
           free/busy time type property parameters can
           be specified on this property.
         </t>
         <t hangText="Conformance:">
           The property can be specified in a "VFREEBUSY" calendar
           component.
         </t>



         <t hangText="Description:">
           These time periods can be specified as either a start and
           end DATE-TIME or a start DATE-TIME and DURATION. The date
           and time MUST be a UTC time format.
         </t>
         <t>
           "FREEBUSY" properties within the "VFREEBUSY" calendar component
           SHOULD be sorted in ascending order, based on start time and
           then end time, with the earliest periods first.
         </t>
         <t>
           The "FREEBUSY" property can specify more than one value,
           separated by the COMMA character. In
           such cases, the "FREEBUSY" property values


             MUST

           all be of
           the same "FBTYPE" property parameter type (e.g., all values
           of a particular "FBTYPE" listed together in a single property).
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    freebusy   = "FREEBUSY" fbparam ":" fbvalue CRLF

    fbparam    = *(
               ;
               ; The following is OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" fbtypeparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )

    fbvalue    = period *("," period)
    ;Time value MUST be in the UTC time format.
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following are some examples of this property:
           <figure>
<artwork><![CDATA[
    FREEBUSY;FBTYPE=BUSY-UNAVAILABLE:19970308T160000Z/PT8H30M

    FREEBUSY;FBTYPE=FREE:19970308T160000Z/PT3H,19970308T200000Z/PT1H

    FREEBUSY;FBTYPE=FREE:19970308T160000Z/PT3H,19970308T200000Z/PT1H
     ,19970308T230000Z/19970309T000000Z
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- FREE_BUSY_TIME -->

   <section title="Time Transparency" anchor="TIME_TRANSPARENCY">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           TRANSP
         </t>
         <t hangText="Purpose:">
           This property defines whether or not an event is transparent to busy time searches.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified once in a "VEVENT" calendar
           component.
         </t>
         <t hangText="Description:">
           Time Transparency is the characteristic of an event
           that determines whether it appears to consume time on a
           calendar. Events that consume actual time for the individual
           or resource associated with the calendar SHOULD be recorded
           as OPAQUE, allowing them to be detected by free/busy time
           searches. Other events, which do not take up the individual's
           (or resource's) time SHOULD be recorded as TRANSPARENT,
           making them invisible to free/busy time searches.
         </t>
         <t hangText="Format Definition:">


             This

           property is


             defined

           by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    transp     = "TRANSP" transparam ":" transvalue CRLF

    transparam = *(";" other-param)

    transvalue = "OPAQUE"
                ;Blocks or opaque on busy time searches.
                / "TRANSPARENT"
                ;Transparent on busy time searches.
    ;Default value is OPAQUE
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property for an event that
           is transparent or does not block on free/busy time searches:
           <figure>
<artwork><![CDATA[
    TRANSP:TRANSPARENT
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of this property for an event
           that is opaque or blocks on free/busy time searches:
           <figure>
<artwork><![CDATA[
    TRANSP:OPAQUE
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- TIME_TRANSPARENCY -->
 </section><!-- DATE_AND_TIME_COMPONENT_PROPERTIES -->

 <section title="Time Zone Component Properties" anchor="TIME_ZONE_COMPONENT_PROPERTIES">
   <t>
     The following properties specify time zone information in calendar
     components.
   </t>

   <section title="Time Zone Identifier" anchor="TIME_ZONE_IDENTIFIER">

     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           TZID
         </t>
         <t hangText="Purpose:">
           This property specifies the text value that uniquely
           identifies the "VTIMEZONE" calendar component

           in the scope of an iCalendar object.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property MUST be specified in a "VTIMEZONE" calendar
           component.
         </t>
         <t hangText="Description:">
           This is the label by which a time zone calendar component is
           referenced by any iCalendar properties whose value type is
           either DATE-TIME or TIME and not intended to specify a UTC
           or a "floating" time. The presence of the SOLIDUS character
           as a prefix, indicates that this "TZID"
           represents an unique ID in a globally defined time zone
           registry (when such registry is defined).
           <list>
             <t>
               Note: This document does not define a naming convention for
               time zone identifiers. Implementers may want to use the naming
               conventions defined in existing time zone specifications such
               as the public-domain


                 TZ database

               <xref target="TZDB"/>. The
               specification of globally unique time zone identifiers is not
               addressed by this document and is left for future study.
             </t>
           </list>
         </t>
         <t hangText="Format Definition:">
           This property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    tzid       = "TZID" tzidpropparam ":" [tzidprefix] text CRLF

    tzidpropparam      = *(";" other-param)

    ;tzidprefix        = "/"
    ; Defined previously. Just listed here for reader convenience.
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following are examples of non-globally unique time zone
           identifiers:
           <figure>
<artwork><![CDATA[
    TZID:America/New_York

    TZID:America/Los_Angeles
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of a fictitious globally unique
           time zone identifier:
           <figure>
<artwork><![CDATA[
    TZID:/example.org/America/New_York
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- TIME_ZONE_IDENTIFIER -->

   <section title="Time Zone Name" anchor="TIME_ZONE_NAME">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           TZNAME
         </t>
         <t hangText="Purpose:">
           This property specifies the customary designation for a time
           zone description.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           and language property parameters can be specified
           on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified in


             "STANDARD" and "DAYLIGHT" sub-components.

         </t>
         <t hangText="Description:">
           This property



               specifies a customary name that can be used when
               displaying dates that occur during the observance
               defined by the time zone sub-component. 


         </t>
         <t hangText="Format Definition:">
           This property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    tzname     = "TZNAME" tznparam ":" text CRLF

    tznparam   = *(
               ;
               ; The following is OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" languageparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following are examples of this property:
           <figure>
<artwork><![CDATA[
    TZNAME:EST

    TZNAME;LANGUAGE=fr-CA:HNE
]]></artwork>
           </figure>
         </t>



       </list>
     </t>
   </section><!-- TIME_ZONE_NAME -->

   <section title="Time Zone Offset From" anchor="TIME_ZONE_OFFSET_FROM">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           TZOFFSETFROM
         </t>
         <t hangText="Purpose:">
           This property specifies the offset that is in use prior to
           this time zone observance.
         </t>
         <t hangText="Value Type:">
           UTC-OFFSET
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property MUST be specified in


             "STANDARD" and "DAYLIGHT" sub-components.

         </t>
         <t hangText="Description:">
           This property specifies the offset that is in use prior to
           this time observance. It is used to calculate the absolute
           time at which the transition to a given observance takes
           place. This property MUST only be specified in a "VTIMEZONE"
           calendar component. A "VTIMEZONE" calendar component MUST
           include this property. The property value is a signed numeric
           indicating the number of hours and possibly minutes from
           UTC. Positive numbers represent time zones east of the prime
           meridian, or ahead of UTC. Negative numbers represent time
           zones west of the prime meridian, or behind UTC.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    tzoffsetfrom       = "TZOFFSETFROM" frmparam ":" utc-offset
                         CRLF

    frmparam   = *(";" other-param)
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following are examples of this property:
           <figure>
<artwork><![CDATA[
    TZOFFSETFROM:-0500

    TZOFFSETFROM:+1345
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- TIME_ZONE_OFFSET_FROM -->

   <section title="Time Zone Offset To" anchor="TIME_ZONE_OFFSET_TO">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           TZOFFSETTO
         </t>
         <t hangText="Purpose:">
           This property specifies the offset that is in use in this
           time zone observance.
         </t>
         <t hangText="Value Type:">
           UTC-OFFSET
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property MUST be specified in


             "STANDARD" and "DAYLIGHT" sub-components.

         </t>
         <t hangText="Description:">
           This property specifies the offset that is in use in this
           time zone observance. It is used to calculate the absolute
           time for the new observance. The property value is a signed
           numeric indicating the number of hours and possibly minutes
           from UTC.  Positive numbers represent time zones east of the
           prime meridian, or ahead of UTC. Negative numbers represent
           time zones west of the prime meridian, or behind UTC.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    tzoffsetto = "TZOFFSETTO" toparam ":" utc-offset CRLF

    toparam    = *(";" other-param)
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following are examples of this property:
           <figure>
<artwork><![CDATA[
    TZOFFSETTO:-0400

    TZOFFSETTO:+1245
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- TIME_ZONE_OFFSET_TO -->

   <section title="Time Zone URL" anchor="TIME_ZONE_URL">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           TZURL
         </t>
         <t hangText="Purpose:">


             This property

           provides a means for a
           "VTIMEZONE"
           component to point to a network location that can be used to
           retrieve an up-to-date version of itself.
         </t>
         <t hangText="Value Type:">
           URI
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified in a "VTIMEZONE" calendar
           component.
         </t>
         <t hangText="Description:">


             This property

           provides a means for a "VTIMEZONE" component to point
           to a network location that can be used to retrieve an up-to-date
           version of itself. This provides a hook to handle changes
           government bodies impose upon time zone definitions. Retrieval
           of this resource results in an iCalendar object containing
           a single "VTIMEZONE" component and a "METHOD" property set
           to PUBLISH.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    tzurl      = "TZURL" tzurlparam ":" uri CRLF

    tzurlparam = *(";" other-param)
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
 TZURL:http://timezones.example.org/tz/America-Los_Angeles.ics
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- TIME_ZONE_URL -->
 </section><!-- TIME_ZONE_COMPONENT_PROPERTIES -->

 <section title="Relationship Component Properties" anchor="RELATIONSHIP_COMPONENT_PROPERTIES">
   <t>
     The following properties specify relationship information in
     calendar components.
   </t>

   <section title="Attendee" anchor="ATTENDEE">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           ATTENDEE
         </t>
         <t hangText="Purpose:">


             This

           property defines an "Attendee" within a calendar component.
         </t>
         <t hangText="Value Type:">
           CAL-ADDRESS
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           language, calendar user type, group or list
           membership, participation role, participation status, RSVP
           expectation, delegatee, delegator, sent by, common name, or
           directory entry reference property parameters can be specified
           on this property.
         </t>
         <t hangText="Conformance:">
           This property MUST be specified in an iCalendar object that
           specifies a group-scheduled calendar entity. This property
           MUST NOT be specified in an iCalendar object when publishing
           the calendar information (e.g., NOT in an iCalendar object
           that specifies the publication of a calendar user's busy time,
           event, to-do, or journal).  This property is not specified in
           an iCalendar object that specifies only a time zone definition
           or that defines calendar


             components

           that are not group-scheduled


             components,

           but are


             components

           only on a single user's calendar.
         </t>
         <t hangText="Description:">


             This

           property MUST only be specified within calendar components
           to specify participants, non-participants, and the chair of
           a group-scheduled calendar entity. The property is specified
           within an "EMAIL" category of the "VALARM" calendar component
           to specify an email address that is to receive the email type
           of iCalendar alarm.
         </t>
         <t>
           The property parameter "CN" is for the common or displayable name
           associated with the calendar address; "ROLE", for the intended
           role that the attendee will have in the calendar component;
           "PARTSTAT", for the status of the attendee's participation;
           "RSVP", for indicating whether the favor of a reply is
           requested; "CUTYPE", to indicate the type of calendar user;
           "MEMBER", to indicate the groups that the attendee belongs to;
           "DELEGATED-TO", to indicate the calendar users that the original
           request was delegated to; and "DELEGATED-FROM", to indicate whom
           the request was delegated from; "SENT-BY", to indicate whom is
           acting on behalf of the "ATTENDEE"; and "DIR", to indicate the
           URI that points to the directory information corresponding
           to the attendee. These property parameters can be specified
           on an "ATTENDEE" property in either a "VEVENT", "VTODO", or
           "VJOURNAL" calendar component. They MUST


             NOT
            be specified in an "ATTENDEE" property in a
           "VFREEBUSY" or "VALARM" calendar component. If the
           "LANGUAGE"
           property parameter is specified, the identified language
           applies to the "CN" parameter.
         </t>
         <t>
           A recipient delegated a request MUST inherit the "RSVP" and "ROLE"
           values from the attendee that delegated the request to them.
         </t>
         <t>
           Multiple attendees can be specified by including multiple
           "ATTENDEE" properties within the calendar component.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    attendee   = "ATTENDEE" attparam ":" cal-address CRLF

    attparam   = *(
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" cutypeparam) / (";" memberparam) /
               (";" roleparam) / (";" partstatparam) /
               (";" rsvpparam) / (";" deltoparam) /
               (";" delfromparam) / (";" sentbyparam) /
               (";" cnparam) / (";" dirparam) /
               (";" languageparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following are examples of this property's use for a to-do:
           <figure>
<artwork><![CDATA[
    ATTENDEE;MEMBER="mailto:DEV-GROUP@example.com":
     mailto:joecool@example.com
    ATTENDEE;DELEGATED-FROM="mailto:immud@example.com":
     mailto:ildoit@example.com
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of this property used for
           specifying multiple attendees to an event:
           <figure>
<artwork><![CDATA[
    ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=TENTATIVE;CN=Henry
     Cabot:mailto:hcabot@example.com
    ATTENDEE;ROLE=REQ-PARTICIPANT;DELEGATED-FROM="mailto:bob@
     example.com";PARTSTAT=ACCEPTED;CN=Jane Doe:mailto:jdoe@
     example.com
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of this property with a URI to
           the directory information associated with the attendee:
           <figure>
<artwork><![CDATA[
    ATTENDEE;CN=John Smith;DIR="ldap://example.com:6666/o=ABC%
     20Industries,c=US???(cn=Jim%20Dolittle)":mailto:jimdo@
     example.com
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of this property with "delegatee"
           and "delegator" information for an event:
           <figure>
<artwork><![CDATA[
    ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=TENTATIVE;DELEGATED-FROM=
     "mailto:iamboss@example.com";CN=Henry Cabot:mailto:hcabot@
     example.com
    ATTENDEE;ROLE=NON-PARTICIPANT;PARTSTAT=DELEGATED;DELEGATED-TO=
     "mailto:hcabot@example.com";CN=The Big Cheese:mailto:iamboss
     @example.com
    ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=ACCEPTED;CN=Jane Doe
     :mailto:jdoe@example.com
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property's use when
           another calendar user is acting on behalf of the "Attendee":
           <figure>
<artwork><![CDATA[
    ATTENDEE;SENT-BY=mailto:jan_doe@example.com;CN=John Smith:
     mailto:jsmith@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- ATTENDEE -->

   <section title="Contact" anchor="CONTACT">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           CONTACT
         </t>
         <t hangText="Purpose:">


             This

           property is used to represent contact information or
           alternately a reference to contact information associated
           with the calendar component.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           alternate text representation, and language
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">


             This

           property can be specified in a "VEVENT", "VTODO", "VJOURNAL",
           or "VFREEBUSY" calendar component.
         </t>
         <t hangText="Description:">
           The property value consists of textual contact information. An
           alternative representation for the property value can also be
           specified that refers to a URI pointing to an alternate form,
           such as a vCard <xref target="RFC2426"/>, for the contact
           information.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    contact    = "CONTACT" contparam ":" text CRLF

    contparam  = *(
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" altrepparam) / (";" languageparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property referencing
           textual contact information:
           <figure>
<artwork><![CDATA[
    CONTACT:Jim Dolittle\, ABC Industries\, +1-919-555-1234
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of this property with an alternate
           representation of an LDAP URI to a directory entry containing
           the contact information:
           <figure>
<artwork><![CDATA[
    CONTACT;ALTREP="ldap://example.com:6666/o=ABC%20Industries\,
     c=US???(cn=Jim%20Dolittle)":Jim Dolittle\, ABC Industries\,
     +1-919-555-1234
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of this property with an alternate
           representation of a MIME body part containing the contact
           information, such as a vCard <xref target="RFC2426"/> embedded
           in a 

            text/directory media type <xref target="RFC2425"/>:

           <figure>
<artwork><![CDATA[
    CONTACT;ALTREP="CID:part3.msg970930T083000SILVER@example.com":
     Jim Dolittle\, ABC Industries\, +1-919-555-1234
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of this property referencing a
           network resource, such as a vCard <xref target="RFC2426"/>
           object containing the contact information:
           <figure>
<artwork><![CDATA[
    CONTACT;ALTREP="http://example.com/pdi/jdoe.vcf":Jim
      Dolittle\, ABC Industries\, +1-919-555-1234
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- CONTACT -->

   <section title="Organizer" anchor="ORGANIZER">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           ORGANIZER
         </t>
         <t hangText="Purpose:">


             This

           property defines the organizer for a calendar component.
         </t>
         <t hangText="Value Type:">
           CAL-ADDRESS
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           language, common name, directory entry reference, and
           sent-by property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property MUST be specified in an iCalendar object that
           specifies a group-scheduled calendar entity. This property
           MUST be specified in an iCalendar object that specifies the
           publication of a calendar user's busy time. This property
           MUST NOT be specified in an iCalendar object that specifies
           only a time zone definition or that defines calendar


             components

           that are not group-scheduled


             components,

           but are


             components

           only on a single user's calendar.
         </t>
         <t hangText="Description:">


             This

           property is specified within the "VEVENT", "VTODO", and
           "VJOURNAL" calendar components to specify the organizer of a
           group-scheduled calendar entity. The property is specified
           within the "VFREEBUSY" calendar component to specify the
           calendar user requesting the free or busy time. When publishing
           a "VFREEBUSY" calendar component, the property is used to
           specify the calendar that the published busy time came from.
         </t>
         <t>
           The property has the property parameters "CN", for specifying
           the common or display name associated with the "Organizer",
           "DIR", for specifying a pointer to the directory information
           associated with the "Organizer", "SENT-BY", for specifying
           another calendar user that is acting on behalf of
           the "Organizer". The non-standard parameters may also
           be specified on this property. If the "LANGUAGE" property
           parameter is specified, the identified language applies to
           the "CN" parameter value.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    organizer  = "ORGANIZER" orgparam ":"
                 cal-address CRLF

    orgparam   = *(
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" cnparam) / (";" dirparam) / (";" sentbyparam) /
               (";" languageparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    ORGANIZER;CN=John Smith:mailto:jsmith@example.com
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of this property with a pointer
           to the directory information associated with the organizer:
           <figure>
<artwork><![CDATA[
    ORGANIZER;CN=JohnSmith;DIR="ldap://example.com:6666/o=DC%20Ass
     ociates,c=US???(cn=John%20Smith)":mailto:jsmith@example.com
]]></artwork>
           </figure>
         </t>
         <t>
           The following is an example of this property used by another
           calendar user who is acting on behalf of the organizer,
           with responses intended to be sent back to the organizer,
           not the other calendar user:
           <figure>
<artwork><![CDATA[
    ORGANIZER;SENT-BY="mailto:jane_doe@example.com":
     mailto:jsmith@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- ORGANIZER -->

   <section title="Recurrence ID" anchor="RECURRENCE_ID">


     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           RECURRENCE-ID
         </t>
         <t hangText="Purpose:">
           This property is used in conjunction with the "UID"
           and "SEQUENCE" properties to identify a specific instance
           of a recurring "VEVENT", "VTODO", or "VJOURNAL" calendar
           component. The property value is the


             original

           value of the "DTSTART" property of the recurrence instance.
         </t>
         <t hangText="Value Type:">
           The default value type is DATE-TIME.
               The value type can be set to a DATE value type.
               This property MUST have the same value type as the
               "DTSTART" property contained within the recurring
               component.  Furthermore, this property MUST be specified
               as a date with local time if and only if the "DTSTART"
               property contained within the recurring component is
               specified as a date with local time.


         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           value data type, time zone identifier, and recurrence identifier
           range parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified in an iCalendar object
           containing a recurring calendar component.
         </t>
         <t hangText="Description:">
           The full range of calendar components specified by a recurrence
           set is referenced by referring to just the "UID" property value
           corresponding to the calendar component. The "RECURRENCE-ID"
           property allows the reference to an individual instance within
           the recurrence set.
         </t>
         <t>
           If the value of the "DTSTART" property is a DATE type value,
           then the value MUST be the calendar date for the recurrence
           instance.
         </t>
         <t> 
           The


             DATE-TIME

           value is set to the time when the original
           recurrence instance would occur; meaning that if the intent
           is to change a Friday meeting to Thursday, the


             DATE-TIME

           is still set to the original Friday meeting.
         </t>
         <t> 
           The "RECURRENCE-ID" property is used in conjunction with the
           "UID" and "SEQUENCE" properties to identify a particular instance
           of a recurring event, to-do, or journal. For a given pair of
           "UID" and "SEQUENCE" property values, the "RECURRENCE-ID" value
           for a recurrence instance is fixed.



         </t>
         <t>
           The "RANGE" parameter is used to specify the effective range
           of recurrence instances from the instance specified by the
           "RECURRENCE-ID" property value. The



           value for the range parameter





               can only be


           "THISANDFUTURE" to indicate a range defined by the
           given recurrence instance and all subsequent instances.


               Subsequent instances are determined by their "RECURRENCE-ID"
               value and not their current scheduled start time.
               Subsequent instances defined in separate components
               are not impacted by the given recurrence instance.
               When the given recurrence instance is rescheduled,
               all subsequent instances are also rescheduled by
               the same time difference. For instance, if the
               given recurrence instance is rescheduled to start
               2 hours later, then all subsequent instances are
               also rescheduled 2 hours later. Similarly, if the
               duration of the given recurrence instance is
               modified, then all subsequence instances are also
               modified to have this same duration.
               <list>
                 <t>
                   Note: The "RANGE" parameter may not be appropriate
                   to reschedule specific subsequent instances of
                   complex recurring calendar component.
                   Assuming an unbounded recurring calendar component
                   scheduled to occur on Mondays and Wednesdays, the
                   "RANGE" parameter could not be used to reschedule
                   only the future Monday instances to occur on Tuesday
                   instead. In such cases, the calendar application could
                   simply truncate the unbounded recurring calendar
                   component (i.e., with the "COUNT" or "UNTIL" rule
                   parts), and create two new unbounded recurring calendar
                   components for the future instances.
                 </t>
               </list>


         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
 <artwork name="abnf"><![CDATA[
      recurid    = "RECURRENCE-ID" ridparam ":" ridval CRLF

    ridparam   = *(
               ;
               ; The following are OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" "VALUE" "=" ("DATE-TIME" / "DATE")) /
               (";" tzidparam) / (";" rangeparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )

    ridval     = date-time / date
    ;Value MUST match value type
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following are examples of this property:
           <figure>
<artwork><![CDATA[
    RECURRENCE-ID;VALUE=DATE:19960401

    RECURRENCE-ID;RANGE=THISANDFUTURE:19960120T120000Z
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- RECURRENCE_ID -->

   <section title="Related To" anchor="RELATED_TO">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           RELATED-TO
         </t>
         <t hangText="Purpose:">


             This

           property is used to represent a relationship or reference
           between one calendar component and another.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard, 
           and relationship type property parameters can
           be specified on this property.
         </t>
         <t hangText="Conformance:">


             This

           property can be specified



           in the "VEVENT", "VTODO",


             and

           "VJOURNAL" calendar components.
         </t>
         <t hangText="Description:">
           The property value consists of the persistent, globally unique
           identifier of another calendar component. This value would
           be represented in a calendar component by the "UID" property.
         </t>
         <t>
           By default, the property value points to another calendar
           component that has a PARENT relationship to the referencing
           object. The "RELTYPE" property parameter is used to either
           explicitly state the default PARENT relationship type to the
           referenced calendar component or to override the default
           PARENT relationship type and specify either a CHILD or
           SIBLING relationship. The PARENT relationship indicates that
           the calendar component is a subordinate of the referenced
           calendar component. The CHILD relationship indicates that the
           calendar component is a superior of the referenced calendar
           component. The SIBLING relationship indicates that the calendar
           component is a peer of the referenced calendar component.
         </t>
         <t>
           Changes to a calendar component referenced by this property can
           have an implicit impact on the related calendar component. For
           example, if a group event changes its start or end date
           or time, then the related, dependent events will need to
           have their start and end dates changed in a corresponding
           way. Similarly, if a PARENT calendar component is


             cancelled

           or deleted, then there is an implied impact to the related CHILD
           calendar components. This property is intended only to provide
           information on the relationship of calendar components. It
           is up to the target calendar system to maintain any property
           implications of this relationship.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    related    = "RELATED-TO" relparam ":" text CRLF

    relparam   = *(
               ;
               ; The following is OPTIONAL,
               ; but MUST NOT occur more than once.
               ;
               (";" reltypeparam) /
               ;
               ; The following is OPTIONAL,
               ; and MAY occur more than once.
               ;
               (";" other-param)
               ;
               )
]]></artwork>
           </figure>
         </t>
         <t hangText="">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    RELATED-TO:jsmith.part7.19960817T083000.xyzMail@example.com

    RELATED-TO:19960401-080045-4000F192713-0052@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- RELATED_TO -->

   <section title="Uniform Resource Locator" anchor="UNIFORM_RESOURCE_LOCATOR">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           URL
         </t>
         <t hangText="Purpose:">
           This property defines a Uniform Resource Locator (URL)
           associated with the iCalendar object.
         </t>
         <t hangText="Value Type:">
           URI
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified once in the "VEVENT", "VTODO",
           "VJOURNAL", or "VFREEBUSY" calendar components.
         </t>
         <t hangText="Description:">
           This property may be used in a calendar component to convey
           a location where a more dynamic rendition of the calendar
           information associated with the calendar component can be
           found. This memo does not attempt to standardize the form
           of the URI, nor the format of the resource pointed to by
           the property value. If the URL property and Content-Location
           MIME header are both specified, they MUST point to the same
           resource.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    url        = "URL" urlparam ":" uri CRLF

    urlparam   = *(";" other-param)
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    URL:http://example.com/pub/calendars/jsmith/mytime.ics
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- UNIFORM_RESOURCE_LOCATOR -->




   <section title="Unique Identifier" anchor="UNIQUE_IDENTIFIER">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           UID
         </t>
         <t hangText="Purpose:">
           This property defines the persistent, globally unique
           identifier for the calendar component.
         </t>
         <t hangText="Value Type:">
           TEXT
         </t>
         <t hangText="Property Parameters:">
           IANA and non-standard
           property parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           The property MUST be specified in the "VEVENT", "VTODO",
           "VJOURNAL", or "VFREEBUSY" calendar components.
         </t>
         <t hangText="Description:">
           The "UID"
           itself MUST be a globally unique identifier. The
           generator of the identifier MUST guarantee that the identifier
           is unique. There are several algorithms that can be used
           to accomplish this.



           A good method to assure uniqueness is to put the
           domain name or a domain literal IP address of the host on
           which the identifier was created on the right-hand side of


             an

           "@", and on the left-hand side, put a combination
           of the current calendar date
           and time of day (i.e., formatted in as a DATE-TIME value)
           along with some other currently unique (perhaps sequential)
           identifier available on the system (for example, a process
           id number). Using a DATE-TIME value on the left-hand side
           and a domain name or domain literal on the right-hand side
           makes it possible to guarantee uniqueness since no two hosts
           should be using the same domain name or IP address at the same
           time. Though other algorithms will work, it is RECOMMENDED that
           the right-hand side contain some domain identifier (either
           of the host itself or otherwise) such that the generator of
           the message identifier can guarantee the uniqueness of the
           left-hand side within the scope of that domain.
         </t>
         <t>
           This is the method for correlating scheduling messages with the
           referenced "VEVENT", "VTODO", or "VJOURNAL" calendar component.
         </t>
         <t>
           The full range of calendar components specified by a recurrence
           set is referenced by referring to just the "UID" property value
           corresponding to the calendar component. The "RECURRENCE-ID"
           property allows the reference to an individual instance within
           the recurrence set.
         </t>
         <t>
           This property is an important method for group-scheduling
           applications to match requests with later replies,
           modifications, or deletion requests. Calendaring and scheduling
           applications MUST generate this property in "VEVENT", "VTODO",
           and "VJOURNAL" calendar components to assure interoperability
           with other group-scheduling applications. This identifier is
           created by the calendar system that generates an iCalendar
           object.
         </t>
         <t>
           Implementations MUST be able to receive and persist values
           of at least 255


             octets
            for this property,
           but they MUST NOT truncate values in the middle of a UTF-8 multi-octet sequence.
         </t>
         <t hangText="Format Definition:">


             This

           property is defined by the following notation:
           <figure>
<artwork name="abnf"><![CDATA[
    uid        = "UID" uidparam ":" text CRLF

    uidparam   = *(";" other-param)
]]></artwork>
           </figure>
         </t>
         <t hangText="Example:">
           The following is an example of this property:
           <figure>
<artwork><![CDATA[
    UID:19960401T080045Z-4000F192713-0052@example.com
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
   </section><!-- UNIQUE_IDENTIFIER -->
 </section><!-- RELATIONSHIP_COMPONENT_PROPERTIES -->

 <section title="Recurrence Component Properties" anchor="RECURRENCE_COMPONENT_PROPERTIES">
   <t>
     The following properties specify recurrence information in calendar
     components.
   </t>

   <section title="Exception Date-Times" anchor="EXCEPTION_DATE_TIMES">
     <t>
       <list style="hanging">
         <t hangText="Property Name:">
           EXDATE
         </t>
         <t hangText="Purpose:">
           This property defines the list of DATE-TIME exceptions for



               recurring events, to-dos, journal entries,
               or time zone definitions.


         </t>
         <t hangText="Value Type:">
           The default value type for this property is DATE-TIME.
           The value type can be set to DATE.
         </t>
         <t hangText="Property Parameters:">
           IANA, non-standard,
           value data type, and time zone identifier property
           parameters can be specified on this property.
         </t>
         <t hangText="Conformance:">
           This property can be specified in



               recurring "VEVENT", "VTODO", and "VJOURNAL" calendar
               components as well as in the "STANDARD" and "DAYLIGHT"
               sub-components of the "VTIMEZONE" calendar component.


         </t>
         <t hangText="Description:">
           The exception dates, if specified, are used in computing the
           recurrence set. The recurrence set is the complete set of
           recurrence instances for a calendar component. The recurrence
           set is generated by considering the initial "DTSTART"
           property along with the "RRULE", "RDATE", 

             and 

           "EXDATE"



           properties contained within the


             recurring component.

           The "DTSTART" property defines the first instance in the
           recurrence set.


               The "DTSTART" property value SHOULD match the pattern of
               the recurrence rule, if specified. The recurrence set
               generated with a "DTSTART" property value that doesn't
               match the pattern of the rule is undefined.





           The final recurrence set is generated by gathering all
           of the start DATE-TIME values generated by any of the specified
           "RRULE" and "RDATE" properties, and then excluding any start
           DATE-TIME values specified by "EXDATE" properties.
           This implies that start DATE-TIME values 
           specified by "EXDATE" properties
           take precedence over those specified by inclusion properties
           (i.e., "RDATE" and "RRULE").


             When

           duplicate instances are generated by the "RRULE" and "RDATE"
           properties, only one recurrence is considered. Duplicate
           instances are ignored.
         </t>
         <t>
           The "EXDATE" property can be used to exclude the value
           specified in "DTSTART". However, in such cases, the original
           "DTSTART" date MUST still be maintained by the cal