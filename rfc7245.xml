<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY rfc3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">

<!ENTITY rfc3263 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3263.xml"> <!-- Locating SIP Servers -->

<!ENTITY rfc3840 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3840.xml"> <!-- Indicating UA Capabilities in SIP -->

<!ENTITY rfc4353 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4353.xml"> <!-- A Framework for Conferencing -->

<!ENTITY rfc4575 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4575.xml"> <!-- Conference Event Package -->

<!ENTITY rfc5567 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5567.xml"> <!-- An Architectural Framework for Media Server Control -->

<!ENTITY rfc5369 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5369.xml"> <!-- Framework for Transcoding with SIP -->

<!ENTITY rfcSDP SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4566.xml">

<!ENTITY RAVEN SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2804.xml">

<!ENTITY rfc6341 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6341.xml"> <!-- SIPREC Requirements -->
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc rfcedstyle="yes" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc sortrefs="no" ?>

<rfc number="7245" category="info" ipr="trust200902" submissionType="IETF" consensus="yes"> 

<front>
  <title abbrev="Architecture for Media Recording">An Architecture for Media Recording Using&nbsp;the&nbsp;Session&nbsp;Initiation&nbsp;Protocol</title>
  <author fullname="Andrew Hutton" initials="A" surname="Hutton" role="editor">
    <organization>Unify</organization>
    <address>
	  <postal>
		<street>Hofmannstrasse 51</street>
		<city>81359 Munich</city>
		<country>Germany</country>
	  </postal> 	  
      <email>andrew.hutton@unify.com</email>
    </address>
  </author>
  <author fullname="Leon Portman" initials="L" surname="Portman" role="editor">
    <organization>NICE Systems</organization>
    <address>
	<postal>
		<street>8 Hapnina</street>
		<city>Ra'anana  43017</city>
		<country>Israel</country>
	</postal>
	<email>leon.portman@gmail.com</email>
    </address>
  </author>
  <author fullname="Rajnish Jain" initials="R" surname="Jain">
    <organization>IPC Systems</organization>
    <address>
	<postal>
		<street>777 Commerce Drive</street>
		<city>Fairfield, CT  06825</city>
		<country>USA</country>
	</postal>
	<email>rajnish.jain@outlook.com</email>
    </address>
  </author>  
  <author fullname="Ken Rehor" initials="K" surname="Rehor">
    <organization>Cisco Systems, Inc.</organization>
    <address>
	<postal>
		<street>170 West Tasman Drive</street>
		<city>San Jose, CA  95134-1706</city>
		<country>USA</country>
	</postal>
	<email>krehor@cisco.com</email>
    </address>
  </author>  
    
  <date month="May" year="2014"></date>
  <area>RAI</area>
  <workgroup>SIPREC</workgroup>

  <keyword>SIP</keyword>

  <abstract>
    <t>Session recording is a critical requirement in many communications
    environments such as call centers and financial trading.  In some of these
    environments, all calls must be recorded for regulatory, compliance, and
    consumer protection reasons.  Recording of a session is typically
    performed by sending a copy of a media stream to a recording device. This
    document describes architectures for deploying session recording solutions in an environment that is based on the Session Initiation Protocol (SIP). 
    </t>
  </abstract>
</front>
<middle>
 
<section title="Introduction">
	<t>Session recording is a critical requirement in many communications environments such as call centers and financial trading.  
	In some of these environments, all calls must be recorded for regulatory, compliance, and consumer protection reasons.  
	Recording of a session is typically performed by sending a copy of a media stream to a recording device. 
	This document describes architectures for deploying session recording solutions as defined in 
	"Use Cases and Requirements for SIP-Based Media Recording (SIPREC)" <xref target="RFC6341"/>. 
	</t>
	<t>This document focuses on how sessions are established between a
	Session Recording Client (SRC) and the Session Recording Server (SRS)
	for the purpose of conveying the Replicated Media and Recording
	Metadata (e.g., identity of the parties involved) relating to the Communication Session.
	</t>
	<t>Once the Replicated Media and Recording Metadata have been received
	by the SRS, they will typically be archived for retrieval at a later
	time. The procedures relating to the archiving and retrieval of this
	information are outside the scope of this document.
	</t>
	<t>This document only considers active recording, where the SRC purposefully streams media to a SRS.  Passive recording, where a recording device detects media directly from the network (e.g., using port-mirroring techniques), is outside the scope of this document.  In addition, lawful intercept is outside the scope of this document, which takes account of the IETF policy on wiretapping <xref target="RFC2804"></xref>.
	</t>
	<t>The Recording Session that is established between the SRC
	and the SRS uses the normal procedures for establishing
	INVITE-initiated dialogs as specified
	in <xref target="RFC3261"></xref> and uses the Session Description Protocol (SDP) for describing the media to be used during the session as specified in <xref target="RFC4566"></xref>. However, it is intended that some extensions to SIP (e.g., Headers, Option Tags, etc.) will be defined to support the requirements for media recording. The Replicated Media is required to be sent in real-time to the SRS and is not buffered by the SRC to allow for real-time analysis of the media by the SRS.

	</t>
</section>

<section title="Definitions">  

<t>
   The first four definitions are quoted from RFC 6341.

<list style="hanging" hangIndent="3">

	<t hangText="Session Recording Server (SRS):">A Session Recording Server (SRS) is
	a SIP User Agent (UA) that is a specialized media server or collector
	that acts as the sink of the recorded media. An SRS is typically
	implemented as a multi-port device that is capable of receiving media
	from multiple sources simultaneously. An SRS is the sink of the
	recorded session metadata.  
	</t>

	<t hangText="Session Recording Client (SRC):">A Session Recording Client (SRC) is
	a SIP User Agent (UA) that acts as the source of the recorded media,
	sending it to the SRS.  An SRC is a logical	function.  Its
	capabilities may be implemented across one or more physical devices.
	In practice, an SRC could be a personal device (such as a SIP phone), a SIP Media Gateway (MG), a Session Border Controller (SBC), or a SIP Media Server (MS) integrated with an Application Server (AS). This specification defines the term "SRC" such	that all such SIP entities can be generically addressed under one definition.  The SRC provides metadata to the SRS.
	</t>
	<t hangText="Communication Session (CS):"> A session created between two or more SIP User Agents (UAs) that is the subject of recording.
	</t>
	<t hangText="Recording Session (RS):"> The SIP session created between an SRC and SRS for the purpose of recording a CS.
	</t>
</list>
</t>

<t>
The following terms are defined by this document.

<list style="hanging" hangIndent="3">

	<t hangText="Recording-aware User Agent (UA):"> A SIP User Agent that is aware of SIP extensions associated with the CS. Such extensions may be used to notify the recording-aware UA that a session is being recorded, or by a recording-aware UA to express preferences as to whether a recording should be started, paused, resumed, or stopped.
	</t>
	<t hangText="Recording-unaware User Agent (UA):"> A SIP User Agent that is
	unaware of SIP extensions associated with the CS. Such a
	recording-unaware UA will be notified that a session is being
	recorded or will express preferences as to whether a recording
	should be started, paused, resumed, or stopped via some other means that is out of scope for the SIP media recording architecture.
	</t>


	<t hangText="Recording Metadata:"> The metadata describing the CS that is
	required by the SRS. This will include, for example, the identities of users that participate in the CS and dialog state. Typically, this metadata is archived with the Replicated Media at the SRS. The recording metadata is delivered in real-time to the SRS.
	</t>
	<t hangText="Replicated Media:"> A copy of the media that is associated with the
	CS, was created by the SRC, and was sent to the SRS. It may contain all
	the media associated with the CS (e.g., audio and video) or
	just a subset (e.g., audio). Replicated Media is part of the Recording Session.
	</t>  
      </list>
    </t>

</section> 
  
  
<section title="Session Recording Architecture">

  <section title="Location of the SRC">
    <t>This section contains some example session recording architectures showing how the SRC is a logical function that can be located in or split between various physical components.  
    </t>
 
	<section title="B2BUA Acts as a SRC">
	   
	   <t>A SIP Back-to-Back User Agent (B2BUA) that has access to the media to be recorded may act as an SRC. The B2BUA may already be aware that a session needs to be recorded before the initial establishment of the CS, or the decision to record the session may occur after the session has been established.</t>

	   <t>If the SRC makes the decision to initiate the RS, then it will
	   do so by sending a SIP INVITE request to the SRS.
	   </t>
	   <t>If the SRS makes the decision to initiate the Recording Session, then it will initiate the establishment of a SIP RS by sending an INVITE to the SRC.
	   </t>
	   <t>The RS INVITE contains information that identifies the
	   session as being established for the purposes of recording
	   and prevents the session from being accidentally rerouted
	   to a UA that is not an SRS if the RS was initiated by the
	   SRC or vice versa.
	   </t>
	   <t>The B2BUA/SRC is responsible for notifying the UAs involved in the CS that the session is being recorded.
	   </t>
	   <t>The B2BUA/SRC is responsible for complying with requests from recording aware UAs or through some configured policies indicating that the CS should not be recorded.
	   </t>

	   
   <figure title="B2BUA Acts as the Session Recording Client" anchor="fig_B2BUAacts"><artwork><![CDATA[
                                           +-----------+
                       (Recording Session) |  Session  |
                          +------SIP------>| Recording |
                          |                |  Server   |
                          |  +--RTP/RTCP-->|  (SRS)    |
                          |  |             +-----------+
                          V  V                   ^
                     +-------------+             |
                     |             |             |
                     |             |-- Metadata -+
                     |             |
                     |    B2BUA    |
                     |             |
                     |   Session   |
  +--------+         |  Recording  |         +---------+
  |        |<- SIP ->|   Client    |<- SIP ->|         |
  |  UA-A  |         |   (SRC)     |         |  UA-B   |
  |        |<- RTP/->|             |<- RTP/->|         |
  +--------+   RTCP  |             |   RTCP  +---------+
                     +-------------+
  |____________________________________________________|
                 (Communication Session)
    ]]></artwork></figure>
    </section>
    
   
   	<section title="Endpoint Acts as SRC" anchor="sec_endpoint_as_src">
   
   	<t>A SIP endpoint / UA may act as a SRC. In that case, the endpoint sends the Replicated Media to the SRS.
   	</t>
   	<t>If the endpoint makes the decision to initiate the Recording Session, then it will initiate the establishment of a SIP Session by sending an INVITE to the SRS.
   	</t>
   	<t>If the SRS makes the decision to initiate the Recording Session, then it will initiate the establishment of a SIP Session by sending an INVITE to the endpoint. The actual decision mechanism is out of scope for the SIP media recording architecture. 
   	</t>
 
   	     
    <figure title="SIP Endpoint Acts as the Session Recording Client" anchor="fig_sipendpoint"><artwork><![CDATA[ 
       (Recording Session) +-----------+
      +----------SIP------>|           |
      |  +----RTP/RTCP---->|  Session  |
      |  |                 | Recording |
      |  |                 |  Server   |
      |  | +-- Metadata -->|   (SRS)   |
      |  | |               |           |
      |  | |               +-----------+
      |  | |
      |  | |
      |  | |
      |  | |
      V  V |  (Communication Session)
   +--+------+                     +---------+
   |         |<-------SIP--------->|         |
   |  UA-A   |                     |  UA-B   |
   |  (SRC)  |<-----RTP/RTCP------>|         |
   +---------+                     +---------+
    ]]></artwork></figure>

    </section>
    
	<section title="A SIP Proxy Cannot Be a SRC">
	    <t>A SIP Proxy is unable to act as an SRC because it does not have access to the media and therefore has no way of enabling the delivery of the Replicated Media to the SRS.</t>
	</section>    	

 	<section title="Interaction with MEDIACTRL">
	    <t>The MEDIACTRL
	    architecture <xref target="RFC5567"></xref> describes an
	    architecture in which an Application Server (AS) controls
	    a Media Server (MS), which may be used for purposes such
	    as conferencing and recording media streams. In the
	    architecture described in <xref target="RFC5567"></xref>, the AS typically uses SIP Third Party Call Control (3PCC) to instruct the SIP UAs to direct their media to the Media Server. 
	    </t>
		
		<t>The SRC or the SRS described in this document may
		be architected according
		to  <xref target="RFC5567"></xref>; therefore, when
		further decomposed, they may be made up of an AS that
		uses a MEDIACTRL interface to control an MS. 
    </t>
    <t>As shown in <xref target="fig_MEDIACTRL"/>, when the SRS is
    architected according to  <xref target="RFC5567"></xref>, the MS
    acts as a sink of the recording media, and the AS acts as a sink
    of the metadata and the termination point for RS SIP signaling. As
    shown in <xref target="fig_clientdecomp"/>, when the SRC is architected according to  <xref target="RFC5567"></xref>, the MS acts as a source of recording media, and the AS acts as a source of the metadata and the termination point for RS SIP signaling. 
		</t>
	      
<figure title="Example of Session Recording Server using MEDIACTRL" anchor="fig_MEDIACTRL"><artwork><![CDATA[ 
                                  Session Recording Server (SRS)
                           +----------------------------------------+
                           |                                        |
       (Recording Session) |  +-----------+          +------------+ |
       +------------SIP----|->|           |          |            | |
       |                   |  | MEDIACTRL |MEDIACTRL |   Media    | |
       |                   |  |Application|<-------->|   Server   | |
       |    +-----Metadata--->|  Server   |          |  (Recorder)| |
       |    |              |  |           |          |            | |
       |    |              |  +-----------+          +------------+ |
       |    |              |                              ^         |
       |    |              +------------------------------|---------+
       |    |  +--------------- RTP/RTCP -----------------+
       |    |  |
       V    |  V
     +---+------+                          +---------+
     |          |<-------SIP-------------->|         |
     |   UA-A   | (Communication Session)  |  UA-B   |
     |   (SRC)  |<-------RTP/RTCP--------->|         |
     +----------+                          +---------+
 	]]></artwork></figure>

 <figure title="Example of Session Recording Client Decomposition" anchor="fig_clientdecomp"><artwork><![CDATA[ 
                                                 +----------+
              (Recording Session)                | Session  |
        +-----------SIP------------------------->|Recording |
        | +----------Metadata------------------->|  Server  |
        | |                                      |   (SRS)  |
        V | UA-A Session Recording Client (SRC)  +----------+
 +----------------------------------------+         ^
 |                                        |         |
 |  +-----------+          +------------+ |         |
 |  |           | Control  |            |<-RTP/RTCP-+    +---------+
 |  |    UA     | Protocol |   Media    | |              |         |
 |  |Application|<-------->|  Server    | |<----SIP----->|  UA-B   |
 |  |  Server   |          |            |<-----RTP------>|         |
 |  |           |          |            | |              +---------+
 |  +-----------+          +------------+ |
 |                                        |
 +----------------------------------------+
 	]]></artwork></figure>
	</section> 
	
	<section title="Interaction with Conference Focus">
	    <t>In the case of a centralized conference, a combination of the conference focus and mixer <xref target="RFC4353"></xref> may act as a SRC and therefore provide the SRS with the Replicated Media and associated recording metadata. In this arrangement, the SRC is able to provide media and metadata relating to each of the participants, including, for example, any side conversations where the media passes through the mixer.
	    </t>
		<t>The conference focus can either provide mixed
		Replicated Media or separate streams per conference
		participant (as depicted in <xref target="fig_conferencefocus"/>).
		</t>
	    <t>The conference focus may also act as a recording-aware UA in the case when one of the participants acts as a SRC. 
	    </t>
	    <t>In an alternative arrangement, a SIP endpoint that is a conference participant can act as an SRC. The SRC will in this case have access to the media and metadata relating to that particular participant and may be able to obtain additional metadata from the conference focus. The SRC may, for example, use the conference event package as described in <xref target="RFC4575"></xref> to obtain information about other participants that it provides to the SRS within the recording metadata.
	    </t>
		<t>The SRC may be involved in the conference from the very beginning or may join at some later point of time.
		</t> 

<figure title="Conference Focus Acting as an SRC" anchor="fig_conferencefocus"><artwork><![CDATA[ 
                             User 1
                         +-----------+
                         |           |
                         |           |
                         |Participant|
                         |     1     |
                         |           |
                         +-----------+
                             ^ ^SIP
                         RTP | |Dialog
                             | |1
    User 2                   V V       Recording
 +-----------+           +-----------+  Session     *************
 |           |           |           |<------------>*           *
 |           |<-- RTP -->|           |<-RTP/RTCP 1->*           *
 |Participant|<--------->| Focus/SRC |<-RTP/RTCP 2->*    SRS    *
 |     2     |  SIP      |           |<-RTP/RTCP 3->*           *
 |           |  Dialog   |           |              *           *
 +-----------+  2        +-----------+              *************
                              ^ ^
                              | |SIP
                          RTP | |Dialog
                              | |3
                              V V
                         +-----------+
                         |           |
                         |           |
                         |Participant|
                         |    3      |
                         |           |
                         +-----------+
                            User 3
 	]]></artwork></figure>
 	
	</section>    	
	   
</section>
      
<section title="Establishing the Recording Session">

	<t>The SRC or the SRS may initiate the Recording Session. </t>
	
	<t>It should be noted that the Recording Session is independent from the CS that is being recorded at both the SIP dialog level and at the session level. 
	</t>
	
	<t>Concerning media negotiation, regular SIP/SDP capabilities should be used, and existing transcoding capabilities and media encryption should not be precluded.
	</t>
	
	<section title="SRC-Initiated Recording">
	  
	  <t>When the SRC initiates the Recording Session  for the purpose of conveying media to the SRS, it performs the following actions:

      <list style="symbols">
      		<t>Is provisioned with a Unified Resource
      		Identifier (URI) for the SRS; the URI is resolved through normal <xref target="RFC3263"></xref> procedures.</t>
            <t>Initiates the dialog by sending an INVITE request to the SRS. The dialog is established according to the normal procedures for establishing an INVITE-initiated dialog as specified in <xref target="RFC3261"></xref>.</t>
      		<t>Includes in the INVITE an indication that the session is established for the purpose of recording the associated media.</t>
      		<t>Includes an SDP attribute of "a=sendonly" for each
      		media line if the Replicated Media is to be started
      		immediately, or includes "a=inactive" if it is not ready to transmit the media.</t>

      		<t>Replicates the media streams that are to be recorded and transmits the media to the SRS.</t>
       </list></t>
  
      		<t>The Recording Session may replicate all media associated with the CS or only a subset.</t>

	</section>

	<section title="SRS-Initiated Recording">
    	<t>When the SRS initiates the media Recording Session with the SRC, it performs the following actions:</t>
	
      <t><list style="symbols">
			<t>Is provisioned with a Unified
			Resource Identifier (URI) for the SRC; the URI is resolved through normal <xref target="RFC3263"></xref> procedures.</t>
    	    <t>Sends an INVITE request to the SRC.</t>
      	   	<t>Includes in the INVITE an indication that the session is established for the purpose of recording the associated media.</t>
      		<t>Identifies the sessions that are to be recorded. The actual mechanism of the identification depends on SRC policy.</t>
      		<t>Includes an SDP attribute of "a=recvonly" for each
      		media line if the Recording Session is to be started
      		immediately, or includes "a=inactive" if it is not ready to receive the media.</t>
      </list></t>
	  <t>If the SRS does not have prior knowledge of what media
	  streams are available to be recorded, it can make use of an
	  offerless INVITE, which allows the SRC to make the initial
	  SDP offer.</t>
      	     
	</section>

	<section title="Pause/Resume Recording Session">
    	<t>The SRS or the SRC may pause the recording by changing the SDP direction attribute to "inactive" and resume the recording by changing the direction back to "recvonly" or "sendonly".</t>
	</section>
	
	<section title="Media Stream Mixing">
		<t>In a basic session involving only audio, there are
		typically two audio/RTP streams between the two UAs
		involved in transporting media in each direction.  When recording this media, the two streams may be mixed or not mixed at the SRC before being transmitted to the SRS. 
   In the case when they are not mixed, two separate streams are sent
   to the SRS, and the SDP offer sent to the SRS must describe two
   separate media streams.  In the mixed case, a single mixed media
   stream is sent to the SRS.
		</t>
				
	</section>

	<section title="Media Transcoding">
		<t>The CS and the RS are negotiated separately using the standard SDP offer/answer exchange which may result in the SRC having to perform media transcoding between the two sessions. If the SRC is not capable of performing  media transcoding it may limit the media formats in the offer to the SRS depending on what media is negotiated on the CS or may limit what it includes in the offer on the CS if it has prior knowledge of the media formats supported by the SRS. However typically the SRS will be a more capable device which can provide a wide range of media format options to the SRC and may also be able to make use of a media transcoder as detailed in <xref target="RFC5369"></xref>.
		</t>
	</section>		

	<section title="Lossless Recording">	
		<t>Session recording may be a regulatory requirement
		in certain communication environments. Such
		environments may impose a requirement generally known
		as "lossless recording". An overall solution for
		lossless recording may involve multiple layers of
		solutions. Individual aspects of the solutions may
		range from administering networks for appropriate
		QoS, reliable transmission of recorded media, and perhaps certain SIPREC protocol-level capabilities in SRC and SRS.
		</t>
				
	</section>		

</section>

<section title="Recording Metadata">

	<section title="Contents of Recording Metadata">
	
	<t>The metadata model is defined in  <xref target="REC-METADATA" />.</t>

	</section>

	<section title="Mechanisms for Delivery of Metadata to SRS">
	
	<t>The SRS obtains session recording metadata from the SRC. The metadata is transported via SIP-based mechanisms as specified in <xref target="REC-PROTOCOL" /> </t>

	<t>It is also possible that metadata is transported via non-SIP-based mechanisms, but these are considered out of scope.</t>
	<t>It is also possible to have an RS session without the
	metadata; in that case, the SRS will be receiving the metadata by some other means or not at all.</t>
 
	</section>

</section>

<section title="Notifications to the Recorded User Agents">
 
	<t>Typically, a user that is involved in a session that is to be recorded is notified by an announcement at the beginning of the session or may receive some warning tones within the media. However, SIPREC enables an indication that the call is being recorded to be included in the SIP requests and responses associated with that CS.
	</t>

	<t>
The SRC provides the notification to all SIP UAs for which it is replicating
received media for the purpose of recording. If the SRC is acting as a SIP endpoint,
as described in <xref target="sec_endpoint_as_src"/>, then it also provides a notification to the local user.
	</t>
	
</section>

<section title="Preventing the Recording of a SIP Session">
	<t>During the initial session establishment or during an
	established session, a recording-aware UA may provide an indication of its preference with regard to recording the media in the CS. The mechanisms for this are specified in <xref target="REC-PROTOCOL" /> 
	</t>

</section>
        
</section>

 
<section title="IANA Considerations">
    <t>This document has no actions for IANA. This document mentions
    SIP/SDP extensions. The associated IANA considerations are
    addressed in <xref target="REC-PROTOCOL" />, which defines them.</t>
</section>

<section title="Security Considerations" anchor="section-security">
    <t>The Recording Session is fundamentally a standard SIP dialog and media session and therefore makes use of existing SIP security mechanisms for securing the Recording Session and Recording Metadata. 
    </t>
    <t>The intended use of this architecture is only for the case where the users are aware that they are being recorded, and the architecture provides the means for the SRC to notify users that they are being recorded. 
    </t>
    <t>This architectural solution is not intended to support lawful intercept, which in contrast requires that users are not informed.
    </t>
    <t>It is the responsibility of the SRS to protect the Replicated Media and Recording Metadata once it has been received and archived. The stored content must be protected using a cipher at least as strong (or stronger) than the original content; however, the mechanism for protecting the storage and retrieval from the SRS is out of scope of this work. The keys used to store the data must also be securely maintained by the SRS and should only be released, securely, to authorized parties.  How to secure these keys, properly authorize a receiving party, or securely distribute the keying material is also out of scope of this work.
    </t>
    <t>Protection of the RS should not be weaker than protection of
    the CS and may need to be stronger because the media is retransmitted (allowing more possibility for interception). This applies to both the signaling and media paths. 
    </t> 
    <t>It is essential that the SRC will authenticate the SRS because the client must be certain that it is recording on the right recording system. It is less important that the SRS authenticate the SRC, but implementations must have the ability to perform mutual authentication.
    </t>
    <t>In some environments, it is desirable to not decrypt and re-encrypt the media.  This means the same media encryption key is negotiated and used within the CS and RS.  If for any reason the media are decrypted on the CS and are re-encrypted on the RS, a new key must be used.
    </t>
    <t>The retrieval mechanism for media recorded by this protocol is
    out of scope. Implementations of retrieval mechanisms should
    consider the security implications carefully, as the retriever is
    not usually a party to the call that was recorded.  Retrievers
    should be authenticated carefully. The cryptosuites on the
    retrieval should be no less strong than those used on the RS and may need to be stronger.
    </t>
</section>

<section title="Acknowledgements">
      <t>Thanks to John Elwell, Brian Rosen, Alan Johnson, Cullen Jennings, Hadriel Kaplan, Henry Lum,  
      Paul Kyzivat, Parthasarathi R., Ram Mohan R., Charles Eckel, Friso Feenstra, and Dave Higton
      for their significant contributions and assistance with this document and working group. 
      Also, thanks to all the members of the SIPREC WG mailing list for 
      providing valuable input to this work.</t>
</section>


</middle>

<back>
  <references title="Informative References">
    &rfc3261;
    &rfc3263;
    &rfcSDP;
    &rfc6341;
<!-- draft-ietf-siprec-metadata: I-D Exists -->
<reference anchor='REC-METADATA'>
<front>
<title>Session Initiation Protocol (SIP) Recording Metadata</title>

<author initials='R' surname='Ravindranath' fullname='Ram Ravindranath'>
    <organization />
</author>

<author initials='P' surname='Ravindran' fullname='Parthasarathi Ravindran'>
    <organization />
</author>

<author initials='P' surname='Kyzivat' fullname='Paul Kyzivat'>
    <organization />
</author>

<date month='February' day='11' year='2014' />

<abstract><t>Session recording is a critical requirement in many communications environments such as call centers and financial trading.  In some of these environments, all calls must be recorded for regulatory, compliance, and consumer protection reasons.  Recording of a session is typically performed by sending a copy of a media stream to a recording device.  This document describes the metadata model as viewed by Session Recording Server(SRS) and the Recording metadata format.</t></abstract>

</front>

<seriesInfo name="Work" value="in Progress"/>
</reference>

<!-- draft-ietf-siprec-protocol: I-D Exists -->
<reference anchor='REC-PROTOCOL'>
<front>
<title>Session Recording Protocol</title>

<author initials='L' surname='Portman' fullname='Leon Portman'>
    <organization />
</author>

<author initials='H' surname='Lum' fullname='Henry Lum'>
    <organization />
</author>

<author initials='C' surname='Eckel' fullname='Charles Eckel'>
    <organization />
</author>

<author initials='A' surname='Johnston' fullname='Alan Johnston'>
    <organization />
</author>

<author initials='A' surname='Hutton' fullname='Andrew Hutton'>
    <organization />
</author>

<date month='February' day='14' year='2014' />

<abstract><t>This document specifies the use of the Session Initiation Protocol (SIP), the Session Description Protocol (SDP), and the Real Time Protocol (RTP) for delivering real-time media and metadata from a Communication Session (CS) to a recording device.  The Session Recording Protocol specifies the use of SIP, SDP, and RTP to establish a Recording Session (RS) between the Session Recording Client (SRC), which is on the path of the CS, and a Session Recording Server (SRS) at the recording device.</t></abstract>

</front>

<seriesInfo name="Work" value="in Progress"/>

</reference>

    &rfc4353;
    &rfc4575;
    &rfc5567;
    &rfc5369;
    &RAVEN;
   </references>
</back>

</rfc>
