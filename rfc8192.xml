<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM "reference.RFC.2119.xml">
<!ENTITY RFC2904 SYSTEM "reference.RFC.2904.xml">
<!ENTITY RFC4948 SYSTEM "reference.RFC.4948.xml">
<!ENTITY RFC7297 SYSTEM "reference.RFC.7277.xml">
<!ENTITY RFC7149 SYSTEM "reference.RFC.7149.xml">
<!ENTITY RFC4566 SYSTEM "reference.RFC.4566.xml">
<!ENTITY RFC5925 SYSTEM "reference.RFC.5925.xml">
<!ENTITY RFC6973 SYSTEM "reference.RFC.6973.xml">
<!ENTITY RFC7149 SYSTEM "reference.RFC.7149.xml">
<!ENTITY RFC7426 SYSTEM "reference.RFC.7426.xml">
]>


<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc number="8192" 
     category="info" 
     submissionType="IETF"
     consensus="yes"
     ipr="trust200902">


  <front>
    <title abbrev="I2NSF Problem Statement &amp; Use Cases">Interface to Network Security
    Functions (I2NSF): Problem Statement and Use Cases</title>

    <author fullname="Susan Hares" initials="S" surname="Hares">
      <organization>Huawei</organization>

      <address>
        <postal>
          <street>7453 Hickory Hill</street>

          <city>Saline</city>

          <region>MI</region>

          <code>48176</code>

          <country>United States of America</country>
        </postal>

        <phone>+1-734-604-0332</phone>

        <email>shares@ndzh.com</email>
      </address>
    </author>

    <author fullname="Diego R. Lopez" initials="D" surname="Lopez">
      <organization>Telefonica I+D</organization>

      <address>
        <postal>
          <street>Don Ramon de la Cruz, 82</street>

          <city>Madrid</city>

          <code>28006</code>

          <country>Spain</country>
        </postal>

        <email>diego.r.lopez@telefonica.com</email>
      </address>
    </author>

    <author fullname="Myo Zarny" initials="M" surname="Zarny">
      <organization>vArmour</organization>
      <address>
        <postal>
          <street>800 El Camino Real, Suite 3000</street>

          <city>Mountain View</city>

          <region>CA</region>

          <code>94040</code>

          <country>United States of America</country>
        </postal>

        <email>myo@varmour.com</email>
      </address>
    </author>

    <author fullname="Christian Jacquenet" initials="C." surname="Jacquenet">
      <organization>France Telecom</organization>

      <address>
        <postal>
          <street></street>

          <city>Rennes</city>

          <region>35000</region>

          <code></code>

          <country>France</country>
        </postal>

        <email>Christian.jacquenet@orange.com</email>
      </address>
    </author>

    <author fullname="Rakesh Kumar" initials="R" surname="Kumar">
      <organization>Juniper Networks</organization>
      <address>
        <postal>
          <street>1133 Innovation Way</street>

          <city>Sunnyvale</city>

          <region>CA</region>

          <code>94089</code>

          <country>United States of America</country>
        </postal>

        <phone></phone>

        <email>rakeshkumarcloud@gmail.com</email>
      </address>
	</author>

    <author fullname="Jaehoon Paul Jeong" initials="J." surname="Jeong">
      <organization abbrev="Sungkyunkwan University">
        Department of Software
      </organization>
    
      <address>
        <postal>
            <street>Sungkyunkwan University</street>
            <street>2066 Seobu-Ro, Jangan-Gu</street>
            <city>Suwon</city> <region>Gyeonggi-Do</region>
            <code>16419</code>
            <country>Republic of Korea</country>
        </postal>
        <phone>+82 31 299 4957</phone>
        <facsimile>+82 31 290 7996</facsimile>
        <email>pauljeong@skku.edu</email>
        <uri>http://iotlab.skku.edu/people-jaehoon-jeong.php
        </uri>
      </address>
    </author>

    <date month="June" year="2017" />

    <area>Security Area</area>

    <workgroup>I2NSF</workgroup>

    <keyword>I2NSF</keyword>

    <abstract>
      <t>This document sets out the problem statement for Interface to
      Network Security Functions (I2NSF) and outlines some companion use
      cases.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>This document sets out the problem statement for Interface to
      Network Security Functions (I2NSF) and outlines some use cases. A
      summary of the state of the art in the industry and IETF that is
      relevant to I2NSF work is documented in <xref
      target="I2NSF-ANALYSIS"> </xref>.</t>

      <t>The growing challenges and complexity in maintaining a secure
      infrastructure, complying with regulatory requirements, and controlling
      costs are enticing enterprises into consuming network security functions
      hosted by service providers. The hosted security service is especially
      attractive to small- and medium-size enterprises which suffer from a lack
      of security experts to continuously monitor networks, acquire new skills,
      and propose immediate mitigations to ever increasing sets of security
      attacks.</t>

      <t>According to <xref target="Gartner"> </xref>, the demand for
      hosted (or cloud-based) security services is growing. Small- and
      medium-size businesses (SMBs) are increasingly adopting cloud-based
      security services to replace on-premises security tools, while larger
      enterprises are deploying a mix of traditional and cloud-based security
      services.</t>

      <t>To meet the demand, more and more service providers are providing
      hosted security solutions to deliver cost-effective managed security
      services to enterprise customers. The hosted security services are
      primarily targeted at enterprises (especially small and medium ones) but
      could also be provided to any kind of mass-market customer. As a result,
      the Network Security Functions (NSFs) are provided and consumed in a
      large variety of environments. Users of NSFs may consume network
      security services hosted by one or more providers, which may be their
      own enterprise, service providers, or a combination of both. 
	  </t>
	  <t>This document also briefly describes the following use cases summarized by
      <xref target="I2NSF-USECASES"></xref>:</t>

      <t><list style="symbols">
          <t>I2NSF Access Use Cases <xref target="OAM-USECASE"></xref>,</t>

          <t>I2NSF Data Center Use Cases <xref target="DC-USECASE"></xref>,
          and</t>

          <t>Integrated Security with Access Network Use Case <xref target="ACCESS-USECASE"></xref>.</t>
        </list></t>
    </section>

    <section title="Terminology">
      <t><list style="hanging">
	      <t hangText="AAA:">Authentication, Authorization, and Accounting <xref target="RFC2904"></xref></t>
          <t hangText="ACL:">Access Control List</t>

          <t hangText="Bespoke security management:">Security management
          that is made to fit a particular customer.</t>

          <t hangText="DC:">Data Center</t>


          <t hangText="FW:">Firewall</t>

          <t hangText="IDS:">Intrusion Detection System</t>

          <t hangText="IPS:">Intrusion Protection System</t>

          <t hangText="I2NSF:">Interface to Network Security Functions</t>

          <t hangText="NSF:">Network Security Function. An NSF is a function
          that is used to ensure integrity, confidentiality, or availability of 
		  network communication; to detect unwanted network activity; or to 
		  block, or at least mitigate, the effects of unwanted activity. </t>

          <t hangText="Flow-based NSF:">An NSF that inspects network flows
          according to a security policy. Flow-based security also means that
          packets are inspected in the order they are received and without
          altering packets due to the inspection process (e.g., Medium Access
	  Control (MAC) rewrites,
          TTL decrement action, or NAT inspection or changes).
	  (Note: Some existing firewalls store packets and look at the 
           packets in logical order, which is not the order these are received 
           in time.  This document restricts flow-based NSF to this definition.) 		   
		  </t>
	      <t hangText="Security service provider:">A provider of security 
		  services to the customers (end users or enterprises) using NSF equipment 
          purchased from vendors or created by the service provider.</t>	  
		  <t hangText="SDN:">Software-Defined Networking. (See <xref target="RFC7426"></xref> for
          architecture and terminology or <xref target="RFC7149"></xref> for a
	  service provider view.)
          </t>  

<t hangText="vCPE:">virtual Customer Premises Equipment</t>

	  <t hangText="vEPC:">virtual Evolved Packet Core <xref target="EPC-3GPP"></xref></t>


          <t hangText="vNSF:">Virtual NSF. An NSF that is deployed as a
          distributed virtual resource.</t>

<t hangText="vPE:">virtual Provider Edge</t>

		  <t hangText="VPN:">Virtual Private Network</t>
        </list></t>
    </section>

    <section anchor="prob-space" title="Problem Space">
      <t>The following sub-sections describe the problems and challenges
      facing customers and security service providers when some or all of the
      security functions are no longer physically hosted by the customer's
      administrative domain.</t>

      <t>Security service providers can be internal or external to the
      company. For example, an internal IT security group within a large
      enterprise could act as a security service provider for the enterprise.
      In contrast, an enterprise could outsource all security services to an
      external security service provider. In this document, the security
      service provider function, whether it is internal or external, will be
      denoted as "service provider".</t>

      <t>The "Customer-Provider" relationship may be between any two parties.
      The parties can be in different organizations or different domains of the same
      organization. Contractual agreements may be required in such contexts to
      formally document the customer's security requirements and the
      provider's guarantees to fulfill those requirements. Such agreements may
      detail protection levels, escalation procedures, alarms reporting, etc.
      There is currently no standard mechanism to capture those
      requirements.</t>

      <t>A service provider may be a customer of another service provider.</t>
	  
	  <t>It is the objective of the I2NSF work to address these problems 
	  and challenges. 
	  </t>

      <section title="Challenges Facing Security Service Providers">
        <section title="Diverse Types of Security Functions">
          <t>There are many types of NSFs. NSFs by different vendors can have
          different features and interfaces. NSFs can be
          deployed in multiple locations in a given network and perhaps have
          different roles.</t>

          <t>Below are a few examples of security functions and locations or
          contexts in which they are often deployed:<list style="hanging">
              <t
              hangText="External Intrusion and Attack Protection:">Examples
              of this function are firewall/ACL authentication, IPS, IDS, and
              endpoint protection.</t>

              <t hangText="Security Functions in a Demilitarized Zone (DMZ):">Examples of this
              function are firewall/ACLs, IDS/IPS, one or all of AAA services, 		  
              NAT, forwarding proxies, and application filtering. 
              These functions may be physically on-premise
              in a server provider's network at the DMZ spots or located in a
              "virtual" DMZ.</t>
              
              <t hangText="Centralized or Distributed Security Functions:">The
              security functions could be deployed in a centralized fashion for
              ease of management and network design or in a distributed fashion
              for scaled requirement. No matter how a security function is deployed
              and provisioned, it is desirable to have the same interface to provision
              security policies; otherwise, the job of security administration is
              more complex, requiring knowledge of firewall and network design.</t>
              
              <t
              hangText="Internal Security Analysis and Reporting:">Examples
              of this function are security logs, event correlation, and
              forensic analysis.</t>

              <t hangText="Internal Data and Content Protection:">Examples of
              this function are encryption, authorization, and public/private
              key management for internal databases.</t>
			  
			  <t hangText="Security Gateways and VPN Concentrators:">Examples of 
			  these functions are IPsec gateways, secure VPN concentrators that 
			  handle bridging secure VPNs, and secure VPN controllers for data flows. 
			  </t>
            </list></t>

          <t>Given the diversity of security functions, the contexts in which
          these functions can be deployed, and the constant evolution of these
          functions, standardizing all aspects of security functions is
          challenging and probably not feasible. Fortunately, it is not
          necessary to standardize all aspects. For example, from an I2NSF
          perspective, there is no need to standardize how every firewall's filtering
          is created or applied.  Some features in a specific vendor's filtering may be 
		  unique to the vendor's product, so it is not necessary to standardize these features.
		  </t>
          <t>What is needed is a standardized interface to control and monitor
          the rule sets that NSFs use to treat packets traversing through these NSFs. Thus,
          standardizing interfaces will provide an impetus for standardizing
          established security functions.</t>
		  <t>I2NSF may specify some filters, but these filters will be linked to 
		  specific common functionality developed by I2NSF in
		  information models 
		  or data models. 
		  </t>
        </section>

        <section title="Diverse Interfaces to Control and Monitor NSFs">
          <t>To provide effective and competitive solutions and services,
          security service providers may need to utilize multiple security
          functions from various vendors to enforce the security policies
          desired by their customers.</t>

          <t>Since no widely accepted industry standard interface to
	  NSFs exists today, management of NSFs (device and policy
	  provisioning, monitoring, etc.) tends to be custom-made security
	  management offered by product vendors. As a result, automation of 
	  such services, if it exists at all, is also custom made. Thus, even
	  in the traditional way of deploying security features, there is a gap
	  that needs to be filled; this would require coordination among
	  implementations from distinct vendors.</t>

          <t>A challenge for monitoring prior to mitigation of a security intrusion
		  is that an NSF cannot monitor what it cannot view. For example, enabling a 
		  security function to mitigate an intrusion 
		  (e.g., firewall <xref target="FIREWALLS"></xref>) 
		  must include a mechanism to provide monitoring feedback in order to 
          determine the intrusion has been stopped. Therefore, it is  
		  necessary to have a mechanism to monitor and provide
		  execution status of NSFs to security and
          compliance management tools. Such mechanisms exist
          in vendor-specific network security interfaces for forensics and
          troubleshooting, but an industry standard interface could 
          provide monitoring across a variety of NSFs. </t>
        </section>

        <section title="More Distributed NSFs and vNSFs">
          <t>The security functions that are invoked to enforce a security
          policy can be located in different equipment and network
          locations.</t>

          <t>The European Telecommunications Standards Institute (ETSI)
          Network Functions Virtualization (NFV) initiative <xref target="ETSI-NFV"></xref> creates new
          management challenges for security policies to be enforced by
          distributed vNSFs.</t>

          <t>A vNSF has higher risk of changes to the state of network connection, interfaces, 
		  or traffic, as their hosting Virtual Machines (VMs) are being created, moved, or
          decommissioned.</t>
        </section>

        <section title="More Demand to Control NSFs Dynamically">
          <t>In the advent of Software-Defined Networking (SDN) (see <xref
          target="SDN-SECURITY"></xref>), more
          clients, applications, or application controllers need to dynamically
          update their security policies that are enforced by NSFs. The
          security service providers have to dynamically update their
          decision-making process (e.g., in terms of NSF resource allocation
          and invocation) upon receiving security-related requests from their clients.</t>
        </section>

        <section title="Demand for Multi-tenancy to Control and Monitor NSFs">
          <t>Service providers may need to deploy several NSF controllers
		  to control and monitor the NSFs, especially when NSFs become distributed and
          virtualized. </t>
        </section>

        <section title="Lack of Characterization of NSFs and Capability Exchange">
          <t>To offer effective security services, service providers need to
          activate various security functions in NSFs or vNSFs manufactured by
          multiple vendors. Even within one product category (e.g., firewall),
          security functions provided by different vendors can have different
          features and capabilities. For example, filters that can be designed
          and activated by a firewall may or may not support IPv6 depending on
          the firewall technology.</t>

          <t>The service provider's management system (or controller) needs a
          way to retrieve the capabilities of service functions by different
          vendors so that it can build an effective security solution. These
          service function capabilities can be documented in a static manner
          (e.g., a file) or via an interface that accesses a repository of
          security function capabilities that the NSF vendors dynamically
          update.</t>

          <t>A dynamic capability registration is useful for automation
          because security functions may be subject to software and hardware
          updates. These updates may have implications on the policies
          enforced by the NSFs.</t>

          <t>Today, there is no standard method for vendors to describe the
          capabilities of their security functions. Without a common technical
          framework to describe the capabilities of security functions,
          service providers cannot automate the process of selecting NSFs by
          different vendors to accommodate customers' security requirements.</t>
		  <t>The I2NSF work will focus on developing 
		  a standard method to describe capabilities of security functions.
		  </t>
        </section>

        <section title="Lack of Mechanism for NSFs to Utilize External Profiles">
          <t>Many security functions depend on signature files or profiles 
		 (e.g., IPS/IDS signatures and DDoS Open Threat Signaling (DOTS) filters). Different policies
          might need different signatures or profiles. Today, blacklist
	  databases can be a beneficial strategy for all parties involved 
	  (except the attackers), but in the future, there might be
	  open-source signatures and profiles distributed as part of IDS
	  systems (e.g., by Snort, Suricata, Bro, and Kismet).</t>

          <t>There is a need to have a standard envelope (i.e., a message format) to 
          allow NSFs to use external profiles.</t>
        </section>

        <section title="Lack of Mechanisms to Accept External Alerts to Trigger Automatic Rule and Configuration Changes">
          <t>NSFs can ask the I2NSF security controller to alter specific
          rules and/or configurations.  For example, a Distributed Denial of
	  Service (DDoS) 
		  alert could trigger a change to the routing system to send traffic to a traffic scrubbing service to
          mitigate the DDoS.</t>

          <t>The DDoS protection has two parts: a) the
          configuration of signaling of open threats and b) DDoS mitigation.
          The DOTS controller manages the signaling part of DDoS. I2NSF
          controller(s) would control any changes to affected policies
          (e.g., forwarding and routing, filtering, etc.). By monitoring the
          network alerts regarding DDoS attacks (e.g., from DOTS servers or clients), 
		  the I2NSF controller(s) can feed an alerts analytics engine
          that could recognize attacks so the I2NSF can enforce the
          appropriate policies.</t>

          <t>DDoS mitigation is enhanced if the provider's network security
          controller can monitor, analyze, and investigate the abnormal events
          and provide information to the customer or change the network
          configuration automatically.</t>

          <t><xref
          target="CAP-INTERFACE"></xref>
          provides details on how monitoring aspects of the flow-based Network
          Security Functions (NSFs) can use the I2NSF interfaces to receive
          traffic reports and enforce appropriate policies.</t>
        </section>

        <section title="Lack of Mechanism for Dynamic Key Distribution to NSFs">
          <t>There is a need for a controller to create, manage, and distribute various keys to
          distributed NSFs. While there are many key management methods and 
		  cryptographic suites (e.g., encryption algorithms, key derivation functions, etc.) 
		  and other functions, there is a lack of a standard
          interface to provision and manage security associations.</t>

          <t>The keys may be used for message authentication and integrity in
          order to protect data flows. In addition, keys may be used to secure
          the protocols and messages in the core routing infrastructure 
		  (see <xref target="RFC4948"></xref>).</t>

          <t>As of now, there is not much focus on an abstraction for keying
          information that describes the interface between protocols,
          operators, and automated key management.</t>

          <t>An example of a solution may provide some insight into why
		  the lack of a mechanism is a problem.  If a device had an abstract 
		  key table maintained by security services, it could use these 
		  keys for routing and security devices.  
		  </t>
		  <t> What does this take?</t>

		  <t>Conceptually, there must be an interface defined for routing/signaling protocols 
		  that can a) make requests for automated key management when it is being used and 
		  b) notify the protocols when keys become available in the
		  key table. One potential use of such an interface is to
		  manage IPsec security associations on Software-Defined Networks.</t>

          <t>An abstract key service will work under the following conditions:
          <list style="numbers">
              <t>I2NSF needs to design the key table abstraction, the
              interface between key management protocols and routing/other
              protocols, and possibly security protocols at other layers.</t>

              <t>For each routing/other protocol, I2NSF needs to define the
              mapping between how the protocol represents key material and the
              protocol-independent key table abstraction. If several protocols share
              common mechanisms for authentication (e.g., TCP Authentication
              Option <xref target="RFC5925"></xref>), then the same mapping may be used
			  for all usages of that mechanism.</t>

              <t>Automated key management needs to support both pairwise keys and
              group keys via the abstract key service provided by items 1 and 2. 
              I2NSF controllers within the NSF that are required to exchange data with NSFs
              may exchange data with individual NSFs using individual pairwise keys or 
              with a group of NSFs simultaneously using an IP group address 
              secured by a group security key(s).     
			   </t>
            </list></t>
        </section>
      </section>

      <section title="Challenges Facing Customers">
        <t>When customers invoke hosted security services, their security
        policies may be enforced by a collection of security functions hosted
        in different domains. Customers may not have the security skills to
        express sufficiently precise requirements or security policies.
        Usually, these customers express the expectations of their security
        requirements or the intent of their security policies. These
        expectations can be considered customer-level security expectations.
        Customers may also desire to express guidelines for security
        management. Examples of such guidelines include: <list style="symbols">
            <t>which critical communications are to be preserved during
            critical events and which hosts will continue services over the network,</t>

            <t>what signaling information is passed to a controller 
            during a DDoS in order to ask for 
             mitigation services (within the scope of the DOTS Working Group),</t>

            <t>reporting of attacks to CERT (within the scope of the 
	    MILE Working Group), and</t>

            <t>managing network connectivity of systems out of compliance
            (within the scope of the 
	    SACM Working Group).</t>
          </list></t>

        <section title="NSFs from Heterogeneous Administrative Domains">
          <t>Many medium and large enterprises have deployed various
          on-premises security functions that they want to continue to
          use. These enterprises want to combine local security functions
          with remote hosted security functions to achieve more efficient and
          immediate countermeasures to attacks originating on both the
	  Internet and enterprise networks.</t>

          <t>Some enterprises may only need the hosted security services for
          their remote branch offices where minimal security
          infrastructures/capabilities exist. The security solution will
          consist of deploying NSFs on customer networks and on service
          provider networks.</t>
        </section>

        <section title="Today's Vendor-Specific Control Requests">
          <t>Customers may utilize NSFs provided by multiple service providers.
          Customers need to express their security requirements, guidelines,
          and expectations to the service providers. In turn, the service
          providers must translate this customer information into customer
          security policies and associated configuration tasks for the set of
          security functions in their network. Without a standardized 
          interface that provides a clear technical characterization, 
		  the service provider faces many challenges:
		  <list style="hanging">
              <t
              hangText="No standard technical characterization, APIs, or interface(s):  ">Even
              for the most common security services, there is no standard
              technical characterization, APIs, or interface(s).    
			  Most security services are accessible only through 
              disparate, proprietary interfaces (e.g., portals or APIs) 
	          in whatever format vendors choose to offer. The
              service provider must process the customer's input with these
              widely varying interfaces and differing configuration models for
              security devices and security policy.  Without a standard interface, 
              new innovative security products find a large barrier to entry into the
              market.</t>

              <t hangText="Lack of immediate feedback:">Customers may also
              require a mechanism to easily update/modify their security
              requirements with immediate effect in the underlying involved
              NSFs.</t>

              <t hangText="Lack of explicit invocation request:">While
              security agreements are in place, security functions may be
              solicited without requiring an explicit invocation means.
              Nevertheless, some explicit invocation means may be required to
              interact with a service function.</t>

              <t hangText="Managing by scripts du jour:">The current
              practices rely upon the use of scripts that generate other
              scripts, which automatically run to upload or download
              configuration changes, log information, and other things. These
              scripts have to be adjusted each time an implementation from a
              different vendor technology is enabled by a provider.</t>

            </list></t>
          
		 
			
          <t>To see how standard interfaces could help achieve faster
          implementation time cycles, let us consider a customer who would
          like to dynamically allow an encrypted flow with a specific port,
          src/dst addresses, or protocol type through the firewall/IPS to
          enable an encrypted video conferencing call only during the time of
          the call. With no commonly accepted interface in place, as shown in
	  <xref target="figure_1"/>, 
		  the customer would have to learn about the particular 
		  provider's firewall/IPS interface and send the request in the provider's required
          format.</t>

          <t><figure title="Example of Non-standard vs. Standard Interface" anchor="figure_1">
              <artwork><![CDATA[
        +------------+
        | Security   | 
        | Management | 
        | System     |
        +----||------+  
             ||   Proprietary 
             ||   or I2NSF Standard
Video:       ||
Port 10   +--------+
  --------| FW/IPS |-------------
Encrypted +--------+
Video Flow 
]]></artwork>
            </figure></t>

          <t>In contrast, as <xref target="figure_1"/> shows, if a
	  firewall/IPS interface standard exists, the
          customer would be able to send the request to a security management
	  system, and the security management would send it via a I2NSF
	  standard interface. 
          Service providers could now utilize the same standard interface
          to represent firewall/IPS services implemented using products
          from many vendors.
	   </t>
        </section>

        <section title="Difficulty for Customers to Monitor the Execution of Desired Policies">
          <t>How a policy is translated into technology-specific actions is
          hidden from the customers. However, customers still need ways to
          monitor the delivered security service that results from the
          execution of their desired security requirements, guidelines, and
          expectations.  Customers want to monitor existing policies to determine 
          such things as which policies are in effect, how many security attacks are being 
          prevented, and how much bandwidth efficiency does security enforcement cost. 
		 </t>

          <t>Today, there is no standard way for customers to get these details
	  from the security service. As a consequence, there is no way to
	  assure customers that their specified security policies are properly
	  enforced by the security functions located in the provider
	  domain.</t>

		  <t>Customers also want this monitoring information from the security system
          in order to plan for the future using "what-if" scenarios
          with real data. A tight loop between the data gathered from security 
          systems and the "what-if" scenario planning can reduce the 
          time to design and deploy workable security policies that deal with new threats. 
	      </t> 
		 <t>It is the objective of the I2NSF work to provide a standard way 
		  to get the information that security service assurance systems need to 
	      provide customers an evaluation about the current security systems and 
          to quickly plan for future security policies using "what-if" scenarios
          based on today's information. 
		 </t>
        </section>
      </section>
      <section title="Lack of Standard Interface to Inject Feedback to NSF">
        <t>Today, many security functions in the NSF, such as IPS, IDS, DDoS mitigation, and
        antivirus, depend heavily on the associated profiles. NSF devices can perform
        more effective protection if these NSF devices have the up-to-date profiles
        for these functions. Today, there is no standard interface to provide these 
		security profiles for the NSF.  
		</t>

		<t>As more sophisticated threats arise, protection will depend
		on enterprises, vendors, and service providers being able to
		cooperate to develop optimal profiles; one example of this
		cooperation is the Cyber Threat Alliance <xref target="CTA"/>.  
		The standard interface 
		to provide security profiles to the NSF should interwork with the 
		formats that exchange security profiles between organizations.</t>
		<t>One objective of the I2NSF work is to provide this type of standard interface 
		to security profiles. 
		</t>
      </section>

      <section title="Lack of Standard Interface for Capability Negotiation">
        <t>There could be situations when the selected NSFs cannot perform the
        policies requested by the security controller due to resource
        constraints. The customer and security service provider should 
		negotiate the appropriate resource constraints before the security 
		service begins.  However, unexpected events may happen that cause the 
		NSF to exhaust those negotiated resources.  At this point, 
	    the NSF should inform the security controller that the allotted 
		resources have been exhausted.  To support the automatic control
		in the SDN era, it is necessary to have a set of messages for proper
		notification (and a response to that notification) between the
        security controller and the NSFs.</t>
      </section>

      <section title="Difficulty in Validating Policies across Multiple Domains">
        <t>As discussed in the previous four sub-sections, both service providers and 
        customers have need to express policies and profiles, monitor systems, 
        verify security policy has been installed in NSFs within a security domain, 
        and establish limits for services NSFs can safely perform.  This sub-section 
       and the next sub-section (<xref target="software_defined"/>) 
       examine what happens in two specific network scenarios: 
	    a) multi-domain control of security devices hosted on virtual and
	    non-virtual NSFs and 
	    b) Software-Defined Networking.  
	    </t>
	    <t>Hosted security service may instantiate NSFs in 
        virtual machines that are sometimes widely
        distributed in the network and sometimes are combined together in one
        device to perform a set of tasks for delivering a service.
		Hosted security services may be connected within a single service provider
        or via multiple service providers. Ensuring that the security service 
        purchased by the customer adheres to customer policy requires that 
        the central controller(s) for this service monitor and validate this 
        service across multiple networks on NSFs (some of which may be 
        virtual networks on virtual machines).  To set up this cross-domain 
        service, the security controller must be able to communicate with NSFs 
        and/or controllers within its domain and across domains 
        to negotiate for the services needed.   
		</t>
         <t>Without standard interfaces and security policy data models, the
        enforcement of a customer-driven security policy remains challenging
        because of the inherent complexity created by combining the invocation
        of several vendor-specific security functions into a multi-vendor,
        heterogeneous environment across multiple domains. 
        Each vendor-specific function may require
        specific configuration procedures and operational tasks.</t>
        <t>Ensuring the consistent enforcement of the policies at various
        domains is also challenging. Standard data models are likely to
        contribute to solving that issue.</t>
      </section>
      
      <section title="Software-Defined Networks" anchor="software_defined">
        <t>Software-Defined Networks have changed the landscape of
        data-center designs by introducing overlay networks deployed over Top-of-Rack (ToR) switches
        that connect to a hypervisor. SDN techniques are meant to improve the flexibility
        of workload management without affecting applications and how they work.
        Workload can thus be easily and seamlessly managed across private and public clouds.
        SDN techniques optimize resource usage and are now being deployed in various
        networking environments besides cloud infrastructures. Yet, such SDN-conferred 
        agility may raise specific security issues. For example, a security administrator must make
        sure that a security policy can be enforced regardless of the location of the
        workload, thereby raising concerns about the ability of SDN
	computation logic to send security policy-provisioning information to
	the participating NSFs. A second example is workload migration to a 
	public cloud infrastructure, which may raise additional security requirements
        during the migration. </t>
      </section>


    </section>
    <section title="Use Cases">
      <t>Standard interfaces for monitoring and controlling the behavior of
      NSFs are essential building blocks for security service providers and
      enterprises to automate the use of different NSFs from multiple vendors
      by their security management entities. I2NSF may be invoked by any
      (authorized) client. Examples of authorized clients are upstream
      applications (controllers), orchestration systems, and security
      portals.</t>

      <section title="Basic Framework">

        <t>Users request security services through specific clients (e.g., a
	customer application, the Business Support Systems / Operations
	Support Systems (BSSs/OSSs) of Network Service Providers (NSPs), or a
	management platform), and the appropriate NSP network entity will
	invoke the (v)NSFs according to the user service request.
	This network entity is denoted as the
        security controller in this document. The interaction between the
        entities discussed above (client, security controller, and NSF) is shown
        in <xref target="figure_2"/>:</t>

        <t><figure title="Interaction between Entities" anchor="figure_2">
            <artwork><![CDATA[
                             +----------+
      +-------+              |          |                  +-------+
      |       |  Interface 1 |Security  |   Interface 2    | NSF(s)|
      |Client <-------------->          <------------------>       |
      |       |              |Controller|                  |       |
      +-------+              |          |                  +-------+
                             +----------+

]]></artwork>
          </figure></t>

        <t>Interface 1 is used for receiving security requirements from a client
        and translating them into commands that NSFs can understand and
        execute. The security controller also passes back NSF security reports
        (e.g., statistics) to the client that the security controller has gathered from
        NSFs. Interface 2 is used for interacting with NSFs according to
        commands (e.g., enact/revoke a security policy or distribute a policy) 
	and collecting status information about NSFs.</t>

        <t>Client devices or applications can require the security controller
        to add, delete, or update rules in the security service function for
        their specific traffic.</t>

        <t>When users want to get the executing status of a security service,
        they can request NSF status from the client. The security controller
        will collect NSF information through Interface 2, consolidate it, 
        and give feedback to the client through Interface 1. This interface can be
        used to collect not only individual service information, but also
        aggregated data suitable for tasks like infrastructure security
        assessment.</t>

        <t>Customers may require validating NSF availability, provenance, 
        and execution. This validation process, especially relevant
        to vNSFs, includes at least: 
			<list style="hanging">
            <t hangText="Integrity of the NSF:"> Ensuring that the NSF is 
			not compromised;</t>
			
            <t hangText="Isolation:">Ensuring the execution of the NSF is
            self-contained for privacy requirements in multi-tenancy
            scenarios; and</t>
			<t hangText="Provenance of the NSF:"> Customers may need to be 
			provided with strict guarantees about the origin of the NSF, its 
			status (e.g., available, idle, down, and others), and  
			feedback mechanisms so that a customer may be able to 
			check that a given NSF or set of NSFs properly conform to the 
			customer's requirements and subsequent configuration tasks. 
			</t>
          </list></t>
		  

        <t>In order to achieve this, the security controller may collect
        security measurements and share them with an independent and trusted
        third party (via Interface 1) in order to allow for attestation of NSF
        functions using the third-party added information.
		</t>
		<t>
		This implies that there may be the following two types of clients using
		Interface 1:  the end user and the trusted, independent third party.  
		The I2NSF work may determine that Interface 1 creates two sub-interfaces
		to support these two types of clients. 
		</t>
      </section>

      <section title="Access Networks">
        <t>This scenario describes use cases for users (e.g., residential user, 
		enterprise user, mobile user, and management system) that request 
		and manage security services hosted in the NSP infrastructure. 
		Given that NSP customers are essentially users of
        their access networks, the scenario is essentially associated with
        their characteristics as well as with the use of vNSFs.
		<xref target="figure_3"/> shows how different types of customers connect 
		through virtual access nodes (vCPE, vPE, and vEPC)
		to an NSF.   		
 </t>

        <t>The vCPE
		described in use case #7 in <xref target="NFVUC"></xref> requires a
        model of access virtualization that includes mobile and residential
        access networks where the operator may offload security services from the
        customer's local environment (e.g., device or terminal) to its own
        infrastructure.</t>

        <t>These use cases define the interaction between the operator and the
        vNSFs through automated interfaces that support the business communications
        between customer and provider or between two business entities. 
		</t>

        <t>
                <figure title="NSF and Actors" anchor="figure_3">
        <artwork><![CDATA[
         Customer   +     Access     +     PoP / Data Center
                    |                |     +--------+
                    |          ,-----+--.  |Network |
                    |        ,'      |   `-|Operator|
    +-------------+ |       /+----+  |     |Mgmt Sys|
    | Residential |-+------/-+vCPE+----+   +--------+
    +-------------+ |     /  +----+  |  \     |     :
                    |    /           |   \    |     |
     +----------+   |   ;    +----+  |    +----+    |
     |Enterprise|---+---+----+ vPE+--+----+ NSF|    |
     +----------+   |   :    +----+  |    +----+    |
                    |    :           |   /          |
         +--------+ |    :   +----+  |  /           ;
         | Mobile |-+-----\--+vEPC+----+           /
         +--------+ |      \ +----+  | Service    /
                    |       `--.     | Provider  /
                    |           `----+---------..
                    +                +   ^^
                                         ||  
                                   Service Provider      
                                      encompasses 
                                      everything
                                      in circle
                                                                        
vCPE - virtual customer premises equipment
vPE  - virtual provider edge
vEPC - virtual evolved packet core
PoP  - point of presence

]]></artwork>
          </figure></t>

        <t>Different access clients may have different service requests: <list
            style="hanging">
            <t hangText="Residential:">service requests for 
			parental control, content management, and threat management. 
			</t>
			<t>Threat content management may include identifying and blocking 
           malicious activities from web contents, mail, or files downloaded.  
           Threat management may include identifying and blocking botnets or malware.</t>
 
            <t hangText="Enterprise:">service requests for 
			enterprise flow security policies and managed security services.
			</t>
			<t>
			Flow security policies identify and block malicious activities
            during access to (or isolation from) web sites or social media applications.  
			Managed security services for an enterprise may include detection 
            and mitigation of external and internal threats.  
			External threats can include application or phishing attacks, malware,
			botnet, DDoS, and others. 
			</t>
			
			<t hangText="Service Provider:">service requests for policies 
			that protect service provider networks against various
			threats (including DDoS, botnets, and malware). 
			Such policies are meant to securely and reliably deliver contents 
			(e.g., data, voice, and video) to various customers, including residential, 
			mobile, and corporate customers. These security policies are also enforced to 
			guarantee isolation between multiple tenants, regardless of the nature of the 
			corresponding connectivity services.
			</t>

            <t hangText="Mobile:">service requests from interfaces that monitor
            and ensure user quality of experience, content management, parental 
			controls, and external threat management.  
			</t>
			<t>
			Content management for the mobile device includes identifying and blocking
            malicious activities from web contents, mail, and files uploaded/downloaded.  			
            Threat management for infrastructure includes detecting and removing 
			malicious programs such as botnet, malware, and other programs that create
			DDoS attacks).  </t>
          </list></t>
		  
        <t>Some access customers may not care about which NSFs are utilized to
        achieve the services they requested. In this case, provider network
        orchestration systems can internally select the NSFs (or vNSFs) to
        enforce the security policies requested by the clients. 
		</t>
		<t>Other access customers, especially some enterprise customers, 
		may want to contract separately for dedicated
        NSFs (most likely vNSFs) for direct control purposes. In this case,
        here are the steps to associate vNSFs to specific customers:</t>

        <t><list style="hanging">
            <t hangText="vNSF Deployment:">The deployment process consists of
            instantiating an NSF on an NFV Infrastructure (NFVI),
            within the NSP administrative domain(s) or with other external
            domain(s). This is a required step before a customer can subscribe
            to a security service supported in the vNSF.</t>

            <t hangText="vNSF Customer Provisioning:">Once a vNSF is
            deployed, any customer can subscribe to it. The provisioning
            life cycle includes the following: <list style="symbols">
                <t>Customer enrollment and cancellation of the subscription to
                a vNSF.</t>

                <t>Configuration of the vNSF, based on specific
                configurations or derived from common security policies
                defined by the NSP.</t>

                <t>Retrieval of the vNSF functionalities, extracted from
                a manifest or a descriptor. The NSP management systems can
                demand this information to offer detailed information through
                the commercial channels to the customer.</t>
              </list></t>
          </list></t>
      </section>

      <section title="Cloud Data Center Scenario">
        <t>In a data center, network security mechanisms such as firewalls may
        need to be dynamically added or removed for a number of reasons. These
        changes may be explicitly requested by the user or triggered by a
        pre-agreed-upon demand level in the Service Level Agreement (SLA) between the user and the
        provider of the service. For example, the service provider may be
        required to add more firewall capacity within a set of time frames whenever
        the bandwidth utilization hits a certain threshold for a specified
        period. This capacity expansion could result in adding new instances
        of firewalls on existing machines or provisioning a completely new
        firewall instance in a different machine.</t>

        <t>The on-demand, dynamic nature of security service delivery
        essentially encourages that the network security "devices" be in
        software or virtual forms rather than in a physical appliance
        form. This requirement is a provider-side concern. Users of the
        firewall service are agnostic (as they should be) as to whether or not
        the firewall service is run on a VM or any other form factor. Indeed,
        they may not even be aware that their traffic traverses firewalls.</t>

        <t>Furthermore, new firewall instances need to be placed in the "right
        zone" (domain). The issue applies not only to multi-tenant
        environments where getting the tenant in the right domain is of
        paramount importance, but also in environments owned and operated by a
        single organization with its own service segregation policies. 
	For example, an enterprise may mandate that firewalls serving Internet
	traffic within the organization be separated from inter-organization traffic.
		Another example is IPS/IDS services that split
 		investment banking traffic from other data traffic to comply with 
		regulatory restrictions for transfer of investment banking information.</t>
        
        <section title="On-Demand Virtual Firewall Deployment">
          <t>A cloud data center operated by a service provider could serve tens of
          thousands of clients. Clients' compute servers are typically hosted
          on VMs, which could be deployed across different
          server racks located in different parts of the data center. 
		  It is often not technically and/or financially feasible to deploy
          dedicated physical firewalls to suit each client's security policy
          requirements, which can be numerous. What is needed is the ability
          to dynamically deploy virtual firewalls for each client's set of
          servers based on established security policies and underlying
          network topologies. <xref target="figure_4"/> shows an example topology of 
		  virtual firewalls within a data center. 
		  </t>

          <t><figure title="NSF in Data Centers" anchor="figure_4">
              <artwork><![CDATA[
 
        ---+-----------------------------+-----
           |                             |
          +---+                         +-+-+
          |vFW|                         |vFW|
          +---+                         +-+-+
            |    Client #1                |  Client #2
         ---+-------+---               ---+-------+---
          +-+-+   +-+-+                 +-+-+   +-+-+
          |VM |   |VM |                 |VM |   |VM |
          +---+   +---+                 +---+   +---+
  
 ]]></artwork>
            </figure></t>
        </section>

        <section title="Firewall Policy Deployment Automation">
          <t>Firewall rules apply to traffic usually identified with addresses
	  and ports. It becomes far more complex in provider-owned cloud
          networks that serve myriads of customers.</t>

          <t>Firewall rules today are highly tied with ports and addresses
          that identify traffic. This makes it very difficult for clients of
          cloud data centers to construct rules for their own traffic, as the
          clients only see the virtual networks and the virtual addresses. The
          customer-visible virtual networks and addresses may be different
          from the actual packets traversing the firewalls.</t>

          <t>Even though most vendors support similar firewall features, the
          specific rule configuration keywords are different from vendor to
          vendor, making it difficult for automation. Automation works best
          when it can leverage a common set of standards that will work across
          NSFs by multiple vendors and utilize dynamic key management.  
		  </t>
        </section>

        <section title="Client-Specific Security Policy in Cloud VPNs">
          <t>Clients of cloud data centers operated by a
	  service provider
          need to secure Virtual Private Networks (VPNs) and virtual
          security functions that apply the clients' security policies.
		  The security policies may govern communication within the clients' own
          virtual networks as well as communication with external networks.
          For example, VPN service providers may need to provide firewall and
          other security services to their VPN clients. Today, it is generally
          not possible for clients to dynamically view (let alone change)
          what, where, and how security policies are implemented on their
          provider-operated clouds. Indeed, no standards-based framework
          exists to allow clients to retrieve/manage security policies in a
          consistent manner across different providers.</t>
		  <t>As described above, the dynamic key management is 
		  critical for securing the VPN and the distribution of policies. 
		  </t>
        </section>

		 <section title="Internal Network Monitoring">
          <t>There are many types of internal traffic monitors that may be
          managed by a security controller. This includes the class of
          services referred to as Data Loss Prevention (DLP) or Reputation
          Protection Services (RPS). Depending on the class of event, alerts
          may go to internal administrators or external services.</t>
		</section>
      </section>
        <section title="Preventing DDoS, Malware, and Botnet Attacks">
            <t>On the Internet, where everything is connected, preventing unwanted
            traffic that may cause a DoS attack or a 
            DDoS attack has become a challenge. 
Similarly, a network could be exposed to malware attacks and become an attack
vector that may jeopardize the operation of other networks, by means of remote
commands for example. Many networks
	    that carry groups of information (such as Internet of Things (IoT) networks, 
			Information-Centric Networks (ICNs),  Content Delivery Networks (CDNs), 
			Voice over IP (VoIP) packet networks, and Voice over LTE (VoLTE))
			are also exposed to such remote attacks.  There are many examples of 
			remote attacks on these networks, but the following examples will illustrate the 
			issues. A malware attack on an IoT network that carries sensor readings and instructions may attempt to 
			alter the sensor instructions in order to disable a key sensor. 
			A malware attack on VoIP or VoLTE networks involves software that attempts to place unauthorized
			long-distance calls. Botnets may overwhelm nodes in ICNs and CDNs so that 
			the networks cannot pass critical data.  
			</t>
		              
            <t>In order for organizations to better secure their networks against these
            kind of attacks, the I2NSF framework should provide a client-side interface
            that is use case independent and technology agnostic. Technology agnostic 
           is defined to be generic, technology independent, and able to support multiple
		protocols and data models. For example, such an I2NSF interface 
			could be used to provision security policy configuration
            information that looks for specific malware signatures. Similarly, botnet
            attacks could be easily prevented by provisioning security policies using
            the I2NSF client-side interface that prevents access to botnet command and control
            servers.</t>
        </section>
        
        <section title="Regulatory and Compliance Security Policies">
            <t>Organizations must protect their networks against attacks
            and must also adhere to various industry regulations: any organization that
            falls under a specific regulation, like the Payment Card Industry - Data Security Standard (PCI-DSS)
			<xref target="PCI-DSS"></xref> for the payment
			industry or the Health Insurance Portability and
			Accountability Act <xref target="HIPAA"></xref> for
			the healthcare industry, must be able to 
			isolate various kinds of traffic. They must
            also show records of their security policies whenever audited.</t>
            
            <t>The I2NSF client-side interface could be used to provision regulatory and 
			compliance-related security policies. The security controller would keep track of when and where a
            specific policy is applied and if there is any policy violation; this information can
            be provided in the event of an audit as proof that traffic is isolated between specific
            endpoints, in full compliance with the required regulations.</t>
        </section>
</section> 
    <section title="Management Considerations">
      <t>Management of NSFs usually include the following: <list
          style="symbols">
          <t>Life-cycle management and resource management of NSFs,</t>

          <t>Device configuration, such as address configuration, device
          internal attributes configuration, etc.,</t>

          <t>Signaling of events, notifications, and changes, and</t>

          <t>Policy rule provisioning.</t>
        </list> I2NSF will only focus on the policy provisioning part of NSF
      management.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document does not require any IANA actions.</t>
    </section>

    <section title="Security Considerations">
      <t>Having secure access to control and monitor NSFs is crucial for
      hosted security services. An I2NSF security controller raises new
      security threats. It needs to be resilient to attacks and quickly
      recover from them. Therefore, proper secure communication channels have to be 
	  carefully specified for carrying, controlling, and monitoring traffic 
	  between the NSFs and their management entity (or entities).
	  </t>

	  <t>
	  The traffic flow security policies specified by customers 
	  can conflict with providers' internal traffic flow security policies.
	  This conflict can be resolved in one of two ways: a) installed
	  policies can restrict traffic if either the customer traffic flow
	  security policies or the provider's internal security policies
	  restrict traffic, or b) installed policies can only restrict traffic
	  if both the customer traffic flow security policies and the
	  provider's internal traffic flow security policies restrict data.
	  Either choice could cause potential 
	  problems. It is crucial for the management system to flag these 
	  conflicts to the customers and to the service provider. 
	  </t>
	  <t>
	  It is important to proper AAA <xref target="RFC2904"></xref> to authorize access to the 
      network and access to the I2NSF management stream. 	  
	  </t>
	  <t> Enforcing the appropriate privacy is key to all IETF protocols (see <xref target="RFC6973"></xref>) 
	  and is especially important for IETF security management protocols 
	  since they are deployed to protect the network. 
	  In some circumstances, security management protocols may be utilized to protect an individual's home, phone, or other personal data.  In this case, any solution should carefully consider whether combining management streams abides by the recommendations of <xref target="RFC6973"></xref> for data minimization, user participation, and security. 
	  </t>
 
    </section>

  </middle>

  <back>

    <references title="Informative References">
      &RFC2904;
      &RFC4948;
      &RFC5925;
      &RFC6973;
      &RFC7149;
      &RFC7426; 
      
<!--draft-ietf-opsawg-firewalls-01: I-D Expired-->

<reference anchor='FIREWALLS'>
<front>
<title>On Firewalls in Internet Security</title>

<author initials='F' surname='Baker' fullname='Fred Baker'>
    <organization />
</author>

<author initials='P' surname='Hoffman' fullname='Paul Hoffman'>
    <organization />
</author>

<date month='October' year='2012' />

<abstract><t>This document discusses the most important operational and security implications of using modern firewalls in networks.  It makes recommendations for operators of firewalls, as well as for firewall vendors.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-ietf-opsawg-firewalls-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-opsawg-firewalls-01.txt' />
</reference>

<!--draft-jeong-i2nsf-sdn-security-services-05: I-D Expired-->

<reference anchor='SDN-SECURITY'>
<front>
<title>Software-Defined Networking Based Security Services using Interface to Network Security Functions</title>

<author initials='J' surname='Jeong' fullname='Jaehoon Jeong'>
    <organization />
</author>

<author initials='H' surname='Kim' fullname='Hyoungshick Kim'>
    <organization />
</author>

<author initials='J' surname='Park' fullname='Jung-Soo Park'>
    <organization />
</author>

<author initials='T' surname='Ahn' fullname='Tae-Jin Ahn'>
    <organization />
</author>

<author initials='S' surname='Lee' fullname='Se-Hui Lee'>
    <organization />
</author>

<date month='July' year='2016' />

<abstract><t>This document describes a framework, objectives, requirements, and use cases for security services based on Software-Defined Networking (SDN) using a common Interface to Network Security Functions (I2NSF). It first proposes the framework of SDN-based security services in the I2NSF framework.  It then explains three use cases, such as a centralized firewall system, centralized DDoS-attack mitigation system, and centralized VoIP/VoLTE security system.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-jeong-i2nsf-sdn-security-services-05' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-jeong-i2nsf-sdn-security-services-05.txt' />
</reference>

<!--draft-ietf-i2nsf-gap-analysis-03: I-D Exists-->

<reference anchor='I2NSF-ANALYSIS'>
<front>
<title>Analysis of Existing work for I2NSF</title>

<author initials='S' surname='Hares' fullname='Susan Hares'>
    <organization />
</author>

<author initials='R' surname='Moskowitz' fullname='Robert Moskowitz'>
    <organization />
</author>

<author initials='D' surname='Zhang' fullname='Dacheng Zhang'>
    <organization />
</author>

<date month='March' year='2017' />

<abstract><t>This document analyzes the current state of the art for security management devices and security devices technologies in industries and the existing IETF work/protocols that are relevant to the Interface to Network Security Function (I2NSF).  The I2NSF focus is to define data models and interfaces in order to control and monitor the physical and virtual aspects of network security functions.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-ietf-i2nsf-gap-analysis-03' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-i2nsf-gap-analysis-03.txt' />
<format type='PDF'
        target='http://www.ietf.org/internet-drafts/draft-ietf-i2nsf-gap-analysis-03.pdf' />
</reference>

<!--draft-pastor-i2nsf-merged-use-cases-00: I-D Expired-->

<reference anchor='I2NSF-USECASES'>
<front>
<title>Use Cases and Requirements for an Interface to Network Security Functions</title>

<author initials='A' surname='Pastor' fullname='Antonio Pastor'>
    <organization />
</author>

<author initials='D' surname='Lopez' fullname='Diego Lopez'>
    <organization />
</author>

<author initials='K' surname='Wang' fullname='Ke Wang'>
    <organization />
</author>

<author initials='X' surname='Zhuang' fullname='Xiaojun Zhuang'>
    <organization />
</author>

<author initials='M' surname='Qi' fullname='Minpeng Qi'>
    <organization />
</author>

<author initials='M' surname='Zarny' fullname='Myo Zarny'>
    <organization />
</author>

<author initials='S' surname='Majee' fullname='Sumandra Majee'>
    <organization />
</author>

<author initials='N' surname='Leymann' fullname='Nicolai Leymann'>
    <organization />
</author>

<author initials='L' surname='Dunbar' fullname='Linda Dunbar'>
    <organization />
</author>

<author initials='M' surname='Georgiades' fullname='Michael Georgiades'>
    <organization />
</author>

<date month='June' year='2015' />

<abstract><t>This document describes use cases and requirements for a common interface to Network Security Functions (NSF).  It considers several use cases, organized in two basic scenarios.  In the access network scenario, mobile and residential users access NSF capabilities using their network service provider infrastructure.  In the data center scenario customers manage NSFs hosted in the data center infrastructure.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-pastor-i2nsf-merged-use-cases-00' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-pastor-i2nsf-merged-use-cases-00.txt' />
</reference>

<!--draft-qi-i2nsf-access-network-usecase-02: I-D Expired-->

<reference anchor='ACCESS-USECASE'>
<front>
<title>Integrated Security with Access Network Use Case</title>

<author initials='K' surname='Wang' fullname='Ke Wang'>
    <organization />
</author>

<author initials='X' surname='Zhuang' fullname='Xiaojun Zhuang'>
    <organization />
</author>

<date month='March' year='2015' />

<abstract><t>In traditional telecommunication system, operators usually provide general and limited security protection service for users during access (e.g. AKA in 3G/4G network). Now, with the development of network virtualization technology and data center, physical network devices can be replaced by network function softwares which are running on virtual machines and the network function can be flexible and elastic. Operators can provide users with more security services. So this interfaces between operator's network and users are highly desired.  These interfaces will be used to request/achieve (Virtual) Network Security Functions from operator's network. This draft describes use cases for using the interface in operator's network environment.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-qi-i2nsf-access-network-usecase-02' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-qi-i2nsf-access-network-usecase-02.txt' />
</reference>

<!--draft-zarny-i2nsf-data-center-use-cases-00: I-D Expired-->

<reference anchor='DC-USECASE'>
<front>
<title>I2NSF Data Center Use Cases</title>

<author initials='M' surname='Zarny' fullname='Myo Zarny'>
    <organization />
</author>

<author initials='S' surname='Majee' fullname='Sumandra Majee'>
    <organization />
</author>

<author initials='N' surname='Leymann' fullname='Nicolai Leymann'>
    <organization />
</author>

<author initials='L' surname='Dunbar' fullname='Linda Dunbar'>
    <organization />
</author>

<date month='October' year='2014' />

<abstract><t>This document describes data center use cases and their requirements that a common Interface to Network Security Functions (I2NSF) needs to take into account.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-zarny-i2nsf-data-center-use-cases-00' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-zarny-i2nsf-data-center-use-cases-00.txt' />
</reference>


<!--draft-zhou-i2nsf-capability-interface-monitoring-00: I-D Expired-->

<reference anchor='CAP-INTERFACE'>
<front>
<title>The Capability Interface for Monitoring Network Security Functions (NSF) in I2NSF</title>

<author initials='C' surname='Zhou' fullname='Cathy Zhou'>
    <organization />
</author>

<author initials='L' surname='Xia' fullname='Liang Xia'>
    <organization />
</author>

<author initials='M' surname='Boucadair' fullname='Mohamed Boucadair'>
    <organization />
</author>

<author initials='J' surname='Xiong' fullname='Jie Xiong'>
    <organization />
</author>

<date month='October' year='2015' />

<abstract><t>This document focuses on the monitoring aspects of the flow-based Network Security Functions (NSFs).  The NSF Capability interface between the Service Provider's management system (or Security Controller) and the NSFs is meant to enforce the required monitoring capability.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-zhou-i2nsf-capability-interface-monitoring-00' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-zhou-i2nsf-capability-interface-monitoring-00.txt' />
</reference>

<!--draft-pastor-i2nsf-access-usecases-00: I-D Expired-->

<reference anchor='OAM-USECASE'>
<front>
<title>Access Use Cases for an Open OAM Interface to Virtualized Security Services</title>

<author initials='A' surname='Pastor' fullname='Antonio Pastor'>
    <organization />
</author>

<author initials='D' surname='Lopez' fullname='Diego Lopez'>
    <organization />
</author>

<date month='October' year='2014' />

<abstract><t>This document describes the use cases for providing network security as a service in the access network environment.  It considers both mobile and residential access.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-pastor-i2nsf-access-usecases-00' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-pastor-i2nsf-access-usecases-00.txt' />
</reference>

	  <reference anchor="EPC-3GPP">
        <front>
          <title>The Evolved Packet Core</title>

          <author fullname="Frederic Firmin" initials="F." surname="Firmin">
            <organization>3GPP MCC</organization>
          </author>
          <date month="January" year="2017" />
        </front>
      </reference>

      <reference anchor="Gartner">
        <front>
          <title>Gartner: Cloud-based security as a service set to take off</title>

          <author fullname="Ellen Messmer" initials="E." surname="Messmer">
            <organization>Network World</organization>
          </author>
          <date month="October" year="2013" />
        </front>
      </reference>

      <reference anchor="CTA" target="http://cyberthreatalliance.org">
        <front>
            <title>Cyber Threat Alliance</title>
			<author/>
            <date  />
        </front>
    </reference>

      <reference anchor="NFVUC">
        <front>
            <title>Network Functions Virtualization (NFV); Use Cases</title>
            <author><organization>ETSI</organization></author>
            <date month="May" year="2017" />
        </front>
	<seriesInfo name="ETSI GR NFV" value="001 V1.2.1"/>
    </reference>

	    <reference anchor="ETSI-NFV">
        <front>
            <title>Network Functions Virtualisation (NFV); Architectural Framework</title>
            <author><organization>ETSI</organization></author>
            <date month="December" year="2014" />
        </front>
	<seriesInfo name="ETSI GS NFV" value="002 V1.2.1"/>
	    </reference> 

		<reference anchor="HIPAA" target="https://www.hhs.gov/hipaa/">
		<front> 
		  <title>Health Insurance Portability and Accountability Act of 1996 (Public Law 104-191)</title>
		  <author><organization>US Congress</organization></author>
		  <date month="August" year="1996" />
		</front>
		</reference> 

		<reference anchor="PCI-DSS"
			   target="https://www.pcisecuritystandards.org/pci_security/">
			<front>
			<title>Payment Card Industry (PCI) Data Security
			Standard -- Requirements and Security Assessment 
Procedures </title>
		  <author><organization>PCI Security Standards
		  Council</organization></author> 
		  <date month="April" year="2016" />
		    </front>
<seriesInfo name="PCS DSS" value="v3.2"/>
		</reference>
    </references>

    <section title="Acknowledgments" numbered="no">
        <t>                                                                                             
<!-- [rfced] We have two questions about this sentence in the Acknowledgements
section. First, how may we expand MSIP? As "Ministry of Science, ICT and
Future Planning" (see http://english.msip.go.kr/english/main/main.do)?
Second, we are not sure what "R0166-15-1041" is. It is enclosed in square
brackets, similar to an in-text citation. Perhaps a complete reference entry
or a URL would be helpful? Please let us know how to update the text.

Original
   This document was supported by Institute for Information and
   communications Technology Promotion (IITP) funded by the Korea
   government (MSIP) [R0166-15-1041, Standard Development of Network
   Security based SDN].
-->                
        This document was supported by the Institute for Information &amp;
        Communications Technology Promotion (IITP), which is funded by the 
	Ministry of Science, ICT &amp; Future Planning (MSIP) (R0166-15-1041,
	Standard Development of Network Security based SDN).
        </t>
    </section>

<section title="Contributors" numbered="no">
      <t>I2NSF is a group effort. The following people actively contributed to
      the initial use case text: Xiaojun Zhuang (China Mobile), Sumandra Majee
      (F5), Ed Lopez (Curveball Networks), and Robert Moskowitz (Huawei).</t>

      <t>I2NSF has had a number of contributing authors. The following are
      considered co-authors:<list style="symbols">
	      <t>Linda Dunbar (Huawei) </t>
          <t>Antonio Pastur (Telefonica I+D)</t>

          <t>Mohamed Boucadair (France Telecom)</t>

          <t>Michael Georgiades (Prime Tel)</t>

          <t>Minpeng Qi (China Mobile)</t>

          <t>Shaibal Chakrabarty (US Ignite)</t>

          <t>Nic Leymann (Deutsche Telekom) </t>
	  <t>Anil Lohiya (Juniper) </t>
	  <t> David Qi (Bloomberg) </t>
	  <t>Hyoungshick Kim (Sungkyunkwan University) </t>
	  <t>Jung-Soo Park (ETRI) </t>
	  <t>Tae-Jin Ahn (Korea Telecom)</t>
	  <t>Se-Hui Lee (Korea Telecom) </t>
        </list></t>
    </section>

  </back>
</rfc>
