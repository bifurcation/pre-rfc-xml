<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">



<rfc category="std" ipr="pre5378Trust200902" number="6185" submissionType="IETF">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc symrefs="no" ?>
<?rfc sortrefs="yes"?>
<?rfc strict="no" ?>
<?rfc compact="yes" ?>
<?rfc toc="yes" ?>
<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>

 <front>
  <title abbrev="H.264 RCDO RTP Payload">RTP Payload Format for H.264 Reduced-Complexity Decoding Operation (RCDO) Video</title>

  <author initials="T." surname="Kristensen" fullname="Tom Kristensen">
   <organization>TANDBERG</organization>
   <address>
    <postal>
     <street>Philip Pedersens vei 22</street>
     <city>N-1366 Lysaker</city>
     <country>Norway</country>
    </postal>
    <phone>+47 67125125</phone>
    <email>tom.kristensen@tandberg.com, tomkri@ifi.uio.no</email>
    <uri>http://www.tandberg.com</uri>
   </address>
  </author>

  <author initials="P." surname="Luthi" fullname="Patrick Luthi">
   <organization>TANDBERG</organization>
   <address>
    <postal>
     <street>Philip Pedersens vei 22</street>
     <city>N-1366 Lysaker</city>
     <country>Norway</country>
    </postal>
    <email>patrick.luthi@tandberg.com</email>
    <uri>http://www.tandberg.com</uri>
   </address>
  </author>

  <date month="May" year="2011"/>

  <area>Real-time Applications and Infrastructure Area</area>
  <workgroup>Audio/Video Transport WG</workgroup>
  <keyword>H.264</keyword>
  <keyword>H.241</keyword>
  <keyword>ITU-T</keyword>
  <keyword>RTP</keyword>
  <keyword>Video</keyword>
  <keyword>SDP</keyword>
  <keyword>RCDO</keyword>

  <abstract>
   <t>This document describes an RTP payload format for the Reduced-Complexity Decoding Operation (RCDO) for H.264 Baseline profile bitstreams, as specified in ITU-T Recommendation H.241. RCDO reduces the decoding cost and resource consumption of the video processing. The RCDO RTP payload format is based on the H.264 RTP payload format.</t>
  </abstract>
 </front>

 <middle>
  <section anchor="intro" title="Introduction">
   <t>ITU-T Recommendation H.241 <xref target="ITU-H241-2006"/> specifies a
Reduced-Complexity Decoding Operation (RCDO) for use with H.264 <xref
target="ITU-H264-2007"/> Baseline profile bitstreams. It also specifies a
bitstream constraint associated with RCDO and a mechanism for signaling RCDO
within the bitstream. The RCDO signaling indicates that the bitstream conforms
to the bitstream constraint and that the decoder shall apply the RCDO decoding
process to the bitstream.</t> 
   <t>RCDO for H.264 offers a solution to support higher resolutions at the
same high frame rates used in current implementations. This is achieved by
reducing the processing requirements and thus reducing the decoding cost/resource consumption of the video processing.</t>
   <t>This document defines media type parameters and allows use in systems based on the Session Description Protocol (SDP) <xref target="RFC4566"/> for signaling.</t>
  </section>

  <section title="Conventions Used in This Document">
   <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>


  </section>

  <section anchor="mfback" title="Media Format Background">
   <t>The Reduced-Complexity Decoding Operation (RCDO) for H.264 Baseline profile bitstreams is specified in Annex B of H.241 <xref target="ITU-H241-2006"/>. RCDO is specified as a separate H.264 mode and is distinct from any profile defined in H.264.  An RCDO bitstream obeys all the constraints of the Baseline profile. </t>

   <t>The media format is based on the H.264 RTP payload format as specified in RFC 6184 <xref target="RFC6184"/>. Therefore, RFC 6184 constitutes the basis for this document and is referred to several times.</t>
   <t>In order to signal H.264 additional modes, Table 8-13 of H.241 <xref target="ITU-H241-2006"/> specifies an AdditionalModesSupported parameter.
 Currently, the only additional mode defined is RCDO. </t>
     <t><list style="empty">
      <t>Informative note: Other additional modes may be defined in the future. H.264 additional modes may or may not be distinct from the profiles in H.264.</t>
     </list></t>
   <t>A separate media subtype, named H264-RCDO, is defined to ensure backward compatibility with deployed implementations of H.264.</t>
  </section>

  <section anchor="pf" title="Payload Format">
   <t>The payload format defined in Section 5 of RFC 6184 <xref target="RFC6184"/> SHALL be used. This includes the RTP header usage and the payload format in RFC 6184. Examples of typical RTP packets can be found in RFC 6184.</t>
  </section>

  <section title="Congestion Control Considerations">
   <t>Congestion control for RTP SHALL be used in accordance with RFC 3550 <xref target="RFC3550"/> and with any applicable RTP profile, e.g., RFC 3551 <xref target="RFC3551"/>.  If best-effort service is being used, users of this payload format SHALL monitor packet loss to ensure that the packet loss rate is within acceptable parameters. </t>
  </section>

  <section title="Payload Format Parameters">
   <t>This RTP payload format is identified using the H264-RCDO media subtype, which is registered in accordance with RFC 4855 <xref target="RFC4855"/>, and using the template of RFC 4288 <xref target="RFC4288"/>.</t>

   <section anchor="mtd" title="Media Type Definition">

    <t><list style="empty">
     <t>Informative note: The media subtype definition for H264-RCDO is based
on the definition of the H264 media subtype as specified in Section 8.1 of RFC
6184 <xref target="RFC6184"/>. Except for the
profile-level-id parameter, for which new semantics are specified below, the optional parameters are copied from RFC 6184 <xref target="RFC6184"/> in order to provide a complete, self-contained media subtype registration to IANA. The references are updated to match the numbering used in this document.</t>
    </list></t>

    <t>The media subtype for RCDO for H.264 has been allocated from the IETF tree.</t>

    <t>Type name:     video</t>

    <t>Subtype name:  H264-RCDO</t>

    <t>Required parameters:</t>
     <t><list style="hanging">
      <t hangText="rate:">Indicates the RTP timestamp clock rate. The rate value MUST be 90000.</t>
     </list></t>

    <t>Optional parameters: </t>
     <t><list style="hanging">
      <t hangText="profile-level-id:"><!-- RFC3984bis copy start -->
         A base16 RFC 4648 <xref target="RFC4648"/> (hexadecimal)
representation of the following 
         three bytes in the sequence parameter set NAL unit is specified
         in H.264 <xref target="ITU-H264-2007"/>: 1) profile_idc, 2) a byte herein referred to as
         profile-iop, composed of the values of constraint_set0_flag,
         constraint_set1_flag, constraint_set2_flag,
         constraint_set3_flag, constraint_set4_flag,
         constraint_set5_flag, and reserved_zero_2bits in bit-significance
order, starting from the most-significant bit, and 
         3) level_idc.  Note that reserved_zero_2bits is required to be
         equal to 0 in H.264 <xref target="ITU-H264-2007"/>, but other values for it may be specified in
         the future by ITU-T or ISO/IEC.
<!-- RFC3984bis copy end -->

<!-- [rfced] Tom provided the following:

   Here, the changes from RFC-to-be 6184 are to be merged in. Actually, it has to
   be verified that the text for all parameters in Section 6.1 (media subtype 
   parameters), except for the profile-level-id parameter, are identical with
   the final parameter definitions in RFC-to-be 6184. 

However, the XML above contains RFC3984bis copy start and end tags.  We have
updated the entry for "profile-level-id" to be consistent with what appears in
RFC 6184.  Please let us know if this is not correct.  -->

</t> 

      <t><!-- RFC3984bis copy start -->
         The profile-level-id parameter indicates the default sub-profile (i.e., the subset of coding tools that may have been
         used to generate the stream or that the receiver supports) and
         the default level of the stream or the receiver supports.
<!-- RFC3984bis copy end --></t> 

      <t>RCDO is distinct from any profile; this implies that the profile value
0 (no profile) and the profile_idc byte of the profile-level-id parameter are
equal to 0. An RCDO bitstream MUST obey all the constraints of the Baseline
profile. Therefore, only constraint_set0_flag is equal to 1 in the profile-iop
part of the profile-level-id parameter; the remaining bits are set to 0.</t> 

      <t><!-- RFC3984bis copy start -->
         If the profile-level-id parameter is used to indicate
         properties of a NAL unit stream, it indicates that, to decode
         the stream, the minimum subset of coding tools a decoder has to
         support is the default sub-profile, and the lowest level the
         decoder has to support is the default level.
<!-- RFC3984bis copy end --></t> 

      <t><!-- RFC3984bis copy start -->
         If the profile-level-id parameter is used for capability
         exchange or session setup, it indicates the subset of coding
         tools, which is equal to the default sub-profile, that the
         codec supports for both receiving and sending.  If max-recv-level is not present, the default level from profile-level-id
         indicates the highest level the codec wishes to support.  If
         max-recv-level is present, it indicates the highest level the
         codec supports for receiving.  For either receiving or sending,
         all levels that are lower than the highest level supported MUST
         also be supported.
<!-- RFC3984bis copy end --></t> 

      <t>For example, if a codec supports level 1.3, the profile-level-id
becomes 00800d, in which 00 indicates the "no profile" value, 80 indicates the
constraints of the Baseline profile, and 0d indicates level 1.3. When level 2.1
is supported, the profile-level-id becomes 008015.</t> 

      <t>If no profile-level-id is present, level 1 (i.e., equivalent to profile-level-id 00800a) MUST be implied.</t>

      <t><list style="empty">
       <t>Informative note: The definitions of the remaining optional parameters below are copied verbatim from Section 8.1 of RFC 6184 <xref target="RFC6184"/>. Only the references are updated to match the numbering used in this document.</t>
      </list></t>

      <t hangText="max-recv-level:">
          This parameter MAY be used to indicate the highest level a
          receiver supports when the highest level is higher than the
          default level (the level indicated by profile-level-id).  The
          value of max-recv-level is a base16 (hexadecimal)
          representation of the two bytes after the syntax element
          profile_idc in the sequence parameter set NAL unit specified
          in H.264 <xref target="ITU-H264-2007"/>: profile-iop (as defined above) and level_idc.  If
          the level_idc byte of max-recv-level is equal to 11 and bit
          4 of the profile-iop byte of max-recv-level is equal to 1 or if 
          the level_idc byte of max-recv-level is equal to 9 and bit 4
          of the profile-iop byte of max-recv-level is equal to 0, the
          highest level the receiver supports is Level 1b.  Otherwise,
          the highest level the receiver supports is equal to the
          level_idc byte of max-recv-level divided by 10.</t>
          <t>max-recv-level MUST NOT be present if the highest level the
          receiver supports is not higher than the default level.</t>
       <t hangText="max-mbps, max-smbps, max-fs, max-cpb, max-dpb, and max-br:">
          These parameters MAY be used to signal the capabilities of a
          receiver implementation. These parameters MUST NOT be used
          for any other purpose.  The highest level conveyed in the
          value of the profile-level-id parameter or the max-recv-level
          parameter MUST be such that the receiver is fully capable of
          supporting.  max-mbps, max-smbps,  max-fs, max-cpb, max-dpb,
          and max-br MAY be used to indicate capabilities of the
          receiver that extend the required capabilities of the
          signaled highest level, as specified below.</t>
          <t>When more than one parameter from the set (max-mbps, max-smbps, max-fs, max-cpb, max-dpb, max-br) is present, the
          receiver MUST support all signaled capabilities
          simultaneously.  For example, if both max-mbps and max-br are
          present, the signaled highest level with the extension of
          both the frame rate and bitrate is supported.  That is, the
          receiver is able to decode NAL unit streams in which the
          macroblock processing rate is up to max-mbps (inclusive), the
          bitrate is up to max-br (inclusive), the coded picture
          buffer size is derived as specified in the semantics of the
          max-br parameter below, and the other properties comply with the
          highest level specified in the value of the profile-level-id
          parameter or the max-recv-level parameter.</t>
          <t>If a receiver can support all the properties of Level A, the
          highest level specified in the value of the profile-level-id
          parameter or the max-recv-level parameter MUST be Level A
          (i.e., MUST NOT be lower than Level A).  In other words, a
          receiver MUST NOT signal values of max-mbps, max-fs, max-cpb,
          max-dpb, and max-br that taken together meet the requirements
          of a higher level compared to the highest level specified in
          the value of the profile-level-id parameter or the max-recv-level parameter.</t>
             <t><list style="empty">
             <t>Informative note: When the OPTIONAL media type parameters
             are used to signal the properties of a NAL unit stream,
             max-mbps, max-smbps, max-fs, max-cpb, max-dpb, and max-br
             are not present, and the value of profile-level-id must
             always be such that the NAL unit stream complies fully
             with the specified profile and level.</t>
             </list></t>
       <t hangText="max-mbps:">
          The value of max-mbps is an integer indicating the
          maximum macroblock processing rate in units of macroblocks
          per second.  The max-mbps parameter signals that the receiver
          is capable of decoding video at a higher rate than is
          required by the signaled highest level conveyed in the value
          of the profile-level-id parameter or the max-recv-level
          parameter.  When max-mbps is signaled, the receiver MUST be
          able to decode NAL unit streams that conform to the signaled
          highest level, with the exception that the MaxMBPS value in
          Table A-1 of H.264 <xref target="ITU-H264-2007"/> for the signaled highest level is replaced
          with the value of max-mbps.  The value of max-mbps MUST be
          greater than or equal to the value of MaxMBPS given in Table
          A-1 of H.264 <xref target="ITU-H264-2007"/> for the highest level.  Senders MAY use this
          knowledge to send pictures of a given size at a higher
          picture rate than is indicated in the signaled highest level.</t>

       <t hangText="max-smbps:">
          The value of max-smbps is an integer indicating the
          maximum static macroblock processing rate in units of static
          macroblocks per second, under the hypothetical assumption
          that all macroblocks are static macroblocks.  When max-smbps
          is signaled, the MaxMBPS value in Table A-1 of H.264 <xref target="ITU-H264-2007"/> should be
          replaced with the result of the following computation:</t>

          <t>
o If the parameter max-mbps is signaled, set a variable
            MaxMacroblocksPerSecond to the value of max-mbps.
            Otherwise, set MaxMacroblocksPerSecond equal to the value
            of MaxMBPS in Table A-1 of H.264 <xref target="ITU-H264-2007"/> for
the signaled highest level
            conveyed in the value of the profile-level-id parameter or
            the max-recv-level parameter.
</t> 

          <t>o Set a variable P_non-static to the proportion of non-static macroblocks in picture n.</t>

          <t>o Set a variable P_static to the proportion of static
            macroblocks in picture n.</t>

          <t>o The value of MaxMBPS in Table A-1 of H.264 <xref target="ITU-H264-2007"/> should be
            considered by the encoder to be equal to:</t>
            <t><list style="empty">
             <t>MaxMacroblocksPerSecond * max-smbps / (P_non-static *
             max-smbps + P_static * MaxMacroblocksPerSecond)</t>
            </list></t>

          <t>The encoder should recompute this value for each picture. The
          value of max-smbps MUST be greater than or equal to the value of MaxMBPS
          given explicitly as the value of the max-mbps parameter or implicitly
in Table A-1 of H.264 <xref target="ITU-H264-2007"/> for the signaled highest
level.  Senders MAY use this knowledge to send pictures of a given size at a
          higher picture rate than is indicated in the signaled highest
          level.</t>

       <t hangText="max-fs:">
          The value of max-fs is an integer indicating the maximum
          frame size in units of macroblocks.  The max-fs parameter
          signals that the receiver is capable of decoding larger
          picture sizes than are required by the signaled highest level
          conveyed in the value of the profile-level-id parameter or
          the max-recv-level parameter.  When max-fs is signaled, the
          receiver MUST be able to decode NAL unit streams that conform
          to the signaled highest level, with the exception that the
          MaxFS value in Table A-1 of H.264 <xref target="ITU-H264-2007"/> for the signaled highest
          level is replaced with the value of max-fs.  The value of
          max-fs MUST be greater than or equal to the value of MaxFS
          given in Table A-1 of H.264 <xref target="ITU-H264-2007"/> for the highest level.  Senders MAY
          use this knowledge to send larger pictures at a
          proportionally lower frame rate than is indicated in the
          signaled highest level.</t>

       <t hangText="max-cpb:">
          The value of max-cpb is an integer indicating the
          maximum coded picture buffer size in units of 1000 bits for
          the VCL HRD parameters and in units
          of 1200 bits for the NAL HRD parameters.  Note that this parameter
does not use units of
         cpbBrVclFactor and cpbBrNALFactor (see Table A-1 of
          H.264 <xref target="ITU-H264-2007"/>).  The max-cpb parameter signals that the receiver has
          more memory than the minimum amount of coded picture buffer
          memory required by the signaled highest level conveyed in the
          value of the profile-level-id parameter or the max-recv-level
          parameter.  When max-cpb is signaled, the receiver MUST be
          able to decode NAL unit streams that conform to the signaled
          highest level, with the exception that the MaxCPB value in
          Table A-1 of H.264 <xref target="ITU-H264-2007"/> for the signaled highest level is replaced
          with the value of max-cpb (after taking cpbBrVclFactor and
cpbBrNALFactor into
         consideration when needed). The value of max-cpb (after taking
         cpbBrVclFactor and cpbBrNALFactor into consideration when
         needed) MUST be
          greater than or equal to the value of MaxCPB given in Table
          A-1 of H.264 <xref target="ITU-H264-2007"/> for the highest level.  Senders MAY use this
          knowledge to construct coded video streams with greater
          variation of bitrate than can be achieved with the MaxCPB
          value in Table A-1 of H.264 <xref target="ITU-H264-2007"/>.</t>
             <t><list style="empty">
             <t>Informative note: The coded picture buffer is used in the
             hypothetical reference decoder (Annex C of H.264).  The
             use of the hypothetical reference decoder is recommended
             in H.264 encoders to verify that the produced bitstream
             conforms to the standard and to control the output
             bitrate.  Thus, the coded picture buffer is conceptually
             independent of any other potential buffers in the
             receiver, including de-interleaving and de-jitter buffers.
             The coded picture buffer need not be implemented in
             decoders as specified in Annex C of H.264, but rather
             standard-compliant decoders can have any buffering
             arrangements provided that they can decode standard-compliant bitstreams.  Thus, in practice, the input
             buffer for a video decoder can be integrated with de-interleaving and de-jitter buffers of the receiver.</t>
             </list></t>

       <t hangText="max-dpb:">
          The value of max-dpb is an integer indicating the
          maximum decoded picture buffer size in units of 8/3 macroblocks.
          The max-dpb parameter signals that the receiver has more
          memory than the minimum amount of decoded picture buffer
          memory required by the signaled highest level conveyed in the
          value of the profile-level-id parameter or the max-recv-level
          parameter.  When max-dpb is signaled, the receiver MUST be
          able to decode NAL unit streams that conform to the signaled
          highest level, with the exception that the MaxDpbMbs value in
          Table A-1 of H.264 <xref target="ITU-H264-2007"/> for the signaled
highest level is replaced with the value of max-dpb * 3 / 8.
 Consequently, a receiver that
          signals max-dpb MUST be capable of storing the following
          number of decoded frames, complementary field pairs, and non-paired fields in its decoded picture buffer:</t>

             <t><list style="empty">
             <t>
            Min(max-dpb * 3 / 8 / ( PicWidthInMbs * FrameHeightInMbs),
            16)
</t>
             </list></t>

          <t>

Wherein PicWidthInMbs and FrameHeightInMbs are defined in H.264 <xref
target="ITU-H264-2007"/>.</t> 


          <t>The value of max-dpb MUST be greater than or equal to the
          value of MaxDpbMbs * 3 / 8, wherein the value of MaxDpbMbs is
 given in Table A-1 of H.264 <xref target="ITU-H264-2007"/> for the highest
          level.  Senders MAY use this knowledge to construct coded
          video streams with improved compression.</t>
             <t><list style="empty">
             <t>Informative note: This parameter was added primarily to
             complement a similar codepoint in the ITU-T
             Recommendation H.245, so as to facilitate signaling
             gateway designs.  The decoded picture buffer stores
             reconstructed samples.  There is no relationship between
             the size of the decoded picture buffer and the buffers
             used in RTP, especially de-interleaving and de-jitter
             buffers.</t>

<t>
            Informative note: In RFC 3984, which is obsoleted by RFC 6184,
            the unit of this parameter was 1024 bytes.  The
            unit has been changed to 8/3 macroblocks in this document.
            The reason for this change was due to the changes from the
            2003 version of the H.264 specification referenced by RFC
            3984 to the 2010 version of the H.264 specification
            referenced by this document, particularly the changes to
            Table A-1 in the H.264 specification due to addition of
            color formats and bit depths not supported earlier.  The
            changed semantics of this parameter keeps backward
            compatibility to RFC 3984 and supports all profiles defined
            in the 2010 version of the H.264 specification.
</t>
             </list></t>

<!-- [rfced] RFC 6184 includes the following note:

            Informative note: In RFC 3984, which this document
            obsoletes, the unit of this parameter was 1024 bytes.  The
            unit has been changed to 8/3 macroblocks in this document.
            The reason for this change was due to the changes from the
            2003 version of the H.264 specification referenced by RFC
            3984 to the 2010 version of the H.264 specification
            referenced by this document, particularly the changes to
            Table A-1 in the H.264 specification due to addition of
            color formats and bit depths not supported earlier.  The
            changed semantics of this parameter keeps backward
            compatibility to RFC 3984 and supports all profiles defined
            in the 2010 version of the H.264 specification.

Does this text need to be added here as well? -->

       <t hangText="max-br:">
          The value of max-br is an integer indicating the maximum
          video bitrate in units of 1000 bits per second for the VCL
          HRD parameters and in units of 1200
          bits per second for the NAL HRD parameters.  Note that this parameter
does not use units of
         cpbBrVclFactor and cpbBrNALFactor (see Table A-1
          of H.264 <xref target="ITU-H264-2007"/>).</t>

          <t>The max-br parameter signals that the video decoder of the
          receiver is capable of decoding video at a higher bitrate
          than is required by the signaled highest level conveyed in
          the value of the profile-level-id parameter or the max-recv-level parameter.</t>

          <t>When max-br is signaled, the video codec of the receiver MUST
          be able to decode NAL unit streams that conform to the
          signaled highest level, with the following exceptions in the
          limits specified by the highest level:</t>

          <t>o The value of max-br (after taking cpbBrVclFactor and
            cpbBrNALFactor into consideration when needed) replaces the MaxBR
value in Table A-1 of H.264 <xref target="ITU-H264-2007"/> for the highest level.</t>

          <t>o When the max-cpb parameter is not present, the result of
            the following formula replaces the value of MaxCPB in
            Table A-1 of H.264 <xref target="ITU-H264-2007"/>: (MaxCPB of the signaled level) * max-br
            / (MaxBR of the signaled highest level).</t>

          <t>For example, if a receiver signals capability for Main profile Level 1.2
          with max-br equal to 1550, this indicates a maximum video
          bitrate of 1550 kbits/sec for VCL HRD parameters, a maximum
          video bitrate of 1860 kbits/sec for NAL HRD parameters, and a
          CPB size of 4036458 bits (1550000 / 384000 * 1000 * 1000).</t>

          <t>The value of max-br (after taking cpbBrVclFactor and
         cpbBrNALFactor into consideration when needed) MUST be greater than or
equal to the value MaxBR given in Table A-1 of H.264 <xref
target="ITU-H264-2007"/> for the signaled highest level.</t>

          <t>Senders MAY use this knowledge to send higher bitrate video
          as allowed in the level definition of Annex A of H.264 to
          achieve improved video quality.</t>
             <t><list style="empty">
             <t>Informative note: This parameter was added primarily to
             complement a similar codepoint in the ITU-T
             Recommendation H.245, so as to facilitate signaling
             gateway designs.  The assumption that the network is capable of
             handling such bitrates at any given time cannot be made from the
             value of this parameter.  In particular,
             no conclusion can be drawn that the signaled bitrate is
             possible under congestion control constraints.</t>
             </list></t>

       <t hangText="redundant-pic-cap:">
          This parameter signals the capabilities of a receiver
          implementation.  When equal to 0, the parameter indicates
          that the receiver makes no attempt to use redundant coded
          pictures to correct incorrectly decoded primary coded
          pictures.  When equal to 0, the receiver is not capable of
          using redundant slices; therefore, a sender SHOULD avoid
          sending redundant slices to save bandwidth.  When equal to 1,
          the receiver is capable of decoding any such redundant slice
          that covers a corrupted area in a primary decoded picture (at
          least partly), and therefore a sender MAY send redundant
          slices.  When the parameter is not present, a value of 0
          MUST be used for redundant-pic-cap.  When present, the value
          of redundant-pic-cap MUST be either 0 or 1.</t>

          <t>When the profile-level-id parameter is present in the same
          signaling as the redundant-pic-cap parameter and the profile
          indicated in profile-level-id is such that it disallows the
          use of redundant coded pictures (e.g., Main profile), the
          value of redundant-pic-cap MUST be equal to 0.  When a
          receiver indicates redundant-pic-cap equal to 0, the received
          stream SHOULD NOT contain redundant coded pictures.</t>
             <t><list style="empty">
             <t>Informative note: Even if redundant-pic-cap is equal to 0,
             the decoder is able to ignore redundant codec pictures
             provided that the decoder supports a profile
             (Baseline, Extended) in which redundant coded pictures
             are allowed.</t>
             </list></t>

             <t><list style="empty">
             <t>Informative note: Even if redundant-pic-cap is equal to 1,
             the receiver may also choose other error concealment
             strategies to replace or complement decoding of redundant
             slices.</t>
             </list></t>

       <t hangText="sprop-parameter-sets:">
          This parameter MAY be used to convey any sequence and picture
          parameter set NAL units (herein referred to as the initial
          parameter set NAL units) that can be placed in the NAL unit
          stream to precede any other NAL units in decoding order.  The
          parameter MUST NOT be used to indicate codec capability in
          any capability exchange procedure.  The value of the
          parameter is a comma-separated (',') list of base64 RFC 4648 <xref target="RFC4648"/>
          representations of parameter set NAL units as specified in
          Sections 7.3.2.1 and 7.3.2.2 of H.264 <xref target="ITU-H264-2007"/>.  Note that the number of
          bytes in a parameter set NAL unit is typically less than 10,
          but a picture parameter set NAL unit can contain several
          hundred bytes.</t>

             <t><list style="empty">
             <t>Informative note: When several payload types are offered
             in the SDP Offer/Answer model, each with its own sprop-parameter-sets parameter, the receiver cannot assume
             that those parameter sets do not use conflicting storage
             locations (i.e., identical values of parameter set
             identifiers).  Therefore, a receiver should buffer all
             sprop-parameter-sets and make them available to the
             decoder instance that decodes a certain payload type.</t>
             </list></t>

          <t>The sprop-parameter-sets parameter MUST only contain
          parameter sets that are conforming to the profile-level-id,
          i.e., the subset of coding tools indicated by any of the
          parameter sets MUST be equal to the default sub-profile, and
          the level indicated by any of the parameter sets MUST be
          equal to the default level.</t>

       <t hangText="sprop-level-parameter-sets:">
          This parameter MAY be used to convey any sequence and picture
          parameter set NAL units (herein referred to as the initial
          parameter set NAL units) that can be placed in the NAL unit
          stream to precede any other NAL units in decoding order and
          that are associated with one or more levels different than
          the default level.  The parameter MUST NOT be used to
          indicate codec capability in any capability exchange
          procedure.</t>

          <t>The sprop-level-parameter-sets parameter contains parameter
          sets for one or more levels that are different than the
          default level.  All parameter sets associated with one level
          are clustered and prefixed with a three-byte field that has
          the same syntax as profile-level-id.  This enables the
          receiver to install the parameter sets for one level and
          discard the rest.  The three-byte field is named PLId, and
          all parameter sets associated with one level are named PSL,
          which has the same syntax as sprop-parameter-sets.  Parameter
          sets for each level are represented in the form of PLId:PSL,
          i.e., PLId followed by a colon (':') and the base64 RFC 4648 <xref target="RFC4648"/>
          representation of the initial parameter set NAL units for the
          level.  Each pair of PLId:PSLs is also separated by a colon.
          Note that a PSL can contain multiple parameter sets for that
          level, separated with commas (',').</t>

          <t>The subset of coding tools indicated by each PLId field MUST
          be equal to the default sub-profile, and the level indicated
          by each PLId field MUST be different than the default level.
          All sequence parameter sets contained in each PSL MUST have
          the three bytes from profile_idc to level_idc, inclusive,
          equal to the preceding PLId.</t>
             <t><list style="empty">
             <t>Informative note: This parameter allows for efficient
             level downgrade or upgrade in SDP Offer/Answer and out-of-band transport of parameter sets simultaneously.</t>
             </list></t>

       <t hangText="use-level-src-parameter-sets:">
          This parameter MAY be used to indicate a receiver capability.
          The value MAY be equal to either 0 or 1.  When the parameter
          is not present, the value MUST be inferred to be equal to 0.
          The value 0 indicates that the receiver does not understand
          the sprop-level-parameter-sets parameter, does not
          understand the "fmtp" source attribute as specified in
          Section 6.3 of RFC 5576 <xref target="RFC5576"/>, will ignore sprop-level-parameter-sets when present, and will ignore sprop-parameter-sets when
          conveyed using the "fmtp" source attribute.  The value 1
          indicates that the receiver understands the sprop-level-parameter-sets parameter, understands the "fmtp" source
          attribute as specified in Section 6.3 of RFC 5576 <xref target="RFC5576"/>, and is capable
          of using parameter sets contained in the sprop-level-parameter-sets or contained in the sprop-parameter-sets that
          is conveyed using the "fmtp" source attribute.</t>
             <t><list style="empty">
             <t>Informative note: An RFC 3984 receiver does not
             understand sprop-level-parameter-sets, use-level-src-parameter-sets, or the "fmtp" source attribute as
             specified in Section 6.3 of RFC 5576 <xref target="RFC5576"/>.  Therefore, during SDP
             Offer/Answer, an RFC 3984 receiver as the answerer will
             simply ignore sprop-level-parameter-sets when present in
             an offer and sprop-parameter-sets conveyed using the
             "fmtp" source attribute, as specified in Section 6.3 of
             RFC 5576 <xref target="RFC5576"/>.  Assume that the offered payload type was accepted
             at a level lower than the default level.  If the offered
             payload type included sprop-level-parameter-sets or
             included sprop-parameter-sets conveyed using the "fmtp"
             source attribute and if the offerer sees that the answerer
             has not included use-level-src-parameter-sets equal to 1
             in the answer, the offerer knows that in-band transport
             of parameter sets is needed.</t>
             </list></t>

       <t hangText="in-band-parameter-sets:">
          This parameter MAY be used to indicate a receiver capability.
          The value MAY be equal to either 0 or 1.  The value 1
          indicates that the receiver discards out-of-band parameter
          sets in sprop-parameter-sets and sprop-level-parameter-sets; 
          therefore, the sender MUST transmit all parameter sets in-band.
          The value 0 indicates that the receiver utilizes out-of-band
          parameter sets included in sprop-parameter-sets and/or sprop-level-parameter-sets.  However, in this case, the sender MAY
          still choose to send parameter sets in-band.  When in-band-parameter-sets is equal to 1, use-level-src-parameter-sets
          MUST NOT be present or MUST be equal to 0.  When the
          parameter is not present, this receiver capability is not
          specified, and therefore the sender MAY send out-of-band
          parameter sets only, it MAY send in-band-parameter-sets
          only, or it MAY send both.</t>

       <t hangText="level-asymmetry-allowed:">
          This parameter MAY be used in SDP Offer/Answer to indicate
          whether level asymmetry, i.e., sending media encoded at a different level in the
          offerer-to-answerer direction than the level in the answerer-to-offerer
          direction, is allowed.  The value MAY be equal to
          either 0 or 1.  When the parameter is not present, the value
          MUST be inferred to be equal to 0.  The value 1 in both the
          offer and the answer indicates that level asymmetry is
          allowed.  The value of 0 in either the offer or the answer
          indicates that level asymmetry is not allowed.</t>

          <t>If level-asymmetry-allowed is equal to 0 (or not present)
          in either the offer or the answer, level asymmetry is not
          allowed.  In this case, the level to use in the direction
          from the offerer to the answerer MUST be the same as the
          level to use in the opposite direction.</t>

       <t hangText="packetization-mode:">
          This parameter signals the properties of an RTP payload type
          or the capabilities of a receiver implementation.  Only a
          single configuration point can be indicated; thus, when
          capabilities to support more than one packetization-mode are
          declared, multiple configuration points (RTP payload types)
          must be used.</t>

          <t>When the value of packetization-mode is equal to 0 or
          packetization-mode is not present, the single NAL mode MUST be used.  This mode
          is in use in standards using ITU-T Recommendation H.241 <xref target="ITU-H241-2006"/>
          (see Section 12.1).  When the value of packetization-mode is
          equal to 1, the non-interleaved mode MUST be used.  When the value of
          packetization-mode is equal to 2, the interleaved mode MUST be used.  The value
          of packetization-mode MUST be an integer in the range of 0 to
          2, inclusive.</t>

       <t hangText="sprop-interleaving-depth:">
          This parameter MUST NOT be present when packetization-mode is
          not present or the value of packetization-mode is equal to 0
          or 1.  This parameter MUST be present when the value of
          packetization-mode is equal to 2.</t>

          <t>This parameter signals the properties of an RTP packet stream.
          It specifies the maximum number of VCL NAL units that precede
          any VCL NAL unit in the RTP packet stream in transmission
          order and that follow the VCL NAL unit in decoding order.
          Consequently, it is guaranteed that receivers can reconstruct
          NAL unit decoding order when the buffer size for NAL unit
          decoding order recovery is at least the value of sprop-interleaving-depth + 1 in terms of VCL NAL units.</t>

          <t>The value of sprop-interleaving-depth MUST be an integer in
          the range of 0 to 32767, inclusive.</t>

       <t hangText="sprop-deint-buf-req:">
          This parameter MUST NOT be present when packetization-mode is
          not present or the value of packetization-mode is equal to 0
          or 1.  It MUST be present when the value of packetization-mode is equal to 2.</t>

          <t>sprop-deint-buf-req signals the required size of the de-
          interleaving buffer for the RTP packet stream.  The value of
          the parameter MUST be greater than or equal to the maximum
          buffer occupancy (in units of bytes) required in such a de-interleaving buffer that is specified in Section 7.2 of RFC 6184 <xref target="RFC6184"/>.
          It is guaranteed that receivers can perform the de-interleaving
          of interleaved NAL units into NAL unit decoding
          order, when the de-interleaving buffer size is at least the
          value of sprop-deint-buf-req in terms of bytes.</t>

          <t>The value of sprop-deint-buf-req MUST be an integer in the
          range of 0 to 4294967295, inclusive.</t>
             <t><list style="empty">
             <t>Informative note: sprop-deint-buf-req indicates the
             required size of the de-interleaving buffer only.  When
             network jitter can occur, an appropriately sized jitter
             buffer has to be provisioned for as well.</t>
             </list></t>

       <t hangText="deint-buf-cap:">
          This parameter signals the capabilities of a receiver
          implementation and indicates the amount of de-interleaving
          buffer space in units of bytes that the receiver has
          available for reconstructing the NAL unit decoding order.  A
          receiver is able to handle any stream for which the value of
          the sprop-deint-buf-req parameter is smaller than or equal to
          this parameter.</t>

          <t>If the parameter is not present, then a value of 0 MUST be
          used for deint-buf-cap.  The value of deint-buf-cap MUST be
          an integer in the range of 0 to 4294967295, inclusive.</t>
             <t><list style="empty">
             <t>Informative note: deint-buf-cap indicates the maximum
             possible size of the de-interleaving buffer of the
             receiver only.  When network jitter can occur, an
             appropriately sized jitter buffer has to be provisioned
             for as well.</t>
             </list></t>

       <t hangText="sprop-init-buf-time:">
          This parameter MAY be used to signal the properties of an RTP
          packet stream.  The parameter MUST NOT be present if the
          value of packetization-mode is equal to 0 or 1.</t>

          <t>The parameter signals the initial buffering time that a
          receiver MUST wait before starting decoding to recover the
          NAL unit decoding order from the transmission order.  The
          parameter is the maximum value of (decoding time of the NAL
          unit - transmission time of a NAL unit), assuming reliable
          and instantaneous transmission, the same timeline for
          transmission and decoding, and commencement of decoding when the
          first packet arrives.</t>

          <t>An example of specifying the value of sprop-init-buf-time
          follows.  A NAL unit stream is sent in the following
          interleaved order, in which the value corresponds to the
          decoding time and the transmission order is from left to
          right:</t>
             <t><list style="empty"><t>0  2  1  3  5  4  6  8  7 ...</t></list></t>

          <t>Assuming a steady transmission rate of NAL units, the
          transmission times are:</t>
             <t><list style="empty"><t>0  1  2  3  4  5  6  7  8 ...</t></list></t>

          <t>Subtracting the decoding time from the transmission time
          column-wise results in the following series:</t>
             <t><list style="empty"><t>0 -1  1  0 -1  1  0 -1  1 ...</t></list></t>

          <t>Thus, in terms of intervals of NAL unit transmission times,
          the value of sprop-init-buf-time in this example is 1.  The
          parameter is coded as a non-negative base10 integer
          representation in clock ticks of a 90-kHz clock.  If the
          parameter is not present, then no initial buffering time
          value is defined.  Otherwise, the value of sprop-init-buf-time
          MUST be an integer in the range of 0 to 4294967295, inclusive.</t>

          <t>In addition to the signaled sprop-init-buf-time, receivers
          SHOULD take into account the transmission delay jitter
          buffering, including buffering for the delay jitter caused by
          mixers, translators, gateways, proxies, traffic-shapers, and
          other network elements.</t>

       <t hangText="sprop-max-don-diff:">
          This parameter MAY be used to signal the properties of an RTP
          packet stream.  It MUST NOT be used to signal transmitter, receiver, or codec capabilities.  The parameter MUST NOT be
          present if the value of packetization-mode is equal to 0 or 1.
          sprop-max-don-diff is an integer in the range of 0 to 32767,
          inclusive.  If sprop-max-don-diff is not present, the value
          of the parameter is unspecified.  sprop-max-don-diff is
          calculated as follows:</t>
             <t><list style="empty">
             <t>sprop-max-don-diff = max{AbsDON(i) - AbsDON(j)},
             for any i and any j&gt;i,</t>
             </list></t>

          <t>where i and j indicate the index of the NAL unit in the
          transmission order and AbsDON denotes a decoding order number
          of the NAL unit that does not wrap around to 0 after 65535.
          In other words, AbsDON is calculated as follows: let m and n
          be consecutive NAL units in transmission order.  For the very
          first NAL unit in transmission order (whose index is 0),
          AbsDON(0) = DON(0).  For other NAL units, AbsDON is
          calculated as follows:</t>

             <t>If DON(m) == DON(n), AbsDON(n) = AbsDON(m)</t>
             <t></t>
             <t>If (DON(m) &lt; DON(n) and DON(n) - DON(m) &lt; 32768),</t>
               <t>AbsDON(n) = AbsDON(m) + DON(n) - DON(m)</t>
             <t></t>
             <t>If (DON(m) &gt; DON(n) and DON(m) - DON(n) &gt;= 32768),</t>
               <t>AbsDON(n) = AbsDON(m) + 65536 - DON(m) + DON(n)</t>
             <t></t>
             <t>If (DON(m) &lt; DON(n) and DON(n) - DON(m) &gt;= 32768),</t>
               <t>AbsDON(n) = AbsDON(m) - (DON(m) + 65536 - DON(n))</t>
             <t></t>
             <t>If (DON(m) &gt; DON(n) and DON(m) - DON(n) &lt; 32768),</t>
               <t>AbsDON(n) = AbsDON(m) - (DON(m) - DON(n))</t>

          <t>where DON(i) is the decoding order number of the NAL unit
          having index i in the transmission order.  The decoding order
          number is specified in Section 5.5 of RFC 6184 <xref target="RFC6184"/>.</t>
             <t><list style="empty">
             <t>Informative note: Receivers may use sprop-max-don-diff to
             trigger which NAL units in the receiver buffer can be
             passed to the decoder.</t>
             </list></t>

       <t hangText="max-rcmd-nalu-size:">
          This parameter MAY be used to signal the capabilities of a
          receiver.  The parameter MUST NOT be used for any other
          purposes.  The value of the parameter indicates the largest
          NALU size in bytes that the receiver can handle efficiently.
          The parameter value is a recommendation, not a strict upper
          boundary.  The sender MAY create larger NALUs but must be
          aware that the handling of these may come at a higher cost
          than NALUs conforming to the limitation.</t>
 
          <t>The value of max-rcmd-nalu-size MUST be an integer in the
          range of 0 to 4294967295, inclusive.  If this parameter is
          not specified, no known limitation to the NALU size exists.
          Senders still have to consider the MTU size available between
          the sender and the receiver and SHOULD run MTU discovery for
          this purpose.</t>
 
          <t>This parameter is motivated by, for example, an IP to H.223
          video telephony gateway, where NALUs smaller than the H.223
          transport data unit will be more efficient.  A gateway may
          terminate IP; thus, MTU discovery will normally not work
          beyond the gateway.</t>
             <t><list style="empty">
             <t>Informative note: Setting this parameter to a lower than
             necessary value may have a negative impact.</t>
             </list></t>
 
       <t hangText="sar-understood:">
          This parameter MAY be used to indicate a receiver capability
          and nothing else.  The parameter indicates the maximum
          value of aspect_ratio_idc (specified in H.264 <xref target="ITU-H264-2007"/>) smaller than 255
          that the receiver understands.  Table E-1 of H.264 <xref target="ITU-H264-2007"/> specifies
          aspect_ratio_idc equal to 0 as "unspecified"; 1 to 16,
          inclusive, as specific Sample Aspect Ratios (SARs); 17 to 254,
          inclusive, as "reserved"; and 255 as the Extended SAR, for
          which SAR width and SAR height are explicitly signaled.
          Therefore, a receiver with a decoder according to H.264 <xref target="ITU-H264-2007"/>
          understands aspect_ratio_idc in the range of 1 to 16,
          inclusive, and aspect_ratio_idc equal to 255, in the sense
          that the receiver knows exactly what the SAR is.  For such a
          receiver, the value of sar-understood is 16.  In the
          future, if Table E-1 of H.264 <xref target="ITU-H264-2007"/> is extended, e.g., such that the SAR
          for aspect_ratio_idc equal to 17 is specified, then for a
          receiver with a decoder that understands the extension, the
          value of sar-understood is 17.  For a receiver with a decoder
          according to the 2003 version of H.264 <xref target="ITU-H264-2007"/>, the value of sar-understood is 13, as the minimum reserved aspect_ratio_idc
          therein is 14.</t>

          <t>When sar-understood is not present, the value MUST be
          inferred to be equal to 13.</t>

       <t hangText="sar-supported:">
          This parameter MAY be used to indicate a receiver capability
          and nothing else.  The value of this parameter is an
          integer in the range of 1 to sar-understood, inclusive, equal
          to 255.  The value of sar-supported equal to N smaller than
          255 indicates that the receiver supports all the SARs
          corresponding to H.264 aspect_ratio_idc values (see Table E-1
          of H.264 <xref target="ITU-H264-2007"/>) in the range from 1 to N, inclusive, without
          geometric distortion.  The value of sar-supported equal to
          255 indicates that the receiver supports all sample aspect
          ratios that are expressible using two 16-bit integer values
          as the numerator and denominator, i.e., those that are
          expressible using the H.264 aspect_ratio_idc value of 255
          (Extended_SAR, see Table E-1 of H.264 <xref target="ITU-H264-2007"/>), without geometric
          distortion.</t>

          <t>H.264-compliant encoders SHOULD NOT send an aspect_ratio_idc
          equal to 0 or an aspect_ratio_idc larger than sar-understood
          and smaller than 255.  H.264-compliant encoders SHOULD send
          an aspect_ratio_idc that the receiver is able to display
          without geometrical distortion.  However, H.264-compliant
          encoders MAY choose to send pictures using any SAR.</t>

          <t>Note that the actual sample aspect ratio or extended sample
          aspect ratio, when present, of the stream is conveyed in the
          Video Usability Information (VUI) part of the sequence
          parameter set.</t>
<!-- RFC3984bis copy of remaining optional parameters end -->
    </list></t>
 
    <t><list style="hanging">
     <t hangText="Encoding considerations:">This type is only defined for
transfer via RTP (RFC 3550) and is framed and binary (see Section 4.8 in RFC 4288).</t>
    </list></t>

    <t><list style="hanging">
      <t hangText="Security considerations:">See Section 9 of RFC 6185.</t>
    </list></t>

    <t><list style="hanging">
      <t hangText="Interoperability considerations:">None</t>
    </list></t>

    <t><list style="hanging">
      <t hangText="Published specification:">RFC 6185 and its reference section</t>
    </list></t>

    <t><list style="hanging">
      <t hangText="Applications that use this media type:">Video streaming and conferencing applications</t>
    </list></t>

    <t><list style="hanging">
     <t hangText="Additional information:">None</t>
      <t><list style="hanging"><t hangText="Magic number(s):"></t></list></t>
      <t><list style="hanging"><t hangText="File extension(s):"></t></list></t>
      <t><list style="hanging"><t hangText="Macintosh file type code(s):"></t></list></t>
    </list></t>

    <t><list style="hanging">
      <t hangText="Person &amp; email address to contact for further information:"></t>
      <t>Tom Kristensen &lt;tom.kristensen@tandberg.com&gt;, &lt;tomkri@ifi.uio.no&gt;</t>
    </list></t>

    <t><list style="hanging">
      <t hangText="Intended usage:">COMMON</t>
    </list></t>

    <t><list style="hanging">
      <t hangText="Restrictions on usage:">This type depends on RTP framing;
hence, it is only defined for transfer via RTP (see RFC 3550). Transport within other framing protocols is not defined at this time.</t>
    </list></t>

    <t><list style="hanging">
      <t hangText="Author:">Tom Kristensen</t>
    </list></t>

    <t><list style="hanging">
      <t hangText="Change controller:">IETF Audio/Video Transport Working Group delegated from the IESG</t>
    </list></t>

    <!-- Any additional information/comments may be included here at bottom. -->
   </section>
  </section>

  <section title="Mapping to SDP">
   <t>The mapping of the above defined payload format media subtype and its parameters SHALL be done according to Section 3 of RFC 4855 <xref target="RFC4855"/>.</t>

   <t>An example of the "fmtp" attribute in the media representation of a level 2.2 bitstream is as follows:</t>
   <t><list style="empty">
     <t>a=fmtp:97 profile-level-id=008016</t>
   </list></t>

   <section title="Offer/Answer Considerations">
    <t>When H264-RCDO is offered over RTP using SDP in an Offer/Answer model <xref target="RFC3264"/> for unicast and multicast usage, the limitations and rules described in Section 8.2.2 of RFC 6184 <xref target="RFC6184"/> apply. Note that the profile_idc byte of the H264-RCDO profile-level-id parameter can only take the value of 0 (no profile).</t>

    <t>For interoperability with systems not supporting H264-RCDO, it is
RECOMMENDED to offer the H264 media subtype as well. As specified in RFC 3264
<xref target="RFC3264"/>, listing the payload number for H264-RCDO before H264
in the format list on the "m=" line signals that H264-RCDO is preferred over
H264. Following is an example where this scheme is applied:</t>
   <t><list style="empty">
     <t>m=video 5555 RTP/AVP 97 98</t>
     <t>a=rtpmap:97 H264-RCDO/90000</t>
     <t>a=fmtp:97 profile-level-id=008016;max-mbps=42000;max-smbps=323500</t>
     <t>a=rtpmap:98 H264/90000</t>
     <t>a=fmtp:98 profile-level-id=428016;max-mbps=35000;max-smbps=323500</t>
   </list></t>
   </section>

   <section title="Declarative SDP Considerations">
    <t>When H264-RCDO over RTP is offered with SDP in a declarative style, as in the Real Time Streaming Protocol (RTSP) <xref target="RFC2326"/> or the Session Announcement Protocol (SAP) <xref target="RFC2974"/>, the considerations in Section 8.2.3 of RFC 6184 <xref target="RFC6184"/> apply. Note that the profile_idc byte of the H264-RCDO profile-level-id parameter can only take the value of 0 (no profile).</t>
   </section>
  </section>

  <section title="IANA Considerations">
<!-- IANA Flag-->
   <t>IANA has registered H264-RCDO as specified in <xref target="mtd"/>.  The media subtype has also been added to the IANA registry for "RTP Payload Format MIME types" (http://www.iana.org).</t>
  </section>

  <section title="Security Considerations">
   <t>RTP packets using the payload format defined in this specification are subject to the security considerations discussed in the RTP specification <xref target="RFC3550"/> and in any applicable RTP profile. Refer also to the security considerations of the RTP Payload Format for H.264 Video specification in RFC 6184 <xref target="RFC6184"/>. No additional security considerations are introduced by this specification.</t>
  </section>

  <section title="Acknowledgements">
   <t>The authors would like to acknowledge Gisle Bjoentegaard and Arild Fuldseth for their technical contribution to the specification. In the final phases, Roni Even did a helpful review.</t>
  </section>
 </middle>

 <back>
  <references title="Normative References">


<!-- reference.I-D.draft-ietf-avt-rtp-rfc3984bis-12" -->

<reference anchor='RFC6184'>
<front>
<title>RTP Payload Format for H.264 Video</title>

<author initials='Y.-K.' surname='Wang' fullname='Ye-Kui Wang'>
    <organization />
</author>

<author initials='R' surname='Even' fullname='Roni Even'>
    <organization />
</author>

<author initials='T' surname='Kristensen' fullname='Tom Kristensen'>
    <organization />
</author>

<author initials='R' surname='Jesup' fullname='Randell Jesup'>
    <organization />
</author>

<date month='May' year='2011' />

<abstract><t>This memo describes an RTP Payload format for the ITU-T
Recommendation H.264 \
video codec and the technically identical ISO/IEC International Standard
14496-10 video co\
dec, excluding the Scalable Video Coding (SVC) extension and the Multivew Video
Coding ext\
ension, for which the RTP payload formats are defined elsewhere. The RTP
payload format al\
lows for packetization of one or more Network Abstraction Layer Units (NALUs),
produced by\
 an H.264 video encoder, in each RTP payload.  The payload format has wide
applicability, \
as it supports applications from simple low bitrate conversational usage, to
Internet vide\
o streaming with interleaved transmission, to high bitrate video-on-demand.
This memo obs\
oletes RFC 3984.  Changes from RFC 3984 are summarized in section 15.  Issues
on backward \
compatibility to RFC 3984 are discussed in section 14.  Table of
Contents</t></abstract>

</front>

<seriesInfo name='RFC' value='6184' />
</reference>

<!-- rfc include="reference.ITU.H264.2007" -->

   <reference anchor="ITU-H264-2007">

     <front>
       <title>Advanced video coding
         for generic audiovisual services</title>

       <author>
         <organization>International Telecommunications Union</organization>
       </author>

       <date month ="March" year="2010" />
     </front>
     <seriesInfo name="ITU-T" value="Recommendation H.264" />
   </reference>

<!-- rfc include="reference.ITU.H241.2006" -->

   <reference anchor="ITU-H241-2006">

     <front>
       <title>Extended video procedures and control signals for H.300-series
terminals</title> 

       <author>
         <organization>International Telecommunications Union</organization>
       </author>

       <date month ="May" year="2006" />
     </front>
     <seriesInfo name="ITU-T" value="Recommendation H.241" />
   </reference>


   <?rfc include="reference.RFC.2119" ?>
   <?rfc include="reference.RFC.3264" ?>
   <?rfc include="reference.RFC.3550" ?>
   <?rfc include="reference.RFC.3551" ?>
   <?rfc include="reference.RFC.4566" ?>
   <?rfc include="reference.RFC.4648" ?>
   <?rfc include="reference.RFC.4855" ?>
  </references>

  <references title="Informative References">
   <?rfc include="reference.RFC.2326" ?>
   <?rfc include="reference.RFC.2974" ?>
   <?rfc include="reference.RFC.4288" ?>
   <?rfc include="reference.RFC.5576" ?>
  </references>
 </back>

</rfc>
