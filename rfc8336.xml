<?xml version="1.0" encoding="US-ASCII"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>


<rfc ipr="trust200902" number="8336" category="std" submissionType="IETF" consensus="yes">

  <front>
    <title abbrev="ORIGIN Frames">The ORIGIN HTTP/2 Frame</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>
    <author initials="E." surname="Nygren" fullname="Erik Nygren">
      <organization>Akamai Technologies</organization>
      <address>
        <email>erik+ietf@nygren.org</email>
      </address>
    </author>

    <date month="March" year="2018"/>

    <area>General</area>
    <workgroup>HTTP</workgroup>

    <abstract>


<t>This document specifies the ORIGIN frame for HTTP/2, to indicate what origins are available on a
given connection.</t>

    </abstract>
  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP/2 <xref target="RFC7540"/> allows clients to coalesce different origins <xref target="RFC6454"/> onto the same
connection when certain conditions are met. However, in some cases, a connection is not
usable for a coalesced origin, so the 421 (Misdirected Request) status code (<xref target="RFC7540"/>, Section
9.1.2) was defined.</t>

<t>Using a status code in this manner allows clients to recover from misdirected requests, but at the
penalty of adding latency. To address that, this specification defines a new HTTP/2 frame type,
"ORIGIN", to allow servers to indicate for which origins a connection is usable.</t>

<t>Additionally, experience has shown that HTTP/2's requirement to establish server authority using
both DNS and the server's certificate is onerous. This specification relaxes the requirement to
check DNS when the ORIGIN frame is in use. Doing so has additional benefits, such as removing the
latency associated with some DNS lookups.</t>

<section anchor="notational-conventions" title="Notational Conventions">

        <t>
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
    NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
    "MAY", and "OPTIONAL" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>

</section>
</section>
<section anchor="the-origin-http2-frame" title="The ORIGIN HTTP/2 Frame">

<t>This document defines a new HTTP/2 frame type (<xref target="RFC7540"/>, Section 4) called ORIGIN, that allows
a server to indicate what origin(s) <xref target="RFC6454"/> the server would like the client to consider as
members of the Origin Set (<xref target="set"/>) for the connection within
which it occurs.</t>

<section anchor="syntax" title="Syntax">

<t>The ORIGIN frame type is 0xc (decimal 12) and contains zero or more instances of the Origin-Entry
field.</t>

<figure><artwork type="drawing"><![CDATA[
+-------------------------------+-------------------------------+
|         Origin-Entry (*)                                    ...
+-------------------------------+-------------------------------+
]]></artwork></figure>

<t>An Origin-Entry is a length-delimited string:</t>

<figure><artwork type="drawing"><![CDATA[
+-------------------------------+-------------------------------+
|         Origin-Len (16)       | ASCII-Origin?               ...
+-------------------------------+-------------------------------+
]]></artwork></figure>

<t>Specifically:</t>

<t><list style="hanging">
  <t hangText='Origin-Len:'>
  An unsigned, 16-bit integer indicating the length, in octets, of the ASCII-Origin field.</t>
  <t hangText='Origin:'>
  An OPTIONAL sequence of characters containing the ASCII serialization of an origin (<xref target="RFC6454"/>, Section 6.2) that the sender asserts this connection is or could be authoritative for.</t>
</list></t>

<t>The ORIGIN frame does not define any flags. However, future updates to this specification MAY
define flags. See <xref target="process"/>.</t>

</section>
<section anchor="process" title="Processing ORIGIN Frames">

<t>The ORIGIN frame is a non-critical extension to HTTP/2. Endpoints that do not support this frame
can safely ignore it upon receipt.</t>

<t>When received by an implementing client, it is used to initialize and manipulate the Origin Set
(see <xref target="set"/>), thereby changing how the client establishes authority for origin servers (see
<xref target="authority"/>).</t>

<t>The ORIGIN frame MUST be sent on stream 0; an ORIGIN frame on any other stream is invalid and MUST
be ignored.</t>

<t>Likewise, the ORIGIN frame is only valid on connections with the "h2" protocol identifier or when
specifically nominated by the protocol's definition; it MUST be ignored when received on a
connection with the "h2c" protocol identifier.</t>

<t>This specification does not define any flags for the ORIGIN frame, but future updates to this
specification (through IETF consensus) might use them to change its semantics. The first four flags
(0x1, 0x2, 0x4, and 0x8) are reserved for backwards-incompatible changes; therefore, when any of
them are set, the ORIGIN frame containing them MUST be ignored by clients conforming to this
specification, unless the flag's semantics are understood. The remaining flags are reserved for
backwards-compatible changes and do not affect processing by clients conformant to this
specification.</t>

<t>The ORIGIN frame describes a property of the connection and therefore is processed hop by hop. An
intermediary MUST NOT forward ORIGIN frames. Clients configured to use a proxy MUST ignore any
ORIGIN frames received from it.</t>

<t>Each ASCII-Origin field in the frame's payload MUST be parsed as an ASCII serialization of an
origin (<xref target="RFC6454"/>, Section 6.2). If parsing fails, the field MUST be ignored.</t>

<t>Note that the ORIGIN frame does not support wildcard names (e.g., "*.example.com") in Origin-Entry.
As a result, sending ORIGIN when a wildcard certificate is in use effectively disables any origins
that are not explicitly listed in the ORIGIN frame(s) (when the client understands ORIGIN).</t>

<t>See <xref target="algo"/> for an illustrative algorithm for processing ORIGIN frames.</t>

</section>
<section anchor="set" title="The Origin Set">

<t>The set of origins (as per <xref target="RFC6454"/>) that a given connection might be used for is known in this
specification as the Origin Set.</t>

<t>By default, the Origin Set for a connection is uninitialized. An uninitialized Origin Set means
that clients apply the coalescing rules from Section 9.1.1 of <xref target="RFC7540"/>.</t>

<t>When an ORIGIN frame is first received and successfully processed by a client, the connection's
Origin Set is defined to contain an initial origin. The initial origin is composed from:</t>

<t><list style="symbols">
  <t>Scheme: "https"</t>

  <t>Host: the value sent in Server Name Indication (SNI) (<xref target="RFC6066"/>, Section 3) converted to lower case; if SNI is not present, the remote address of the connection (i.e., the server's IP address)</t>

  <t>Port: the remote port of the connection (i.e., the server's port)</t>
</list></t>

<t>The contents of that ORIGIN frame (and subsequent ones) allow the server to incrementally add new
origins to the Origin Set, as described in <xref target="process"/>.</t>

<t>The Origin Set is also affected by the 421 (Misdirected Request) response status code, as defined in
<xref target="RFC7540"/>, Section 9.1.2. Upon receipt of a response with this status code, implementing clients
MUST create the ASCII serialization of the corresponding request's origin (as per <xref target="RFC6454"/>,
Section 6.2) and remove it from the connection's Origin Set, if present.</t>

<t><list style="hanging">
  <t hangText='Note:'>

  When sending an ORIGIN frame to a connection that is initialized as an alternative service
<xref target="RFC7838"/>, the initial Origin Set (<xref target="set"/>) will contain an origin with the appropriate
scheme and hostname (since RFC 7838 specifies that the origin's hostname be sent in SNI). However, it is possible that the port will be different than that of the intended
origin, since the initial Origin Set is calculated using the actual port in use, which can be
different for the alternative service. In this case, the intended origin needs to be sent in
the ORIGIN frame explicitly.</t>

  <t>For example, a client making requests for "https://example.com" is directed to an alternative
service at ("h2", "x.example.net", "8443").  If this alternative service sends an ORIGIN
frame, the initial origin will be "https://example.com:8443".  The client will not be able to
use the alternative service to make requests for "https://example.com" unless that origin is
explicitly included in the ORIGIN frame.</t>
</list></t>

</section>
<section anchor="authority" title="Authority, Push, and Coalescing with ORIGIN">

<t>Section 10.1 of <xref target="RFC7540"/> uses both DNS and the presented Transport Layer Security (TLS) certificate to establish the origin
server(s) that a connection is authoritative for, just as HTTP/1.1 does in <xref target="RFC7230"/>.</t>

<t>Furthermore, Section 9.1.1 of <xref target="RFC7540"/> explicitly allows a connection to be used for more than
one origin server, if it is authoritative. This affects what responses can be considered
authoritative, both for direct responses to requests and for server push (see <xref target="RFC7540"/>, Section
8.2.2). Indirectly, it also affects what requests will be sent on a connection, since clients will
generally only send requests on connections that they believe to be authoritative for the origin in
question.</t>

<t>Once an Origin Set has been initialized for a connection, clients that implement this specification
use it to help determine what the connection is authoritative for. Specifically, such clients MUST
NOT consider a connection to be authoritative for an origin not present in the
Origin Set, and they
SHOULD use the connection for all requests to origins in the Origin Set for which the connection is
authoritative, unless there are operational reasons for opening a new connection.</t>

<t>Note that for a connection to be considered authoritative for a given origin, the server is still
required to authenticate with a certificate that passes suitable checks; see Section 9.1.1 of
<xref target="RFC7540"/> for more information. This includes verifying that the host matches a <spanx style="verb">dNSName</spanx> value
from the certificate <spanx style="verb">subjectAltName</spanx> field (using the rules defined in <xref target="RFC2818"/>; see also
<xref target="RFC5280"/>, Section 4.2.1.6).</t>

<t>Additionally, clients MAY avoid consulting DNS to establish the connection's authority for new
requests to origins in the Origin Set; however, those that do so face new risks, as explained in
<xref target="sc"/>.</t>

<t>Because ORIGIN can change the set of origins a connection is used for over time, it is possible
that a client might have more than one viable connection to an origin open at any time. When this
occurs, clients SHOULD NOT emit new requests on any connection whose Origin Set is a proper subset
of another connection's Origin Set, and they SHOULD close it once all outstanding requests are satisfied.</t>

<t>The Origin Set is unaffected by any alternative services <xref target="RFC7838"/> advertisements made by the
server.  Advertising an alternative service does not affect whether a server is authoritative.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This specification adds an entry to the "HTTP/2 Frame Type" registry.</t>

<t><list style="symbols">
  <t>Frame Type: ORIGIN</t>
  <t>Code: 0xc</t>
  <t>Specification: RFC 8336</t>
</list></t>

</section>
<section anchor="sc" title="Security Considerations">

<t>Clients that blindly trust the ORIGIN frame's contents will be vulnerable to a large number of
attacks. See <xref target="authority"/> for mitigations.</t>

<t>Relaxing the requirement to consult DNS when determining authority for an origin means that an
attacker who possesses a valid certificate no longer needs to be on path to redirect traffic to
them; instead of modifying DNS, they need only convince the user to visit another website in
order to coalesce connections to the target onto their existing connection.</t>

<t>As a result, clients opting not to consult DNS ought to employ some alternative means to establish
a high degree of confidence that the certificate is legitimate. For example, clients might skip
consulting DNS only if they receive proof of inclusion in a Certificate Transparency log
<xref target="RFC6962"/> or if they have a recent Online Certificate Status Protocol (OCSP) response <xref target="RFC6960"/> (possibly using the "status_request"
TLS extension <xref target="RFC6066"/>) showing that the certificate was not revoked.</t>

<t>The Origin Set's size is unbounded by this specification and thus could be used by attackers to
exhaust client resources. To mitigate this risk, clients can monitor their state commitment and
close the connection if it is too high.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

<?rfc include="reference.RFC.7540" ?>
<?rfc include="reference.RFC.6454" ?>
<?rfc include="reference.RFC.2119" ?>
<?rfc include="reference.RFC.8174" ?>
<?rfc include="reference.RFC.6066" ?>
<?rfc include="reference.RFC.2818" ?>
<?rfc include="reference.RFC.5280" ?>

    </references>

    <references title='Informative References'>

<?rfc include="reference.RFC.7838" ?>
<?rfc include="reference.RFC.7230" ?>
<?rfc include="reference.RFC.6962" ?>
<?rfc include="reference.RFC.6960" ?>
<?rfc include="reference.RFC.8288" ?>

    </references>


<section anchor="algo" title="Non-Normative Processing Algorithm">

<t>The following algorithm illustrates how a client could handle received ORIGIN frames:</t>

<t><list style="numbers">
  <t>If the client is configured to use a proxy for the connection, ignore the frame and stop processing.</t>
  <t>If the connection is not identified with the "h2" protocol identifier or another protocol that has explicitly opted into this specification, ignore the frame and stop processing.</t>
  <t>If the frame occurs upon any stream except stream 0, ignore the frame and stop processing.</t>
  <t>If any of the flags 0x1, 0x2, 0x4, or 0x8 are set, ignore the frame and stop processing.</t>
  <t>If no previous ORIGIN frame on the connection has reached this step, initialize the Origin Set as per <xref target="set"/>.</t>
  <t>For each <spanx style="verb">Origin-Entry</spanx> in the frame payload:
  <list style="numbers">
      <t>Parse <spanx style="verb">ASCII-Origin</spanx> as an ASCII serialization of an origin (<xref target="RFC6454"/>, Section 6.2), and let the result be <spanx style="verb">parsed_origin</spanx>. If parsing fails, skip to the next <spanx style="verb">Origin&nbhy;Entry</spanx>.</t>
      <t>Add <spanx style="verb">parsed_origin</spanx> to the Origin Set.</t>
    </list></t>
</list></t>

</section>
<section anchor="server-ops" title="Operational Considerations for Servers">

<t>The ORIGIN frame allows a server to indicate for which origins a given connection ought be used.
The set of origins advertised using this mechanism is under control of the server; servers are not
obligated to use it or to advertise all origins that they might be able to answer a request for.</t>

<t>For example, it can be used to inform the client that the connection is to only be used for the
SNI-based origin, by sending an empty ORIGIN frame. Or, a larger number of origins can be indicated
by including a payload.</t>

<t>Generally, this information is most useful to send before sending any part of a response that might
initiate a new connection; for example, "Link" response header fields <xref target="RFC8288"/>, or links in the response body.</t>

<t>Therefore, the ORIGIN frame ought be sent as soon as possible on a connection, ideally before any
HEADERS or PUSH_PROMISE frames.</t>

<t>However, if it's desirable to associate a large number of origins with a connection, doing so might
introduce end-user-perceived latency, due to their size. As a result, it might be necessary to
select a "core" set of origins to send initially, and expand the set of origins the connection is
used for with subsequent ORIGIN frames later (e.g., when the connection is idle).</t>

<t>That said, senders are encouraged to include as many origins as practical within a single ORIGIN
frame; clients need to make decisions about creating connections on the fly, and if the Origin
Set is split across many frames, their behavior might be suboptimal.</t>

<t>Senders take note that, as per Section 4, Step 5, of <xref target="RFC6454"/>, the values in an ORIGIN header
need to be case-normalized before serialization.</t>

<t>Finally, servers that host alternative services <xref target="RFC7838"/> will need to explicitly advertise
their origins when sending ORIGIN, because the default contents of the Origin Set (as per <xref target="set"/>)
do not contain any alternative services' origins, even if they have been used previously on the
connection.</t>

</section>

  </back>


</rfc>

