<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC5070 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5070.xml">
<!ENTITY RFC5901 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5901.xml">
<!ENTITY RFC5941 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5941.xml">
<!ENTITY RFC6545 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6545.xml">
<!ENTITY RFC6546 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6546.xml">
<!ENTITY RFC7203 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7203.xml">
<!ENTITY RFC4765 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4765.xml">
<!ENTITY RFC7970 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7970.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="2"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc number="8134"
     category="info" 
     submissionType="IETF"
     consensus="yes"
     ipr="trust200902">

 <front>

   <title abbrev="MILE Implementation Report">Management Incident Lightweight
   Exchange (MILE) Implementation Report</title>


   <author fullname="Chris Inacio" initials="C." surname="Inacio">
     <organization abbrev="CMU">Carnegie Mellon University</organization>
     <address>
       <postal>
         <street>4500 5th Ave., SEI 4108</street>
         <city>Pittsburgh</city>
         <region>PA</region>
         <code>15213</code>
         <country>United States of America</country>
       </postal>
       <email>inacio@andrew.cmu.edu</email>
     </address>
   </author>

   <author fullname="Daisuke Miyamoto" initials="D." surname="Miyamoto">
     <organization abbrev="UTokyo">The University of Tokyo</organization>
     <address>
       <postal>
         <street>2-11-16 Yayoi, Bunkyo</street>
         <city>Tokyo</city>
         <region></region>
         <code>113-8658</code>
         <country>Japan</country>
       </postal>
       <email>daisu-mi@nc.u-tokyo.ac.jp</email>
     </address>
   </author>

   <date month="March" year="2017"/>

   <area>General</area>

   <workgroup>MILE</workgroup>

   <keyword>IODEF</keyword>
   <keyword>RID</keyword>
   <keyword>SCI</keyword>
   <keyword>INCH</keyword>
   <keyword>MILE</keyword>
   <keyword>Implementation</keyword>

   <abstract>
     <t>This document is a collection of implementation reports from vendors, consortiums, and researchers who have 
implemented one or more of the standards published from the IETF INCident Handling (INCH) and Management Incident
 Lightweight Exchange (MILE) working groups.  </t>
   </abstract>
 </front>

 <middle>
   <section title="Introduction">
     <t>This document is a collection of information about security incident
     reporting protocols and the implementation of systems that use them to
     share such information.  It is simply a collection of information, and it makes no attempt to compare the various standards or implementations. As such, it will be of interest to network operators who wish to collect and share such data.</t>
     <t>Operationally, operators would need to decide which incident data
collection group they want to be part of, and that choice will strongly
influence their choice of reporting protocol and applications used to
gather and distribute the data.</t>


     <t>This document is a collection of implementation reports from vendors and researchers who have 
implemented one or more of the standards published from the INCH and MILE working groups.  The standards include: 
<list style="symbols">
   <t>Incident Object Description Exchange Format (IODEF) v1 <xref target="RFC5070"/></t>
   <t>Incident Object Description Exchange Format (IODEF) v2 <xref target="RFC7970"/></t>
   <t>Extensions to the IODEF-Document Class for Reporting Phishing <xref target="RFC5901"/></t>
   <t>Sharing Transaction Fraud Data <xref target="RFC5941"/></t>
   <t>Real-time Inter-network Defense (RID) <xref target="RFC6545"/></t>
   <t>Transport of Real-time Inter-network Defense (RID) Messages over
   HTTP/TLS <xref target="RFC6546"/></t>
   <t>Incident Object Description Exchange Format (IODEF) Extension for
   Structured Cybersecurity Information (SCI) <xref target="RFC7203"/></t>
</list></t>

     <t>The implementation reports included in this document have been provided by the team or product responsible for the implementations of the mentioned RFCs. A more complete list of implementations, including open source efforts and vendor products, can also be found at the following location: 
   <list>
     <t>&lt;http://siis.realmv6.org/implementations/&gt;</t>
   </list> </t>


   </section>

   <section anchor="SharingGroups" title="Consortiums and Information Sharing and Analysis Centers (ISACs)">
     <section title="Anti-Phishing Working Group">
      <t>The Anti-Phishing Working Group (APWG) is one of the biggest
      coalitions against cybercrime, especially phishing. In order to collect
      threat information in a structured format, APWG provides a phishing and
      cybercrime reporting tool that sends threat information to APWG by
      tailoring information with the IODEF format, based on RFC 5070 <xref
      target="RFC5070"/> and RFC 5901 <xref target="RFC5901"/>.</t>
     </section>

     <section title="Advanced Cyber Defence Centre">
      <t>The Advanced Cyber Defence Centre (ACDC) is a Europe-wide activity
      to fight against botnets. ACDC provides solutions to mitigate on-going
      attacks and consolidates information provided by various stakeholders
      into a pool of knowledge. Within ACDC, IODEF is one of the supported
      schemas for exchanging the information.</t>
     </section>

     <section title="Research and Education Networking Information Sharing and Analysis Center">

   <t>The Research and Education Networking Information Sharing and Analysis
   Center (REN-ISAC) is a private community of researchers and 
   higher-education members that share threat information and employs 
   IODEF formatted-messages to exchange information.</t>
      <t>REN-ISAC also recommends using an IODEF attachment provided with a
      notification email for processing rather than relying on parsing of the
      body text of email.  The tools provided by REN-ISAC are designed to handle such email.
   <list>
     <t>&lt;http://www.ren-isac.net/notifications/using_iodef.html&gt;</t>
   </list> </t>
     </section>
   </section>

   <section title="Open Source Implementations">
     <section title="EMC/RSA RID Agent">
      <t>The EMC/RSA RID agent is an open source implementation of the IETF
      standards for the exchange of incident and indicator data. The code has
      been released under an MIT license, and development will continue with the open source community at the GitHub site for RSA Intelligence Sharing:
<list>
     <t>&lt;https://github.com/RSAIntelShare/RID-Server.git&gt;</t>
</list> </t>

<t>The code implements the Real-time Inter-network Defense (RID) described in
RFC 6545 <xref
target="RFC6545"/> and the Transport of RID over HTTP/TLS protocol described
in <xref target="RFC6546"/>.
 The code supports the evolving Incident Object Description
Exchange Format (IODEF) data model <xref target="RFC7970"/> from the work in
the IETF Managed Incident Lightweight Exchange (MILE) working group.</t>
     </section>

     <section title="NICT IODEF-SCI implementation">
     <t>Japan's National Institute of Information and Communications Technology (NICT)
 Network Security Research Institute implemented open source tools for exchanging,
 accumulating, and locating IODEF-SCI <xref target="RFC7203"/> documents.</t>

     <t>Three tools are available from GitHub. These tools assist the exchange of IODEF-SCI
documents between parties. IODEF-SCI <xref target="RFC7203"/> extends IODEF so
that an IODEF document can embed Structured Cybersecurity Information (SCI).
For instance, it can embed Malware Metadata Exchange Format (MMDEF), Common
     Event Expression (CEE), Malware Attribute Enumeration and
     Characterization (MAEC) in XML, and Common Vulnerabilities and Exposures (CVE) identifiers.</t>

<t>The three tools are generator, exchanger, and parser. The generator
generates IODEF-SCI documents or appends XML to an existing IODEF document.
The exchanger sends the IODEF document to a specified correspondent node. The parser
receives, parses, and stores the IODEF-SCI document. The parser also creates an
interface that enables users to locate IODEF-SCI documents that have previously been
received. The code has been released under an MIT license and development
will continue on GitHub.</t>

<t>Note that users can enjoy using this software at their own risk.</t>

<t>Available Online:
<list>
     <t>&lt;https://github.com/TakeshiTakahashi/IODEF-SCI&gt;</t>
</list> </t>
     </section>

	<section title="n6">
	<t>
	n6 is a platform for processing security-related information; it was
	developed by the Poland Research and Academic Computer Network (NASK) Computer Emergency Response Team (CERT) Polska. The n6 API provides a common and unified way of representing data across the different sources that participate in knowledge management.
	</t>
	<t>
	n6 exposes a REST-ful (Representational State Transfer) API over HTTPS
	with mandatory authentication via Transport Layer Security (TLS)
	client certificates to ensure confidential and trustworthy communications. Moreover, it uses an event-based data model for representation of all types of security information.
	</t>
	<t>
	Each event is represented as a JSON object with a set of mandatory and optional attributes. n6 also supports alternative output data formats for keeping compatibility with existing systems - IODEF and CSV - although these formats lack some of the attributes that may be present in the native JSON format.
	</t>

	<t>
	Available Online:
	<list>
		<t>&lt;https://github.com/CERT-Polska/n6sdk&gt;</t>
	</list>
	</t>
	</section>

    </section>

   <section title="Vendor Implementations">
   <section title="Deep Secure">
<t>Deep-Secure Guards are built to protect a trusted domain from: 
  <list style="symbols">
     <t>releasing sensitive data that does not meet the organizational
     security policy, and</t>
     <t>applications receiving badly constructed or malicious data that could exploit a vulnerability (known or unknown).</t>
  </list></t>
<t>Deep-Secure Guards support HTTPS and the Extensible Messaging and Presence
Protocol (XMPP -- optimized server-to-server protocol), transports.  
  The Deep-Secure Guards support transfer of XML-based business content by creating a schema to
  translate the known good content to and from the intermediate format. This means that the Deep-Secure
  Guards can be used to protect: 
  <list style="symbols">
    <t>IODEF/RID using the HTTPS transport binding <xref target="RFC6546"/></t>
    <t>IODEF/RID using an XMPP binding</t>
    <t>Resource-Oriented Lightweight Indicator Exchange (ROLIE) using HTTPS transport binding <xref target="XEP-0268"/></t>
    <t>Structured Threat Information Expression (STIX) / Trusted Automated Exchange of Indicator Information (TAXII) using the HTTPS transport binding</t>
  </list> </t>
 
<t>Deep-Secure Guards also support the SMTP transport and perform deep content inspection of content including XML attachments.
 The Mail Guard supports S/MIME, and Deep Secure is working on support for the upcoming PLASMA standard, which enables an information-centric policy enforcement of data use.</t>
</section>

<section title="IncMan Suite, DFLabs">
<t>The Incident Object Description Exchange Format, documented in RFC 5070 <xref target="RFC5070"/>, defines a data representation that provides a framework
 for sharing information commonly exchanged by Computer Security Incident Response Teams (CSIRTs) about computer security incidents.  IncMan Suite implements the IODEF standard for exchanging details about incidents, either for exporting or importing activities.
 This has been introduced to enhance the capabilities of the various CSIRTs
 to facilitate collaboration and 
 sharing of useful experiences (sharing awareness on specific cases).</t>
 <t>The IODEF implementation is specified as an XML schema; therefore all data
 are stored in an XML file. In this file, all the data of an incident are organized in a hierarchical structure to describe the various objects and their relationships.</t>
<t>The IncMan Suite relies on IODEF as a transport format, which is composed by various classes for describing the entities that are part
 of the incident description. For instance, the various relevant timestamps (detection time, start time, end time, and report time), the techniques used by the intruders to perpetrate the incident, the impact of the incident, technical and non-technical (time and monetary), and obviously all systems involved in the incident.</t>
<section title="Exporting Incidents">
<t>Each incident defined in the IncMan Suite can be exported via a user
interface feature, and it will create an XML document. 
Due to the nature of the data processed, the IODEF extraction might be considered privacy sensitive by the parties exchanging
 the information or by those described by it.

 For this reason, specific care needs to be taken in ensuring the distribution to
 an appropriate audience or third party, either during the document exchange
or the subsequent processing.</t>

<t>The XML document generated will include a description and details of the incident along
 with all the systems involved and the related information. At this stage, it can be distributed for import into a remote system.</t>
</section>
<section title="Importing Incidents">
<t>The IncMan Suite provides the functionality to import incidents stored in files and transported via IODEF-compliant
 XML documents. The importing process is comprised of two steps: first, the file
 is inspected to validate if it is well formed; second, all data are uploaded inside the system.</t>
 <t>If the incident already exists in the system with the same incident ID, the new one being imported will
 be created under a new ID. This approach prevents accidentally overwriting existing information or merging inconsistent data.</t>
<t>The IncMan Suite also includes a feature to upload incidents from emails.</t>
<t>The incident, described in XML format, can be stored directly into the body of the email
 message or transported as an attachment of the email. At regular intervals
 that are customizable by the user, the IncMan Suite monitors for incoming
 emails, which are filtered by a configurable white-list and black-list mechanism
 on the sender's email account. Then, a parser processes the received email and a new incident is created
 automatically after having validated the email body or the attachment to
ensure the format is well formed.</t>
</section>


</section>

     <section title="Surevine Proof of Concept">
<t>XMPP is enhanced and extended through the XMPP Extension Protocols (XEPs).
  XEP-0268 <xref target="XEP-0268"/> describes incident management (using IODEF) of the XMPP network itself, 
effectively supporting self-healing the XMPP network.  In order to more generically cover the incident management of a network over the same network, XEP-0268 requires some updates.  We are working on these changes together with a new XEP that supports
 "social networking" over XMPP, which enhances the publish-and-subscribe XEP <xref target="XEP-0060"/>. This now allows nodes to publish and
subscribe to any type of content and therefore receive the content. XEP-0060
will be used to describe IODEF content.  We now have an alpha version of the
server-side software and client-side software required to demonstrate the
"social networking" capability and are currently enhancing this to support
cyber incident management in real time.</t>

    </section>

	<section title="MANTIS Cyber-Intelligence Management Framework">
<t>
Model-based Analysis of Threat Intelligence Sources (MANTIS) provides an
example implementation of a framework for managing cyber threat intelligence
expressed in standards such as STIX, Cyber Observable Expression (CybOX),
IODEF, etc. The aims of providing such an example implementation are as follows:
</t>
<t>
	<list style="symbols">
		<t>To facilitate discussions about emerging standards such as
		STIX, CybOX, et al., with respect to questions regarding
		tooling: how would a certain aspect be implemented, and how do changes affect an implementation? Such discussions become much easier and have a better basis if they can be lead in the context of example tooling that is known to the community.</t>
		<t>To lower the barrier of entry for organizations and teams (especially CSIRT/CERT teams) in using emerging standards for cyber-threat-intelligence management and exchange.</t>
		<t>
To provide a platform on the basis of which research and community-driven development in the area of cyber-threat-intelligence management can occur.</t>
	</list>
</t>
   </section>

</section>

<section title="Vendors with Planned Support">
   <section title="Threat Central, HP">
   <t>HP has developed HP Threat Central, a security intelligence platform that enables automated, real-time collaboration between
 organizations to combat today's increasingly sophisticated cyber attacks. One
 way automated sharing of threat indicators is achieved is through close
 integration with the HP ArcSight Security Information and Event Management (SIEM) for automated upload and consumption of information from the Threat Central Server. In addition, HP Threat Central supports open standards for sharing threat information so that participants who do not use HP Security Products can participate in the sharing ecosystem.  
<!-- General availability of Threat Central will be in 2014. -->
 It is planned that future versions will also support IODEF for the automated upload and download of threat information.</t>
   </section>

   <section title="DAEDALUS, NICT">
	<t>DAEDALUS is a real-time alert system based on a large-scale darknet
	monitoring facility that has been deployed as a part of the Network
	Incident analysis Center for Tactical Emergency Response (nicter) 
system of NICT, which is based in Japan. DAEDALUS consists of an analysis
center (i.e., nicter) and several cooperative organizations. Each organization
installs a darknet sensor and establishes a secure channel between it and the
analysis center, and it continuously forwards darknet traffic toward the
center. In addition, each organization registers the IP address range of its
livenet at the center in advance. When these distributed darknet sensors
observe malware activities from the IP address of a cooperating organization,
then the analysis center sends an alert to the organization. The future
version of DAEDALUS will support IODEF for sending alert messages to the
users. 
	</t>
	</section>
</section>

<section title="Other Implementations">
	<section title="Collaborative Incident Management System">
		<t>
		A Collaborative Incident Management System (CIMS) is a
		proof-of-concept system for collaborative incident handling
		and for the sharing of information about cyber defense situational awareness
		between the participants; it was developed for the
		Cyber Coalition 2013 (CC13) exercise organized by the North
		Atlantic Treaty Organization (NATO). CIMS was implemented based on Request Tracker (RT), an open source software widely used for handling incident responses by many CERTs and CSIRTs.
		</t>
	<t>
	One of the functionalities implemented in CIMS was the ability to
	import and export IODEF messages in the body of emails. The intent was
	to verify the suitability of IODEF to achieve the objective of
	collaborative incident handling. The customized version of RT could be
	configured to send an email message containing an IODEF message
	whenever an incident ticket was created, modified, or deleted. These
	IODEF messages would then be imported into other incident handling
	systems in order to allow participating CSIRTs to use their usual
	means for incident handling while still interacting with those using
	the proof-of-concept CIMS. Having an IODEF message generated for every
	change made to the incident information in RT (and for the system to
	allow incoming IODEF email messages to be associated to an existing
	incident) would in some way allow all participating CSIRTs to actually
	work on a "common incident ticket", at least at the conceptual
	level. Of particular importance was the ability for users to exchange
	information between each other concerning actions taken in the
	handling of a particular incident, thus creating a sort of common
	action log as well as requesting/tasking others to provide
	information or perform a specified action and correlating received responses to the original request or task. As well, a specific "profile" was developed to identify a subset of the IODEF classes that would be used during the exercise in an attempt to channel all users into a common usage pattern of the otherwise flexible IODEF standard.
	</t>
	</section>

<section title="Automated Incident Reporting - AirCERT">
	<t>AirCERT was implemented by the CERT / Coordination Center (CC) of
	Carnegie Mellon's Software Engineering Institute CERT
	division. AirCERT was designed to be an Internet-scalable distributed
	system for sharing security event data.  The AirCERT system was
	designed to be an automated collector of flow and Intrusion Detection
	System (IDS) alerts.  AirCERT would collect that information into a
	relational database and be able to share reporting using IODEF and
	the Intrusion Detection Message Exchange Format <xref
	target="RFC4765"/>.  AirCERT additionally used SNML <xref
	target="SNML"/> to exchange information about the network.  AirCERT
	was implemented in a combination of C and Perl modules and included
	periodic graphing capabilities leveraging the Round-Robin Database Tool (RRDTool).</t>
	<t>AirCERT was intended for large-scale distributed deployment and,
	eventually, the ability to sanitize data to be shared across
	administrative domains. The architecture was designed to allow
	collection of data on a per-site basis and to allow each site to create data sharing based on its own particular trust relationships.</t>
</section>
<section title="US Department of Energy CyberFed">
	<t>The CyberFed system was implemented and deployed by Argonne
	National Laboratory to automate the detection and response of attack
	activity against Department of Energy (DoE) computer networks.
	CyberFed automates the collection of network alerting activity from
	various perimeter network defenses and logs those events into its
	database.  CyberFed then automatically converts that information into
	blocking information transmitted to all participants.  The original
	implementation used IODEF messages wrapped in an XML extension to
	manage a large array of indicators.  The CyberFed system was not
	designed to describe a particular incident as much as to describe a
	set of current network-blocking indicators that can be generated and
	deployed machine to machine. </t>
	<t>CyberFed is primarily implemented in Perl.  Included as part of the
	CyberFed system are scripts that interact with a large number of
	firewalls, IDS / Intrusion Prevention System (IPS) devices, DNS
	systems, and proxies that operate to implement both the automated collection of events as well as the automated deployment of black listing. </t>
	<t>Currently, CyberFed supports multiple exchange formats including
	IODEF and STIX.  Open Indicators of Compromise (OpenIOC) is also a
	potential exchange format that the US DoE is considering.</t>
</section>

</section>

<section title="Implementation Guide">
	<t>
	The section aims at sharing tips for development of IODEF-capable systems. 
	</t>
	<section title="Code Generators">
	<t>	For implementing IODEF-capable systems, it is feasible to
		employ code generators for the XML Schema Definition (XSD). The
		generators are used to save development costs since they
		automatically create useful libraries for accessing XML
		attributes, composing messages, and/or validating XML
		objects. The IODEF XSD was defined in Section 8 of
		RFC 5070 <xref
		target="RFC5070"/> and is available from the "ns" registry 
		&lt;https://www.iana.org/assignments/xml-registry&gt;.
	</t>
	<t>
		However, some issues remain. Due to the complexity of the IODEF XSD, some code generators could not generate code from the XSD file. The tested code generators are as follows.
	</t>
	<t>
		<list style="symbols">
			<t><xref target="XSD:Perl">XML::Pastor</xref> (Perl)</t>
			<t><xref target="XSD:Ruby">RXSD</xref> (Ruby) </t>
			<t><xref target="XSD:Python">PyXB</xref> (Python) </t>
			<t><xref target="XSD:Java">JAXB</xref> (Java) </t>
			<t><xref target="XSD:Cxx">CodeSynthesis XSD</xref> (C++) </t>
			<t><xref target="XSD:CS">Xsd.exe</xref> (C#) </t>
		</list>
	</t>
	<t>
		For instance, we have tried to use XML::Pastor, but it could
		not properly understand its schema due to the complexity of
		IODEF XSD. The same applies to Ruby XSD (RXSD) and Java Architecture for
		XML Binding (JAXB). Only Python XML Schema Bindings (PyXB), CodeSynthesis XSD, and Xsd.exe were able to understand the complex schema.
	</t>
	<t>
			Unfortunately, there is no recommended workaround. A
			possible workaround is a double conversion of the XSD
			file.  This entails the XSD being serialized into XML;
			afterwards, the resulting XML is converted back into
			an XSD. The resultant XSD was successfully processed
			by all the tools listed above.
	</t>
	<t>
			It should be noted that IODEF uses '-' (hyphen)
			symbols in its classes or attributes, which are listed as follows:
	</t>
	<t>
		<list style="symbols">
			<t>IODEF-Document Class: It is the top-level class in the IODEF data model
				described in Section 3.1 of RFC 5070 <xref target="RFC5070"/>.
			</t>
			<t>The vlan-name and vlan-num Attributes: According to Section 3.16.2 of
				RFC 5070 <xref target="RFC5070"/>, they are the name and number of Virtual LAN and are the
				attributes for Address class.
			</t>
			<t>Extending the Enumerated Values of Attribute: According to Section 5.1
			of RFC 5070 <xref target="RFC5070"/>, this is an extension technique to add new enumerated values
				to an attribute, and it has a prefix of "ext-", e.g., ext-value, ext-category,
				ext-type, and so on.
			</t>
		</list>
	</t>
	<t>
		According to the language specification, many programming languages prohibit having '-' symbols in the name of class. The code generators must replace or remove the '-' when building the libraries. They should have the name space restore the '-' when outputting the XML along with IODEF XSD.
	</t>
	</section>

	<section title="iodeflib">
	<t>iodeflib is an open source implementation written in Python. This provides simple but powerful APIs to create, parse, and edit IODEF documents. It was designed in order to keep its interface as simple as possible, whereas generated libraries tend to inherit the complexity of IODEF XSD. In addition, the iodeflib interface includes functions to hide some unnecessarily nested structures of the IODEF schema and add more convenient shortcuts.</t>
	<t>This tool is available through the following link:</t>
	<t>
		<list>
			<t>&lt;http://www.decalage.info/python/iodeflib&gt;</t>
		</list>
	</t>
	</section>

	<section title="iodefpm">
	<t>IODEF.pm is an open source implementation written in Perl. This
	also provides a simple interface for creating and parsing IODEF
	documents in order to facilitate the translation of the
	key-value-based format to the IODEF representation. The module
	contains a generic XML DTD parser and includes a simplified node-based
	representation of the IODEF DTD. Hence, it can easily be upgraded or extended to support new XML nodes or other DTDs.</t>
	<t>This tool is available through the following link:</t>
	<t>
		<list>
			<t>&lt;http://search.cpan.org/~saxjazman/&gt;</t>
		</list>
	</t>
	</section>

	<section title="Usability">
			<t>
				Some tips to avoid problems are noted here: 
			</t>
			<t>
				<list style="symbols">
					<t>
					IODEF has a category attribute for the
					NodeRole class. Though various categories
					are described, they are not sufficient. For example, in the case of webmail servers,
					should the user choose "www" or
					"mail"? One suggestion is to select "mail"
					as the category attribute and add "www" for another attribute.
					</t>
					<t>
					The numbering of incident IDs needs to be considered. Otherwise, information,
					such as the number of incidents within
					a certain period, could be observed by
					document receivers. This is easily mitigated by randomizing the assignment of incident IDs.
					</t>
				</list>
			</t>
	</section>
</section>

   <section anchor="IANA" title="IANA Considerations">
     <t>This memo does not require any IANA actions.</t>
   </section>

   <section anchor="Security" title="Security Considerations">
     <t>This document provides a summary of implementation reports from researchers and vendors who have implemented RFCs and drafts from the MILE and INCH working groups.  There are no security considerations added because of the nature of the document.</t>
   </section>
 </middle>

 <back>

   <references title="Informative References">

     &RFC5070;

     &RFC5901;

     &RFC5941;

     &RFC6545;

     &RFC6546;

     &RFC7203;

     &RFC4765;

&RFC7970;

			<reference anchor="XEP-0060" target="http://www.xmpp.org/extensions/xep-0060.html">
				<front>
					<title>XEP-0060: Publish-Subscribe</title>
					<author initials="P." surname="Millard" fullname="Peter Millard">
					</author>
					<author initials="P." surname="Saint-Andre" fullname="Peter Saint-Andre">
					</author>
					<author initials="R." surname="Meijer" fullname="Ralph Meijer">
					</author>
					<date month="December" year="2016" />
				</front>
			</reference>
			<reference anchor="XEP-0268" target="http://xmpp.org/extensions/xep-0268.html">
				<front>
					<title>XEP-0268: Incident Handling</title>
					<author initials="A." surname="Hefczy" fullname="Artur Hefczyc">
					</author>
					<author initials="F." surname="Jensen" fullname="Florian Jensen">
					</author>
					<author initials="M." surname="Remond" fullname="Mickael Remond">
					</author>
					<author initials="P." surname="Saint-Andre" fullname="Peter Saint-Andre">
					</author>
					<author initials="M." surname="Wild" fullname="Matthew Wild">
					</author>
					<date month="May" year="2012" />
				</front>
			</reference>
			<reference anchor="SNML" target="http://aircert.sourceforge.net/docs/aircert_manual-06_2005.pdf">
				<front>
					<title>AirCERT: The Definitive Guide</title>
					<author initials="B." surname="Trammell" fullname="Brian Trammell">
						<organization>Carnegie Mellon University</organization>
					</author>
					<author initials="R." surname="Danyliw" fullname="Roman Danyliw">
						<organization>Carnegie Mellon University</organization>
					</author>
					<author initials="S." surname="Levy" fullname="Sean Levy">
						<organization>Carnegie Mellon University</organization>
					</author>
					<author initials="A." surname="Kompanek" fullname="Andrew Kompanek">
						<organization>Carnegie Mellon University</organization>
					</author>
					<date year="2005" />
				</front>
			</reference>


			<reference anchor="XSD:Perl" target="http://search.cpan.org/~aulusoy/XML-Pastor-1.0.4/">

				<front>
					<title>XML-Pastor-1.0.4</title>
					<author initials="A." surname="Ulsoy" fullname="Ayhan Ulusoy" />
					<date year="" />
				</front>
			</reference>
			<reference anchor="XSD:Ruby" target="https://github.com/movitto/RXSD">
				<front>
					<title>XSD / Ruby Translator</title>
					<author initials="M." surname="Morsi" fullname="Mohammed Morsi" />
					<date year="" />
				</front>
			</reference>
			<reference anchor="XSD:Python" target="https://pypi.python.org/pypi/PyXB">
				<front>
					<title>PyXB 1.2.5: Python XML Schema Bindings</title>
					<author initials="P." surname="Bigot" fullname="Peter A. Bigot" />
					<date year="" />
				</front>
			</reference>
			<reference anchor="XSD:Java" target="https://jaxb.java.net/">
				<front>
					<title>Project JAXB</title>
					<author>
						<organization>Project Kenai</organization>
					</author>
					<date year="" />
				</front>
			</reference>
			<reference anchor="XSD:Cxx" target="http://www.codesynthesis.com/">
				<front>
					<title>XSD: XML Data Binding for C++</title>
					<author>
						<organization>CodeSynthesis</organization>
					</author>
					<date year="" />
				</front>
			</reference>

			<reference anchor="XSD:CS" target="http://www.microsoft.com/">
				<front>
					<title>XML Schema Definition Tool (Xsd.exe)</title>
					<author>
						<organization>Microsoft</organization>
					</author>
					<date year="" />
				</front>
			</reference>

   </references>

<section title="Acknowledgements" anchor="Acknowledgements" numbered="no">
<t>The MILE implementation report has been compiled through the
submissions of implementers of INCH and MILE working group standards. 
A special note of thanks to the following contributors:                                                                                                                                            
<list>
<t>John Atherton, Surevine</t>
<t>Humphrey Browning, Deep-Secure</t>
<t>Dario Forte, DFLabs</t>
<t>Tomas Sander, HP</t>
<t>Ulrich Seldeslachts, ACDC</t>
<t>Takeshi Takahashi, National Institute of Information and Communications
Technology                                                                                                                
Network Security Research Institute</t>
<t>Kathleen Moriarty, EMC</t>
<t>Bernd Grobauer, Siemens</t>
<t>Dandurand Luc, NATO</t>
<t>Pawel Pawlinski, NASK</t>
</list> </t>
</section>
 </back>
</rfc>
