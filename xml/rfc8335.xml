<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc subcompact="no"?>

<rfc number="8335"
     category="std" 
     submissionType="IETF"
     consensus="yes"
     ipr="trust200902"
     updates="4884">
  <front>
    <title abbrev="PROBE">PROBE: A Utility for Probing Interfaces</title>

    <author fullname="Ron Bonica" initials="R." surname="Bonica">
      <organization>Juniper Networks</organization>

      <address>
        <postal>
          <street>2251 Corporate Park Drive</street>

          <city>Herndon</city>

          <code>20171</code>

          <region>Virginia</region>

          <country>United States of America</country>
        </postal>

        <email>rbonica@juniper.net</email>
      </address>
    </author>

    <author fullname="Reji Thomas" initials="R." surname="Thomas">
      <organization>Juniper Networks</organization>

      <address>
        <postal>
          <street>Elnath-Exora Business Park Survey</street>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code>560103</code>

          <country>India</country>
        </postal>

        <email>rejithomas@juniper.net</email>
      </address>
    </author>

    <author fullname="Jen Linkova" initials="J." surname="Linkova">
      <organization>Google</organization>

      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>

          <city>Mountain View</city>

          <region>California</region>

          <code>94043</code>

          <country>United States of America</country>
        </postal>

        <email>furry@google.com</email>
      </address>
    </author>

    <author fullname="Chris Lenart" initials="C." surname="Lenart">
      <organization>Verizon</organization>

      <address>
        <postal>
          <street>22001 Loudoun County Parkway</street>

          <city>Ashburn</city>

          <region>Virginia</region>

          <code>20147</code>

          <country>United States of America</country>
        </postal>

        <email>chris.lenart@verizon.com</email>
      </address>
    </author>

    <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
      <organization>Orange</organization>

      <address>
        <postal>
          <street/>

          <city>Rennes 35000</city>

          <country>France</country>
        </postal>

        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <date month="February" year="2018"/>

    <area>Internet</area>

    <workgroup>INTAREA</workgroup>

    <keyword>Ping</keyword>

    <keyword>ICMP</keyword>

    <abstract>
      <t>This document describes a network diagnostic tool called PROBE. PROBE
      is similar to PING in that it can be used to query the status of a
      probed interface, but it differs from PING in that it does not require
      bidirectional connectivity between the probing and probed interfaces.
      Instead, PROBE requires bidirectional connectivity between the probing
      interface and a proxy interface. The proxy interface can reside on the
      same node as the probed interface, or it can reside on a node to which
      the probed interface is directly connected. This document updates RFC
      4884.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>Network operators use <xref target="RFC2151">PING</xref> to test
      bidirectional connectivity between two interfaces. For the purposes of
      this document, these interfaces are called the probing and probed
      interfaces. PING sends an <xref target="RFC0792">ICMP</xref> <xref
      target="RFC4443"/> Echo Request message from the probing interface to
      the probed interface. The probing interface resides on a probing node
      while the probed interface resides on a probed node.</t>

      <t>If the probed interface receives the ICMP Echo Request message, it
      returns an ICMP Echo Reply. When the probing interface receives the ICMP
      Echo Reply, it has verified bidirectional connectivity between the
      probing and probed interfaces. Specifically, it has verified that:</t>

      <t><list style="symbols">
          <t>The probing node can reach the probed interface.</t>

          <t>The probed interface is active.</t>

          <t>The probed node can reach the probing interface.</t>

          <t>The probing interface is active.</t>
        </list></t>

      <t>This document describes a network diagnostic tool called PROBE. PROBE
      is similar to PING in that it can be used to query the status of a
      probed interface, but it differs from PING in that it does not require
      bidirectional connectivity between the probing and probed interfaces.
      Instead, PROBE requires bidirectional connectivity between the probing
      interface and a proxy interface. The proxy interface can reside on the
      same node as the probed interface, or it can reside on a node to which
      the probed interface is directly connected. <xref target="usecase"/> of
      this document describes scenarios in which this characteristic is
      useful.</t>

      <t>Like PING, PROBE executes on a probing node. It sends an ICMP
      Extended Echo Request message from a local interface, called the probing
      interface, to a proxy interface. The proxy interface resides on a proxy
      node.</t>

      <t>The ICMP Extended Echo Request contains an ICMP Extension Structure
      and the ICMP Extension Structure contains an Interface Identification
      Object. The Interface Identification Object identifies the probed
      interface. The probed interface can reside on or directly connect to the proxy node.</t>

      <t>When the proxy interface receives the ICMP Extended Echo Request, the
      proxy node executes access control procedures. If access is granted, the
      proxy node determines the status of the probed interface and returns an
      ICMP Extended Echo Reply message. The ICMP Extended Echo Reply indicates
      the status of the probed interface.</t>

      <t>If the probed interface resides on the proxy node, PROBE determines
      the status of the probed interface as it would determine its <xref
      target="RFC7223">oper-status</xref>. If oper-status is equal to 'up' (1),
      PROBE reports that the probed interface is active. Otherwise, PROBE
      reports that the probed interface is inactive.</t>

      <t>If the probed interface resides on a node that is directly connected
      to the proxy node, and the probed interface appears in the <xref
      target="RFC0826"> IPv4 Address Resolution Protocol (ARP) table</xref> or
      <xref target="RFC4861">IPv6 Neighbor Cache</xref>, PROBE reports
      interface reachability. Otherwise, PROBE reports that the table entry
      does not exist.</t>

      <section title="Terminology">
        <t>This document uses the following terms:</t>

        <t><list style="symbols">
            <t>Probing interface: The interface that sends the ICMP Extended
            Echo Request.</t>

            <t>Probing node: The node upon which the probing interface
            resides.</t>

            <t>Proxy interface: The interface to which the ICMP Extended Echo
            Request message is sent.</t>

            <t>Proxy node: The node upon which the proxy interface
            resides.</t>

            <t>Probed interface: The interface whose status is being
            queried.</t>

            <t>Probed node: The node upon which the probed interface resides.
            If the proxy interface and the probed interface reside upon the
            same node, the proxy node is also the probed node. Otherwise, the
            proxy node is directly connected to the probed node.</t>
          </list></t>
      </section>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
        "OPTIONAL" in this document are to be interpreted as described in
        <xref target="RFC2119">BCP 14</xref> <xref target="RFC8174"/> when,
        and only when, they appear in all capitals, as shown here.</t>
      </section>
    </section>

    <section anchor="ExtendedEcho" title="ICMP Extended Echo Request">
      <t>The ICMP Extended Echo Request message is defined for both ICMPv4 and
      ICMPv6. Like any ICMP message, the ICMP Extended Echo Request message is
      encapsulated in an IP header. The ICMPv4 version of the Extended Echo
      Request message is encapsulated in an IPv4 header, while the ICMPv6
      version is encapsulated in an IPv6 header.</t>

      <t><xref target="ICMPEchoFIG"/> depicts the ICMP Extended Echo Request
      message.</t>

      <t><figure align="center" anchor="ICMPEchoFIG"
          title="ICMP Extended Echo Request Message">
          <artwork><![CDATA[    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Code      |          Checksum             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           Identifier          |Sequence Number|   Reserved  |L|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   ICMP Extension Structure
       ]]></artwork>
        </figure></t>

      <t>IP Header fields:</t>

      <t><list style="symbols">
          <t>Source Address:

	 The Source Address identifies the probing interface. It MUST be a valid IPv4 or IPv6 unicast address.</t>

          <t>Destination Address: The Destination Address identifies the proxy
	  interface.  It MUST be a unicast address.</t>
        </list></t>

      <t>ICMP fields:

      <list style="symbols">
          <t>Type: Extended Echo Request. The value for ICMPv4 is 42.
The value for ICMPv6 is 160.
</t>

          <t>Code: MUST be set to 0 and MUST be ignored upon receipt. </t>

          <t>Checksum: For ICMPv4, see RFC 792. For ICMPv6, see RFC 4443.</t>

          <t>Identifier: An Identifier to aid in matching Extended Echo
          Replies to Extended Echo Requests. May be 0.</t>

          <t>Sequence Number: A Sequence Number to aid in matching Extended
          Echo Replies to Extended Echo Requests. May be 0.</t>

          <t>Reserved: This field MUST be set to 0 and ignored upon
          receipt.</t>

          <t>L (local): The L-bit is set if the probed interface resides on
          the proxy node. The L-bit is clear if the probed interface is
          directly connected to the proxy node.</t>

          <t>ICMP Extension Structure: The ICMP Extension Structure identifies
          the probed interface.</t>
        </list></t>

      <t>Section 7 of <xref target="RFC4884"/> defines the ICMP Extension
      Structure. As per RFC 4884, the Extension Structure contains exactly one
      Extension Header followed by one or more objects. When applied to the
      ICMP Extended Echo Request message, the ICMP Extension Structure MUST
      contain exactly one instance of the Interface
      Identification Object (see <xref target="IntIdObj"/>).</t>

      <t>If the L-bit is set, the Interface Identification Object can identify
      the probed interface by name, index, or address. If the L-bit is clear,
      the Interface Identification Object MUST identify the probed interface
      by address.</t>

      <t>If the Interface Identification Object identifies the probed
      interface by address, that address can be a member of any address
      family. For example, an ICMPv4 Extended Echo Request message can carry
      an Interface Identification Object that identifies the probed interface
      by IPv4, IPv6, or IEEE 802 address. Likewise, an ICMPv6 Extended Echo
      Request message can carry an Interface Identification Object that
      identifies the probed interface by IPv4, IPv6, or IEEE 802 address.</t>

      <section anchor="IntIdObj" title="Interface Identification Object">
        <t>The Interface Identification Object identifies the probed interface
        by name, index, or address. Like any other ICMP Extension Object, it
        contains an Object Header and Object Payload. The Object Header
        contains the following fields:</t>

        <t><list style="symbols">
            <t>Class-Num: Interface Identification Object. The value is 3.</t>

            <t>C-Type: Values are (1) Identifies Interface by Name, (2)
            Identifies Interface by Index, and (3) Identifies Interface by
            Address.</t>

            <t>Length: Length of the object, measured in octets, including the
            Object Header and Object Payload.</t>
          </list></t>

        <t>If the Interface Identification Object identifies the probed
        interface by name, the Object Payload MUST be the interface name as
        defined in <xref target="RFC7223"/>. If the Object Payload would not otherwise
        terminate on a 32-bit boundary, it MUST be padded with ASCII NULL
        characters.</t>

        <t>If the Interface Identification Object identifies the probed
        interface by index, the length is equal to 8 and the payload contains
        the if-index <xref target="RFC7223"/>.</t>

        <t>If the Interface Identification Object identifies the probed
        interface by address, the payload is as depicted in <xref
        target="addrFig"/>.</t>

        <figure align="center" anchor="addrFig"
                title="Interface Identification Object - C-Type 3 Payload">
          <artwork><![CDATA[ 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            AFI                | Address Length|   Reserved    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                Address   ....
]]></artwork>
        </figure>

        <t>Payload fields are defined as follows:</t>

        <t><list style="symbols">
            <t>Address Family Identifier (AFI): This 16-bit field identifies
            the type of address represented by the Address field. All values
            found in the IANA registry of Address Family Numbers (available
            from
            &lt;https://www.iana.org/assignments/address-family-numbers&gt;)
            are valid in this field.</t>

            <t>Address Length: Number of significant bytes contained by the
            Address field. (The Address field contains significant bytes and
            padding bytes.)</t>

            <t>Reserved: This field MUST be set to 0 and ignored upon
            receipt.</t>

            <t>Address: This variable-length field represents an address
            associated with the probed interface. If the address field would
            not otherwise terminate on a 32-bit boundary, it MUST be padded
            with zeroes.</t>
          </list></t>
      </section>
    </section>

    <section anchor="ExtenedEchoReply" title="ICMP Extended Echo Reply">
      <t>The ICMP Extended Echo Reply message is defined for both ICMPv4 and
      ICMPv6. Like any ICMP message, the ICMP Extended Echo Reply message is
      encapsulated in an IP header. The ICMPv4 version of the Extended Echo
      Reply message is encapsulated in an IPv4 header, while the ICMPv6
      version is encapsulated in an IPv6 header.</t>

      <t><xref target="ICMPEchoReplyFIG"/> depicts the ICMP Extended Echo
      Reply message.</t>

      <t><figure align="center" anchor="ICMPEchoReplyFIG"
          title="ICMP Extended Echo Reply Message">
          <artwork><![CDATA[    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Code      |          Checksum             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           Identifier          |Sequence Number|State|Res|A|4|6|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 ]]></artwork>
        </figure></t>

      <t>IP Header fields:</t>

      <t><list style="symbols">
          <t>Source Address: Copied from the Destination Address field of the
          invoking Extended Echo Request message.</t>

          <t>Destination Address: Copied from the Source Address field of the
          invoking Extended Echo Request message.</t>
        </list></t>

      <t>ICMP fields:<list style="symbols">
          <t>Type: Extended Echo Reply. The value for ICMPv4 is 43. 
The value for ICMPv6 is 161.
</t>

          <t>Code: Values are (0) No Error, (1) Malformed Query, (2) No Such Interface,
          (3) No Such Table Entry, and (4) Multiple Interfaces Satisfy Query.</t>

          <t>Checksum: For ICMPv4, see RFC 792. For ICMPv6, see RFC 4443.</t>

          <t>Identifier: Copied from the Identifier field of the invoking
          Extended Echo Request packet.</t>

          <t>Sequence Number: Copied from the Sequence Number field of the
          invoking Extended Echo Request packet.</t>

          <t>State: If Code is not equal to 0, this field MUST be set to 0
          and ignored upon receipt. Likewise, if the probed interface resides
          upon the proxy node, this field MUST be set to 0 and ignored upon
          receipt. Otherwise, this field reflects the state of the ARP table
          or Neighbor Cache entry associated with the probed interface. Values
          are (0) Reserved, (1) Incomplete, (2) Reachable, (3) Stale, (4) Delay,
          (5) Probe, and (6) Failed.</t>

          <t>Res: This field MUST be set to 0 and ignored upon receipt.</t>

          <t>A (Active): The A-bit is set if the Code is equal to 0, the
          probed interface resides on the proxy node, and the probed interface
          is active. Otherwise, the A-bit is clear.</t>

          <t>4 (IPv4): The 4-bit is set if the A-bit is also set and IPv4 is
          running on the probed interface. Otherwise, the 4-bit is clear.</t>

          <t>6 (IPv6): The 6-bit is set if the A-bit is also set and IPv6 is
          running on the probed interface. Otherwise, the 6-bit is clear.</t>
        </list></t>
    </section>

    <section anchor="proc" title="ICMP Message Processing">
      <t>When a node receives an ICMP Extended Echo Request message and any of
      the following conditions apply, the node MUST silently discard the
      incoming message:</t>

      <t><list style="symbols">
          <t>The node does not recognize ICMP Extended Echo Request
          messages.</t>

          <t>The node has not explicitly enabled ICMP Extended Echo
          functionality.</t>

          <t>The incoming ICMP Extend Echo Request carries a Source Address
          that is not explicitly authorized for the L-bit setting of the incoming ICMP Extended
          Echo Request.</t>

          <t>The incoming ICMP Extend Echo Request carries a Source Address
          that is not explicitly authorized for the incoming ICMP Extended
          Echo Request type (i.e., by ifName, by IfIndex, or by Address).</t>

          <t>The Source Address of the incoming message is not a unicast
          address.</t>

	  <t>The Destination Address of the incoming message is a multicast
	  address.</t>
        </list></t>

      <t>Otherwise, when a node receives an ICMPv4 Extended Echo Request, it
      MUST format an ICMP Extended Echo Reply as follows:<list style="symbols">

          <t>Don't Fragment (DF) flag is 1</t>

          <t>More Fragments flag is 0</t>

          <t>Fragment Offset is 0</t>

          <t>TTL is 255</t>

          <t>Protocol is ICMP</t>
        </list>When a node receives an ICMPv6 Extended Echo Request, it MUST
      format an ICMPv6 Extended Echo Reply as follows:<list style="symbols">
          <t>Hop Limit is 255</t>

          <t>Next Header is ICMPv6</t>
        </list>
	In either case, the responding node MUST do the following:<list style="symbols">
          <t>Copy the Source Address from the Extended Echo Request message to
          the Destination Address of the Extended Echo Reply.</t>

          <t>Copy the Destination Address from the Extended Echo Request
          message to the Source Address of the Extended Echo Reply.</t>

          <t>Set the DiffServ codepoint to <xref
          target="RFC4594">CS0</xref>.</t>

          <t>Set the ICMP Type to Extended Echo Reply.</t>

          <t>Copy the Identifier from the Extended Echo Request message to the
          Extended Echo Reply.</t>

          <t>Copy the Sequence Number from the Extended Echo Request message
          to the Extended Echo Reply.</t>

          <t>Set the Code field as described in <xref target="code"/>.</t>

          <t>Set the State field to 0.</t>

          <t>Clear the A-bit, the 4-bit, and the 6-bit.</t>

	  <t>If (1) the Code Field is equal to (0) No Error, (2) the L-bit is
	  set, and (3) the probed interface is active, set the A-bit.  Also,
	  set the 4-bit and the 6-bit as appropriate.</t>

          <t>If the Code field is equal to (0) No Error and the L-bit is
          clear, then set the State field to reflect the state of the ARP table or
          Neighbor Cache entry that represents the probed interface.</t>

          <t>Set the Checksum appropriately.</t>

          <t>Forward the ICMP Extended Echo Reply to its destination.</t>
        </list></t>

      <section anchor="code" title="Code Field Processing">
        <t>The Code field MUST be set to (1) Malformed Query if any of the
        following conditions apply:<list style="symbols">
            <t>The ICMP Extended Echo Request does not include an ICMP
            Extension Structure.</t>

            <t>The ICMP Extension Structure does not include exactly one
            Interface Identification Object.</t>

            <t>The L-bit is clear and the Interface Identification Object
            identifies the probed interface by ifName or ifIndex.</t>

            <t>The query is otherwise malformed.</t>
          </list>The Code field MUST be set to (2) No Such Interface if the
        L-bit is set and the ICMP Extension Structure does not identify an
        interface that resides on the proxy node.</t>

        <t>The Code field MUST be set to (3) No Such Table Entry if the L-bit
        is clear and the address found in the Interface Identification Object
        does not appear in the IPv4 Address Resolution Protocol (ARP) table or
        the IPv6 Neighbor Cache.</t>

        <t>The Code field MUST be set to (4) Multiple Interfaces Satisfy Query
        if any of the following conditions apply:</t>

        <t><list style="symbols">
            <t>The L-bit is set and the ICMP Extension Structure identifies
            more than one interface that resides in the proxy node.</t>

            <t>The L-bit is clear and the address found in the Interface
            Identification Object maps to multiple IPv4 ARP or IPv6 Neighbor
            Cache entries.</t>
          </list>Otherwise, the Code field MUST be set to (0) No Error.</t>
      </section>
    </section>

    <section anchor="usecase" title="Use Cases">
      <t>In the scenarios listed below, network operators can use PROBE to
      determine the status of a probed interface but cannot use PING for the
      same purpose. In all scenarios, assume bidirectional connectivity
      between the probing and proxy interfaces. However, bidirectional
      connectivity between the probing and probed interfaces is lacking.</t>

      <t><list style="symbols">
          <t>The probed interface is unnumbered.</t>

          <t>The probing and probed interfaces are not directly connected to
          one another. The probed interface has an IPv6 link-local address
          but does not have a more globally scoped address.</t>

          <t>The probing interface runs IPv4 only while the probed interface
          runs IPv6 only.</t>

          <t>The probing interface runs IPv6 only while the probed interface
          runs IPv4 only.</t>

          <t>For lack of a route, the probing node cannot reach the probed
          interface.</t>
        </list></t>
    </section>

    <section title="Updates to RFC 4884">
      <t>Section 4.6 of <xref target="RFC4884"/> provides a list of extensible ICMP messages
      (i.e., messages that can carry the ICMP Extension Structure). This
      document adds the ICMP Extended Echo Request message and the ICMP
      Extended Echo Reply message to that list.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">

      <t>IANA has performed the following actions:

      <list style="symbols">
          <t>Added the following to the "ICMP Type Numbers" registry:
<list style="empty">
  <t>42 Extended Echo Request</t>
</list>
<vspace blankLines="1"/>
Added the following to the "Type 42 - Extended Echo Request" subregistry: 
          <list style="empty"><t>(0) No Error </t></list></t>

          <t>Added the following to the "ICMPv6 'type' Numbers" registry:
<list style="empty">
  <t>160 Extended Echo Request
          <vspace blankLines="1"/>As ICMPv6 distinguishes between informational and error
          messages, and this is an informational message, the value has been
          assigned from the range 128-255.</t>
</list>
<vspace blankLines="1"/>
Added the following to the "Type 160 - Extended Echo Request" subregistry: 
          <list style="empty"><t>(0) No Error </t></list></t>

          <t>Added the following to the "ICMP Type Numbers" registry:
<list style="empty">
  <t>43 Extended Echo Reply</t>
</list>
<vspace blankLines="1"/> 
Added the following to the "Type 43 - Extended Echo Reply" subregistry: 
<list style="empty">
<?rfc subcompact="yes"?>
<t>(0) No Error</t>
<t>(1) Malformed Query</t>
<t>(2) No Such Interface</t> 
<t>(3) No Such Table Entry</t>
<t>(4) Multiple Interfaces Satisfy Query</t>
<?rfc subcompact="no"?>
</list></t>

          <t>Added the following to the "ICMPv6 'type'
	  Numbers" registry:
<list style="empty">
  <t>161 Extended Echo Reply
<vspace blankLines="1"/>
As
	  ICMPv6 distinguishes between informational and error messages, and
	  this is an informational message, the value has been assigned from
	  the range 128-255.</t>
</list>
<vspace blankLines="1"/>
Added the following to the "Type 161 - Extended Echo Reply" subregistry: 
<list style="empty">
<?rfc subcompact="yes"?>
<t>(0) No Error</t>
<t>(1) Malformed Query</t>
<t>(2) No Such Interface</t>
<t>(3) No Such Table Entry</t>
<t>(4) Multiple Interfaces Satisfy Query</t>
<?rfc subcompact="no"?>
</list>
	  </t>

          <t>Added the following to the "ICMP Extension Object Classes and Class
	  Sub-types" registry: 
<list style="empty">
  <t>(3) Interface Identification Object</t>
</list>
<vspace blankLines="1"/>
Added the following C-types to the "Sub-types -
Class 3 - Interface Identification Object" subregistry: 
<list style="empty">
<?rfc subcompact="yes"?>
<t>(0) Reserved</t>
<t>(1) Identifies Interface by Name</t>
<t>(2) Identifies Interface by Index</t>
<t>(3) Identifies Interface by Address</t>
<?rfc subcompact="no"?>
</list>
<vspace blankLines="1"/>
C-Type values are assigned on a First Come First Serve (FCFS) basis with a
range of 0-255.</t> 
        </list></t>

      <t>All codes mentioned above are assigned on an FCFS basis with a range of 0-255.</t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>The following are legitimate uses of PROBE:</t>

      <t><list style="symbols">
          <t>to determine the operational status of an interface.</t>

          <t>to determine which protocols (e.g., IPv4 or IPv6) are active on an
          interface.</t>
        </list></t>

      <t>However, malicious parties can use PROBE to obtain additional
      information. For example, a malicious party can use PROBE to discover
      interface names. Having discovered an interface name, the malicious
      party may be able to infer additional information. Additional
      information may include:</t>

      <t><list style="symbols">
          <t>interface bandwidth</t>

          <t>the type of device that supports the interface (e.g., vendor
          identity)</t>

          <t>the operating system version that the above-mentioned device
          executes</t>
        </list></t>

      <t>Understanding this risk, network operators establish policies that
      restrict access to ICMP Extended Echo functionality. In order to enforce
      these policies, nodes that support ICMP Extended Echo functionality MUST
      support the following configuration options:</t>

      <t><list style="symbols">
          <t>Enable/disable ICMP Extended Echo functionality. By default, ICMP
          Extend Echo functionality is disabled.</t>

          <t>Define enabled L-bit settings.  By default, the option to set the L-bit is enabled and the option to clear the L-bit is disabled.</t>

          <t>Define enabled query types (i.e., by name, by index, or by address);
          by default, all query types are disabled.</t>

          <t>For each enabled query type, define the prefixes from which ICMP
          Extended Echo Request messages are permitted.</t>

          <t>For each interface, determine whether ICMP Echo Request messages
          are accepted.</t>
        </list></t>

      <t>When a node receives an ICMP Extended Echo Request message that it is
      not configured to support, it MUST silently discard the message. See
      <xref target="proc"/> for details.</t>

      <t>PROBE must not leak information about one Virtual Private Network
      (VPN) into another. Therefore, when a node receives an ICMP Extended
      Echo Request and the proxy interface is in a different VPN than the
      probed interface, the node MUST return an ICMP Extended Echo Reply with
      error code equal to (2) No Such Interface.</t>

      <t>In order to protect local resources, implementations SHOULD
      rate-limit incoming ICMP Extended Echo Request messages.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include='reference.RFC.4884'?>

      <?rfc include='reference.RFC.0826'?>

      <?rfc include='reference.RFC.0792'?>

      <?rfc include='reference.RFC.4861'?>

      <?rfc include='reference.RFC.7223'?>

      <?rfc include='reference.RFC.4443'?>

      <?rfc include='reference.RFC.8174'?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.2151'?>

      <?rfc ?>

      <?rfc ?>

      <?rfc ?>

      <?rfc ?>

      <?rfc ?>

      <?rfc include='reference.RFC.4594'?>

      <?rfc ?>

      <?rfc ?>

      <?rfc ?>
    </references>

    <section anchor="application" title="The PROBE Application">
      <t>The PROBE application accepts input parameters, sets a counter, and
      enters a loop to be exited when the counter is equal to 0. On each
      iteration of the loop, PROBE emits an ICMP Extended Echo Request,
      decrements the counter, sets a timer, and waits. The ICMP Extended Echo
      Request includes an Identifier and a Sequence Number.</t>

      <t>If an ICMP Extended Echo Reply carrying the same Identifier and
      Sequence Number arrives, PROBE relays information returned by that
      message to its user. However, on each iteration of the loop, PROBE waits
      for the timer to expire regardless of whether an Extended Echo Reply
      message arrives.</t>

      <t>PROBE accepts the following parameters:</t>

      <t><list style="symbols">
          <t>Count</t>

          <t>Wait</t>

          <t>Probing Interface Address</t>

          <t>Hop Count</t>

          <t>Proxy Interface Address</t>

          <t>Local</t>

          <t>Probed Interface Identifier</t>
        </list></t>

      <t>Count is a positive integer whose default value is 3. Count
      determines the number of times that PROBE iterates through the
      above-mentioned loop.</t>

      <t>Wait is a positive integer whose minimum and default values are 1.
      Wait determines the duration of the above-mentioned timer, measured in
      seconds.</t>

      <t>Probing Interface Address specifies the Source Address of the ICMP
      Extended Echo Request. The Probing Interface Address MUST be a unicast
      address and MUST identify an interface that resides on the probing
      node.</t>

      <t>The Proxy Interface Address identifies the interface to which the
      ICMP Extended Echo Request message is sent.  It must be an IPv4 or
      IPv6 unicast address. If it is an IPv4 address, PROBE emits an ICMPv4 message. If it
      is an IPv6 address, PROBE emits an ICMPv6 message.</t>

      <t>Local is a boolean value. It is TRUE if the proxy and probed
      interfaces both reside on the same node. Otherwise, it is FALSE.</t>

      <t>The Probed Interface Identifier identifies the probed interface. It
      is one of the following:</t>

      <t><list style="symbols">
          <t>an interface name;</t>

          <t>an address from any address family (e.g., IPv4, IPv6, IEEE 802,
          48-bit MAC, or 64-bit MAC); or</t>

          <t>an if-index.</t>
        </list></t>

      <t>If the Probed Interface Identifier is an address, it does not need to
      be of the same address family as the proxy interface address. For
      example, PROBE accepts an IPv4 Proxy Interface Address and an IPv6
      Probed Interface Identifier.</t>
    </section>

    <section anchor="Acknowledgements" numbered="no" title="Acknowledgments">
      <t>Thanks to Sowmini Varadhan, Jeff Haas, Carlos Pignataro, Jonathan
      Looney, Dave Thaler, Mikio Hara, Joel Halpern, Yaron Sheffer, Stefan
      Winter, Jean-Michel Combes, Amanda Barber, and Joe Touch for their
      thoughtful review of this document.</t>
    </section>
  </back>
</rfc>
