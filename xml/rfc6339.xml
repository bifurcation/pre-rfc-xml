<?xml version="1.0" encoding="US-ASCII" ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2743 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2743.xml'>
<!ENTITY RFC2744 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2744.xml'>
<!ENTITY RFC5587 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5587.xml'>
<!ENTITY RFC5801 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5801.xml'>
]>

<?rfc rfcedstyle="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc sortrefs="yes" ?>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>

<rfc number="6339" category="std" submissionType="IETF" consensus="yes" ipr="trust200902">

  <front>

    <title abbrev="GSS-API Capsulate and OID Comparison">
      Context Token Encapsulate/Decapsulate and OID Comparison
      Functions for the Generic Security Service Application Program
      Interface (GSS-API)
    </title>

    <author initials="S." surname="Josefsson"
	    fullname="Simon Josefsson">
      <organization>SJD AB</organization>
      <address>
	<postal>
	  <street>Hagagatan 24</street>
	  <city>Stockholm</city>
	  <code>113 47</code>
	  <country>SE</country>
	</postal>
	<email>simon@josefsson.org</email>
	<uri>http://josefsson.org/</uri>
      </address>
    </author>
    <author initials='L.' surname="Hornquist Astrand"
	    fullname='Love Hornquist Astrand'>
      <organization>Apple, Inc.</organization>
      <address>
        <email>lha@apple.com</email>
      </address>
    </author>

    <date month="August" year="2011"/>


<keyword>example</keyword>

    <abstract>

      <t>This document describes three abstract Generic Security
      Service Application Program Interface (GSS-API) interfaces used
      to encapsulate/decapsulate context tokens and compare OIDs.  This
      document also specifies C bindings for the abstract
      interfaces.</t>

    </abstract>

  </front>

  <middle>

    <section anchor="intro"
	     title="Introduction">

      <t>The Generic Security Service Application Program Interface
      (GSS-API) <xref target="RFC2743"/> is a framework that provides
      security services to applications using a variety of
      authentication mechanisms.  There are widely implemented C
      bindings <xref target="RFC2744"/> for the abstract
      interface.</t>

      <t>For initial context tokens, a mechanism-independent token
      format may be used (see Section 3.1 of <xref target="RFC2743"/>).
      Some protocols, e.g., Simple Authentication and Security Layer (SASL) GS2 <xref target="RFC5801"/>, need
      the ability to add and remove this token header, which contains
      some ASN.1 tags, a length, and the mechanism OID to and from
      context tokens.  This document adds two GSS-API interfaces
      (GSS_Encapsulate_token and GSS_Decapsulate_token) so that
      GSS-API libraries can provide this functionality.</t>

      <t>Being able to compare OIDs is useful, for example, when
      validating that a negotiated mechanism matches the requested
      one.  This document adds one GSS-API interface (GSS_OID_equal)
      for this purpose.</t>

      <t>Text from this specification can be used
      as implementation documentation, and for this reason, Sections
      <xref target="GSS_Encapsulate_token" format="counter" />, <xref
target="GSS_Decapsulate_token" format="counter" />, <xref
target="GSS_OID_equal" format="counter" />, <xref
target="test-vector" format="counter"/>, and <xref target="security" format="counter"/> should be considered code components.
</t>

    </section>

    <section title="Conventions Used in This Document">

      <t>The document uses terms from, and is structured in a similar
      way as, <xref target="RFC2743"/> and <xref target="RFC2744"/>.
      The normative reference to <xref target="RFC5587"/> is for the C
      types "gss_const_buffer_t" and "gss_const_OID"; nothing else
      from that document is required to implement this document.</t>

    </section>
	
    <section anchor="GSS_Encapsulate_token"
	     title="GSS_Encapsulate_token Call">

      <t>
	Inputs:
	
	<list style="symbols">
	  <t>
	    input_token OCTET STRING -- buffer with token data to
            encapsulate
	  </t>
	  <t>
	    token_oid OBJECT IDENTIFIER -- object identifier of mechanism
	                                      for the token
	  </t>
	</list>
      </t>
      
      <t>
   Outputs:

   <list style="symbols">
     <t>
       major_status INTEGER
     </t>
     <t>
       output_token OCTET STRING -- Encapsulated token data; caller
       must release with GSS_Release_buffer()
     </t>
   </list>
      </t>
      
      <t>
	Return major_status codes:
	
	<list style="symbols">
	  <t>
	    GSS_S_COMPLETE indicates that completion was successful and that
	    output parameters hold correct information.
	  </t>
	  <t>
	    GSS_S_FAILURE indicates that encapsulation failed for
	    reasons unspecified at the GSS-API level.
	  </t>
	</list>
      </t>
      
      <t>
	GSS_Encapsulate_token() is used to add the mechanism-independent
	token header to GSS-API context token data.
      </t>

      <section anchor="gss_encapsulate_token"
	       title="gss_encapsulate_token">

	<figure>
	  <artwork>
OM_uint32 gss_encapsulate_token (
  gss_const_buffer_t input_token,
  gss_const_OID token_oid,
  gss_buffer_t output_token)
	  </artwork>
	</figure>

<t>
   Purpose:
</t>

<t>
   Add the mechanism-independent token header to GSS-API context
   token data.
</t>



<t>
   Parameters:

   <list style="hanging" hangIndent="23">
     
     <t hangText="input_token">      buffer, opaque, read
<vspace />
       Buffer with GSS-API context token data.
     </t>
     <t hangText="token_oid">        Object ID, read
<vspace />
       Object identifier of token.
     </t>
     <t hangText="output_token">     buffer, opaque, modify
<vspace />
       Encapsulated token data; caller must release with
       gss_release_buffer().
     </t>
   </list>
</t>

<t>
  <list style="hanging" hangIndent="23">
    
    <t hangText="Function values:">        GSS status codes
    </t>
    <t hangText="GSS_S_COMPLETE">         Indicates that completion was successful and
      that output parameters hold correct
      information.
    </t>
    <t hangText="GSS_S_FAILURE">          Indicates that encapsulation failed for
      reasons unspecified at the GSS-API level.
    </t>
  </list>
</t>

      </section>

    </section>

    <section anchor="GSS_Decapsulate_token"
	     title="GSS_Decapsulate_token Call">

<t>
  Inputs:
  
  <list style="symbols">
    <t>
      input_token OCTET STRING -- buffer with token to decapsulate
    </t>
    <t>
      token_oid OBJECT IDENTIFIER -- expected object identifier
      of token
    </t>
  </list>
</t>

<t>
  Outputs:
  
  <list style="symbols">
    <t>
      major_status INTEGER
    </t>
    <t>
      output_token OCTET STRING -- Decapsulated token data; caller
      must release with GSS_Release_buffer()
    </t>
  </list>
</t>

<t>
  Return major_status codes:
  
  <list style="symbols">
    <t>
      GSS_S_COMPLETE indicates that completion was successful and that
      output parameters hold correct information.
    </t>
    <t>
      GSS_S_DEFECTIVE_TOKEN means that the token failed
      consistency checks (e.g., OID mismatch or ASN.1 DER length
      errors).
    </t>
    <t>
      GSS_S_FAILURE indicates that decapsulation failed for
      reasons unspecified at the GSS-API level.
    </t>
  </list>
</t>

<t>
GSS_Decapsulate_token() is used to remove the mechanism-independent 
token header from an initial GSS-API context token.
</t>

      <section anchor="gss_decapsulate_token"
	       title="gss_decapsulate_token">

	<figure>
	  <artwork>
OM_uint32
gss_decapsulate_token (
  gss_const_buffer_t input_token,
  gss_const_OID token_oid,
  gss_buffer_t output_token)
	  </artwork>
	</figure>

	<t>
	  Purpose:
	</t>
	<t>
	  Remove the mechanism-independent token header from an initial
	  GSS-API context token.
	</t>
	
	<t>
	  Parameters:
	  <list style="hanging" hangIndent="23">
	    
	    <t hangText="input_token">      buffer, opaque, read
	      <vspace />
              Buffer with GSS-API context token.
	    </t>
	    <t hangText="token_oid">        Object ID, read
	      <vspace />
              Expected object identifier of token.
	    </t>
	    <t hangText="output_token">     buffer, opaque, modify
	      <vspace />
              Decapsulated token data; caller must release with
              gss_release_buffer().
	    </t>
	  </list>
	</t>
	    
	<t>
	  <list style="hanging" hangIndent="23">
	    <t hangText="Function values:">        GSS status codes
	    </t>
	    <t hangText="GSS_S_COMPLETE">         Indicates that completion was
successful and
              that output parameters hold correct
              information.
	    </t>
	    <t hangText="GSS_S_DEFECTIVE_TOKEN">  Means that the token failed consistency
              checks (e.g., OID mismatch or ASN.1 DER
              length errors).
	    </t>
	    <t hangText="GSS_S_FAILURE">          Indicates that decapsulation failed for
              reasons unspecified at the GSS-API level.
	    </t>
	  </list>
	</t>
      </section>

    </section>

    <section anchor="GSS_OID_equal"
	     title="GSS_OID_equal Call">

      <t>
	Inputs:
	
	<list style="symbols">
	  <t>
	    first_oid OBJECT IDENTIFIER -- first object identifier
            to compare
	  </t>
	  <t>
	    second_oid OBJECT IDENTIFIER -- second object identifier
            to compare
	  </t>
	</list>
      </t>

      <t>
	Return codes:
	
	<list style="symbols">
	  <t>
	    non-0 when neither OID is GSS_C_NO_OID and the two OIDs
	    are equal.
	  </t>
	  <t>
	    0 when the two OIDs are not identical or either OID is
	    equal to GSS_C_NO_OID.
	  </t>
	</list>
      </t>
      
      <t>
	GSS_OID_equal() is used to add compare two OIDs for equality.  The
	value GSS_C_NO_OID will not match any OID, including GSS_C_NO_OID
	itself.
      </t>

      <section anchor="gss_oid_equal"
	       title="gss_oid_equal">

	<figure>
	  <artwork>
extern int
gss_oid_equal (
  gss_const_OID first_oid,
  gss_const_OID second_oid
)
	  </artwork>
	</figure>

	<t>
	  Purpose:
	</t>
	<t>
	  Compare two OIDs for equality.  The value GSS_C_NO_OID will not
	  match any OID, including GSS_C_NO_OID itself.
	</t>
	
	<t>
	  Parameters:
	  <list style="hanging" hangIndent="23">
	    <t hangText="first_oid">       Object ID, read
	      <vspace />
              First object identifier to compare.
	    </t>
	    <t hangText="second_oid">       Object ID, read
	      <vspace />
              Second object identifier to compare.
	    </t>
	  </list>
	</t>
	
	<t>
	  <list style="hanging" hangIndent="23">
	    <t hangText="Function values:">        GSS status codes
	    </t>
	    <t hangText="non-0">                  Neither OID is GSS_C_NO_OID, and the
              two OIDs are equal.
	    </t>
	    <t hangText="0">                      The two OIDs are not identical, or
              either OID is equal to GSS_C_NO_OID.
	    </t>
	  </list>
	</t>
      </section>

    </section>

    <section anchor="test-vector"
	     title="Test Vector">

      <t>For the GSS_Encapsulate_token function, if the "input_token"
      buffer is the 3-byte octet sequence "foo" and the "token_oid"
      OID is 1.2.840.113554.1.2.2, which encoded corresponds to the 9&nbhy;byte-long octet sequence (using C notation)
      "\x2a\x86\x48\x86\xf7\x12\x01\x02\x02", the output should be the
      16&nbhy;byte&nbhy;long octet sequence (again in C notation)
      "\x60\x0e\x06\x09\x2a\x86\x48\x86\xf7\x12\x01\x02\x02\x66\x6f\x6f".
      These values may also be used to test the GSS_Decapsulate_token
      interface.</t>

    </section>

    <section anchor="ack"
	     title="Acknowledgements">

      <t>Greg Hudson pointed out the 'const' problem with the C
      bindings in earlier versions of this document, and Luke Howard
      suggested to resolve it by using the <xref target="RFC5587" /> types.  Stephen
      Farrell suggested several editorial improvements and the
      security consideration regarding absent security features of the
      encapsulation function.  Chris Lonvick suggested some
      improvements.</t>

    </section>


    <section anchor="security"
	     title="Security Considerations">

      <t>The security considerations of the base GSS-API specification
      (<xref target="RFC2743"/>) and the base C bindings (<xref
      target="RFC2744"/>) are inherited.</t>

      <t>Encapsulation of data does not provide any kind of integrity
      or confidentiality.</t>

      <t>Implementations need to treat input as potentially
      untrustworthy for purposes of dereferencing memory objects to
      avoid security vulnerabilities.  In particular, ASN.1 DER length
      fields are a common source of mistakes.</t>

    </section>

  </middle>

  <back>

    <references title="Normative References">

      &RFC2743;
      &RFC2744;
      &RFC5587;

    </references>

    <references title="Informative References">

      &RFC5801;

    </references>

  </back>

</rfc>
