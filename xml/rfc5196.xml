<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<rfc number="5196" category="std" >

  <?rfc rfcedstyle='yes'?>
  <?rfc subcompact='no'?>
  <?rfc toc='yes'?>
  <?rfc symrefs='yes'?>
  <?rfc sortrefs='yes'?>

  <front>
    <title abbrev="User Agent Capability Presence Status">Session Initiation
    Protocol (SIP) User Agent Capability Extension to Presence Information
    Data Format (PIDF)</title>

    <author fullname="Mikko Lonnfors" initials="M." surname="Lonnfors">
      <organization>Nokia</organization>

      <address>
        <postal>
          <street>P.O. Box 321</street>

          <city>Helsinki</city>

          <country>Finland</country>
        </postal>

        <phone>+358 71 8008000</phone>

        <email>mikko.lonnfors@nokia.com</email>
      </address>
    </author>

    <author fullname="Krisztian Kiss" initials="K." surname="Kiss">
      <organization>Nokia</organization>

      <address>
        <postal>
          <street>313 Fairchild Dr</street>

          <city>Mountain View, CA 94043</city>

          <country>US</country>
        </postal>

        <phone>+1 650 391 5969</phone>

        <email>krisztian.kiss@nokia.com</email>
      </address>
    </author>

    <date month="July" year="2008" />

    <area>RAI</area>

    <workgroup>SIMPLE WG</workgroup>

<keyword>prescaps</keyword>
<keyword>PIDF</keyword>
<keyword>SIP presence</keyword>
<keyword>SIMPLE</keyword>
<keyword>calleecaps</keyword>
<keyword>servcaps</keyword>
<keyword>devcaps</keyword>

    <abstract>
      <t>Presence Information Data Format (PIDF) defines a common presence data
      format for Common Profile for Presence (CPP) compliant presence
      protocols. This memo defines a PIDF extension to represent SIP User Agent
      capabilities.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="introduction" title="Introduction" toc="default">
      <t>Common Profile for Presence (CPP) <xref format="default" pageno="false"
      target="RFC3859"></xref> and Common Profile for Instant Messaging (CPIM)
      <xref format="default" pageno="false" target="RFC3860"></xref> define
      common operations and formats that all presence and instant messaging
      services must agree upon so that basic interoperability is
      possible. The actual base format for the presence is defined in the
      Presence Information Document Format (PIDF) <xref format="default"
      pageno="false" target="RFC3863"></xref>. The PIDF has been designed to
      reduce the need for gatewaying and to allow end-to-end security of
      presence information. It has taken a very minimalistic approach to 
	support such operations. In order to make the PIDF usable by different 
	presence applications, these applications usually must extend the basic 
	PIDF by standard XML mechanisms as defined in PIDF <xref format="default"
      pageno="false" target="RFC3863"></xref>.</t>

      <t>The aim of this memo is to introduce a SIP-specific extension
      mechanism to the PIDF that conveys the same SIP media feature tags as
      described in <xref format="default" pageno="false"
      target="RFC3840"></xref>. With this extension, presence applications
      based on SIP can have richer and more usable presence information compared 
	to the baseline PIDF.</t>

      <section title="Motivation" toc="default">
        <t>The PIDF <xref format="default" pageno="false"
        target="RFC3863"></xref> defines a &lt;contact&gt; element that may
        appear once inside every &lt;tuple&gt; element. The content of the
        &lt;contact&gt; element encodes the CONTACT ADDRESS and CONTACT MEANS
        as defined in <xref format="default" pageno="false"
        target="RFC2778"></xref>. The &lt;contact&gt; element is defined to be
        a URI of any scheme. In some implementations, the URI scheme can
        uniquely identify the service the tuple intends to describe (e.g., im:
        URI scheme usually represents Instant Messaging service). However,
        this may not be the case in all implementations. For example in SIP, a
        SIP URI scheme can represent different kinds of services. A SIP URI
        scheme can be used to contact voice services, video services, or
        messaging services. If it is not known by other means, it might be
        hard for applications processing the presence information containing only 
	  a SIP URI contact addresses to know what particular service the tuple 
	  intends to describe. Also, watchers receiving presence information would 
	  probably benefit from getting more descriptive information about what 
	  particular communication means or services are supported by the 
	  presentity.</t>

        <t>The User Agent Capabilities extension <xref format="default"
        pageno="false" target="RFC3840"></xref> defines a set of extensions
        that allow user agents to express preferences about request handling
        in SIP servers. The same information can provide value to watchers as well 
	  so that they can make more rational decisions on how a presentity should be 
	  contacted if a presence document contained this information.</t>
      </section>

      <section anchor="scope" title="Scope" toc="default">
        <t>This document defines a PIDF extension, which enables SIP presence
        implementations to represent User Agent Capabilities <xref
        format="default" pageno="false" target="RFC3840"></xref> within
        presence information.</t>

        <t>This extension does not replace media negotiation mechanisms
        defined for SIP (e.g., SDP <xref format="default" pageno="false"
        target="RFC4566"></xref>). The purpose of this extension is for
        a presentity to give watchers hints about the presentity's
        preferences, willingness, and capabilities to communicate before
        watchers initiate communication with the presentity.</t>
      </section>
    </section>

    <section anchor="Conventions" title="Conventions" toc="default">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref format="default"
      pageno="false" target="RFC2119"></xref>.</t>

      <t>This memo makes use of the vocabulary defined in <xref
      format="default" pageno="false" target="RFC2778"></xref> and <xref
      format="default" pageno="false" target="RFC3863"></xref>.</t>
    </section>

    <section anchor="Support-for-callee-capabilities"
             title="Extension for &quot;Indicating User Agent Capabilities in the Session Initiation Protocol (SIP)&quot; in PIDF Documents"
             toc="default">
      <t>This section presents the extension elements, attributes, their
      values, and semantics. This section also describes how this extension
      can be further extended.</t>

      <t>This extension is intended to be used within the PIDF <xref
      format="default" pageno="false" target="RFC3863"></xref> and that
      particular usage is described here. This extension may also be used with
      other XML documents if appropriate.</t>

      <section title="Overview of Operation" toc="default">
        <t>This document defines how the features presented in <xref
        format="default" pageno="false" target="RFC3840"></xref> can be
        provided as part of presence information. Additionally, this memo 
	  includes the "type" feature tag <xref format="default" pageno="false"
        target="RFC2913"></xref>, "message" media type feature tag <xref
        format="default" pageno="false" target="RFC4569"></xref>, and the
        "language" feature tag <xref format="default" pageno="false"
        target="RFC4646"></xref> definitions.  Adding these features
        to the PIDF means mapping them to an XML formatted structure.</t>

        <t>The presence data model <xref format="default" pageno="false"
        target="RFC4479"></xref> defines presence information consisting of three
        types of data elements: person, service, and device. This memo follows
        this model so that one XML extension is defined to describe device
        capabilities and another one to describe service capabilities.</t>

        <t>The namespace URIs for elements defined by this document are URNs
        using the namespace identifier 'ietf' defined by <xref
        format="default" pageno="false" target="RFC2648"></xref> and extended
        by <xref format="default" pageno="false" target="RFC3688"></xref>.</t>

        <t>When these extension namespaces are congregated with the PIDF
        document, the combined document MUST follow the same general
        formatting rules as specified in Section 4.1 of <xref format="default"
        pageno="false" target="RFC3863"></xref>.</t>
      </section>

      <section title="Service capabilities" toc="default">
        <t>Elements belonging to service capabilities are used to describe
        dynamic characteristics of a service. These capabilities are enclosed
        within the &lt;servcaps&gt; element which SHOULD be located in
        the PIDF
        document as a child element of urn:ietf:params:xml:ns:pidf namespace
        &lt;tuple&gt; <xref format="default" pageno="false"
        target="RFC3863"></xref> element.</t>

        <t>The namespace identifier for these elements is:</t>

        <t>urn:ietf:params:xml:ns:pidf:caps</t>

        <section anchor="servcaps" title="&lt;servcaps&gt; Element"
                 toc="default">
          <t>The root element of service capabilities is &lt;servcaps&gt;. The
          root element always has to be present. This element can contain
          the following child elements: &lt;audio&gt;, &lt;application&gt;,
          &lt;data&gt;, &lt;control&gt;, &lt;video&gt;, &lt;text&gt;, 
	    &lt;message&gt;, &lt;type&gt;, &lt;automata&gt;, &lt;class&gt;, 
	    &lt;duplex&gt;, &lt;description&gt;, &lt;event-packages&gt;, 
          &lt;priority&gt;, &lt;methods&gt;, &lt;extensions&gt;, &lt;schemes&gt;, 
          &lt;actor&gt;, &lt;isfocus&gt;, and &lt;languages&gt; followed by any 
          number of optional extension elements from other namespaces.</t>

          <t>A &lt;servcaps&gt; element can contain any number of optional
          extension attributes from other namespaces.</t>
        </section>

        <section anchor="audio-element" title="&lt;audio&gt; Element"
                 toc="default">
          <t>The &lt;audio&gt; element indicates that the service supports
          audio as a streaming media type as defined in <xref format="default"
          pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;audio&gt; element is a boolean type and does not have any
          attributes. The value 'true' indicates that service supports audio
          media type, and the value 'false' indicates that service does not
          support audio media type.</t>
        </section>

        <section anchor="application-element"
                 title="&lt;application&gt; Element" toc="default">
          <t>The &lt;application&gt; element indicates that the service
          supports application as a streaming media type as defined in <xref
          format="default" pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;application&gt; element is a boolean type and does not
          have any attributes. The value 'true' indicates that service
          supports application media type, and the value 'false' indicates that
          service does not support application media type.</t>
        </section>

        <section anchor="data-element" title="&lt;data&gt; Element"
                 toc="default">
          <t>The &lt;data&gt; element indicates that the service supports data
          as a streaming media type as defined in <xref format="default"
          pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;data&gt; element is a boolean type and does not have any
          attributes. The value 'true' indicates that service supports data
          media type, and the value 'false' indicates that service does not
          support data media type.</t>
        </section>

        <section anchor="control-element" title="&lt;control&gt; Element"
                 toc="default">
          <t>The &lt;control&gt; element indicates that the service supports
          control as a streaming media type as defined in <xref
          format="default" pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;control&gt; element is a boolean type and does not have
          any attributes. The value 'true' indicates that service supports
          control media type, and the value 'false' indicates that service does
          not support control media type.</t>
        </section>

        <section anchor="video-element" title="&lt;video&gt; Element"
                 toc="default">
          <t>The &lt;video&gt; element indicates that the service supports
          video as a streaming media type as defined in <xref format="default"
          pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;video&gt; element is a boolean type and does not have any
          attributes. The value 'true' indicates that service supports video
          media type, and the value 'false' indicates that service does not
          support video media type.</t>
        </section>

        <section anchor="text-element" title="&lt;text&gt; Element"
                 toc="default">
          <t>The &lt;text&gt; element indicates that the service supports text
          as a streaming media type as defined in <xref format="default"
          pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;text&gt; element is a boolean type and does not have any
          attributes. The value 'true' indicates that service supports text
          media type, and the value 'false' indicates that service does not
          support text media type.</t>
        </section>

        <section anchor="message-element" title="&lt;message&gt; Element"
                 toc="default">
          <t>The &lt;message&gt; element indicates that the service supports
          messaging as a streaming media type as defined in <xref
          format="default" pageno="false" target="RFC4569"></xref>.</t>

          <t>The &lt;message&gt; element is a boolean type and does not have
          any attributes. The value 'true' indicates that service supports
          message media type, and the value 'false' indicates that service does
          not support message media type.</t>
        </section>

        <section anchor="type-element" title="&lt;type&gt; Element"
                 toc="default">
          <t>The &lt;type&gt; element indicates a MIME media content type
          (i.e., that appears in a 'Content-type:' header of the corresponding
          MIME-formatted data) as defined in <xref format="default"
          pageno="false" target="RFC2913"></xref>.</t>

          <t>The &lt;type&gt; element is a string type and does not have any
          attributes. It MUST be a string of the form "type/subtype", where
          'type' and 'subtype' are defined by the MIME specification <xref
          format="default" pageno="false" target="RFC2045"></xref>. Only
          lowercase letters SHOULD be used.</t>
        </section>

        <section anchor="automata-element" title="&lt;automata&gt; Element"
                 toc="default">
          <t>The &lt;automata&gt; element indicates whether the service
          represents an automaton (such as a voicemail server, conference
          server, or recording device) or a human as defined in <xref
          format="default" pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;automata&gt; element is a boolean type and does not have
          any attributes. The value 'true' indicates that the service
          represents an automaton, and the value 'false' indicates that it
          represents a human.</t>
        </section>

        <section anchor="class-element" title="&lt;class&gt; Element"
                 toc="default">
          <t>The &lt;class&gt; element indicates the setting, business or
          personal, in which a communications service is used as defined in
          <xref format="default" pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;class&gt; element can contain two elements:
          &lt;supported&gt; and &lt;notsupported&gt;. Classes that are
          supported by the service can be listed under the &lt;supported&gt;
          element, and classes that are not supported by the service can be
          listed under the &lt;notsupported&gt; element.</t>

          <t>&lt;supported&gt; and &lt;notsupported&gt; elements can contain
          &lt;business&gt; and &lt;personal&gt; elements followed by any
          number of optional extension elements from other namespaces. The
          semantics of business and personal are defined in <xref
          format="default" pageno="false" target="RFC3840"></xref> as: <list
              style="symbols">
              <t>&lt;business&gt;: The service is used for business
              communications.</t>

              <t>&lt;personal&gt;: The service is used for personal
              communications.</t>
            </list> Any value that is registered with IANA for the SIP media
          feature tag registration tree as a sip.class media feature tag can
          be used as a value of an extension element. If the appropriate value
          is not registered, it SHOULD be registered as defined in <xref
          format="default" pageno="false" target="RFC3840"></xref>.</t>
        </section>

        <section anchor="duplex-element" title="&lt;duplex&gt; Element"
                 toc="default">
          <t>The &lt;duplex&gt; element lists whether a communications service
          can simultaneously send and receive media ("full"), alternate
          between sending and receiving ("half"), only receive
          ("receive-only"), or only send ("send-only") as defined in <xref
          format="default" pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;duplex&gt; element can contain two elements:
          &lt;supported&gt; and &lt;notsupported&gt;. Duplex modes that are
          supported by the service can be listed under the &lt;supported&gt;
          element, and duplex modes that are not supported by the service can
          be listed under the &lt;notsupported&gt; element.</t>

          <t>&lt;supported&gt; and &lt;notsupported&gt; elements can contain
          &lt;full&gt;, &lt;half&gt;, &lt;receive-only&gt;, and
          &lt;send-only&gt; elements followed by any number of optional
          extension elements from other namespaces. The semantics of these
          elements are defined in <xref format="default" pageno="false"
          target="RFC3840"></xref> as: <list style="symbols">
              <t>&lt;full&gt;: The service can simultaneously send and receive
              media.</t>

              <t>&lt;half&gt;: The service can alternate between sending and
              receiving media.</t>

              <t>&lt;receive-only&gt;: The service can only receive media.</t>

              <t>&lt;send-only&gt;: The service can only send media.</t>
            </list> Any value that is registered with IANA for the SIP media
          feature tag registration tree as a sip.duplex media feature tag can
          be used as a value of an extension element. If the appropriate value
          is not registered, it SHOULD be registered as defined in <xref
          format="default" pageno="false" target="RFC3840"></xref>.</t>
        </section>

        <section anchor="service-description-element"
                 title="&lt;description&gt; Element" toc="default">
          <t>The &lt;description&gt; element provides a textual description of
          the service as defined in <xref format="default" pageno="false"
          target="RFC3840"></xref>.</t>

          <t>The &lt;description&gt; element is of string type and does not
          have any attributes.</t>

          <t>The &lt;description&gt; element SHOULD be labeled with the
          'xml:lang' attribute to indicate its language and script. The
          specification allows multiple occurrences of this elements so that
          the presentity can convey &lt;description&gt; elements in multiple
          scripts and languages. If no 'xml:lang' attribute is provided, the
          default value is "i-default" as defined in <xref format="default"
          pageno="false" target="RFC2277"></xref>.</t>
        </section>

        <section anchor="event-packages-element"
                 title="&lt;event-packages&gt; Element" toc="default">
          <t>The &lt;event-packages&gt; element lists the event packages
          supported by a service.</t>

          <t>The &lt;event-packages&gt; element can contain two elements:
          &lt;supported&gt; and &lt;notsupported&gt;. Event packages that are
          supported by the service can be listed under the &lt;supported&gt;
          element, and event packages that are not supported by the service can
          be listed under the &lt;notsupported&gt; element.</t>

          <t>The &lt;supported&gt; and &lt;notsupported&gt; elements can
          contain any values from the IANA SIP event types namespace registry
          followed by any number of optional extension elements from other
          namespaces. As of this writing, the IANA SIP event types namespace registry
          includes the following packages: &lt;conference&gt;, &lt;dialog&gt;,
          &lt;kpml&gt;, &lt;message&nbhy;summary&gt;, &lt;poc-settings&gt;,
          &lt;presence&gt;, &lt;reg&gt;, &lt;refer&gt;,
          &lt;Siemens&nbhy;RTP&nbhy;Stats&gt;, &lt;spirits-INDPs&gt;,
          &lt;spirits-user-prof&gt;, and &lt;winfo&gt;.</t>
        </section>

        <section anchor="priority-element" title="&lt;priority&gt; Element"
                 toc="default">
          <t>The &lt;priority&gt; element indicates the call priorities the
          service is willing to handle as defined in <xref format="default"
          pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;priority&gt; element can contain two elements:
          &lt;supported&gt; and &lt;notsupported&gt;. Priority values that are
          supported by the service can be listed under the &lt;supported&gt;
          element, and priority values that are not supported by the service
          can be listed under the &lt;notsupported&gt; element.</t>

          <t>The &lt;supported&gt; and &lt;notsupported&gt; elements can
          contain any number of &lt;lowerthan&gt;, &lt;higherthan&gt;,
          &lt;equals&gt;, and &lt;range&gt; elements followed by any number of
          optional extension elements from other namespaces.</t>

          <section anchor="lowerthan-element"
                   title="&lt;lowerthan&gt; Element" toc="default">
            <t>The &lt;lowerthan&gt; element has a single attribute called
            "maxvalue". The "maxvalue" attribute is used to give the highest
            priority value that the service is willing to support. All values
            equal and below that value are supported.</t>
          </section>

          <section anchor="higherthan-element"
                   title="&lt;higherthan&gt; Element" toc="default">
            <t>The &lt;higherthan&gt; element has a single attribute called
            "minvalue". The "minvalue" attribute is used to give the lowest
            priority value that the service is willing to support. All values
            equal and above that value are supported.</t>
          </section>

          <section anchor="equals-element" title="&lt;equals&gt; Element"
                   toc="default">
            <t>The &lt;equals&gt; element is used to indicate the exact
            priority value that the service is willing to handle. The
            &lt;equals&gt; element has a single attribute called "value". The
            "value" attribute is used to indicate the exact supported priority
            value.</t>
          </section>

          <section anchor="range-element" title="&lt;range&gt; Element"
                   toc="default">
            <t>The &lt;range&gt; element is used to indicate the priority
            range that the service is willing to handle. The &lt;range&gt;
            element has two attributes called "minvalue" and "maxvalue". The 
            value of the "minvalue" attribute indicates the lowest priority 
            value supported by the service, and the value of the "maxvalue" 
            attribute indicates the highest priority value supported by the 
            service.</t>
          </section>
        </section>

        <section anchor="methods-element" title="&lt;methods&gt; Element"
                 toc="default">
          <t>The &lt;methods&gt; element indicates the SIP methods supported
          by a service. In this case, "supported" means that the service can
          receive requests with this method. In that sense, it has the same
          connotation as the Allow header field as defined in <xref
          format="default" pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;methods&gt; element can contain two elements:
          &lt;supported&gt; and &lt;notsupported&gt;. Methods that are
          supported by the service can be listed under the &lt;supported&gt;
          element, and methods that are not supported by the service can be
          listed under the &lt;notsupported&gt; element.</t>

          <t>The &lt;supported&gt; and &lt;notsupported&gt; elements can
          contain any values from the methods table of the IANA SIP parameters 
          registry table followed by any number of optional extension elements from
          other namespaces. As of this writing, the IANA SIP parameters registry
          includes the following methods:&lt;ACK&gt;, &lt;BYE&gt;, &lt;CANCEL&gt;, 
          &lt;INFO&gt;, &lt;INVITE&gt;, &lt;MESSAGE&gt;, &lt;NOTIFY&gt;, 
          &lt;OPTIONS&gt;,  &lt;PRACK&gt;, &lt;PUBLISH&gt;, &lt;REFER&gt;, 
          &lt;REGISTER&gt;,  &lt;SUBSCRIBE&gt;, and &lt;UPDATE&gt;.</t>
        </section>

        <section anchor="extensions-elements"
                 title="&lt;extensions&gt; Element" toc="default">
          <t>The &lt;extensions&gt; element is a list of SIP extensions (each
          of which is defined by an option-tag registered with IANA) that are
          understood by the service. Understood, in this context, means that
          the option tag would be included in a Supported header field in a
          request as defined in <xref format="default" pageno="false"
          target="RFC3840"></xref>.</t>

          <t>The &lt;extensions&gt; element can contain two elements:
          &lt;supported&gt; and &lt;notsupported&gt;. Extensions that are
          supported by the service can be listed under the &lt;supported&gt;
          element, and extensions that are not supported by the service can be
          listed under the &lt;notsupported&gt; element.</t>

          <t>The &lt;supported&gt; and &lt;notsupported&gt; elements can
          contain any values from the option tags table of the IANA SIP parameters 
          registry table followed by any number of optional extension elements from
          other namespaces. As of this writing, the IANA SIP parameters registry
          includes the following option tags: &lt;rel100&gt;,
          &lt;early-session&gt;, &lt;eventlist&gt;, &lt;from&nbhy;change&gt;,
          &lt;gruu&gt;, &lt;histinfo&gt;, &lt;join&gt;, &lt;norefersub&gt;,
          &lt;path&gt;, &lt;precondition&gt;, &lt;pref&gt;, &lt;privacy&gt;,
          &lt;recipient-list-invite&gt;, &lt;recipient-list-subscribe&gt;, 
          &lt;replaces&gt;, &lt;resource-priority&gt;, &lt;sdp-anat&gt;,
          &lt;sec-agree&gt;, &lt;tdialog&gt;, and &lt;timer&gt;.</t>
        </section>

        <section anchor="schemes-element" title="&lt;schemes&gt; Element"
                 toc="default">
          <t>The &lt;schemes&gt; element provides the set of URI schemes that
          are supported by a service. "Supported" implies, for example, that the
          service would know how to handle a URI of that scheme in the Contact
          header field of a redirect response as defined in <xref
          format="default" pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;schemes&gt; element can contain two elements:
          &lt;supported&gt; and &lt;notsupported&gt;. Schemes that are
          supported by the service can be listed under the &lt;supported&gt;
          element, and schemes that are not supported by the service can be
          listed under the &lt;notsupported&gt; element.</t>

          <t>&lt;supported&gt; and &lt;notsupported&gt; elements can contain
          any number of &lt;s&gt; elements, which can be used to describe
          individual schemes supported by the service.</t>

          <section anchor="s-element" title="&lt;s&gt; Element" toc="default">
            <t>The &lt;s&gt; element is of string type and is used to
            describe an individual scheme supported by the service. Values that
            can be used here are scheme names that are registered to the IANA URI
            scheme registry.</t>
          </section>
        </section>

        <section anchor="actor-element" title="&lt;actor&gt; Element"
                 toc="default">
          <t>The &lt;actor&gt; element indicates the type of entity that is
          available at this URI as defined in <xref format="default"
          pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;actor&gt; element can contain two elements:
          &lt;supported&gt; and &lt;notsupported&gt;. Actor types that are
          supported by the service can be listed under the &lt;supported&gt;
          element, and actor types that are not supported by the service can be
          listed under the &lt;notsupported&gt; element.</t>

          <t>The &lt;supported&gt; and &lt;notsupported&gt; elements can
          contain &lt;principal&gt;, &lt;attendant&gt;, &lt;msg-taker&gt;, and
          &lt;information&gt; elements followed by any number of optional
          extension elements from other namespaces.</t>

          <t>The semantics of these elements are defined in <xref
          format="default" pageno="false" target="RFC3840"></xref> as: <list
              style="symbols">
              <t>&lt;principal&gt;: The service provides communication with
              the principal that is associated with the service. Often this
              will be a specific human being, but it can be an automaton (for
              example, when calling a voice portal).</t>

              <t>&lt;attendant&gt;: The service provides communication with an
              automaton or a person that will act as an intermediary in
              contacting the principal associated with the service, or a
              substitute.</t>

              <t>&lt;msg-taker&gt;: The service provides communication with an
              automaton or a person that will take messages and deliver them to
              the principal.</t>

              <t>&lt;information&gt;: The service provides communication with
              an automaton or a person that will provide information about the
              principal.</t>
            </list></t>

          <t>Any value that is registered with IANA for the SIP media feature
          tag registration tree as a sip.actor media feature tag can be used
          as a value of an extension element. If the appropriate value is not
          registered, it SHOULD be registered as defined in <xref
          format="default" pageno="false" target="RFC3840"></xref>.</t>
        </section>

        <section anchor="is-focus-element" title="&lt;isfocus&gt; Element"
                 toc="default">
          <t>The &lt;isfocus&gt; element indicates that the service is a
          conference server, also known as a focus as defined in <xref
          format="default" pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;isfocus&gt; element is of boolean type and does not have
          any attributes. The value 'true' indicates that service is a
          conference server and the value 'false' indicates that service does
          not support conferencing.</t>
        </section>

        <section anchor="service-languages-element"
                 title="&lt;languages&gt; Element" toc="default">
          <t>The &lt;languages&gt; element indicates the ability to display
          particular human languages as defined in <xref format="default"
          pageno="false" target="RFC4646"></xref>.</t>

          <t>The &lt;languages&gt; element can contain two elements:
          &lt;supported&gt; and &lt;notsupported&gt;. Languages that are
          supported by the service can be listed under the &lt;supported&gt;
          element, and languages that are not supported by the service can be
          listed under the &lt;notsupported&gt; element.</t>

          <t>&lt;supported&gt; and &lt;notsupported&gt; elements can contain
          any number of &lt;l&gt; elements which can be used to describe
          individual languages supported by the service.</t>

          <section anchor="service-language-element" title="&lt;l&gt; Element"
                   toc="default">
            <t>The &lt;l&gt; element is of string type and is used to
            describe an individual language supported by the service. Values that
            can be used here are language subtags that are registered to the
            IANA language subtag registry as per <xref format="default" pageno="false"
            target="RFC4646"></xref>.</t>
          </section>
        </section>
      </section>

      <section title="Device Capabilities" toc="default">
        <t>Elements belonging to device capabilities are used to describe
        dynamic characteristics of a device. These capabilities are enclosed
        within the &lt;devcaps&gt; element, which SHOULD be located in the PIDF
        document as a child element of the urn:ietf:params:xml:ns:pidf:data-model
        namespace &lt;device&gt; element <xref format="default" pageno="false"
        target="RFC4479"></xref>.</t>

        <t>The namespace identifier for these elements is urn:</t>

        <t>ietf:params:xml:ns:pidf:caps</t>

        <section anchor="prescaps-d-element" title="&lt;devcaps&gt; Element"
                 toc="default">
          <t>The root element of device capabilities is &lt;devcaps&gt;. The
          root element always has to be present. This element can
          contain the following child elements: &lt;mobility&gt; and 
          &lt;description&gt; followed by any number of optional extension 
          elements from other namespaces.</t>

          <t>A &lt;devcaps&gt; element can contain any number of optional
          extension attributes from other namespaces.</t>
        </section>

        <section anchor="mobility-element" title="&lt;mobility&gt; Element"
                 toc="default">
          <t>The &lt;mobility&gt; element indicates whether the device is
          fixed (meaning that it is associated with a fixed point of contact
          with the network) or mobile (meaning that it is not associated with
          a fixed point of contact). Note that cordless phones are fixed, not
          mobile, based on this definition as defined in <xref
          format="default" pageno="false" target="RFC3840"></xref>.</t>

          <t>The &lt;mobility&gt; element can contain two elements:
          &lt;supported&gt; and &lt;notsupported&gt;. Mobility modes that are
          supported by the device can be listed under the &lt;supported&gt;
          element and mobility modes that are not supported by the device
          can be listed under the &lt;notsupported&gt; element.</t>

          <t>The &lt;supported&gt; and &lt;notsupported&gt; elements can
          contain &lt;fixed&gt; and &lt;mobile&gt; elements followed by any
          number of optional extension elements from other namespaces.</t>

          <t>The semantics of these elements are defined in <xref
          format="default" pageno="false" target="RFC3840"></xref> as: <list
              style="symbols">
              <t>&lt;fixed&gt;: The device is stationary.</t>

              <t>&lt;mobile&gt;: The device can move around with the user.</t>
            </list></t>

          <t>Any value that is registered with IANA to the SIP media feature tag
          registration tree as sip.mobility media feature tag can be used as a
          value of an extension element. If the appropriate value is not
          registered, it SHOULD be registered as defined in <xref
          format="default" pageno="false" target="RFC3840"></xref>.</t>
        </section>

        <section anchor="device-description-element"
                 title="&lt;description&gt; Element" toc="default">
          <t>The &lt;description&gt; element provides a textual description of
          the device as defined in <xref format="default" pageno="false"
          target="RFC3840"></xref>.</t>

          <t>The &lt;description&gt; element is of string type and does not
          have any attributes.</t>

          <t>The &lt;description&gt; element SHOULD be labeled with the
          'xml:lang' attribute to indicate its language and script. The
          specification allows multiple occurrences of this element so that
          the presentity can convey &lt;description&gt; elements in multiple
          scripts and languages. If no 'xml:lang' attribute is provided, the
          default value is "i-default" as defined in <xref format="default"
          pageno="false" target="RFC2277"></xref>.</t>
        </section>
      </section>
    </section>

    <section anchor="Usage-guidelines" title="Usage Guidelines" toc="default">
      <t>The User Agent Capabilities extension <xref format="default"
      pageno="false" target="RFC3840"></xref> recommends that a UA provides
      complete information in its contact predicate. However, it may be that
      the presentity is not willing to publish presence information that would be
      consistent with actual device or service capabilities (e.g., presentity
      may not want to indicate that he/she supports voice when the service
      actually is able to support it). Authorization rules or policies
      in the presence server may limit or modify the presence information published
	by the presentity. Also, combining presence information from multiple
      sources may result in loss or mismatch of information.</t>

      <t>It is RECOMMENDED that Presence User Agents (PUAs) using this
      extension provide as complete presence information as they can. If the
      PUA is publishing sensitive information using this extension, it SHOULD
      obtain permission from the presentity. PUAs can indicate the explicitly
      supported capabilities using the &lt;supported&gt; element, and the
      capabilities that are explicitly not supported using the &lt;notsupported&gt;
      element.</t>

      <t>It is not mandated that presence information be consistent
      with actual service or device capabilities. However, it is in the
      presentity's best interest to avoid publishing false presence
      information and provide accurate information to help minimize
      unsuccessful communication invitations. Otherwise, watchers may conclude
      that communication cannot be established with the presentity, but in
      reality it would be possible; or watchers may conclude that certain 
	communication capabilities are available, but in reality a communication 
	establishment attempt would fail using those capabilities. In any case, 
	watchers should not expect the presence information represented by this 
	extension to be fully aligned with the actual presentity's service or device 
	capabilities. As explained in <xref format="default" pageno="false"
      target="scope"></xref>, presence of this extension does not replace the
      use of SIP signaling for capability negotiation.</t>

      <section anchor="use-of-supported"
               title="Use of &lt;supported&gt; and &lt;notsupported&gt; Elements"
               toc="default">
        <t>PUAs should add information under &lt;supported&gt; and
        &lt;notsupported&gt; elements only when they believe it may affect the
        decision making in the watcher's end, i.e., information should be
        relevant and valuable for the watcher. Listing all possible
        information under &lt;supported&gt; and &lt;notsupported&gt; is rarely
        needed.</t>

        <t>For example, if the PUA wants to advertise a message service that
        supports the MESSAGE method, it should add it under the &lt;supported&gt; 
	  element in the &lt;methods&gt; element. Even if the service does not 
	  support other methods, it is unlikely that listing all the methods not 
        supported under the &lt;notsupported&gt; element would provide any value to 
        the watcher.</t>

        <t>In case of conflicting information, i.e., the same child element appears
        under the &lt;supported&gt; and &lt;notsupported&gt; elements with
        the same value, the watcher can safely assume that the listed capability is
        supported regardless of the inclusion of the capability under the
        &lt;notsupported&gt; element.</t>
      </section>
    </section>

    <section anchor="Examples" title="Examples" toc="default">
      <figure title="">
        <artwork align="left" alt="" height="" name="" type="" width=""
                 xml:space="preserve"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<presence xmlns="urn:ietf:params:xml:ns:pidf"
      xmlns:caps="urn:ietf:params:xml:ns:pidf:caps"
      xmlns:mod="urn:ietf:params:xml:ns:pidf:data-model"
      entity="pres:someone@example.com">

  <tuple id="joi9877866786ua9">
    <status>
      <basic>open</basic>
    </status>
    <caps:servcaps>
      <caps:audio>true</caps:audio>
      <caps:description xml:lang="en">
         Example service
      </caps:description>
      <caps:description xml:lang="hu">
         Pe'lda szolga'ltata's
      </caps:description>
      <caps:duplex>
        <caps:supported>
          <caps:full/>
        </caps:supported>
      </caps:duplex>
      <caps:message>true</caps:message>
      <caps:methods>
        <caps:supported>
          <caps:ACK/>
          <caps:BYE/>
          <caps:INVITE/>
          <caps:MESSAGE/>
        </caps:supported>
      </caps:methods>
      <caps:priority>
        <caps:supported>
          <caps:lowerthan maxvalue="10"/>
        </caps:supported>
      </caps:priority>
      <caps:schemes>
        <caps:supported>
          <caps:s>sip</caps:s>
        </caps:supported>
      </caps:schemes>
      <caps:video>false</caps:video>
    </caps:servcaps>
    <contact>sip:someone@example.com</contact>
  </tuple>
  <mod:device id="hgt67">
    <caps:devcaps>
      <caps:mobility>
        <caps:supported>
          <caps:mobile/>
        </caps:supported>
      </caps:mobility>
    </caps:devcaps>
    <mod:deviceID
     >urn:uuid:d27459b7-8213-4395-aa77-ed859a3e5b3a</mod:deviceID>
  </mod:device>
</presence>
        ]]></artwork>
      </figure>
    </section>

    <section anchor="XML-schema-definitions" title="XML Schema Definitions"
             toc="default">
      <t>This section gives the XML schema definitions for the extensions
      defined in this document. The namespace identifier for this schema is
      urn:ietf:params:xml:ns:pidf:caps.</t>

      <figure anchor="XML_schema_service" title="">
        <artwork align="left" alt="" height="" name="" type="" width=""
                 xml:space="preserve"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:tns="urn:ietf:params:xml:ns:pidf:caps" 
  xmlns:xs="http://www.w3.org/2001/XMLSchema" 
  targetNamespace="urn:ietf:params:xml:ns:pidf:caps" 
  elementFormDefault="qualified" 
  attributeFormDefault="unqualified">

<!-- This import brings in the XML language
     attribute xml:lang-->

 <xs:import namespace="http://www.w3.org/XML/1998/namespace" 
  schemaLocation="http://www.w3.org/2001/xml.xsd"/>

<!-- ROOT -->
 <xs:element name="servcaps" type="tns:servcapstype"/>
 <xs:complexType name="servcapstype">
  <xs:sequence>
   <xs:element name="actor" type="tns:actortype" 
    minOccurs="0"/>
   <xs:element name="application" type="tns:applicationtype"
    minOccurs="0"/>
   <xs:element name="audio" type="tns:audiotype" minOccurs="0"/>
   <xs:element name="automata" type="tns:automatatype" 
    minOccurs="0"/>
   <xs:element name="class" type="tns:classtype" 
    minOccurs="0"/>
   <xs:element name="control" type="tns:controltype" 
    minOccurs="0"/>
   <xs:element name="data" type="tns:datatype" 
    minOccurs="0"/>
   <xs:element name="description" type="tns:descriptiontype" 
    minOccurs="0" maxOccurs="unbounded"/>
   <xs:element name="duplex" type="tns:duplextype" 
    minOccurs="0"/>
   <xs:element name="event-packages" type="tns:event-packagestype" 
    minOccurs="0"/>
   <xs:element name="extensions" type="tns:extensionstype" 
    minOccurs="0"/>
   <xs:element name="isfocus" type="tns:isfocustype" 
    minOccurs="0"/>
   <xs:element name="message" type="tns:messagetype" 
    minOccurs="0"/>
   <xs:element name="methods" type="tns:methodstype" 
    minOccurs="0"/>
   <xs:element name="languages" type="tns:languagestype" 
    minOccurs="0"/>
   <xs:element name="priority" type="tns:prioritytype" 
    minOccurs="0"/>
   <xs:element name="schemes" type="tns:schemestype" 
    minOccurs="0"/>
   <xs:element name="text" type="tns:texttype" 
    minOccurs="0"/>
   <xs:element name="type" type="tns:typetype" 
    minOccurs="0" maxOccurs="unbounded"/>
   <xs:element name="video" type="tns:videotype" 
    minOccurs="0"/>
   <xs:any namespace="##other" processContents="lax" 
    minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
 <xs:anyAttribute namespace="##any" processContents="lax"/> 
 </xs:complexType>

 <xs:element name="devcaps" type="tns:devcaps"/>
 <xs:complexType name="devcaps">
  <xs:sequence>
   <xs:element name="description" type="tns:descriptiontype" 
    minOccurs="0" maxOccurs="unbounded"/>
   <xs:element name="mobility" type="tns:mobilitytype" 
    minOccurs="0"/>
   <xs:any namespace="##other" processContents="lax" 
    minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
 <xs:anyAttribute namespace="##any" processContents="lax"/> 
 </xs:complexType>

 <!-- AUDIO -->
 <xs:simpleType name="audiotype">
  <xs:restriction base="xs:boolean"/>
 </xs:simpleType>

 <!-- APPLICATION -->
 <xs:simpleType name="applicationtype">
  <xs:restriction base="xs:boolean"/>
 </xs:simpleType>

 <!-- DATA -->
 <xs:simpleType name="datatype">
  <xs:restriction base="xs:boolean"/>
 </xs:simpleType>

 <!-- CONTROL -->
 <xs:simpleType name="controltype">
  <xs:restriction base="xs:boolean"/>
 </xs:simpleType>

 <!-- VIDEO -->
 <xs:simpleType name="videotype">
  <xs:restriction base="xs:boolean"/>
 </xs:simpleType>

 <!-- TEXT -->
 <xs:simpleType name="texttype">
  <xs:restriction base="xs:boolean"/>
 </xs:simpleType>

 <!-- MESSAGE -->
 <xs:simpleType name="messagetype">
  <xs:restriction base="xs:boolean"/>
 </xs:simpleType>

 <!-- TYPE -->
 <xs:simpleType name="typetype">
  <xs:restriction base="xs:string"/>
 </xs:simpleType>

 <!-- AUTOMATA -->
 <xs:simpleType name="automatatype">
  <xs:restriction base="xs:boolean"/>
 </xs:simpleType>

 <!-- CLASS -->
 <xs:complexType name="classtype">
  <xs:sequence>
   <xs:element name="supported" type="tns:classtypes" 
    minOccurs="0"/>
   <xs:element name="notsupported" type="tns:classtypes" 
    minOccurs="0"/>
  </xs:sequence>
 </xs:complexType>
 <xs:complexType name="classtypes">
  <xs:sequence>
   <xs:element name="business" type="xs:string" 
    minOccurs="0"/>
   <xs:element name="personal" type="xs:string" 
    minOccurs="0"/>
   <xs:any namespace="##other" processContents="lax"
    minOccurs="0"
    maxOccurs="unbounded"/>
  </xs:sequence>
 </xs:complexType>

 <!-- DUPLEX -->
 <xs:complexType name="duplextype">
  <xs:sequence>
   <xs:element name="supported" type="tns:duplextypes"
    minOccurs="0"/>
   <xs:element name="notsupported" type="tns:duplextypes"
    minOccurs="0"/>
  </xs:sequence>
 </xs:complexType>
 <xs:complexType name="duplextypes">
  <xs:sequence>
   <xs:element name="full" type="xs:string"
    minOccurs="0"/>
   <xs:element name="half" type="xs:string"
    minOccurs="0"/>
   <xs:element name="receive-only" type="xs:string"
    minOccurs="0"/>
   <xs:element name="send-only" type="xs:string"
    minOccurs="0"/>
   <xs:any namespace="##other" processContents="lax"
    minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
 </xs:complexType>

 <!-- DESCRIPTION -->
 <xs:complexType name="descriptiontype">
  <xs:simpleContent>
   <xs:extension base="xs:string">
    <xs:attribute ref="xml:lang"/>
   </xs:extension>
  </xs:simpleContent>
 </xs:complexType>

 <!-- EVENT-PACKAGES -->
 <xs:complexType name="event-packagestype">
  <xs:sequence>
   <xs:element name="supported" type="tns:eventtypes"
    minOccurs="0"/>
   <xs:element name="notsupported" type="tns:eventtypes"
    minOccurs="0"/>
  </xs:sequence>
 </xs:complexType>
 <xs:complexType name="eventtypes">
  <xs:sequence>
   <xs:element name="conference" type="xs:string"
    minOccurs="0"/>
   <xs:element name="dialog" type="xs:string"
    minOccurs="0"/>
   <xs:element name="kpml" type="xs:string"
    minOccurs="0"/>
   <xs:element name="message-summary" type="xs:string"
    minOccurs="0"/>
   <xs:element name="poc-settings" type="xs:string"
    minOccurs="0"/>
   <xs:element name="presence" type="xs:string"
    minOccurs="0"/>
   <xs:element name="reg" type="xs:string"
    minOccurs="0"/>
   <xs:element name="refer" type="xs:string"
    minOccurs="0"/>
   <xs:element name="Siemens-RTP-Stats"
    type="xs:string" minOccurs="0"/>
   <xs:element name="spirits-INDPs"
    type="xs:string" minOccurs="0"/>
   <xs:element name="spirits-user-prof"
    type="xs:string" minOccurs="0"/>
   <xs:element name="winfo" type="xs:string"
    minOccurs="0"/>
   <xs:any namespace="##other" processContents="lax"
    minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
 </xs:complexType>

 <!-- PRIORITY -->
 <xs:complexType name="prioritytype">
  <xs:sequence>
   <xs:element name="supported" type="tns:prioritytypes"
    minOccurs="0"/>
   <xs:element name="notsupported" type="tns:prioritytypes"
    minOccurs="0"/>
  </xs:sequence>
 </xs:complexType>
 <xs:complexType name="prioritytypes">
  <xs:sequence>
   <xs:element name="equals" type="tns:equalstype"
    minOccurs="0" maxOccurs="unbounded"/>
   <xs:element name="higherhan" type="tns:higherthantype"
    minOccurs="0" maxOccurs="unbounded"/>
   <xs:element name="lowerthan" type="tns:lowerthantype"
    minOccurs="0" maxOccurs="unbounded"/>
   <xs:element name="range" type="tns:rangetype"
    minOccurs="0" maxOccurs="unbounded"/>
   <xs:any namespace="##other" processContents="lax"
    minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
 </xs:complexType>
 <xs:complexType name="lowerthantype">
  <xs:attribute name="maxvalue" type="xs:integer"
   use="required"/>
 </xs:complexType>
 <xs:complexType name="higherthantype">
  <xs:attribute name="minvalue" type="xs:integer"
   use="required"/>
 </xs:complexType>
 <xs:complexType name="equalstype">
  <xs:attribute name="value" type="xs:integer"
   use="required"/>
 </xs:complexType>
 <xs:complexType name="rangetype">
  <xs:attribute name="minvalue" type="xs:integer"
   use="required"/>
  <xs:attribute name="maxvalue" type="xs:integer"
   use="required"/>
 </xs:complexType>

 <!-- METHODS -->
 <xs:complexType name="methodstype">
  <xs:sequence>
   <xs:element name="supported" type="tns:methodtypes"
    minOccurs="0"/>
   <xs:element name="notsupported" type="tns:methodtypes"
    minOccurs="0"/>
  </xs:sequence>
 </xs:complexType>
 <xs:complexType name="methodtypes">
  <xs:sequence>
   <xs:element name="ACK" type="xs:string" minOccurs="0"/>
   <xs:element name="BYE" type="xs:string" minOccurs="0"/>
   <xs:element name="CANCEL" type="xs:string" minOccurs="0"/>
   <xs:element name="INFO" type="xs:string" minOccurs="0"/>
   <xs:element name="INVITE" type="xs:string" minOccurs="0"/>
   <xs:element name="MESSAGE" type="xs:string" minOccurs="0"/>
   <xs:element name="NOTIFY" type="xs:string" minOccurs="0"/>
   <xs:element name="OPTIONS" type="xs:string" minOccurs="0"/>
   <xs:element name="PRACK" type="xs:string" minOccurs="0"/>
   <xs:element name="PUBLISH" type="xs:string" minOccurs="0"/>
   <xs:element name="REFER" type="xs:string" minOccurs="0"/>
   <xs:element name="REGISTER" type="xs:string" minOccurs="0"/>
   <xs:element name="SUBSCRIBE" type="xs:string" minOccurs="0"/>
   <xs:element name="UPDATE" type="xs:string" minOccurs="0"/>
   <xs:any namespace="##other" processContents="lax" minOccurs="0"
    maxOccurs="unbounded"/>
  </xs:sequence>
 </xs:complexType>

 <!-- EXTENSIONS -->
 <xs:complexType name="extensionstype">
  <xs:sequence>
   <xs:element name="supported" type="tns:extensiontypes"
    minOccurs="0"/>
   <xs:element name="notsupported" type="tns:extensiontypes"
    minOccurs="0"/>
  </xs:sequence>
 </xs:complexType>
 <xs:complexType name="extensiontypes">
  <xs:sequence>
   <xs:element name="rel100" type="xs:string" minOccurs="0"/>
   <xs:element name="early-session" type="xs:string" minOccurs="0"/>
   <xs:element name="eventlist" type="xs:string" minOccurs="0"/>
   <xs:element name="from-change" type="xs:string" minOccurs="0"/>
   <xs:element name="gruu" type="xs:string" minOccurs="0"/>
   <xs:element name="hist-info" type="xs:string" minOccurs="0"/>
   <xs:element name="join" type="xs:string" minOccurs="0"/>
   <xs:element name="norefersub" type="xs:string" minOccurs="0"/>
   <xs:element name="path" type="xs:string" minOccurs="0"/>
   <xs:element name="precondition" type="xs:string" minOccurs="0"/>
   <xs:element name="pref" type="xs:string" minOccurs="0"/>
   <xs:element name="privacy" type="xs:string" minOccurs="0"/>
   <xs:element name="recipient-list-invite" type="xs:string" 
    minOccurs="0"/>
   <xs:element name="recipient-list-subscribe" type="xs:string" 
    minOccurs="0"/>
   <xs:element name="replaces" type="xs:string" minOccurs="0"/>
   <xs:element name="resource-priority" type="xs:string" minOccurs="0"/>
   <xs:element name="sdp-anat" type="xs:string" minOccurs="0"/>
   <xs:element name="sec-agree" type="xs:string" minOccurs="0"/>
   <xs:element name="tdialog" type="xs:string" minOccurs="0"/>
   <xs:element name="timer" type="xs:string" minOccurs="0"/>
   <xs:any namespace="##other" processContents="lax"
    minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
 </xs:complexType>

 <!-- SCHEMES -->
 <xs:complexType name="schemestype">
  <xs:sequence>
   <xs:element name="supported" minOccurs="0">
    <xs:complexType>
     <xs:sequence>
      <xs:element name="s" type="xs:string" maxOccurs="unbounded"/>
     </xs:sequence>
    </xs:complexType>
   </xs:element>
   <xs:element name="notsupported" minOccurs="0">
    <xs:complexType>
     <xs:sequence>
      <xs:element name="s" type="xs:string" maxOccurs="unbounded"/>
     </xs:sequence>
    </xs:complexType>
   </xs:element>
  </xs:sequence>
 </xs:complexType>

 <!-- ACTOR -->
 <xs:complexType name="actortype">
  <xs:sequence>
   <xs:element name="supported" type="tns:actortypes"
    minOccurs="0"/>
   <xs:element name="notsupported" type="tns:actortypes"
    minOccurs="0"/>
  </xs:sequence>
 </xs:complexType>
 <xs:complexType name="actortypes">
  <xs:sequence>
   <xs:element name="attendant" type="xs:string" minOccurs="0"/>
   <xs:element name="information" type="xs:string" minOccurs="0"/>
   <xs:element name="msg-taker" type="xs:string" minOccurs="0"/>
   <xs:element name="principal" type="xs:string" minOccurs="0"/>
   <xs:any namespace="##other" processContents="lax" minOccurs="0"
    maxOccurs="unbounded"/>
  </xs:sequence>
 </xs:complexType>

 <!-- ISFOCUS -->
 <xs:simpleType name="isfocustype">
  <xs:restriction base="xs:boolean"/>
 </xs:simpleType>

 <!-- LANGUAGES -->
 <xs:complexType name="languagestype">
  <xs:sequence>
   <xs:element name="supported" minOccurs="0">
    <xs:complexType>
     <xs:sequence>
      <xs:element name="l" type="xs:string" maxOccurs="unbounded"/>
     </xs:sequence>
    </xs:complexType>
   </xs:element>
   <xs:element name="notsupported" minOccurs="0">
    <xs:complexType>
     <xs:sequence>
      <xs:element name="l" type="xs:string" maxOccurs="unbounded"/>
     </xs:sequence>
    </xs:complexType>
   </xs:element>
  </xs:sequence>
 </xs:complexType>

 <!-- MOBILITY -->
 <xs:complexType name="mobilitytype">
  <xs:sequence>
   <xs:element name="supported" type="tns:mobilitytypes"
    minOccurs="0"/>
   <xs:element name="notsupported" type="tns:mobilitytypes"
    minOccurs="0"/>
  </xs:sequence>
 </xs:complexType>
 <xs:complexType name="mobilitytypes">
  <xs:sequence>
   <xs:element name="fixed" type="xs:string"
    minOccurs="0"/>
   <xs:element name="mobile" type="xs:string"
    minOccurs="0"/>
   <xs:any namespace="##other" processContents="lax" minOccurs="0"
    maxOccurs="unbounded"/>
  </xs:sequence>
 </xs:complexType>
</xs:schema>
		]]></artwork>
      </figure>
    </section>

    <section anchor="IANA-Considerations" title="IANA Considerations"
             toc="default">
      <t>IANA has registered one new XML namespace URN and one schema as
      defined in <xref format="default" pageno="false"
      target="RFC3688"></xref>.</t>

      <section title="URN Sub-Namespace Registration for 'urn:ietf:params:xml:ns:pidf:caps'"
               toc="default">
        <t>URI: <vspace blankLines="0" /> urn:ietf:params:xml:ns:pidf:caps</t>

        <t>Description: <vspace blankLines="0" /> This is the XML namespace
        for XML elements defined by RFC 5196 to describe service and
        device capabilities in application/pidf+xml content type.</t>

        <t>Registrant Contact: <vspace blankLines="0" /> IETF, SIMPLE working
        group, &lt;simple@ietf.org&gt;<vspace blankLines="0" /> Mikko
        Lonnfors, &lt;mikko.lonnfors@nokia.com&gt;</t>

        <t>XML: <vspace blankLines="0" /><figure title="">
            <artwork align="left" alt="" height="" name="" type="" width=""
                     xml:space="preserve"><![CDATA[
BEGIN
<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.0//EN"
"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd">
<html> xmlns="http://www.w3.org/1999/xhtml"
<head>
     <meta http-equiv="content-type"
     content="text/html;charset=iso-8859-1"/>
     <title>Namespace for PIDF user agent capability 
            extension</title>
</head>
<body>
    <h1>Namespace for PIDF service capability extension</h1>
    <h2>urn:ietf:params:xml:ns:pidf:caps</h2>
    <p>
      See <a href="http://www.rfc-editor.org/rfc/rfc5196.txt">RFC
      5196</a>.
    </p>
 </body>
 </html>
END
    ]]></artwork>
          </figure></t>
      </section>

      <section title="Schema Registration for Schema 'urn:ietf:params:xml:schema:pidf:caps'"
               toc="default">
        <t>URI: <vspace blankLines="0" /> urn:ietf:params:xml:schema:pidf:caps</t>
        <t>Registrant Contact: <vspace blankLines="0" /> IESG</t>
	  <t>XML: <vspace blankLines="0" /> See Section 6</t>
      </section>
    </section>

    <section anchor="Security-Considerations" title="Security Considerations"
             toc="default">
      <t>All security considerations specified in <xref format="default"
      pageno="false" target="RFC3859"></xref> and <xref format="default"
      pageno="false" target="RFC3863"></xref> apply to this document. Compared
      to PIDF <xref format="default" pageno="false" target="RFC3863"></xref>,
      this presence document format may reveal additional information about
      user's service and device capabilities. Thus, the PUA SHOULD always
      obtain permission from the presentity when publishing sensitive information
      using this extension.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgments" toc="default">
      <t>Authors of this document would like to thank the following people for
      their contributions and valuable comments: Paul Kyzivat, Jonathan
      Rosenberg, Markus Isomaki, Eva Leppanen, Miguel Garcia, Jari Urpalainen,
      and Hisham Khartabil.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <reference anchor="RFC3859">
        <front>
          <title>Common Profile for Presence (CPP)</title>

          <author fullname="Jon Peterson" initials="J." surname="Peterson">
            <organization></organization>
          </author>

          <date month="August" year="2004" />
        </front>

        <seriesInfo name="RFC" value="3859" />
      </reference>

      <reference anchor="RFC2119">
        <front>
          <title>Key words for use in RFCs to Indicate Requirement
          Levels</title>

          <author fullname="Bradner" initials="S." surname="Bradner">
            <organization></organization>
          </author>

          <date month="March" year="1997" />
        </front>

        <seriesInfo name="BCP" value="14" />

        <seriesInfo name="RFC" value="2119" />
      </reference>

      <reference anchor="RFC3863">
        <front>
          <title>Presence Information Data Format (PIDF)</title>

          <author fullname="Hiroyasu Sugano" initials="H." surname="Sugano">
            <organization></organization>
          </author>

          <author initials="S." surname="Fujimoto">
            <organization></organization>
          </author>

          <author initials="G." surname="Klyne">
            <organization></organization>
          </author>

          <author initials="A." surname="Bateman">
            <organization></organization>
          </author>

          <author initials="W." surname="Carr">
            <organization></organization>
          </author>

          <author initials="J." surname="Peterson">
            <organization></organization>
          </author>

          <date month="August" year="2004" />
        </front>

        <seriesInfo name="RFC" value="3863" />
      </reference>

      <reference anchor="RFC3840">
        <front>
          <title>Indicating User Agent Capabilities in the Session Initiation
          Protocol (SIP)</title>

          <author fullname="Henning Schulzrinne" initials="H."
                  surname="Schulzrinne">
            <organization></organization>
          </author>

          <author fullname="Jonathan Rosenberg" initials="J."
                  surname="Rosenberg">
            <organization></organization>
          </author>

          <author fullname="Paul Kyzivat" initials="P." surname="Kyzivat">
            <organization></organization>
          </author>

          <date month="August" year="2004" />
        </front>

        <seriesInfo name="RFC" value="3840" />
      </reference>

      <reference anchor="RFC2913">
        <front>
          <title>MIME Content Types in Media Feature Expressions</title>

          <author initials="G." surname="Klyne">
            <organization></organization>
          </author>

          <date month="September" year="2000" />
        </front>

        <seriesInfo name="RFC" value="2913" />
      </reference>

      <reference anchor="RFC4646">
        <front>
          <title>Tags for Identifying Languages</title>

          <author initials="A." surname="Phillips">
            <organization></organization>
          </author>

          <author initials="M." surname="Davis">
            <organization></organization>
          </author>

          <date month="September" year="2006" />
        </front>
        <seriesInfo name="BCP" value="47" />
        <seriesInfo name="RFC" value="4646" />
      </reference>

      <reference anchor="RFC3688">
        <front>
          <title>The IETF XML Registry</title>

          <author initials="M." surname="Mealling">
            <organization></organization>
          </author>

          <date month="January" year="2004" />
        </front>
        <seriesInfo name="BCP" value="81" />
        <seriesInfo name="RFC" value="3688" />
      </reference>

      <reference anchor="RFC4479">
        <front>
          <title>A Data Model for Presence</title>

          <author fullname="Jonathan Rosenberg" initials="J."
                  surname="Rosenberg">
            <organization></organization>
          </author>

          <date month="July" year="2006" />
        </front>

        <seriesInfo name="RFC" value="4479" />
      </reference>

      <reference anchor="RFC2045">
        <front>
          <title>Multipurpose Internet Mail Extensions (MIME) part one: Format
          of Internet Message Bodies</title>

          <author initials="N." surname="Freed">
            <organization></organization>
          </author>

          <author initials="N." surname="Borenstein">
            <organization></organization>
          </author>

          <date month="November" year="1996" />
        </front>

        <seriesInfo name="RFC" value="2045" />
      </reference>

      <reference anchor="RFC2277">
        <front>
          <title>IETF Policy on Character Sets and Languages</title>

          <author initials="H." surname="Alvestrand">
            <organization></organization>
          </author>

          <date month="January" year="1998" />
        </front>
        <seriesInfo name="BCP" value="18" />
        <seriesInfo name="RFC" value="2277" />
      </reference>
    </references>

    <references title="Informative References">


      <reference anchor="RFC4569">
        <front>
          <title>Internet Assigned Numbers Authority (IANA) Registration of
          the Message Media Feature Tag</title>

          <author initials="G." surname="Camarillo">
            <organization></organization>
          </author>

          <date month="July" year="2006" />
        </front>

        <seriesInfo name="RFC" value="4569" />
      </reference>

      <reference anchor="RFC3860">
        <front>
          <title>Common Profile for Instant Messaging (CPIM)</title>

          <author fullname="Jon Peterson" initials="J." surname="Peterson">
            <organization></organization>
          </author>

          <date month="August" year="2004" />
        </front>

        <seriesInfo name="RFC" value="3860" />
      </reference>
      
      <reference anchor="RFC4566">
        <front>
          <title>SDP: Session Description Protocol</title>

          <author initials="M." surname="Handley">
            <organization></organization>
          </author>

          <author initials="V." surname="Jacobson">
            <organization></organization>
          </author>

          <author initials="C." surname="Perkins">
            <organization></organization>
          </author>

          <date month="July" year="2006" />
        </front>

        <seriesInfo name="RFC" value="4566" />
      </reference>

      <reference anchor="RFC2778">
        <front>
          <title>A Model for Presence and Instant Messaging</title>

          <author fullname="Mark Day" initials="M." surname="Day">
            <organization></organization>
          </author>

          <author initials="J." surname="Rosenberg">
            <organization></organization>
          </author>

          <author initials="H." surname="Sugano">
            <organization></organization>
          </author>

          <date month="February" year="2000" />
        </front>

        <seriesInfo name="RFC" value="2778" />
      </reference>

      <reference anchor="RFC2648">
        <front>
          <title>A URN namespace for IETF documents</title>

          <author initials="R." surname="Moats">
            <organization></organization>
          </author>

          <date month="Aug." year="1999" />
        </front>

        <seriesInfo name="RFC" value="2648" />
      </reference>
    </references>
  </back>
</rfc>
