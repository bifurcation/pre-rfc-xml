<?xml version="1.0" encoding="US-ASCII" ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY rfc2119 PUBLIC '' "reference.RFC.2119.xml">
<!ENTITY rfc3986 PUBLIC '' "reference.RFC.3986.xml">
<!ENTITY rfc5226 PUBLIC '' "reference.RFC.5226.xml">
<!ENTITY rfc5234 PUBLIC '' "reference.RFC.5234.xml">
<!ENTITY rfc1737 PUBLIC '' "reference.RFC.1737.xml">
<!ENTITY rfc1738 PUBLIC '' "reference.RFC.1738.xml">
<!ENTITY rfc1808 PUBLIC '' "reference.RFC.1808.xml">
<!ENTITY rfc2141 PUBLIC '' "reference.RFC.2141.xml">
<!ENTITY rfc2276 PUBLIC '' "reference.RFC.2276.xml">
<!ENTITY rfc2483 PUBLIC '' "reference.RFC.2483.xml">
<!ENTITY rfc2648 PUBLIC '' "reference.RFC.2648.xml">
<!ENTITY rfc3044 PUBLIC '' "reference.RFC.3044.xml">
<!ENTITY rfc3187 PUBLIC '' "reference.RFC.3187.xml">
<!ENTITY rfc3188 PUBLIC '' "reference.RFC.3188.xml">
<!ENTITY rfc3406 PUBLIC '' "reference.RFC.3406.xml">
<!ENTITY rfc3552 PUBLIC '' "reference.RFC.3552.xml">
<!ENTITY rfc4854 PUBLIC '' "reference.RFC.4854.xml">
<!ENTITY rfc5122 PUBLIC '' "reference.RFC.5122.xml">
<!ENTITY rfc5890 PUBLIC '' "reference.RFC.5890.xml">
<!ENTITY rfc6120 PUBLIC '' "reference.RFC.6120.xml">
<!ENTITY rfc6288 PUBLIC '' "reference.RFC.6288.xml">
<!ENTITY rfc6648 PUBLIC '' "reference.RFC.6648.xml">
<!ENTITY rfc6838 PUBLIC '' "reference.RFC.6838.xml">
<!ENTITY rfc6943 PUBLIC '' "reference.RFC.6943.xml">
<!ENTITY rfc6963 PUBLIC '' "reference.RFC.6963.xml">
<!ENTITY rfc6973 PUBLIC '' "reference.RFC.6973.xml">
<!ENTITY rfc7254 PUBLIC '' "reference.RFC.7254.xml">
<!ENTITY rfc7282 PUBLIC '' "reference.RFC.7282.xml">
<!ENTITY rfc7320 PUBLIC '' "reference.RFC.7320.xml">
<!ENTITY rfc7462 PUBLIC '' "reference.RFC.7462.xml">
<!ENTITY rfc7613 PUBLIC '' "reference.RFC.7613.xml">


     ]>

<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc comments="yes" ?>


<rfc category="std" number="8141"
          ipr="trust200902" obsoletes="2141, 3406" submissionType="IETF" consensus="yes">

  <front>

    <title abbrev="URNs">Uniform Resource Names (URNs)</title>

    <author initials="P." surname="Saint-Andre" fullname="Peter Saint-Andre">
      <organization>Filament</organization>
      <address>
        <postal>
          <street>P.O. Box 787</street>
          <city>Parker</city>
          <region>CO</region>
          <code>80134</code>
          <country>United States of America</country>
        </postal>
       <phone>+1 720 256 6756</phone>
        <email>peter@filament.com</email>
        <uri>&lt;https://filament.com/&gt;</uri>
      </address>
    </author>

    <author initials="J.C." surname="Klensin" fullname="John C. Klensin">
      <organization/>
      <address>
        <postal>
          <street>1770 Massachusetts Ave, Ste 322</street>
          <city>Cambridge</city>
          <region>MA</region>
          <code>02140</code>
          <country>United States of America</country>
        </postal>
        <phone>+1 617 245 1457</phone>
        <email>john-ietf@jck.com</email>
      </address>
    </author>

    <date year="2017" month="April" />

    <area>Applications</area>
    <workgroup>URNBIS</workgroup>
    <keyword>Uniform Resource Name</keyword>
    <keyword>URN</keyword>
    <keyword>Uniform Resource Identifier</keyword>
    <keyword>URI</keyword>


    <abstract>
      <t>A Uniform Resource Name (URN) is a Uniform Resource Identifier (URI)
      that is assigned under the "urn" URI scheme and a particular URN
      namespace, with the intent that the URN will be a persistent,
      location-independent resource identifier.  With regard to URN syntax,
      this document defines the canonical syntax for URNs (in a way that is
      consistent with URI syntax), specifies methods for determining
      URN&nbhy;equivalence, and discusses URI conformance.  With regard to URN
      namespaces, this document specifies a method for defining a URN
      namespace and associating it with a namespace identifier, and it
      describes procedures for registering namespace identifiers with the
      Internet Assigned Numbers Authority (IANA).  This document obsoletes
      both RFCs 2141 and 3406.</t>

    </abstract>

  </front>

  <middle>

    <section title='Introduction' anchor='intro'>
      <t>A Uniform Resource Name (URN) is a Uniform Resource Identifier (URI) <xref target='RFC3986'/> that is assigned under the "urn" URI scheme and a particular URN namespace, with the intent that the URN
         will be a persistent, location-independent resource identifier.
         A URN namespace is a collection of such URNs, each of which is (1) unique, (2) assigned in a consistent and managed way, and (3) assigned according to a common definition.  (Some URN namespaces create names that exist only as URNs, whereas others assign URNs based on names that were already created in non-URN identifier systems,
         such as ISBNs <xref target='RFC3187'/>, ISSNs <xref target='RFC3044'/>, or
         RFCs <xref target="RFC2648"/>.)</t>

      <t>The assignment of URNs is done by an organization (or, in some cases, according to an algorithm or other automated process) that has been formally delegated a URN namespace within the "urn" scheme (e.g., a URN in the "example" URN namespace <xref target='RFC6963'/> might be of the form "urn:example:foo").</t>
      <t>This document rests on two key assumptions:</t>
      <t>
        <list style='numbers'>
          <t>Assignment of a URN is a managed process.</t>
          <t>The space of URN namespaces is itself managed.</t>
        </list>
      </t>

      <t>While other URI schemes may allow resource identifiers to be freely
      chosen and assigned, such is not the case for URNs.  The syntactical
      correctness of a name starting with "urn:" is not sufficient to make it
      a URN.  In order for the name to be a valid URN, the namespace
      identifier (NID) needs to be registered in accordance with the rules
      defined here, and the remaining parts of the assigned-name portion of
      the URN need to be generated in accordance with the rules for the
      registered URN namespace.</t>

      <t>So that information about both URN syntax and URN namespaces is available in one place, this document does the following:</t>
      <t>
        <list style='numbers'>
          <t>Defines the canonical syntax for URNs in general (in a way that is consistent with URI syntax), specifies methods for determining URN-equivalence, and discusses URI conformance.</t>
          <t>Specifies a method for defining a URN namespace and associating it with a particular NID,
             and describes procedures for registering URN NIDs with the
	  Internet Assigned Numbers Authority (IANA).</t>

        </list>
      </t>
      <t>For URN syntax and URN namespaces, this document modernizes and replaces
         the original specifications for URN syntax <xref target='RFC2141'/>
         and for the definition and registration of URN namespaces <xref target='RFC3406'/>.
         These modifications build on the key requirements provided
         in the original functional description for URNs <xref target='RFC1737'/> and
         on the lessons of many years of experience.
         In those original documents and in the present one, the
         intent is to define URNs in a consistent manner so that,
         wherever practical, the parsing, handling, and resolution of
         URNs can be independent of the URN namespace within which a
         given URN is assigned. </t>
      <t>Together with input from several key user
         communities, the history and experiences with URNs dictated expansion of the URN definition
         to support new functionality, including the use of syntax explicitly reserved
         for future standardization in RFC 2141.  All URN namespaces and URNs that were
         valid under the earlier specifications remain valid, even though it may be
         useful to update the definitions of some URN namespaces to take advantage of new features. </t>

      <t>The foregoing considerations, together with various differences between URNs and
                 URIs that are locators
                 (specifically URLs) as well as the greater focus on URLs in RFC 3986
                 as the ultimate successor to <xref target='RFC1738'/> and <xref target='RFC1808'/>,
            may lead to some interpretations
         of RFC 3986 and this specification that appear (or perhaps
         actually are) not completely consistent, especially with
         regard to actions or semantics other than the basic syntax
         itself.
         If such situations arise, discussions of URNs and URN
         namespaces should be interpreted according to this document
         and not by extrapolation from RFC 3986.</t>

      <t>Summaries of changes from RFCs 2141 and 3406 appear in
         Appendices <xref target='changes-2141' format="counter"/> and <xref target='changes-3406' format="counter"/>,
         respectively.  This document obsoletes both
         <xref target='RFC2141'/> and <xref target='RFC3406'/>.
         While it does not explicitly update or replace <xref target="RFC1737"/>
         or <xref target="RFC2276"/>, the reader who references those
         documents should be aware that the conceptual model of URNs
         in this document is slightly different from those older
         specifications. </t>

    <section title="Terminology" anchor="terms">
      <t>The following terms are distinguished from each other as described below:
      </t>
      <t>
        <list style='hanging'>
          <t hangText='URN:'>A URI (as defined in RFC 3986) using the
             "urn" scheme and with the properties of a "name" as
             described in that document as well as the properties
             described in this one.  The term applies to the entire
             URI including its optional components.
             Note to the reader: the term "URN" has been used in other
             contexts to refer to a URN namespace, the namespace
   identifier, the assigned-name, and URIs that do
             not use the "urn" scheme.  All but the last of these is
             described using more specific terminology elsewhere in
             this document, but, because of those other uses, the term
             should be used and interpreted with care.</t>
          <t hangText='Locator:'>An identifier that provides a means of accessing a resource.</t>
          <t hangText='Identifier system:'>A managed collection of names. This document refers to identifier systems outside the context of URNs as "non&nbhy;URN identifier systems".</t>
          <t hangText='URN namespace:'>An identifier system that is associated with a URN NID.</t>
          <t hangText='NID:'>The identifier associated with a URN namespace.</t>
          <t hangText='NSS:'>The URN-namespace-specific part of a URN.</t>
          <t hangText='Assigned-name:'>The combination of the "urn:"
             scheme, the NID, and the namespace specific string (NSS).  An "assigned-name" is
             consequently a substring of a URN (as defined above) if
             that URN contains any additional components
             (see <xref target='syntax'/>).</t>
        </list>
      </t>
      <t> The term "name" is deliberately not defined here and should
         be (and, in practice, is) used only very informally.  RFC 3986
         uses the term as a category of URI distinguished from
         "locator" (Section 1.1.3) but also uses it in other contexts.
         If those uses are treated as definitional, they would conflict
         with, e.g., the idea of URN namespace names (i.e.,
         NIDs) and with terms associated with non-URN identifier systems.</t>
      <t>This document uses the terms "resource", "identifier", "identify", "dereference", "representation", and "metadata" roughly as defined in the URI specification <xref target='RFC3986'/>.</t>
      <t>This document uses the terms "resolution" and "resolver" in
         roughly the sense in which they were used in the original
         discussion of architectural principles for
         URNs <xref target='RFC2276'/>, i.e., "resolution" is the act
         of supplying services related to the identified resource,
         such as translating the persistent URN into one or more
         current locators for the resource, delivering metadata about
         the resource in an appropriate format,
         or even delivering a representation of the resource (e.g., a document)
         without requiring further intermediaries.
         At the time of this writing, resolution services are
         described in <xref target='RFC2483'/>.</t>
      <t>On
         the distinction between representations and metadata, see Section 1.2.2 of <xref target='RFC3986'/>.</t>
      <t>Several other terms related to "normalization" operations that are not part of the Unicode Standard <xref target='UNICODE'/> are also used here as they are in RFC 3986.</t>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target='RFC2119'/>.</t>
    </section>
    
    <section title="Design Trade-offs" anchor="tradeoffs">
       <t>To a degree much greater than when URNs were first
          considered and their uses outlined
          (see <xref target="RFC1737"/>), issues of persistent
          identifiers on the Internet involve fundamental design
          trade-offs that are much broader than URNs or the URN approach
                  and even touch on open research questions
                  within the information sciences community.  Ideal and comprehensive
          specifications about what should be done or required across
          the entire universe of URNs would require general agreement about,
          and solutions to, a wide range of such issues.
                  Although some of those issues were
          introduced by the Internet or computer-age approaches to
          character encodings and data abstraction, others predate the
          Internet and computer systems by centuries; there is
          unlikely to be agreement about comprehensive
          solutions in the near future.</t>
          <t>Although this specification
                  consequently contains some requirements
          and flexibility that would not be present in a more perfect
          world, this has been necessary in order to produce a
          consensus specification that provides a modernized definition
                  of URNs (the unattractive alternative would have been to not
                  modernize the definition in spite of widespread deployment).</t>
          <t>The following sub-sections describe two of the relevant issues in greater detail.</t>
      <section title="Resolution" anchor="tradeoffs-resolution">
       <t>One issue that is specific to URNs (as opposed to naming systems in general)
          is the fairly difficult topic of "resolution",
          discussed in Sections <xref target="terms" format="counter"/>,
          <xref target='syntax-r' format="counter"/>, <xref target='definition-resolution' format="counter"/>, and
          elsewhere below.
           </t>
           <t>With traditional Uniform Resource Locators (URLs),
                  i.e., with most URIs that are locators,
                  resolution is relatively straightforward
                  because it is used to determine an access mechanism
                  that in turn is used to dereference the locator by (typically)
                  retrieving a representation of the associated resource,
                  such as a document
                  (see Section 1.2.2 of <xref target="RFC3986"/>).
           </t>
           <t>By contrast, resolution for URNs is more flexible and varied.
           </t>
           <t>One important case involves the mapping of a URN to one
                  or more locators.  In this case, the end result is
                  still a matter of dereferencing the mapped locator(s)
                  to one or more representations.  The primary difference
                  here is persistence: even if a mapped locator has changed
                  (e.g., a DNS domain name has changed hands and a URL has
                  not been modified to point to a new location or, in a more
                  extreme and hypothetical case, the DNS is replaced
                  entirely), a URN user
                  will be able to obtain the correct representation (e.g.,
                  a document) as long as the resolver has kept its URN-to-locator
                  mappings up to date.  Consequently, the relevant
          relationships can be defined quite precisely for URNs that
                  resolve to locators that in turn are dereferenced to a
                  representation.
            </t>
            <t>However, this specification permits several other cases of
                  URN resolution as well as URNs for resources that do not
                  involve information retrieval systems.  This is true either
                  individually for particular URNs
                  or (as defined below) collectively for entire URN namespaces.
            </t>
            <t>Consider a namespace of URNs that resolve to locators
                  that in turn are dereferenced only to
                  metadata about resources because the underlying systems contain
                  no representations of those resources;
                  an example might be a URN namespace for International Standard Name
                  Identifiers (ISNIs) as that identifier system is
				  defined in the relevant standard <xref target='ISO.27729.2012'/>,
				  wherein by default a URN would be
                  resolved only to a metadata record describing
                  the public identity identified by the ISNI.
				 
            </t>
            <t>Consider also URNs that resolve to representations only if the
                  requesting entity is authorized to obtain the representation,
                  whereas other entities can obtain only metadata about the
                  resource; an example might be documents held within the legal
                  depository collection of a national library.
            </t>
            <t>Finally, some URNs might not be intended to resolve
                  to locators at all; examples might include URNs identifying
                  XML namespace names (e.g., the "dgiwg" URN namespace
                  specified by <xref target='RFC6288'/>), URNs identifying application
                  features that can be supported within a communications protocol (e.g.,
                  the "alert" URN namespace specified by <xref target='RFC7462'/>),
                  and URNs identifying enumerated types such as values in a registry
                  (e.g., a URN namespace could be used to individually identify the
                  values in all IANA registries, as provisionally proposed in
                  <xref target='IANA-URN'/>).
            </t>
            <t>Various types of URNs and multiple resolution services
               that may be available for them leave the concept of
               "resolution" more complicated but also much richer
               for URNs than the straightforward case of resolution
               to a locator that is dereferenced to a representation.
            </t>
          </section>
      <section title="Character Sets and Encodings" anchor="tradeoffs-encoding">
       <t>A similar set of considerations apply to character sets and encodings.
          URNs, especially URNs that will be used as user-facing
          identifiers, should be convenient to use in local languages and
          writing systems, easily specified with a wide range of keyboards
          and local conventions, and unambiguous.  There are trade-offs
          among those goals, and it is impossible at present to see how a simple
          and readily understandable set of rules could be developed that
          would be optimal, or even reasonable, for all URNs.  The
          discussion in <xref target='syntax-nss'/> defines an overall
          framework that should make generalized parsing and processing
          possible but also makes recommendations about rules for
          individual URN namespaces.
            </t>
          </section>
    </section>

    </section>

    <section title='URN Syntax' anchor='syntax'>
       <t>As discussed above, the syntax for URNs in this
          specification allows significantly more functionality than
          was the case in the earlier specifications, most recently <xref target='RFC2141'/>.
                  It is also harmonized with the general URI syntax
          <xref target="RFC3986"/> (which, it must be noted, was
          completed after the earlier URN specifications). </t>
      <t>However, this specification does not extend the URN syntax
         to allow direct use of characters outside the ASCII range
         <xref target='RFC20'/>.  That restriction implies that any such
         characters need to be percent-encoded as described in
         Section 2.1 of the URI specification
         <xref target='RFC3986'/>.</t>

      <t>The basic syntax for a URN is defined using the Augmented Backus-Naur Form (ABNF) as specified in <xref target='RFC5234'/>.  Rules not defined here (specifically: alphanum, fragment, and pchar) are defined as part of the URI syntax <xref target='RFC3986'/>
         and used here to point out the syntactic relationship with
         the terms used there.  The definitions of some of the terms
         used below are not comprehensive; additional restrictions are
         imposed by the prose that can be found in sections of this document that are specific to those
         terms (especially r-component in <xref target='syntax-r'/> and
      q-component in <xref target='syntax-q'/>).</t>
      <figure>
        <artwork><![CDATA[
   namestring    = assigned-name
                   [ rq-components ]
                   [ "#" f-component ]
   assigned-name = "urn" ":" NID ":" NSS
   NID           = (alphanum) 0*30(ldh) (alphanum)
   ldh           = alphanum / "-"
   NSS           = pchar *(pchar / "/")
   rq-components = [ "?+" r-component ]
                   [ "?=" q-component ]
   r-component   = pchar *( pchar / "/" / "?" )
   q-component   = pchar *( pchar / "/" / "?" )
   f-component   = fragment
        ]]></artwork>
      </figure>
      <t>The question mark character "?" can be used without
         percent-encoding inside r-components, q-components, and
         f-components.  Other than inside those components, a "?" that
         is not immediately followed by "=" or
         "+" is not defined for URNs and SHOULD be
         treated as a syntax error by URN-specific parsers and other
         processors.  </t>
      <t>The following sections provide additional information about the syntactic elements of URNs.</t>

      <section title='Namespace Identifier (NID)' anchor='syntax-nid'>
        <t>NIDs are case insensitive (e.g., "ISBN" and "isbn" are
           equivalent).</t>
        <t>Characters outside the ASCII range <xref target='RFC20'/>
           are not permitted in NIDs, and no encoding mechanism for such characters is supported.</t>
        <t>Sections <xref target='ns-formal' format="counter"/> and
           <xref target='ns-informal' format="counter"/> impose additional constraints
           on the strings that can be used as NIDs, i.e., the syntax
           shown above is not comprehensive.</t>
      </section>

      <section title='Namespace Specific String (NSS)' anchor='syntax-nss'>
        <t>The NSS is a string, unique
           within a URN namespace, that is assigned and managed in a consistent way and that conforms to the definition of the relevant URN namespace.  The combination of the NID (unique across the entire "urn" scheme) and the NSS (unique within the URN namespace) ensures that the resulting URN is globally unique.</t>
        <t>The NSS as specified in this document allows several characters not
           permitted by earlier specifications
           (see <xref target='changes-2141'/>). In particular, the "/"
           character, which is now allowed, effectively makes it possible
           to encapsulate hierarchical names from non-URN identifier systems.  For instance, consider the hypothetical example of a hierarchical identifier system in which the names take the
           form of a sequence of numbers separated by the "/" character, such as "1/406/47452/2".  If the authority for such names were to use URNs, it would be natural to place the existing name in the NSS, resulting in URNs such as "urn:example:1/406/47452/2".</t>
        <t>Those changes to the syntax for the NSS do not modify the encoding rules for URN namespaces that were defined in accordance with <xref target='RFC2141'/>.  If any such URN namespace whose names are used outside of the URN context
           (i.e., in a non-URN identifier system)
           also allows the use of "/", "~", or "&amp;" in the native
           form within that identifier system, then the encoding rules
           for that URN namespace are not changed by this
           specification.</t>
        <t>Depending on the rules governing a non-URN identifier system and its
                   associated URN namespace, names that
           are valid in that identifier system might
                   contain characters that are
           not allowed by the "pchar" production referenced above
           (e.g., characters outside the ASCII range or, consistent
           with the restrictions in RFC 3986, the characters "/",
           "?", "#", "[", and "]").  While such a name might be
           valid within the non-URN identifier system, it is not a valid URN until it has been
           translated into an NSS that conforms to the
                   rules of that particular URN namespace.  In the case of URNs
           that are formed from names that exist separately in
           a non-URN identifier system, translation of a name
           from its "native" format to a URN format is accomplished by
           using the canonicalization and encoding methods defined
           for URNs in general or specific rules for that URN
           namespace.   Software that is not aware of
           namespace-specific canonicalization and encoding
           rules MUST NOT construct URNs from the name in the
           non-URN identifier system.
        </t>
        <t>In particular, with regard to characters outside the ASCII
           range, URNs that appear in protocols or that are
           passed between systems MUST use only Unicode characters encoded
           in UTF-8 and further encoded as required by RFC 3986.
           To the extent feasible and consistent with the requirements of
           names defined and standardized elsewhere, as well as the
           principles discussed in <xref target="tradeoffs"/>,
           the characters used to represent names SHOULD be restricted to
                   either ASCII letters and
           digits or to the characters and syntax of some widely used
           models such as those of
           Internationalizing Domain Names in Applications (IDNA) <xref target="RFC5890"/>,
           Preparation, Enforcement, and Comparison of
               Internationalized Strings (PRECIS) <xref target="RFC7613"/>, or
           the Unicode Identifier and Pattern Syntax specification
           <xref target="UAX31"/>.</t>

        <t>In order to make URNs as stable and persistent as possible when protocols evolve and the environment around them changes, URN namespaces SHOULD NOT allow
		   characters outside the ASCII range <xref target="RFC20"/> unless the
		   nature of the particular URN namespace makes such characters necessary.
		   </t>
      </section>

      <section title='Optional Components' anchor='syntax-components'>
        <t>This specification includes three optional components in
           the URN syntax.  They are known as r-component,
           q-component, and f-component and are described in more
           detail below.
           Because this specification focuses almost exclusively on
           URN syntax, it does not define detailed semantics of these
           components for URNs in general.  However, each of these
           components has a distinct role that is independent of any given URN and its URN namespace.  It is intended that clients will be able to handle these components uniformly for all URNs.
           These components MAY be used with URNs from existing URN namespaces, whether or not
           a URN namespace explicitly supports them.  However, consistent
           with the approach taken in RFC 3986, the behavior of a URN
           that contains components that are undefined or meaningless for a
           particular URN namespace or resource is not defined.
           The following sections describe these optional components and their interpretation in
           greater detail.</t>

        <section title='r-component' anchor='syntax-r'>
          <t>The r-component is intended for passing parameters to URN resolution services (taken broadly, see <xref target="tradeoffs"/>) and interpreted by those services.  (By contrast, passing parameters to the resources identified by a URN, or to applications that manage such resources, is handled by q-components as described in the next section.)</t>
          <t>The URN r-component has no syntactic counterpart in any
             other known URI scheme.</t>
          <t>The sequence "?+" introduces the r-component.
                        The r-component ends with a
            "?=" sequence (which begins a q-component) or a "#" character (number
            sign, which begins an f-component).  If neither of those appear, the
            r-component continues to the end of the URN.
            Note that
            characters outside the ASCII range <xref target='RFC20'/>
            MUST be percent-encoded using the method defined
            in Section 2.1 of the generic URI specification <xref target="RFC3986"/>.</t>
         <t>As described in <xref target='equivalence'/>, the
            r-component SHALL NOT be taken into account when determining
            URN-equivalence.  However, the r-component SHALL be
            supplied along with the URN when presenting a request to
            a URN resolution service.</t>
         <t>This document defines only the syntax of the
            r-component and reserves it for future use.  The exact
            semantics of the r-component and its use in URN resolution
            protocols are a matter for potential standardization in
            separate specifications, presumably including
            specifications that define conventions and a registry for
            resolution service identifiers.</t>
          <t>Consider the hypothetical
            example of passing parameters to a resolution service (say,
            an ISO alpha-2 country code <xref target='ISO.3166-1'/> in
            order to select the preferred country in which to
            search for a physical copy of a book).  This could perhaps
            be accomplished by specifying the country code in the
            r-component, resulting in URNs such as:</t>
          <t><list style="empty">
             <t>urn:example:foo-bar-baz-qux?+CCResolve:cc=uk</t></list></t>
          <t> While the above should serve as a general explanation
             and illustration of the intent for r-components, there
             are many open issues with them, including their
             relationship to resolution mechanisms associated with the
             particular URN namespace at registration time.
			 Thus, r-components SHOULD NOT be used for URNs before their
			 semantics have been standardized.</t>
		   
        </section>

        <section title='q-component' anchor='syntax-q'>
          <t>The q-component is intended for passing parameters to either the named resource or a system that can supply the requested service, for interpretation by that resource or system.  (By contrast, passing parameters to URN resolution services is handled by r-components as described in the previous section.)</t>
          <t>
             The URN q-component has the same syntax as the URI query component
             but is introduced by "?=", not "?" alone.  For a URN that may
             be resolved to a URI that is a locator, the semantics of the q-component are
             identical to those for the query component of that URI.  Thus, URN
             resolvers returning a URI that is a locator for a URN with a q-component do this by
             copying the q-component from the URN to the query component of the
             URI.
             An example of the copying operation appears below.</t>
          <t>This specification does not specify a required behavior
             in the case of URN resolution to a URI that is a locator when the
             original URN has a q-component and the URI has a
             query string. Different circumstances may require
             different approaches.  Resolvers SHOULD document their
             strategy in such cases.</t>
       
          <t>If the URN does not resolve to a URI that is a locator,
             the interpretation of the q-component is undefined by this specification.
                         For URNs that may be resolved to a URI that is a locator, the semantics of the q-component
             are identical to those for queries to the resource located via that URI.</t>
          <t>For the sake of consistency with RFC 3986, the general
			 syntax and the semantics of q-components are not defined
			 by, or dependent on, the URN namespace of the URN.  In
			 parallel with RFC 3986, specifics of syntax and semantics, e.g., which keywords or terms are meaningful, of course may depend on a particular URN namespace or even a particular resource.</t>
          <t>The sequence "?=" introduces the q-component.  The q-component ends with a
            "#" character (number sign, which begins an f-component).
            If that character does not appear, the
            q-component continues to the end of the URN.
             The characters slash ("/") and question mark ("?") may represent data within the q-component.  Note that characters outside the ASCII range <xref target='RFC20'/> MUST be percent-encoded using the method defined
             in Section 2.1 of the generic URI specification <xref target="RFC3986"/>.
          </t>

          <t>As described in <xref target='equivalence'/>, the
             q-component SHALL NOT be taken into account when
             determining URN-equivalence.</t>
          <t>URN namespaces and associated information placement in
                syntax SHOULD be designed to avoid any need for a
                resolution service to consider the q-component.
                Namespace-specific and more generic resolution systems
                MUST NOT require that q-component information be passed
                to them for processing.</t>

          <t>Consider the hypothetical example of passing parameters to an application that returns weather reports from different regions or for different time periods.  This could perhaps be accomplished by specifying
             latitude and longitude coordinates and datetimes in the URN's q-component, resulting in URNs such as the following.</t>
      
<figure><artwork><![CDATA[
   urn:example:weather?=op=map&lat=39.56
      &lon=-104.85&datetime=1969-07-21T02:56:15Z
        
If this example resolved to an HTTP URI, the result might look like:
         
   https://weatherapp.example?op=map&lat=39.56
      &lon=-104.85&datetime=1969-07-21T02:56:15Z
]]></artwork></figure>

        </section>

        <section title='f-component' anchor='syntax-f'>
          <t>The f-component is intended to be interpreted by the client as a specification for a
             location within, or region of, the named resource.
             It distinguishes the constituent
             parts of a resource named by a URN.  For a URN that resolves to one
             or more locators that can be dereferenced to a representation, or
             where the URN resolver directly returns a representation of the
             resource, the semantics of an f-component are defined by the media
             type of the representation.
          </t>

          <t>The URN f-component has the same syntax as the URI fragment component.
          If a URN containing an f-component resolves to a single URI that is a locator
          associated with the named resource, the f-component from
          the URN can be applied (usually by the client) as
          the fragment of that URI.  If the URN does not resolve to a
          URI that is a locator, the interpretation of the f-component is undefined by this specification.  Thus, for URNs that may be resolved to a URI that is a locator, the semantics of f-components are identical to those of fragments for that resource.</t>

          <t>For the sake of consistency with RFC 3986, neither the
			 general syntax nor the semantics of f-components are
			 defined by, or dependent on, the URN namespace of the
			 URN.  In parallel with RFC 3986, specifics of syntax and semantics, e.g., which keywords or terms are meaningful, of course may depend on a particular URN namespace or even a particular resource.</t>
          <t>The f-component is introduced by the number sign ("#") character and terminated by the end of the URI.
             Any characters outside the ASCII range
             <xref target='RFC20'/> that appear in the f-component
             MUST be percent-encoded using the method defined in
             Section 2.1 of the generic URI specification <xref target="RFC3986"/>.</t>
          <t>As described in <xref target='equivalence'/>, the f-component SHALL NOT be taken into account when determining URN-equivalence.</t>
          <t>Clients SHOULD NOT pass f-components to resolution
             services unless those services also perform object
             retrieval and interpretation functions.</t>
          <t>Consider the hypothetical example of obtaining resources that are part of a larger entity (say, the chapters of a book).  Each part could be specified in the f-component, resulting in URNs such as:</t>
          <t>urn:example:foo-bar-baz-qux#somepart</t>
        </section>
      </section>
    </section>

    <section title='URN-Equivalence' anchor='equivalence'>
      <section title='Procedure' anchor='equivalence-procedure'>
        <t>For various purposes such as caching, it is often
           desirable to determine if two URNs are "the same".  This
           is done most generally (i.e., independent of the scheme) by testing for equivalence (see Section 6.1 of <xref target='RFC3986'/>).</t>
        <t>The generic URI specification <xref target='RFC3986'/> is
           very flexible about
           equality comparisons, putting the focus on allowing false
           negatives and avoiding false positives.  If comparisons
           are made in a scheme-independent way, i.e., as URI
           comparisons only, many URNs that this specification considers
           equal would be rejected.  The discussion below applies
           when the URIs involved are known to be URNs and thus uses
                   the terms "URN-equivalent" and "URN-equivalence"
                   to refer to equivalence as specified in this document.</t>
        <t>Two URNs are URN-equivalent if their assigned-name portions are octet-by-octet equal after applying case normalization (as specified in Section 6.2.2.1 of <xref target='RFC3986'/>) to the following constructs:</t>
        <t>
          <list style='numbers'>
            <t>the URI scheme "urn", by conversion to lower case</t>
            <t>the NID, by conversion to lower case</t>
            <t>any percent-encoded characters in the NSS (that is, all
	    character triplets that match the &lt;pct-encoding&gt; production
	    found in Section 2.1 of the base URI specification <xref
	    target='RFC3986'/>), by conversion to upper case for the digits A-F.</t>
          </list>
        </t>
        <t>Percent-encoded characters MUST NOT be decoded, i.e., percent-encoding normalization (as specified in Section 6.2.2.2 of <xref target='RFC3986'/>)
           MUST NOT be applied as part of the comparison process.</t>
        <t>If an r-component, q-component, or f-component (or any
           combination thereof) is included in a URN, it MUST be
           ignored for purposes of determining URN-equivalence.</t>
        <t>URN namespace definitions MAY include additional rules for
           URN&nbhy;equivalence, such as case insensitivity of the NSS (or parts thereof).  Such rules MUST always have the effect of eliminating some of the false negatives obtained by the procedure above and MUST NOT result in treating two URNs as not "the same" if the procedure here says they are URN-equivalent.  For related considerations with regard to NID registration, see below.</t>
      </section>

      <section title='Examples' anchor='equivalence-examples'>
        <t>This section shows a variety of URNs (using the "example"
           NID defined in <xref target='RFC6963'/>) that highlight
           the URN-equivalence rules.</t>
        <t>First, because the scheme and NID are case insensitive, the following three URNs are URN-equivalent to each other:</t>
        <t>
          <list style='symbols'>
            <t>urn:example:a123,z456</t>
            <t>URN:example:a123,z456</t>
            <t>urn:EXAMPLE:a123,z456</t>
          </list>
        </t>
        <t>Second, because the r-component, q-component, and f-component are not
           taken into account for purposes of testing URN-equivalence, the following three URNs are URN-equivalent to the first three examples above:</t>
        <t>
          <list style='symbols'>
            <t>urn:example:a123,z456?+abc</t>
            <t>urn:example:a123,z456?=xyz</t>
            <t>urn:example:a123,z456#789</t>
          </list>
        </t>
        <t>Third, because the "/" character (and anything that follows
           it) in the NSS is taken into account for purposes of
           URN-equivalence, the following URNs are not URN-equivalent to each
           other or to the six preceding URNs:</t>
        <t>
          <list style='symbols'>
            <t>urn:example:a123,z456/foo</t>
            <t>urn:example:a123,z456/bar</t>
            <t>urn:example:a123,z456/baz</t>
          </list>
        </t>
        <t>Fourth, because of percent-encoding, the following URNs
           are URN&nbhy;equivalent only to each other and not to any of
           those above (note that, although %2C is the
           percent-encoded transformation of "," from the previous
           examples, such sequences are not decoded for purposes of
           testing URN-equivalence):</t>
        <t>
          <list style='symbols'>
            <t>urn:example:a123%2Cz456</t>
            <t>URN:EXAMPLE:a123%2cz456</t>
          </list>
        </t>
        <t>Fifth, because characters in the NSS other than percent-encoded sequences are treated in a case-sensitive manner (unless otherwise specified for the URN namespace in question), the following URNs are not URN-equivalent to the first three URNs:</t>
        <t>
          <list style='symbols'>
            <t>urn:example:A123,z456</t>
            <t>urn:example:a123,Z456</t>
          </list>
        </t>
        <t>Sixth, on casual visual inspection of a URN presented in a human-oriented interface, the following URN might appear the same as the first three URNs (because U+0430 CYRILLIC SMALL LETTER A can be confused with U+0061 LATIN SMALL LETTER A), but it is not URN&nbhy;equivalent to the first three URNs:</t>
        <t>
          <list style='symbols'>
            <t>urn:example:%D0%B0123,z456</t>
          </list>
        </t>
      </section>
    </section>

    <section title='URI Conformance' anchor='conformance'>
      <section title='Use in URI Protocol Slots' anchor='uri-slots'>
        <t>Because a URN is, syntactically, a URI under the "urn" scheme, in theory a URN can be placed in any protocol slot that allows for a URI (to name just a few, the "href" and "src" attributes in HTML, the base element in HTML, the "xml:base" attribute in XML <xref target='XML-BASE'/>, and the "xmlns" attribute in XML for XML namespace names <xref target='XML-NAMES'/>).</t>
        <t>However, this does not imply that, semantically, it always makes sense in practice to place a URN in a given URI protocol slot; in particular, because a URN might not specify the location of a resource or even point indirectly to one, it might not be appropriate to place a URN in a URI protocol slot that points to a resource (e.g., the aforementioned "href" and "src" attributes).</t>
        <t>Ultimately, guidelines regarding when it is appropriate to use URIs under the "urn" scheme (or any other scheme) are the responsibility of specifications for individual URI protocol slots (e.g., the specification for the "xml:base" attribute in XML might recommend that it is inappropriate to use URNs in that protocol slot).  This specification cannot possibly anticipate all of the relevant cases, and it is not the place of this specification to require or restrict usage for individual protocol slots.</t>
      </section>
      <section title='Parsing' anchor='uri-parsing'>
        <t>In part because of the separation of URN semantics from
           more general URI syntax,
           generic URI processors need to pay special attention to the parsing and analysis rules of RFC 3986 and, in particular, must treat the URI as opaque unless the scheme and its requirements are recognized.  In the latter case, such processors may be in a position to invoke scheme-appropriate processing, e.g., by a URN resolver.  A URN resolver can either be an external resolver that the URI resolver knows of or be functionality built into the URI resolver.  Note that this requirement might impose constraints on the contexts in which URNs are appropriately used; see <xref target='uri-slots'/>.</t>
      </section>
      <section title='URNs and Relative References' anchor='uri-rr'>
        <t> Section 5.2 of <xref target='RFC3986'/> describes an algorithm for
	converting a URI reference that might be relative to a given base URI
	into "parsed components" of the target of that reference, which can
	then be recomposed per RFC 3986, Section 5.3 into a target URI.
           This algorithm is problematic for URNs because their syntax does not support the necessary path components.
           However, if the algorithm is applied independent of a
           particular scheme, it should work predictably for URNs as
           well, with the following understandings (syntax production
           terminology taken from RFC 3986):
           <list style="numbers">
              <t>A system that encounters a &lt;URI-reference&gt;
                 that obeys the syntax for &lt;relative-ref&gt;,
                 whether it explicitly has the scheme "urn" or not,
                 will convert it into a target URI as specified in
                 RFC 3986.</t>
              <t>Because of the persistence and stability
                 expectations of URNs, authors of documents, etc.,
                 that utilize URNs should generally avoid the use of
                 the "urn" scheme in any &lt;URI-reference&gt; that
                 is not strictly a &lt;URI&gt; as specified in
                 RFC 3986, specifically including those that would
                 require processing of &lt;relative-ref&gt;.
              </t>
              </list></t>     
      </section>
      <section title='Transport and Display' anchor='uri-display'>
        <t>When URNs are transported and exchanged, they MUST be represented in the format defined herein.  Further, URN-aware applications are strongly encouraged to offer the option of displaying URNs in this canonical form to allow for direct transcription (for example by copy-and-paste techniques).  Such applications might support the display of URNs in a more human-friendly form and might use a character set that includes characters that are not permitted in URN syntax as defined in this specification (e.g., when displaying URNs to humans, such applications might replace percent-encoded strings with characters from an extended character repertoire such as Unicode <xref target='UNICODE'/>).</t>
        <t>To minimize user confusion, any application displaying
           URIs SHOULD display the complete URI (including, for URNs, the "urn" scheme and any components) to ensure that there is no confusion between URN NIDs and URI scheme identifiers.  For example, a URI beginning with "urn:xmpp:" <xref target='RFC4854'/> is very different from a URI beginning with "xmpp:" <xref target='RFC5122'/>.  Similarly, a potential Digital Object Identifier (DOI) URI scheme <xref target="DOI-URI"/> is different from, and possibly completely unrelated to, a possible DOI URN namespace.</t>
      </section>
      <section title='URI Design and Ownership' anchor='uri-design'>
        <t>As mentioned, the assignment of URNs within a URN namespace is a managed process, as is the assignment of URN namespaces themselves.  Although design of the URNs to be assigned within a given URN namespace is ceded by this specification to the URN namespace manager, doing so in a managed way avoids the problems inherent in unmanaged generation of URIs as described in the recommendations regarding URI design and ownership <xref target='RFC7320'/>.</t>
      </section>
    </section>

    <section title='URN Namespaces' anchor='ns'>
      <t>A URN namespace is a collection of names that obey three constraints: each name is (1) unique, (2) assigned in a consistent way, and (3) assigned according to a common definition.</t>
      <t>
        <list style='numbers'>
          <t>The "uniqueness" constraint means that a name within the URN namespace is never assigned to more than one resource and never reassigned to a different resource (for the kind of "resource" identified by URNs assigned within the URN namespace).  This holds true even if the name itself is deprecated or becomes obsolete.</t>
          <t>The "consistent assignment" constraint means that a name within the URN namespace is assigned by an organization or created in accordance with a process or algorithm that is always followed.</t>
          <t>The "common definition" constraint means that there are clear definitions for the syntax of names within the URN namespace and for the process of assigning or creating them.</t>
        </list>
      </t>
      <t>A URN namespace is identified by a particular NID in order to ensure the global uniqueness of URNs and, optionally, to provide a cue regarding the structure of URNs assigned within a URN namespace.</t>
      <t>With regard to global uniqueness, using different NIDs for different collections of names ensures that no two URNs will be the same for different resources, because each collection is required to uniquely assign each name.  However, a single resource MAY have more than one URN assigned to it, either in the same URN namespace (if the URN namespace permits it) or in different URN namespaces, and for either similar purposes or different purposes.
         (For example, if a publisher assigns an ISBN <xref target='RFC3187'/> to an
         electronic publication and that publication is later
         incorporated into a digital long-term archive operated by a
         national library, the library might assign the publication a
         national bibliography number (NBN) <xref target='RFC3188'/>, resulting in two URNs referring to the same book.)
         Subject to other constraints, such as those imposed by the URI syntax <xref target='RFC3986'/>, the rules of the URN scheme are intended to allow preserving the normal and natural form of names specified in non-URN identifier systems when they are treated as URNs.</t>
      <t>With regard to the structure of names assigned within a URN namespace, the development of a naming structure (and thereby a collection of names) depends on the requirements of the community defining the names, how the names will be assigned and used, etc.  These issues are beyond the scope of URN syntax and the general rules for URN namespaces, because they are specific to the community defining a non-URN identifier system or a particular URN namespace (e.g., the bibliographic and publishing communities in the case of the "ISBN" URN namespace <xref target='RFC3187'/> and the "ISSN" URN namespace <xref target='RFC3044'/> or the developers of extensions to the Extensible Messaging and Presence Protocol <xref target='RFC6120'/> in the case of the "XMPP" URN namespace <xref target='RFC4854'/>).</t>
      <t>Because the colon character (":") is used to separate "urn" from the
		 NID and the NID from the NSS, it's tempting to think of the entire URN
		 as being structured by colon characters and to assume that colons
		 create a structure or hierarchy within the NSS portion of the URN.
		 Such structure could be specified by a particular NID specification,
		 but there is no implicit structure. 

                 In a URN such as
		 <list style="empty">
			<t>urn:example:apple:pear:plum:cherry</t></list>
		 the NSS string is "apple:pear:plum:cherry" as a whole, and there is no
		 specific meaning to the colon characters within that NSS string unless
		 such meaning is described in the specification of the "example"
		 namespace.
	  </t>

	  <t>URN namespaces inherit certain rights and responsibilities by the nature of URNs, in particular:</t>
      <t>
        <list style='numbers'>
          <t>They uphold the general principles of a well-managed URN namespace by providing persistent identification of resources and unique assignment of names in accordance with a common definition.</t>
          <t>Optionally, they can be registered in global
             registration services such as those described in <xref target="RFC2483"/>.</t>
        </list>
      </t>
      <t>There are two types of URN namespaces: formal and informal.  These are distinguished by the expected level of service, the information needed to define the URN namespace, and the procedures for registration.  Because the majority of the URN namespaces registered so far have been formal, this document concentrates on formal URN namespaces.</t>

      <section title='Formal URN Namespaces' anchor='ns-formal'>
        <t>A formal URN namespace provides benefit to some subset of
           users on the Internet.  In particular, it would not make
           sense for a formal URN namespace to be used only by a
           community or network that is not connected to the
           Internet.  For example, it would be inappropriate for a
           URN namespace to effectively force someone to use a proprietary
           network or service not open to the general Internet user.
           The intent is that, while the community of those who might
           actively use the URNs assigned within that URN namespace might be
           small, the potential use of names within that URN namespace is
           open to any user on the Internet.  Formal URN namespaces might be
           appropriate even when some aspects are not fully open.  For
           example, a URN namespace might make use of a fee-based,
           privately managed, or proprietary registry for assignment
           of URNs in the URN namespace.  However, it might still benefit
           some Internet users if the associated services have
           openly published names.</t>
        <t>An organization that will assign URNs within a formal URN namespace SHOULD meet
           the following criteria:</t>
        <t>
          <list style='numbers'>
            <t>Organizational stability and the ability to maintain the URN namespace for a long time; absent such evidence, it ought to be clear how the URN namespace can remain viable if the organization can no longer maintain the URN namespace.</t>
            <t>Competency in URN assignment.  This will improve the likelihood of persistence (e.g., to minimize the likelihood of conflicts).</t>
            <t>Commitment to not reassigning existing URNs and to allowing old URNs to continue to be valid (e.g., if the assignee of a URN is no longer a member or customer of the assigning organization, if various information about the assignee or named entity happens to change, or even if the assignee or the named entity itself is no longer in existence; in all these cases, the URN is still valid).</t>
          </list>
        </t>
        <t>A formal URN namespace establishes a particular NID, subject to the following constraints (above and beyond the syntax rules already specified):</t>
        <t>
          <list style='numbers'>
            <t>It MUST NOT be an already-registered NID.</t>
            <t>It MUST NOT start with "urn-" (which is reserved for informal URN namespaces).</t>
            <t>It MUST be more than two characters long, and it
               MUST NOT start with ALPHA ALPHA "-", i.e., any string
               consisting of two letters followed by one hyphen; such strings
               are reserved for potential use as NIDs based on ISO alpha-2
               country codes <xref target="ISO.3166-1"/> for eventual national
               registrations of URN namespaces (however, the definition and
               scoping of rules for allocation of responsibility for such
               country-code-based URN namespaces are beyond the scope of this
               document). As a consequence, it MUST NOT start with the string
               "xn--" or any other string consisting of two letters
              followed by two hyphens; such strings are reserved
              for potential representation of DNS A-labels and
               similar strings in the future <xref target='RFC5890'/>.</t>
            <t>It MUST NOT start with the string "X-" so that it will not be confused with or conflict with any experimental URN namespace previously permitted by <xref target='RFC3406'/>.</t>
          </list>
        </t>
        <t> Applicants and reviewers considering new NIDs should
            also be aware that they may have
            semantic implications and hence be a source of conflict.
            Particular attention should be paid to strings that
            might be construed as identifiers for, or registered under the
            authority of, countries (including ISO 3166-1 alpha-3
            codes) and to strings that might imply association with
            existing URI schemes, non-URN identifier systems, or trademarks.
                        However, in line with traditional
            policies, disputes about "ownership" of particular
            strings are disagreements among the parties involved;
            neither IANA nor the IETF will become involved in such
            disputes except in response to orders from a court of
            competent jurisdiction.</t>
      </section>

      <section title='Informal URN Namespaces' anchor='ns-informal'>
        <t>Informal URN namespaces are full-fledged URN namespaces, with all
	the associated rights and responsibilities.  Informal URN namespaces
	differ from formal URN namespaces in the process for assigning the NID:
	for an informal URN namespace, the registrant does not designate the
	NID; instead, IANA assigns the NID consisting of the string "urn-"
	followed by one or more digits (e.g., "urn-7") where the digits
	consist of the next available number in the sequence of positive
	integers assigned to informal URN namespaces.  Thus, the syntax of an
	informal URN namespace identifier is:</t>

        <figure>
          <artwork><![CDATA[
    InformalNamespaceName = "urn-" Number
    Number                = DigitNonZero 0*Digit
    DigitNonZero          = "1"/ "2" / "3" / "4"/ "5" 
                          / "6" / "7" / "8" / "9"
    Digit                 = "0" / DigitNonZero
          ]]></artwork>
        </figure>
        <t>The only restrictions on &lt;Number&gt; are that it (1)
           consist strictly of ASCII digits, (2) not have leading
           zeros, and (3) not cause the NID to exceed the
           length limitations defined for the URN syntax
           (see <xref target='syntax'/>).</t>
      </section>

    </section>

    <section title='Defining and Registering a URN Namespace' anchor='definition'>

      <section title='Overview' anchor='definition-overview'>
        <t>Because the space of URN namespaces is itself managed, the definition
           of a URN namespace SHOULD pay particular attention to:</t>
        <t>
        <list style='numbers'>
          <t>The purpose of the URN namespace.</t>
          <t>The syntax of URNs assigned within the URN namespace,
             including the internal syntax and anticipated effects of
             r-components or q-components.  (The syntax and interpretation
             of f-components are defined in RFC 3986.)</t>
         <t>The process for assigning URNs within the URN namespace.</t>
         <t>The security implications of assigning URNs within the
            URN namespace and of using the assigned URNs.</t>
         <t>Any potential interoperability issues with URNs assigned
            within the URN namespace.</t>
         <t>Optionally, the process for
            resolving URNs assigned within the URN namespace.</t>
        </list>
      </t>
      <t>The section on completing the template (<xref target='definition-template'/>) explains these matters in greater detail.  Although the registration templates are the same in all cases, slightly different procedures are used depending on the source of the registration.</t>

      </section>

      <section title='Registration Policy and Process: Community Registrations' anchor='definition-registration-community'>

        <t>The basic registration policy for URN namespaces is Expert
           Review as defined in the IANA Considerations document
           <xref target='RFC5226'/>.  For URN namespaces or their
           definitions that are intended to become standards or
           constituent parts of standards, the output of the Expert
           Review process is intended to be a report rather than
           instructions to IANA to take action (see below).
           The key steps are:</t>
        <t>
          <list style='numbers'>
            <t>Fill out the URN namespace registration template (see
               <xref target='definition-template'/> and
               <xref target='template'/>).  This can be done as part
               of an Internet-Draft or a specification in another
               series, although that is not a requirement.</t>
            <t>Send the completed template to the urn@ietf.org discussion list for review.</t>
            <t>If necessary to address comments received, repeat steps 1 and 2.</t>
            <t>If the Designated Experts approve the request and no
               standardization action is involved, the IANA will
               register the requested NID.  If standardization is
               anticipated, the Designated Experts will prepare a
               report and forward it to the appropriate standards
               approval body (the IESG in the case of the IETF);
               IANA will register the requested NID only after
               receiving directions from that body and a copy of the
               Expert Review report.</t>
          </list>
        </t>
        <t>A URN namespace registration can be revised by updating
           the registration template, following the same steps
           outlined above for new registrations.  A revised
           registration MUST describe differences from prior versions
           and SHOULD make special note of any relevant
           changes in the underlying technologies or URN namespace
           management processes.</t>
        <t>Experience to date with URN namespace registration requests has shown that
           registrants sometimes do not initially understand some of the subtleties
           of URN namespaces and that defining the URN namespace in the form of a
           specification enables the registrants to clearly formulate their "contract"
           with the intended user community.  Therefore, although the registration
           policy for formal URN namespaces is Expert Review and a
           specification (as distinct from the registration template) is
           not strictly required, registrants SHOULD provide a stable
           specification documenting the URN namespace definition and expanding upon the
           issues described herein.</t>
        <t>Because naming can be difficult and contentious, URN namespace registrants and the
           Designated Experts are strongly encouraged to work together in a spirit of good
           faith and mutual understanding to achieve rough consensus
           (see <xref target='RFC7282'/>) on handling registration
           requests.  They are also encouraged to bring additional expertise into the
           discussion if that would be helpful in providing perspective or otherwise
           resolving issues.</t>
        <t>Especially when iterations in the registration process are
           prolonged, Designated Experts are expected to take
           reasonable precautions to avoid "race conditions" on proposed
           NIDs and, if such situations arise, to encourage
           applicants to work out any conflicts among themselves.</t>

      </section>

      <section title='Registration Policy and Process: Fast Track for Standards Development Organizations, Scientific Societies, and Similar Bodies' anchor='definition-registration-fasttrack'>
        <t>The IETF recognizes that situations will arise in which URN namespaces will be created to either
           embed existing and established standards, particularly identifier standards,
           or reflect knowledge, terminology, or methods of organizing information that lie well outside the IETF's scope or the likely subject matter knowledge of its Designated Experts.  In situations in which the registration request originates from, or is authorized by, a recognized standards development organization, scientific society, or their designees, a somewhat different procedure is available at the option of that body:</t>
        <t>
          <list style='numbers'>
            <t>The URN namespace registration template is filled out and submitted as in steps 1 and 2 of <xref target='definition-registration-community'/>.</t>
            <t>A specification is required that reflects or points to the needed external standards or specifications.  Publication in the RFC Series or through an IETF process (e.g., posting as an Internet-Draft) is not expected and would be appropriate only under very unusual circumstances.</t>
            <t>The reviews on the discussion list and by the Designated Experts are strictly advisory, with the decisions about what advice to accept and the length of time to allocate to the process strictly under the control of the external body.</t>
            <t>When that body concludes that the application is
               sufficiently mature, its representative(s) will request that IANA complete the registration for the NID, and IANA will do so.</t>
          </list>
        </t>
        <t>Decisions about whether to recognize the requesting entity as a standards development organization or scientific society are the responsibility of the IESG.</t>
        <t>A model similar to this has already been defined for recognized standards development organizations that wish to register media types.  The document describing that mechanism <xref target='RFC6838'/> provides somewhat more information about the general approach.</t>
      </section>

      <section title='Completing the Template' anchor='definition-template'>
        <t>A template for defining and registering a URN namespace is provided in <xref target='template'/>.  This section describes considerations for completing the template.</t>

      <section title='Purpose' anchor='definition-purpose'>
        <t>The "Purpose" section of the template describes matters such as:</t>
        <t>
          <list style='numbers'>
            <t>The kinds of resources identified by URNs assigned within the URN namespace.</t>
            <t>The scope and applicability of the URNs assigned within the URN namespace; this might include information about the community of use (e.g., a particular nation, industry, technology, or organization), whether the assigned URNs will be used on public networks or private networks, etc.</t>
            <t>How the intended community (and the Internet community at large) will benefit from using or resolving the assigned URNs.</t>
            <t>How the URN namespace relates to and complements existing URN namespaces, URI schemes, and non-URN identifier systems.</t>
            <t>The kinds of software applications that can use or resolve the assigned URNs (e.g., by differentiating among disparate URN namespaces, identifying resources in a persistent fashion, or meaningfully resolving and accessing services associated with the URN namespace).</t>
            <t>Whether resolution services are available or will be available (and, if so, the nature or identity of the services).
               Examples of q-component and (when they are standardized) r-component
               semantics and syntax are helpful here, even if
               detailed definitions are provided elsewhere or later.</t>
            <t>Whether the URN namespace or its definition is expected to become a constituent part of a standard being developed in the IETF or some other recognized standards body.</t>
          </list>
          </t>
      </section>

      <section title='Syntax' anchor='definition-syntax'>
        <t>The "Syntax" section of the template contains:</t>
        <t>
          <list style='numbers'>
            <t>A description of the structure of URNs within the URN namespace, in conformance with the fundamental URN syntax.  The structure might be described in terms of a formal definition (e.g., using ABNF <xref target='RFC5234'/>), an algorithm for generating conformant URNs, or a regular expression for parsing the name into constituent parts; alternatively, the structure might be opaque.</t>
            <t>Any special character encoding rules for assigned URNs
               (e.g., which character ought to always be used for
               quotes).</t>
            <t>Rules for determining URN-equivalence between two
               names in the URN namespace.  Such rules ought to
               always have the effect of eliminating false negatives
               that might otherwise result from comparison.  If it is
               appropriate and helpful, reference can be made to
               particular equivalence rules defined in the URI
               specification <xref target='RFC3986'/> or to
               <xref target='equivalence'/> of this document.

               Examples of URN-equivalence rules include equivalence between
               uppercase and lowercase characters in the NSS,
               between hyphenated and non-hyphenated
               groupings in the name, or between
               single quotes and double quotes.
               There may also be namespace-specific special encoding
               considerations, especially for URNs that contain
               embedded forms of names from non-URN identifier systems.
               (Note that these are
               not normative statements for any kind of best practice
               related to handling of relationships between characters
               in general; such statements are limited to one particular URN namespace only.)</t>
            <t>Any special considerations necessary for conforming with
               the URN syntax.  This is particularly applicable in the
               case of existing, non-URN identifier systems that are used in
	       the context of URNs.  For example, if a non-URN identifier
	       system is used in contexts other than URNs, it might make use
	       of characters that are reserved in the URN syntax.  This
	       section ought to note any such characters and outline
	       necessary mappings to conform to URN syntax.  Normally, this
	       will be handled by percent-encoding the character as specified
	       in Section 2.1 of

               the URI specification <xref target='RFC3986'/> and as discussed in
               <xref target="tradeoffs-encoding"/> of this specification.</t>
            <t>Any special considerations for the meaning of q-components (e.g., keywords) or f-components (e.g., predefined terms) in the context of this URN namespace.</t>
          </list>
        </t>
      </section>

      <section title='Assignment' anchor='definition-assignment'>
        <t>The "Assignment" section of the template describes matters such as:</t>
        <t>
          <list style='numbers'>
            <t>Mechanisms or authorities for assigning URNs to
               resources.  It ought to make clear whether assignment
               is completely open (e.g., following a particular
               procedure such as first-come, first-served (FCFS)),
               completely closed (e.g., for a private
               organization), or limited in various ways (e.g.,
               delegated to authorities recognized by a particular
               organization); if limited, it ought to explain how to
               become an assigner of names or how to request
               assignment of names from existing assignment authorities.</t>
            <t>Methods for ensuring that URNs within the URN namespace are unique.  For example, names might be assigned sequentially or in accordance with some well-defined process by a single authority, assignment might be partitioned among delegated authorities that are individually responsible for respecting uniqueness rules, or URNs might be created independently following an algorithm that itself guarantees uniqueness.</t>
          </list>
        </t>

      </section>

      <section title='Security and Privacy' anchor='definition-security'>
        <t>The "Security and Privacy" section of the template describes any potential issues related to security and privacy with regard to assignment, use, and resolution of names within the URN namespace.  Examples of such issues include:</t>
        <t>
          <list style='symbols'>

            <t>The consequences of producing false negatives and
               false positives during comparison for URN-equivalence (see
               <xref target="equivalence-procedure"/> of this specification and
               "Issues in Identifier Comparison for Security Purposes" <xref target='RFC6943'/>).</t>
            <t>Leakage of private information when names are communicated on the public Internet.</t>
            <t>The potential for directory harvesting.</t>
            <t>Various issues discussed in the guidelines for security considerations in RFCs <xref target='RFC3552'/> and the
			   privacy considerations for Internet protocols <xref target='RFC6973'/>.
			   In particular, note the privacy considerations text for the Global System for Mobile
			   Communications Association (GSMA) / International
			   Mobile station Equipment Identity (IMEI) namespace <xref target="RFC7254"/>,
			   which may provide a useful model for such cases.</t>
			  
          </list>
        </t>
      </section>

      <section title='Interoperability' anchor='definition-interop'>
        <t>
          The "Interoperability" section MUST specify any known potential issues
          related to interoperability.  Examples include possible confusion
          with other URN namespaces, non-URN identifier systems, or URI schemes because of syntax (e.g.,
          percent-encoding of certain characters) or scope (e.g., overlapping
          areas of interest).  If at all possible, concerns that
          arise during the registration of a URN namespace (e.g., due to
          the syntax or scope of a non-URN identifier system) should
          be resolved as part of or in parallel to the registration process.
        </t>
      </section>

      <section title='Resolution' anchor='definition-resolution'>
        <t>The "Resolution" section MUST specify whether resolution mechanisms
           are intended or anticipated for URNs assigned within the
           URN namespace.
        </t>
        <t>If resolution is intended, then this section SHOULD specify whether the
           organization that assigns URNs within the URN namespace intends to operate or
           recommend any resolution services for URNs within that URN namespace.  In
           addition, if the assigning organization intends to implement registration
           for publicly advertised resolution services (for example, using a system
           developed in the spirit of the original architectural principles and service descriptions for URN resolution <xref target='RFC2276'/> <xref target='RFC2483'/>), then this section SHOULD
           list or reference the requirements for being publicly advertised by the
           assigning organization.  In addition, this section SHOULD describe any
           special considerations for the handling of r-components in the context
           of this URN namespace.
        </t>
      </section>
      <section title="Additional Information" anchor='definition-additional'>
         <t>The "Additional Information" section includes information that would be
            useful to those trying to understand this registration or
            its relationship to other registrations, such as comparisons to
            existing URN namespaces that might seem to overlap.</t>
         <t> This section of the template is optional.</t>
      </section>

    </section>
    </section>

    <section title='IANA Considerations' anchor='iana'>

      <section title='URI Scheme' anchor='iana-uri'>

        <t>   This section updates the registration of the "urn" URI scheme in
	the Permanent URI Registry <xref target="URI-Registry"/>.</t>
       
        <t>
          <list style='hanging'>
            <t hangText='URI Scheme Name:'>urn</t>
            <t hangText='Status:'>permanent</t>
            <t hangText='URI Scheme Syntax:'>See
               <xref target='syntax'/> of RFC 8141.</t>
            <t hangText='URI Scheme Semantics:'>The "urn" scheme identifies Uniform Resource Names, which are persistent, location-independent resource identifiers.</t>
            <t hangText='Encoding Considerations:'>See
               <xref target='syntax'/> of RFC 8141.</t>
            <t hangText='Applications/Protocols That Use This URI Scheme Name:'>Uniform Resource Names are used in a wide variety of applications, including bibliographic reference systems and as names for Extensible Markup Language (XML) namespaces.</t>
            <t hangText='Interoperability Considerations:'>
               See <xref target='conformance'/> of RFC 8141.</t>
            <t hangText='Security Considerations:'>See Sections
               <xref target='definition-security' format="counter"/> and
               <xref target='security' format="counter"/>  of RFC 8141.</t>
            <t hangText='Contact:'>URNBIS working group [mailto:urn@ietf.org]</t>
            <t hangText='Author/Change Controller:'>This scheme is registered under the IETF tree.  As such, the IETF maintains change control.</t>
            <t hangText='References:'>None.</t>
          </list>
        </t>
      </section>
      <section title='Registration of URN Namespaces' anchor='iana-ns'>
        <t>This document outlines the processes for registering URN namespaces
	and has implications for the IANA in terms of registries to be
	maintained (see especially <xref target='definition'/>).  In all
	cases, the IANA ought to assign the appropriate NID (formal or
	informal) once the procedures outlined

           in <xref target='definition'/> have been completed.</t>
      </section>
	  <section title="Discussion List for New and Updated NID Registrations">

		 <t>As discussed elsewhere in this document, the discussion
			list specified in RFC 3406 (urn&nbhy;nid@apps.ietf.org) is
			discontinued and replaced by the discussion list
			urn@ietf.org.</t> 
	  </section>
    </section>

    <section title='Security and Privacy Considerations' anchor='security'>
      <t>The definition of a URN namespace needs to account for potential security and privacy issues related to assignment, use, and resolution of names within the URN namespace (e.g., some URN resolvers might assign special meaning to certain characters in the NSS); see <xref target='definition-security'/> for further discussion.</t>
      <t>In most cases, URN namespaces provide a way to declare
         public information.  Normally, these declarations will have a relatively low security profile; however, there is always the danger of "spoofing" and providing misinformation.  Information in these declarations ought to be taken as advisory.</t>
    </section>

  </middle>

  <back>

    <references title="Normative References">

<reference  anchor='RFC20' target='http://www.rfc-editor.org/info/rfc20'>
<front>
<title>ASCII format for network interchange</title>
<author initials='V.G.' surname='Cerf' fullname='V.G. Cerf'><organization /></author>
<date year='1969' month='October' />
</front>
<seriesInfo name='STD' value='80'/>
<seriesInfo name='RFC' value='20'/>
<seriesInfo name='DOI' value='10.17487/RFC0020'/>
</reference>

&rfc2119;
&rfc3986;
&rfc5226;
&rfc5234;

    </references>

    <references title="Informative References">

<!--draft-saintandre-iana-urn-01; Expired-->
<reference anchor='IANA-URN'>
<front>
<title>A Uniform Resource Name (URN) Namespace for IANA Registries</title>
<author initials='P' surname='Saint-Andre' fullname='Peter Saint-Andre'>
    <organization />
</author>
<author initials='M' surname='Cotton' fullname='Michelle Cotton'>
    <organization />
</author>
<date month='February' year='2013' />
<abstract><t>This document defines a Uniform Resource Name (URN) namespace for uniquely identifying information contained in registries maintained by the Internet Assigned Numbers Authority (IANA).</t></abstract>
</front>
<seriesInfo name='Work in Progress,' value='draft-saintandre-iana-urn-01' />
</reference>

<!--draft-paskin-doi-uri-04; Expired-->
<reference anchor="DOI-URI">
   <front>
      <title>The "doi" URI Scheme for the Digital Object Identifier
         (DOI)</title>
      <author initials="N." surname="Paskin">
         <organization/>
      </author>
      <author initials="E." surname="Neylon"><organization/></author>
      <author initials="T." surname="Hammond"><organization/></author>
      <author initials="S." surname="Sun"><organization/></author>
      <date month="June" year="2003"/>
   </front>
<seriesInfo name='Work in Progress,' value='draft-paskin-doi-uri-04' />
</reference>

<reference anchor="ISO.3166-1">
   <front>
      <title>Codes for the representation of names of countries and
         their subdivisions -- Part 1: Country codes </title>
      <author>
         <organization>ISO</organization>
      </author>
      <date month="November" year="2013" />
   </front>
   <seriesInfo name="ISO" value="3166-1:2013"/>
</reference>

<reference anchor="ISO.27729.2012">
  <front>
    <title>
      Information and documentation - International standard name identifier (ISNI)
    </title>
    <author>
      <organization>ISO
      </organization>
    </author>
    <date month='March' year="2012"/>
  </front>
  <seriesInfo name="ISO" value="27729:2012" />
  <seriesInfo name="Technical Committee ISO/TC 46, Information and
      documentation," value="Subcommittee SC 9, Identification and
      description" />
</reference>

<reference anchor="URI-Registry"
           target="http://www.iana.org/assignments/uri-schemes">
   <front>
   <title>Uniform Resource Identifier (URI) Schemes</title>
   <author>
      <organization>IANA</organization>
   </author>
   <date />
   </front>
</reference>

&rfc1737;
&rfc1738;
&rfc1808;
&rfc2141;
&rfc2276;
&rfc2483;
&rfc2648;
&rfc3044;
&rfc3187;
&rfc3188;
&rfc3406;
&rfc3552;
&rfc4854;
&rfc5122;
&rfc5890;
&rfc6120;
&rfc6288;
&rfc6648;
&rfc6838;
&rfc6943;
&rfc6963;
&rfc6973;
&rfc7254;
&rfc7282;
&rfc7320;
&rfc7462;
&rfc7613;


<reference anchor="UNICODE" target="http://www.unicode.org/versions/latest/">
  <front>
    <title>The Unicode Standard</title>
    <author>
      <organization>The Unicode Consortium</organization>
    </author>
    <date></date>
  </front>
</reference>

<reference anchor="UAX31" target="http://unicode.org/reports/tr31/">
  <front>
    <title>Unicode Standard Annex #31: Unicode Identifier and Pattern Syntax
    </title>
    <author>
      <organization>The Unicode Consortium</organization>
    </author>
    <date year="2015" month="June"/>
  </front>
  <seriesInfo name="Unicode" value="9.0.0" />
</reference>

<reference anchor='XML-BASE'
           target='http://www.w3.org/TR/2009/REC-xmlbase-20090128'>
<front>
<title>XML Base (Second Edition)</title>
<author initials='J.' surname='Marsh' fullname='Jonathan Marsh'>
    <organization />
</author>
<author initials='R.' surname='Tobin' fullname='Richard Tobin'>
    <organization />
</author>
<date month='January' year='2009' />
</front>
<seriesInfo name='W3C Recommendation' value='REC-xmlbase-20090128' />
</reference>

<reference anchor="XML-NAMES" target='http://www.w3.org/TR/2009/REC-xml-names-20091208'>
<front>
<title>Namespaces in XML 1.0 (Third Edition)</title>
<author initials='H.' surname='Thompson' fullname='Henry S. Thompson'>
    <organization />
</author>
<author initials='D.' surname='Hollander' fullname='Dave Hollander'>
    <organization />
</author>
<author initials='A.' surname='Layman' fullname='Andrew Layman'>
    <organization />
</author>
<author initials='T.' surname='Bray' fullname='Tim Bray'>
    <organization />
</author>
<author initials='R.' surname='Tobin' fullname='Richard Tobin'>
    <organization />
</author>
<date month='December' year='2009' />
</front>
<seriesInfo name='W3C Recommendation' value='REC-xml-names-20091208' />
</reference>

    </references>

    <section title='Registration Template' anchor='template'>
      <t>
        <list style='hanging'>
          <t hangText='Namespace Identifier:'>Requested of IANA (formal) or assigned by IANA (informal).</t>
          <t hangText='Version:'>The version of the registration, starting with 1 and incrementing by 1 with each new version.</t>
          <t hangText='Date:'>The date when the registration is requested of IANA, using the format YYYY-MM-DD.</t>
          <t hangText='Registrant:'>The person or organization that has
	  registered the NID, including the name and address of the
	  registering organization, as well as the name and contact
	  information (email, phone number, or postal address) of the
	  designated contact person. If the registrant is a recognized
	  standards development organization, scientific society, or similar
	  body requesting the fast-track registration procedure (see <xref
	  target='definition-registration-fasttrack'/>), that information
	  should be clearly indicated in this section of the template.</t>

          <t hangText='Purpose:'>Described in <xref target='definition-purpose'/> of this document.</t>
          <t hangText='Syntax:'>Described in <xref target='definition-syntax'/> of this document.  Unless the registration explicitly describes the semantics of r-components, q-components, and f-components in the context of this URN namespace,
             those semantics are undefined.</t>
          <t hangText='Assignment:'>Described in <xref target='definition-assignment'/> of this document.</t>
          <t hangText='Security and Privacy:'>Described in <xref target='definition-security'/> of this document.</t>
          <t hangText='Interoperability:'>Described in <xref target='definition-interop'/> of this document.</t>
          <t hangText='Resolution:'>Described in <xref target='definition-resolution'/> of this document.</t>
          <t hangText='Documentation:'>A pointer to an RFC, a specification published by another standards development organization, or another stable document that provides further information about this URN namespace.</t>
          <t hangText="Additional Information:">Described in
              <xref target='definition-additional'/> of this document.</t>
          <t hangText='Revision Information:'>Description of changes from prior version(s). (Applicable only when earlier registrations have been revised.)</t>
        </list>
      </t>
    </section>

    <section title='Changes from RFC 2141' anchor='changes-2141'>
      <t>This document makes substantive changes from the syntax
         and semantics of <xref target='RFC2141'/>:</t>
      <section title="Syntax Changes from RFC 2141">
      <t>The syntax of URNs as provided in <xref target='RFC2141'/> was defined before the updated specification of URIs in <xref target='RFC3986'/>.  The definition of URN syntax is updated in this document to do the following:</t>
      <t>
        <list style='symbols'>
          <t>Ensure consistency with the URI syntax.</t>
          <t>Facilitate the use of URNs with parameters similar to URI queries and fragments.</t>
          <t>Permit parameters influencing URN resolution.</t>
          <t>Ease the use of URNs with non-URN identifier systems that include the "/" character.</t>
        </list>
      </t>
      <t>In particular, this specification does the following:</t>
      <t>
        <list style='symbols'>
          <t>Extends URN syntax to explicitly allow the characters
             "/", "?", and "#", which were reserved for future use by
             RFC 2141.  This change also effectively allows several components
             of the URI syntax although without necessarily tying
             those components to URI semantics.</t>
          <t>Defines general syntax for an additional component that
             can be used in interactions with a URN resolution service.</t>
          <t>Disallows "-" at the end of the NID.</t>
          <t>Allows the "/", "~", and "&amp;" characters in the NSS.</t>
          <t>Makes several smaller syntax adjustments.</t>
        </list>
      </t>
      </section>
      <section title="Other Changes from RFC 2141">
      <t>
        <list style='symbols'>
          <t>Formally registers "urn" as a URI scheme.</t>
          <t>Allows what are now called r-components, q-components, and f-components.</t>
        </list>
      </t>
      <t>In addition, some of the text has been updated to be
         consistent with the definition of URIs <xref target='RFC3986'/> and the
         processes for registering information with the IANA
         <xref target='RFC5226'/>, as well as more modern guidance
         with regard to security <xref target='RFC3552'/>,
         privacy <xref target="RFC6973"/>,
         and identifier comparison <xref target='RFC6943'/>.</t>
      </section>
    </section>

    <section title='Changes from RFC 3406' anchor='changes-3406'>
      <t>This document makes the following substantive changes from <xref target='RFC3406'/>:</t>
      <t>
        <list style='numbers'>
          <t>Relaxes the registration policy for formal URN namespaces
             from "IETF Review" to "Expert Review" as discussed in
             <xref target='definition-registration-community'/>.</t>
          <t>Removes the category of experimental URN namespaces,
             consistent with <xref target='RFC6648'/>.  Experimental
             URN namespaces were denoted by prefixing the namespace
             identifier with the string "X-". Because experimental
             URN namespaces were never registered, removing the
             experimental category has no impact on the existing
             registries.  Because experimental URN namespaces are
             not managed, strings conforming to URN syntax within
             experimental URN namespaces are not valid
             URNs.  Truly experimental usages may, of course, employ
             the "example" namespace <xref target='RFC6963'/>.</t>
          <t>Adds some information to, but generally simplifies, the
             URN namespace registration template.</t>
        </list>
      </t>
    </section>


    <section title='Acknowledgements' anchor='acks' numbered='no'>
      <t>Many thanks to Marc Blanchet, Leslie Daigle, Martin Duerst, Juha Hakala,
         Ted Hardie, Alfred Hoenes, Paul Jones, Barry Leiba, Sean Leonard, Larry Masinter,
         Keith Moore, Mark Nottingham, Julian Reschke, Lars Svensson, Henry S.&nbsp;Thompson,
         Dale Worley, and other participants in the URNBIS working group for their input.  Alfred Hoenes
         in particular edited an earlier draft version of this document and served as co-chair of
         the URNBIS working group.</t>

      <t>Juha Hakala deserves special recognition for his dedication
         to successfully completing this work, as do Andrew Newton and
         Melinda Shore in their roles as working group co-chairs and
         Barry Leiba in his role as area director and then as co-chair.</t>
    </section>

 <section title='Contributors' anchor='contribs' numbered='no'>
      <t>RFC 2141, which provided the basis for the syntax portion of this document, was authored by Ryan Moats.</t>
      <t>RFC 3406, which provided the basis for the namespace portion of this document, was authored by Leslie Daigle, Dirk-Willem van Gulik, Renato Iannella, and Patrik Faltstrom.</t>
      <t>Their work is gratefully acknowledged.</t>
    </section>

  </back>
</rfc>
