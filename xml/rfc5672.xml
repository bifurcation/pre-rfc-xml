<?xml version='1.0' encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" []>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>
<?rfc toc="yes" ?>
<?rfc tocindent="yes" ?>
<?rfc tocdepth="2" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>


<rfc
 number="5672"
 category="std"
 updates="4871">
 <front>
   <title
     abbrev="RFC 4871 Update">RFC 4871 DomainKeys Identified Mail (DKIM)
     Signatures -- Update</title>

   <author
     fullname="D. Crocker"
     initials="D."
     role="editor"
     surname="Crocker">
     <organization>Brandenburg InternetWorking</organization>
     <address><phone>+1.408.246.8253</phone>
       <email>dcrocker@bbiw.net</email>
     </address>
   </author>

   <date
     month="August" year="2009" />

   <area>Security</area>
   <workgroup>DKIM</workgroup>
   <keyword>DKIM, email, authentication, security, spam, abuse, errata,
     trust, Signing Domain Identifier, SDID, AUID, Agent or User Identifier</keyword>

<!--[rfced] Please insert any keywords (beyond those that appear in
the title) for use on http://www.rfc-editor.org/rfcsearch.html. --> 

<note title="">
<t>
This document may contain material from IETF Documents or IETF
Contributions published or made publicly available before November 10,
2008.  The person(s) controlling the copyright in some of this material
may not have granted the IETF Trust the right to allow modifications
of such material outside the IETF Standards Process.  Without
obtaining an adequate license from the person(s) controlling the
copyright in such materials, this document may not be modified outside
the IETF Standards Process, and derivative works of it may not be
created outside the IETF Standards Process, except to format it for
publication as an RFC or to translate it into languages other than
English.
</t>
</note>


   <abstract>
     <t>This document updates RFC 4871, "DomainKeys Identified Mail (DKIM) Signatures".
       Specifically, the document clarifies the nature, roles, and relationship
       of the two DKIM identifier tag values that are candidates for payload
       delivery to a receiving processing module. The Update is in the style
       of an Errata entry, albeit a rather long one.</t>
   </abstract>

 </front>



 <middle>

   <section
     title="Introduction">
     <t>About the purpose for DKIM, <xref
         target="RFC4871" /> states: <list>
         <t> The ultimate goal of this framework is to permit a signing
           domain to assert responsibility for a message, thus protecting
           message signer identity... </t>
       </list> Hence, DKIM has a signer that produces a signed message, a
       verifier that confirms the signature, and an assessor that consumes the
       validated signing domain. So, the simple purpose of DKIM is to
       communicate an identifier to a receive-side assessor module. The
       identifier is in the form of a domain name that refers to a
       responsible identity. For DKIM to be interoperable and useful, the signer
       and assessor must share the same understanding of the details about
       the identifier.</t>

     <t>However, the RFC 4871 specification defines two, potentially different,
       identifiers that are carried in the DKIM-Signature: header field, d=
       and i=. Either might be delivered to a receiving processing module
       that consumes validated payload. The DKIM specification fails to
       clearly define which is the "payload" to be delivered to a consuming
       module, versus what is internal and merely in support of achieving
       payload delivery. </t>

     <t>This currently leaves signers and assessors with the potential for
       making different interpretations between the two identifiers and may
       lead to interoperability problems. A signer could intend one to be
       used for assessment, and have a different intent in setting the
       value in the other.  However the verifier might choose the wrong value
       to deliver to the assessor, thereby producing an unintended (and
       inaccurate) assessment.</t>

     <t>This Update resolves that confusion.  It defines additional, semantic
       labels for the two values, clarifies their nature, and specifies their
       relationship.  More specifically, it clarifies that the identifier
       intended for delivery to the assessor -- such as one that consults a
       whitelist -- is the value of the "d=" tag. However, this does not
       prohibit message filtering engines from using the "i=" tag, or any
       other information in the message's header, for filtering decisions.
     </t>

     <t>For signers and verifiers that have been using the i= tag as the
       primary value that is delivered to the assessor, a software change to
       using the d= tag is intended.
     </t>

     <t>So, this Update clarifies the formal interface to DKIM, after
       signature verification has been performed. It distinguishes DKIM's
       internal signing and verification activity, from its standardized
       delivery of data to that interface.</t>

     <t>The focus of the Update is on the portion of DKIM that is much like
       an API definition.  If DKIM is implemented as a software library for
       use by others, it needs to define what outputs are provided, that is,
       what data that an application developer who uses the library can expect
       to obtain as a result of invoking DKIM on a message.</t>

     <t>This Update defines the output of that library to include the
       yes/no result of the verification and the "d=" value.  In other words,
       it says what (one) identifier was formally specified for use by the
       signer and whether the use of that identifier has been validated. For
       a particular library, other information can be provided at the
       discretion of the library developer, since developers of assessors --
       these are the consumers of the DKIM library -- well might want more
       information than the standardized two pieces of information. However,
       that standardized set is the minimum that is required to be provided
       to a consuming module, in order to be able to claim that the library
       is DKIM compliant.</t>

     <t>This does not state what the implicit value of "i=" is, relative to
       "d=".  In this context, that fact is irrelevant.</t>

     <t>Another example is the difference between the socket interface to TCP
       versus the TCP protocol itself.  There is the activity within the
       protocol stack, and then there is the activity within in the software
       libraries that are actually used.</t> 

     <t><list
         style="hanging">
         <t
           hangText="NOTE:  ">The text provided here updates <xref
               target="RFC4871" />.  Text appearing
           in the "Corrected Text:" replaces text in RFC 4871.  Hence, references
           that appear in the "Original Text:" can be found in RFC 4871, and are
           not duplicated in this document.</t>
<!-- [rfced] The NOTE is a bit confusing.  It seems that the 2119 text
could be deleted here as RFC 2119 is referenced in this document.  We
suggest:

   The text provided here updates [RFC4871].  Text appearing
in the "Corrected Text:" replaces text in RFC 4871.  Hence, references
that appear in the "Original Text:" can be found in RFC 4871, and are
not duplicated in this document.  

OK /d
-->
       </list>
     </t>

     <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
       NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
       "OPTIONAL" in this document are to be interpreted as described in
       <xref target="RFC2119"/>.</t>


   </section>

   <section
     title="RFC 4871, Abstract">
<!-- [rfced] We suggest incluing commas in your section titles, e.g.,

RFC 4871, Abstract
RFC 4871, Section 1, Introduction
...

However, you were consistent with your naming convnetion, so we did
not want to make this change without your acknowledgment.  Please
consider changing the section titles. 

Commas probably improve readability for these section titles.  done.  /d
-->

     <t>
       <list
         style="hanging">
         <t
           hangText="Original Text:  " />
         <t>The ultimate goal of this framework is to permit a signing domain
           to assert responsibility for a message,</t>
         <t
           hangText="Corrected Text:  " />
         <t>The ultimate goal of this framework is to permit a person, role
           or organization that owns the signing domain to assert
           responsibility for a message,</t>
       </list>
     </t>
   </section>

   <section
     title="RFC 4871, Section 1, Introduction">
     <t>
       <list
         style="hanging">
         <t
           hangText="Original Text:  " />
         <t>...permitting a signing domain to claim responsibility </t>

         <t
           hangText="Corrected Text:  " />
         <t>permitting a person, role, or organization that owns the signing
           domain to claim responsibility</t>
       </list>
     </t>

   </section>
   <section
     title="RFC 4871, Section 2.7, Identity">
     <t>
       <list
         style="hanging">
         <t
           hangText="Original Text:  " />
         <t>(None. New section. Additional text.)</t>
         <t
           hangText="Corrected Text:  " />
         <t>A person, role, or organization. In the context of DKIM, examples
           include author, author's organization, an ISP along the handling
           path, an independent trust assessment service, and a mailing list
           operator.</t>
       </list>
     </t>

   </section>
   <section
     title="RFC 4871, Section 2.8, Identifier">
     <t>
       <list
         style="hanging">
         <t
           hangText="Original Text:  " />
         <t>(None. New section. Additional text.)</t>
         <t
           hangText="Corrected Text:  " />
         <t>A label that refers to an identity.</t>
       </list>
     </t>

   </section>
   <section
     title="RFC 4871, Section 2.9, Signing Domain Identifier (SDID)">
     <t>
       <list
         style="hanging">
         <t
           hangText="Original Text:  " />
         <t>(None. New section. Additional text.)</t>

         <t
           hangText="Corrected Text:  " />
         <t>A single domain name that is the mandatory payload output of DKIM
           and that refers to the identity claiming responsibility for
           introduction of a message into the mail stream. For DKIM
           processing, the name has only basic domain name semantics; any
           possible owner-specific semantics are outside the scope of DKIM.
           It is specified in Section 3.5. </t>

       </list>
     </t>
   </section>

   <section
     title="RFC 4871, Section 2.10, Agent or User Identifier (AUID)">
     <t>
       <list
         style="hanging">
         <t
           hangText="Original Text:  " />
         <t>(None. New section. Additional text.)</t>

         <t
           hangText="Corrected Text:  " />
         <t>A single identifier that refers to the agent or user on behalf of
           whom the Signing Domain Identifier (SDID) has taken responsibility. The AUID comprises a
           domain name and an optional &lt;Local-part&gt;. The domain
           name is the same as that used for the SDID or is a sub-domain of
           it. For DKIM processing, the domain name portion of the AUID has
           only basic domain name semantics; any possible owner-specific
           semantics are outside the scope of DKIM. It is specified in
           Section 3.5.</t>
       </list>
     </t>
   </section>

   <section
     title="RFC 4871, Section 2.11, Identity Assessor">
     <t>
       <list
         style="hanging">
         <t
           hangText="Original Text:  " />
         <t>(None. New section. Additional text.)</t>

         <t
           hangText="Corrected Text:  " />
         <t>A module that consumes DKIM's mandatory payload, which is the
           responsible Signing Domain Identifier (SDID).  The module is
           dedicated to the assessment of the delivered identifier.  Other
           DKIM (and non-DKIM) values can also be delivered to this module
           as well as to a more general message evaluation filtering
           engine.  However, this additional activity is outside the scope
           of the DKIM signature specification.</t>
       </list>
     </t>
   </section>

   <section
     title="RFC 4871, Section 3.5, The DKIM-Signature Header Field">

     <t>Original Text: <list>
         <t>
           <figure>
             <artwork><![CDATA[
d=  The domain of the signing entity (plain-text; REQUIRED).  This is
   the domain that will be queried for the public key.  This domain
   MUST be the same as or a parent domain of the "i=" tag (the
   signing identity, as described below), or it MUST meet the
   requirements for parent domain signing described in Section 3.8.
   When presented with a signature that does not meet these
   requirement, verifiers MUST consider the signature invalid.

   Internationalized domain names MUST be encoded as described in
   [RFC3490].

   ABNF:

      sig-d-tag       = %x64 [FWS] "=" [FWS] domain-name
      domain-name     = sub-domain 1*("." sub-domain)
               ; from RFC 2821 Domain, 
                 but excluding address-literal
]]></artwork>
           </figure>
         </t>
       </list>
     </t>
     <t>Corrected Text: <list>
         <t>d= <list>
             <t> Specifies the SDID claiming responsibility for an
               introduction of a message into the mail stream (plain-text;
               REQUIRED). Hence, the SDID value is used to form the query for 
               the public key. The SDID MUST correspond to a valid DNS name under
               which the DKIM key record is published. The conventions and
               semantics used by a signer to create and use a specific SDID
               are outside the scope of the DKIM Signing specification, as is
               any use of those conventions and semantics. When presented
               with a signature that does not meet these requirements,
               verifiers MUST consider the signature invalid.</t>
             <t>Internationalized domain names MUST be encoded as described
               in <xref target="RFC3490"></xref>.</t>
             <t>ABNF: <figure
                 align="left">
                 <artwork
                   align="left"
                   type="ABNF">
<![CDATA[         sig-d-tag   = %x64 [FWS] "=" [FWS] domain-name
        domain-name = sub-domain 1*("." sub-domain) 
                      ; from RFC 5321 Domain, 
                        but excluding address-literal]]></artwork>
               </figure>
             </t>

           </list>
         </t>
       </list>
     </t>
   </section>

   <section
     title="RFC 4871, Section 3.5, The DKIM-Signature Header Field">
     <t>Original Text: <list>
         <t>
           <figure>
             <artwork><![CDATA[i=  Identity of the user or agent (e.g., a mailing list manager) on
   behalf of which this message is signed (dkim-quoted-printable;
   OPTIONAL, default is an empty Local-part followed by an "@"
   followed by the domain from the "d=" tag).  The syntax is a
   standard email address where the Local-part MAY be omitted.  The
   domain part of the address MUST be the same as or a subdomain of
   the value of the "d=" tag.

   Internationalized domain names MUST be converted using the steps
   listed in Section 4 of [RFC3490] using the "ToASCII" function.

   ABNF:

      sig-i-tag =  %x69 [FWS] "=" [FWS] 
                   [ Local-part ] "@" domain-name

   INFORMATIVE NOTE: The Local-part of the "i=" tag is optional
   because in some cases a signer may not be able to establish a
   verified individual identity.  In such cases, the signer may
   wish to assert that although it is willing to go as far as
   signing for the domain, it is unable or unwilling to commit
   to an individual user name within their domain.  It can do so
   by including the domain part but not the Local-part of the
   identity.

   INFORMATIVE DISCUSSION: This document does not require the value
   of the "i=" tag to match the identity in any message header
   fields.  This is considered to be a verifier policy issue.
   Constraints between the value of the "i=" tag and other
   identities in other header fields seek to apply basic
   authentication into the semantics of trust associated with a
   role such as content author.  Trust is a broad and complex
   topic and trust mechanisms are subject to highly creative
   attacks.  The real-world efficacy of 
   bindings between the "i=" value and other identities is not
   well established, nor is its vulnerability to subversion by
   an attacker.  Hence reliance on the use of these options
   should be strictly limited.  In particular, it is not at all
   clear to what extent a typical end-user recipient can rely on
   any assurances that might be made by successful use of the
   "i=" options.]]></artwork>
           </figure>
         </t>
       </list></t>

     <t>Corrected Text: <list>
         <t>i= <list>
             <t>The Agent or User Identifier (AUID) on behalf of which the
               SDID is taking responsibility (dkim-quoted-printable;
               OPTIONAL, default is an empty Local-part followed by an "@"
               followed by the domain from the "d=" tag).</t>

             <t>The syntax is a standard email address where the Local-part
               MAY be omitted. The domain part of the address MUST be the
               same as, or a subdomain of the value of, the "d=" tag.</t>
             <t>Internationalized domain names MUST be converted using the
               steps listed in Section 4 of <xref target="RFC3490"></xref> using the "ToASCII"
               function.</t>

             <t>ABNF: <figure
                 align="left">
                 <artwork
                   align="left"
                   type="ABNF">
<![CDATA[         sig-i-tag =  %x69 [FWS] "=" [FWS] 
                     [ Local-part ] "@" domain-name]]></artwork>
               </figure></t>

             <t> The AUID is specified as having the same syntax as an email
               address, but is not required to have the same semantics.
               Notably, the domain name is not required to be registered in
               the DNS -- so it might not resolve in a query -- and the
               Local-part MAY be drawn from a namespace that does not contain
               the user's mailbox. The details of the structure and semantics
               for the namespace are determined by the Signer. Any knowledge
               or use of those details by verifiers or assessors is outside
               the scope of the DKIM Signing specification. The Signer MAY
               choose to use the same namespace for its AUIDs as its users'
               email addresses or MAY choose other means of representing its
               users. However, the signer SHOULD use the same AUID for each message
               intended to be evaluated as being within the same sphere of
               responsibility, if it wishes to offer receivers the option of
               using the AUID as a stable identifier that is finer grained
               than the SDID. </t>
             <t>INFORMATIVE NOTE: The Local-part of the "i=" tag is optional
               because, in some cases, a signer may not be able to establish a
               verified individual identity. In such cases, the signer might
               wish to assert that although it is willing to go as far as
               signing for the domain, it is unable or unwilling to commit to
               an individual user name within their domain. It can do so by
               including the domain part but not the Local-part of the
               identity.</t>

           </list>
         </t>
       </list>
     </t>

   </section>


   <section
     title="RFC 4871, Section 3.8, Signing by Parent Domains">
     <t>Original Text: <list>
         <t>
e.g., a key record for the domain example.com can be used to verify
messages where the signing identity ("i=" tag of the signature) is
sub.example.com, or even sub1.sub2.example.com.  In order to limit
the capability of such keys when this is not intended, the "s" flag
may be set in the "t=" tag of the key record to constrain the
validity of the record to exactly the domain of the signing identity.
If the referenced key record contains the "s" flag as part of the
"t=" tag, the domain of the signing identity ("i=" flag) MUST be the
same as that of the d= domain.  If this flag is absent, the domain of
the signing identity MUST be the same as, or a subdomain of, the d=
domain.
         </t>
       </list>
     </t>

     <t>Corrected Text: <list>
         <t>...for example, a key record for the domain example.com can be
           used to verify messages where the AUID ("i=" tag of the signature)
           is sub.example.com, or even sub1.sub2.example.com. In order to
           limit the capability of such keys when this is not intended, the
           "s" flag MAY be set in the "t=" tag of the key record, to
           constrain the validity of the domain of the AUID. If the
           referenced key record contains the "s" flag as part of the "t="
           tag, the domain of the AUID ("i=" flag) MUST be the same as that
           of the SDID (d=) domain. If this flag is absent, the domain of the
           AUID MUST be the same as, or a subdomain of, the SDID. </t>
       </list>
     </t>
   </section>


   <section
     title="RFC 4871, Section 3.9, Relationship between SDID and AUID">
     <t>
       <list
         style="hanging">
         <t
           hangText="Original Text:  ">(None. New section. Additional text.)</t>
         <t
           hangText="Corrected Text:  " />
       </list>
       <list>
         <t>DKIM's primary task is to communicate from the Signer to a
           recipient-side Identity Assessor a single Signing Domain
           Identifier (SDID) that refers to a responsible identity. DKIM MAY
           optionally provide a single responsible Agent or User Identifier
           (AUID).</t>

         <t> Hence, DKIM's mandatory output to a receive-side Identity
           Assessor is a single domain name. Within the scope of its use as
           DKIM output, the name has only basic domain name semantics; any
           possible owner-specific semantics are outside the scope of DKIM.
           That is, within its role as a DKIM identifier, additional
           semantics cannot be assumed by an Identity Assessor.</t>
         <t> A receive-side DKIM verifier MUST communicate the Signing Domain
           Identifier (d=) to a consuming Identity Assessor module and MAY
           communicate the Agent or User Identifier (i=) if present. </t>
         <t> To the extent that a receiver attempts to intuit any structured
           semantics for either of the identifiers, this is a heuristic
           function that is outside the scope of DKIM's specification and
           semantics. Hence, it is relegated to a higher-level service, such
           as a delivery handling filter that integrates a variety of inputs
           and performs heuristic analysis of them. </t>


         <t>INFORMATIVE DISCUSSION: This document does not require the value
           of the SDID or AUID to match the identifier in any other message header
           field.  This requirement is, instead, an assessor policy issue.
           The purpose of such a linkage would be to authenticate the value in that
           other header field.   This, in turn, is the basis for applying a trust
           assessment based on the identifier value. Trust is a broad and complex topic and
           trust mechanisms are subject to highly creative attacks. The
           real-world efficacy of any but the most basic bindings between the
           SDID or AUID and other identities is not well established, nor is
           its vulnerability to subversion by an attacker. Hence, reliance on
           the use of such bindings should be strictly limited. In
           particular, it is not at all clear to what extent a typical
           end-user recipient can rely on any assurances that might be made
           by successful use of the SDID or AUID.</t>
       </list>
     </t>

   </section>


   <section
     title="RFC 4871, Section 6.3, Interpret Results/Apply Local Policy">
     <t>Original Text: <list>
         <t>
It is beyond the scope of this specification to describe what actions
a verifier system should make, but an authenticated email presents an
opportunity to a receiving system that unauthenticated email cannot.
Specifically, an authenticated email creates a predictable identifier
by which other decisions can reliably be managed, such as trust and
reputation.  Conversely, unauthenticated email lacks a reliable
identifier that can be used to assign trust and reputation.</t>
       </list></t>
     <t>Corrected Text:<list>
         <t>It is beyond the scope of this specification to describe what
           actions an Identity Assessor can make, but mail carrying a
           validated SDID presents an opportunity to an Identity Assessor
           that unauthenticated email does not. Specifically, an
           authenticated email creates a predictable identifier by which
           other decisions can reliably be managed, such as trust and
           reputation.</t>
       </list></t>
   </section>

   <section
     title="RFC 4871, Section 6.3, Interpret Results/Apply Local Policy">
     <t>Original Text: <list>
         <t>
Once the signature has been verified, that information MUST be
conveyed to higher-level systems (such as explicit allow/whitelists
and reputation systems) and/or to the end user.  If the message is
signed on behalf of any address other than that in the From: header
field, the mail system SHOULD take pains to ensure that the actual
signing identity is clear to the reader.
         </t>
       </list>
     </t>
     <t>Corrected Text: <list>
         <t>Once the signature has been verified, that information MUST be
           conveyed to the Identity Assessor (such as an explicit
           allow/whitelist and reputation system) and/or to the end user. If
           the SDID is not the same as the address in the From: header field,
           the mail system SHOULD take pains to ensure that the actual SDID
           is clear to the reader. </t>
       </list>
     </t>
   </section>

   <section
     title="RFC 4871, Appendix D, MUA Considerations">
     <t>
       <list
         style="hanging">
         <t
           hangText="Original Text:  ">The tendency is to have the MUA
           highlight the address associated with this signing identity in
           some way, in an attempt to show the user the address from which
           the mail was sent. </t>
         <t
           hangText="Corrected Text:  "> The tendency is to have the MUA
           highlight the SDID, in an attempt to show the user the identity
           that is claiming responsibility for the message.</t>
       </list>
     </t>
   </section>


   <section
     title="Security Considerations">
     <t>This Update clarifies core details about DKIM's payload. As such, it
       affects interoperability, semantic characterization, and the
       expectations for the identifiers carried with a DKIM signature.
       Clarification of these details is likely to limit misinterpretation of
       DKIM's semantics. Since DKIM is fundamentally a security protocol,
       this should improve its security characteristics.</t>
   </section>

 </middle>


 <back>
   <references
     title="Normative References">
     <reference
       anchor="RFC4871">
       <front>
         <title>DomainKeys Identified Mail (DKIM) Signatures</title>
         <author
           fullname="E. Allman"
           initials="E."
           surname="Allman">
           <organization>Sendmail, Inc.</organization>
         </author>
         <author
           fullname="J. Callas"
           initials="J."
           surname="Callas">
           <organization>PGP Corporation</organization>
         </author>
         <author
           fullname="M. Delany"
           initials="M."
           surname="Delany">
           <organization>Yahoo! Inc</organization>
         </author>
         <author
           fullname="M. Libbey"
           initials="M."
           surname="Libbey">
           <organization>Yahoo! Inc</organization>
         </author>
         <author
           fullname="J. Fenton"
           initials="J."
           surname="Fenton">
           <organization> Cisco Systems, Inc.</organization>
         </author>
         <author
           fullname=" M. Thomas"
           initials="M."
           surname="Thomas">
           <organization> Cisco Systems, Inc.</organization>
         </author>
         <date
           month="May"
           year="2007" />
       </front>
       <seriesInfo
         name="RFC"
         value="4871" />
     </reference>

     <reference anchor="RFC2119">
       <front>
         <title abbrev="RFC Key Words">Key words for use in RFCs to
           Indicate Requirement Levels</title>
         <author fullname="Scott Bradner" initials="S." surname="Bradner">
           <organization>Harvard University</organization>
           <address>
             <postal>
               <street>1350 Mass. Ave. </street>
               <street>Cambridge</street>
               <street>MA 02138</street>
             </postal>
             <phone>- +1 617 495 3864</phone>
             <email>sob@harvard.edu</email>
           </address>
         </author>
         <date month="March" year="1997" />
         <area>General</area>
         <keyword>keyword</keyword>
         <abstract>
           <t> In many standards track documents several words are used
             to signify the requirements in the specification. These
             words are often capitalized. This document defines these
             words as they should be interpreted in IETF documents.
             Authors who follow these guidelines should incorporate this
             phrase near the beginning of their document: </t>
           <t>
             <list>
               <t> The key words &quot;MUST&quot;,
                 &quot;MUST NOT&quot;,
                 &quot;REQUIRED&quot;,
                 &quot;SHALL&quot;, &quot;SHALL
                 NOT&quot;, &quot;SHOULD&quot;,
                 &quot;SHOULD NOT&quot;,
                 &quot;RECOMMENDED&quot;,
                 &quot;MAY&quot;, and
                 &quot;OPTIONAL&quot; in this document are to
                 be interpreted as described in RFC 2119. </t>
             </list>
           </t>
           <t> Note that the force of these words is modified by the
             requirement level of the document in which they are used.
           </t>
         </abstract>
       </front>
       <seriesInfo name="BCP" value="14" />
       <seriesInfo name="RFC" value="2119" />
       <format octets="14486"
         target="http://xml.resource.org/public/rfc/html/rfc2119.html"
         type="HTML" />
       <format octets="5661"
         target="http://xml.resource.org/public/rfc/xml/rfc2119.xml"
         type="XML" />
     </reference>

     <reference anchor='RFC3490'>

       <front>
         <title>Internationalizing Domain Names in Applications (IDNA)</title>
         <author initials='P.' surname='Faltstrom' fullname='P. Faltstrom'>
           <organization /></author>
         <author initials='P.' surname='Hoffman' fullname='P. Hoffman'>
           <organization /></author>
         <author initials='A.' surname='Costello' fullname='A. Costello'>
           <organization /></author>
         <date year='2003' month='March' />
         <abstract>
           <t>Until now, there has been no standard method for domain names to use characters outside the ASCII repertoire.  This document defines internationalized domain names (IDNs) and a mechanism called Internationalizing Domain Names in Applications (IDNA) for handling them in a standard fashion.  IDNs use characters drawn from a large repertoire (Unicode), but IDNA allows the non-ASCII characters to be represented using only the ASCII characters already allowed in so-called host names today.  This backward-compatible representation is required in existing protocols like DNS, so that IDNs can be introduced with no changes to the existing infrastructure.  IDNA is only meant for processing domain names, not free text. [STANDARDS TRACK]</t></abstract></front>

       <seriesInfo name='RFC' value='3490' />
       <format type='TXT' octets='51943' target='ftp://ftp.isi.edu/in-notes/rfc3490.txt' />
     </reference>

   </references>



   <section
     anchor="Acknowledgements"
     title="Acknowledgements">
     <t>This document was initially formulated by an ad hoc design team,
       comprising: Jon Callas, D. Crocker, J. D. Falk, Michael Hammer, Tony
       Hansen, Murray Kucherawy, John Levine, Jeff Macdonald, Ellen Siegel,
       and Wietse Venema. The final version of the document was developed
       through vigorous discussion in the IETF DKIM working group. </t>

   </section>
 </back>
</rfc>
