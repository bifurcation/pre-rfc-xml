<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC6184 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6184.xml">
<!ENTITY RFC6236 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6236.xml">
<!ENTITY RFC6386 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6386.xml">

]>

<rfc submissionType="IETF" ipr="trust200902" number="7742" category="std" consensus="yes">

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

  <front>
    <title abbrev="WebRTC Video">WebRTC Video Processing and Codec Requirements</title>

<!--[rfced] FYI - we will update to "A.B. Roach" in the header in post-xml2rfc
processing.
--> 

    <author initials="A.B." surname="Roach" fullname="Adam Roach">
      <organization>Mozilla</organization>
      <address>
        <postal>
          <street></street>
          <city>Dallas</city>
          <country>United States</country>
        </postal>
        <phone>+1 650 903 0800 x863</phone>
        <email>adam@nostrum.com</email>
      </address>
    </author>


    <date year="2016" month="March" />

<keyword>MTI, mandatory-to-implement</keyword>
    
    
    

    <abstract>


<t>This specification provides the requirements and considerations for WebRTC
applications to send and receive video across a network. It specifies the
video processing that is required as well as video codecs and their parameters.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>One of the major functions of WebRTC endpoints is the ability to send and
receive interactive video. The video might come from a camera, a screen
recording, a stored file, or some other source.  This specification provides
the requirements and considerations for WebRTC applications to send and
receive video across a network. It specifies the video processing that is
required as well as video codecs and their parameters.</t>

<t>Note that this document only discusses those issues dealing with video-codec handling. Issues that are related to transport of media streams
across the network are specified in <xref target="WebRTC-RTP-USAGE"/>.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

<t>The following definitions are used in this document:<list style="symbols">

<t>A WebRTC browser (also called a WebRTC User Agent or WebRTC UA) is
    something that conforms to both the protocol specification and the
    Javascript API (see <xref target="RTCWEB-OVERVIEW"/>).</t>

<t>A WebRTC non-browser is something that conforms to the protocol
    specification, but it does not claim to implement the Javascript API.
    This can also be called a "WebRTC device" or "WebRTC native
    application".</t>

<t>A WebRTC endpoint is either a WebRTC browser or a WebRTC non-browser.  It conforms to the protocol specification.</t>

<t>A WebRTC-compatible endpoint is an endpoint that is able to
    successfully communicate with a WebRTC endpoint but may fail to
    meet some requirements of a WebRTC endpoint.  This may limit where
    in the network such an endpoint can be attached, or it may limit the
    security guarantees that it offers to others.  It is not
    constrained by this specification; when it is mentioned at all, it
    is to note the implications on WebRTC-compatible endpoints of the
    requirements placed on WebRTC endpoints.</t></list></t>

<t>These definitions are also found in <xref target="RTCWEB-OVERVIEW" />
and that document should be consulted for additional information.</t>

</section>
<section anchor="pre-and-post-processing" title="Pre- and Post-Processing">

<t>This section provides guidance on pre- and post-processing of video streams.</t>

<t>Unless specified otherwise by the Session Description Protocol (SDP) or codec, the color space SHOULD be sRGB
<xref target="SRGB"/>.  For clarity, this is the color space indicated by codepoint 1 from
"ColourPrimaries" as defined in <xref target="IEC23001-8"/>.</t>

<t>Unless specified otherwise by the SDP or codec, the video scan pattern for
video codecs is Y&rsquo;CbCr 4:2:0.</t>

<section anchor="camera-source-video" title="Camera-Source Video">

<t>This document imposes no normative requirements on camera capture; however,
implementors are encouraged to take advantage of the following features,
if feasible for their platform:</t>

<t><list style='symbols'>
  <t>Automatic focus, if applicable for the camera in use</t>
  <t>Automatic white balance</t>
  <t>Automatic light-level control</t>
  <t>Dynamic frame rate for video capture based on actual encoding in use
(e.g., if encoding at 15 fps due to bandwidth constraints, low light
conditions, or application settings, the camera will ideally capture at 15
fps rather than a higher rate).</t>
</list></t>

</section>
<section anchor="screen-source-video" title="Screen-Source Video">

<t>If the video source is some portion of a computer screen (e.g., desktop or
application sharing), then the considerations in this section also apply.</t>

<t>Because screen-sourced video can change resolution (due to, e.g., window
resizing and similar operations), WebRTC-video recipients MUST be prepared
to handle midstream resolution changes in a way that preserves their utility.
Precise handling (e.g., resizing the element a video is rendered in versus
scaling down the received stream; decisions around letter/pillarboxing) is
left to the discretion of the application.</t>

<t>Note that the default video-scan format (Y&rsquo;CbCr 4:2:0) is known to be
less than optimal for the representation of screen content produced by
most systems in use at the time of this document&rsquo;s writing, which
generally use RGB with at least 24 bits per sample. In the future, it
may be advisable to use video codecs optimized for screen content for the
representation of this type of content.</t>

<t>Additionally, attention is drawn to the requirements in Section 5.2 of
<xref target="WebRTC-SEC-ARCH"/> and the
considerations in Section 4.1.1. of <xref target="WebRTC-SEC"/>.</t>

</section>
</section>
<section anchor="stream-orientation" title="Stream Orientation">

<t>In some circumstances -- and notably those involving mobile devices -- the
orientation of the camera may not match the orientation used by the encoder.
Of more importance, the orientation may change over the course of a call,
requiring the receiver to change the orientation in which it renders the
stream.</t>

<t>While the sender may elect to simply change the pre-encoding orientation of
frames, this may not be practical or efficient (in particular, in cases where
the interface to the camera returns pre-compressed video frames). Note that
the potential for this behavior adds another set of circumstances under which
the resolution of a screen might change in the middle of a video stream, in
addition to those mentioned in <xref target="screen-source-video" />.</t>


<t>To accommodate these circumstances, WebRTC implementations that can generate
media in orientations other than the default MUST support generating the R0
and R1 bits of the Coordination of Video Orientation (CVO) mechanism described
in Section 7.4.5 of <xref target="TS26.114"/> and MUST send them for all orientations when
the peer indicates support for the mechanism.  They MAY support sending the
other bits in the CVO extension, including the higher-resolution rotation
bits.  All implementations SHOULD support interpretation of the R0 and R1
bits and MAY support the other CVO bits.</t>

<t>Further, some codecs support in-band signaling of orientation (for example,
the SEI "Display Orientation" messages in H.264 and H.265 <xref target="H265" />). If CVO has been
negotiated, then the sender MUST NOT make use of such codec-specific mechanisms.
However, when support for CVO is not signaled in the SDP, then such
implementations MAY make use of the codec-specific mechanisms instead.</t>

</section>
<section anchor="mandatory-to-implement-video-codec" title="Mandatory-to-Implement Video Codec">

<t>For the definitions of "WebRTC browser", "WebRTC non-browser", and
"WebRTC-compatible endpoint" as they are used in this section, please
refer to <xref target="terminology"/>.</t>

<t>WebRTC Browsers MUST implement the VP8 video codec as described in <xref target="RFC6386"/>
and H.264 Constrained Baseline as described in <xref target="H264"/>.</t>

<t>WebRTC Non-Browsers that support transmitting and/or receiving video MUST
implement the VP8 video codec as described in <xref target="RFC6386"/> and H.264
Constrained Baseline as described in <xref target="H264"/>.</t>

<t><list style='empty'>
  <t>NOTE: To promote the use of non-royalty-bearing video codecs, participants in
the RTCWEB working group, and any successor working groups in the IETF, intend
to monitor the evolving licensing landscape as it pertains to the two
mandatory-to-implement codecs. If compelling evidence arises that one of the
codecs is available for use on a royalty-free basis, the working group plans
to revisit the question of which codecs are required for Non-Browsers, with
the intention being that the royalty-free codec will remain mandatory to
implement and the other will become optional.</t>
</list></t>

<t><list style='empty'>
  <t>These provisions apply to WebRTC Non-Browsers only. There is no plan to
revisit the codecs required for WebRTC Browsers.</t>
</list></t>

<t>"WebRTC-compatible endpoints" are free to implement any video codecs they see
fit. This follows logically from the definition of "WebRTC-compatible
endpoint". It is, of course, advisable to implement at least one of the video
codecs that is mandated for WebRTC browsers, and implementors are encouraged
to do so.</t>

</section>
<section anchor="codec-specific-considerations" title="Codec-Specific Considerations">

<t>SDP allows for codec-independent indication of preferred video resolutions
using the mechanism described in <xref target="RFC6236"/>. WebRTC endpoints MAY send an
"a=imageattr" attribute to indicate the maximum resolution they wish to
receive. Senders SHOULD interpret and honor this attribute by limiting the
encoded resolution to the indicated maximum size, as the receiver may not be
capable of handling higher resolutions.</t>

<t>Additionally, codecs may include codec-specific means of signaling maximum
receiver abilities with regard to resolution, frame rate, and bitrate.</t>

<t>Unless otherwise signaled in SDP, recipients of video streams MUST be able to
decode video at a rate of at least 20 fps at a resolution of at least 320 pixels
by 240 pixels.
These values are selected based on the recommendations in <xref target="HSUP1"/>.</t>

<t>Encoders are encouraged to support encoding media with at least the same
resolution and frame rates cited above.</t>

<section anchor="vp8" title="VP8">

<t>For the VP8 codec, defined in <xref target="RFC6386"/>, endpoints MUST support
the payload formats defined in <xref target="RFC7741"/>.</t>

<t>In addition to the <xref target="RFC6236"/> mechanism, VP8 encoders MUST limit the
streams they send to conform to the values indicated by receivers in the
corresponding max-fr and max-fs SDP attributes.</t>

<t>Unless otherwise signaled, implementations that use VP8 MUST encode and
decode pixels with an implied 1:1 (square) aspect ratio.</t>

</section>
<section anchor="h264" title="H.264">

<t>For the <xref target="H264"/> codec, endpoints MUST support the payload formats
defined in <xref target="RFC6184"/>. In addition, they MUST support Constrained Baseline
Profile Level 1.2 and SHOULD support H.264 Constrained High Profile
Level 1.3.</t>

<t>Implementations of the H.264 codec have utilized a wide variety of optional
parameters.  To improve interoperability, the following parameter settings are
specified:</t>

<t><list style='hanging'>
  <t hangText='packetization-mode:'>
  Packetization-mode 1 MUST be supported. Other modes MAY be negotiated and
used.</t>
  <t hangText='profile-level-id:'>
  Implementations MUST include this parameter within SDP and MUST interpret
it when receiving it.</t>

  <t hangText='max-mbps, max-smbps, max-fs, max-cpb, max-dpb, and max-br:'>
<vspace blankLines="0"/>
  These parameters allow the implementation to specify that they can support
certain features of H.264 at higher rates and values than those signaled by
their level (set with profile-level-id).  Implementations MAY include these
parameters in their SDP, but they SHOULD interpret them when receiving them,
allowing them to send the highest quality of video possible.</t>
  <t hangText='sprop-parameter-sets:'>
  H.264 allows sequence and picture information to be sent both in-band and
out-of-band.  WebRTC implementations MUST signal this information in-band.
This means that WebRTC implementations MUST NOT include this parameter in
the SDP they generate.</t>
</list></t>



<t>H.264 codecs MAY send and MUST support proper interpretation of Supplemental Enhancement Information (SEI) "filler
payload" and "full frame freeze" messages. The "full frame freeze" messages are
used in video-switching MCUs, to ensure a stable decoded displayed picture
while switching among various input streams.</t>

<t>When the use of the video orientation (CVO) RTP header extension is not
signaled as part of the SDP, H.264 implementations MAY send and SHOULD support
proper interpretation of Display Orientation SEI messages.</t>

<t>Implementations MAY send and act upon "User data registered by Rec. ITU-T
T.35" and "User data unregistered" messages. Even if they do not act on them,
implementations MUST be prepared to receive such messages without any ill
effects.</t>

<t>Unless otherwise signaled, implementations that use H.264 MUST encode and
decode pixels with an implied 1:1 (square) aspect ratio.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>This specification does not introduce any new mechanisms or security concerns
beyond what is in the other documents it references. In WebRTC, video is protected
using Datagram Transport Layer Security  (DTLS) / Secure Real-time Transport Protocol (SRTP). A complete discussion of the security considerations can be found in
<xref target="WebRTC-SEC"/> and <xref target="WebRTC-SEC-ARCH"/>.
Implementors should consider whether the use of variable bitrate video codecs
are appropriate for their application, keeping in mind that the degree of
inter-frame change (and, by inference, the amount of motion in the frame) may
be deduced by an eavesdropper based on the video stream&rsquo;s bitrate.</t>

<t>Implementors making use of H.264 are also advised to take careful note of the
"Security Considerations" section of <xref target="RFC6184"/>, paying special regard to the
normative requirement pertaining to SEI messages.</t>

</section>




  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
<reference anchor="H264" target="http://www.itu.int/rec/T-REC-H.264">
  <front>
    <title>Advanced video coding for generic audiovisual services (V9)</title>
    <author >
      <organization>ITU-T</organization>
    </author>
    <date year="2014" month="February"/>
  </front>
<seriesInfo name="ITU-T" value="Recommendation H.264" />
</reference>

<reference anchor="HSUP1" target="http://www.itu.int/rec/T-REC-H.Sup1">
  <front>
    <title>Application profile - Sign language and lip-reading real-time conversation using low bit rate video communication</title>
    <author >
      <organization>ITU-T</organization>
    </author>
    <date year="1999" month="May"/>
  </front>
<seriesInfo name="ITU-T" value="Recommendation H.Sup1" />
</reference>

&RFC6184;
&RFC6236;
&RFC6386;
<!--&I-D.ietf-payload-vp8; Companion document; RFC 7741-->

<reference anchor='RFC7741' target='http://www.rfc-editor.org/info/rfc7741'>
<front>
<title>RTP Payload Format for VP8 Video</title>

<author initials='P' surname='Westin' fullname='Patrik Westin'>
    <organization />
</author>

<author initials='H' surname='Lundin' fullname='Henrik Lundin'>
    <organization />
</author>

<author initials='M' surname='Glover' fullname='Michael Glover'>
    <organization />
</author>

<author initials='J' surname='Uberti' fullname='Justin Uberti'>
    <organization />
</author>

<author initials='F' surname='Galligan' fullname='Frank Galligan'>
    <organization />
</author>

<date month='March' year='2016' />

<abstract><t>This memo describes an RTP payload format for the VP8 video codec. The payload format has wide applicability, as it supports applications from low bit-rate peer-to-peer usage, to high bit-rate video conferences.</t></abstract>

</front>

<seriesInfo name='RFC' value='7741' />
<seriesInfo name="DOI" value="10.17487/RFC7741"/>
</reference>



<reference anchor="SRGB" target="https://webstore.iec.ch/publication/6169">
  <front>
    <title>Multimedia systems and equipment - Colour measurement and management - Part 2-1: Colour management - Default RGB colour space - sRGB.</title>
    <author >
      <organization>IEC</organization>
    </author>
    <date year="1999" month="October"/>
  </front>
<seriesInfo name="IEC" value="61966-2-1" />
</reference>


<reference anchor="IEC23001-8" target="http://standards.iso.org/ittf/PubliclyAvailableStandards/c062088_ISO_IEC_23001-8_2013.zip">
  <front>
    <title>Coding independent media description code points</title>
    <author>
      <organization>ISO/IEC</organization>
    </author>
    <date year="2013"/>
  </front>
<seriesInfo name="ISO/IEC" value="23001-8:2013/DCOR1"/>
</reference>


<reference anchor="TS26.114" target="http://www.3gpp.org/DynaReport/26114.htm">
  <front>
    <title>IP Multimedia Subsystem (IMS); Multimedia Telephony; Media handling and interaction</title>
    <author >
      <organization>3GPP</organization>
    </author>
    <date year="2015" month="December"/>
  </front>
  <seriesInfo name="TS" value="26.114" />
 <seriesInfo name="Version" value="13.2.0" />
</reference>


    </references>

    <references title='Informative References'>

<!--&I-D.ietf-rtcweb-overview; Moved to Informative per RFC ED note; I-D Exists-->


<reference anchor="H265" target="http://www.itu.int/rec/T-REC-H.265">
  <front>
    <title>High efficiency video coding</title>
    <author >
      <organization>ITU-T</organization>
    </author>
    <date year="2015" month="April"/>
  </front>
<seriesInfo name="ITU-T" value="Recommendation H.265" />
</reference>


<reference anchor='RTCWEB-OVERVIEW'>
<front>
<title>Overview: Real Time Protocols for Browser-based Applications</title>

<author initials='H' surname='Alvestrand' fullname='Harald Alvestrand'>
    <organization />
</author>

<date month='June' day='16' year='2015' />

<abstract><t>This document gives an overview and context of a protocol suite intended for use with real-time applications that can be deployed in browsers - "real time communication on the Web".  It intends to serve as a starting and coordination point to make sure all the parts that are needed to achieve this goal are findable, and that the parts that belong in the Internet protocol suite are fully specified and on the right publication track.  This document is an Applicability Statement - it does not itself specify any protocol, but specifies which other specifications WebRTC compliant implementations are supposed to follow.  This document is a work item of the RTCWEB working group.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-ietf-rtcweb-overview-14' />
</reference>


<!--&I-D.ietf-rtcweb-rtp-usage;; in queue; MISSREF -->



<reference anchor='WebRTC-RTP-USAGE'>
<front>
<title>Web Real-Time Communication (WebRTC): Media Transport and Use of RTP</title>

<author initials='C' surname='Perkins' fullname='Colin Perkins'>
    <organization />
</author>

<author initials='M' surname='Westerlund' fullname='Magnus Westerlund'>
    <organization />
</author>

<author initials='J' surname='Ott' fullname='Joerg Ott'>
    <organization />
</author>

<date month='June' day='12' year='2015' />

<abstract><t>The Web Real-Time Communication (WebRTC) framework provides support for direct interactive rich communication using audio, video, text, collaboration, games, etc. between two peers' web-browsers.  This memo describes the media transport aspects of the WebRTC framework. It specifies how the Real-time Transport Protocol (RTP) is used in the WebRTC context, and gives requirements for which RTP features, profiles, and extensions need to be supported.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-ietf-rtcweb-rtp-usage-25' />
</reference>


<!--&I-D.ietf-rtcweb-security; Publication requested waiting for WG Chair Go-Ahead-->



<reference anchor='WebRTC-SEC'>
<front>
<title>Security Considerations for WebRTC</title>

<author initials='E' surname='Rescorla' fullname='Eric Rescorla'>
    <organization />
</author>

<date month='February' day='26' year='2015' />

<abstract><t>The Real-Time Communications on the Web (RTCWEB) working group is tasked with standardizing protocols for real-time communications between Web browsers, generally called "WebRTC".  The major use cases for WebRTC technology are real-time audio and/or video calls, Web conferencing, and direct data transfer.  Unlike most conventional real-time systems (e.g., SIP-based soft phones) WebRTC communications are directly controlled by a Web server, which poses new security challenges.  For instance, a Web browser might expose a JavaScript API which allows a server to place a video call.  Unrestricted access to such an API would allow any site which a user visited to "bug" a user's computer, capturing any activity which passed in front of their camera.  This document defines the WebRTC threat model and analyzes the security threats of WebRTC in that model.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-ietf-rtcweb-security-08' />

</reference>

<!--&I-D.ietf-rtcweb-security-arch; Pub requested. Waiting WG Chair Go-Ahead-->



<reference anchor='WebRTC-SEC-ARCH'>
<front>
<title>WebRTC Security Architecture</title>

<author initials='E' surname='Rescorla' fullname='Eric Rescorla'>
    <organization />
</author>

<date month='March' day='7' year='2015' />

<abstract><t>The Real-Time Communications on the Web (RTCWEB) working group is tasked with standardizing protocols for enabling real-time communications within user-agents using web technologies (commonly called "WebRTC").  This document defines the security architecture for WebRTC.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-ietf-rtcweb-security-arch-11' />

</reference>


    </references>

<section anchor="acknowledgements" title="Acknowledgements" numbered="no">

<t>The author would like to thank Gaelle Martin-Cocher, Stephan Wenger, and
Bernard Aboba for their detailed feedback and assistance with this document.
Thanks to Cullen Jennings for providing text and review and to Russ Housley
for a careful final review. This document includes text that originally appeared in "WebRTC Codec and Media Processing Requirements" (March 2012).</t>

</section>

  </back>
</rfc>

