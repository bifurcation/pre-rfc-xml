<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes"?>
<?rfc symrefs="no"?>
<?rfc compact="yes" ?>
<?rfc subcompact="no"?>
<?rfc sortrefs="yes" ?>
<?rfc rfcedstyle="yes"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
					<!ENTITY rfc0793
					PUBLIC ''  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0793'>   

<!ENTITY rfc4080
					PUBLIC ''  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4080'>   
<!ENTITY rfc4081
					PUBLIC ''  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4081'>   

<!ENTITY rfc2119
					PUBLIC ''  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119'>   
<!ENTITY rfc4347
					PUBLIC ''  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4347'>    
<!ENTITY rfc4960
					PUBLIC ''  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4960'>  

<!ENTITY rfc3758
					PUBLIC ''  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3758'>      

<!ENTITY rfc5746
					PUBLIC ''  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5746'>  

<!ENTITY rfc4895
					PUBLIC ''  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4895'>  

<!ENTITY rfc5971
					PUBLIC ''  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5971'>

<!ENTITY rfc5978
					PUBLIC ''  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5978'>
]>

<!--[rfced] Please note that after you have approved the document,
post-xml2rfc changes will be made to update the header and
boilerplate as described in RFC 5741.
-->

<rfc number="6084" category="exp" ipr="pre5378Trust200902" submissiontype="IETF">
	<front>
			<title abbrev="GIST over SCTP and DTLS">General Internet Signaling Transport (GIST) over&nbsp;Stream&nbsp;Control&nbsp;Transmission&nbsp;Protocol&nbsp;(SCTP) and&nbsp;Datagram&nbsp;Transport&nbsp;Layer&nbsp;Security&nbsp;(DTLS)</title>
			<author initials="X." surname="Fu" fullname="Xiaoming Fu">
				<organization abbrev="University of Goettingen"> University of Goettingen </organization>
				<address>
					<postal>
						<street>Institute of Computer Science </street>
						<street>Goldschmidtstr. 7 </street>
               						<city>Goettingen</city>
						<code>37077</code>
						<country>Germany</country>
					</postal>
					<email>fu@cs.uni-goettingen.de</email>
				</address>
			</author>
			<author initials="C." surname="Dickmann" fullname="Christian Dickmann">
				<organization abbrev="University of Goettingen"> University of Goettingen </organization>
				<address>
					<postal>
						<street>Institute of Computer Science </street>
						<street>Goldschmidtstr. 7</street>
						<city>Goettingen</city>
						<code>37077</code>
						<country>Germany</country>
					</postal>
					<email>mail@christian-dickmann.de</email>
				</address>
			</author>
			<author initials="J." surname="Crowcroft" fullname="Jon Crowcroft">
				<organization abbrev="University of Cambridge"> University of Cambridge </organization>
				<address>
					<postal>
						<street>Computer Laboratory </street>
						<street>William Gates Building </street>
						<street>15 JJ Thomson Avenue</street>
						<city>Cambridge</city>
						<code>CB3 0FD</code>
						<country>UK</country>
					</postal>
					<email>jon.crowcroft@cl.cam.ac.uk</email>
				</address>
			</author>
			
		<date month="January" year="2011"/>
		<area>Transport</area>

		<abstract>
			<t>The General Internet Signaling Transport (GIST) protocol currently uses TCP or Transport Layer Security (TLS) over TCP for 
				Connection mode operation.  This document describes the usage of GIST over the Stream Control
				Transmission Protocol (SCTP) and Datagram Transport Layer Security (DTLS).</t>
		</abstract>
	</front>
	<middle>
		
		<section anchor="introduction" title="Introduction">
			<t> This document describes the usage of the General Internet
				Signaling Transport (GIST) protocol <xref target="RFC5971"/> and Datagram Transport Layer Security (DTLS) 
<xref target="RFC4347"/>.</t>
			
			<t> GIST, in its initial specification for
				Connection mode (C-mode)
				operation, runs on top of a byte-stream-oriented transport
				protocol providing a reliable, in-sequence delivery, i.e., using
				the Transmission Control Protocol (TCP) <xref target="RFC0793"/>
				for signaling message transport. However, some Next Steps in Signaling (NSIS) Signaling Layer Protocol (NSLP) <xref target="RFC4080"/> context
				information has a definite lifetime; therefore, the GIST transport
				protocol could benefit from flexible retransmission, so stale NSLP
				messages that are held up by congestion can be dropped. Together
				with the head-of-line blocking and multihoming issues with TCP,
				these considerations argue that implementations of GIST should
				support SCTP
				as an optional transport protocol for GIST. Like TCP, SCTP supports reliability, congestion
				control, and fragmentation. Unlike TCP, SCTP provides a number of
				functions that are desirable for signaling transport, such as
				multiple streams and multiple IP addresses for path failure
				recovery.

   Furthermore, SCTP offers an advantage of message-oriented transport
   instead of using the byte-stream-oriented TCP where the framing
   mechanisms must be provided separately.


 In addition, its Partial Reliability extension (PR-SCTP) <xref target="RFC3758"/>
				supports partial retransmission based on a programmable
				retransmission timer. Furthermore, DTLS
provides a viable solution for securing SCTP <xref target="RFC6083"/>, which
allows SCTP to use almost all of its transport features and its extensions.
			</t>
			
			<t> This document defines the use of SCTP as the underlying transport protocol for GIST and the use of DTLS as a security mechanism for protecting GIST Messaging Associations
				and discusses the implications on GIST state maintenance and API between GIST and NSLPs. 
      Furthermore, this document describes how GIST is transported over
 SCTP and used by NSLPs in order to exploit the
      additional capabilities offered by SCTP to deliver GIST C-mode
 messages more effectively. More
				specifically:
				<!-- TODO: are these really covered in this document? (christian.dickmann) -->
				<list style="symbols">
					<t>  How to use the multiple streams feature of SCTP.</t>
					<t>  How to use the PR-SCTP extension of SCTP.</t>
					<!-- <t>  how to handle the message oriented nature of SCTP.</t>-->
					<t>  How to take advantage of the multihoming support of SCTP.</t>

				</list>
			</t>
			
			<t>    GIST over SCTP as described in this
document does not require any changes to the high-level
    operation and structure of GIST. However, adding new transport
options requires additional interface code and configuration
    support to allow applications to exploit the additional transport
when appropriate. In addition, SCTP implementations to transport GIST MUST support
				the optional feature of fragmentation of SCTP user messages.</t>

                        <t>Additionally, this document also specifies how to establish 
                        GIST security using DTLS for use in combination with, e.g., SCTP and UDP. 
</t>
			
		</section>
		
		<section title="Terminology and Abbreviations">
			<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
            "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
            and "OPTIONAL" in this document are to be interpreted as
            described in <xref target="RFC2119"/>. Other terminologies and abbreviations used in this document 
				are taken from related specifications (<xref target="RFC5971"/>, 
              <xref target="RFC4347"/>, 
              <xref target="RFC3758"/>, <xref target="RFC4960"/>):
				<list style="symbols">
					<t>SCTP - Stream Control Transmission Protocol</t>
					<t>PR-SCTP - SCTP Partial Reliability Extension</t>
					<t>MRM - Message Routing Method</t>
					<t>MRI - Message Routing Information</t>
					<t>SCD - Stack-Configuration-Data</t>
					<t>Messaging Association (MA)  - A single connection between
						two explicitly identified GIST adjacent peers, i.e., between a given
      signaling source and destination address. A messaging association may
						use a transport protocol; if security
						protection is required, it may use a specific network layer security
						association, or use a transport layer security association internally.
						A messaging association is bidirectional: signaling messages can be
						sent over it in either direction, referring to flows of either
						direction. </t>
					<t>SCTP Association -  A protocol relationship between SCTP endpoints,
      composed of the two SCTP endpoints and protocol state information. An association can be
      uniquely identified by the transport addresses used by the
      endpoints in the association.  Two SCTP endpoints MUST NOT have
      more than one SCTP association between them at any given time. </t>
					<t>Stream - A unidirectional logical channel established from one to
      another associated SCTP endpoint, within which all user messages
      are delivered in sequence except for those submitted to the
      unordered delivery service.</t>
				</list> 
			</t>

		</section>
		
		<section title="GIST over SCTP">
					<t>This section defines a new
MA-Protocol-ID type, "Forwards-SCTP", 
                       for using SCTP as the GIST transport protocol. The use of DTLS in GIST is defined in Section 7.
                    </t>
			<section title="Message Association Setup">
				<section title="Overview">
					<t>The basic GIST protocol specification defines two possible 
						protocols to be used in Messaging Associations, namely Forwards-TCP and
						TLS. This information is a main part of the Stack Configuration Data (SCD) <xref target="RFC5971"/>. 
                       This section adds Forwards-SCTP (value 3) as another possible protocol option. 
						In Forwards-SCTP, analog to Forwards-TCP, connections between peers are opened 
						in the forwards direction, from the querying node, towards the responder. 
					</t>

				</section>
				
				<section title="Protocol-Definition: Forwards-SCTP">
					<t>The MA-Protocol-ID "Forwards-SCTP" denotes a basic use of SCTP between peers.
				 	   Support for this protocol is OPTIONAL. If this protocol is offered,
					   MA-protocol-options data MUST also be carried in the SCD object. The
					   MA-protocol-options field formats are:
						<list style="symbols">
							<t>in a Query: no information apart from the field header.</t>
							<t>in a Response: 2-byte port number at which the connection will be
						       accepted, followed by 2 pad bytes.</t>
						</list>
					</t>
					<t>The connection is opened in the forwards direction, from the querying
					   node towards the responder. The querying node MAY use any source
					   address and source port. The destination for establishing the message
                                           association MUST be derived
					   from information in the
					   Response: the address from
					   the interface-address in the Network-Layer-Information object and the port from
					   the SCD object as described above.
	   				</t>
	   				
	   				<t>Associations using Forwards-SCTP can carry messages with the transfer
					   attribute Reliable=True. If an error occurs on the SCTP connection
					   such as a reset, as can be
					   reported by an SCTP socket
					   API notification <xref target="SCTP_SOCKET"/>, GIST MUST report this to NSLPs as discussed in
					   Section 4.1.2 of
					   <xref
					   target="RFC5971"/>. For
					   the multihoming scenario,
					   when a destination address
					   of a GIST-over-SCTP peer
					   encounters a change, the
					   SCTP API will notify GIST
					   about the availability of
					   different SCTP endpoint
					   addresses and the possible change of the primary path. 					</t>
	   		
				</section>
			</section>
			
			<section title="Effect on GIST State Maintenance">
				<t>As SCTP provides additional functionality
					over TCP, this section discusses the implications of using GIST over SCTP
					on GIST state maintenance.
				</t>
				
				<t>While SCTP defines unidirectional streams, for the purpose of this document,
				   the concept of a bidirectional stream is
used. 

Implementations MUST establish both downstream and upstream
(unidirectional) SCTP streams and use the same stream
identifier in both directions.


 Thus, the two unidirectional streams (in opposite directions) 
				   form a bidirectional stream.
				</t>
					
				<t> Due to the multi-streaming support of SCTP, it is possible to use different 
					SCTP streams for different resources (e.g., different NSLP sessions), rather than maintaining
					all messages along the same transport connection/association
					in a correlated fashion as TCP (which imposes strict (re)ordering and
					reliability per transport level). However, there are limitations to the
					use of multi-streaming.
					When an SCTP implementation is used for GIST transport, all GIST messages for a particular session MUST be sent over 
					the same SCTP stream to assure the NSLP assumption of in-order delivery.
					Multiple sessions MAY share the same SCTP stream based on local policy.
				</t>
				
				<t>The GIST concept of Messaging Association re-use is not affected by this document 
					or the use of SCTP. All rules defined in the GIST specification remain valid in the
					context of GIST over SCTP.
				</t>
				
			</section>
			
			<section anchor="pr-sctp" title="PR-SCTP Support"> 
				
				<t>A variant of SCTP, PR-SCTP <xref target="RFC3758"/> provides a 
					"timed reliability" service, which would be particularly useful for delivering 
                                        GIST Connection mode messages. 
                                       It allows the user to specify, on a per-message basis, the rules governing how persistent the transport
					service should be in attempting to send the message to the
					receiver. Because of the chunk bundling function of SCTP, reliable and
					partially reliable messages can be multiplexed over a single PR-SCTP
					association.  Therefore, an SCTP implementation for GIST transport SHOULD
					attempt to establish a PR-SCTP association using "timed reliability" service instead of a standard SCTP
					association, if available, to support more flexible transport features
					for potential needs of different NSLPs.  
				</t>
<t>When using a normally reliable session (as opposed to a partially reliable session), if a node has sent the first transmission before the lifetime
   expires, then the message MUST be sent as a normal reliable message.
  During episodes of congestion, this is particularly unfortunate, as
   retransmission wastes bandwidth that could have been used for other
   (non-lifetime expired) messages. The "timed reliability" service in PR-SCTP eliminates this issue and is hence RECOMMENDED to be used for GIST over PR-SCTP.
</t>
			</section>
			
			<section title="API between GIST and NSLP">
				<t>The GIST specification defines an abstract
API between GIST and NSLPs. While this document does			not
change the API itself, the semantics of some parameters have slightly different
					interpretations in the context of SCTP. This section only lists those primitives and
					parameters that need special consideration when used in the context of SCTP.
					The relevant primitives from <xref target="RFC5971"/> are as follows: 
				<list style="symbols">
					<t>The Timeout parameter in API "SendMessage": 
According to <xref target="RFC5971"/>, this parameter represents the "length of time GIST should attempt to send this message
      before indicating an error".  When used with PR&nbhy;SCTP, this parameter
				is used as the timeout for the "timed reliability" service of PR-SCTP. 
					</t>
				<t> "NetworkNotification": According to <xref target="RFC5971"/>, this primitive "is passed from GIST to a signalling application. It indicates that a network event of possible interest to the signalling
   application occurred".  Here, if SCTP detects a failure of the primary path,  
GIST SHOULD also indicate this event to the NSLP by calling this primitive with Network-Notification-Type "Routing Status Change". This notification should be done even if SCTP was able to retain an open connection to the peer due to its multihoming capabilities. </t>
</list>
</t>
		</section>
		</section>
		
		<section title="Bit-Level Formats">
			<section title="MA-Protocol-Options">
				<t>This section provides the bit-level format for the MA-protocol-options field that is used
					for SCTP protocol in the Stack-Configuration-Data object of GIST.
				</t>
				<t>
					<figure>
						<artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:       SCTP port number        |         Reserved              :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+	

SCTP port number  = Port number at which the responder will accept
                    SCTP connections
]]>
						</artwork>
					</figure>
				</t>
				<t>The SCTP port number is only supplied if sent by the
					responder.
				</t>
			</section>
		</section>
		

		<section title="Application of GIST over SCTP">
			<section title="Multihoming Support of SCTP">
				<t>In general, the multihoming support of SCTP can be used to improve fault-tolerance in case of a
				   path or link failure. Thus, GIST over SCTP would be able to deliver NSLP messages between peers
				   even if the primary path is not working anymore. However, for the Message Routing Methods (MRMs) defined
				   in the basic GIST specification, such a feature is only of limited use. The default MRM is 
				   path-coupled, which means that if the primary path is failing for the SCTP association, it
				   most likely is also failing for the IP traffic that is signaled for. Thus, GIST would need to perform
				   a refresh to the NSIS nodes to the alternative path anyway to cope with the route change. When the two endpoints of a multihomed SCTP association (but none of the intermediate nodes between them) 
                   support NSIS, GIST over SCTP provides a robust means for GIST to deliver NSLP messages even when the primary path fails but at least one alternative path between these (NSIS-enabled) endpoints of the multihomed path is available.
Additionally, the use of the multihoming 
				   support of SCTP provides GIST and the NSLP with another source to detect route changes. 
				   Furthermore, for the time between detection of the route change and recovering from it, the
				   alternative path offered by SCTP can be used by the NSLP to make the transition more smoothly.
				   Finally, future MRMs might have different properties and therefore benefit from multihoming
				   more broadly.
				</t>
			</section>
                <section title="Streaming Support in SCTP">
		<t>Streaming support in SCTP is advantageous for GIST. It
allows better parallel processing, in particular by avoiding the head-of-line
blocking issue in TCP. Since a single GIST MA may be reused by multiple
sessions, using TCP as the transport for GIST signaling messages belonging to different sessions may be blocked if another message is dropped. In the case of SCTP, this can be avoided, as different sessions having different requirements can belong to different streams; thus, a
message loss or reordering in a stream will only affect the delivery of messages within that particular stream, and not
any other streams. </t>
</section>

		</section>

                <section title="NAT Traversal Issue">
<t>NAT traversal for GIST over SCTP will follow Section 7.2 of  <xref target="RFC5971"/> and the GIST extensibility capabilities defined in <xref target="RFC5978"/>. This specification does not define NAT traversal procedures for GIST over SCTP, although an approach for SCTP NAT traversal is described in <xref target="SCTP_NAT"/>. 
</t>
			</section>
		
		<section title="Use of DTLS with GIST">

<t>This section specifies a new MA-Protocol-ID "DTLS" (value 4) for the use of
   DTLS in GIST, which denotes a basic use of datagram transport layer
   channel security, initially in conjunction with GIST over SCTP.  It
   provides server (i.e., GIST transport receiver) authentication and
   integrity (as long as the NULL ciphersuite is not selected during
   ciphersuite negotiation), as well as optionally replay protection
   for control packets. The use of DTLS for securing GIST over SCTP
   allows GIST to take the advantage of features provided by SCTP and
   its extensions. The usage of DTLS for GIST over SCTP is similar to
   TLS for GIST as specified in <xref target="RFC5971"/>,
   where a stack-proposal containing both MA-Protocol-IDs for SCTP and
   DTLS during the GIST handshake phase. </t>

<t>  The usage of DTLS <xref target="RFC4347"/> for securing GIST over datagram transport protocols MUST be implemented and SHOULD be 
used. </t>

<t>   GIST message associations using DTLS may carry messages with transfer attributes requesting
   confidentiality or integrity protection. The specific DTLS version
   will be negotiated within the DTLS layer itself, but implementations
   MUST NOT negotiate to protocol versions prior to DTLS v1.0 and MUST
   use the highest protocol version supported by both peers. 
NULL authentication and integrity ciphers MUST NOT be negotiated for GIST nodes supporting DTLS. 
For confidentiality ciphers, nodes can negotiate the NULL ciphersuites. 
The same rules for negotiating TLS ciphersuites 
   as specified in  Section  5.7.3 of <xref target="RFC5971"/> apply. </t>
   <t>DTLS renegotiation <xref target="RFC5746"/> may cause problems for applications such
   that connection security parameters can change without the application
   knowing it. Hence, it is RECOMMENDED that renegotiation be
   disabled for GIST over DTLS.</t>

<t>   No MA-protocol-options field is required for DTLS. The configuration information for the transport protocol
   over which DTLS is running (e.g., SCTP port number) is provided by the
   MA-protocol-options for that protocol.
</t>
		</section>

		<section anchor="security" title="Security Considerations">
			<t> The security considerations of <xref target="RFC5971"/>, 
				 <xref target="RFC4960"/>, and <xref target="RFC4347"/> apply. Additionally, although <xref target="RFC6083"/> 
				 does not support replay detection in DTLS over SCTP, the SCTP replay protection mechanisms 
				 <xref target="RFC4960"/> <xref target="RFC4895"/> should be able to protect NSIS messages transported using GIST over (DTLS over) SCTP from  
				 replay attacks. </t>
		</section>
		
		<section anchor="IANA Considerations" title="IANA Considerations">
			<t>
According to this specification, IANA has registered the following codepoints (MA-Protocol-IDs) in a registry created by <xref target="RFC5971"/>:
					<figure>
						<artwork><![CDATA[
  +---------------------+------------------------------------------+
  | MA-Protocol-ID      | Protocol                                 |
  +---------------------+------------------------------------------+
  | 3                   | SCTP opened in the forwards direction    |
  |                     |                                          |
  | 4                   | DTLS initiated in the forwards direction |
  +---------------------+------------------------------------------+
]]>
						</artwork>
					</figure>
</t>
<t> Note that MA-Protocol-ID "DTLS" is never used alone but always coupled with a transport protocol specified in the stack proposal.</t>
		</section>
		<section title="Acknowledgments">
			<t>The authors would like to thank 
				John Loughney, Jukka Manner, Magnus Westerlund, Sean Turner, Lars Eggert, Jeffrey Hutzelman, Robert Hancock, Andrew McDonald, Martin Stiemerling, Fang-Chun Kuo, Jan Demter, Lauri Liuhto, Michael Tuexen, and Roland Bless
				for their helpful suggestions.
			</t>
		</section>
	</middle>
	
	<back>
		<references title="Normative References">
			&rfc2119;
			&rfc5971;
			&rfc4960;
            &rfc4347;
            &rfc4895;
            &rfc5746;
			&rfc3758;

<!-- ietf-tsvwg-dtls-for-sctp as RFC 6083 -->
<reference anchor='RFC6083'>
<front>
<title>Datagram Transport Layer Security (DTLS) for Stream Control Transmission Protocol (SCTP)</title>

<author initials='M' surname='Tuexen' fullname='Michael Tuexen'>
    <organization />
</author>

<author initials='R' surname='Seggelmann' fullname='Robin Seggelmann'>
    <organization />
</author>

<author initials='E' surname='Rescorla' fullname='Eric Rescorla'>
    <organization />
</author>

<date month='January' year='2011' />

</front>

<seriesInfo name='RFC' value='6083' />

</reference>


		</references>
		
		<references title="Informative References">
			&rfc0793;
			&rfc4080;
&rfc5978;

<reference anchor='SCTP_NAT'>
<front>
<title>Stream Control Transmission Protocol (SCTP) Network Address Translation</title>

<author initials='R' surname='Stewart' fullname='Randall Stewart'>
    <organization />
</author>

<author initials='M' surname='Tuexen' fullname='Michael Tuexen'>
    <organization />
</author>

<author initials='I' surname='Ruengeler' fullname='Irene Ruengeler'>
    <organization />
</author>

<date month='December' year='2010' />

</front>

<seriesInfo name='Work in' value='Progress' />
</reference>

<reference anchor='SCTP_SOCKET'>
<front>
<title>Sockets API Extensions for Stream Control Transmission Protocol (SCTP)</title>

<author initials='R' surname='Stewart' fullname='Randall Stewart'>
    <organization />
</author>

<author initials='K' surname='Poon' fullname='Kacheong Poon'>
    <organization />
</author>

<author initials='M' surname='Tuexen' fullname='Michael Tuexen'>
    <organization />
</author>

<author initials='V' surname='Yasevich' fullname='Vladislav Yasevich'>
    <organization />
</author>

<author initials='P' surname='Lei' fullname='Peter Lei'>
    <organization />
</author>

<date month='January' year='2011' />

</front>
<seriesInfo name='Work in' value='Progress' />
</reference>

		</references>
	</back>
</rfc>
