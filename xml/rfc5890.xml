<?xml version="1.0" encoding="US-ASCII"?>
        
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY rfc2119 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc1034 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY rfc1035 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY rfc2181 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY rfc2673 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2673.xml">
<!ENTITY rfc1123 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1123.xml">
<!ENTITY rfc3490 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3490.xml">
<!ENTITY rfc3491 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3491.xml">
<!ENTITY rfc3492 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3492.xml">
<!ENTITY rfc3454 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3454.xml">
<!ENTITY rfc3743 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3743.xml">
<!ENTITY rfc4290 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4290.xml">
<!ENTITY rfc4690 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4690.xml">
<!ENTITY rfc2782 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2782.xml">
<!ENTITY rfc3986 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY rfc3987 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3987.xml">
<!ENTITY rfc0810 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0810.xml">
<!ENTITY rfc4713 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4713.xml">
<!ENTITY rfc0952 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0952.xml">
<!ENTITY rfc5226 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY rfc2277 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2277.xml">
<!ENTITY rfc5246 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">
<!ENTITY rfc5321 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5321.xml">
<!ENTITY rfc2616 PUBLIC ''
       "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2616.xml">
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc strict="no" ?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>
<?rfc comments='no' ?>
<?rfc inline='yes' ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc editing="no" ?>


<rfc number="5890" ipr="pre5378Trust200902" category="std" obsoletes="3490" >

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <title abbrev="IDNA Definitions">
       Internationalized Domain Names for Applications (IDNA):
       Definitions and Document Framework
    </title>

    <author fullname="John C Klensin" initials="J.C."
             surname="Klensin" >
      <organization/>
      <address>
        <postal>
          <street>1770 Massachusetts Ave, Ste 322</street>
          <city>Cambridge</city> <region>MA</region>
          <code>02140</code>
          <country>USA</country>
        </postal>
        <phone>+1 617 245 1457</phone>
        <!-- facsimile phone number and URI if appropriate -->
        <email>john+ietf@jck.com</email>
      </address>
    </author>

    <date month="July" year="2010" />

<!--[rfced] Please insert any keywords (beyond those that appear in
	the title) for use on http://www.rfc-editor.org/rfcsearch.html. -->  

    <keyword> internationalization</keyword>
	<keyword> domain name </keyword>
	<keyword> IDN </keyword>
	<keyword> IDNA2008 </keyword>

<!-- [rfced] Please note that after you have approved the document,
post-xml2rfc changes will be made to update the header and
boilerplate as described in RFC 5741.
-->

    <abstract>
       <t>This document is one of a collection that, together,
          describe the protocol and usage context for a revision of
          Internationalized Domain Names for Applications (IDNA),
          superseding the earlier version.  It describes the document
          collection and provides definitions and other material that
          are common to the set.</t>
    </abstract>
    
  </front>

  <middle>
    <section title="Introduction">
    <section title="IDNA2008">
       <t>This document is one of a collection that, together,
          describe the protocol and usage context for a revision of
          Internationalized Domain Names for Applications (IDNA) that was
          largely completed in 2008, known within the series and
          elsewhere as "IDNA2008".  The series replaces an earlier version of
          IDNA <xref target="RFC3490"/> <xref target="RFC3491"/>.
		  For convenience, that version of
          IDNA is referred to in these documents as "IDNA2003".
          The newer version continues to use the Punycode
          algorithm <xref target="RFC3492"/> and ACE (ASCII-compatible
          encoding) prefix from that earlier version.  The document
          collection is described in <xref target="roadmap"/>.  As
          indicated there, this document provides definitions and
          other material that are common to the set.</t>

       <section title="Audiences">
          <t>While many IETF specifications are directed exclusively
             to protocol implementers, the character of IDNA requires
             that it be understood and properly used by those whose
             responsibilities include making decisions about:
             <list style="symbols">
                <t> what names are permitted in
                   DNS zone files,</t>
                <t> policies related to names and naming,
                   and</t>
                <t>the handling of domain name strings in files
                   and systems, even with no immediate intention of
                   looking them up.</t>
                </list>
             This document and those documents concerned with the protocol
             definition,
             rules for handling strings that include characters
             written right to left, and the actual
             list of characters and categories will be of primary
             interest to protocol implementers.  This document and the
             one containing explanatory material will be of primary
             interest to others, although they may have to fill in
             some details by reference to other documents in the
             set.</t>
         <t> This document and the associated ones are written from the
         perspective of an IDNA-aware user, application, or
         implementation.  While they may reiterate fundamental DNS
         rules and requirements for the convenience of the reader,
         they make no attempt to be comprehensive about DNS principles
         and should not be considered as a substitute for a thorough
         understanding of the DNS protocols and specifications.</t>
       </section>
    
    <section title="Normative Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED",
         "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT",
         "RECOMMENDED", "MAY", and "OPTIONAL" in this
         document are to be interpreted as described
         in <xref target="RFC2119">RFC 2119</xref>.</t>
    </section>
    </section>


    <section title="Road Map of IDNA2008 Documents" anchor="roadmap">
       <t>IDNA2008 consists of the following documents:
          <list style="symbols">
          <t>This document, containing definitions and other material
             that are needed for understanding other documents in the
             set.  It is referred to informally in other documents in
             the set as "Defs" or "Definitions".</t>
          <t> A document, <xref target="RFC5894">RFC 5894</xref>, that
             provides an overview of the protocol and
             associated tables together with explanatory material and
             some rationale for the decisions that led to IDNA2008.
             That document also contains advice for registry
             operations and those who use Internationalized Domain
             Names (IDNs).  It is referred to informally in other documents
             in the set as "Rationale".  It is not normative.</t>
          <t>A document, <xref target="RFC5891">RFC 5891</xref>, that
             describes the core IDNA2008 protocol and its operations.
             In combination with the Bidi document, described
             immediately below, it explicitly updates and replaces
             RFC 3490.  It is referred to informally in other documents
             in the set as "Protocol".</t>
          <t> A document, <xref target="RFC5893">RFC 5893</xref>, that
             specifies special rules (Bidi) for labels that contain
             characters that are written from right to left.</t>
          <t>A specification, <xref target="RFC5892">RFC 5892</xref>, of the
             categories and rules that identify the code points
             allowed in a label written in native character form
             (defined more specifically as a "U-label"
             in <xref target="IDNA-valid"/> below), based on
             <xref target="Unicode52">Unicode 5.2</xref> code point
             assignments and additional rules unique to IDNA2008.  The
             Unicode-based rules are expected to be stable across
             Unicode updates and hence independent of Unicode versions.
             That specification obsoletes RFC 3941 and IDN use of the
             tables to which it refers.  It is referred to informally
             in other documents in the set as "Tables".</t>
          <t>A document <xref target="IDNA2008-Mapping"></xref> that
             discusses the issue of mapping characters into other
             characters and that provides guidance for doing so when
             that is appropriate.  That document, referred to
			 informally as "Mapping", provides advice; it
             is not a required part of IDNA.</t>
          </list></t>
       </section>
    </section>
    
    <section title="Definitions and Terminology">

     <section title="Characters and Character Sets">
        <!-- Formerly Section 1.5.2 of Rationale-03 -->
        <t>A code point is an integer value in the codespace of a
           coded character set. In Unicode, these are integers from 0
           to 0x10FFFF.</t>

        <t>Unicode <xref target="Unicode52"/> is a coded character set
		   containing
           somewhat over 100,000 characters assigned to code points as
           of version 5.2.  <!-- [JcK] Corrected for consistency. I-D
		       and earlier pre-RFC version still references 5.1 -->
           A single Unicode code point is denoted in these documents by
           "U+" followed by four to six hexadecimal digits, while a range of
           Unicode code points is denoted by two four to six digit
           hexadecimal numbers separated by "..", with no prefixes.</t>

         <t>ASCII means US-ASCII <xref target="ASCII"/>, a coded
              character set containing 128
           characters associated with code points in the range
           0000..007F.  Unicode is a superset of ASCII and may be
           thought of as a generalization
           of it; it includes all the ASCII characters and
           associates them with the equivalent code points.</t>
        <t>"Letters" are, informally, generalizations from the ASCII
           and common-sense understanding of that term, i.e.,
           characters that are used to write text and that are not digits,
           symbols, or punctuation.   Formally, they are characters
           with a Unicode General Category value starting in "L" (see
           Section 4.5
		   of <xref target="Unicode52">The Unicode Standard</xref>).</t>
  </section>

     <section title="DNS-Related Terminology">
        <!-- Formerly Section 1.5.3 of Rationale-03. -->
        <t>When discussing the DNS, this document generally assumes
           the terminology used in the DNS specifications
           <xref target="RFC1034"/> <xref target="RFC1035"/> as
           subsequently modified <xref target="RFC1123"/>
           <xref target="RFC2181"/>.  The
           term "lookup" is used to describe the combination of
           operations performed by the IDNA2008 protocol and those actually
           performed by a DNS resolver.  The process of placing an entry
           into the DNS is referred to as "registration".  This is similar to
           common contemporary usage of that term in other contexts.
           Consequently, any DNS zone administration is described as a
           "registry", and the terms "registry" and "zone
                 administrator" are used interchangeably, regardless
                 of the actual administrative 
           arrangements or level in the DNS tree.  More details about that
           relationship are included in the Rationale document. </t>
        
   <t>The term "LDH code point" is defined in this document to refer
      to the code points associated with ASCII letters (Unicode code
      points 0041..005A and 0061..007A), digits (0030..0039), and
      the hyphen-minus (U+002D).
      "LDH" is an abbreviation for "letters, digits, hyphen" but is
	  used specifically in this document to refer to the set of naming
	  rules described in <xref target="LDH-label-def"/> below.</t>

   <t>The base DNS specifications
      <xref target="RFC1034"/> <xref target="RFC1035"/> discuss
      "domain names" and "hostnames", but many people use the terms
      interchangeably, as do sections of these specifications.
      Lack of clarity about that terminology has contributed to
      confusion about intent in some cases.
      These documents generally use the term "domain name". When they
      refer to, e.g., hostname syntax restrictions, they explicitly
      cite the relevant defining documents.  The remaining
      definitions in this subsection are essentially a review: if
      there is any perceived difference between those definitions and
      the definitions in the base DNS documents or those cited below,
      the definitions in the other documents take precedence. </t>

   <t>A label is an individual component of a domain name.  Labels
          are usually
       shown separated by dots; for example, the domain name
       "www.example.com" is composed of three labels: "www", "example", and
       "com".  (The complete name convention using a trailing dot described
       in <xref target="RFC1123">RFC 1123</xref>, which can
       be explicit as in "www.example.com." or implicit as in
       "www.example.com", is not considered in this
       specification.) <!-- [JcK] Changed from "zero-length root" to
	   align with exactly what 1123 says -->
       IDNA extends the set of usable characters in labels that are
       treated as text (as distinct from the binary string labels
       discussed in RFC 1035 and
       <xref target="RFC2181">RFC 2181</xref> and bitstring ones
       <xref target="RFC2673"/>), but
       only in certain contexts.  The different contexts for
       different sets of usable characters are outlined in the next section.
       For the rest of this document and in the related ones, the
       term "label" is shorthand for
       "text label", and "every label" means "every text label",
       including the expanded context.</t>
   </section>

       <section title="Terminology Specific to IDNA"
               anchor="TermIssues">

          <t>This section defines some terminology to reduce
             dependence on terms and definitions that have been
             problematic in the past.  The relationships among these
             definitions are illustrated in
             <xref target="DefsPicture"/> and
             <xref target="DefsPicture2"/>. In the first of those
             figures, the parenthesized numbers refer to the notes
             below the figure.</t> 

          <section title="LDH Label" anchor="LDH-label-def">
             <t>This is the classical label form used, albeit with
				some additional restrictions, in
                hostnames <xref target="RFC0952"/>.  Its syntax is identical
				to that described as the "preferred name syntax" in
				Section	3.5 of <xref target="RFC1034">RFC 1034</xref>
				as modified by <xref target="RFC1123">RFC 1123</xref>.
				Briefly, it is a string consisting of
                ASCII letters, digits, and the hyphen with the further
                restriction that the hyphen cannot appear at the
                beginning or end of the string.  Like all DNS labels,
                its total length must not exceed 63 octets.</t>
             <t>LDH labels include the specialized labels used by IDNA
                (described as "A-labels" below) and some additional
                restricted forms (also described below).</t>
			 <!-- [JcK]  The discussion of IDNA-aware applications and
			    what they permit was approved by the WG and IETF
			    consensus, but is actually quite bad because nothing
			    prevents an IDNA-aware application from containing
			    both IDNA-aware domain names slots and other kinds of
			    name slots.   For example, if the spec for using SRV
			    records for finding mail submission servers is ever
			    finished, an EAI-aware MUA would need IDNA-aware
			    domain name slots (for the address) and IDNA-unaware
			    domain name slots (for the name of the SRV record.
			    I've made one patch for this in AUTH48, but a more
			    significant change is inappropriate at this point.
			    When the specification is moved to Draft Standard, the
			    "IDNA-aware application" stuff should be rewritten to
			    define such an application as one that contains
				 IDNA-aware domain name slots and then moves most of the
				 discussion of what can appear to the "slot" definitions/
				 discussion (substantive) -->
             <t>To facilitate clear description, two new subsets of
                LDH labels are created by the introduction of IDNA.
                These are called
                Reserved LDH labels (R-LDH labels) and Non-Reserved
                LDH labels (NR-LDH labels).  Reserved LDH labels,
                known as "tagged domain names" in some other contexts,
                have the
                property that they contain "--" in the third and
                fourth characters but which otherwise conform to LDH label
                rules. Only a subset of the R-LDH labels can be used
                in IDNA-aware applications. That subset consists of
                the class of
                labels that begin with the prefix "xn--" (case
                independent), but otherwise conform to the rules for
				LDH labels.  That subset is called "XN-labels" in this set of
                documents. XN-labels are further divided into those
                whose remaining characters (after the "xn--") are
                valid output of the Punycode algorithm
                <xref target="RFC3492"/> and those that
                are not (see below).  The XN-labels that are valid
                Punycode output 
                are known as "A-labels" if they also meet the other
                criteria for IDNA-validity described below.  
                Because
                LDH labels (and, indeed, any DNS label) must not be
                more than 63 octets in length, the portion of an
				XN-label derived from the Punycode algorithm is
				limited to
				<!-- [JcK] Sentence rewritten to get rid of
				  possibly-offensive hyphenated word construction -->
                no more than 59 ASCII characters.   Non-Reserved LDH labels
                are the set of valid LDH labels that do not have "--"
                in the third and fourth positions. </t>
            <t>A consequence of the restrictions on valid characters
               in the native Unicode character form (see U-labels)
               turns out to be that mixed-case
               annotation, of the sort outlined in Appendix A of
               <xref target="RFC3492">RFC 3492</xref>, is
               never useful.  Therefore, since a valid A-label is the
               result of Punycode encoding of a U-label, A-labels
               should be produced only in lowercase, despite matching
               other (mixed-case or uppercase) potential labels in the
               DNS.</t> <!-- [JcK] "mixed- or uppercase" didn't work
			      for me.  It violates a parallel construction rule
			      and creates an ambiguity -->
            <t> Some strings that are prefixed with
                "xn--" to form labels may not be the output of the Punycode
                algorithm, may fail the other tests outlined below, 
                or may violate other IDNA restrictions
                and thus are also not valid IDNA labels.
                They are called "Fake A-labels" for convenience.</t>
            <t> Labels within the class of R-LDH labels
                that are not prefixed with "xn--" are also not valid
                IDNA labels.  To allow for future use of mechanisms
                similar to IDNA, those labels MUST NOT be processed
                as ordinary
                LDH labels by IDNA-conforming programs and SHOULD NOT
                be mixed with IDNA labels in the same zone.</t>
            <t>These distinctions among possible LDH labels are only
               of significance for software that is IDNA-aware or
   <!-- [JcK] Quotes removed from IDNA-aware -- it wasn't quoted
			   anywhere else and this is not first use -->			   
               for future extensions that use extensions based on the
               same "prefix and encoding" model.
               For IDNA-aware systems, the valid label types are:
               A-labels, U-labels, and NR-LDH labels.</t>
            <t>IDNA labels come in two flavors: an ACE-encoded form
               and a Unicode (native character) form. These are
               referred to as A-labels and U-labels, respectively, and
               are described in detail in the next section.</t>
            </section>

     <figure anchor="DefsPicture"
              title="IDNA and Related DNS Terminology Space -- ASCII Labels">
        <artwork>
                                    ASCII Label
      __________________________________________________________________
      |                                                                |
      |     ____________________ LDH Label (1) (4) ________________    |
      |    |  ___________________________________                  |   |
      |    |  |IDN Reserved LDH Labels          |                  |   |
      |    |  | ("??--") or R-LDH Labels        | _______________  |   |
      |    |  | _______________________________ | |NON-RESERVED |  |   |
      |    |  | |       XN-labels             | | | LDH Labels  |  |   |
      |    |  | | _____________   ___________ | | | (NR-LDH     |  |   |
      |    |  | | | A-labels  |   | Fake (3) || | |   labels)   |  |   |
      |    |  | | | "xn--"(2) |   | A-labels || | |_____________|  |   |
      |    |  | | |___________|   |__________|| |                  |   |
      |    |  | |_____________________________| |                  |   |
      |    |  |_________________________________|                  |   |
      |    |_______________________________________________________|   |
      |                                                                |
      |       _____________NON-LDH label________                       |
      |       |      ______________________    |                       |
      |       |      | Underscore labels  |    |                       |
      |       |      |  e.g., _tcp        |    |                       |
      |       |      |____________________|    |                       |
      |       |      | Labels with leading|    |                       |
      |       |      | or trailing        |    |                       |
      |       |      | hyphens "-abcd"    |    |                       |
      |       |      | or "xyz-"          |    |                       |
      |       |      | or "-uvw-"         |    |                       |
      |       |      |____________________|    |                       |
      |       |      | Labels with other  |    |                       |
      |       |      | non-LDH ASCII chars|    |                       |
      |       |      | e.g., #$%_         |    |                       |
      |       |      |____________________|    |                       |
      |       |________________________________|                       |
      |________________________________________________________________|

             (1) ASCII letters (uppercase and lowercase), digits,
                    hyphen.  Hyphen may not appear in first or last
                    position.  No more than 63 octets.
             (2) Note that the string following "xn--" must
                    be the valid output of the Punycode algorithm
                    and must be convertible into valid U-label form.
             (3) Note that a Fake A-label has a prefix "xn--"
                    but the remainder of the label is NOT the valid
                    output of the Punycode algorithm.
             (4) LDH label subtypes are indistinguishable to
                    applications that are not IDNA-aware.
      </artwork>
  </figure>
     <figure anchor="DefsPicture2"
              title="Non-ASCII Labels">
        <artwork>
                     __________________________
                     |  Non-ASCII             |
                     |                        |
                     |    ___________________ |
                     |    | U-label (5)     | |
                     |    |_________________| |
                     |    |                 | |
                     |    |  Binary Label   | |
                     |    | (including      | |
                     |    |  high bit on)   | |
                     |    |_________________| |
                     |    |                 | |
                     |    | Bit String      | |
                     |    |   Label         | |
                     |    |_________________| |
                     |________________________|

         (5) To applications that are not IDNA-aware, U-labels
		        are indistinguishable from Binary ones.
      </artwork>
  </figure>


          <section title="Terms for IDN Label Codings">
             <section
              title="IDNA-valid strings, A-label, and U-label"
                     anchor="IDNA-valid" toc="include" >
             <t> For IDNA-aware applications, the three types of
                valid labels are 
                "A-labels", "U-labels", and "NR-LDH labels", each of
                which is defined below.  The relationships among them
                are illustrated in
                <xref target="DefsPicture"/> and
                <xref target="DefsPicture2"/>.</t>
             <t><list style="symbols">
                <t>A string is "IDNA-valid" if it meets all of the
                   requirements of these specifications for an IDNA
                   label.  IDNA-valid strings may appear in either of
                   the two forms defined immediately below, or may be
                   drawn from the NR-LDH label subset.              
                   IDNA-valid strings must also conform to
                   all basic DNS requirements for labels. <!-- and must, in
                   particular, be less than 63 characters long. --> These
                   documents make specific reference to
                   the form appropriate to any context in which the
                   distinction is important.</t>
                <t>An "A-label" is the ASCII-Compatible Encoding
                   (ACE, see <xref target="DefinitionACE"/>) form of
                   an IDNA-valid string.  It must be a
                   complete label: IDNA is defined for labels, not
                   for parts of them and not for complete
                   domain names.   This means, by definition, that
                   every A-label will begin with the IDNA ACE prefix,
                   "xn--" (see <xref target="DefinitionACE"/>),
                   followed by a string that is a valid output of the
                   Punycode algorithm <xref target="RFC3492"/> and
                   hence a maximum of 59 ASCII characters in
                   length.  The prefix and string together must conform to all
                   requirements for a label that can be stored in
                   the DNS including conformance to the rules for
				   <xref target="LDH-label-def">LDH labels</xref>.
				   If and only if a string meeting the above
				   requirements can be decoded into a U-label
                   is it an A-label.</t>
                <t>A "U-label" is an IDNA-valid string of Unicode
                    characters, in Normalization Form C (NFC) and
                    including at least one non-ASCII
                    character, expressed in a standard Unicode
                    Encoding Form (such as UTF-8).  It is also
                    subject to the constraints about permitted
                    characters that are specified in
                    Section 4.2 of the Protocol document and the rules
                    in the Sections 2 and 3 of the Tables document,
                    the Bidi constraints in that 
                    document if it contains any character from scripts
                    that are written right to left, and the symmetry
                    constraint described immediately below.
                    Conversions between
                    U-labels and A-labels are performed according
                    to the "Punycode" specification <xref target="RFC3492"/>,
                    adding or removing the ACE prefix as needed.</t>
                 </list></t>
              <t>To be valid, U-labels and A-labels must obey an
                 important symmetry constraint.  While that constraint
                 may be tested in any of several ways, an A-label A1 must
                 be capable of being produced by conversion from a
                 U-label U1, and that U-label U1 must be capable of being
                 produced by conversion from A-label A1.  Among other
                 things, this implies that both U-labels and A-labels
                 must be strings in
                 Unicode NFC <xref target="Unicode-UAX15"/>
                 normalized form. These
                 strings MUST contain only characters specified
                 elsewhere in this document series, and only in the
                 contexts indicated as appropriate.</t> <!-- added A1
                 and U1 stuff per Andrew 20090824 with Paul's 20090824
                 modification -->

              <t> Any rules or conventions that apply to DNS labels
				 in general apply to whichever of 
        the U-label or A-label would be more restrictive.
        There are two exceptions to this principle.  First, the
        restriction to ASCII characters does not apply to the U-label.
        Second, expansion of the A-label form to a U-label may produce
        strings that are much longer than the normal 63 octet DNS
        limit (potentially up to 252 characters) due to the
        compression efficiency of the Punycode algorithm.  Such
        extended-length U-labels are valid from the standpoint of
        IDNA, but caution should be exercised as shorter limits may be
        imposed by some applications.</t> 
     <t>For context, applications that are not IDNA-aware treat all LDH labels 
        as valid for
        appearance in DNS zone files and queries and some of them may
		permit additional types of labels (i.e., not impose the LDH
		restriction).  <!-- [JcK] Original statement was too broad a
		   restriction and hence not an accurate description.
		   Substantive issue. -->
		IDNA-aware
        applications permit only A-labels and NR-LDH labels to appear
        in zone files and queries.  U-labels can appear, along with
        the other two, in presentation and user interface forms, and
        in protocols that use IDNA forms but that do not involve the
        DNS itself.</t> 
     <t>Specifically, for IDNA-aware applications and contexts,
		<!-- [JcK] nothing prevents an application that is IDNA-aware
		    from _also_ using, e.g., SRV RR labels for other purposes
		    entirely.  Adding "contexts" makes the statement true
			again.   This was a substantive glitch in the IETF-approved
			version, not an RFC Editor problem. --> the three allowed
        categories are A-label, U-label, and NR-LDH label. Of the
        Reserved LDH labels (R-LDH labels) only A-labels are valid
        for IDNA use.</t>
        <t>Strings that appear to be A-labels or U-labels are
           processed in various operations of
           <xref target="RFC5891"> the Protocol document</xref>.
		   Those strings are not 
           yet demonstrably conformant with the conditions outlined
           above because they are in the process of validation. Such
           strings may be referred to as "unvalidated", "putative",
           or "apparent", or as being "in
           the form of" one of the label types to indicate that
           they have not been verified to meet the specified
           conformance requirements.</t>
        <t>Unvalidated A-labels are known
           only to be XN-labels, while Fake A-labels have been
           demonstrated to fail some of the A-label tests.  Similarly,
           unvalidated U-labels are simply non-ASCII labels that may
           or may not meet the requirements for U-labels.</t>
     </section>
     <section title="NR-LDH Label"  toc="include">
		<!-- [JcK] Second part of title moved to the subsection
		   that actually contains that definition -->
     <t> These specifications use the term "NR-LDH label" strictly to
        refer to
        an all-ASCII label that obeys the LDH label syntax discussed
		in <xref target="LDH-label-def"/> 
        and that is neither an IDN nor a label form reserved by IDNA
        (R-LDH label). It should be stressed that all A-labels
        obey the "hostname" <xref target="RFC0952"/> rules other than
		the length restriction in those rules.</t>
     </section>

     <section title="Internationalized Domain Name and Internationalized Label"  toc="include">
        <t>  An "internationalized domain name" (IDN) is a domain name
          that contains at least one A-label or U-label, but that
          otherwise may contain any mixture of NR-LDH labels, A-labels, or
          U-labels.
          Just as has been the case with ASCII names, some DNS zone
          administrators may impose restrictions, beyond those imposed by DNS
          or IDNA, on the characters or strings that may be registered as
          labels in their zones.  Because of the diversity of characters
          that can be used in a U-label and the confusion they might
          cause, such restrictions are mandatory for IDN registries and
          zones
          even though the particular restrictions are not part of these
          specifications (the issue is discussed in more detail in
          Section 4.3 of <xref target="RFC5891">the Protocol document</xref>.
          Because these restrictions, commonly known as
          "registry restrictions", only affect what can be registered and
          not lookup processing, they have no effect on the
          syntax or semantics of DNS protocol messages; a query for a name that
          matches no records will yield the same response regardless of the
          reason why it is not in the zone.  Clients issuing queries or
          interpreting responses cannot be assumed to have any knowledge of
          zone-specific restrictions or conventions.
          See the section on registration policy in
          <xref target="RFC5894">the Rationale document</xref> for additional
          discussion.</t>
        <t>
        "Internationalized label" is used when a term is needed to
        refer to a single label of an IDN, i.e., one that might be any
        of an NR-LDH label, A-label, or U-label.   There are some
        standardized
        DNS label formats, such as the "underscore labels" used for
        service location (SRV)
        records <xref target="RFC2782"/>, that do not fall into any
        of the three categories and hence are not internationalized
        labels.</t>
     </section>
    
     <section title="Label Equivalence" anchor="equivalence"  toc="include">
        <t>In IDNA, equivalence of labels is defined in terms of the
           A-labels.   If the A-labels are equal in a case-independent
           comparison, then the labels are considered equivalent, no
           matter how they are represented.   Because of the
           isomorphism of A-labels and U-labels in IDNA2008, it is
           possible to compare U-labels directly;
           see <xref target="RFC5891">the Protocol document</xref> for details.
           Traditional LDH labels
           already have a notion of equivalence: within that list of
           characters, uppercase and lowercase are
           considered equivalent.  The IDNA notion of equivalence is an
           extension of that older notion but, because the protocol
           does not specify any mandatory mapping and only those
           isomorphic forms are considered, the only equivalents are: 
           <list style="symbols">
              <t>Exact (bit-string identity) matches between a pair of
                 U-labels.</t>
              <t> Matches between a pair of A-labels, using normal DNS
                 case-insensitive matching rules.</t>
			     <!-- [JcK] use of "case-insensitive" below and not
					  here sets a trap for the reader to wonder about "normal
					  DNS case-sensitive matching rules.  There is no such
					  thing (substantive) -->
              <t>Equivalence between a U-label and an A-label
                 determined by translating the U-label form into an
                 A-label form and then testing for a match
                 between the A-labels using normal DNS
                 case-insensitive matching rules.</t>
           </list></t>
     </section>

<section title="ACE Prefix" anchor="DefinitionACE"  toc="include">
   <t>The "ACE prefix" is defined in this document to be a string of ASCII
      characters, "xn--", that appears at the beginning of every
      A-label. "ACE" stands for "ASCII-Compatible Encoding".</t>
</section>

<section title="Domain Name Slot" toc="include">
   <t>A "domain name slot" is defined in this document to be a protocol
       element or a function argument or a return value (and so on)
       explicitly designated for carrying a domain name.  Examples of domain
       name slots include the QNAME field of a DNS query; the name argument
       of the gethostbyname() or getaddrinfo() standard C library
       functions; the part of an email address
       following the at sign ("@") in the parameter to the SMTP MAIL or
       RCPT commands or the "From:" field of an email message
       header; and the host portion of the URI in the "src" attribute of an
       HTML "&lt;IMG&gt;" tag.  A string that has the syntax of a
       domain name but that appears in general text is not in a
       domain name slot.  For example, a domain name appearing
       in the plain text body of an email message is not occupying a domain
       name slot.</t>

   <t>An "IDNA-aware domain name slot" is defined for this set of
      documents to be a
       domain name slot explicitly designated for carrying an
       internationalized domain name as defined in this document.  The
       designation may be static (for example, in the specification of the
       protocol or interface) or dynamic (for example, as a result of
       negotiation in an interactive session).</t>

<!-- [rfced] From email regarding RFC 5894:
<obscenity/> (not directed at you).  Yes, let's get rid of
"IDN-unaware".  "IDNA-unaware" feels awkward to me.  If it does
to you too, it might be worthwhile rewriting the relevant
sentences to say, e.g., "not IDNA-aware".   But I consider that
a stylistic matter and will leave it to your discretion.

Please note that "IDN-unaware" was changed to "IDNA-unaware" in the text
above.  It did not seem appropriate to redo the sentence because it is 
consistent with the previous paragraph, which introduces the "IDNA-aware domain 
name slot." 
-->
 <!-- [JcK] "IDNA-unaware" has been removed from this document and
	  Protocol (5891) and does not appear in Rationale [5894].  I hope
	  it isn't anywhere else -->
   <t>Name slots that are not IDNA-aware
	   obviously include any domain name slot whose specification
       predates IDNA.  Note that the requirements of some protocols
       that use the DNS for data storage prevent the use of IDNs.  For
       example, the format required for the underscore labels used by the
       service location protocol <xref target="RFC2782"/> precludes
       representation of a non-ASCII label in the DNS using A-labels
       because those SRV-related labels must start with underscores.
       Of course, non-ASCII IDN labels may be part of a domain name
       that also includes underscore labels. </t>
  </section>
  </section>

  <section title="Order of Characters in Labels">
     <t> Because IDN labels may contain characters that are read, and
        preferentially displayed, from right to left, there is a
        potential ambiguity about which character in a label is
        "first".   For the purposes of these specifications, labels
        are considered, and characters numbered, strictly in the order
        in which they appear "on the wire".  That order is equivalent
        to the leftmost character being treated as first in a label
        that is read left to right and to the rightmost character being
        first in a label that is read right to left.  The Bidi
        specification contains additional discussion of the conditions
        that influence reading order.</t>
  </section>

  <section
     title="Punycode is an Algorithm, Not a Name or Adjective">
             <!-- Formerly Section 1.5.5 of Rationale-03. -->
             <t>There has been some confusion about whether a
                "Punycode string" does or does not include the ACE prefix and
                about whether it is required that such strings could
                have been the output of the ToASCII operation
                (see <xref target="RFC3490">RFC 3490, Section 4</xref>).
                This specification discourages the use of the term
                "Punycode" to describe anything but the encoding
                method and algorithm of
				<xref target="RFC3492">RFC 3492</xref>.  The
                terms defined above are preferred as much more clear
                than the term "Punycode string".</t>
             </section>
        </section>
    </section>

    <section title="IANA Considerations">
       <t>IANA actions for this version of IDNA (IDNA2008) are specified in
	  <xref target="RFC5892">the Tables document</xref>.
          
<!-- [rfced] Is it correct to list RFC 5891 as having IANA actions?  RFC 5891
points to RFC 5892 and the discussion in 5894.

>From RFC 5891:
   IANA actions for this version of IDNA are specified in the Tables
   document [RFC5892] and discussed informally in the Rationale document
   [RFC5894].  The components of IDNA described in this document do not
   require any IANA actions.
-->
<!-- JcK: Edited to conform with 5891 as discussed -->

          An overview of the
          relationships among the various IANA registries appears in
          <xref target="RFC5894">the Rationale document</xref>.
          This document does not specify any actions for IANA.</t>
    </section>

    <section title="Security Considerations">
       <section title="General Issues">
          <t>Security on the Internet partly relies on the DNS.
             Thus, any change to the characteristics of the DNS can
             change the security of much of the Internet.</t>

       <t>Domain names are used by users to identify and connect to Internet
       hosts and other network resources.  The security of the
       Internet is compromised if a user
       entering a single internationalized name is connected to different
       servers based on different interpretations of the internationalized
       domain name.  In addition to characters that are permitted by
       IDNA2003 and its mapping conventions
       (see <xref target="SecOldLabels"/>), the current specification
       changes the interpretation of a few characters that were mapped to
       others in the earlier version; zone administrators should be aware
       of the problems that this might raise and take appropriate measures.  The
       context for this issue is discussed in more detail in
       <xref target="RFC5894">the Rationale document</xref>.</t>
    <t>In addition to the Security Considerations material that
       appears in this document, <xref target="RFC5893">the Bidi document</xref>
       contains a discussion of security issues specific to labels
       containing characters from scripts that are normally written
       right to left.</t>
    </section>
    
    <section title="U-label Lengths">
       <t>Labels associated with the DNS have traditionally been
          limited to 63 octets by the general restrictions in RFC
          1035 and by the need to treat them as a six-bit string
          length followed by the string in actual calls to the DNS.
          That format is used in some other applications and, in
          general, that representations of domain names as
          dot-separated labels and as length-string pairs have been
          treated as interchangeable.  Because A-labels (the form
          actually used in the DNS) are potentially much more
          compressed than UTF-8 (and UTF-8 is, in general, more
          compressed that UTF-16 or UTF-32), U-labels that obey all of
          the relevant symmetry (and other) constraints of these
          documents may be quite a bit longer, potentially up to 252
          characters (Unicode code points).  A fully-qualified domain
          name containing 
          several such labels can obviously also exceed the nominal
          255 octet limit for such names.  Application authors
          using U-labels must exert due caution to avoid buffer
          overflow and truncation errors and attacks in contexts where
          shorter strings are expected.</t>
     </section>
          
    <section title="Local Character Set Issues">
       <t>When systems use local character sets other than ASCII and Unicode,
       these specifications leave the problem of converting between the
       local character set and Unicode up to the application or local system.
       If different
       applications (or different versions of one application) implement
       different rules for conversions among coded character sets, they
       could interpret the same name
       differently and contact different servers.  This problem is not
       solved by security protocols, such as
       <xref target="RFC5246">Transport Layer Security (TLS)</xref>,
	   that <!-- [JcK] here, the subclause does not change the
	      relationship in the rest of the sentence.  Try reading it with
	      the subclause dropped and it will become clear that "that"
	      (as in the original) is correct.  If you prefer, rewrite to
	      "...security protocols that do not..., such as...", but I
	      slightly prefer the present construction. -->
       do not take local character sets into account.</t>
    </section>

    <section title="Visually Similar Characters" anchor="SecVisSimilar">
       <t>To help prevent confusion between characters that are visually
       similar (sometimes called "confusables"), it is suggested that
       implementations provide visual 
       indications where a domain name contains multiple scripts,
       especially when the scripts contain characters that are easily
       confused visually, such as an omicron in Greek mixed with Latin
       text.  Such
       mechanisms can also be used to show when a name contains a mixture of
       Simplified Chinese characters with Traditional ones that have
	   Simplified forms,  <!-- [JcK] Grrr.  Since not all Traditional
	      characters have Simplified forms, one could have such a
	      mixture and a warning would be completely bogus.  Fixed in
	      AUTH48.  (substantive) -->  
	   or to distinguish zero
       and one from uppercase "O" and lowercase "L".  DNS zone
       administrators may impose restrictions
       (subject to the limitations identified elsewhere in these documents)
       that try to minimize characters that have similar appearance
       or similar interpretations.</t>
    <t>If multiple characters appear in a label and the label consists
       only of characters in one script, individual characters that
       might be confused with others if compared separately may be
       unambiguous and non-confusing.  On the other hand, that
       observation makes labels containing characters from more than
	   one script (often called "mixed-script labels") even more risky -- users 
       will tend to see what they expect to see and context is a
       powerful reinforcement to perception.   At the same time,
       while the risks 
       associated with mixed-script labels are clear, simply
       prohibiting them will not eliminate problems, especially where
       closely related scripts are involved.  For example, there are
       many strings that are entirely in Greek or Cyrillic scripts
       that can be confused with each other or with Latin script
       strings.</t>
     <t>It is worth noting that there are no comprehensive technical
       solutions to the problems of confusable characters.  One can reduce
       the extent of the problems in various ways, but probably never
       eliminate it.  Some specific suggestions about identification and
       handling of confusable characters appear in a Unicode Consortium
       publication <xref target="Unicode-UTR36"/>.</t>
    </section>
    <section
     title="IDNA Lookup, Registration, and the Base DNS Specifications">

       <t>The
          <xref target="RFC5891">Protocol specification</xref>
          describes procedures for registering and looking up
          labels that are not compatible with the preferred syntax
          described in the base DNS specifications
		  (see <xref target="LDH-label-def"/>) because they
       contain non-ASCII characters.  These procedures depend on the use
       of a special ASCII-compatible encoding form that contains only
       characters permitted in hostnames by those earlier
       specifications.  The
       encoding used is Punycode <xref target="RFC3492"/>.

       No security issues such as string length increases or new
       allowed values are introduced by the encoding process or the use of
       these encoded values, apart from those introduced by the ACE encoding
       itself.</t>

       <t>Domain names (or portions of them) are sometimes compared against a
       set of domains to be given special treatment if a match occurs, e.g.,
       treated as more privileged than others or blocked in some way.  In
       such situations, it
       is especially important that the comparisons be done properly, as
       specified in the "Requirements" section of
       <xref target="RFC5891">the Protocol document</xref>.  For
       labels already in ASCII form,
       the proper comparison reduces to the same case-insensitive
       ASCII comparison that has always been used for ASCII labels
       although IDNA-aware applications are expected to look up only
       A-labels and NR-LDH labels, i.e., to avoid looking up
       R-LDH labels that are not A-labels.</t>

       <t>The introduction of IDNA meant that any existing labels that start
       with the ACE prefix would be construed as A-labels, at least until
       they failed one of the relevant tests, whether or not that was the
       intent of the zone administrator or registrant.  There is no
       evidence that this has caused any practical problems since RFC 3490
       was adopted, but the risk still exists in principle.</t>
    </section>
    <section title="Legacy IDN Label Strings" anchor="SecOldLabels">
       <t>The <xref target="RFC3986">URI Standard</xref> and a number
          of application specifications (e.g.,
          <xref target="RFC5321">SMTP</xref> and
		  <xref target="RFC2616">HTTP</xref>) do not
          permit non-ASCII labels in DNS names used with those
          protocols, i.e., only the A-label form of IDNs is permitted
          in those contexts.  If only A-labels are used, differences
          in interpretation between IDNA2003 and this version arise
          only for characters whose interpretation have actually
          changed (e.g., characters, such as ZWJ and ZWNJ, that were
          mapped to nothing in IDNA2003 and that are considered
          legitimate in some contexts by these specifications). Despite that
          prohibition, there are a significant number of files and
          databases on the Internet in which domain name strings
          appear in native-character form; a subset of those strings
          use native-character labels that require IDNA2003 mapping to
          produce valid A-labels.  The treatment of such labels will
          vary by types of applications and application-designer
          preference: in some situations, warnings to the user or
          outright rejection may be appropriate; in
          others, it may be preferable to attempt to apply the earlier
          mappings if lookup strictly conformant to these
          specifications fails or even to do lookups under both sets
          of rules.  This general situation is discussed in more
          detail in <xref target="RFC5894">the Rationale document</xref>.  However, in
          the absence of care by registries
          about how strings that could have different interpretations
          under IDNA2003 and the current specification are handled, it
          is possible that the differences could be used as a
          component of name-matching or name-confusion attacks.  Such
          care is therefore appropriate.</t>
       </section>
        
    
    <section title="Security Differences from IDNA2003">
          <!-- From Rationale -->
       <t> The registration and lookup models described in this set of
          documents change the mechanisms available for lookup
          applications to determine the validity of labels they
          encounter.  In some respects, the ability to test is
          strengthened.  For example, putative labels that contain
          unassigned code points will now be rejected, while IDNA2003
          permitted them (see <xref target="RFC5894">the Rationale document</xref> for
          a discussion of the reasons for this).
          On the other hand, the
          Protocol specification no longer assumes that the
          application that looks up a name will be able to determine,
          and apply, information about the protocol version used in
          registration.  In theory, that may increase risk since the
          application will be able to do less pre-lookup validation.
          In practice, the protection afforded by that test has been
          largely illusory for reasons explained in
          <xref target="RFC4690">RFC 4690</xref> and elsewhere in
          these documents.</t>
       <t>Any change to the <xref target="RFC3454">Stringprep</xref>
          procedure that is profiled and used in IDNA2003, or, more
          broadly, the IETF's model
          of the use of internationalized character strings in
          different protocols, creates some risk of inadvertent
          changes to those protocols, invalidating deployed
          applications or databases, and so on. 
           But these specifications do not change Stringprep at
           all; they merely bypass it. Because these
           documents do not depend on Stringprep, the question
           of upgrading other protocols that do have that dependency
           can be left to experts on those protocols: the IDNA
           changes and possible upgrades to security protocols or
           conventions are independent issues.</t>
        </section>
    <section title="Summary">
        <t>No mechanism involving names or identifiers alone can protect
           against a wide variety of security threats and attacks that
           are largely independent of the naming or identification
           system.  These attacks include spoofed pages, DNS query trapping
           and diversion, and so on.</t>
    </section>
    </section>

    <section title="Acknowledgments">
       <t>The initial version of this document was created largely by
          extracting text from early draft versions of the Rationale
          document <xref target="RFC5894"/>. See the
          section of this name and the one entitled "Contributors",
          in it.</t>
       <t>Specific textual suggestions after the extraction process came
          from Vint Cerf, Lisa Dusseault, Bill McQuillan,
          Andrew Sullivan,
          and Ken Whistler.  Other changes were
          made in response to more general comments, lists of
          concerns or specific errors from participants in the
          Working Group and other 
          observers, including Lyman Chapin, James Mitchell,
          Subramanian Moonesamy, and Dan Winship.</t>
    </section>
    
    </middle>


  <!--  *****BACK MATTER ***** -->

  <back>
    
    <references title="Normative References">
       &rfc2119;
       &rfc1123;    
       &rfc1035;    
       &rfc1034;
    
<reference anchor='ASCII'>
        <front>
          <title>USA Code for Information Interchange</title>
          <author>
            <organization abbrev="ANSI">
              American National Standards Institute
                (formerly United States of America Standards Institute)
        </organization>
          </author>
          <date year="1968"/>
        </front>
      <seriesInfo name="ANSI" value="X3.4-1968" />
	  <!-- [JcK] xml2rfc produces a blank line between the results of
	      the element above and the annotation one immediately below.
	      It doesn't belong there, makes things harder to read, and
	      should be eliminated.  And we should get on the case of the
	      xml2rfc team -->
      <annotation>ANSI X3.4-1968 has been replaced by newer
      versions with slight modifications, but the 1968 version
      remains definitive for the Internet. </annotation>
      </reference>

<!-- [JcK] Unicode 5.2 reference replaced by the one from 5894 which
	  we had agreed was correct. -->	  

	   <reference anchor="Unicode52" target="http://www.unicode.org/versions/Unicode5.2.0/">
            <front>
      <title abbrev="Unicode 5.2">
         The Unicode Standard, Version 5.2.0
             </title>
        <author>
        <organization>The Unicode Consortium.  The Unicode Standard,
		   Version 5.2.0, defined by:</organization> 
        <address />
        </author>
        </front>
         <seriesInfo name="(Mountain View, CA: The Unicode Consortium, 2009."
					value="ISBN 978-1-936213-00-9)." />
          </reference>



       <reference anchor="Unicode-UAX15"
                  target="http://www.unicode.org/reports/tr15/tr15-31.html">
          <front>
          <title>Unicode Standard Annex #15: Unicode Normalization
             Forms, Revision 31</title>
        <author>
        <organization>The Unicode Consortium</organization>
        <address />
        </author>
        <date year="2009" month="September" day="03" />
<!-- [rfced] Please note that the date was updated to match what appears at the 
URL provided above.
     [JcK] Converted to show the revision number. -->
        </front>        
      </reference>  
    
    </references>

    <references title="Informative References">

    &rfc3490;       <!-- IDNA2003 -->
    &rfc3491;
    &rfc3492;       <!-- Punycode -->
    &rfc0952;       <!-- Host table/ host name -->
    &rfc2782;       <!-- SRV RR -->
    &rfc2673;       <!-- DNS binary labels -->
    &rfc2181;       <!-- DNS clarifications -->
    &rfc5246;       <!-- TLS -->
    &rfc4690;       <!-- IDNA2003 IAB critique -->
    &rfc3454;       <!-- Stringprep -->
    &rfc3986;       <!-- URI standard -->
    &rfc5321;       <!-- SMTP -->
    &rfc2616;       <!-- HTTP 1.1 -->

<!--draft-ietf-idnabis-protocol -->
<reference anchor='RFC5891'>
<front>
<title>Internationalized Domain Names in Applications (IDNA): Protocol</title>

<author initials='J' surname='Klensin' fullname='John Klensin'>
    <organization />
</author>

<date month='July' year='2010' />

<abstract><t>This document is the revised protocol definition for
   internationalized domain names (IDNs).  The rationale for changes,
   the relationship to the older specification, and
   important</t></abstract>   

</front>

<seriesInfo name='RFC' value='5891' />

</reference>


<!--draft-ietf-idnabis-bidi -->
<reference anchor='RFC5893'>
<front>
<title>Right-to-Left Scripts for Internationalized Domain Names for
Applications (IDNA)</title> 

<author initials='H' surname='Alvestrand' fullname='Harald Alvestrand'>
    <organization />
</author>

<author initials='C' surname='Karp' fullname='Cary Karp'>
    <organization />
</author>

<date month='July' year='2010' />

<abstract><t>The use of right-to-left scripts in internationalized
   domain names has presented several challenges.  This memo proposes
   a new Bidi rule for IDNA labels, based on the encountered problems
   with some scripts, and some shortcomings in the 2003 IDNA Bidi
   criterion.</t></abstract>    

</front>

<seriesInfo name='RFC' value='5893' />

</reference>

<!--draft-ietf-idnabis-tables -->
<reference anchor='RFC5892'>
<front>
<title>The Unicode Code Points and Internationalized Domain Names for
Applications (IDNA)</title>

<author initials='P' surname='Faltstrom' fullname='Patrik Faltstrom' role="editor">
    <organization />
</author>

<date month='July' year='2010' />

<abstract><t>This document specifies rules for deciding whether a
   code point, considered in isolation or in context, is a candidate
   for inclusion in an Internationalized Domain Name (IDN).  It is
   part of the specification of Internationalizing Domain Names in
   Applications 2008 (IDNA2008).</t></abstract>    

</front>

<seriesInfo name='RFC' value='5892' />

</reference>



<!--draft-ietf-idnabis-rationale -->
 <reference anchor='RFC5894'>
<front>
<title>Internationalized Domain Names for Applications (IDNA):
   Background, Explanation, and Rationale</title> 

<author initials='J' surname='Klensin' fullname='John Klensin'>
    <organization />
</author>

<date month='July' year='2010' />

<abstract><t>Several years have passed since the original protocol
   for Internationalized Domain Names (IDNs) was completed and
   deployed. During that time, a number of issues have arisen,
   including the need to update the system to deal with newer
   versions of Unicode.  Some of these issues require tuning of the
   existing protocols and the tables on which they depend.  This
   document provides an overview of a revised system and provides
   explanatory material for its components.</t></abstract>

</front>

<seriesInfo name='RFC' value='5894' />

</reference>


<!--draft-ietf-idnabis-mappings -->
<reference anchor='IDNA2008-Mapping'>
<front>
<title>Mapping Characters in Internationalized Domain Names for
   Applications (IDNA)</title> 

<author initials='P' surname='Resnick' fullname='Pete Resnick'>
    <organization />
</author>

<author initials='P' surname='Hoffman' fullname='Paul Hoffman'>
    <organization />
</author>

<date month='April' year='2010' />

<abstract><t>In the original version of the Internationalized Domain
   Names in Applications (IDNA) protocol, any Unicode code points
   taken from user input were mapped into a set of Unicode code
   points that "make sense", which were then encoded and passed to
   the domain name system (DNS).  The current version of IDNA
   presumes that the input to the protocol comes from a set of
   "permitted" code points, which it then encodes and passes to the
   DNS, but does not specify what to do with the result of user
   input.  This document describes the actions that can be taken by
   an implementation between user input and passing permitted code
   points to the new IDNA protocol.</t></abstract>

</front>

<seriesInfo name='Work in' value='Progress' />

</reference>

    
    <reference anchor="Unicode-UTR36"
                  target="http://www.unicode.org/reports/tr36/tr36-7.html">
          <front>
          <title>Unicode Technical Report #36: Unicode Security
             Considerations, Revision 7 </title>
        <author>
        <organization>The Unicode Consortium</organization>
        <address />
        </author>
        <date year="2008" month="July" day="23" />
        </front>        
    </reference>

    </references>
    
  </back>
  </rfc>
