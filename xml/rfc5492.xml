<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC4271 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4271.xml">
<!ENTITY RFC5226 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC4272 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4272.xml">
<!ENTITY RFC4760 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4760.xml">

]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>


<?rfc toc="no"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>

<rfc number="5492" category="std" obsoletes="3392">

  <front>

    <title abbrev="Capabilities Advertisement">Capabilities Advertisement with BGP-4</title>

    <author fullname="John G. Scudder" initials="J." 
            surname="Scudder">
      <organization>Juniper Networks</organization>

      <address>

        <email>jgs@juniper.net</email>

      </address>
    </author>
    
    <author fullname="Ravi Chandra" initials="R." 
            surname="Chandra">
      <organization>Sonoa Systems</organization>

      <address>

        <email>rchandra@sonoasystems.com</email>

      </address>
    </author>


    <date month="February" year="2009" />

    <keyword>bgp</keyword>
    <keyword>idr</keyword>
<note title="">

<t>This document may contain material from IETF Documents or IETF Contributions published or
made publicly available before November 10, 2008. The person(s) controlling the copyright in
some of this material may not have granted the IETF Trust the right to allow modifications of such
material outside the IETF Standards Process.  Without obtaining an adequate license from the
person(s) controlling the copyright in such materials, this document may not be modified outside
the IETF Standards Process, and derivative works of it may not be created outside the IETF
Standards Process, except to format it for publication as an RFC or to translate it into languages
other than English.</t>
</note>

    <abstract>
      <t>
   This document defines an Optional Parameter, called Capabilities,
   that is expected to facilitate the introduction of new capabilities
   in the Border Gateway Protocol (BGP) by providing graceful capability
   advertisement without requiring that BGP peering be terminated.</t>

   <t>This document obsoletes RFC 3392.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>
   The base <xref target="RFC4271">BGP-4 specification</xref>
   requires that when a BGP speaker receives an OPEN
   message with one or more unrecognized Optional Parameters, the
   speaker must terminate the BGP peering.  This complicates the introduction of
   new capabilities in BGP.
      </t>
      <t>
        This specification defines an Optional Parameter and processing
        rules that allow BGP speakers to communicate capabilities in an
        OPEN message.  A pair of BGP speakers that supports this specification
        can establish the peering even when presented with unrecognized
        capabilities, so long as all capabilities required to support
        the peering are supported.
       </t>
    </section>

    <section title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </section>

    <section title="Overview of Operations">
      <t>
   When a <xref target="RFC4271">BGP speaker</xref>
   that supports capabilities advertisement
   sends an OPEN message to its BGP peer, the message MAY include an
   Optional Parameter, called Capabilities.  The parameter lists the
   capabilities supported by the speaker.
</t><t>
   A BGP speaker determines the capabilities supported by its peer by
   examining the list of capabilities present in the Capabilities
   Optional Parameter carried by the OPEN message that the speaker
   receives from the peer.
</t><t>
   A BGP speaker that supports a particular capability may use this
   capability with its peer after the speaker determines (as described
   above) that the peer supports this capability.  Simply put, a given
   capability can be used on a peering if that capability has been 
   advertised by both peers.  If either peer has not advertised it, the
   capability cannot be used.
</t><t>
   A BGP speaker determines that its peer doesn't support capabilities
   advertisement if, in response to an OPEN message that carries the
   Capabilities Optional Parameter, the speaker receives a NOTIFICATION
   message with the Error Subcode set to Unsupported Optional Parameter.
   (This is a consequence of the base <xref target="RFC4271">BGP-4
   specification</xref> and not a new requirement.) In this case, the
   speaker SHOULD attempt to re-establish a BGP connection with the peer
   without sending to the peer the Capabilities Optional Parameter.
</t><t>
   If a BGP speaker that supports a certain capability determines that
   its peer doesn't support this capability, the speaker MAY send a
   NOTIFICATION message to the peer and terminate peering (see Section
   "Extensions to Error Handling" for more details).     For example, a
   BGP speaker may need to terminate peering if it established peering
   to exchange IPv6 routes and determines that its peer does not
   support <xref target="RFC4760">Multiprotocol Extensions for
   BGP-4</xref>.

   The Error Subcode in the NOTIFICATION message is then set to Unsupported
   Capability.  The message MUST contain the capability or capabilities
   that cause the speaker to send the message.  The decision to send
   the message and terminate the peering is local to the speaker.  If
   terminated, such peering SHOULD NOT be re-established automatically.
</t><t>
   If a BGP speaker receives from its peer a capability that it does
   not itself support or recognize, it MUST ignore that capability.  In particular,
   the Unsupported Capability NOTIFICATION message MUST NOT be
   generated and the BGP session MUST NOT be terminated
   in response to reception of a capability that is not supported by
   the local speaker.
</t>
     
    </section>
    
    <section title="Capabilities Optional Parameter (Parameter Type 2):">
      <t>
	This is an Optional Parameter that is used by a BGP speaker to
	convey to its BGP peer the list of capabilities supported by the
	speaker. The encoding of BGP Optional Parameters is specified in
	Section 4.2 of <xref target="RFC4271"></xref>. The parameter type of
	the Capabilities Optional Parameter is 2.
</t><t>
   The parameter contains one or more triples &lt;Capability Code,
   Capability Length, Capability Value&gt;, where each triple is encoded as
   shown below:
</t>
      <figure align="center">
        <artwork align="left"><![CDATA[
       +------------------------------+
       | Capability Code (1 octet)    |
       +------------------------------+
       | Capability Length (1 octet)  |
       +------------------------------+
       | Capability Value (variable)  |
       ~                              ~
       +------------------------------+
            ]]></artwork>
      </figure>
<t>
   The use and meaning of these fields are as follows:
</t><t><list hangIndent="2" style="empty"><t>
      Capability Code:
</t></list></t>
<t><list hangIndent="6" style="empty"><t>
         Capability Code is a one-octet unsigned binary integer that unambiguously
         identifies individual capabilities.
</t></list></t>
<t><list hangIndent="2" style="empty"><t>
      Capability Length:
</t></list></t>
<t><list hangIndent="6" style="empty"><t>
         Capability Length is a one-octet unsigned binary integer that contains the length
         of the Capability Value field in octets.
</t></list></t>
<t><list hangIndent="2" style="empty"><t>
      Capability Value:
</t></list></t>
<t><list hangIndent="6" style="empty"><t>
         Capability Value is a variable-length field that is interpreted
         according to the value of the Capability Code field.
</t></list></t>
<t>
   BGP speakers SHOULD NOT include more than one instance of a
   capability with the same Capability Code, Capability Length, and
   Capability Value.  Note, however, that processing of multiple
   instances of such capability does not require special handling, as
   additional instances do not change the meaning of the announced
   capability; thus, a BGP speaker MUST be prepared to accept such multiple
   instances.
</t><t>
   BGP speakers MAY include more than one instance of a capability (as
   identified by the Capability Code) with non-zero Capability Length
   field, but with different Capability Value and either the same or
   different Capability Length.
<!--Is the following suggested text okay to replace the above
   sentence?

Suggested:
 BGP speakers MAY include more than one instance of a capability (as
   identified by the Capability Code) with different Capability Values
   and either the same or different non-zero Capability Lengths.-->

  Processing of these capability
   instances is specific to the Capability Code and MUST be described in
   the document introducing the new capability.
</t><t>
	The Capabilities Optional Parameter (OPEN Optional Parameter Type 2)
	SHOULD only be included in the OPEN message once.  If the BGP
	speaker wishes to include multiple capabilities in the OPEN message,
	it SHOULD do so as discussed above -- by listing all those
	capabilities as TLVs within a single Capabilities Optional
	Parameter.  However, for backward compatibility, a BGP speaker MUST
	be prepared to receive an OPEN message that contains multiple
	Capabilities Optional Parameters, each of which contains one or more
	capabilities TLVs.  The set of capabilities should be processed in the
	same way in either case, whether it is enumerated within a single
	Capabilities Optional Parameter of the OPEN message or split across
	multiple Capabilities Optional Parameters.

</t>
    </section>
    
    <section title="Extensions to Error Handling">
      <t>
   This document defines a new Error Subcode, Unsupported Capability.
   The value of this Subcode is 7.  The Data field in the NOTIFICATION
   message MUST list the set of capabilities that causes the speaker to
   send the message.  Each such capability is encoded in the same way as it
   would be encoded in the OPEN message.
      </t><t>
   As explained in the "Overview of Operations" section, the Unsupported
   Capability NOTIFICATION is a way for a BGP speaker to complain that
   its peer does not support a required capability without which the
   peering cannot proceed.  It MUST NOT be used when a BGP speaker
   receives a capability that it does not understand; such capabilities
   MUST be ignored.
      </t>
    </section>
    
    <section anchor="IANA" title="IANA Considerations">
      <t>
   This document defines a Capability Optional Parameter along with a
   Capability Code field.  IANA maintains the registry for Capability
   Code values.  Capability Code value 0 is reserved.  Capability Code
   values 1 through 63 are to be assigned by IANA using the "IETF
   Review" policy defined in <xref target="RFC5226"></xref>.
   Capability Code values 64 through 127 are to be assigned by IANA
   using the "First Come First Served" policy defined in <xref
   target="RFC5226"></xref>. Capability Code values 128 through
   255 are for "Private Use" as defined in <xref target="RFC5226"></xref>.
      </t>
<t>
IANA created and maintains a registry for OPEN message
Optional Parameters called "BGP OPEN Optional Parameter Types". Optional
Parameters are identified by the Parameter Type, which is a one-octet
unsigned integer. Values (0 reserved, 1-255) are to
be allocated according to the "IETF Review" policy as defined in
[RFC5226].</t>  

<t>The registry has been populated with the two Parameter Type codes 
that are currently defined:

<list style="symbols">
   <t>Parameter Type 1: Authentication
   (deprecated) <xref target="RFC4271"/> [RFC5492]</t>

   <t>Parameter Type 2: Capabilities [RFC5492]</t>
</list>
</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>
   This extension to BGP does not change the underlying security issues
   inherent in the existing BGP <xref target="RFC4272"></xref>.
      </t>
    </section>

    <section anchor="Acknowledgments" title="Acknowledgments">
      <t>
   The authors would like to thank members of the IDR Working Group and
   the IESG and its Directorates for their review and comments.
      </t>
    </section>

  </middle>

  <back>

    <references title="Normative References">

      &RFC2119;
      
      &RFC5226;

      &RFC4271;
      
    </references>

    <references title="Informative References">

      
      &RFC4272;
      
      &RFC4760;

    </references>

    <section title="Comparison between RFC 2842 and RFC 3392">

      <t>
   In addition to several minor editorial changes, RFC 3392 also
   clarified how to handle multiple instances of the same capability.
      </t>
    </section>
    
    <section title="Comparison between RFC 3392 and This Document">

      <t>
   This document makes minor editorial changes and updated references,
   clarifies the use of the Unsupported Optional Parameter NOTIFICATION message,
   clarifies behavior when the Capabilities Parameter is included in the
   OPEN message multiple times, and clarifies requirements by changing a 
   number of SHOULDs to MUSTs.
      </t>
    </section>
    
  </back>
</rfc>
