<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY rfc2119 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
<!ENTITY rfc7426 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.7426.xml'>
<!ENTITY I-D.king-vnfpool-mobile-use-case SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.king-vnfpool-mobile-use-case.xml'>
<!ENTITY I-D.ietf-i2rs-problem-statement SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-i2rs-problem-statement.xml'>
<!ENTITY I-D.ietf-i2rs-architecture SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-i2rs-architecture.xml'>
<!ENTITY I-D.ietf-nvo3-arch SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-nvo3-arch.xml'>
<!ENTITY I-D.rfernando-bess-service-chaining SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.rfernando-bess-service-chaining.xml'>
<!ENTITY rfc7665 SYSTEM 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.7665.xml'>
<!ENTITY rfc7498 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.7498.xml'>
<!ENTITY I-D.ietf-dmm-fpc-cpdp SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-dmm-fpc-cpdp.xml'>
<!ENTITY I-D.bernini-nfvrg-vnf-orchestration SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.bernini-nfvrg-vnf-orchestration.xml'>
<!ENTITY I-D.ceccarelli-teas-actn-framework SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ceccarelli-teas-actn-framework.xml'>
<!ENTITY I-D.leeking-teas-actn-problem-statement SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.leeking-teas-actn-problem-statement.xml'>
<!ENTITY I-D.abad-sdnrg-sdn-ipsec-flow-protection SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.abad-sdnrg-sdn-ipsec-flow-protection'>
<!ENTITY rfc2330 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2330.xml'>
<!ENTITY rfc7398 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.7398.xml'>
<!ENTITY rfc6349 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6349.xml'>
<!ENTITY I-D.jeong-i2nsf-sdn-security-services SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.jeong-i2nsf-sdn-security-services'>
<!ENTITY I-D.cmzrjp-ippm-twamp-yang SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.cmzrjp-ippm-twamp-yang'>
<!ENTITY rfc8172 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8172.xml'>
<!ENTITY I-D.ietf-bmwg-sdn-controller-benchmark-term SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-bmwg-sdn-controller-benchmark-term'>
<!ENTITY I-D.ietf-bmwg-sdn-controller-benchmark-meth SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-bmwg-sdn-controller-benchmark-meth'>
<!ENTITY I-D.kim-bmwg-ha-nfvi SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.kim-bmwg-ha-nfvi'>
<!ENTITY I-D.vsperf-bmwg-vswitch-opnfv SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.vsperf-bmwg-vswitch-opnfv'>
<!ENTITY rfc7252 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.7252.xml'>
<!ENTITY I-D.natarajan-nfvrg-containers-for-nfv SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.natarajan-nfvrg-containers-for-nfv'>
<!ENTITY I-D.bagnulo-nfvrg-topology SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.bagnulo-nfvrg-topology'>
<!ENTITY I-D.bernardos-nfvrg-multidomain SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.bernardos-nfvrg-multidomain'>
<!ENTITY I-D.irtf-sdnrg-layered-sdn SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.irtf-sdnrg-layered-sdn'>
<!ENTITY I-D.mlk-nfvrg-nfv-reliability-using-cots SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.mlk-nfvrg-nfv-reliability-using-cots'>
<!ENTITY I-D.rorosz-nfvrg-vbaas SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.rorosz-nfvrg-vbaas'>
<!ENTITY I-D.gdmb-netslices-intro-and-ps SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.gdmb-netslices-intro-and-ps'>
<!ENTITY I-D.defoy-netslices-3gpp-network-slicing SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.defoy-netslices-3gpp-network-slicing'>
<!ENTITY rfc6241 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6241.xml'>
<!ENTITY rfc8040 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8040.xml'>
<!ENTITY rfc5810 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5810.xml'>
<!ENTITY I-D.marin-sdnrg-sdn-aaa-mng SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.marin-sdnrg-sdn-aaa-mng'>
<!ENTITY rfc8030 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8030.xml'>
<!ENTITY I-D.geng-coms-problem-statement SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.geng-coms-problem-statement'>
]>

<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc submissionType="IRTF" category="info" consensus="yes" number="8568" ipr="trust200902">
  <front>
      <title abbrev="Network Virtualization Research Challenges">
       Network Virtualization Research Challenges
      </title>

    <!-- AUTHORS -->
    <author fullname="Carlos J. Bernardos"
            initials="CJ."
            surname="Bernardos">
      <organization abbrev="UC3M">
        Universidad Carlos III de Madrid
      </organization>
      <address>
        <postal>
          <street>Av. Universidad, 30</street>
          <city>Leganes, Madrid</city>
          <code>28911</code>
          <country>Spain</country>
        </postal>
        <phone>+34 91624 6236</phone>
        <email>cjbc@it.uc3m.es</email>
        <uri>http://www.it.uc3m.es/cjbc/</uri>
      </address>
    </author>

    <author fullname="Akbar Rahman"
            initials="A."
            surname="Rahman">
      <organization abbrev="InterDigital">
        InterDigital Communications, LLC
      </organization>
      <address>
        <postal>
          <street>1000 Sherbrooke Street West, 10th floor</street>
          <city>Montreal, Quebec</city>
          <code> H3A 3G4</code>
          <country>Canada</country>
        </postal>
        <email>Akbar.Rahman@InterDigital.com</email>
        <uri>http://www.InterDigital.com/</uri>
      </address>
    </author>

    <author fullname="Juan Carlos Zuniga"
            initials="JC."
            surname="Zuniga">
      <organization abbrev="SIGFOX">
        SIGFOX
      </organization>
      <address>
        <postal>
          <street>425 rue Jean Rostand</street>
          <city>Labege</city>
          <code> 31670</code>
          <country>France</country>
        </postal>
        <email>j.c.zuniga@ieee.org</email>
        <uri>http://www.sigfox.com/</uri>
      </address>
    </author>

    <author fullname="Luis M. Contreras"
            initials="LM."
            surname="Contreras">
      <organization abbrev="TID">
        Telefonica I+D
      </organization>
      <address>
        <postal>
          <street>Ronda de la Comunicacion, S/N</street>
          <city>Madrid</city>
          <code>28050</code>
          <country>Spain</country>
        </postal>
        <email>luismiguel.contrerasmurillo@telefonica.com</email>
      </address>
    </author>

    <author fullname="Pedro Aranda"
            initials="P."
            surname="Aranda">
      <organization abbrev="UC3M">
        Universidad Carlos III de Madrid
      </organization>
      <address>
        <postal>
          <street>Av. Universidad, 30</street>
          <city>Leganes, Madrid</city>
          <code>28911</code>
          <country>Spain</country>
        </postal>
        <email>pedroandres.aranda@uc3m.es</email>
      </address>
    </author>

    <author fullname="Pierre Lynch"
            initials="P"
            surname="Lynch">
      <organization abbrev="Keysight Technologies">
        Ixia
      </organization>
      <address>
	<postal>
	  <street>800 Perimeter Park Dr, Suite A</street>
	  <city>Morrisville</city><region>NC</region>
	  <code>27560</code>
	  <country>United States of America</country>
	</postal>
	<email>pierre.lynch@keysight.com</email>
	<uri>http://www.keysight.com </uri>
      </address>
    </author>

    <date month="April" year="2019" />

    <area>Internet</area>

    <workgroup>Network Function Virtualization</workgroup>

    <abstract>

      <t>
This document describes open research challenges for network
virtualization.  Network virtualization is following a similar path as
previously taken by cloud computing. Specifically, cloud computing
popularized migration of computing functions (e.g., applications) and
storage from local, dedicated, physical resources to remote virtual
functions accessible through the Internet. In a similar manner,
network virtualization is encouraging migration of networking
functions from dedicated physical hardware nodes to a virtualized pool
of resources. However, network virtualization can be considered to be
a more complex problem than cloud computing as it not only involves
virtualization of computing and storage functions but also involves
abstraction of the network itself. This document describes current
research and engineering challenges in network virtualization
including the guarantee of quality of service, performance
improvement, support for multiple domains, network slicing, service
composition, device virtualization, privacy and security, separation
of control concerns, network function placement, and testing.  In
addition, some proposals are made for new activities in the IETF and
IRTF that could address some of these challenges. This document is a
product of the Network Function Virtualization Research Group (NFVRG).
      </t>

    </abstract>

  </front>

  <middle>

    <section anchor="sec:introduction" title="Introduction and Scope">

      <t>
The telecommunications sector is experiencing a major revolution that will shape
the way networks and services are designed and deployed for the next few
decades. In order to cope with continuously increasing demand and cost, network
operators are taking lessons from the IT paradigm of cloud computing. This new
approach of virtualizing network functions will enable multi-fold advantages by
moving communication services from bespoke hardware in the operator's core
network to Commercial Off-The-Shelf (COTS) equipment distributed across
data centers.
      </t>

      <t> 
Some of the network virtualization mechanisms that are being considered include the following:
sharing of network infrastructure to reduce costs, virtualization of core and
edge servers/services running in data centers as a way of supporting their
load-aware elastic dimensioning, and dynamic energy policies to reduce the
electricity consumption.
      </t>

      <t> 
This document presents research and engineering challenges in network
virtualization that need to be addressed in order to achieve these goals,
spanning from pure research and engineering/standards space. The objective of
this memo is to document the technical challenges and corresponding current
approaches and to expose requirements that should be addressed by future
research and standards work.
      </t>

      <t> 
This document represents the consensus of the Network Function Virtualization Research Group (NFVRG). It has been
reviewed by the RG members active in the specific areas of work
covered by the document.
      </t>

    </section>

    <section anchor="sec:terminology" title="Terminology">

      <t>
The following terms used in this document are defined by the ETSI Network
Function Virtualization (NFV) Industrial Study Group (ISG) <xref
target="etsi_gs_nfv_003" />, the Open Networking Foundation (ONF) <xref target="onf_tr_521" />, and the IETF
<xref target="RFC7426" /> <xref target="RFC7665" />:

        <list style="hanging">


          <t hangText="Application Plane:">The collection of applications and services that program
network behavior.
          </t>

          <t hangText="Control Plane (CP):">The collection of functions responsible for controlling one
or more network devices. The CP instructs network devices with respect to how to
process and forward packets. The control plane interacts primarily with the
forwarding plane and, to a lesser extent, with the operational plane.
          </t>

          <t hangText="Forwarding Plane (FP):">The collection of resources across all network devices
responsible for forwarding traffic.
          </t>

          <t hangText="Management Plane (MP):">The collection of functions responsible for monitoring,
configuring, and maintaining one or more network devices or parts of network
devices. The management plane is mostly related to the operational plane (it is
related less to the forwarding plane).
          </t>

          <t hangText="NFV Infrastructure (NFVI):">Totality of all hardware and software components
that build up the environment in which VNFs are deployed.
          </t>

          <t hangText="NFV Management and Orchestration (NFV-MANO):">Functions collectively provided by
NFVO, VNFM, and VIM.
          </t>

          <t hangText="NFV Orchestrator (NFVO):">Functional block that manages the Network Service (NS)
life cycle and coordinates the management of NS life cycle, VNF life cycle
(supported by the VNFM) and NFVI resources (supported by the VIM) to ensure an
optimized allocation of the necessary resources and connectivity.
          </t>

          <t hangText="Operational Plane (OP):">The collection of resources responsible for managing
the overall operation of individual network devices.
          </t>

          <t hangText="Physical Network Function (PNF):">Physical implementation of a network function
in a monolithic realization.
          </t>

          <t hangText="Service Function Chain (SFC):">For a given service, the abstracted view of the
required service functions and the order in which they are to be applied. This
is somehow equivalent to the Network Function Forwarding Graph (NF-FG) at ETSI.
          </t>

          <t hangText="Service Function Path (SFP):">The selection of specific service function
instances on specific network nodes to form a service graph through which an SFC
is instantiated.
          </t>

          <t hangText="Virtualized Infrastructure Manager (VIM):">Functional block that is responsible
for controlling and managing the NFVI compute, storage, and network resources,
usually within one infrastructure operator's domain.
          </t>

          <t hangText="Virtualized Network Function (VNF):">Implementation of a Network Function that
can be deployed on a Network Function Virtualization Infrastructure (NFVI).
          </t>

          <t hangText="Virtualized Network Function Manager (VNFM):">Functional block that is
responsible for the life-cycle management of VNF.
          </t>

        </list>

      </t>

    </section>

    <section anchor="sec:background" title="Background">

      <t>
This section briefly describes some basic background technologies as well as
other Standards Developing Organizations (SDOs) and open-source initiatives working on
network virtualization or related topics.
      </t>

      <section anchor="sec:nfv" title="Network Function Virtualization">

        <t>
The ETSI ISG Network Function Virtualization (NFV) is a working group that, since 2012, has aimed to
evolve quasi-standard IT virtualization technology to consolidate many
network equipment types into industry standard high-volume servers,
switches, and storage. It enables implementing network functions in
software that can run on a range of industry-standard server hardware
and can be moved to, or loaded in, various locations in the network as
required, without the need to install new equipment. The ETSI NFV is
one of the predominant NFV reference framework and architectural
footprints <xref target="nfv_sota_research_challenges" />. The ETSI
NFV framework architecture is composed of three domains
(<xref target="fig:nfv_framework" />):

          <list style="symbols" >

            <t>
Virtualized Network Function, running over the NFVI.
            </t>

            <t>
NFVI, including the diversity of physical resources and how
these can be virtualized. NFVI supports the execution of the VNFs.
            </t>

            <t>
NFV Management and Orchestration, which covers the orchestration and life-cycle
management of physical and/or software resources that support the infrastructure
virtualization, and the life-cycle management of VNFs. NFV Management and
Orchestration focuses on all virtualization-specific management tasks necessary
in the NFV framework.
            </t>

          </list>

        </t>

<figure anchor="fig:nfv_framework" title="ETSI NFV Framework" >
<artwork><![CDATA[
+-------------------------------------------+  +---------------+
|   Virtualized Network Functions (VNFs)    |  |               |
|  -------   -------   -------   -------    |  |               |
|  |     |   |     |   |     |   |     |    |  |               |
|  | VNF |   | VNF |   | VNF |   | VNF |    |  |               |
|  |     |   |     |   |     |   |     |    |  |               |
|  -------   -------   -------   -------    |  |               |
+-------------------------------------------+  |               |
                                               |               |
+-------------------------------------------+  |               |
|         NFV Infrastructure (NFVI)         |  |      NFV      |
| -----------    -----------    ----------- |  |  Management   |
| | Virtual |    | Virtual |    | Virtual | |  |      and      |
| | Compute |    | Storage |    | Network | |  | Orchestration |
| -----------    -----------    ----------- |  |               |
| +---------------------------------------+ |  |               |
| |         Virtualization Layer          | |  |               |
| +---------------------------------------+ |  |               |
| +---------------------------------------+ |  |               |
| | -----------  -----------  ----------- | |  |               |
| | | Compute |  | Storage |  | Network | | |  |               |
| | -----------  -----------  ----------- | |  |               |
| |          Hardware resources           | |  |               |
| +---------------------------------------+ |  |               |
+-------------------------------------------+  +---------------+
]]></artwork>
</figure>      

        <t>
The NFV architectural framework identifies functional blocks and the main
reference points between such blocks. Some of these are already present in
current deployments, whilst others might be necessary additions in order to
support the virtualization process and consequent operation. The functional
blocks are (<xref target="fig:nfv_arch" />):

          <list style="symbols" >

            <t>
Virtualized Network Function (VNF)
            </t>

            <t>
Element Management (EM)
            </t>

            <t>
NFV Infrastructure, including: Hardware and virtualized resources as well as
the Virtualization Layer. 
            </t>

            <t>
Virtualized Infrastructure Manager(s) (VIM)
            </t>

            <t>
NFV Orchestrator
            </t>

            <t>
VNF Manager(s)
            </t>

            <t>
Service, VNF and Infrastructure Description 
            </t>

            <t>
Operational Support Systems and Business Support Systems (OSS and BSS)
            </t>

          </list>

        </t>

<figure anchor="fig:nfv_arch" title="ETSI NFV Reference Architecture" >
<artwork><![CDATA[
                                               +--------------------+
+-------------------------------------------+  | ----------------   |
|                 OSS/BSS                   |  | | NFV          |   |
+-------------------------------------------+  | | Orchestrator +-- |
                                               | ---+------------ | |
+-------------------------------------------+  |    |             | |
|  ---------     ---------     ---------    |  |    |             | |
|  | EM 1  |     | EM 2  |     | EM 3  |    |  |    |             | |
|  ----+----     ----+----     ----+----    |  | ---+----------   | |
|      |             |             |        |--|-|    VNF     |   | |
|  ----+----     ----+----     ----+----    |  | | manager(s) |   | |
|  | VNF 1 |     | VNF 2 |     | VNF 3 |    |  | ---+----------   | |
|  ----+----     ----+----     ----+----    |  |    |             | |
+------|-------------|-------------|--------+  |    |             | |
       |             |             |           |    |             | |
+------+-------------+-------------+--------+  |    |             | |
|         NFV Infrastructure (NFVI)         |  |    |             | |
| -----------    -----------    ----------- |  |    |             | |
| | Virtual |    | Virtual |    | Virtual | |  |    |             | |
| | Compute |    | Storage |    | Network | |  |    |             | |
| -----------    -----------    ----------- |  | ---+------       | |
| +---------------------------------------+ |  | |        |       | |
| |         Virtualization Layer          | |--|-| VIM(s) +-------- |
| +---------------------------------------+ |  | |        |         |
| +---------------------------------------+ |  | ----------         |
| | -----------  -----------  ----------- | |  |                    |
| | | Compute |  | Storage |  | Network | | |  |                    |
| | | hardware|  | hardware|  | hardware| | |  |                    |
| | -----------  -----------  ----------- | |  |                    |
| |          Hardware resources           | |  |  NFV Management    |
| +---------------------------------------+ |  | and Orchestration  |
+-------------------------------------------+  +--------------------+
]]></artwork>
</figure>      


      </section>

      <section anchor="sec:sdn" title="Software-Defined Networking">

        <t>
The Software-Defined Networking (SDN) paradigm pushes the intelligence
currently residing in the network elements to a central controller
implementing the network functionality through software. In contrast
to traditional approaches, in which the network's control plane is
distributed throughout all network devices, with SDN, the control plane
is logically centralized. In this way, the deployment of new
characteristics in the network no longer requires complex and costly
changes in equipment or firmware updates, but only a change in the
software running in the controller. The main advantage of this
approach is the flexibility it provides operators to manage their
network, i.e., an operator can easily change its policies on how
traffic is distributed throughout the network.
        </t>

        <t>
One of the most well-known protocols for the SDN control plane between the
central controller and the networking elements is the OpenFlow Protocol (OFP),
which is maintained and extended by the Open Network Foundation (ONF)
&lt;https://www.opennetworking.org/&gt;. Originally, this protocol was developed
specifically for IEEE 802.1 switches conforming to the ONF OpenFlow Switch
specification <xref target="OpenFlow"/>. As the benefits of the SDN paradigm have reached a wider
audience, its application has been extended to more complex scenarios such as
wireless and mobile networks. Within this area of work, the ONF is actively
developing new OFP extensions addressing three key scenarios: (i) wireless
backhaul, (ii) cellular Evolved Packet Core (EPC), and (iii) unified access and
management across enterprise wireless and fixed networks.
        </t>

<figure anchor="fig:onf_arch" title="High-Level SDN ONF Architecture" >
<artwork><![CDATA[
+----------+
| -------  |
| |Oper.|  |            O
| |Mgmt.|  |<........> -+- Network Operator
| |Iface|  |            ^
| -------  |      +----------------------------------------+
|          |      | +------------------------------------+ |
|          |      | | ---------  ---------     --------- | |
|--------- |      | | | App 1 |  | App 2 | ... | App n | | |
||Plugins| |<....>| | ---------  ---------     --------- | |
|--------- |      | | Plugins                            | |
|          |      | +------------------------------------+ |
|          |      | Application Plane                      |
|          |      +----------------------------------------+
|          |                         A
|          |                         |
|          |                         V
|          |      +----------------------------------------+
|          |      | +------------------------------------+ |
|--------- |      | |     ------------  ------------     | |
|| Netw. | |      | |     | Module 1 |  | Module 2 |     | |
||Engine | |<....>| |     ------------  ------------     | |
|--------- |      | | Network Engine                     | |
|          |      | +------------------------------------+ |
|          |      | Control Plane                          |
|          |      +----------------------------------------+
|          |                         A
|          |                         |
|          |                         V
|          |      +----------------------------------------+
|          |      |  +--------------+   +--------------+   |
|          |      |  | ------------ |   | ------------ |   |
|----------|      |  | | OpenFlow | |   | | OpenFlow | |   |
||OpenFlow||<....>|  | ------------ |   | ------------ |   |
|----------|      |  | NE           |   | NE           |   |
|          |      |  +--------------+   +--------------+   |
|          |      | Data Plane                             |
|Management|      +----------------------------------------+
+----------+
]]></artwork>
</figure>      


<t>

<xref target="fig:onf_arch"/> shows the blocks and the functional interfaces of
the ONF architecture, which comprises three planes: data, controller, and
application. The data plane comprehends several Network Entities (NEs), which
expose their capabilities toward the control plane via a Southbound API. The
control plane includes several cooperating modules devoted to the creation
and maintenance of an abstracted resource model of the underlying network. Such a
model is exposed to the applications via a Northbound API where the application
plane comprises several applications/services, each of which has exclusive
control of a set of exposed resources.
        </t>

        <t>
The management plane spans its functionality across all planes performing the
initial configuration of the network elements in the data plane, the assignment
of the SDN controller and the resources under its responsibility. In the
control plane, the management needs to configure the policies defining the
scope of the control given to the SDN applications, to monitor the performance
of the system and to configure the parameters required by the SDN controller
modules. In the application plane, the management plane configures the parameters of the
applications and the service-level agreements. In addition to these
interactions, the management plane exposes several functions to network
operators that can easily and quickly configure and tune the network at each
layer.
        </t>

        <t>
In <xref target='RFC7426'>RFC 7426</xref>, the IRTF Software-Defined Networking
Research Group (SDNRG) documented a layer model of an SDN architecture. This was due to the following controversial discussion topics (among others). What exactly is SDN? What is the
layer structure of the SDN architecture? How do layers interface with each
other? 
        </t>

        <t>
<xref target="fig:sdn_layer_arch" /> reproduces the figure included in <xref
target='RFC7426'>RFC 7426</xref> to summarize the SDN architecture abstractions
in the form of a detailed, high-level schematic. In a particular implementation,
planes can be collocated with other planes or can be physically separated.
        </t>

        <t>
In SDN, a controller manipulates controlled entities via an interface.
Interfaces, when local, are mostly API invocations through some library or
system call. However, such interfaces may be extended via some protocol
definition, which may use local interprocess communication (IPC) or a protocol
that could also act remotely; the protocol may be defined as an open standard or
in a proprietary manner.
        </t>

        <t>
SDN expands multiple planes: forwarding, operational, control, management, and
application. All planes mentioned above are connected via interfaces.
Additionally, <xref target='RFC7426'>RFC 7426</xref> considers four abstraction
layers: the Device and resource Abstraction Layer (DAL), the Control Abstraction
Layer (CAL), the Management Abstraction Layer (MAL), and the Network Services
Abstraction Layer (NSAL).
        </t>

<figure anchor="fig:sdn_layer_arch" title="SDN-Layer Architecture" >
<artwork><![CDATA[
               o--------------------------------o
               |                                |
               | +-------------+   +----------+ |
               | | Application |   |  Service | |
               | +-------------+   +----------+ |
               |       Application Plane        |
               o---------------Y----------------o
                               |
 *-----------------------------Y---------------------------------*
 |           Network Services Abstraction Layer (NSAL)           |
 *------Y------------------------------------------------Y-------*
        |                                                |
        |               Service Interface                |
        |                                                |
 o------Y------------------o       o---------------------Y------o
 |      |    Control Plane |       | Management Plane    |      |
 | +----Y----+   +-----+   |       |  +-----+       +----Y----+ |
 | | Service |   | App |   |       |  | App |       | Service | |
 | +----Y----+   +--Y--+   |       |  +--Y--+       +----Y----+ |
 |      |           |      |       |     |               |      |
 | *----Y-----------Y----* |       | *---Y---------------Y----* |
 | | Control Abstraction | |       | | Management Abstraction | |
 | |     Layer (CAL)     | |       | |      Layer (MAL)       | |
 | *----------Y----------* |       | *----------Y-------------* |
 |            |            |       |            |               |
 o------------|------------o       o------------|---------------o
              |                                 |
              | CP                              | MP
              | Southbound                      | Southbound
              | Interface                       | Interface
              |                                 |
 *------------Y---------------------------------Y----------------*
 |         Device and resource Abstraction Layer (DAL)           |
 *------------Y---------------------------------Y----------------*
 |            |                                 |                |
 |    o-------Y----------o   +-----+   o--------Y----------o     |
 |    | Forwarding Plane |   | App |   | Operational Plane |     |
 |    o------------------o   +-----+   o-------------------o     |
 |                       Network Device                          |
 +---------------------------------------------------------------+
]]></artwork>
</figure> 

        <t>
While SDN is often directly associated to OpenFlow, this is just one (relevant)
example of a southbound protocol between the central controller and the network
entities. Other relevant examples of protocols in the SDN family are NETCONF
<xref target="RFC6241" />, RESTCONF <xref target="RFC8040" />, and ForCES <xref
target="RFC5810" />.
        </t>

      </section>

      <section anchor="sec:itu-t" title="ITU-T Functional Architecture of SDN">

        <t>
The ITU-T (the Telecommunication standardization sector of the
International Telecommunication Union) has also looked into SDN
architectures, defining a slightly modified one from what other SDOs
have done.  In ITU-T recommendation Y.3302 <xref target="itu-t-y.3302"
/>, the ITU-T provides a functional architecture of SDN with
descriptions of functional components and reference points. The
described functional architecture is intended to be used as an enabler
for further studies on other aspects such as protocols and security as
well as being used to customize SDN in support of appropriate use
cases (e.g., cloud computing, mobile networks). This recommendation is
based on ITU-T Y.3300 <xref target="itu-t-y.3300" /> and ITU-T Y.3301
<xref target="itu-t-y.3301" />. While the first describes the
framework of SDN (including definitions, objectives, high-level
capabilities, requirements, and the high-level architecture of SDN),
the second describes more-detailed requirements.
        </t>

        <t>
<xref target="fig:itu-t_arch"/> shows the SDN functional architecture
defined by the ITU-T. It is a layered architecture composed of the SDN
application layer (SDN-AL), the SDN control layer (SDN-CL), and the
SDN resource layer (SDN-RL). It also has multi-layer management
functions (MMF), which provide the ability to manage the
functionalities of SDN layers, i.e., SDN-AL, SDN-CL, and SDN-RL.  MMF interacts with
these layers using Multi-layer Management Functions Application (MMFA), Multi-layer Management Functions Control (MMFC), and Multi-layer Management Functions Resource (MMFR) reference points.
        </t>

        <t>
The SDN-AL enables a service-aware behavior of the underlying network
in a programmatic manner. The SDN-CL provides programmable means to
control the behavior of SDN-RL resources (such as data transport and
processing) following requests received from the SDN-AL according to
MMF policies. The SDN-RL is where the physical or virtual network
elements perform transport and/or processing of data packets according
to SDN-CL decisions.
        </t>

<figure anchor="fig:itu-t_arch" title="ITU-T SDN Functional Architecture" >
<artwork><![CDATA[
       MMFO                      MMFA
+-----+ . +---------------------+ . +--------------------+
|     | . |+---+ +---+ +-------+| . |+---------+ +-----+ |
|     | . ||   | |   | |       || . ||   AL.   | |     | |
|     | . || E | |   | |  App. || . || Mngmt.  | | SDN | | SDN-AL
|     | . || x | | M | | Layer || . || Support | | App | |
|     | . || t.| | u | | Mngmt.|| . || & Orch. | |     | |
|     | . ||   | | l | +-------+| . |+---------+ +-----+ |
|     | . || R | | t |          | . +--------------------+
|     | . || e | | i |          |MMFC ..................... ACI
|     | . || l | | - |          | . +--------------------+
|     | . || a | | l | +-------+| . |+------+ +---------+|
| OSS/| . || t | | a | |       || . ||      | |   App.  ||
| BSS | . || i | | y | |       || . ||      | | Support ||
|     | . || o | | e | |       || . ||      | +---------+|
|     | . || n | | r | |       || . ||  CL  | +---------+|
|     | . || s | |   | |Control|| . ||Mngmt.| | Control ||
|     | . || h | | M | | Layer || . || Supp.| |  Layer  || SDN-CL
|     | . || i | | a | | Mngmt.|| . || and  | |  Serv.  ||
|     | . || p | | n | |       || . || Orch.| +---------+|
|     | . ||   | | a | |       || . ||      | +---------+|
|     | . || M | | g | |       || . ||      | | Resource||
|     | . || n | | e | |       || . ||      | | Abstrac.||
|     | . || g | | m | +-------+| . |+------+ +---------+|
|     | . || m | | e |          | . +--------------------+
|     | . || t.| | n |          |MMFR ..................... RCI
|     | . ||   | | t |          | . +--------------------+
+-----+ . |+---+ |   | +-------+| . |+------++----------+|
          |      | O | |       || . ||      ||RL Control||
          |      | r | |Resour.|| . ||  RL  |+----------+|
     MMF  |      | c | | Layer || . ||Mngmt.|+----++----+| SDN-RL
          |      | h.| | Mngmt.|| . || Supp.||Data||Data||
          |      |   | |       || . ||      ||Tran||Proc||
          |      +---+ +-------+| . |+------++----++----+|
          +---------------------+ . +--------------------+

Legend:
  ACI:  Application Control Interface
  MMFA: Multi-layer Management Functions Application
  MMFC: Multi-layer Management Functions Control 
  MMFO: Multi-layer Management Functions OSS/BSS
  MMFR: Multi-layer Management Functions Resource
  RCI:  Resource Control Interfaces
  RL:   Resource Layer
]]></artwork>
</figure>

      </section>

      <section anchor="sec:mec" title="Multi-Access Edge Computing">

        <t>
Multi-access Edge Computing (MEC) -- formerly known as Mobile Edge
Computing -- capabilities deployed in the edge of the mobile network
can facilitate the efficient and dynamic provision of services to
mobile users. The ETSI ISG MEC working group, operative from end of
2014, intends to specify an open environment for integrating MEC
capabilities with service providers' networks, also including
applications from third parties.  These distributed computing
capabilities provide IT infrastructure as in a cloud environment for
the deployment of functions in mobile access networks.

It can be seen then as a
complement to both NFV and SDN.
        </t>

      </section>

      <section anchor="sec:omniran" title="IEEE 802.1CF (OmniRAN)">

        <t>
The IEEE 802.1CF Recommended Practice <xref target="omniran" /> specifies an
access network that connects terminals to their access routers utilizing
technologies based on the family of IEEE 802 Standards (e.g., 802.3 Ethernet,
802.11 Wi-Fi, etc.). The specification defines an access network reference
model, including entities and reference points along with behavioral and
functional descriptions of communications among those entities.
        </t>

        <t>
The goal of this project is to help unify the support of different
interfaces, enabling shared-network control and use of SDN principles,
thereby lowering the barriers to new network technologies, to new
network operators, and to new service providers.
        </t>

      </section>

      <section anchor="sec:dmtf" title="Distributed Management Task Force (DMTF)">

        <t>
The DMTF &lt;https://www.dmtf.org/&gt; is an industry standards organization
working to simplify the manageability of network-accessible
technologies through open and collaborative efforts by some technology
companies. The DMTF is involved in the creation and adoption of
interoperable management standards, supporting implementations that
enable the management of diverse traditional and emerging technologies
including cloud, virtualization, network, and infrastructure.
        </t>

        <t>
There are several DMTF initiatives that are relevant to the network
virtualization area, such as the Open Virtualization Format (OVF) for
VNF packaging; the Cloud Infrastructure Management Interface (CIMI)
for cloud infrastructure management; the Network Management (NETMAN),
for VNF management; and the Virtualization Management (VMAN), for
virtualization infrastructure management.
        </t>

      </section>

      <section anchor="sec:open_source" title="Open-Source Initiatives">

        <t>
The open-source community is especially active in the area of network
virtualization and orchestration. We next summarize some of the active
efforts:

          <list style="symbols">

            <t>
OpenStack. OpenStack is a free and open-source cloud-computing software
platform. OpenStack software controls large pools of compute, storage, and
networking resources throughout a data center, managed through a dashboard or via
the OpenStack API. 
            </t>

            <t>
Kubernetes. Kubernetes is an open-source system for automating deployment,
scaling and management of containerized applications. Kubernetes can schedule
and run application containers on clusters of physical or virtual machines.
Kubernetes allows (i) Scale on the fly, (ii) Limit hardware usage to required
resources only, (iii) Load-balancing Monitoring, and (iv) Efficient life-cycle
management.
            </t>

            <t>
OpenDayLight. OpenDayLight (ODL) is a highly available, modular, extensible and
scalable multiprotocol controller infrastructure built for SDN deployments
on modern heterogeneous multi-vendor networks. It provides a model-driven
service abstraction platform that allows users to write apps that easily work
across a wide variety of hardware and southbound protocols.
            </t>

            <t>
ONOS. The Open Network Operating System (ONOS) project is an
open-source community hosted by The Linux Foundation. The goal of the
project is to create an SDN operating system for communications service
providers that is designed for scalability, high performance, and high
availability.
            </t>



            <t>
OpenContrail. OpenContrail is a licensed Apache 2.0 project that
is built using standards-based protocols and that provides all the
necessary components for network virtualization: an SDN controller,
a virtual router, an analytics engine, and published northbound APIs.  It
has an extensive Representational State Transfer (REST) API to configure and gather operational and
analytics data from the system.
            </t>
            <t>
OPNFV. The Open Platform for NFV (OPNFV) is a carrier-grade,
integrated, open-source platform to accelerate the introduction of new
NFV products and services. By integrating components from upstream
projects, the OPNFV community aims at conducting performance and use
case-based testing to ensure the platform's suitability for NFV use
cases.  The scope of OPNFV's initial release is focused on building
NFV Infrastructure (NFVI) and Virtualized Infrastructure Manager
(VIM) by integrating components from upstream projects such as
OpenDayLight, OpenStack, Ceph Storage, Kernel-based Virtual Machine (KVM), Open vSwitch, and
Linux. These components, along with APIs to other NFV elements, form the basic infrastructure
required for Virtualized Network Functions (VNFs) and Management and
Orchestration (MANO) components. OPNFV's goal is to (i)
increase performance and power efficiency, (ii) improve reliability,
availability, and serviceability, and (iii) deliver comprehensive
platform instrumentation.
            </t>

            <t>
OSM. Open Source Mano (OSM) is an ETSI-hosted project to develop an Open Source
NFV Management and Orchestration (MANO) software stack aligned with ETSI NFV.
OSM is based on components from previous projects, such Telefonica's OpenMANO
or Canonical's Juju, among others.
            </t>

            <t>
OpenBaton. OpenBaton is a Network Function Virtualization Orchestrator
(NFVO) that is ETSI NFV compliant. OpenBaton was part of the
OpenSDNCore project started with the objective of providing a
compliant implementation of the ETSI NFV specification.
            </t>

            <t>
ONAP. Open Network Automation Platform (ONAP) is an open-source
software platform that delivers capabilities for the design, creation,
orchestration, monitoring, and life-cycle management of (i) Virtual
Network Functions (VNFs), (ii) The carrier-scale Software-Defined
Networks (SDNs) that contain them, and (iii) higher-level services
that combine the above. ONAP (derived from the AT&amp;T's ECOMP)
provides for automatic, policy-driven interaction of these functions
and services in a dynamic, real-time cloud environment.
            </t>

            <t>
SONA. The Simplified Overlay Network Architecture (SONA) is an
extension to ONOS to have an almost full SDN network control in
OpenStack for virtual tenant network provisioning. Basically, SONA is
an SDN-based network virtualization solution for cloud DC.
            </t>

          </list>

        </t>

        <t>
Among the main areas that are being developed by the aforementioned
open-source activities that relate to network virtualization research,
we can highlight policy-based resource management, analytics for
visibility and orchestration, and service verification with regard to
security and resiliency.
        </t>

      </section>

    </section>

   <section anchor="sec:Network_Virtualization_Challenges"
            title="Network Virtualization Challenges">

     <section anchor="sec:NFV_Challenges_Intro" title="Overview">


      <t>
Network virtualization is changing the way the telecommunications
sector will deploy, extend, and operate their networks. These new
technologies aim at reducing the overall costs by moving communication
services from specific hardware in the operators' cores to server
farms scattered in data centers (i.e., compute and storage
virtualization). In addition, the networks interconnecting the
functions that compose a network service are fundamentally affected in
the way they route, process, and control traffic (i.e., network
virtualization).
      </t>

     </section>

     <section anchor="sec:NFV_Challenges_service_guarantees"
               title="Guaranteeing Quality of Service">

      <t>
Achieving a given QoS in an NFV environment with
virtualized and distributed computing, storage, and networking
functions is more challenging than providing the equivalent in
discrete non-virtualized components. For example, ensuring a
guaranteed and stable forwarding data rate has proven not to be
straightforward when the forwarding function is virtualized and runs
on top of COTS server hardware <xref target="openmano_dataplane" />
<xref target="NFV-COTS" /> <xref
target="etsi_nvf_whitepaper_3" />. Again, the comparison point is
against a router or forwarder built on optimized hardware. We next
identify some of the challenges that this poses.
      </t>

       <section anchor="sec:virtualization_technologies"
                 title="Virtualization Technologies">

        <t>
The issue of guaranteeing a network QoS is less of an issue for
"traditional" cloud computing because the workloads that are treated
there are servers or clients in the networking sense and hardly ever
process packets.  Cloud computing provides hosting for applications on
shared servers in a highly separated way. Its main advantage is that
the infrastructure costs are shared among tenants and that the cloud
infrastructure provides levels of reliability that can not be achieved
on individual premises in a cost-efficient way <xref
target="intel_10_differences_nfv_cloud" />. NFV has very strict
requirements posed in terms of performance, stability, and
consistency. Although there are some tools and mechanisms to improve
this, such as Enhanced Performance Awareness (EPA), Single Root I/O
Virtualization (SR-IOV), Non-Uniform Memory Access (NUMA), Data Plane
Development Kit (DPDK), etc., these are still unsolved challenges. One
open research issue is finding out technologies that are different
from Virtual Machines (VMs) and more suitable for dealing with network functionalities.
        </t>

        <t>
Lately, a number of lightweight virtualization technologies including
containers, unikernels (specialized VMs) and minimalistic
distributions of general-purpose OSes have appeared as virtualization
approaches that can be used when constructing an NFV platform.  <xref
target="LIGHT-NFV" /> describes the
challenges in building such a platform and discusses to what extent
these technologies, as well as traditional VMs, are able to address
them.
        </t>

        </section>

        <section anchor="sec:metrics_NFV"
                 title="Metrics for NFV Characterization">

        <t>
Another relevant aspect is the need for tools for diagnostics and
measurements suited for NFV. There is a pressing need to define metrics
and associated protocols to measure the performance of
NFV. Specifically, since NFV is based on the concept of taking
centralized functions and evolving them to highly distributed software (SW)
functions, there is a commensurate need to fully understand and
measure the baseline performance of such systems.

        </t>

        <t>
The IP Performance Metrics (IPPM) WG defines metrics that can be used
to measure the quality and performance of Internet services and
applications running over transport-layer protocols (e.g., TCP and
UDP) over IP. It also develops and maintains protocols for the
measurement of these metrics. While the IPPM WG is a long-running WG
that started in 1997, at the time of writing, it does not have a
charter item or active Internet-Drafts related to the topic of network
virtualization. In addition to using IPPM to evaluate QoS, there is a
need for specific metrics for assessing the performance of
network-virtualization techniques.
        </t>

        <t>
The Benchmarking Methodology Working Group (BMWG) is also performing
work related to NFV metrics. For example, <xref target="RFC8172" /> investigates
additional methodological considerations necessary when benchmarking
VNFs that are instantiated and hosted in general-purpose hardware, using bare-metal hypervisors or other isolation environments (such as Linux
containers).  An essential consideration is benchmarking physical
and VNFs in the same way when possible, thereby
allowing direct comparison.
        </t>

        <t>
 There is a clear motivation for the work on performance metrics for NFV <xref target="etsi_gs_nfv_per_001"/>, as stated in <xref target="RFC8172"/> (and replicated here):
<!--Begin DNE -->
<list style="empty"><t>I'm
designing and building my NFV Infrastructure platform. The first steps
were easy because I had a small number of categories of VNFs to
support and the VNF vendor gave HW recommendations that I
followed. Now I need to deploy more VNFs from new vendors, and there
are different hardware recommendations. How well will the new VNFs
perform on my existing hardware? Which among several new VNFs in a
given category are most efficient in terms of capacity they deliver?
And, when I operate multiple categories of VNFs (and PNFs)
*concurrently* on a hardware platform such that they share resources,
what are the new performance limits, and what are the software design
choices I can make to optimize my chosen hardware platform?
Conversely, what hardware platform upgrades should I pursue to
increase the capacity of these concurrently operating VNFs?</t></list>
<!--End DNE -->
        </t>

        <t>
Lately, there are also some efforts looking into VNF benchmarking. The
selection of an NFV Infrastructure Point of Presence to host a VNF or
allocation of resources (e.g., virtual CPUs, memory) needs to be done
over virtualized (abstracted and simplified) resource views <xref
target="vnf_benchmarking" /> <xref target="VNF-VBAAS" />.
        </t>

        </section>

        <section anchor="sec:predictive_analysis" title="Predictive Analysis">

      <t>
On top of diagnostic tools that enable an assessment of the QoS,
predictive analyses are required to react before anomalies occur. Due
to the SW characteristics of VNFs, a reliable diagnosis framework
could potentially enable the prevention of issues by a proper
diagnosis and then a reaction in terms of acting on the potentially
impacted service (e.g., migration to a different compute node, scaling
in/out, up/down, etc.).
      </t>

        </section>

        <section anchor="sec:portability" title="Portability">

      <t>
Portability in NFV refers to the ability to run a given VNF on
multiple NFVIs, that is, guaranteeing that the VNF would be able to
perform its functions with a high and predictable performance given
that a set of requirements on the NFVI resources is met. Therefore,
portability is a key feature that, if fully enabled, would contribute
to making the NFV environment achieve a better reliability than a
traditional system. Implementing functionality in SW over "commodity"
infrastructure should make it much easier to port/move functions from
one place to another. However, this is not yet as ideal as it sounds,
and there are aspects that are not fully tackled. The existence of
different hypervisors, specific hardware dependencies (e.g., EPA
related), or state-synchronization aspects are just some examples of
troublemakers for portability purposes.
      </t>

      <t>
The ETSI NFV ISG is doing work in relation to portability. <xref
target="etsi_gs_nfv_per_001" /> provides a list of minimal features
that the VM Descriptor and Compute Host Descriptor should contain for
the appropriate deployment of VM images over an NFVI (i.e., a "telco
data center"), in order to guarantee high and predictable performance
of data-plane workloads while assuring their portability. In addition,
 <xref target="etsi_gs_nfv_per_001" /> provides a set of recommendations on the minimum
requirements that hardware (HW) and hypervisor should have for a "telco
data center" suitable for different workloads (data plane,
control plane, etc.) present in VNFs. The purpose of <xref target="etsi_gs_nfv_per_001" /> is
to provide the list of VM requirements that should be included in the
VM Descriptor template, and the list of HW capabilities that should be
included in the Compute Host Descriptor (CHD) to assure predictable
high performance. ETSI NFV assumes that the MANO functions will make
the mix &amp; match. Therefore, there are still several research
challenges to be addressed here.
      </t>

        </section>

      </section>

      <section anchor="sec:NFV_Challenges_performance_improvement"
               title="Performance Improvement">

        <section anchor="sec:energy_efficiency" title="Energy Efficiency">

        <t>
Virtualization is typically seen as a direct enabler of energy
savings. Some of the enablers for this that are often mentioned <xref
target="nfv_sota_research_challenges" /> are (i) the multiplexing
gains achieved by centralizing functions in data centers reduce the
overall energy consumed and (ii) the flexibility brought by network
programmability enables to switch off infrastructure as needed in a
much easier way. However, there is still a lot of room for improvement
in terms of virtualization techniques to reduce the power consumption,
such as enhanced-hypervisor technologies.
        </t>

        <t>
Some additional examples of research topics that could enable energy
savings are <xref target="nfv_sota_research_challenges" />:

          <list style="symbols" >

            <t>
Energy-aware scaling (e.g., reductions in CPU speeds and partially turning off
some hardware components to meet a given energy consumption target.
            </t>

            <t>
Energy-aware function placement.
            </t>

            <t>
Scheduling and chaining algorithms, for example, adapting the network topology
and operating parameters to minimize the operation cost (e.g., tracking energy
costs to identify the cheapest prices).
            </t>

          </list>

        </t>

        <t>
Note that it is also important to analyze the trade-off between energy
efficiency and network performance.
        </t>

        </section>

        <section anchor="sec:improved_link_usage" title="Improved Link Usage">

        <t>
The use of NFV and SDN technologies can help improve link usage. SDN
has already shown that it can greatly increase average link
utilization (e.g., Google example <xref target="google_sdn_wan"
/>). NFV adds more complexity (e.g., due to service-function chaining
/ VNF forwarding graphs), which needs to be considered. Aspects like the
ones described in <xref target="NFVRG-TOPO" /> (on NFV
data center topology design) have to be looked at carefully as well.
        </t>

        </section>

      </section>


      <section anchor="sec:NFV_Challenges_multiple_domains"
               title="Multiple Domains">

        <t>
Market fragmentation has resulted in a multitude of network operators each
focused on different countries and regions. This makes it difficult to create
infrastructure services spanning multiple countries, such as virtual
connectivity or compute resources, as no single operator has a footprint
everywhere. Cross-domain orchestration of services over multiple administrations
or over multi-domain single administrations will allow end-to-end network and
service elements to mix in multi-vendor, heterogeneous technology, and resource
environments <xref target="multi-domain_5GEx" />. 
        </t>

        <t>
For the specific use case of 'Network as a Service', it becomes even more
important to ensure that Cross Domain Orchestration also takes care of
hierarchy of networks and their association, with respect to provisioning
tunnels and overlays.
        </t>

        <t>
Multi-domain orchestration is currently an active research topic, which is being
tackled, among others, by ETSI NFV ISG and the 5GEx project
&lt;https://www.5gex.eu/&gt; <xref target="MULTI-NMRG" /> <xref
target="multi-domain_5GEx" />.
        </t>

        <t>
Another side of the multi-domain problem is the integration/harmonization of
different management domains. A key example comes from Multi-access Edge
Computing, which, according to ETSI, comes with its own MANO system and would
require integration if interconnected to a generic NFV system.
        </t>

      </section>


      <section anchor="sec:NFV_Challenges_network_slicing"
               title="5G and Network Slicing">

        <t>
From the beginning of all 5G discussions in the research and industry
fora, it has been agreed that 5G will have to address many more use
cases than the preceding wireless generations, which first focused on
voice services and then on voice and high-speed packet data
services. In this case, 5G should be able to handle not only the same
(or enhanced) voice and packet data services, but also emerging
services like tactile Internet and the Internet of Things (IoT). These
use cases take the requirements to opposite extremes, as some of them
require ultra-low latency and higher-speed, whereas some others
require ultra-low power consumption and high-delay tolerance.
        </t>

        <t>
Because of these very extreme 5G use cases, it is envisioned that
selective combinations of radio access networks and core network
components will have to be combined into a given network slice to
address the specific requirements of each use case.
        </t>

        <t>
For example, within the major IoT category, which is perhaps the most
disrupting one, some autonomous IoT devices will have very low
throughput, will have much longer sleep cycles (and therefore high
latency), and a battery life time exceeding by a factor of thousands
that of smartphones or some other devices that will have almost
continuous control and data communications. Hence, it is envisioned
that a customized network slice will have to be stitched together from
virtual resources or sub-slices to meet these requirements.
        </t>

        <t>
The actual definition of a "network slice" from an IP infrastructure
viewpoint is currently undergoing intense debate; see <xref
target="COMS-PS" />, <xref
target="NETSLICES" />, <xref
target="SLICE-3GPP" />, and <xref
target="ngmn_5G_whitepaper" />. Network slicing is a key for
introducing new actors in existing markets at a low cost -- by letting
new players rent "blocks" of capacity, if the new business model
enables performance that meets the application needs (e.g.,
broadcasting updates to many sensors with satellite broadcasting
capabilities). However, more work needs to be done to define the basic
architectural approach of how network slices will be defined and
formed.  For example, is it mostly a matter of defining the
appropriate network models (e.g., YANG) to stitch the network slice
from existing components?  Or do end-to-end timing, synchronization, and
other low-level requirements mean that more fundamental research has
to be done?
        </t>

        <section anchor="sec:network_slicing_vnos"
         title="Virtual Network Operators">

          <t>
The widespread use/discussion/practice of system and network
virtualization technologies has led to new business opportunities,
enlarging the offer of IT resources with virtual network and computing
resources, among others. As a consequence, the network ecosystem now
differentiates between the owner of physical resources, the
Infrastructure Provider (InP), and the intermediary that conforms and
delivers network services to the final customers, the Virtual Network
Operator (VNO).
          </t>

          <t>
VNOs aim to exploit the virtualized infrastructures to deliver
new-and-improved services to their customers. However, current network
virtualization techniques offer poor support for VNOs to control their
resources. It has been considered that the InP is responsible for the
reliability of the virtual resources, but there are several situations
in which a VNO requires a finer control on its resources. For
instance, dynamic events, such as the identification of new
requirements or the detection of incidents within the virtual system,
might urge a VNO to quickly reform its virtual infrastructure and
resource allocation. However, the interfaces offered by current
virtualization platforms do not offer the necessary functions for VNOs
to perform the elastic adaptations they need to conduct in dynamic
environments.

          </t>

          <t>
Beyond their heterogeneity, which can be resolved by software
adapters, current virtualization platforms do not have common methods
and functions, so it is difficult for the virtual network controllers
used by the VNOs to actually manage and control virtual resources
instantiated on different platforms, not even considering different
InPs. Therefore, it is necessary to reach a common definition of the
functions that should be offered by underlying platforms to give such
overlay controllers the possibility to allocate and deallocate
resources dynamically and get monitoring data about them.
          </t>

          <t>
Such common methods should be offered by all underlying controllers,
regardless of being network-oriented (e.g., ODL, ONOS, and Ryu) or
computing-oriented (e.g.,  OpenStack, OpenNebula, and
Eucalyptus). Furthermore, it is important for those platforms to
offer some "PUSH" function to report resource state, avoiding the need
for the VNO's controller to "POLL" for such data. A starting point to
get proper notifications within current REST APIs could be to consider
the protocol proposed by the WEBPUSH WG <xref target="RFC8030" />.
          </t>

          <t>
Finally, in order to establish a proper order and allow the
coexistence and collaboration of different systems, a common ontology
regarding network and system virtualization should be defined and
agreed upon, so different and heterogeneous systems can understand each
other without requiring reliance on specific adaptation mechanisms that
might break with any update on any side of the relation.
          </t>

        </section>

        <section anchor="sec:network_slicing_iot"
       title="Extending Virtual Networks and Systems to the Internet of Things">

          <t>
The Internet of Things (IoT) refers to the vision of connecting a
multitude of automated devices (e.g., lights, environmental sensors,
traffic lights, parking meters, health and security systems, etc.) to
the Internet for purposes of reporting and remote command and control
of the device. This vision is being realized by a multi-pronged
approach of standardization in various forums and complementary open-source activities. For example, in the IETF, support of IoT web
services has been defined by an HTTP-like protocol adapted for IoT
called "CoAP" <xref target="RFC7252" />; and, lately, a group has been
studying the need to develop a new network layer to support IP
applications over Low-Power Wide Area Networks (LPWAN).
          </t>

          <t>

Elsewhere, for 5G cellular evolution, there is much discussion on the
need for supporting virtual network slices for the expected massive
numbers of IoT devices. A separate virtual network slice is considered
necessary for different 5G IoT use cases because devices will have
very different characteristics than typical cellular devices like
smartphones <xref target="ngmn_5G_whitepaper" />, and the number of
IoT devices is expected to be at least one or two orders of magnitude
higher than other 5G devices (see <xref
target="sec:NFV_Challenges_network_slicing" />).
          </t>

          <t>
The specific nature of the IoT ecosystem, particularly reflected in
the Machine-to-Machine (M2M) communications, leads to the creation of
new and highly distributed systems which demand location-based network
and computing services.  A specific example can be represented by a
set of "things" that suddenly require the setup of a firewall to allow
external entities to access their data while outsourcing some
computation requirements to more powerful systems relying on
cloud-based services. This representative use case exposes important
requirements for both NFV and the underlying cloud infrastructures.
          </t>

          <t>
In order to provide the aforementioned location-based functions
integrated with highly distributed systems, the so-called fog
infrastructures should be able to instantiate VNFs, placing them in
the required place, e.g., close to their consumers. This requirement
implies that the interfaces offered by virtualization platforms must
support the specification of location-based resources, which is a key
function in those scenarios.  Moreover, those platforms must also be
able to interpret and understand the references used by IoT systems to
their location (e.g., "My-AP" or "5BLDG+2F") and also the specification
of identifiers linked to other resources, such as the case of
requiring the infrastructure to establish a link between a specific Access Point (AP)
and a specific virtual computing node. In summary, the research gap is
exact localization of VNFs at far network edge infrastructure, which is
highly distributed and dynamic.
          </t>

        </section>

     </section>

     <section anchor="sec:NFV_Challenges_Service_Composition"
              title="Service Composition">

        <t>
Current network services deployed by operators often involve the
composition of several individual functions (such as packet filtering,
deep-packet inspection, load-balancing). These services are typically
implemented by the ordered combination of a number of service
functions that are deployed at different points within a network, not
necessarily on the direct data path. This requires traffic to be
steered through the required service functions, wherever they are
deployed <xref target="RFC7498" />.
        </t>

        <t>
For a given service, the abstracted view of the required service
functions and the order in which they are to be applied is called 
"Service Function Chaining" (SFC) <xref target="sfc_challenges" />, which
is called "Network Function Forwarding Graph" (NF-FG) in ETSI. SFC is
instantiated through the selection of specific service function instances
on specific network nodes to form a service graph: this is called a
"Service Function Path" (SFP). The service functions may be applied at
any layer within the network protocol stack (network layer, transport
layer, application layer, etc.).
        </t>

        <t>
Service composition is a powerful means that can provide significant benefits
when applied in a softwarized network environment. However, there are many
research challenges in this area; for example, the ones related to composition
mechanisms and algorithms to enable load-balancing and improve reliability. The
service composition should also act as an enabler to gather information across
all hierarchies (underlays and overlays) of network deployments that may span
across multiple operators for faster serviceability, thus facilitating
accomplishing aforementioned goals of "load-balancing and improving reliability".
        </t>

        <t>
As described in <xref target="dynamic_chaining" />, different
algorithms can be used to enable dynamic service composition that
optimizes a QoS-based utility function (e.g., minimizing the latency
per-application traffic flows) for a given composition plan. Such
algorithms can consider the computation capabilities and load status
of resources executing the VNF instances, either deduced through
estimations from historical usage data or collected through real-time
monitoring (i.e., context-aware selection). For this reason,
selections should include references to dynamic information on the
status of the service instance and its constituent elements, i.e.,
monitoring information related to individual VNF instances and links
connecting them as well as derived monitoring information at the chain
level (e.g., end-to-end delay). At runtime, if one or more VNF
instances are no longer available or QoS degrades below a given
threshold, the service selection task can be rerun to perform service
substitution.
        </t>

        <t>
There are different research directions that relate to the previous point. For
example, the use of Integer Linear Programming (ILP) techniques can be explored
to optimize the management of diverse traffic flows. Deep-machine learning can
also be applied to optimize service chains using information parameters, such as
some of the ones mentioned above. Newer scheduling paradigms, like co-flows, can
also be used.
        </t>

        <t>
The SFC working group is working on an architecture for SFC <xref target="RFC7665" /> that includes the necessary protocols or
protocol extensions to convey the SFC and SFP information to nodes that are involved in the implementation of service
functions and SFCs as well as mechanisms for steering
traffic through service functions.
        </t>

        <t>
In terms of actual work items, the SFC WG has not yet considered working on
the management and configuration of SFC components related to the support of
SFC. This part is of special interest for operators and
would be required in order to actually put SFC mechanisms into operation.
Similarly, redundancy and reliability mechanisms for SFC
are currently not dealt with by any WG in the IETF. While this was the main goal
of the VNFpool BoF efforts, it still remains unaddressed.
        </t>

      </section>

      <section anchor="sec:NFV_Challenges_UE_virtualization"
               title="Device Virtualization for End Users">

        <t>
So far, most of the network softwarization efforts have focused on
virtualizing functions of network elements. While virtualization of
network elements started with the core, mobile-network architectures
are now heavily switching to also virtualize Radio Access Network
(RAN) functions. The next natural step is to get virtualization down
at the level of the end-user device (e.g., virtualizing a smartphone)
<xref target="virtualization_mobile_device" />. The cloning of a
device in the cloud (central or local) bears attractive benefits to
both the device and network operations alike (e.g., power saving at
the device by offloading computational-heaving functions to the cloud,
optimized networking -- both device-to-device and
device-to-infrastructure) for service delivery through tighter
integration of the device (via its clone in the networking
infrastructure). This is, for example, being explored by the European
H2020 ICIRRUS project &lt;https://www.icirrus-5gnet.eu&gt;.
        </t>

      </section>


      <section anchor="sec:NFV_Challenges_security_privacy"
               title="Security and Privacy">

        <t>
Similar to any other situations where resources are shared, security
and privacy are two important aspects that need to be taken into
account.
        </t>

        <t>
In the case of security, there are situations where multiple service
providers will need to coexist in a virtual or hybrid physical/virtual
environment. This requires attestation procedures amongst different
virtual/physical functions and resources as well as ongoing external
monitoring. Similarly, different network slices operating on the same
infrastructure can present security problems, for instance, if one
slice running critical applications (e.g., support for a safety system)
is affected by another slice running a less critical application. In
general, the minimum common denominator for security measures on a
shared system should be equal to or higher than the one required by the
most-critical application. Multiple and continuous threat model
analysis as well as a DevOps model are required to maintain a certain
level of security in an NFV system.  Simplistically, DevOps is a
process that combines multiple functions into single cohesive teams in
order to quickly produce quality software. Typically, it relies on also
applying the Agile development process, which focuses on (among many
things) dividing large features into multiple, smaller deliveries. One
part of this is to immediately test the new smaller features in order
to get immediate feedback on errors so that if present, they can be
immediately fixed and redeployed.
        </t>

        <t>
On the other hand, privacy refers to concerns about the control of
personal data and the decision of what to reveal to whom. In this
case, the storage, transmission, collection, and potential correlation
of information in the NFV system, for purposes not originally intended
or not known by the user, should be avoided. This is particularly
challenging, as future intentions and threats cannot be easily
predicted and still can be applied on data collected in the
past. Therefore, well-known techniques, such as data minimization
using privacy features as default and allowing users to opt in/out,
should be used to prevent potential privacy issues.
        </t>

        <t>
Compared to traditional networks, NFV will result in networks that are
much more dynamic (in function distribution and topology) and elastic
(in size and boundaries). Thus, NFV will require network operators to
evolve their operational and administrative security solutions to work
in this new environment. For example, in NFV, the network orchestrator
will become a key node to provide security policy orchestration across
the different physical and virtual components of the virtualized
network. For highly confidential data, for example, the network
orchestrator should take into account if certain physical HW of the
network is considered to be more secure (e.g., because it is located in
secure premises) than other HW.
        </t>

        <t>
Traditional telecom networks typically run under a single
administrative domain controlled by (exactly) one operator. With NFV,
it is expected that in many cases, the telecom operator will now
become a tenant (running the VNFs), and the infrastructure (NFVI) may
be run by a different operator and/or cloud service provider (see also
<xref target="sec:NFV_Challenges_multiple_domains" />). Thus, there
will be multiple administrative domains involved, making security
policy coordination more complex. For example, who will be in charge
of provisioning and maintaining security credentials such as public
and private keys? Also, should private keys be allowed to be
replicated across the NFV for redundancy reasons? Alternatively, it
can be investigated how to develop a mechanism that avoids such a
security policy coordination, thus making the system more robust.
        </t>

        <t>
On a positive note, NFV may better defend against denial-of-service (DoS)
attacks because of the distributed nature of the network (i.e., no single point
of failure) and the ability to steer (undesirable) traffic quickly <xref
target="etsi_gs_nfv_sec_001" />. Also, NFVs that have physical HW that is
distributed across multiple data centers will also provide better fault
isolation environments. Particularly, this holds true if each data center is
protected separately via firewalls, Demilitarized Zones (DMZs), and other network-protection
techniques.
        </t>

        <t>
SDN can also be used to help improve security by facilitating the
operation of existing protocols, such as Authentication, Authorization
and Accounting (AAA).  The management of AAA infrastructures, namely
the management of AAA routing and the establishment of security
associations between AAA entities, can be performed using SDN, as
analyzed in <xref target="SDN-AAA" />.
        </t>


      </section>

      <section anchor="sec:NFV_Challenges_control_concerns"
               title="Separation of Control Concerns">

        <t>
NFV environments offer two possible levels of SDN control. One level is the
need for controlling the NFVI to provide connectivity end-to-end among VNFs or
among VNFs and Physical Network Functions (PNFs). A second level is the control
and configuration of the VNFs themselves (in other words, the configuration of
the network service implemented by those VNFs), taking advantage of the
programmability brought by SDN. Both control concerns are separated in nature.
However, interaction between both could be expected in order to optimize, scale,
or influence each other.
        </t>

        <t>
Clear mechanisms for such interactions are needed in order to avoid
malfunctioning or interference concerns. These ideas are considered in <xref
target="etsi_gs_nfv_eve005" /> and <xref target="LAYERED-SDN" />.
        </t>

      </section>

      <section anchor="sec:NF_placement"
               title="Network Function Placement">

        <t>
Network function placement is a problem in any kind of network
telecommunications infrastructure. Moreover, the increased degree of freedom
added by network virtualization makes this problem even more important, and also
harder to tackle. Deciding where to place VNFs is a
resource-allocation problem that needs to (or may) take into consideration
quite a few aspects: resiliency, (anti-)affinity, security, privacy, energy
efficiency, etc.
        </t>

        <t>
When several functions are chained (typical scenario), placement algorithms
become more complex and important (as described in <xref
target="sec:NFV_Challenges_Service_Composition" />). While there has been
research on the topic (<xref target="nfv_piecing" />, <xref
target="dynamic_placement" />, and <xref target="vnf-p" />), this still remains an open
challenge that requires more attention. The use of multi-domains adds another
component of complexity to this problem that has to be considered.
        </t>

      </section>

      <section anchor="sec:testing" title="Testing">

        <t>
The impacts of network virtualization on testing can be divided into three groups: 

          <list style="numbers">

            <t>Changes in methodology</t>

            <t>New functionality</t>

            <t>Opportunities</t>

          </list>

        </t>

        <section anchor="sec:testing_changes_methodology"
                 title="Changes in Methodology">

          <t>
The largest impact of NFV is the ability to isolate the System Under
Test (SUT).  When testing PNFs, isolating
the SUT means that all the other devices that the SUT communicates
with are replaced with simulations (or controlled executions) in order
to place the SUT under test by itself. The SUT may be comprised of one
or more devices. The simulations use the appropriate traffic type and
protocols in order to execute test cases.
          </t>

          <t>
As shown in <xref target="fig:nfv_arch" />, NFV provides a common architecture
for all functions to use. A VNF is executed using resources offered by the NFVI,
which have been allocated using the MANO function. It is not possible to test a
VNF by itself, without the entire supporting environment present. This
fundamentally changes how to consider the SUT. In the case of a VNF (or multiple
VNFs), the SUT is part of a larger architecture that is necessary in order to
run the SUTs. 
          </t>

          <t>
Therefore, isolation of the SUT becomes controlling the environment in a
disciplined manner.  The components of the environment necessary to
run the SUTs that are not part of the SUT itself become the test
environment.  In the case of VNFs
that are part of the SUT, the NFVI and MANO become the test environment. The
configurations and policies that guide the test environment should remain
constant during the execution of the tests, and also from test to test.
Configurations such as CPU pinning, NUMA configuration, the SW versions and
configurations of the hypervisor, vSwitch and NICs should remain constant. The
only variables in the testing should be those controlling the SUT itself. If any
configuration in the test environment is changed from test to test, the results
become very difficult, if not impossible, to compare since the test environment
behavior may change the results as a consequence of the configuration change. 
          </t>

          <t>
Testing the NFVI itself also presents new considerations. With a PNF, the
dedicated hardware supporting it is optimized for the particular workload of the
function. Routing hardware is specially built to support packet forwarding
functions, while the hardware to support a purely control-plane application
(say, a DNS server, or a Diameter function) will not have this specialized
capability. In NFV, the NFVI is required to support all types of potentially
different workload types. 
          </t>

          <t>
Therefore, testing the NFVI requires careful consideration about what types of
metrics are sought. This, in turn, depends on the workload type the expected VNF
will be. Examples of different workload types are data forwarding, control
plane, encryption, and authentication. All these types of expected workloads
will determine the types of metrics that should be sought. For example, if the
workload is control plane, then a metric such as jitter is not useful, but
dropped packets are critical. In a multi-tenant environment, the NFVI could
support various types of workloads. In this case, testing with a variety of
traffic types while measuring the corresponding metrics simultaneously becomes
necessary.
          </t>

          <t>
Test beds for any type of testing for an NFV-based system will be largely
similar to previously used test architectures. The methods are impacted by
virtualization, as described above, but the design of test beds are similar as
in the past. There are two main new considerations: 

            <list style="symbols" >

              <t>
Since networking is based on software, which has lead to greater automation in
deployment, the test system should also be deployable with the rest of the
system in order to fully automate the system. This is especially relevant in a
DevOps environment supported by a Continuous
Integration and Continuous Deployment (CI/CD) tool chain (see <xref
target="sec:testing_opportunities" /> below).

              </t>

              <t>
In any performance test bed, the test system should not share the same resources
as the SUT. While multi-tenancy is a reality in
virtualization, having the test system share resources with the SUT will impact
the measured results in a performance test bed. The test system should be
deployed on a separate platform in order not to impact the resources
available to the SUT.
              </t>

            </list>

          </t>

        </section>

        <section anchor="sec:testing_new_functionality"
                 title="New Functionality">

          <t>
NFV presents a collection of new functionality in order to support the goal of
software networking. Each component on the architecture shown in
<xref target="fig:nfv_arch" /> has an associated set of functionality that
allows VNFs to run the following: onboarding, life-cycle management for VNFs and Network
Services (NS), resource allocation, hypervisor functions, etc. 
          </t>

          <t>
One of the new capabilities enabled by NFV is VNF Forwarding Graphs
(VNFFG).  This refers to the graph that represents a network service
by chaining together VNFs into a forwarding path. In practice, the
forwarding path can be implemented in a variety of ways using
different networking capabilities: vSwitch, SDN, and SDN with a
northbound application.  Additionally, the VNFFG might use tunneling
protocols like Virtual eXtensible Local Area Network (VXLAN). The
dynamic allocation and implementation of these networking paths will
have different performance characteristics depending on the methods
used. The path implementation mechanism becomes a variable in the
network testing of the NSs. The methodology used to test the various
mechanisms should largely remain the same; as usual, the test
environment should remain constant for each of the tests, focusing on
varying the path establishment method.
          </t>

          <t>
"Scaling" refers to the change in allocation of resources to a VNF or
NS. It happens dynamically at run-time, based on defined policies and
triggers. The triggers can be network, compute, or storage
based. Scaling can allocate more resources in times of need, or reduce
the amount of resources allocated when the demand is reduced. The SUT
in this case becomes much larger than the VNF itself: MANO controls
how scaling is done based on policies, and then allocates the
resources accordingly in the NFVI. Essentially, the testing of scaling
includes the entire NFV architecture components into the SUT.
          </t>

        </section>

        <section anchor="sec:testing_opportunities"
                 title="Opportunities">

          <t>
Softwarization of networking functionality leads to softwarization of
the test as well. As PNFs are being
transformed into VNFs, so are the test tools. This leads to the fact
that test tools are also being controlled and executed in the same
environment as the VNFs. This presents an opportunity to include
VNF-based test tools along with the deployment of the VNFs supporting
the services of the service provider into the host data centers.
Therefore, tests can be automatically executed upon deployment in the
target environment, for each deployment, and each service. With PNFs,
this was very difficult to achieve.
          </t>

          <t>
This new concept helps to enable modern concepts like DevOps and Continuous
Integration and Continuous Deployment in the NFV environment. The CI/CD pipeline
supports this concept. It consists of a series of tools, among which immediate
testing is an integral part, to deliver software from source to deployment. The
ability to deploy the test tools themselves into the production environment
stretches the CI/CD pipeline all the way to production deployment, allowing a
range of tests to be executed. The tests can be simple, with a goal of verifying
the correct deployment and networking establishment, but can also be more
complex, like testing VNF functionality.
          </t>

        </section>

      </section>

    </section>

    <section anchor="sec:NFV_Challenges_Summary_Gaps"
             title="Technology Gaps and Potential IETF Efforts">

        <t>
<xref target="tab:mapping_ietf"/> correlates the open network virtualization
research areas identified in this document to potential IETF and IRTF groups that could
address some aspects of them.  An example of a specific gap that the group could
potentially address is identified as a parenthetical beside the group name.
        </t>



	
<?rfc compact="no"?>
        <texttable anchor="tab:mapping_ietf"
                   title="Mapping of Open Research Areas to Potential
                          IETF Groups">
          <ttcol align="left">Open Research Area</ttcol>
          <ttcol align="left">Potential IETF/IRTF Group</ttcol>
            <c>1) Guaranteeing QoS</c>
              <c>IPPM WG (Measurements of NFVI)</c>
            <c>2) Performance improvement</c>
              <c>SFC WG, NFVRG (energy-driven orchestration)</c>
            <c>3) Multiple Domains</c>
              <c>NFVRG (multi-domain orchestration)</c>
            <c>4) Network Slicing</c>
              <c>NVO3 WG, NETSLICES bar BoF (multi-tenancy support)</c>
            <c>5) Service Composition</c>
              <c>SFC WG (SFC Mgmt and Config)</c>
            <c>6) End-user device virtualization</c>
              <c>N/A</c>
            <c>7) Security</c>
              <c>N/A</c>
            <c>8) Separation of control concerns</c>
              <c>NFVRG (separation between transport control and services)</c>
            <c>9) Testing</c>
              <c>NFVRG (testing of scaling)</c>
            <c>10) Function placement</c>
              <c>NFVRG, SFC WG (VNF placement algorithms and protocols)</c>
        </texttable>
<?rfc compact="yes"?>
    </section>

    <section anchor="sec:focus_points"
             title="NFVRG Focus Areas">

        <t>
<xref target="tab:focus_points"/> correlates the currently identified NFVRG
topics of interest / focus areas to the open network virtualization research
areas enumerated in this document. This can help the NFVRG in identifying and
prioritizing research topics. The current list of NFVRG focus points is the following:

          <list style="symbols" >

            <t>   
Re-architecting functions, including aspects such as new architectural and
design patterns (e.g., containerization, statelessness, serverless, control/data
plane separation), SDN integration, and proposals on programmability.
            </t>

            <t>
New management frameworks, considering aspects related to new OAM mechanisms
(e.g., configuration control, hybrid descriptors) and lightweight MANO
proposals.
            </t>

            <t>
Techniques to guarantee low latency, resource isolation, and other data-plane
features, including hardware acceleration, functional offloading to data-plane
elements (including NICs), and related approaches.
            </t>

            <t>
Measurement and benchmarking, addressing both internal measurements and external
applications.
            </t>

          </list>

        </t>


        <texttable anchor="tab:focus_points"
                   title="Mapping of NFVRG Focus Points to Open
                          Research Areas">
          <ttcol align="left">NFVRG Focus Point</ttcol>
          <ttcol align="left">Open Research Area</ttcol>
            <c>1) Re-architecting functions</c>
              <c>- Performance improvem.</c>
            <c></c>
              <c>- Network Slicing</c>
            <c></c>
              <c>- Guaranteeing QoS</c>
            <c></c>
              <c>- Security</c>
            <c></c>
              <c>- End-user device virt.</c>
              <c></c>
              <c>- Separation of control</c>
	      <c></c>
	      <c></c>
            <c>2) New management frameworks</c>
              <c>- Multiple Domains</c>
            <c></c>
              <c>- Service Composition</c>
            <c></c>
            <c>- End-user device virt.</c>
	    <c></c>
	    <c></c>
            <c>3) Low latency, resource isolation,</c>
              <c>- Performance improvem.</c>
              <c>etc.</c>
              <c>- Separation of control</c>
	      <c></c>
	      <c></c>
            <c>4) Measurement and benchmarking</c>
              <c>- Guaranteeing QoS</c>
            <c></c>
              <c>- Testing</c>
        </texttable>

  
    </section>

    <section anchor="IANA" title="IANA Considerations">

      <t>
This document has no IANA actions.
      </t>

    </section>


    <section anchor="Security" title="Security Considerations">

      <t>


   This is an Informational RFC that details research challenges; it does not introduce
   any security threat. Research challenges and gaps related to security and privacy
have been included in <xref target="sec:NFV_Challenges_security_privacy" />.
      </t>

    </section>



  </middle>

  <back>
    <references title="Informative References">
      &rfc7426;
      <!--      &I-D.natarajan-nfvrg-containers-for-nfv; Expired-->

   <reference anchor="OpenFlow">

     <front>
       <title>OpenFlow Switch Specification</title>

       <author>
         <organization>Open Networking Foundation</organization>
       </author>

       <date month="March" year="2015" />
     </front>
     <seriesInfo name="ONF" value="TS-025"/>
     <seriesInfo name="Version 1.5.1" value="(Protocol version 0x06)" />
   </reference>

      

<reference anchor='LIGHT-NFV'>
<front>
<title>An Analysis of Lightweight Virtualization Technologies for NFV</title>

<author initials='N' surname="Sriram">
    <organization />
</author>

<author initials='R' surname='Krishnan' fullname='Ram Krishnan'>
    <organization />
</author>

<author initials='A' surname='Ghanwani' fullname='Anoop Ghanwani'>
    <organization />
</author>

<author initials='D' surname='Krishnaswamy' fullname='Dilip Krishnaswamy'>
    <organization />
</author>

<author initials='P' surname='Willis' fullname='Peter Willis'>
    <organization />
</author>

<author initials='A' surname='Chaudhary' fullname='Ashay Chaudhary'>
    <organization />
</author>

<author initials='F' surname='Huici' fullname='Felipe Huici'>
    <organization />
</author>

<date month='July' day='8' year='2016' />

<abstract><t>Traditionally, NFV platforms were limited to using standard virtualization technologies (e.g., Xen, KVM, VMWare, Hyper-V, etc.) running guests based on general-purpose operating systems such as Windows, Linux or FreeBSD. More recently, a number of light-weight virtualization technologies including containers, unikernels (specialized VMs) and minimalistic distributions of general-purpose OSes have widened the spectrum of possibilities when constructing an NFV platform. This draft describes the challenges in building such a platform and discusses to what extent these technologies, as well as traditional VMs, are able to address them.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-natarajan-nfvrg-containers-for-nfv-03' />

</reference>

      
      &rfc7252;
      <!--      &I-D.bagnulo-nfvrg-topology; Expired-->

      

<reference anchor='NFVRG-TOPO'>
<front>
<title>NFVI PoP Network Topology: Problem Statement</title>

<author initials='M' surname='Bagnulo' fullname='Marcelo Bagnulo'>
    <organization />
</author>

<author initials='D' surname='Dolson' fullname='David Dolson'>
    <organization />
</author>

<date month='March' day='17' year='2016' />

<abstract><t>This documents describes considerations for the design of the interconnection network of an NFVI PoP.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-bagnulo-nfvrg-topology-01' />

</reference>


<!--      &I-D.bernardos-nfvrg-multidomain; Replaced by draft-bernardos-nmrg-multidomain-->



<reference anchor='MULTI-NMRG'>

<front>
<title>Multi-domain Network Virtualization</title>

<author initials='C' surname='Bernardos' fullname='Carlos Bernardos'>
    <organization />
</author>

<author initials='L' surname='Contreras' fullname='Luis Contreras'>
    <organization />
</author>

<author initials='I' surname='Vaishnavi' fullname='Ishan Vaishnavi'>
    <organization />
</author>

<author initials='R' surname='Szabo' fullname='Robert Szabo'>
    <organization />
</author>

<author initials='X' surname='Li' fullname='Xi Li'>
    <organization />
</author>

<author initials='F' surname='Paolucci' fullname='Francesco Paolucci'>
    <organization />
</author>

<author initials='A' surname='Sgambelluri' fullname='Andrea Sgambelluri'>
    <organization />
</author>

<author initials='B' surname='Martini' fullname='Barbara Martini'>
    <organization />
</author>

<author initials='L' surname='Valcarenghi' fullname='Luca Valcarenghi'>
    <organization />
</author>

<author initials='G' surname='Landi' fullname='Giada Landi'>
    <organization />
</author>

<author initials='D' surname='Andrushko' fullname='Dmitriy Andrushko'>
    <organization />
</author>

<author initials='A' surname='Mourad' fullname='Alain Mourad'>
    <organization />
</author>

<date month='March' day='11' year='2019' />

<abstract><t>This document analyzes the problem of multi-provider multi-domain orchestration, by first scoping the problem, then looking into potential architectural approaches, and finally describing the solutions being developed by the European 5GEx and 5G-TRANSFORMER projects.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-bernardos-nmrg-multidomain-00' />

</reference>




<!--     &I-D.irtf-sdnrg-layered-sdn; Expired; updated to draft-contreras-layered-sdn-03 per author request.-->




<reference anchor='LAYERED-SDN'>
<front>
<title>Cooperating Layered Architecture for Software Defined Networking (CLAS)</title>

<author initials='L' surname='Contreras' fullname='Luis Contreras'>
    <organization />
</author>

<author initials='C' surname='Bernardos' fullname='Carlos Bernardos'>
    <organization />
</author>

<author initials='D' surname='Lopez' fullname='Diego Lopez'>
    <organization />
</author>

<author initials='M' surname='Boucadair' fullname='Mohamed Boucadair'>
    <organization />
</author>

<author initials='P' surname='Iovanna' fullname='Paola Iovanna'>
    <organization />
</author>

<date month='November' day='22' year='2018' />

<abstract><t>Software Defined Networking adheres to the separation of the control plane from the data plane in the network nodes and its logical centralization on one or a set of control entities.  Most of the network and/or sevice intelligence is moved to these control entities.  Typically, such entity is seen as a compendium of interacting control functions in a vertical, tight integrated fashion.  The relocation of the control functions from a number of distributed network nodes to a logical central entity conceptually places together a number of control capabilities with different purposes.  As a consequence, the existing solutions do not provide a clear separation between transport control and services that relies upon transport capabilities.  This document describes an approach named Cooperating Layered Architecture for Software Defined Networking.  The idea behind that is to differentiate the control functions associated to transport from those related to services, in such a way that they can be provided and maintained independently, and can follow their own evolution path.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-contreras-layered-sdn-03' />

</reference>





      &rfc7665;
      <!--      &I-D.mlk-nfvrg-nfv-reliability-using-cots; Expired-->

      

<reference anchor='NFV-COTS'>
<front>
<title>NFV Reliability using COTS Hardware</title>

<author initials='L' surname='Mo' fullname='Li Mo'>
    <organization />
</author>

<author initials='B' surname='Khasnabish' fullname='Bhumip Khasnabish'>
    <organization />
</author>

<date month='October' day='17' year='2015' />

<abstract><t>This draft discusses the results of a recent study on the feasibility of using Commercial Off-The-Shelf (COTS) hardware for virtualized network functions in telecom equipment.  In particular, it explores the conditions under which the COTS hardware can be used in the NFV (Network Function Virtualization) environment.  The concept of silent error probability is introduced in order to take software error or undetectable hardware failures into account.  The silent error probability is included in both the theoretical work and the simulation work.  It is difficult to theoretically analyze the impact of site maintenance and site failure events.  Therefore, simulation is used for evaluating the impact of these site management related events which constitute the undesirable feature of using COTS hardware in telecom environment.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-mlk-nfvrg-nfv-reliability-using-cots-01' />

</reference>

      
      &rfc8172;
      <!--     &I-D.rorosz-nfvrg-vbaas; Expired-->

      

<reference anchor='VNF-VBAAS'>
<front>
<title>VNF Benchmark-as-a-Service</title>

<author initials='R' surname='Rosa' fullname='Raphael Rosa'>
    <organization />
</author>

<author initials='C' surname='Rothenberg' fullname='Christian Rothenberg'>
    <organization />
</author>

<author initials='R' surname='Szabo' fullname='Robert Szabo'>
    <organization />
</author>

<date month='October' day='19' year='2015' />

<abstract><t>Network Function Virtualization (NFV) promises the delivery of flexible chaining of Virtualized Network Functions (VNFs) with portability, elasticity, guaranteed performance, reliability among others.  Service providers expect similar behavior from NFV as their current appliances based infrastructure, however, with the ease and flexibility of operation and cost effectiveness.  Managing for predictable performance in virtualized environments is far from straightforward.  Considering resource provisioning, selection of an NFV Infrastructure Point of Presence to host a VNF or allocation of resources (e.g., virtual CPUs, memory) needs to be done over virtualized (abstracted and simplified) resource views.  In order to support orchestration decisions, we argue that a framework for VNF benchmarking is need.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-rorosz-nfvrg-vbaas-00' />

</reference>

      
<!--      &I-D.gdmb-netslices-intro-and-ps; Replaced by draft-galis-netslices-revised-problem-statement (also Expired).  Former is pref. of authors.-->


<reference anchor='NETSLICES'>
<front>
<title>Network Slicing - Introductory Document and Revised Problem Statement</title>

<author initials='A' surname='Galis' fullname='A. Galis'>
    <organization />
</author>

<author initials='J' surname='Dong' fullname='Jie Dong'>
    <organization />
</author>

<author initials='K' surname='Makhijani'>
    <organization />
</author>

<author initials='S' surname='Bryant' fullname='Stewart Bryant'>
    <organization />
</author>

<author initials='M' surname='Boucadair' fullname='Mohamed Boucadair'>
    <organization />
</author>

<author initials='P' surname='Martinez-Julia' fullname='Pedro Martinez-Julia'>
    <organization />
</author>

<date month='February' day='14' year='2017' />

<abstract><t>This document introduces Network Slicing problems and the motivation for new work areas. It represents an initial revision of the Network Slicing problem statement derived from the analysis of the technical gaps in IETF protocols ecosystem.  It complements and brings together the silo efforts being carried out in several other IETF working groups to achieve certain aspects of Network Slicing functions and operations.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-gdmb-netslices-intro-and-ps-02' />

</reference>



<!--      &I-D.defoy-netslices-3gpp-network-slicing; Expired-->


<reference anchor='SLICE-3GPP'>
<front>
<title>Network Slicing - 3GPP Use Case</title>

<author initials='X' surname='Foy' fullname='Xavier de Foy'>
    <organization />
</author>

<author initials='A' surname='Rahman' fullname='Akbar Rahman'>
    <organization />
</author>

<date month='October' day='16' year='2017' />

<abstract><t>This document describes work conducted at the 3GPP standard organization on 5G Network Slicing.  Its goal is to provide detailed use cases, and help better define requirements, for Internet Protocols supporting Network Slicing.</t></abstract>

</front>

<seriesInfo name='Work in Prgoress,' value='draft-defoy-netslices-3gpp-network-slicing-02' />

</reference>


      &rfc7498;
      &rfc6241;
      &rfc8040;
      &rfc5810;
      &rfc8030;
      <!--     &I-D.marin-sdnrg-sdn-aaa-mng;  Expired-->



<reference anchor='SDN-AAA'>
<front>
<title>Software-Defined Networking (SDN)-based AAA Infrastructures Management</title>

<author initials='R' surname='Lopez' fullname='Rafael Lopez'>
    <organization />
</author>

<author initials='G' surname='Lopez-Millan' fullname='Gabriel Lopez-Millan'>
    <organization />
</author>

<date month='November' day='12' year='2015' />

<abstract><t>This document describes the management of Authentication, Authorization and Accounting (AAA) infraesctrutures by means of a Software-Defined Network (SDN) controller and raises the requirements to support this service.  It considers the management of AAA routing and the establishment of security associations between AAA entities.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-marin-sdnrg-sdn-aaa-mng-00' />

</reference>

      
<!--      &I-D.geng-coms-problem-statement;  Expired-->

<reference anchor='COMS-PS'>
<front>
<title>Problem Statement of Common Operation and Management of Network Slicing</title>

<author initials='L' surname='Geng' fullname='Liang Geng'>
    <organization />
</author>

<author initials='S' surname='Slawomir' fullname='Slawomir'>
    <organization />
</author>

<author initials='L' surname='Qiang' fullname='Li Qiang'>
    <organization />
</author>

<author initials='S' surname='Matsushima' fullname='Satoru Matsushima'>
    <organization />
</author>

<author initials='A' surname='Galis' fullname='A. Galis'>
    <organization />
</author>

<author initials='L' surname='Contreras' fullname='Luis Contreras'>
    <organization />
</author>

<date month='March' day='5' year='2018' />

<abstract><t>This document discusses the problem statement of Common Operation and Management of Network Slicing (COMS).  The purpose of this document is to identify the problem space of COMS and discuss the approach COMS is using to match the top-down network slice management concern with the underlay technologies.  Furthermore, the role of a common information model is introduced and corresponding design principles are also discussed.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-geng-coms-problem-statement-04' />

</reference>



      <reference anchor="ngmn_5G_whitepaper" target="https://www.ngmn.org/fileadmin/ngmn/content/images/news/ngmn_news/NGMN_5G_White_Paper_V1_0.pdf">
        <front>
          <title>NGMN 5G White Paper</title>
          <author><organization>NGMN Alliance</organization></author>
          <date year="2015" month="February"/>
        </front>
	<seriesInfo name="Version" value="1.0"/>
      </reference>
      
      <reference anchor="etsi_nvf_whitepaper_3" target="http://portal.etsi.org/NFV/NFV_White_Paper3.pdf">
						
        <front>
          <title>Network Functions Virtualisation (NFV) - White Paper #3: Network Operator Perspectives on Industry Progress</title>
          <author><organization>ETSI</organization></author>
          <date year="2014" month="October"/>
        </front>
	<seriesInfo name="Issue" value="1"/>
	<seriesInfo name="SDN &amp; OpenFlow World Congress" value="Dusseldorf, Germany"/>
      </reference>

      

      <reference anchor="etsi_gs_nfv_eve005"
     target="http://www.etsi.org/deliver/etsi_gs/NFV-EVE/001_099/005/01.01.01_60/gs_NFV-EVE005v010101p.pdf">
    <front>
     <title>Network Functions Virtualisation (NFV); Ecosystem; Report on SDN Usage in NFV Architectural Framework</title>
     <author>
      <organization>ETSI NFV ISG</organization>
     </author>
     <date month="December" year="2015"/>
    </front>
    <seriesInfo name="ETSI GS NFV-EVE 005 V1.1.1" value="NFV-EVE 005"/>

      </reference>

      

      <reference anchor="etsi_gs_nfv_003"
     target="http://www.etsi.org/deliver/etsi_gs/NFV/001_099/003/01.02.01_60/gs_NFV003v010201p.pdf">
    <front>
     <title>Network Functions Virtualisation (NFV); Terminology for Main Concepts in NFV</title>
     <author>
      <organization>ETSI NFV ISG</organization>
     </author>
     <date month="December" year="2014"/>
    </front>
    <seriesInfo name="ETSI GS NFV 003 V1.2.1" value="NFV 003"/>

      </reference>

      <reference anchor="onf_tr_521"
     target="https://www.opennetworking.org/images/stories/downloads/sdn-resources/technical-reports/TR-521_SDN_Architecture_issue_1.1.pdf">
    <front>
     <title>SDN Architecture</title>
     <author>
      <organization>Open Networking Foundation</organization>
     </author>
     <date month="February" year="2016"/>
    </front>
    <seriesInfo name="ONF TR-521" value="TR-521, Issue 1.1"/>
    <format type="PDF" target="https://www.opennetworking.org/images/stories/downloads/sdn-resources/technical-reports/TR-521_SDN_Architecture_issue_1.1.pdf"/>
      </reference>

      
      <reference anchor="omniran">
    <front>
     <title>Recommended Practice for Network Reference Model and Functional Description of IEEE 802 Access Network</title>
     <author>
      <organization>IEEE</organization>
     </author>
     <date month="December" year="2017"/>
    </front>
    <seriesInfo name="P802.1CF" value="IEEE Draft"/>
      </reference>

      <reference anchor="openmano_dataplane"
     target="https://www.ietf.org/proceedings/92/slides/slides-92-nfvrg-7.pdf">
    <front>
     <title>OpenMANO: The Dataplane Ready Open Source NFV MANO Stack</title>
     <author initials="D" surname="Lopez" fullname="Diego R. Lopez">
      <organization>Telefonica I+D</organization>
     </author>
     <date month="March" year="2015"/>
    </front>
      </reference>

      <reference anchor="intel_10_differences_nfv_cloud"
     target="https://software.intel.com/en-us/videos/discover-the-top-10-differences-between-nfv-and-cloud-environments">
    <front>
     <title>Discover the Top 10 Differences Between NFV and Cloud Environments</title>
     <author initials="P" surname="Torre" fullname="Petar Torre">
      <organization>Intel</organization>
     </author>
     <date month="November" year="2015"/>
    </front>
      </reference>



      
      <reference anchor="etsi_gs_nfv_per_001"
     target="https://www.etsi.org/deliver/etsi_gs/nfv-per/001_099/001/01.01.02_60/gs_nfv-per001v010102p.pdf">
    <front>
     <title>Network Functions Virtualisation (NFV); NFV Performance &amp; Portability Best Practises</title>
     <author>
      <organization>ETSI NFV ISG</organization>
     </author>
     <date month="December" year="2014"/>
    </front>
    <seriesInfo name="ETSI GS NFV-PER 001 V1.1.2" value="NFV-PER 001"/>
      </reference>

      <reference anchor="vnf_benchmarking"
     target="https://www.ietf.org/proceedings/97/slides/slides-97-nfvrg-06-vnf-benchmarking-00.pdf">
    <front>
     <title>A VNF Testing Framework Design, Implementation and Partial Results</title>
     <author initials="R" surname="Rosa" fullname="Raphael V. Rosa">
      <organization>FEEC/UNICAMP</organization>
     </author>
     <author initials="C" surname="Rothenberg" fullname="Christial E. Rothenberg">
      <organization>FEEC/UNICAMP</organization>
     </author>
     <author initials="R" surname="Szabo" fullname="Robert Szabo">
      <organization>Ericsson</organization>
     </author>
     <date month="November" year="2016"/>
    </front>
      <seriesInfo name="NFVRG" value="IETF 97"/>
      </reference>


      
      <reference anchor="nfv_sota_research_challenges" >
    <front>
     <title>Network Function Virtualization: State-of-the-art and Research Challenges</title>
     <author initials="R" surname="Mijumbi" fullname="Rashid Mijumbi">
     </author>
     <author initials="J" surname="Serrat" fullname="Joan Serrat">
     </author>
     <author initials="J-L" surname="Gorricho" fullname="Juan-Luis Gorricho">
     </author>
     <author initials="N" surname="Bouten" fullname="Niels Bouten">
     </author>
     <author initials="F" surname="De Turck" fullname="Filip De Turck">
     </author>
     <author initials="R" surname="Boutaba" fullname="Raouf Boutaba">
     </author>
     <date month="September" year="2015"/>
    </front>
    <seriesInfo name="IEEE Communications Surveys &amp; Tutorials" value="Volume: 18, Issue: 1, pp. 236-262"/>
    <seriesInfo name="DOI" value="10.1109/COMST.2015.2477041"/>
      </reference>

      <reference anchor="google_sdn_wan" >
    <front>
     <title>B4: experience with a globally-deployed Software Defined WAN</title>
     <author>
       <organization>Jain, S., et al.</organization>
     </author>
     <date month="August" year="2013"/>
    </front>
    <seriesInfo name="SIGCOMM '13: Proceedings of the ACM SIGCOMM 2013 conference on SIGCOMM," value="pp. 3-14" />
    <seriesInfo name="Hong Kong" value="China"/>
    <seriesInfo name="DOI" value="10.1145/2486001.2486019"/>
      </reference>


      

      <reference anchor="virtualization_mobile_device" >
    <front>
     <title>Virtualization of Mobile Device User Experience</title>
     <author initials="W" surname="Sproule" fullname="William D. Sproule">
     </author>
     <author initials="A" surname="Fernando" fullname="Antonio Winslow Fernando">
     </author>
     <date/>
    </front>
    <seriesInfo name="US Patent 9.542.062" value="B2" />
    <seriesInfo name="filed October 2013" value="and issued December 2014"/>
    <seriesInfo name="Current Assignee:" value="Microsoft Technology Licensing LLC"/>
      </reference>


      
      <reference anchor="etsi_gs_nfv_sec_001"
     target="http://www.etsi.org/deliver/etsi_gs/NFV-SEC/001_099/001/01.01.01_60/gs_NFV-SEC001v010101p.pdf">
    <front>
     <title>Network Functions Virtualisation (NFV); NFV Security; Problem Statement</title>
     <author>
      <organization>ETSI NFV ISG</organization>
     </author>
     <date month="October" year="2014"/>
    </front>
    <seriesInfo name="ETSI GS NFV-SEC 001 V1.1.1" value="NFV-SEC 001"/>
      </reference>

      <reference anchor="vnf-p" >
    <front>
     <title>VNF-P: A model for efficient placement of virtualized network functions</title>
     <author initials="H" surname="Moens" fullname="Hendrik Moens">
     </author>
     <author surname="Filip De Turck">
     </author>
     <date month="November" year="2014"/>
    </front>
    <seriesInfo name="10th International Conference on Network and Service Management (CNSM) and Workshop" value="pp. 418-423"/>
    <seriesInfo name="DOI" value="10.1109/CNSM.2014.7014205"/>
      </reference>

      <reference anchor="dynamic_placement" >
    <front>
     <title>The dynamic placement of virtual network functions</title>
     <author initials="S" surname="Clayman" fullname="Stuart Clayman">
     </author>
     <author initials="E" surname="Maini" fullname="Elisa Maini">
     </author>
     <author initials="A" surname="Galis" fullname="Alex Galis">
     </author>
     <author initials="A" surname="Manzalini" fullname="Anotonio Manzalini">
     </author>
     <author initials="N" surname="Mazzocca" fullname="Nicola MAzzocca">
     </author>
     <date month="May" year="2014"/>
    </front>
    <seriesInfo name="2014 IEEE Network Operations and Management Symposium (NOMS)" value="pp. 1-9"/>
    <seriesInfo name="DOI" value="10.1109/NOMS.2014.6838412"/>
      </reference>

      
      <reference anchor="nfv_piecing" >
    <front>
     <title>Piecing together the NFV provisioning puzzle: Efficient placement and chaining of virtual network functions</title>
     <author initials="M" surname="Luizelli" fullname="Marcelo Caggiani Luizelli">
     </author>
     <author initials="L" surname="Bays" fullname="Leonardo Richter Bays">
     </author>
     <author initials="L" surname="Buriol" fullname="Luciana Salete Buriol">
     </author>
     <author initials="M" surname="Barcellos" fullname="Marinho Pilla Barcellos">
     </author>
     <author initials="L" surname="Gaspary" fullname="Luciana Paschoal Gaspary">
     </author>
     <date month="May" year="2015"/>
    </front>
    <seriesInfo name="2015 IFIP/IEEE International Symposium on Integrated Network Management (IM)" value="pp. 98-106"/>
    <seriesInfo name="DOI" value="10.1109/INM.2015.7140281"/>
      </reference>



      
      <reference anchor="multi-domain_5GEx" >
    <front>
     <title>5GEx: Realizing a Europe-wide Multi-domain framework for software-defined infrastructures</title>
     <author initials="C" surname="Bernardos" fullname="Carlos J. Bernardos">
     </author>
     <author initials="B" surname="Gero" fullname="Balazs Peter Gero">
     </author>
     <author initials="M" surname="Di Girolamo" fullname="Marco Di Girolamo">
     </author>
     <author initials="A" surname="Kern" fullname="Andras Kern">
     </author>
     <author initials="B" surname="Martini" fullname="Barbara Martini">
     </author>
     <author initials="I" surname="Vaishnavi" fullname="Ishan Vaishnavi">
     </author>
     <date month="July" year="2016"/>
    </front>
    <seriesInfo name="Transactions on Emerging Telecommunications Technologies" value="Vol. 27, No. 9, pp. 1271-1280"/>
    <seriesInfo name="DOI" value="10.1002/ett.3085"/>
      </reference>


      <reference anchor="sfc_challenges" >
    <front>
     <title>Service Function Chaining in Next Generation Networks: State of the Art and Research Challenges</title>
     <author initials="A" surname="Medhat" fullname="Ahmed M. Medhat">
     </author>
     <author initials="T" surname="Taleb" fullname="Tarik Taleb">
     </author>
     <author initials="A" surname="Elmangoush" fullname="Asma Elmangoush">
     </author>
     <author initials="G" surname="Carella" fullname="Giuseppe A. Carella">
     </author>
     <author initials="S" surname="Covaci" fullname="Stefan Covaci">
     </author>
     <author initials="T" surname="Magedanz" fullname="Thomas Magedanz">
     </author>
     <date month="February" year="2017"/>
    </front>
    <seriesInfo name="IEEE Communications Magazine" value="vol. 55, no. 2, pp. 216-223"/>
    <seriesInfo name="DOI" value="10.1109/MCOM.2016.1600219RP"/>
      </reference>

      <reference anchor="dynamic_chaining" >
    <front>
     <title>A Service-Oriented Approach for Dynamic Chaining of Virtual Network Functions over Multi-Provider Software-Defined Networks</title>
     <author initials="B" surname="Martini" fullname="Barbara Martini">
     </author>
     <author initials="F" surname="Paganelli" fullname="Federica Paganelli">
     </author>
     <date month="June" year="2016"/>
    </front>
    <seriesInfo name="Future Internet" value="Vol. 8, No. 2"/>
    <seriesInfo name="DOI" value="10.3390/fi8020024"/>
      </reference>

      <reference anchor="itu-t-y.3300"
     target="http://www.itu.int/rec/T-REC-Y.3300-201406-I/en">
    <front>
     <title>Y.3300: Framework of software-defined networking</title>
     <author>
      <organization>ITU-T</organization>
     </author>
     <date month="June" year="2014"/>
    </front>
    <seriesInfo name="ITU-T Recommendation" value="Y.3300"/>
      </reference>

      <reference anchor="itu-t-y.3301"
     target="http://www.itu.int/rec/T-REC-Y.3301-201609-I/en">
    <front>
     <title>Y.3301: Functional requirements of software-defined networking</title>
     <author>
      <organization>ITU-T</organization>
     </author>
     <date month="September" year="2016"/>
    </front>
    <seriesInfo name="ITU-T Recommendation" value="Y.3301"/>
      </reference>

      <reference anchor="itu-t-y.3302"
     target="http://www.itu.int/rec/T-REC-Y.3302-201701-I/en">
    <front>
     <title>Y.3302: Functional architecture of software-defined networking</title>
     <author>
      <organization>ITU-T</organization>
     </author>
     <date month="January" year="2017"/>
    </front>
    <seriesInfo name="ITU-T Recommendation" value="Y.3302"/>
      </reference>

    </references>

        <section anchor="Acknowledgments" title="Acknowledgments" numbered="no">

      <t>
The authors want to thank Dirk von Hugo, Rafa Marin, Diego Lopez, Ramki
Krishnan, Kostas Pentikousis, Rana Pratap Sircar, Alfred Morton, Nicolas Kuhn,
Saumya Dikshit, Fabio Giust, Evangelos Haleplidis, Angeles Vazquez-Castro,
Barbara Martini, Jose Saldana, and Gino Carrozzo for their very useful reviews
and comments to the document. Special thanks to Pedro Martinez-Julia, who
provided text for the network slicing section.
      </t>

      <t>
The authors want to also thank Dave Oran and Michael Welzl for their very
detailed IRSG reviews.
      </t>

      <t>
The work of Carlos J.&nbsp;Bernardos and Luis M.&nbsp;Contreras is partially supported by
the H2020 5GEx (Grant Agreement no.&nbsp;671636) and 5G&nbhy;TRANSFORMER (Grant Agreement
no.&nbsp;761536) projects.
      </t>

    </section>

  </back>

</rfc>
