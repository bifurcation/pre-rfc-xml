<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc5036 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5036.xml">
<!ENTITY rfc5082 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5082.xml">
<!ENTITY rfc5443 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5443.xml">
<!ENTITY rfc5925 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5925.xml">
]>

<rfc number="6720" category="std" ipr="trust200902" submissionType="IETF" consensus="yes"
     updates="5036">

  <?rfc toc="yes" ?>

  <?rfc compact="yes"?>

  <?rfc subcompact="no"?>

  <?rfc symrefs="yes"?>

  <?rfc sortrefs="yes" ?>

  <?rfc rfcedstyle="yes"?> 

  <front>
    <title abbrev="GTSM for LDP">The Generalized TTL Security Mechanism (GTSM)
    for the Label Distribution Protocol (LDP)</title>

    <author fullname="Carlos Pignataro" initials="C.M." surname="Pignataro">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>7200-12 Kit Creek Road</street>

          <street/>

          <city>Research Triangle Park</city>

          <code>27709</code>

          <region>NC</region>

          <country>USA</country>
        </postal>



        <email>cpignata@cisco.com</email>
      </address>
    </author>

    <author fullname="Rajiv Asati" initials="R." surname="Asati">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>7025-6 Kit Creek Road</street>

          <street/>

          <city>Research Triangle Park</city>

          <code>27709</code>

          <region>NC</region>

          <country>USA</country>
        </postal>

        <email>rajiva@cisco.com</email>
      </address>
    </author>

    <date month="August" year="2012" />

    <area>Routing</area>

    <workgroup>MPLS Working Group</workgroup>

    <keyword>GTSM</keyword>

    <keyword>LDP</keyword>

    <abstract>
      <t>The Generalized TTL Security Mechanism (GTSM) describes a generalized
      use of a packet's Time to Live (TTL) (IPv4) or Hop Limit (IPv6) to
      verify that the packet was sourced by a node on a connected link,
      thereby protecting the router's IP control plane from CPU
      utilization-based 
      attacks. This technique improves security and is used by many
      protocols. This document defines the GTSM use for the Label Distribution
      Protocol (LDP).</t>

      <t>This specification uses a bit reserved in RFC 5036 and therefore
      updates RFC 5036.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="Introduction" title="Introduction">
      <t>LDP <xref target="RFC5036"/> specifies two peer discovery mechanisms,
      a Basic one and an Extended one, both using UDP transport. The Basic
      Discovery mechanism is used to discover LDP peers that are directly
      connected at the link level, whereas the Extended Discovery mechanism is
      used to locate Label Switching Router (LSR) neighbors that are not
      directly connected at the link level. Once discovered, the LSR neighbors
      can establish the LDP peering session, using the TCP transport
      connection.</t>

      <t>The Generalized TTL Security Mechanism (GTSM) <xref
      target="RFC5082"/> is a mechanism based on IPv4 Time To Live (TTL) or
      IPv6 Hop Limit value verification so as to provide a simple and
      reasonably robust defense from infrastructure attacks using forged
      protocol packets from outside the network. GTSM can be applied to any
      protocol peering session that is established between routers that are
      adjacent. Therefore, GTSM can protect an LDP protocol peering session
      established using Basic Discovery.</t>

      <t>This document specifies LDP enhancements to accommodate GTSM. In
      particular, this document specifies the enhancements in the following
      areas: <list style="numbers">
          <t>The Common Hello Parameter TLV of LDP Link Hello message</t>

          <t>Sending and Receiving procedures for LDP Link Hello message</t>

          <t>Sending and Receiving procedures for LDP Initialization
          message</t>
        </list></t>

      <t>GTSM specifies that "it SHOULD NOT be enabled by default in order to
      remain backward compatible with the unmodified protocol" (see Section 3
      of <xref target="RFC5082"/>). This document specifies a "built-in
      dynamic GTSM capability negotiation" for LDP to suggest the use of GTSM.
      GTSM will be used as specified in this document provided both peers on
      an LDP session can detect each others' support for GTSM procedures and
      agree to use it. That is, the desire to use GTSM (i.e., its negotiation
      mechanics) is enabled by default without any configuration.</t>

      <t>This specification uses a bit reserved in Section 3.5.2 of <xref
      target="RFC5036"/> and therefore updates <xref target="RFC5036"/>.</t>

      <section anchor="Req" title="Specification of Requirements">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119"/>.</t>
      </section>

      <section anchor="Scope" title="Scope">
        <t>This document defines procedures for LDP using IPv4 routing but
        not for LDP using IPv6 routing, since the latter has GTSM built into
        the protocol definition <xref target="LDP-IPV6"/>.</t>

        <t>Additionally, the GTSM for LDP specified in this document applies
        only to single-hop LDP peering sessions and not to multi-hop LDP
        peering sessions, in line with Section 5.5 of <xref
        target="RFC5082"/>. Consequently, any LDP method or feature (such as
        LDP IGP Synchronization <xref target="RFC5443"/> or LDP Session
        Protection <xref target="LDP-SPROT"/>) that relies on multi-hop LDP
        peering sessions would not work with GTSM and will require (statically
        or dynamically) disabling the GTSM capability. See <xref
        target="Multi-hop"/>.</t>
      </section>
    </section>

    <section anchor="Procedures" title="GTSM Procedures for LDP">
      <section anchor="Parameter"
               title="GTSM Flag in the Common Hello Parameter TLV">
        <t>A new flag in the Common Hello Parameter TLV, named G flag (for GTSM),
        is defined by this document in a previously reserved bit. An LSR
        indicates that it is capable of applying GTSM procedures, as defined
        in this document, to the subsequent LDP peering session, by setting
        the GTSM flag to 1. The Common Hello Parameters TLV, defined in
        Section 3.5.2 of <xref target="RFC5036"/>, is updated as shown in
        <xref target="Fig1"/>. <figure align="center" anchor="Fig1"
            title="GTSM Flag in the Common Hello Parameter TLV">
            <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|0|0| Common Hello Parms(0x0400)|      Length                   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|      Hold Time                |T|R|G|   Reserved              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

T, Targeted Hello
   As specified in [RFC5036].

R, Request Send Targeted Hellos
   As specified in [RFC5036].

G, GTSM
   A value of 1 specifies that this LSR supports GTSM procedures,
   where a value of 0 specifies that this LSR does not support GTSM.

Reserved
   This field is reserved.  It MUST be set to zero on transmission
   and ignored on receipt.
]]></artwork>
          </figure> The G flag is meaningful only if the T flag is set to 0
        (which must be the case for Basic Discovery); otherwise, the value of
        the G flag is ignored on receipt.</t>

        <t>Any LSR not supporting GTSM for LDP as defined in this document
        (i.e., an LSR that does not recognize the G flag) would continue to
        ignore the G flag, independent of the values of the T and R flags, as per Section
        3.5.2 of <xref target="RFC5036"/>. Similarly, an LSR that does
        recognize the G flag but that does not support GTSM (either because it
        is not implemented or because it is so configured) would not set the
        G flag (i.e., G=0) when sending LDP Link Hellos and would effectively
        ignore the G flag when receiving LDP Link Hello messages.</t>
      </section>

      <section anchor="Hello"
               title="GTSM Sending and Receiving Procedures for LDP Link Hello">
        <t>First, LSRs using LDP Basic Discovery <xref target="RFC5036"/>
        send LDP Hello messages to link-level multicast address (224.0.0.2 or
        "all routers"). Such messages are never forwarded beyond one hop and
        are RECOMMENDED to have their IP TTL or Hop Count = 1.</t>

        <t/>

        <t>Unless configured otherwise, an LSR that supports GTSM procedures
        MUST set the G flag (for GTSM) to 1 in the Common Hello Parameter TLV in
        the LDP Link Hello message <xref target="RFC5036"/>.</t>

        <t>If an LSR that supports GTSM and is configured to use it recognizes
        the presence of the G flag (in the Common Hello Parameter TLV) with the
        value = 1 in the received LDP Link Hello message, then it MUST enforce GTSM
        for LDP in the subsequent TCP/LDP peering session with the neighbor
        that sent the Hello message, as specified in <xref target="Init"/> of
        this document.</t>

        <t>If an LSR does not recognize the presence of the G flag (in the Common
        Hello Parameter TLV of Link Hello message), or recognizes the presence
        of G flag with the value = 0, then the LSR MUST NOT enforce GTSM for
        LDP in the subsequent TCP/LDP peering session with the neighbor that
        sent the Hello message. This ensures backward compatibility as well as
        automatic GTSM deactivation.</t>
      </section>

      <section anchor="Init"
               title="GTSM Sending and Receiving Procedures for LDP Initialization">
        <t>If an LSR that has sent and received LDP Link Hello with G flag = 1
        from the directly connected neighbor, then the LSR MUST enforce GTSM
        procedures, as defined in Section 3 of <xref target="RFC5082"/>, in
        the forthcoming TCP Transport Connection with that neighbor. This
        means that the LSR MUST check for the incoming unicast packets' TTL or
        Hop Count to be 255 for the particular LDP/TCP peering session and
        decide the further processing as per <xref target="RFC5082"/>.</t>

        <t>If an LSR that has sent LDP Link Hello with G flag = 1, but
        received LDP Link Hello with G flag = 0 from the directly connected
        neighbor, then the LSR MUST NOT enforce GTSM procedures, as defined in
        Section 3 of <xref target="RFC5082"/>, in the forthcoming TCP
        Transport Connection with that neighbor.</t>
      </section>
    </section>

    <section anchor="Multi-hop"
             title="LDP Peering Scenarios and GTSM Considerations">
      <t>This section discusses GTSM considerations arising from the LDP
      peering scenarios used, including single-hop versus multi-hop LDP
      neighbors, as well as the use of LDP Basic Discovery versus Extended
      Discovery.</t>

      <t>The reason that the GTSM capability negotiation is enabled for Basic
      Discovery by default (i.e., G=1) but not for Extended Discovery is that
      the usage of Basic Discovery typically relates to a single-hop LDP
      peering session, whereas the usage of Extended Discovery typically
      relates to a multi-hop LDP peering session. GTSM protection for
      multi-hop LDP sessions is outside the scope of this specification (see
      <xref target="Scope"/>). However, it is worth clarifying the following
      exceptions that may occur with Basic or Extended Discovery usage: <list
          style="letters">
          <t>Two adjacent LSRs (i.e., back-to-back PE routers) forming a
          single-hop LDP peering session after doing an Extended Discovery
          (e.g., for Pseudowire signaling)</t>

          <t>Two adjacent LSRs forming a multi-hop LDP peering session after
          doing a Basic Discovery, due to the way IP routing is set up between
          them (either temporarily or permanently)</t>

          <t>Two adjacent LSRs (i.e., back-to-back PE routers) forming a
          single-hop LDP peering session after doing both Basic and Extended
          Discovery</t>

        </list> In the first case (a), GTSM is not enabled for the LDP peering
      session by default. In the second case (b), GTSM is actually enabled by
      default and enforced for the LDP peering session; hence, it would
      prohibit the LDP peering session from getting established (note that
      this may impact features such as LDP IGP Synchronization <xref
      target="RFC5443"/> or LDP Session Protection <xref
      target="LDP-SPROT"/>). In the third case (c), GTSM is enabled by default
      for Basic Discovery and enforced on the subsequent LDP peering, and is not
      for Extended Discovery. However, if each LSR uses the same IPv4
      transport address object value in both Basic and Extended Discoveries,
      then it would result in a single LDP peering session that would be
      enabled with GTSM. Otherwise, GTSM would not be enforced on the second
      LDP peering session corresponding to the Extended Discovery.</t>

      <t>This document allows for the implementation to provide an option to
      statically (e.g., via configuration) and/or dynamically override the
      default behavior and enable/disable GTSM on a per-peer basis. This would
      address all the exceptions listed above.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>This document increases the security for LDP, making it more
      resilient to off-link attacks. Security considerations for GTSM are
      detailed in Section 5 of <xref target="RFC5082"/>.</t>

      <t>As discussed in <xref target="Multi-hop"/>, it is possible that</t>

      <t><list style="symbols">
          <t>GTSM for LDP may not always be enforced on a single-hop LDP
          peering session, and LDP may still be susceptible to forged/spoofed
          protocol packets, if a single-hop LDP peering session is set up
          using Extended Discovery.</t>

          <t>GTSM for LDP may cause the LDP peering session to not get
          established (or may be torn down), if IP routing ever declares that
          the directly connected peer is more than one IP hop away. Suffice to
          say, use of cryptographic integrity (e.g., <xref target="RFC5925"/>)
          is recommended as an alternate solution for detecting forged
          protocol packets (especially for the multi-hop case).</t>
        </list></t>

      <t>The GTSM specification <xref target="RFC5082"/> says that protocol
      messages used for dynamic negotiation of GTSM support MUST be
      authenticated. However, LDP discovery <xref target="RFC5036"/> uses UDP
      transport and does not have an authentication mechanism. The GTSM
      specification further elaborates by saying that GTSM is not a substitute
      for authentication and does not secure against insider on-the-wire
      attacks. LDP Basic Discovery uses link-level multicast address
      (224.0.0.2 or "all routers") that are never forwarded beyond the link,
      and this acts as a basic protection against off-the-wire attacks.</t>
    </section>

    <section anchor="Ack" title="Acknowledgments">
      <t>The authors of this document do not make any claims on the
      originality of the ideas described. The concept of GTSM for LDP has been
      proposed a number of times and is documented in both the Experimental
      and Standards Track specifications of GTSM. Among other people, we would
      like to acknowledge Enke Chen and Albert Tian for their document
      "TTL-Based Security Option for the LDP Hello Message".</t>

      <t>The authors would like to thank Loa Andersson, Bin Mo, Mach Chen,
      Vero Zheng, Adrian Farrel, Eric Rosen, Eric Gray, and Brian Weis for their
      thorough reviews and useful comments and suggestions.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      &rfc2119;

      &rfc5036;

      &rfc5082;
    </references>

    <references title="Informative References">

<reference anchor="LDP-IPV6">
<front><title>Updates to LDP for IPv6</title>
<author initials="R" surname="Asati" fullname="Rajiv
Asati"><organization/></author>
<author initials="V" surname="Manral" fullname="Vishwas
Manral"><organization/></author>
<author initials="R" surname="Papneja" fullname="Rajiv
Papneja"><organization/></author>
<author initials="C" surname="Pignataro" fullname="Carlos
Pignataro"><organization/></author>
<date month="June" day="8" year="2012"/>
</front>
<seriesInfo name="Work in" value="Progress"/>
</reference>

      &rfc5443;

      &rfc5925;

      <reference anchor="LDP-SPROT"
                 target="http://www.cisco.com/en/US/docs/ios-xml/ios/mp_ldp/configuration/12-4m/mp-ldp-sessn-prot.html">
        <front>
          <title>MPLS LDP Session Protection</title>

          <author>
            <organization>Cisco Systems, Inc.</organization>
          </author>

          <date/>
        </front>
      </reference>
    </references>
  </back>
</rfc>
