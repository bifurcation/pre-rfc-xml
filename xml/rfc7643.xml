<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc category="std" number="7643" ipr="trust200902" submissionType="IETF"
  consensus="yes">

  <front>
    <title abbrev="SCIM Core Schema">System for Cross-domain Identity Management: Core Schema</title>

    <author fullname="Phil Hunt" initials="P." role="editor" surname="Hunt">
      <organization abbrev="Oracle">Oracle Corporation</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>

    <author fullname="Kelly Grizzle" initials="K.G." surname="Grizzle">
      <organization abbrev="SailPoint">SailPoint</organization>
      <address>
        <email>kelly.grizzle@sailpoint.com</email>
      </address>
    </author>

    <author fullname="Erik Wahlstroem" initials="E." surname="Wahlstroem">
      <organization abbrev="Nexus Technology">Nexus Technology</organization>
      <address>
        <email>erik.wahlstrom@nexusgroup.com</email>
      </address>
    </author>

    <author fullname="Chuck Mortimore" initials="C." surname="Mortimore">
      <organization abbrev="Salesforce">Salesforce.com</organization>
      <address>
        <email>cmortimore@salesforce.com</email>
      </address>
    </author>

    <date month="September" year="2015"/>

    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications
      are designed to make identity management in cloud-based applications and
      services easier. The specification suite builds upon experience with
      existing schemas and deployments, placing specific emphasis on
      simplicity of development and integration, while applying existing
      authentication, authorization, and privacy models. Its intent is to
      reduce the cost and complexity of user management operations by
      providing a common user schema and extension model as well as binding
      documents to provide patterns for exchanging this schema using HTTP.</t>

      <t>This document provides a platform-neutral schema and extension model
      for representing users and groups and other resource types in JSON
      format. This schema is intended for exchange and use with cloud service
      providers.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="overview" title="Introduction and Overview">
      <t>While there are existing standards for describing and exchanging user
      information, many of these standards can be difficult to implement
      and/or use; e.g., their wire protocols do not easily traverse
      firewalls and/or are not easily layered onto existing web protocols.
      As a result, many cloud providers implement non-standardized
      protocols for managing users within their services. This increases
      both the cost and complexity associated with organizations adopting
      products and services from multiple cloud providers, as they must
      perform redundant integration development. Similarly, cloud service
      providers seeking to interoperate with multiple application
      marketplaces or cloud identity providers would require pairwise
      integration.</t>

      <t>SCIM seeks to simplify this problem through an easily implemented
      specification suite that provides a common user schema and extension
      model, as well as a SCIM protocol document that defines exchanging this
      schema via an HTTP-based protocol <xref target="RFC7644"/>.
      The SCIM specifications draw design input and feedback from
      existing identity-related protocols and schemas from a wide variety
      of sources including, but not limited to, existing services exposed
      by cloud providers, PortableContacts <xref target="PortableContacts"/>,
      vCards <xref target="RFC6350"/>, and Lightweight Directory Access
      Protocol (LDAP) directory services <xref target="RFC4512"/>.</t>

      <t>The SCIM protocol is an application-level protocol for provisioning
      and managing identity data specified through SCIM schemas. The protocol
      supports creation, modification, retrieval, and discovery of core
      identity resources such as Users and Groups, using a subset of the HTTP
      methods (GET for retrieval of resources; POST for creation, searching,
      and bulk modification; PUT for attribute replacement within resources;
      PATCH for partial update of attributes; and DELETE for removing
      resources).</t>

      <t>While the SCIM protocol and core schema specifications are intended
      to cover point-to-point scenarios, implementers and deployers should
      consider multi-hop and multi-party scenarios such as a service provider
      acting as a general profile service for in-domain applications (e.g., a
      directory), as well as scenarios where a service provider in turn
      passes information to a third-party service provider by acting as
      either a SCIM client or a SCIM service provider. Implementers and
      deployers should carefully consider their service level agreements
      and privacy agreements when distributing or propagating personal
      information (see <xref target="privacyConsiderations"/>).</t>

      <t>This document provides a JSON-based schema and extension model for
      representing users and groups, as well as service provider
      configuration. This schema is intended for exchange and use with cloud
      service providers and other cross-domain scenarios.</t>

      <section anchor="rnc" title="Requirements Notation and Conventions">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119"/>.</t>

        <t>The key words "REQUIRED" and "OPTIONAL" are used throughout this
        document to indicate whether an attribute or schema element is
        required or optional. These key words may be used alone (e.g.,
        "REQUIRED.") or in a sentence. If not specified, an attribute is
        considered to be optional.</t>

        <t>The word "DEFAULT" as used in <xref target="schema-schema"/> 
        indicates that a "keyword" value for an attribute characteristic
        is the default behavior.</t>

        <t>Throughout this document, values are quoted to indicate that they
        are to be taken literally. When using these values in protocol
        messages, the quotes MUST NOT be used as part of the value.</t>

        <t>Throughout this document, figures may contain spaces and extra
        line wrapping to improve readability and accommodate space
        limitations. Similarly, some URIs contained within examples have
        been shortened for space and readability reasons.</t>
      </section>

      <section anchor="defs" title="Definitions" toc="default">
        <t><list style="hanging">
            <t hangText="Service Provider"><vspace/>An HTTP web application
            that provides identity information via the SCIM protocol.</t>

            <t hangText="Client"><vspace/>A website or application that uses
            the SCIM protocol to manage identity data maintained by the
            service provider. The client initiates SCIM HTTP requests to a
            target service provider.</t>

            <t hangText="Provisioning Domain"><vspace/>A provisioning domain
            is an administrative domain external to the domain of a service
            provider for legal or technical reasons. For example, a SCIM
            client in an enterprise (provisioning client) communicates with a
            SCIM service provider that is owned or controlled by a different
            legal entity.</t>

            <t hangText="Resource Type"><vspace/>A type of a resource that is
            managed by a service provider. The resource type defines the
            resource name, endpoint URL, schemas, and other metadata that
            indicate where a resource is managed and how it is composed, e.g.,
            <spanx style="verb">User</spanx> or
            <spanx style="verb">Group</spanx>.</t>

            <t hangText="Resource"><vspace/>An artifact that is managed by
            a service provider and that contains one or more attributes,
            e.g., <spanx style="verb">User</spanx> or
            <spanx style="verb">Group</spanx>.</t>

            <t hangText="Endpoint"><vspace/>An endpoint for a service provider
            is a defined base path relative to the service provider's Base URI
            (see Section 1.3 of <xref target="RFC7644"/>), over which
            SCIM operations may be performed against SCIM resources. For
            example, assuming that the service provider's Base URI is <spanx
            style="verb">https://example.com/</spanx>,
            <spanx style="verb">User</spanx> resources may be accessed at
            the <spanx style="verb">https://example.com/Users</spanx>
            or <spanx style="verb">https://example.com/v2/Users</spanx>
            endpoint (see Section 3.13 of <xref target="RFC7644"/> for
            details regarding protocol versioning, e.g., 'v2').
            Service provider schemas MAY be returned from
            the <spanx style="verb">/Schemas</spanx> endpoint.</t>

            <t hangText="Schema"><vspace/>A collection of attribute
            definitions that describe the contents of an entire or partial
            resource, e.g.,
            <spanx style="verb">urn:ietf:params:scim:schemas:core:2.0:User</spanx>.
            The attribute definitions specify the name of the attribute, and
            metadata such as type (e.g., string, binary), cardinality
            (singular, multi, complex), mutability, and returnability.</t>

            <t hangText="Singular Attribute"><vspace/>A resource attribute
            that contains 0..1 values, e.g., <spanx style="verb">displayName</spanx>.</t>

            <t hangText="Multi-valued Attribute"><vspace/>A resource attribute
            that contains 0..n values, e.g., <spanx style="verb">emails</spanx>.</t>

            <t hangText="Simple Attribute"><vspace/>A singular or multi-valued
            attribute whose value is a primitive, e.g., <spanx style="verb">String</spanx>.
            A simple attribute MUST NOT contain sub&nbhy;attributes.</t>

            <t hangText="Complex Attribute"><vspace/>A singular or
            multi-valued attribute whose value is a composition of one or more
            simple attributes; e.g., <spanx style="verb">addresses</spanx> has
            the sub&nbhy;attributes <spanx style="verb">streetAddress</spanx>,
            <spanx style="verb">locality</spanx>, <spanx style="verb">postalCode</spanx>,
            and <spanx style="verb">country</spanx>.</t>

            <t hangText="Sub-Attribute"><vspace/>A simple attribute that is
            contained within a complex attribute.</t>
          </list></t>
      </section>
    </section>

    <section anchor="schema_structure" title="SCIM Schema">
      <t>A SCIM server provides a set of resources, the allowable contents of
      which are defined by a set of schema URIs and a resource type. SCIM's
      schema is not a document-centric one such as with <xref
      target="XML-Schema"/>. Instead, SCIM's support of schema is attribute
      based, where each attribute may have different type, mutability,
      cardinality, or returnability. Validation of documents and messages is
      always performed by an intended receiver, as specified by the SCIM
      specifications. Validation is performed by the receiver in the context
      of a SCIM protocol request (see <xref target="RFC7644"/>). For
      example, a SCIM service provider, upon receiving a request to replace an
      existing resource with a replacement JSON object, evaluates each
      asserted attribute based on its characteristics as defined in the
      relevant schema (e.g., mutability) and decides which attributes may be
      replaced or ignored.</t>

      <t>This specification provides a minimal core schema for representing
      users and groups (resources), encompassing common attributes found in
      many existing deployments and schemas. In addition to the minimal core
      schema, this document also specifies a standardized means by which
      service providers may extend schemas to define new resources and
      attributes in both standardized and service-provider-specific cases.</t>

      <t>Resources are categorized into common resource types such as <spanx
      style="verb">User</spanx> or <spanx style="verb">Group</spanx>.
      Collections of resources of the same type are usually contained within
      the same "container" ("folder") endpoint.</t>

      <section title="Attributes">
        <t>A resource is a collection of attributes identified by one or more
        schemas. Minimally, an attribute consists of the attribute name and at
        least one simple or complex value, either of which may be multi-valued.
        For each attribute, a SCIM schema defines the data type, plurality,
        mutability, and other distinguishing features of an attribute.</t>

        <t>Attribute names are case insensitive and are often "camel-cased"
        (e.g., "camelCase"). SCIM resources are represented in JSON <xref
        target="RFC7159"/> format and MUST specify schema via the <spanx
        style="verb">schemas</spanx> attribute per <xref
        target="schema"/>.</t>

        <t>Attribute names MUST conform to the following ABNF rules: <figure
            anchor="attrABNF" title="ABNF for Attribute Names">
            <artwork align="center">ATTRNAME   = ALPHA *(nameChar)
nameChar   = "$" / "-" / "_" / DIGIT / ALPHA</artwork>
          </figure>The above rules (and other rules in this specification) use
        the "Core Rules" from ABNF; see <xref target="RFC5234">Appendix
        B of</xref>. Unless otherwise specified in this document, all ABNF
        strings are case insensitive and the character set for these strings
        is US-ASCII. For example, all attribute names defined by the above
        rule are case insensitive.</t>

        <t>When defining attribute names, it should be noted that the hyphen
        ("-") is not permitted in JavaScript attribute names (or in
        attribute names for some other languages). While there are no known
        issues within HTTP protocol and JSON notation, attribute names
        containing hyphens may need to be escaped when declaring
        corresponding names of JavaScript attributes.</t>
      </section>

      <section anchor="characteristics" title="Attribute Characteristics">
        <t>All attributes have a set of characteristics that describe their
        type and handling by a service provider; full definitions may be
        found in <xref target="schema-schema"/>. The characteristics include:
          <list style="symbols">
            <t><spanx style="verb">required</spanx>,</t>

            <t><spanx style="verb">canonicalValues</spanx>, </t>

            <t><spanx style="verb">caseExact</spanx>, </t>

            <t><spanx style="verb">mutability</spanx>, </t>

            <t><spanx style="verb">returned</spanx>, </t>

            <t><spanx style="verb">uniqueness</spanx>, and </t>

            <t><spanx style="verb">referenceTypes</spanx>. </t>
          </list></t>

        <t>If not otherwise stated in <xref target="schema-schema"/>, SCIM
        attributes have the following characteristics: <list style="symbols">
            <t><spanx style="verb">required</spanx> is
              <spanx style="verb">false</spanx> (i.e., not REQUIRED),</t>

            <t><spanx style="verb">canonicalValues</spanx>: none assigned
              (for example, the <spanx style="verb">type</spanx>
              sub&nbhy;attribute as described in
              <xref target="multi-value-types"/>),</t>

            <t><spanx style="verb">caseExact</spanx> is
              <spanx style="verb">false</spanx> (i.e., case-insensitive),</t>

            <t><spanx style="verb">mutability</spanx> is
              <spanx style="verb">readWrite</spanx> (i.e., modifiable),</t>

            <t><spanx style="verb">returned</spanx> is
              <spanx style="verb">default</spanx>
              (the attribute value is returned by default),</t>

            <t><spanx style="verb">uniqueness</spanx> is
              <spanx style="verb">none</spanx>
              (has no uniqueness enforced), and</t>

            <t><spanx style="verb">type</spanx> is
              <spanx style="verb">string</spanx>
              (<xref target="type-string"></xref>).</t>
          </list></t>

      </section>

      <section anchor="attribute-types" title="Attribute Data Types">
        <t>Attribute data types are derived from JSON <xref
        target="RFC7159"/>. The JSON format defines a limited set of data
        types; hence, where appropriate, alternate JSON representations
        derived from XML Schema <xref target="XML-Schema"/> are defined below.
        SCIM extensions SHOULD NOT introduce new data types.</t>

        <t><xref target="typeTable"/> maps the following SCIM data types to
        their corresponding SCIM schema type and underlying JSON data type:</t>

<?rfc compact="no"?>
        <texttable align="center" anchor="typeTable"
                   title="SCIM Data Type to JSON Representation">
          <ttcol>SCIM Data Type</ttcol>

          <ttcol>SCIM Schema "type"</ttcol>

          <ttcol>JSON Type</ttcol>

          <c>String</c>

          <c><spanx style="verb">string</spanx></c>

          <c>String per Section 7 of <xref target="RFC7159"/></c>

          <c>Boolean</c>

          <c><spanx style="verb">boolean</spanx></c>

          <c>Value per Section 3 of <xref target="RFC7159"/></c>

          <c>Decimal</c>

          <c><spanx style="verb">decimal</spanx></c>

          <c>Number per Section 6 of <xref target="RFC7159"/></c>

          <c>Integer</c>

          <c><spanx style="verb">integer</spanx></c>

          <c>Number per Section 6 of <xref target="RFC7159"/></c>

          <c>DateTime</c>

          <c><spanx style="verb">dateTime</spanx></c>

          <c>String per Section 7 of <xref target="RFC7159"/></c>

          <c>Binary</c>

          <c><spanx style="verb">binary</spanx></c>

          <c>Binary value base64 encoded per
          Section 4 of <xref target="RFC4648"/>, or with URL and
          filename safe alphabet URL per Section 5 of <xref target="RFC4648"/>
          that is passed as a JSON string per
          Section 7 of <xref target="RFC7159"/></c>

          <c>Reference</c>

          <c><spanx style="verb">reference</spanx></c>

          <c>String per Section 7 of <xref target="RFC7159"/></c>

          <c>Complex</c>

          <c><spanx style="verb">complex</spanx></c>

          <c>Object per Section 4 of <xref target="RFC7159"/></c>
        </texttable>
<?rfc compact="yes"?>

        <section anchor="type-string" title="String">
          <t>A sequence of zero or more Unicode characters encoded using UTF-8
          as per <xref target="RFC2277"/> and <xref target="RFC3629"/>. The
          JSON format is defined in
          <xref target="RFC7159">Section 7 of</xref>. An attribute with
          SCIM schema type <spanx style="verb">string</spanx> MAY specify
          a required data format. Additionally, when
          <spanx style="verb">canonicalValues</spanx> is specified,
          service providers MAY restrict accepted values to the
          specified values.</t>
        </section>

        <section anchor="type-boolean" title="Boolean">
          <t>The literal <spanx style="verb">true</spanx> or <spanx
          style="verb">false</spanx>. The JSON format is defined in <xref
          target="RFC7159">Section 3 of</xref>. A boolean has no case sensitivity
          or uniqueness.</t>
        </section>

        <section anchor="type-decimal" title="Decimal">
          <t>A real number with at least one digit to the left and right of
          the period. The JSON format is defined in <xref
          target="RFC7159">Section 6 of</xref>. A decimal has no case
          sensitivity.</t>
        </section>

        <section anchor="type-integer" title="Integer">
          <t>A whole number with no fractional digits or decimal. The JSON
          format is defined in <xref target="RFC7159">Section 6 of</xref>,
          with the additional constraint that the value MUST NOT contain
          fractional or exponent parts. An integer has no case sensitivity.</t>
        </section>

        <section anchor="type-datetime" title="DateTime">
          <t>A DateTime value (e.g., 2008-01-23T04:56:22Z). The attribute
          value MUST be encoded as a valid xsd:dateTime as specified in <xref
          target="XML-Schema">Section 3.3.7 of</xref> and MUST include both
          a date and a time. A date&nbsp;time format has no case
          sensitivity or uniqueness.</t>

          <t>Values represented in JSON format MUST conform to the
          XML constraints above and are represented as a JSON string
          per <xref target="RFC7159">Section 7 of</xref>.</t>
        </section>

        <section anchor="type-binary" title="Binary">
          <t>Arbitrary binary data. The attribute value MUST be base64
          encoded as specified in <xref target="RFC4648">Section
          4 of</xref>. In cases where a URL-safe encoding is required, the
          attribute definition MAY specify that base64 URL encoding be
          used as per <xref target="RFC4648">Section 5 of</xref>.
          Unless otherwise specified in the attribute definition, trailing
          padding characters MAY be omitted ("=").</t>

          <t>In JSON representation, the encoded values are represented as a
          JSON string per <xref target="RFC7159">Section 7 of</xref>.
          A binary is case exact and has no uniqueness.</t>
        </section>

        <section anchor="type-reference" title="Reference">
          <t>A URI for a resource. A resource MAY be a SCIM
          resource, an external link to a resource (e.g., a photo),
          or an identifier such as a URN. The value MUST be the absolute or
          relative URI of the target resource. Relative URIs should be
          resolved as specified in <xref target="RFC3986">Section 5.2 of</xref>.
          However, the base URI for relative URI resolution MUST include all
          URI components and path segments up to, but not including, the
          Endpoint URI (the SCIM service provider root endpoint); e.g., the
          base URI for a request to <spanx style="verb">https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646</spanx>
          would be <spanx style="verb">https://example.com/v2/</spanx>, and the
          relative URI for this resource would be <spanx style="verb">Users/2819c223-7f76-453a-919d-413861904646</spanx>.</t>

          <t>In JSON representation, the URI value is represented as a
          JSON string per <xref target="RFC7159">Section 7 of</xref>.
          A reference is case exact. A reference has
          a <spanx style="verb">referenceTypes</spanx> attribute
          that indicates what types of resources may be linked, as per <xref
          target="schema-schema"/> of this document.</t>

          <t>A reference URI MUST be to an HTTP-addressable resource. An HTTP
          client performing a GET operation on a reference URI MUST receive
          the target resource or an appropriate HTTP response code. A SCIM
          service provider MAY choose to enforce referential integrity for
          reference types referring to SCIM resources.</t>

          <t>By convention, a reference is commonly represented as a <spanx
          style="verb">$ref</spanx> sub&nbhy;attribute in complex or
          multi-valued attributes; however, this is OPTIONAL.</t>
        </section>

        <section anchor="type-complex" title="Complex">
          <t>A singular or multi-valued attribute whose value is a composition
          of one or more simple attributes. The JSON format is defined in
          Section 4 of <xref target="RFC7159"/>. The order of the component
          attributes is not significant. Servers and clients MUST NOT require
          or expect attributes to be in any specific order when an object is
          either generated or analyzed. A complex attribute has no uniqueness
          or case sensitivity. A complex attribute MUST NOT contain
          sub&nbhy;attributes that have sub&nbhy;attributes (i.e., that are
          complex).</t>
        </section>
      </section>

      <section anchor="multi-value-types" title="Multi-Valued Attributes">
        <t>Multi-valued attributes contain a list of elements using the JSON
        array format defined in Section 5 of <xref target="RFC7159"/>.
        Elements can be either of the following:<list style="symbols">
            <t>primitive values, or</t>

            <t>objects with a set of sub-attributes and values, using the JSON
            object format defined in Section 4 of <xref target="RFC7159"/>, in
            which case they SHALL be considered to be complex attributes. As
            with complex attributes, the order of sub&nbhy;attributes is not
            significant. The predefined sub&nbhy;attributes listed in this
            section can be used with multi-valued attribute objects, but these
            sub&nbhy;attributes MUST be used with the meanings defined here.</t>
          </list></t>

        <t>If not otherwise defined, the default set of sub-attributes for a
        multi-valued attribute is as follows:<list style="hanging">
            <t hangText="type"><vspace/>A label indicating the attribute's
            function, e.g., <spanx style="verb">work</spanx> or <spanx
            style="verb">home</spanx>.</t>

            <t hangText="primary"><vspace/>A Boolean value indicating the
            'primary' or preferred attribute value for this attribute, e.g.,
            the preferred mailing address or the primary email address. The
            primary attribute value <spanx style="verb">true</spanx> MUST
            appear no more than once. If not specified, the value of <spanx
            style="verb">primary</spanx> SHALL be assumed to be <spanx
            style="verb">false</spanx>.</t>

            <t hangText="display"><vspace/>A human-readable name, primarily
            used for display purposes and having a mutability of <spanx
            style="verb">immutable</spanx>.</t>

            <t hangText="value"><vspace/>The attribute's significant value,
            e.g., email address, phone number.</t>

            <t hangText="$ref"><vspace/>The reference URI of a target
            resource, if the attribute is a reference. URIs are canonicalized
            per Section 6.2 of <xref target="RFC3986"/>. While the
            representation of a resource may vary in different SCIM protocol
            API versions (see Section 3.13 of <xref target="RFC7644"/>),
            URIs for SCIM resources with an API version SHALL be
            considered comparable to URIs without a version or with a
            different version. For example,
            <spanx style="verb">https://example.com/Users/12345</spanx>
            is equivalent to
            <spanx style="verb">https://example.com/v2/Users/12345</spanx>.</t>

            <t/>
          </list></t>

        <t>When returning multi-valued attributes, service providers SHOULD
        canonicalize the value returned (e.g., by returning a value for the
        sub&nbhy;attribute <spanx style="verb">type</spanx>, such as <spanx
        style="verb">home</spanx> or <spanx style="verb">work</spanx>) when
        appropriate (e.g., for email addresses and URLs).</t>

        <t>Service providers MAY return element objects with the same <spanx
        style="verb">value</spanx> sub&nbhy;attribute more than once with a
        different <spanx style="verb">type</spanx> sub&nbhy;attribute (e.g.,
        the same email address may be used for work and home) but SHOULD NOT
        return the same (type, value) combination more than once per
        attribute, as this complicates processing by the client.</t>

        <t>When defining schema for multi-valued attributes, it is considered
        a good practice to provide a type attribute that MAY be used for the
        purpose of canonicalization of values. In the schema definition for an
        attribute, the service provider MAY define the recommended canonical
        values (see <xref target="schema-schema"/>).</t>
      </section>

      <section anchor="unassigned" title="Unassigned and Null Values">
        <t>Unassigned attributes, the null value, or an empty array (in the
        case of a multi-valued attribute) SHALL be considered to be equivalent
        in "state". Assigning an attribute with the value
        <spanx style="verb">null</spanx> or an empty array (in the case of
        multi-valued attributes) has the effect of making the attribute
        "unassigned". When a resource is expressed in JSON format,
        unassigned attributes, although they are defined in schema,
        MAY be omitted for compactness.</t>
      </section>
    </section>

    <section anchor="schema" title="SCIM Resources">
      <t>Each SCIM resource is a JSON object that has the following
      components:<list style="hanging">
          <t hangText="Resource Type"><vspace/>Each resource (or JSON object)
          in SCIM has a resource type (<spanx style="verb">meta.resourceType</spanx>;
          see <xref target="commonSchema"/>) that defines the resource's core
          attribute schema and any attribute extension schema, as well as the
          endpoint where objects of the same type may be found. More
          information about a resource MAY be found in its resource type
          definition (see <xref target="resource-type-schema"/>).</t>

          <t anchor="schemas-attribute"
          hangText="&quot;Schemas&quot; Attribute"><vspace/>The
          <spanx style="verb">schemas</spanx> attribute is a
          REQUIRED attribute and is an array of Strings
          containing URIs that are used to indicate the namespaces of the
          SCIM schemas that define the attributes present in the current JSON
          structure. This attribute may be used by parsers to define the
          attributes present in the JSON structure that is the body to an HTTP
          request or response. Each String value must be a unique URI. All
          representations of SCIM schemas MUST include a non-empty array with
          value(s) of the URIs supported by that representation. The
          <spanx style="verb">schemas</spanx> attribute for a
          resource MUST only contain values defined as
          <spanx style="verb">schema</spanx> and
          <spanx style="verb">schemaExtensions</spanx>
          for the resource's defined <spanx style="verb">resourceType</spanx>.
          Duplicate values MUST NOT be included. Value order is not specified
          and MUST NOT impact behavior.</t>

          <t hangText="Common Attributes"><vspace/>A resource's common
          attributes are those attributes that are part of every SCIM
          resource, regardless of the value of the
          <spanx style="verb">schemas</spanx> attribute present in a
          JSON body. These attributes are not defined in any particular
          schema but SHALL be assumed to be present in every resource,
          regardless of the value of the
          <spanx style="verb">schemas</spanx> attribute. See <xref
          target="commonSchema"/>.</t>

          <t hangText="Core Attributes"><vspace/>A resource's core attributes
          are those attributes that sit at the top level of the JSON object
          together with the common attributes (such as the resource <spanx
          style="verb">id</spanx>). The list of valid attributes is specified
          by the resource's resource type <spanx style="verb">schema</spanx>
          attribute (see <xref target="resource-type-schema"/>). This same
          value is also present in the resource's
          <spanx style="verb">schemas</spanx> attribute.</t>

          <t hangText="Extended Attributes"><vspace/>Extended schema
          attributes are specified by the resource's resource type <spanx
          style="verb">schemaExtensions</spanx> attribute (see <xref
          target="resource-type-schema"/>). Unlike core attributes, extended
          attributes are kept in their own sub&nbhy;attribute namespace
          identified by the schema extension URI. This avoids attribute name
          conflicts that may arise due to conflicts from separate schema
          extensions.</t>
        </list></t>

      <figure anchor="example-resource"
              title="Example JSON Resource Structure">
        <preamble>The following example <spanx style="verb">User</spanx>
        contains the common attributes <spanx style="verb">id</spanx> and
        <spanx style="verb">externalId</spanx>, as well as the complex
        attribute <spanx style="verb">meta</spanx>, which contains the
        sub&nbhy;attribute <spanx style="verb"> resourceType</spanx>. The
        resource also contains core
        attributes <spanx style="verb">userName</spanx> and
        <spanx style="verb">name</spanx>, as well as extended enterprise User
        attributes <spanx style="verb">employeeNumber</spanx>
        and <spanx style="verb">costCenter</spanx>, which are contained in
        their own JSON substructure identified by their schema URI. Some
        values have been omitted (...), shortened, or spaced out for
        clarity.</preamble>

        <artwork>{
  "schemas": 
    ["urn:ietf:params:scim:schemas:core:2.0:User", 
      "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User"],
  
  "id": "2819c223-7f76-453a-413861904646",
  "externalId": "701984",

  "userName": "bjensen@example.com",
  "name": {
    "formatted": "Ms. Barbara J Jensen, III",
    "familyName": "Jensen",
    "givenName": "Barbara",
    "middleName": "Jane",
    "honorificPrefix": "Ms.",
    "honorificSuffix": "III"
  },
 ...

  "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
    "employeeNumber": "701984",
    "costCenter": "4130",
    ...
  },

  "meta": {
    "resourceType": "User",
    "created": "2010-01-23T04:56:22Z",
    "lastModified": "2011-05-13T04:42:34Z",
    "version": "W\/\"3694e05e9dff591\"",
    "location": 
      "https://example.com/v2/Users/2819c223-7f76-453a-413861904646"
  }
}</artwork>
      </figure>

      <section anchor="commonSchema" title="Common Attributes">
        <t>Each SCIM resource (Users, Groups, etc.) includes the following
        common attributes. With the exception of the
        <spanx style="verb">ServiceProviderConfig</spanx>
        and <spanx style="verb">ResourceType</spanx> server discovery
        endpoints and their associated resources, these attributes MUST be
        defined for all resources, including any extended resource types. When
        accepted by a service provider (e.g., after a SCIM create), the
        attributes <spanx style="verb">id</spanx> and
        <spanx style="verb">meta</spanx> (and its associated
        sub&nbhy;attributes) MUST be assigned values by the
        service provider. Common attributes are considered to be part of
        every base resource schema and do not use their own
        <spanx style="verb">schemas</spanx> URI.</t>

        <t>For backward compatibility, some existing schema definitions
        MAY list common attributes as part of the schema. The
        attribute characteristics (see <xref target="characteristics"/>)
        listed here SHALL take precedence over older definitions that may be
        included in existing schemas.</t>

        <t><list style="hanging">
            <t hangText="id"><vspace/>A unique identifier for a SCIM resource
            as defined by the service provider. Each representation of the
            resource MUST include a non&nbhy;empty
            <spanx style="verb">id</spanx> value. This identifier
            MUST be unique across the SCIM service provider's
            entire set of resources. It MUST be a stable,
            non&nbhy;reassignable identifier that does not change when the same
            resource is returned in subsequent requests. The value of the
            <spanx style="verb">id</spanx> attribute is always issued by the
            service provider and MUST NOT be specified by the client. The
            string <spanx style="verb">bulkId</spanx> is a reserved keyword
            and MUST NOT be used within any unique identifier value. The
            attribute characteristics are <spanx style="verb">caseExact</spanx>
            as <spanx style="verb">true</spanx>,
            a mutability of <spanx style="verb">readOnly</spanx>, and
            a <spanx style="verb">returned</spanx> characteristic of
            <spanx style="verb">always</spanx>. See <xref target="security"/>
            for additional considerations regarding privacy.</t>

            <t hangText="externalId"><vspace/>A String that is an identifier
            for the resource as defined by the provisioning client. The <spanx
            style="verb">externalId</spanx> may simplify identification of a
            resource between the provisioning client and the service provider
            by allowing the client to use a filter to locate the resource with
            an identifier from the provisioning domain, obviating the need to
            store a local mapping between the provisioning domain's identifier
            of the resource and the identifier used by the service provider.
            Each resource MAY include a non-empty <spanx style="verb">externalId</spanx>
            value. The value of the <spanx style="verb">externalId</spanx>
            attribute is always issued by the provisioning client and MUST NOT
            be specified by the service provider. The service provider MUST
            always interpret the externalId as scoped to the provisioning
            domain. While the server does not enforce uniqueness, it is
            assumed that the value's uniqueness is controlled by the client
            setting the value. See <xref target="security"/> for additional
            considerations regarding privacy. This attribute has <spanx
            style="verb">caseExact</spanx> as <spanx style="verb">true</spanx>
            and a mutability of <spanx style="verb">readWrite</spanx>. This
            attribute is OPTIONAL.</t>

            <t hangText="meta"><vspace/>A complex attribute containing
            resource metadata. All <spanx style="verb">meta</spanx>
            sub&nbhy;attributes are assigned by the service provider
            (have a <spanx style="verb">mutability</spanx> of
            <spanx style="verb">readOnly</spanx>), and all of these
            sub&nbhy;attributes have a <spanx style="verb">returned</spanx>
            characteristic of <spanx style="verb">default</spanx>.
            This attribute SHALL be ignored when provided by clients.
            <spanx style="verb">meta</spanx> contains the following
            sub&nbhy;attributes: <list style="hanging">
                <t hangText="resourceType">The name of the resource type of
                the resource. This attribute has a mutability of <spanx
                style="verb">readOnly</spanx> and
                <spanx style="verb">caseExact</spanx>
                as <spanx style="verb">true</spanx>.</t>

                <t hangText="created">The <spanx style="verb">DateTime</spanx>
                that the resource was added to the service provider.
                This attribute MUST be a DateTime.</t>

                <t hangText="lastModified">The most recent DateTime that the
                details of this resource were updated at the service provider.
                If this resource has never been modified since its initial
                creation, the value MUST be the same as the value of
                <spanx style="verb">created</spanx>.</t>

                <t hangText="location">The URI of the resource being returned.
                This value MUST be the same as the <spanx style="verb">Content-Location</spanx>
                HTTP response header (see <xref target="RFC7231">Section
                3.1.4.2 of</xref>).</t>

                <t hangText="version">The version of the resource being
                returned. This value must be the same as the entity-tag
                (ETag) HTTP response header
                (see Sections 2.1 and 2.3 of <xref target="RFC7232"/>).
                This attribute has <spanx style="verb">caseExact</spanx>
                as <spanx style="verb">true</spanx>. Service provider support
                for this attribute is optional and subject to the service
                provider's support for versioning (see
                Section 3.14 of <xref target="RFC7644"/>). If a service
                provider provides <spanx style="verb">version</spanx>
                (entity-tag) for a representation and the generation of that
                entity-tag does not satisfy all of the characteristics of a
                strong validator (see Section 2.1 of <xref target="RFC7232"/>),
                then the origin server MUST mark
                the <spanx style="verb">version</spanx>
                (entity-tag) as weak by prefixing its opaque value with <spanx
                style="verb">W/</spanx> (case sensitive).</t>
              </list></t>
          </list></t>
      </section>

      <section anchor="scim-extension" title="Defining New Resource Types">
        <t>SCIM may be extended to define new classes of resources by defining
        a resource type. Each resource type defines the name, endpoint, base
        schema (the attributes), and any schema extensions registered for use
        with the resource type. In order to offer new types of resources, a
        service provider defines the new resource type as specified in <xref
        target="resource-type-schema"/> and defines a schema representation
        (see <xref target="schema-representation"/>).</t>
      </section>

      <section title="Attribute Extensions to Resources">
        <t>SCIM allows resource types to have extensions in addition to their
        core schema. This is similar to how <spanx style="verb">objectClasses</spanx>
        are used in LDAP <xref target="RFC4512"/>. However, unlike LDAP, there
        is no inheritance model; all extensions are additive (similar to
        the LDAP auxiliary object class). Each value in the
        <spanx style="verb">schemas</spanx> attribute indicates
        additive schema that MAY exist in a SCIM resource
        representation. The <spanx style="verb">schemas</spanx> attribute MUST
        contain at least one value, which SHALL be the base schema for the
        resource. The <spanx style="verb">schemas</spanx> attribute MAY
        contain additional values indicating extended schemas that are in use.
        Schema extensions SHOULD avoid redefining any attributes defined in
        this specification and SHOULD follow conventions defined in this
        specification. Except for the base object schema, the schema extension
        URI SHALL be used as a JSON container to distinguish attributes
        belonging to the extension namespace from base schema attributes. See
        <xref target="enterpriseUserJSON"/>, which is an example of the JSON
        representation of an enterprise User and is also an example of a
        User with extended schema.</t>

        <t>In order to determine which URI value in the <spanx style="verb">schemas</spanx>
        attribute is the base schema and which is an extended schema for any
        given resource, the resource's <spanx style="verb">resourceType</spanx>
        attribute value MAY be used to retrieve the resource's <spanx
        style="verb">ResourceType</spanx> schema (see <xref
        target="resource-type-schema"/>). See the
        <spanx style="verb">ResourceType</spanx> representation in <xref
        target="resourceTypeJSON"/> for an example.</t>
      </section>
    </section>

    <section anchor="core-resources"
             title="SCIM Core Resources and Extensions">
      <t>This section defines the default resource schemas present in a SCIM
      server. SCIM is not exclusive to these resources and may be extended to
      support other resource types (see <xref target="scim-extension"/>).</t>

      <section anchor="user-resource" title="&quot;User&quot; Resource Schema">
        <t>SCIM provides a resource type for <spanx style="verb">User</spanx>
        resources. The core schema for <spanx style="verb">User</spanx> is
        identified using the following schema URI:
        <spanx style="verb">urn:ietf:params:scim:schemas:core:2.0:User</spanx>.
        The following attributes are defined in addition to the core schema
        attributes:</t>

        <section title="Singular Attributes">
          <t><list style="hanging">
              <t hangText="userName"><vspace/>A service provider's unique
              identifier for the user, typically used by the user to directly
              authenticate to the service provider. Often displayed to the
              user as their unique identifier within the system (as opposed to
              <spanx style="verb">id</spanx>
              or <spanx style="verb">externalId</spanx>,
              which are generally opaque and not user-friendly identifiers).
              Each User MUST include a non-empty userName value. This
              identifier MUST be unique across the service provider's entire
              set of Users. This attribute is REQUIRED and is
              case insensitive.</t>

              <t hangText="name"><vspace/>The components of the user's name.
              Service providers MAY return just the full name as a single
              string in the formatted sub&nbhy;attribute, or they MAY return
              just the individual component attributes using the other
              sub&nbhy;attributes, or they MAY return both. If both variants
              are returned, they SHOULD be describing the same name, with the
              formatted name indicating how the component attributes should be
              combined. <list style="hanging">
                  <t hangText="formatted">The full name, including all middle
                  names, titles, and suffixes as appropriate, formatted for
                  display (e.g., <spanx style="verb">Ms.&nbsp;Barbara Jane
                  Jensen, III</spanx>).</t>

                  <t hangText="familyName">The family name of the User, or
                  last name in most Western languages (e.g., <spanx
                  style="verb">Jensen</spanx> given the full name <spanx
                  style="verb">Ms.&nbsp;Barbara Jane Jensen, III</spanx>).</t>

                  <t hangText="givenName">The given name of the User, or first
                  name in most Western languages
                  (e.g., <spanx style="verb">Barbara</spanx>
                  given the full name <spanx style="verb">Ms.&nbsp;Barbara
                  Jane Jensen, III</spanx>).</t>

                  <t hangText="middleName">The middle name(s) of the User
                  (e.g., <spanx style="verb">Jane</spanx> given the full name
                  <spanx style="verb">Ms.&nbsp;Barbara Jane Jensen, III</spanx>).</t>

                  <t hangText="honorificPrefix">The honorific prefix(es) of
                  the User, or title in most Western languages (e.g., <spanx
                  style="verb">Ms.</spanx> given the full name <spanx
                  style="verb">Ms.&nbsp;Barbara Jane Jensen, III</spanx>).</t>

                  <t hangText="honorificSuffix">The honorific suffix(es) of
                  the User, or suffix in most Western languages (e.g., <spanx
                  style="verb">III</spanx> given the full name <spanx
                  style="verb">Ms.&nbsp;Barbara Jane Jensen, III</spanx>).</t>
                </list></t>

              <t hangText="displayName"><vspace/>The name of the user,
              suitable for display to end-users. Each user returned MAY
              include a non-empty displayName value. The name SHOULD be the
              full name of the User being described, if known (e.g., <spanx
              style="verb">Babs Jensen</spanx> or <spanx style="verb">Ms.&nbsp;Barbara J Jensen, III</spanx>) but MAY be a username or handle, if that is all that is
              available (e.g., <spanx style="verb">bjensen</spanx>). The
              value provided SHOULD be the primary textual label by which this
              User is normally displayed by the service provider when
              presenting it to end-users.</t>

              <t hangText="nickName"><vspace/>The casual way to address the
              user in real life, e.g., <spanx style="verb">Bob</spanx> or
              <spanx style="verb">Bobby</spanx> instead of <spanx
              style="verb">Robert</spanx>. This attribute SHOULD NOT be used
              to represent a User's username (e.g., bjensen or
              mpepperidge).</t>

              <t hangText="profileUrl"><vspace/>A URI that is a uniform
              resource locator (as defined in Section 1.1.3 of <xref
              target="RFC3986"/>) and that points to a location
              representing the user's online profile (e.g., a web page).
              URIs are canonicalized
              per Section 6.2 of <xref target="RFC3986"/>.</t>

              <t hangText="title"><vspace/>The user's title, such as <spanx
              style="verb">Vice President</spanx>.</t>

              <t hangText="userType"><vspace/>Used to identify the
              relationship between the organization and the user.
              Typical values used might be
              <spanx style="verb">Contractor</spanx>,
              <spanx style="verb">Employee</spanx>,
              <spanx style="verb">Intern</spanx>, <spanx style="verb">Temp</spanx>,
              <spanx style="verb">External</spanx>, and <spanx style="verb">Unknown</spanx>,
              but any value may be used.</t>

              <t anchor="preferredLanguage"
              hangText="preferredLanguage"><vspace/>Indicates the user's
              preferred written or spoken languages and is generally used for
              selecting a localized user interface. The value indicates the
              set of natural languages that are preferred. The format of the
              value is the same as the HTTP Accept-Language header field (not
              including "Accept-Language:") and is specified in <xref
              target="RFC7231">Section 5.3.5 of</xref>. The intent of this
              value is to enable cloud applications to perform matching of
              language tags <xref target="RFC4647"/> to the user's language
              preferences, regardless of what may be indicated by a user agent
              (which might be shared), or in an interaction that does not
              involve a user (such as in a delegated OAuth 2.0
              <xref target="RFC6749"/> style interaction) where normal
              HTTP Accept&nbhy;Language header negotiation cannot take
              place.</t>

              <t hangText="locale"><vspace/>Used to indicate the User's
              default location for purposes of localizing such items as
              currency, date time format, or numerical representations. A
              valid value is a language tag as defined in <xref
              target="RFC5646"/>. Computer languages are explicitly
              excluded.</t>

              <t>A language tag is a sequence of one or more case-insensitive
              sub&nbhy;tags, each separated by a hyphen character ("-", %x2D).
              For backward compatibility, servers MAY accept tags
              separated by an underscore character ("_", %x5F). In most cases,
              a language tag consists of a primary language sub-tag that
              identifies a broad family of related languages (e.g., "en" =
              English) and that is optionally followed by a series of sub-tags
              that refine or narrow that language's range (e.g., "en-CA" = the
              variety of English as communicated in Canada). Whitespace is not
              allowed within a language tag. Example tags include: <figure
                  align="center">
                  <artwork align="center">fr, en-US, es-419, az-Arab, x-pig-latin, man-Nkoo-GN</artwork>
                </figure> See <xref target="RFC5646"/> for further
              information.</t>

              <t hangText="timezone"><vspace/>The User's time zone, in IANA
              Time Zone database format <xref target="RFC6557"/>, also known
              as the "Olson" time zone database format
              <xref target="Olson-TZ"/>
              (e.g., <spanx style="verb">America/Los_Angeles</spanx>).</t>

              <t hangText="active"><vspace/>A Boolean value indicating the
              user's administrative status. The definitive meaning of this
              attribute is determined by the service provider. As a typical
              example, a value of true implies that the user is able to
              log in, while a value of false implies that the user's account
              has been suspended.</t>

              <t hangText="password"><vspace/>This attribute is intended to be
              used as a means to set, replace, or compare (i.e., filter for
              equality) a password. The cleartext value or the hashed value
              of a password SHALL NOT be returnable by a service provider. If
              a service provider holds the value locally, the value SHOULD be
              hashed. When a password is set or changed by the client, the
              cleartext password SHOULD be processed by the service provider
              as follows:<list style="symbols">
                  <t>Prepare the cleartext value for international language
                  comparison. See Section 7.8 of <xref target="RFC7644"/>.</t>

                  <t>Validate the value against server password policy.
                  Note: The definition and enforcement of password policy are
                  beyond the scope of this document.</t>

                  <t>Ensure that the value is encrypted (e.g., hashed).
                  See <xref target="passwordSecurity"/> for acceptable
                  hashing and encryption handling when storing or
                  persisting for provisioning workflow reasons.</t>
                </list>A service provider that immediately passes the
              cleartext value on to another system or programming interface
              MUST pass the value directly over a secured connection (e.g.,
              Transport Layer Security (TLS)). If the value needs to be
              temporarily persisted for a period of time (e.g., because of
              a workflow) before provisioning, then the value MUST be
              protected by some method, such as encryption.</t>

              <t>Testing for an equality match MAY be supported if there is an
              existing stored hashed value. When testing for equality, the
              service provider:<list style="symbols">
                  <t>Prepares the filter value for international language
                  comparison. See Section 7.8 of <xref target="RFC7644"/>.</t>

                  <t>Generates the salted hash of the filter value and
                  tests for a match with the locally held value.</t>
                </list></t>

              <t>The mutability of the password attribute is <spanx
              style="verb">writeOnly</spanx>, indicating that the value
              MUST NOT be returned by a service provider in any form
              (the attribute characteristic
              <spanx style="verb">returned</spanx> is
              <spanx style="verb">never</spanx>).</t>
            </list></t>
        </section>

        <section title="Multi-Valued Attributes">
          <t>The following multi-valued attributes are defined.</t>

          <t><list style="hanging">
              <t hangText="emails"><vspace/>Email addresses for the User. The
              value SHOULD be specified according to <xref target="RFC5321"/>.
              Service providers SHOULD canonicalize the value according to
              <xref target="RFC5321"/>, e.g., <spanx style="verb">bjensen@example.com</spanx>
              instead of <spanx style="verb">bjensen@EXAMPLE.COM</spanx>. The
              <spanx style="verb">display</spanx> sub&nbhy;attribute MAY be
              used to return the canonicalized representation of the email
              value. The <spanx style="verb">type</spanx> sub&nbhy;attribute
              is used to provide a classification meaningful to the (human)
              user. The user interface should encourage the use of basic
              values of <spanx style="verb">work</spanx>,
              <spanx style="verb">home</spanx>,
              and <spanx style="verb">other</spanx> and MAY allow additional
              type values to be used at the discretion of SCIM clients.</t>

              <t hangText="phoneNumbers"><vspace/>Phone numbers for the user.
              The value SHOULD be specified according to the format
              defined in <xref target="RFC3966"/>, e.g.,
              'tel:+1-201-555-0123'. Service providers SHOULD canonicalize
              the value according to <xref target="RFC3966"/> format,
              when appropriate. The <spanx style="verb">display</spanx>
              sub&nbhy;attribute MAY be used to return the canonicalized
              representation of the phone number value. The sub&nbhy;attribute
              <spanx style="verb">type</spanx> often has typical
              values of <spanx style="verb">work</spanx>, <spanx style="verb">home</spanx>,
              <spanx style="verb">mobile</spanx>, <spanx style="verb">fax</spanx>,
              <spanx style="verb">pager</spanx>, and <spanx style="verb">other</spanx>
              and MAY allow more types to be defined by the SCIM clients.</t>

              <t hangText="ims"><vspace/>Instant messaging address for the
              user. No official canonicalization rules exist for all
              instant messaging addresses, but service providers SHOULD, when
              appropriate, remove all whitespace and convert the address to
              lowercase. The <spanx style="verb">type</spanx>
              sub&nbhy;attribute SHOULD take one of the following
              values: <spanx style="verb">aim</spanx>,
              <spanx style="verb">gtalk</spanx>, <spanx style="verb">icq</spanx>,
              <spanx style="verb">xmpp</spanx>, <spanx style="verb">msn</spanx>,
              <spanx style="verb">skype</spanx>, <spanx style="verb">qq</spanx>,
              <spanx style="verb">yahoo</spanx>, or <spanx style="verb">other</spanx>
              (representing currently popular IM services at the time of
              this writing). Service providers MAY add further values if new IM
              services are introduced and MAY specify more detailed
              canonicalization rules for each possible value.</t>

              <t hangText="photos"><vspace/>A URI that is a uniform resource
              locator (as defined in Section 1.1.3 of <xref target="RFC3986"/>)
              that points to a resource location representing the user's
              image. The resource MUST be a file (e.g., a GIF, JPEG, or PNG
              image file) rather than a web page containing an image. Service
              providers MAY return the same image in different sizes,
              although it is recognized that no standard for describing
              images of various sizes currently exists. Note that this
              attribute SHOULD NOT be used to send down arbitrary photos
              taken by this user; instead, profile photos of the user that are
              suitable for display when describing the user should be sent.
              Instead of the standard canonical values for type,
              this attribute defines the following canonical
              values to represent popular photo sizes:
              <spanx style="verb">photo</spanx> and 
              <spanx style="verb">thumbnail</spanx>.</t>

              <t hangText="addresses"><vspace/>A physical mailing address for
              this user. Canonical type values of
              <spanx style="verb">work</spanx>,
              <spanx style="verb">home</spanx>, and
              <spanx style="verb">other</spanx>.
              This attribute is a complex type with the following
              sub&nbhy;attributes. All sub-attributes are OPTIONAL. <list
                  style="hanging">
                  <t hangText="formatted">The full mailing address, formatted
                  for display or use with a mailing label. This attribute MAY
                  contain newlines.</t>

                  <t hangText="streetAddress">The full street address
                  component, which may include house number, street name,
                  P.O.&nbsp;box, and multi-line extended street address
                  information. This attribute MAY contain newlines.</t>

                  <t hangText="locality">The city or locality component.</t>

                  <t hangText="region">The state or region component.</t>

                  <t hangText="postalCode">The zip code or postal code
                  component.</t>

                  <t hangText="country">The country name component. When
                  specified, the value MUST be in ISO 3166-1 "alpha-2"
                  code format <xref target="ISO3166"></xref>; e.g., the
                  United States and Sweden are <spanx style="verb">US</spanx>
                  and <spanx style="verb">SE</spanx>, respectively.</t>
                </list></t>

              <t hangText="groups"><vspace/>A list of groups to which the user
              belongs, either through direct membership, through nested
              groups, or dynamically calculated. The values are meant to enable
              expression of common group-based or role-based
              access control models, although no explicit authorization
              model is defined. It is
              intended that the semantics of group membership and any behavior
              or authorization granted as a result of membership are defined
              by the service provider. The canonical types <spanx
              style="verb">direct</spanx> and <spanx style="verb">indirect</spanx>
              are defined to describe how the group membership was derived.
              Direct group membership indicates that the user is directly
              associated with the group and SHOULD indicate that clients may
              modify membership through the <spanx style="verb">Group</spanx>
              resource. Indirect membership indicates that user membership is
              transitive or dynamic and implies that clients cannot modify
              indirect group membership through
              the <spanx style="verb">Group</spanx> resource but MAY modify
              direct group membership through the
              <spanx style="verb">Group</spanx> resource, which may influence
              indirect memberships. If the SCIM service provider exposes a
              <spanx style="verb">Group</spanx> resource,
              the <spanx style="verb">value</spanx> sub-attribute
              MUST be the <spanx style="verb">id</spanx>, and the
              <spanx style="verb">$ref</spanx> sub-attribute must be the URI
              of the corresponding <spanx style="verb">Group</spanx> resources
              to which the user belongs. Since this attribute has a mutability
              of <spanx style="verb">readOnly</spanx>, group membership
              changes MUST be applied via the 
              <spanx style="verb">Group</spanx> Resource
              (<xref target="group-resource"></xref>). This attribute has
              a mutability of <spanx style="verb">readOnly</spanx>.</t>

              <t hangText="entitlements"><vspace/>A list of entitlements for
              the user that represent a thing the user has. An entitlement may
              be an additional right to a thing, object, or service. No
              vocabulary or syntax is specified; service providers and
              clients are expected to encode sufficient information in the
              value so as to accurately and without ambiguity determine what
              the user has access to. This value has no canonical types,
              although a type may be useful as a means to scope
              entitlements.</t>

              <t hangText="roles"><vspace/>A list of roles for the user that
              collectively represent who the user is, e.g.,
              <spanx style="verb">Student</spanx>,
              <spanx style="verb">Faculty</spanx>. No vocabulary or syntax
              is specified, although it is expected that a role value is a
              String or label representing a collection of entitlements.
              This value has no canonical types.</t>

              <t hangText="x509Certificates"><vspace/>A list of certificates
              associated with the resource (e.g., a User). Each value contains
              exactly one DER-encoded X.509 certificate (see <xref
              target="RFC5280">Section 4 of</xref>), which MUST be
              base64 encoded per
              <xref target="RFC4648">Section 4 of</xref>. A single
              value MUST NOT contain multiple certificates and so does not
              contain the encoding "SEQUENCE OF Certificate" in any guise.</t>
            </list></t>
        </section>
      </section>

      <section anchor="group-resource" title="&quot;Group&quot; Resource Schema">
        <t>SCIM provides a schema for representing groups, identified using
        the following schema URI:
        <spanx style="verb">urn:ietf:params:scim:schemas:core:2.0:Group</spanx>.</t>

        <t><spanx style="verb">Group</spanx> resources are meant to
        enable expression of common group-based or role-based access control
        models, although no explicit authorization model is defined.
        It is intended that the semantics of group membership, and
        any behavior or authorization granted as a result of
        membership, are defined by the service provider; these are
        considered out of scope for this specification.</t>

        <t>The following singular attribute is defined in addition to the
        common attributes defined in the SCIM core schema:
           <list style="hanging">
            <t hangText="displayName"><vspace/>A human-readable name for the
            Group. REQUIRED.</t>
          </list></t>

        <t>The following multi-valued attribute is defined in addition to the
        common attributes defined in the SCIM core schema:
          <list style="hanging">
            <t hangText="members"><vspace/>A list of members of the Group.
            While values MAY be added or removed, sub-attributes of members
            are <spanx style="verb">immutable</spanx>. The <spanx
            style="verb">value</spanx> sub-attribute contains the value of an
            <spanx style="verb">id</spanx> attribute of a SCIM resource, and
            the <spanx style="verb">$ref</spanx> sub-attribute must be the URI
            of a SCIM resource such as a <spanx style="verb">User</spanx>, or
            a <spanx style="verb">Group</spanx>. The intention of the <spanx
            style="verb">Group</spanx> type is to allow the service provider
            to support nested groups. Service providers MAY require clients to
            provide a non&nbhy;empty value by setting
            the <spanx style="verb">required</spanx> attribute characteristic
            of a sub-attribute of the <spanx style="verb">members</spanx>
            attribute in the <spanx style="verb">Group</spanx>
            resource schema.</t>
          </list></t>
      </section>

      <section anchor="enterpriseUser"
               title="Enterprise User Schema Extension">
        <t>The following SCIM extension defines attributes commonly used in
        representing users that belong to, or act on behalf of, a business or
        enterprise. The enterprise User extension is identified using the
        following schema URI:
        <spanx style="verb">urn:ietf:params:scim:schemas:extension:enterprise:2.0:User</spanx>.</t>

        <t>The following singular attributes are defined:<list style="hanging">
            <t hangText="employeeNumber"><vspace/>A string identifier,
            typically numeric or alphanumeric, assigned to a person,
            typically based on order of hire or association with an
            organization.</t>

            <t hangText="costCenter"><vspace/>Identifies the name of a cost
            center.</t>

            <t hangText="organization"><vspace/>Identifies the name of an
            organization.</t>

            <t hangText="division"><vspace/>Identifies the name of a
            division.</t>

            <t hangText="department"><vspace/>Identifies the name of a
            department.</t>

            <t hangText="manager"><vspace/>The user's manager. A complex type
            that optionally allows service providers to represent
            organizational hierarchy by referencing the <spanx style="verb">id</spanx>
            attribute of another User. <list style="hanging">
                <t hangText="value">The <spanx style="verb">id</spanx> of the
                SCIM resource representing the user's manager.
                RECOMMENDED.</t>

                <t hangText="$ref">The URI of the SCIM resource representing
                the User's manager. RECOMMENDED.</t>

                <t hangText="displayName">The displayName of the user's
                manager. This attribute is OPTIONAL, and mutability is <spanx
                style="verb">readOnly</spanx>.</t>
              </list></t>
          </list></t>
      </section>
    </section>

    <section anchor="serviceProviderConfig"
             title="Service Provider Configuration Schema">
      <t>SCIM provides a schema for representing the service provider's
      configuration, identified using the following schema URI: <spanx
      style="verb">urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig</spanx>.</t>

      <t>The service provider configuration resource enables a service
      provider to discover SCIM specification features in a standardized form
      as well as provide additional implementation details to clients. All
      attributes have a mutability of <spanx style="verb">readOnly</spanx>.
      Unlike other core resources, the <spanx style="verb">id</spanx>
      attribute is not required for the service provider configuration
      resource.</t>

      <t>The following singular attributes are defined in addition to the
      common attributes defined in the core schema: <list style="hanging">
          <t hangText="documentationUri"><vspace/>An HTTP-addressable URL
          pointing to the service provider's human&nbhy;consumable help
          documentation. OPTIONAL.</t>

          <t hangText="patch"><vspace/>A complex type that specifies PATCH
          configuration options. REQUIRED. See <xref
          target="RFC7644">Section 3.5.2 of</xref>.<list
              style="hanging">
              <t hangText="supported">A Boolean value specifying whether or
              not the operation is supported. REQUIRED.</t>
            </list></t>

          <t hangText="bulk"><vspace/>A complex type that specifies bulk
          configuration options. See <xref target="RFC7644">Section
          3.7 of</xref>. REQUIRED. <list style="hanging">
              <t hangText="supported">A Boolean value specifying whether or
              not the operation is supported. REQUIRED.</t>
            </list> <list style="hanging">
              <t hangText="maxOperations">An integer value specifying the
              maximum number of operations. REQUIRED.</t>
            </list> <list style="hanging">
              <t hangText="maxPayloadSize">An integer value specifying the
              maximum payload size in bytes. REQUIRED.</t>
            </list></t>

          <t hangText="filter"><vspace/>A complex type that specifies FILTER
          options. REQUIRED. See <xref target="RFC7644">Section
          3.4.2.2 of</xref>.<list style="hanging">
              <t hangText="supported">A Boolean value specifying whether or
              not the operation is supported. REQUIRED.</t>

              <t hangText="maxResults">An integer value specifying the maximum
              number of resources returned in a response. REQUIRED.</t>
            </list></t>

          <t hangText="changePassword"><vspace/>A complex type that specifies
          configuration options related to changing a password. REQUIRED.
             <list style="hanging">
              <t hangText="supported">A Boolean value specifying whether or
              not the operation is supported. REQUIRED.</t>
            </list></t>

          <t hangText="sort"><vspace/>A complex type that specifies Sort
          configuration options. REQUIRED. <list style="hanging">
              <t hangText="supported">A Boolean value specifying whether or
              not sorting is supported. REQUIRED.</t>
            </list></t>

          <t hangText="etag"><vspace/>A complex type that specifies ETag
          configuration options. REQUIRED. <list style="hanging">
              <t hangText="supported">A Boolean value specifying whether or
              not the operation is supported. REQUIRED.</t>
            </list></t>
        </list></t>

      <t>The following multi-valued attribute is defined in addition to the
      common attributes defined in the core schema: <list style="hanging">
          <t hangText="authenticationSchemes"><vspace/>
          A multi-valued complex type that
          specifies supported authentication scheme properties. To enable
          seamless discovery of configurations, the service provider
          SHOULD, with the appropriate security considerations, make the
          authenticationSchemes attribute publicly accessible
          without prior authentication. REQUIRED.
          The following sub-attributes are defined:
            <list style="hanging">
              <t hangText="type">The authentication scheme. This
              specification defines the values
              <spanx style="verb">oauth</spanx>,
              <spanx style="verb">oauth2</spanx>,
              <spanx style="verb">oauthbearertoken</spanx>,
              <spanx style="verb">httpbasic</spanx>,
              and <spanx style="verb">httpdigest</spanx>. REQUIRED.</t>

              <t hangText="name">The common authentication scheme name, e.g.,
              HTTP Basic. REQUIRED.</t>

              <t hangText="description">A description of the authentication
              scheme. REQUIRED.</t>

              <t hangText="specUri">An HTTP-addressable URL pointing to the
              authentication scheme's specification. OPTIONAL.</t>

              <t hangText="documentationUri">An HTTP-addressable URL pointing
              to the authentication scheme's usage documentation.
              OPTIONAL.</t>
            </list></t>
        </list></t>
    </section>

    <section anchor="resource-type-schema" title="ResourceType Schema">
      <t>The <spanx style="verb">ResourceType</spanx> schema specifies the
      metadata about a resource type. Resource type resources are READ-ONLY
      and identified using the following schema URI:
      <spanx style="verb">urn:ietf:params:scim:schemas:core:2.0:ResourceType</spanx>.
      Unlike other core resources, all attributes are REQUIRED unless
      otherwise specified. The <spanx style="verb">id</spanx> attribute is not
      required for the resource type resource.</t>

      <t>The following singular attributes are defined: <list style="hanging">
          <t hangText="id"><vspace/>The resource type's server unique id.
          This is often the same value as the <spanx style="verb">name</spanx>
          attribute. OPTIONAL.</t>

          <t hangText="name"><vspace/>The resource type name. When applicable,
          service providers MUST specify the name, e.g.,
          <spanx style="verb">User</spanx> or
          <spanx style="verb">Group</spanx>. This name is referenced by
          the <spanx style="verb">meta.resourceType</spanx> attribute in
          all resources. REQUIRED.</t>

          <t hangText="description"><vspace/>The resource type's
          human-readable description. When applicable, service providers
          MUST specify the description. OPTIONAL.</t>

          <t hangText="endpoint"><vspace/>The resource type's HTTP-addressable
          endpoint relative to the Base URL of the service provider, e.g.,
          <spanx style="verb">Users</spanx>. REQUIRED.</t>

          <t hangText="schema"><vspace/>The resource type's primary/base
          schema URI, e.g.,
          <spanx style="verb">urn:ietf:params:scim:schemas:core:2.0:User</spanx>.
          This MUST be equal to the <spanx style="verb">id</spanx> attribute
          of the associated <spanx style="verb">Schema</spanx> resource.
          REQUIRED.</t>

          <t hangText="schemaExtensions"><vspace/>A list of URIs of the
          resource type's schema extensions. OPTIONAL. <list style="hanging">
              <t hangText="schema">The URI of an extended schema, e.g., <spanx
              style="verb">urn:edu:2.0:Staff</spanx>. This MUST be equal to
              the <spanx style="verb">id</spanx> attribute of a <spanx
              style="verb">Schema</spanx> resource. REQUIRED.</t>

              <t hangText="required">A Boolean value that specifies whether
              or not the schema extension is required for the resource type.
              If true, a resource of this type MUST include this schema
              extension and also include any attributes declared as required
              in this schema extension. If false, a resource of this type
              MAY omit this schema extension. REQUIRED.</t>
            </list></t>
        </list></t>
    </section>

    <section anchor="schema-schema" title="Schema Definition">
      <t>This section defines a way to specify the schema in use by resources
      available and accepted by a SCIM service provider. For each <spanx
      style="verb">schemas</spanx> URI value, this schema specifies the
      defined attribute(s) and their characteristics (mutability,
      returnability, etc). For every schema URI used in a resource object,
      there is a corresponding <spanx style="verb">Schema</spanx> resource.
      <spanx style="verb">Schema</spanx> resources are not modifiable, and
      their associated attributes have a mutability of <spanx style="verb">readOnly</spanx>.
      Except for <spanx style="verb">id</spanx> (which is always returned),
      all attributes have a <spanx style="verb">returned</spanx> characteristic
      of <spanx style="verb">default</spanx>. Unless otherwise specified, all
      schema attributes are case insensitive. These resources have a <spanx
      style="verb">schemas</spanx> attribute with the following schema URI:
      <figure>
          <artwork>urn:ietf:params:scim:schemas:core:2.0:Schema</artwork>
        </figure>Unlike other core resources, the <spanx style="verb">Schema</spanx>
      resource MAY contain a complex object within a sub-attribute, and all
      attributes are REQUIRED unless otherwise specified.</t>

      <t>The following singular attributes are defined: <list style="hanging">
          <t hangText="id"><vspace/>The unique URI of the schema. When
          applicable, service providers MUST specify the URI, e.g.,
          <spanx style="verb">urn:ietf:params:scim:schemas:core:2.0:User</spanx>.
          Unlike most other schemas, which use some sort of 
          Globally Unique Identifier (GUID) for the
          <spanx style="verb">id</spanx>, the
          schema <spanx style="verb">id</spanx>
          is a URI so that it can be registered and is portable between
          different service providers and clients. REQUIRED.</t>

          <t hangText="name"><vspace/>The schema's human-readable name. When
          applicable, service providers MUST specify the name,
          e.g., <spanx style="verb">User</spanx> or
          <spanx style="verb">Group</spanx>. OPTIONAL.</t>

          <t hangText="description"><vspace/>The schema's human-readable
          description. When applicable, service providers MUST specify the
          description. OPTIONAL.</t>
        </list></t>

      <t>The following multi-valued attribute is defined: <list
          style="hanging">
          <t hangText="attributes"><vspace/>A complex type that defines
          service provider attributes and their qualities via the
          following set of sub-attributes: <list style="hanging">
              <t hangText="name">The attribute's name.</t>

              <t hangText="type">The attribute's data type. Valid values are
              <spanx style="verb">string</spanx>, <spanx style="verb">boolean</spanx>,
              <spanx style="verb">decimal</spanx>, <spanx style="verb">integer</spanx>,
              <spanx style="verb">dateTime</spanx>, <spanx style="verb">reference</spanx>,
              and <spanx style="verb">complex</spanx>. When an attribute is of
              type <spanx style="verb">complex</spanx>, there SHOULD be a
              corresponding schema attribute <spanx style="verb">subAttributes</spanx>
              defined, listing the sub-attributes of the attribute.</t>

              <t hangText="subAttributes">When an attribute is of type <spanx
              style="verb">complex</spanx>, <spanx style="verb">subAttributes</spanx>
              defines a set of sub-attributes.
              <spanx style="verb">subAttributes</spanx>
              has the same schema sub-attributes as <spanx style="verb">attributes</spanx>.</t>

              <t hangText="multiValued">A Boolean value indicating the
              attribute's plurality.</t>

              <t hangText="description">The attribute's human-readable
              description. When applicable, service providers MUST specify the
              description.</t>

              <t hangText="required">A Boolean value that specifies whether
              or not the attribute is required.</t>

              <t hangText="canonicalValues">A collection of suggested
              canonical values that MAY be used
              (e.g., <spanx style="verb">work</spanx>
              and <spanx style="verb">home</spanx>). In some cases, service
              providers MAY choose to ignore unsupported values.
              OPTIONAL.</t>

              <t hangText="caseExact">A Boolean value that specifies whether
              or not a string attribute is case sensitive. The server
              SHALL use case sensitivity when evaluating filters. For
              attributes that are case exact, the server SHALL preserve
              case for any value submitted. If the attribute is case
              insensitive, the server MAY alter case for a submitted value.
              Case sensitivity also impacts how attribute values MAY be
              compared against filter values
              (see <xref target="RFC7644">Section 3.4.2.2 of</xref>).</t>

              <t hangText="mutability">A single keyword indicating the
              circumstances under which the value of the attribute can be
              (re)defined:<list style="hanging">
                  <t hangText="readOnly">The attribute SHALL NOT be
                  modified.</t>

                  <t hangText="readWrite">The attribute MAY be updated and
                  read at any time. This is the default value.</t>

                  <t hangText="immutable">The attribute MAY be defined at
                  resource creation (e.g., POST) or at record replacement
                  via a request (e.g., a PUT). The attribute SHALL NOT be
                  updated.</t>

                  <t hangText="writeOnly">The attribute MAY be updated at any
                  time. Attribute values SHALL NOT be returned (e.g., because
                  the value is a stored hash). Note: An attribute with a
                  mutability of <spanx style="verb">writeOnly</spanx> usually
                  also has a returned setting of <spanx style="verb">never</spanx>.</t>
                </list></t>

              <t hangText="returned">A single keyword that indicates when an
              attribute and associated values are returned in response to a
              GET request or in response to a PUT, POST, or PATCH request.
              Valid keywords are as follows: <list style="hanging">
                  <t hangText="always">The attribute is always returned,
                  regardless of the contents of the
                  <spanx style="verb">attributes</spanx> parameter.
                  For example, <spanx style="verb">id</spanx> is
                  always returned to identify a SCIM resource.</t>

                  <t hangText="never">The attribute is never returned. This
                  may occur because the original attribute value (e.g., a
                  hashed value) is not retained by the service provider.
                  A service provider MAY allow attributes to be used in a
                  search filter.</t>

                  <t hangText="default">The attribute is returned by default
                  in all SCIM operation responses where attribute values are
                  returned. If the GET request
                  <spanx style="verb">attributes</spanx> parameter
                  is specified, attribute values are only returned if the
                  attribute is named in the
                  <spanx style="verb">attributes</spanx> parameter.
                  DEFAULT.</t>

                  <t hangText="request">The attribute is returned in response
                  to any PUT, POST, or PATCH operations if the attribute was
                  specified by the client (for example, the attribute was
                  modified). The attribute is returned in a SCIM query
                  operation only if specified in the
                  <spanx style="verb">attributes</spanx> parameter.</t>
                </list></t>

              <t hangText="uniqueness">A single keyword value that specifies
              how the service provider enforces uniqueness of attribute
              values. A server MAY reject an invalid value based on uniqueness
              by returning HTTP response code 400 (Bad Request). A client MAY
              enforce uniqueness on the client side to a greater degree than
              the service provider enforces. For example, a client could make
              a value unique while the server has uniqueness of <spanx
              style="verb">none</spanx>. Valid keywords are as follows: <list
                  style="hanging">
                  <t hangText="none">The values are not intended to be unique
                  in any way. DEFAULT.</t>

                  <t hangText="server">The value SHOULD be unique within the
                  context of the current SCIM endpoint (or tenancy) and MAY be
                  globally unique (e.g., a <spanx style="verb">username</spanx>,
                  email address, or other server-generated key or counter). No
                  two resources on the same server SHOULD possess the same
                  value.</t>

                  <t hangText="global">The value SHOULD be globally unique
                  (e.g., an email address, a GUID, or other value). No two
                  resources on any server SHOULD possess the same value.</t>
                </list></t>

              <t hangText="referenceTypes">A multi-valued array of JSON
              strings that indicate the SCIM resource types that may be
              referenced. Valid values are as follows:<list style="symbols">
                  <t>A SCIM resource type (e.g., <spanx style="verb">User</spanx>
                  or <spanx style="verb">Group</spanx>),</t>

                  <t><spanx style="verb">external</spanx> - indicating that
                  the resource is an external resource (e.g., a photo),
                  or</t>

                  <t><spanx style="verb">uri</spanx> - indicating that the
                  reference is to a service endpoint or an identifier (e.g.,
                  a schema URN).</t>
                </list>This attribute is only applicable for attributes that
              are of type <spanx style="verb">reference</spanx> (<xref
              target="type-reference"/>).</t>
            </list></t>
        </list></t>
    </section>

    <section anchor="json_representation" title="JSON Representation">

      <section title="Minimal User Representation">
        <t>The following is a non-normative example of the minimal required
        SCIM representation in JSON format.</t>

        <figure align="left" anchor="minUserJSON"
                title="Example Minimal User JSON Representation">
          <artwork>{
  "schemas": ["urn:ietf:params:scim:schemas:core:2.0:User"],
  "id": "2819c223-7f76-453a-919d-413861904646",
  "userName": "bjensen@example.com",
  "meta": {
    "resourceType": "User",
    "created": "2010-01-23T04:56:22Z",
    "lastModified": "2011-05-13T04:42:34Z",
    "version": "W\/\"3694e05e9dff590\"",
    "location": 
     "https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646"
  }
}</artwork>
        </figure>
      </section>

      <section title="Full User Representation">
        <t>The following is a non-normative example of the fully populated
        SCIM representation in JSON format.</t>

        <figure align="left" anchor="fullUserJSON"
                title="Example Full User JSON Representation">
          <artwork>{
  "schemas": ["urn:ietf:params:scim:schemas:core:2.0:User"],
  "id": "2819c223-7f76-453a-919d-413861904646",
  "externalId": "701984",
  "userName": "bjensen@example.com",
  "name": {
    "formatted": "Ms. Barbara J Jensen, III",
    "familyName": "Jensen",
    "givenName": "Barbara",
    "middleName": "Jane",
    "honorificPrefix": "Ms.",
    "honorificSuffix": "III"
  },
  "displayName": "Babs Jensen",
  "nickName": "Babs",
  "profileUrl": "https://login.example.com/bjensen",
  "emails": [
    {
      "value": "bjensen@example.com",
      "type": "work",
      "primary": true
    },
    {
      "value": "babs@jensen.org",
      "type": "home"
    }
  ],
  "addresses": [
    {
      "type": "work",
      "streetAddress": "100 Universal City Plaza",
      "locality": "Hollywood",
      "region": "CA",
      "postalCode": "91608",
      "country": "USA",
      "formatted": "100 Universal City Plaza\nHollywood, CA 91608 USA",
      "primary": true
    },
    {
      "type": "home",
      "streetAddress": "456 Hollywood Blvd",
      "locality": "Hollywood",
      "region": "CA",
      "postalCode": "91608",
      "country": "USA",
      "formatted": "456 Hollywood Blvd\nHollywood, CA 91608 USA"
    }
  ],
  "phoneNumbers": [
    {
      "value": "555-555-5555",
      "type": "work"
    },
    {
      "value": "555-555-4444",
      "type": "mobile"
    }
  ],
  "ims": [
    {
      "value": "someaimhandle",
      "type": "aim"
    }
  ],
  "photos": [
    {
      "value": 
        "https://photos.example.com/profilephoto/72930000000Ccne/F",
      "type": "photo"
    },
    {
      "value": 
        "https://photos.example.com/profilephoto/72930000000Ccne/T",
      "type": "thumbnail"
    }
  ],
  "userType": "Employee",
  "title": "Tour Guide",
  "preferredLanguage": "en-US",
  "locale": "en-US",
  "timezone": "America/Los_Angeles",
  "active":true,
  "password": "t1meMa$heen",
  "groups": [
    {
      "value": "e9e30dba-f08f-4109-8486-d5c6a331660a",
      "$ref": 
"https://example.com/v2/Groups/e9e30dba-f08f-4109-8486-d5c6a331660a",
      "display": "Tour Guides"
    },
    {
      "value": "fc348aa8-3835-40eb-a20b-c726e15c55b5",
      "$ref": 
"https://example.com/v2/Groups/fc348aa8-3835-40eb-a20b-c726e15c55b5",
      "display": "Employees"
    },
    {
      "value": "71ddacd2-a8e7-49b8-a5db-ae50d0a5bfd7",
      "$ref": 
"https://example.com/v2/Groups/71ddacd2-a8e7-49b8-a5db-ae50d0a5bfd7",
      "display": "US Employees"
    }
  ],
  "x509Certificates": [
    {
      "value": 
       "MIIDQzCCAqygAwIBAgICEAAwDQYJKoZIhvcNAQEFBQAwTjELMAkGA1UEBhMCVVMx
        EzARBgNVBAgMCkNhbGlmb3JuaWExFDASBgNVBAoMC2V4YW1wbGUuY29tMRQwEgYD
        VQQDDAtleGFtcGxlLmNvbTAeFw0xMTEwMjIwNjI0MzFaFw0xMjEwMDQwNjI0MzFa
        MH8xCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRQwEgYDVQQKDAtl
        eGFtcGxlLmNvbTEhMB8GA1UEAwwYTXMuIEJhcmJhcmEgSiBKZW5zZW4gSUlJMSIw
        IAYJKoZIhvcNAQkBFhNiamVuc2VuQGV4YW1wbGUuY29tMIIBIjANBgkqhkiG9w0B
        AQEFAAOCAQ8AMIIBCgKCAQEA7Kr+Dcds/JQ5GwejJFcBIP682X3xpjis56AK02bc
        1FLgzdLI8auoR+cC9/Vrh5t66HkQIOdA4unHh0AaZ4xL5PhVbXIPMB5vAPKpzz5i
        PSi8xO8SL7I7SDhcBVJhqVqr3HgllEG6UClDdHO7nkLuwXq8HcISKkbT5WFTVfFZ
        zidPl8HZ7DhXkZIRtJwBweq4bvm3hM1Os7UQH05ZS6cVDgweKNwdLLrT51ikSQG3
        DYrl+ft781UQRIqxgwqCfXEuDiinPh0kkvIi5jivVu1Z9QiwlYEdRbLJ4zJQBmDr
        SGTMYn4lRc2HgHO4DqB/bnMVorHB0CC6AV1QoFK4GPe1LwIDAQABo3sweTAJBgNV
        HRMEAjAAMCwGCWCGSAGG+EIBDQQfFh1PcGVuU1NMIEdlbmVyYXRlZCBDZXJ0aWZp
        Y2F0ZTAdBgNVHQ4EFgQU8pD0U0vsZIsaA16lL8En8bx0F/gwHwYDVR0jBBgwFoAU
        dGeKitcaF7gnzsNwDx708kqaVt0wDQYJKoZIhvcNAQEFBQADgYEAA81SsFnOdYJt
        Ng5Tcq+/ByEDrBgnusx0jloUhByPMEVkoMZ3J7j1ZgI8rAbOkNngX8+pKfTiDz1R
        C4+dx8oU6Za+4NJXUjlL5CvV6BEYb1+QAEJwitTVvxB/A67g42/vzgAtoRUeDov1
        +GFiBZ+GNF/cAYKcMtGcrs2i97ZkJMo="
    }
  ],
  "meta": {
    "resourceType": "User",
    "created": "2010-01-23T04:56:22Z",
    "lastModified": "2011-05-13T04:42:34Z",
    "version": "W\/\"a330bc54f0671c9\"",
    "location": 
"https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646"
  }
}</artwork>
        </figure>
      </section>

      <section anchor="enterpriseUserRepresentation"
               title="Enterprise User Extension Representation">
        <t>The following is a non-normative example of the fully populated
        User using the enterprise User extension in JSON format.</t>

        <figure align="left" anchor="enterpriseUserJSON"
                title="Example Enterprise User JSON Representation">
          <artwork>{
  "schemas": 
    ["urn:ietf:params:scim:schemas:core:2.0:User", 
      "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User"],
  "id": "2819c223-7f76-453a-919d-413861904646",
  "externalId": "701984",
  "userName": "bjensen@example.com",
  "name": {
    "formatted": "Ms. Barbara J Jensen, III",
    "familyName": "Jensen",
    "givenName": "Barbara",
    "middleName": "Jane",
    "honorificPrefix": "Ms.",
    "honorificSuffix": "III"
  },
  "displayName": "Babs Jensen",
  "nickName": "Babs",
  "profileUrl": "https://login.example.com/bjensen",
  "emails": [
    {
      "value": "bjensen@example.com",
      "type": "work",
      "primary": true
    },
    {
      "value": "babs@jensen.org",
      "type": "home"
    }
  ],
  "addresses": [
    {
      "streetAddress": "100 Universal City Plaza",
      "locality": "Hollywood",
      "region": "CA",
      "postalCode": "91608",
      "country": "USA",
      "formatted": "100 Universal City Plaza\nHollywood, CA 91608 USA",
      "type": "work",
      "primary": true
    },
    {
      "streetAddress": "456 Hollywood Blvd",
      "locality": "Hollywood",
      "region": "CA",
      "postalCode": "91608",
      "country": "USA",
      "formatted": "456 Hollywood Blvd\nHollywood, CA 91608 USA",
      "type": "home"
     }
  ],
  "phoneNumbers": [
    {
      "value": "555-555-5555",
      "type": "work"
    },
    {
      "value": "555-555-4444",
      "type": "mobile"
    }
  ],
  "ims": [
    {
      "value": "someaimhandle",
      "type": "aim"
    }
  ],
  "photos": [
    {
      "value": 
        "https://photos.example.com/profilephoto/72930000000Ccne/F",
      "type": "photo"
    },
    {
      "value": 
        "https://photos.example.com/profilephoto/72930000000Ccne/T",
      "type": "thumbnail"
    }
  ],
  "userType": "Employee",
  "title": "Tour Guide",
  "preferredLanguage": "en-US",
  "locale": "en-US",
  "timezone": "America/Los_Angeles",
  "active":true,
  "password": "t1meMa$heen",
  "groups": [
    {
      "value": "e9e30dba-f08f-4109-8486-d5c6a331660a",
      "$ref": "../Groups/e9e30dba-f08f-4109-8486-d5c6a331660a",
      "display": "Tour Guides"
    },
    {
      "value": "fc348aa8-3835-40eb-a20b-c726e15c55b5",
      "$ref": "../Groups/fc348aa8-3835-40eb-a20b-c726e15c55b5",
      "display": "Employees"
    },
    {
      "value": "71ddacd2-a8e7-49b8-a5db-ae50d0a5bfd7",
      "$ref": "../Groups/71ddacd2-a8e7-49b8-a5db-ae50d0a5bfd7",
      "display": "US Employees"
    }
  ],
  "x509Certificates": [
    {
      "value": 
       "MIIDQzCCAqygAwIBAgICEAAwDQYJKoZIhvcNAQEFBQAwTjELMAkGA1UEBhMCVVMx
        EzARBgNVBAgMCkNhbGlmb3JuaWExFDASBgNVBAoMC2V4YW1wbGUuY29tMRQwEgYD
        VQQDDAtleGFtcGxlLmNvbTAeFw0xMTEwMjIwNjI0MzFaFw0xMjEwMDQwNjI0MzFa
        MH8xCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRQwEgYDVQQKDAtl
        eGFtcGxlLmNvbTEhMB8GA1UEAwwYTXMuIEJhcmJhcmEgSiBKZW5zZW4gSUlJMSIw
        IAYJKoZIhvcNAQkBFhNiamVuc2VuQGV4YW1wbGUuY29tMIIBIjANBgkqhkiG9w0B
        AQEFAAOCAQ8AMIIBCgKCAQEA7Kr+Dcds/JQ5GwejJFcBIP682X3xpjis56AK02bc
        1FLgzdLI8auoR+cC9/Vrh5t66HkQIOdA4unHh0AaZ4xL5PhVbXIPMB5vAPKpzz5i
        PSi8xO8SL7I7SDhcBVJhqVqr3HgllEG6UClDdHO7nkLuwXq8HcISKkbT5WFTVfFZ
        zidPl8HZ7DhXkZIRtJwBweq4bvm3hM1Os7UQH05ZS6cVDgweKNwdLLrT51ikSQG3
        DYrl+ft781UQRIqxgwqCfXEuDiinPh0kkvIi5jivVu1Z9QiwlYEdRbLJ4zJQBmDr
        SGTMYn4lRc2HgHO4DqB/bnMVorHB0CC6AV1QoFK4GPe1LwIDAQABo3sweTAJBgNV
        HRMEAjAAMCwGCWCGSAGG+EIBDQQfFh1PcGVuU1NMIEdlbmVyYXRlZCBDZXJ0aWZp
        Y2F0ZTAdBgNVHQ4EFgQU8pD0U0vsZIsaA16lL8En8bx0F/gwHwYDVR0jBBgwFoAU
        dGeKitcaF7gnzsNwDx708kqaVt0wDQYJKoZIhvcNAQEFBQADgYEAA81SsFnOdYJt
        Ng5Tcq+/ByEDrBgnusx0jloUhByPMEVkoMZ3J7j1ZgI8rAbOkNngX8+pKfTiDz1R
        C4+dx8oU6Za+4NJXUjlL5CvV6BEYb1+QAEJwitTVvxB/A67g42/vzgAtoRUeDov1
        +GFiBZ+GNF/cAYKcMtGcrs2i97ZkJMo="
    }
  ],
  "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
    "employeeNumber": "701984",
    "costCenter": "4130",
    "organization": "Universal Studios",
    "division": "Theme Park",
    "department": "Tour Operations",
    "manager": {
      "value": "26118915-6090-4610-87e4-49d8ca9f808d",
      "$ref": "../Users/26118915-6090-4610-87e4-49d8ca9f808d",
      "displayName": "John Smith"
    }
  },
  "meta": {
    "resourceType": "User",
    "created": "2010-01-23T04:56:22Z",
    "lastModified": "2011-05-13T04:42:34Z",
    "version": "W\/\"3694e05e9dff591\"",
    "location": 
"https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646"
  }
}</artwork>
        </figure>
      </section>

      <section title="Group Representation">
        <t>The following is a non-normative example of the SCIM Group
        representation in JSON format.</t>

        <figure align="left" anchor="groupJSON"
                title="Example Group JSON Representation">
          <artwork>{
  "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Group"],
  "id": "e9e30dba-f08f-4109-8486-d5c6a331660a",
  "displayName": "Tour Guides",
  "members": [
    {
      "value": "2819c223-7f76-453a-919d-413861904646",
      "$ref":
"https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646",
      "display": "Babs Jensen"
    },
    {
      "value": "902c246b-6245-4190-8e05-00816be7344a",
      "$ref": 
"https://example.com/v2/Users/902c246b-6245-4190-8e05-00816be7344a",
      "display": "Mandy Pepperidge"
    }
  ],
  "meta": {
    "resourceType": "Group",
    "created": "2010-01-23T04:56:22Z",
    "lastModified": "2011-05-13T04:42:34Z",
    "version": "W\/\"3694e05e9dff592\"",
    "location": 
"https://example.com/v2/Groups/e9e30dba-f08f-4109-8486-d5c6a331660a"
  }
}</artwork>
        </figure>
      </section>

      <section title="Service Provider Configuration Representation">
        <t>The following is a non-normative example of the SCIM service
        provider configuration representation in JSON format.</t>

        <figure align="left" anchor="serviceProviderConfigJSON"
                title="Example Service Provider Configuration JSON Representation">
          <artwork>{
  "schemas":
    ["urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig"],
  "documentationUri": "http://example.com/help/scim.html",
  "patch": {
    "supported":true
  },
  "bulk": {
    "supported":true,
    "maxOperations":1000,
    "maxPayloadSize":1048576
  },
  "filter": {
    "supported":true,
    "maxResults": 200
  },
  "changePassword": {
    "supported":true
  },
  "sort": {
    "supported":true
  },
  "etag": {
    "supported":true
  },
  "authenticationSchemes": [
    {
      "name": "OAuth Bearer Token",
      "description": 
        "Authentication scheme using the OAuth Bearer Token Standard",
      "specUri": "http://www.rfc-editor.org/info/rfc6750",
      "documentationUri": "http://example.com/help/oauth.html",
      "type": "oauthbearertoken",
      "primary": true
    },
    {
      "name": "HTTP Basic",
      "description": 
        "Authentication scheme using the HTTP Basic Standard",
      "specUri": "http://www.rfc-editor.org/info/rfc2617",
      "documentationUri": "http://example.com/help/httpBasic.html",
      "type": "httpbasic"
     }
  ],
  "meta": {
    "location": "https://example.com/v2/ServiceProviderConfig",
    "resourceType": "ServiceProviderConfig",
    "created": "2010-01-23T04:56:22Z",
    "lastModified": "2011-05-13T04:42:34Z",
    "version": "W\/\"3694e05e9dff594\""
  }
}</artwork>
        </figure>

      </section>

      <section anchor="resourceTypesRepresentation"
               title="Resource Type Representation">
        <t>The following is a non-normative example of the SCIM resource types
        in JSON format.</t>

        <figure anchor="resourceTypeJSON"
                title="Example Resource Type JSON Representation">
          <artwork>[{
  "schemas": ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"],
  "id": "User",
  "name": "User",
  "endpoint": "/Users",
  "description": "User Account",
  "schema": "urn:ietf:params:scim:schemas:core:2.0:User",
  "schemaExtensions": [
    {
      "schema": 
        "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
      "required": true
    }
  ],
  "meta": {
    "location": "https://example.com/v2/ResourceTypes/User",
    "resourceType": "ResourceType"
  }
 },
 {
  "schemas": ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"],
  "id": "Group",
  "name": "Group",
  "endpoint": "/Groups",
  "description": "Group",
  "schema": "urn:ietf:params:scim:schemas:core:2.0:Group",
  "meta": {
    "location": "https://example.com/v2/ResourceTypes/Group",
    "resourceType": "ResourceType"
  }
}]</artwork>
        </figure>
      </section>

      <section anchor="schema-representation" title="Schema Representation">
        <t>The following sections provide representations of schemas for both
        SCIM resources and service provider schemas. Note that the JSON
        representation has been modified for readability and to fit the
        specification format.</t>

        <section title="Resource Schema Representation">
          <t>The following is intended as an example of the SCIM schema
          representation in JSON format for SCIM resources. Where permitted,
          individual values and schema MAY change. This example includes
          schema representations for
          <spanx style="verb">User</spanx>,
          <spanx style="verb">Group</spanx>, and
          <spanx style="verb">EnterpriseUser</spanx>; other schema
          representations are possible.</t>

          <figure anchor="schemaJSON"
                  title="Example JSON Representation for Resource Schema">
            <artwork>[
  {
    "id" : "urn:ietf:params:scim:schemas:core:2.0:User",
    "name" : "User",
    "description" : "User Account",
    "attributes" : [
      {
        "name" : "userName",
        "type" : "string",
        "multiValued" : false,
        "description" : "Unique identifier for the User, typically
used by the user to directly authenticate to the service provider.
Each User MUST include a non-empty userName value.  This identifier
MUST be unique across the service provider's entire set of Users.
REQUIRED.",
        "required" : true,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "server"
      },
      {
        "name" : "name",
        "type" : "complex",
        "multiValued" : false,
        "description" : "The components of the user's real name.
Providers MAY return just the full name as a single string in the
formatted sub-attribute, or they MAY return just the individual
component attributes using the other sub-attributes, or they MAY
return both.  If both variants are returned, they SHOULD be
describing the same name, with the formatted name indicating how the
component attributes should be combined.",
        "required" : false,
        "subAttributes" : [
          {
            "name" : "formatted",
            "type" : "string",
            "multiValued" : false,
            "description" : "The full name, including all middle
names, titles, and suffixes as appropriate, formatted for display
(e.g., 'Ms. Barbara J Jensen, III').",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "familyName",
            "type" : "string",
            "multiValued" : false,
            "description" : "The family name of the User, or
last name in most Western languages (e.g., 'Jensen' given the full
name 'Ms. Barbara J Jensen, III').",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "givenName",
            "type" : "string",
            "multiValued" : false,
            "description" : "The given name of the User, or
first name in most Western languages (e.g., 'Barbara' given the
full name 'Ms. Barbara J Jensen, III').",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "middleName",
            "type" : "string",
            "multiValued" : false,
            "description" : "The middle name(s) of the User
(e.g., 'Jane' given the full name 'Ms. Barbara J Jensen, III').",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "honorificPrefix",
            "type" : "string",
            "multiValued" : false,
            "description" : "The honorific prefix(es) of the User, or
title in most Western languages (e.g., 'Ms.' given the full name
'Ms. Barbara J Jensen, III').",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "honorificSuffix",
            "type" : "string",
            "multiValued" : false,
            "description" : "The honorific suffix(es) of the User, or
suffix in most Western languages (e.g., 'III' given the full name
'Ms. Barbara J Jensen, III').",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          }
        ],
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "displayName",
        "type" : "string",
        "multiValued" : false,
        "description" : "The name of the User, suitable for display
to end-users.  The name SHOULD be the full name of the User being
described, if known.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "nickName",
        "type" : "string",
        "multiValued" : false,
        "description" : "The casual way to address the user in real
life, e.g., 'Bob' or 'Bobby' instead of 'Robert'.  This attribute
SHOULD NOT be used to represent a User's username (e.g., 'bjensen' or
'mpepperidge').",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "profileUrl",
        "type" : "reference",
        "referenceTypes" : ["external"],
        "multiValued" : false,
        "description" : "A fully qualified URL pointing to a page
representing the User's online profile.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "title",
        "type" : "string",
        "multiValued" : false,
        "description" : "The user's title, such as
\"Vice President.\"",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "userType",
        "type" : "string",
        "multiValued" : false,
        "description" : "Used to identify the relationship between
the organization and the user.  Typical values used might be
'Contractor', 'Employee', 'Intern', 'Temp', 'External', and
'Unknown', but any value may be used.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "preferredLanguage",
        "type" : "string",
        "multiValued" : false,
        "description" : "Indicates the User's preferred written or
spoken language.  Generally used for selecting a localized user
interface; e.g., 'en_US' specifies the language English and country
US.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "locale",
        "type" : "string",
        "multiValued" : false,
        "description" : "Used to indicate the User's default location
for purposes of localizing items such as currency, date time format, or
numerical representations.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "timezone",
        "type" : "string",
        "multiValued" : false,
        "description" : "The User's time zone in the 'Olson' time zone
database format, e.g., 'America/Los_Angeles'.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "active",
        "type" : "boolean",
        "multiValued" : false,
        "description" : "A Boolean value indicating the User's 
administrative status.",
        "required" : false,
        "mutability" : "readWrite",
        "returned" : "default"
      },
      {
        "name" : "password",
        "type" : "string",
        "multiValued" : false,
        "description" : "The User's cleartext password.  This
attribute is intended to be used as a means to specify an initial
password when creating a new User or to reset an existing User's
password.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "writeOnly",
        "returned" : "never",
        "uniqueness" : "none"
      },
      {
        "name" : "emails",
        "type" : "complex",
        "multiValued" : true,
        "description" : "Email addresses for the user.  The value
SHOULD be canonicalized by the service provider, e.g.,
'bjensen@example.com' instead of 'bjensen@EXAMPLE.COM'.
Canonical type values of 'work', 'home', and 'other'.",
        "required" : false,
        "subAttributes" : [
          {
            "name" : "value",
            "type" : "string",
            "multiValued" : false,
            "description" : "Email addresses for the user.  The value
SHOULD be canonicalized by the service provider, e.g.,
'bjensen@example.com' instead of 'bjensen@EXAMPLE.COM'.
Canonical type values of 'work', 'home', and 'other'.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "display",
            "type" : "string",
            "multiValued" : false,
            "description" : "A human-readable name, primarily used
for display purposes.  READ-ONLY.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "type",
            "type" : "string",
            "multiValued" : false,
            "description" : "A label indicating the attribute's
function, e.g., 'work' or 'home'.",
            "required" : false,
            "caseExact" : false,
            "canonicalValues" : [
              "work",
              "home",
              "other"
            ],
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "primary",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value indicating the 'primary'
or preferred attribute value for this attribute, e.g., the preferred
mailing address or primary email address.  The primary attribute
value 'true' MUST appear no more than once.",
            "required" : false,
            "mutability" : "readWrite",
            "returned" : "default"
          }
        ],
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "phoneNumbers",
        "type" : "complex",
        "multiValued" : true,
        "description" : "Phone numbers for the User.  The value
SHOULD be canonicalized by the service provider according to the
format specified in RFC 3966, e.g., 'tel:+1-201-555-0123'.
Canonical type values of 'work', 'home', 'mobile', 'fax', 'pager',
and 'other'.",
        "required" : false,
        "subAttributes" : [
          {
            "name" : "value",
            "type" : "string",
            "multiValued" : false,
            "description" : "Phone number of the User.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "display",
            "type" : "string",
            "multiValued" : false,
            "description" : "A human-readable name, primarily used
for display purposes.  READ-ONLY.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "type",
            "type" : "string",
            "multiValued" : false,
            "description" : "A label indicating the attribute's
function, e.g., 'work', 'home', 'mobile'.",
            "required" : false,
            "caseExact" : false,
            "canonicalValues" : [
              "work",
              "home",
              "mobile",
              "fax",
              "pager",
              "other"
            ],
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "primary",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value indicating the 'primary'
or preferred attribute value for this attribute, e.g., the preferred
phone number or primary phone number.  The primary attribute value
'true' MUST appear no more than once.",
            "required" : false,
            "mutability" : "readWrite",
            "returned" : "default"
          }
        ],
        "mutability" : "readWrite",
        "returned" : "default"
      },
      {
        "name" : "ims",
        "type" : "complex",
        "multiValued" : true,
        "description" : "Instant messaging addresses for the User.",
        "required" : false,
        "subAttributes" : [
          {
            "name" : "value",
            "type" : "string",
            "multiValued" : false,
            "description" : "Instant messaging address for the User.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "display",
            "type" : "string",
            "multiValued" : false,
            "description" : "A human-readable name, primarily used
for display purposes.  READ-ONLY.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "type",
            "type" : "string",
            "multiValued" : false,
            "description" : "A label indicating the attribute's
function, e.g., 'aim', 'gtalk', 'xmpp'.",
            "required" : false,
            "caseExact" : false,
            "canonicalValues" : [
              "aim",
              "gtalk",
              "icq",
              "xmpp",
              "msn",
              "skype",
              "qq",
              "yahoo"
            ],
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "primary",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value indicating the 'primary'
or preferred attribute value for this attribute, e.g., the preferred
messenger or primary messenger.  The primary attribute value 'true'
MUST appear no more than once.",
            "required" : false,
            "mutability" : "readWrite",
            "returned" : "default"
          }
        ],
        "mutability" : "readWrite",
        "returned" : "default"
      },
      {
        "name" : "photos",
        "type" : "complex",
        "multiValued" : true,
        "description" : "URLs of photos of the User.",
        "required" : false,
        "subAttributes" : [
          {
            "name" : "value",
            "type" : "reference",
            "referenceTypes" : ["external"],
            "multiValued" : false,
            "description" : "URL of a photo of the User.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "display",
            "type" : "string",
            "multiValued" : false,
            "description" : "A human-readable name, primarily used
for display purposes.  READ-ONLY.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "type",
            "type" : "string",
            "multiValued" : false,
            "description" : "A label indicating the attribute's
function, i.e., 'photo' or 'thumbnail'.",
            "required" : false,
            "caseExact" : false,
            "canonicalValues" : [
              "photo",
              "thumbnail"
            ],
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "primary",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value indicating the 'primary'
or preferred attribute value for this attribute, e.g., the preferred
photo or thumbnail.  The primary attribute value 'true' MUST appear
no more than once.",
            "required" : false,
            "mutability" : "readWrite",
            "returned" : "default"
          }
        ],
        "mutability" : "readWrite",
        "returned" : "default"
      },
      {
        "name" : "addresses",
        "type" : "complex",
        "multiValued" : true,
        "description" : "A physical mailing address for this User.
Canonical type values of 'work', 'home', and 'other'.  This attribute
is a complex type with the following sub-attributes.",
        "required" : false,
        "subAttributes" : [
          {
            "name" : "formatted",
            "type" : "string",
            "multiValued" : false,
            "description" : "The full mailing address, formatted for
display or use with a mailing label.  This attribute MAY contain 
newlines.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "streetAddress",
            "type" : "string",
            "multiValued" : false,
            "description" : "The full street address component,
which may include house number, street name, P.O. box, and multi-line
extended street address information.  This attribute MAY contain
newlines.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "locality",
            "type" : "string",
            "multiValued" : false,
            "description" : "The city or locality component.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "region",
            "type" : "string",
            "multiValued" : false,
            "description" : "The state or region component.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "postalCode",
            "type" : "string",
            "multiValued" : false,
            "description" : "The zip code or postal code component.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "country",
            "type" : "string",
            "multiValued" : false,
            "description" : "The country name component.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "type",
            "type" : "string",
            "multiValued" : false,
            "description" : "A label indicating the attribute's
function, e.g., 'work' or 'home'.",
            "required" : false,
            "caseExact" : false,
            "canonicalValues" : [
              "work",
              "home",
              "other"
            ],
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          }
        ],
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "groups",
        "type" : "complex",
        "multiValued" : true,
        "description" : "A list of groups to which the user belongs,
either through direct membership, through nested groups, or
dynamically calculated.",
        "required" : false,
        "subAttributes" : [
          {
            "name" : "value",
            "type" : "string",
            "multiValued" : false,
            "description" : "The identifier of the User's group.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "$ref",
            "type" : "reference",
            "referenceTypes" : [
              "User",
              "Group"
            ],
            "multiValued" : false,
            "description" : "The URI of the corresponding 'Group' 
resource to which the user belongs.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "display",
            "type" : "string",
            "multiValued" : false,
            "description" : "A human-readable name, primarily used
for display purposes.  READ-ONLY.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "type",
            "type" : "string",
            "multiValued" : false,
            "description" : "A label indicating the attribute's 
function, e.g., 'direct' or 'indirect'.",
            "required" : false,
            "caseExact" : false,
            "canonicalValues" : [
              "direct",
              "indirect"
            ],
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          }
        ],
        "mutability" : "readOnly",
        "returned" : "default"
      },
      {
        "name" : "entitlements",
        "type" : "complex",
        "multiValued" : true,
        "description" : "A list of entitlements for the User that
represent a thing the User has.",
        "required" : false,
        "subAttributes" : [
          {
            "name" : "value",
            "type" : "string",
            "multiValued" : false,
            "description" : "The value of an entitlement.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "display",
            "type" : "string",
            "multiValued" : false,
            "description" : "A human-readable name, primarily used
for display purposes.  READ-ONLY.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "type",
            "type" : "string",
            "multiValued" : false,
            "description" : "A label indicating the attribute's
function.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "primary",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value indicating the 'primary'
or preferred attribute value for this attribute.  The primary
attribute value 'true' MUST appear no more than once.",
            "required" : false,
            "mutability" : "readWrite",
            "returned" : "default"
          }
        ],
        "mutability" : "readWrite",
        "returned" : "default"
      },
      {
        "name" : "roles",
        "type" : "complex",
        "multiValued" : true,
        "description" : "A list of roles for the User that
collectively represent who the User is, e.g., 'Student', 'Faculty'.",
        "required" : false,
        "subAttributes" : [
          {
            "name" : "value",
            "type" : "string",
            "multiValued" : false,
            "description" : "The value of a role.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "display",
            "type" : "string",
            "multiValued" : false,
            "description" : "A human-readable name, primarily used
for display purposes.  READ-ONLY.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "type",
            "type" : "string",
            "multiValued" : false,
            "description" : "A label indicating the attribute's 
function.",
            "required" : false,
            "caseExact" : false,
            "canonicalValues" : [],
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "primary",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value indicating the 'primary'
or preferred attribute value for this attribute.  The primary
attribute value 'true' MUST appear no more than once.",
            "required" : false,
            "mutability" : "readWrite",
            "returned" : "default"
          }
        ],
        "mutability" : "readWrite",
        "returned" : "default"
      },
      {
        "name" : "x509Certificates",
        "type" : "complex",
        "multiValued" : true,
        "description" : "A list of certificates issued to the User.",
        "required" : false,
        "caseExact" : false,
        "subAttributes" : [
          {
            "name" : "value",
            "type" : "binary",
            "multiValued" : false,
            "description" : "The value of an X.509 certificate.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "display",
            "type" : "string",
            "multiValued" : false,
            "description" : "A human-readable name, primarily used 
for display purposes.  READ-ONLY.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "type",
            "type" : "string",
            "multiValued" : false,
            "description" : "A label indicating the attribute's 
function.",
            "required" : false,
            "caseExact" : false,
            "canonicalValues" : [],
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "primary",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value indicating the 'primary'
or preferred attribute value for this attribute.  The primary
attribute value 'true' MUST appear no more than once.",
            "required" : false,
            "mutability" : "readWrite",
            "returned" : "default"
          }
        ],
        "mutability" : "readWrite",
        "returned" : "default"
      }
    ],
    "meta" : {
      "resourceType" : "Schema",
      "location" : 
        "/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:User"
    }
  },
  {
    "id" : "urn:ietf:params:scim:schemas:core:2.0:Group",
    "name" : "Group",
    "description" : "Group",
    "attributes" : [
      {
        "name" : "displayName",
        "type" : "string",
        "multiValued" : false,
        "description" : "A human-readable name for the Group.
REQUIRED.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "members",
        "type" : "complex",
        "multiValued" : true,
        "description" : "A list of members of the Group.",
        "required" : false,
        "subAttributes" : [
          {
            "name" : "value",
            "type" : "string",
            "multiValued" : false,
            "description" : "Identifier of the member of this Group.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "immutable",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "$ref",
            "type" : "reference",
            "referenceTypes" : [
              "User",
              "Group"
            ],
            "multiValued" : false,
            "description" : "The URI corresponding to a SCIM resource
that is a member of this Group.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "immutable",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "type",
            "type" : "string",
            "multiValued" : false,
            "description" : "A label indicating the type of resource,
e.g., 'User' or 'Group'.",
            "required" : false,
            "caseExact" : false,
            "canonicalValues" : [
              "User",
              "Group"
            ],
            "mutability" : "immutable",
            "returned" : "default",
            "uniqueness" : "none"
          }
        ],
        "mutability" : "readWrite",
        "returned" : "default"
      }
    ],
    "meta" : {
      "resourceType" : "Schema",
      "location" : 
        "/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:Group"
    }
  },
  {
    "id" : "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
    "name" : "EnterpriseUser",
    "description" : "Enterprise User",
    "attributes" : [
      {
        "name" : "employeeNumber",
        "type" : "string",
        "multiValued" : false,
        "description" : "Numeric or alphanumeric identifier assigned
to a person, typically based on order of hire or association with an
organization.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "costCenter",
        "type" : "string",
        "multiValued" : false,
        "description" : "Identifies the name of a cost center.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "organization",
        "type" : "string",
        "multiValued" : false,
        "description" : "Identifies the name of an organization.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "division",
        "type" : "string",
        "multiValued" : false,
        "description" : "Identifies the name of a division.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "department",
        "type" : "string",
        "multiValued" : false,
        "description" : "Identifies the name of a department.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readWrite",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "manager",
        "type" : "complex",
        "multiValued" : false,
        "description" : "The User's manager.  A complex type that
optionally allows service providers to represent organizational
hierarchy by referencing the 'id' attribute of another User.",
        "required" : false,
        "subAttributes" : [
          {
            "name" : "value",
            "type" : "string",
            "multiValued" : false,
            "description" : "The id of the SCIM resource representing
the User's manager.  REQUIRED.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "$ref",
            "type" : "reference",
            "referenceTypes" : [
              "User"
            ],
            "multiValued" : false,
            "description" : "The URI of the SCIM resource
representing the User's manager.  REQUIRED.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readWrite",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "displayName",
            "type" : "string",
            "multiValued" : false,
            "description" : "The displayName of the User's manager.
OPTIONAL and READ-ONLY.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          }
        ],
        "mutability" : "readWrite",
        "returned" : "default"
      }
    ],
    "meta" : {
      "resourceType" : "Schema",
      "location" : 
"/v2/Schemas/urn:ietf:params:scim:schemas:extension:enterprise:2.0:User"
    }
  }
]</artwork>
          </figure>

        </section>

        <section title="Service Provider Schema Representation">
          <t>The following is a representation of the SCIM schema for the
          fixed service provider schemas: ServiceProviderConfig, ResourceType,
          and Schema.</t>

          <figure anchor="fixedSchema"
              title="Representation of Fixed Service Provider Endpoint Schemas">
            <artwork>[
  {
    "id" : 
      "urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig",
    "name" : "Service Provider Configuration",
    "description" : "Schema for representing the service provider's 
      configuration",
    "attributes" : [
      {
        "name" : "documentationUri",
        "type" : "reference",
        "referenceTypes" : ["external"],
        "multiValued" : false,
        "description" : "An HTTP-addressable URL pointing to the
          service provider's human-consumable help documentation.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readOnly",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "patch",
        "type" : "complex",
        "multiValued" : false,
        "description" : "A complex type that specifies PATCH 
          configuration options.",
        "required" : true,
        "returned" : "default",
        "mutability" : "readOnly",
        "subAttributes" : [
          {
            "name" : "supported",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value specifying whether or not
              the operation is supported.",
            "required" : true,
            "mutability" : "readOnly",
            "returned" : "default"
          }
        ]
      },
      {
        "name" : "bulk",
        "type" : "complex",
        "multiValued" : false,
        "description" : "A complex type that specifies bulk 
          configuration options.",
        "required" : true,
        "returned" : "default",
        "mutability" : "readOnly",
        "subAttributes" : [
          {
            "name" : "supported",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value specifying whether or not
              the operation is supported.",
            "required" : true,
            "mutability" : "readOnly",
            "returned" : "default"
          },
          {
            "name" : "maxOperations",
            "type" : "integer",
            "multiValued" : false,
            "description" : "An integer value specifying the maximum 
              number of operations.",
            "required" : true,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "maxPayloadSize",
            "type" : "integer",
            "multiValued" : false,
            "description" : "An integer value specifying the maximum 
              payload size in bytes.",
            "required" : true,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          }
        ]
      },
      {
        "name" : "filter",
        "type" : "complex",
        "multiValued" : false,
        "description" : "A complex type that specifies
          FILTER options.",
        "required" : true,
        "returned" : "default",
        "mutability" : "readOnly",
        "subAttributes" : [
          {
            "name" : "supported",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value specifying whether or not
              the operation is supported.",
            "required" : true,
            "mutability" : "readOnly",
            "returned" : "default"
          },
          {
            "name" : "maxResults",
            "type" : "integer",
            "multiValued" : false,
            "description" : "An integer value specifying the maximum
              number of resources returned in a response.",
            "required" : true,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          }
        ]
      },
      {
        "name" : "changePassword",
        "type" : "complex",
        "multiValued" : false,
        "description" : "A complex type that specifies configuration
          options related to changing a password.",
        "required" : true,
        "returned" : "default",
        "mutability" : "readOnly",
        "subAttributes" : [
          {
            "name" : "supported",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value specifying whether or not
              the operation is supported.",
            "required" : true,
            "mutability" : "readOnly",
            "returned" : "default"
          }
        ]
      },
      {
        "name" : "sort",
        "type" : "complex",
        "multiValued" : false,
        "description" : "A complex type that specifies sort result
          options.",
        "required" : true,
        "returned" : "default",
        "mutability" : "readOnly",
        "subAttributes" : [
          {
            "name" : "supported",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value specifying whether or not
              the operation is supported.",
            "required" : true,
            "mutability" : "readOnly",
            "returned" : "default"
          }
        ]
      },
      {
        "name" : "authenticationSchemes",
        "type" : "complex",
        "multiValued" : true,
        "description" : "A complex type that specifies supported 
          authentication scheme properties.",
        "required" : true,
        "returned" : "default",
        "mutability" : "readOnly",
        "subAttributes" : [
          {
            "name" : "name",
            "type" : "string",
            "multiValued" : false,
            "description" : "The common authentication scheme name,
              e.g., HTTP Basic.",
            "required" : true,
            "caseExact" : false,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "description",
            "type" : "string",
            "multiValued" : false,
            "description" : "A description of the authentication 
              scheme.",
            "required" : true,
            "caseExact" : false,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "specUri",
            "type" : "reference",
            "referenceTypes" : ["external"],
            "multiValued" : false,
            "description" : "An HTTP-addressable URL pointing to the
              authentication scheme's specification.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "documentationUri",
            "type" : "reference",
            "referenceTypes" : ["external"],
            "multiValued" : false,
            "description" : "An HTTP-addressable URL pointing to the 
              authentication scheme's usage documentation.",
            "required" : false,
            "caseExact" : false,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          }
        ]
      }
    ]
  },
  {
    "id" : "urn:ietf:params:scim:schemas:core:2.0:ResourceType",
    "name" : "ResourceType",
    "description" : "Specifies the schema that describes a SCIM
      resource type",
    "attributes" : [
      {
        "name" : "id",
        "type" : "string",
        "multiValued" : false,
        "description" : "The resource type's server unique id.
          May be the same as the 'name' attribute.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readOnly",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "name",
        "type" : "string",
        "multiValued" : false,
        "description" : "The resource type name.  When applicable,
          service providers MUST specify the name, e.g., 'User'.",
        "required" : true,
        "caseExact" : false,
        "mutability" : "readOnly",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "description",
        "type" : "string",
        "multiValued" : false,
        "description" : "The resource type's human-readable
          description.  When applicable, service providers MUST
          specify the description.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readOnly",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "endpoint",
        "type" : "reference",
        "referenceTypes" : ["uri"],
        "multiValued" : false,
        "description" : "The resource type's HTTP-addressable
          endpoint relative to the Base URL, e.g., '/Users'.",
        "required" : true,
        "caseExact" : false,
        "mutability" : "readOnly",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "schema",
        "type" : "reference",
        "referenceTypes" : ["uri"],
        "multiValued" : false,
        "description" : "The resource type's primary/base schema
          URI.",
        "required" : true,
        "caseExact" : true,
        "mutability" : "readOnly",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "schemaExtensions",
        "type" : "complex",
        "multiValued" : false,
        "description" : "A list of URIs of the resource type's schema
          extensions.",
        "required" : true,
        "mutability" : "readOnly",
        "returned" : "default",
        "subAttributes" : [
          {
            "name" : "schema",
            "type" : "reference",
            "referenceTypes" : ["uri"],
            "multiValued" : false,
            "description" : "The URI of a schema extension.",
            "required" : true,
            "caseExact" : true,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "required",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value that specifies whether
              or not the schema extension is required for the
              resource type.  If true, a resource of this type MUST
              include this schema extension and also include any
              attributes declared as required in this schema extension.
              If false, a resource of this type MAY omit this schema
              extension.",
            "required" : true,
            "mutability" : "readOnly",
            "returned" : "default"
          }
        ]
      }
    ]
  },
  {
    "id" : "urn:ietf:params:scim:schemas:core:2.0:Schema",
    "name" : "Schema",
    "description" : "Specifies the schema that describes a
      SCIM schema",
    "attributes" : [
      {
        "name" : "id",
        "type" : "string",
        "multiValued" : false,
        "description" : "The unique URI of the schema.
          When applicable, service providers MUST specify the URI.",
        "required" : true,
        "caseExact" : false,
        "mutability" : "readOnly",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "name",
        "type" : "string",
        "multiValued" : false,
        "description" : "The schema's human-readable name.  When  
          applicable, service providers MUST specify the name,
          e.g., 'User'.",
        "required" : true,
        "caseExact" : false,
        "mutability" : "readOnly",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "description",
        "type" : "string",
        "multiValued" : false,
        "description" : "The schema's human-readable name.  When
          applicable, service providers MUST specify the name,
          e.g., 'User'.",
        "required" : false,
        "caseExact" : false,
        "mutability" : "readOnly",
        "returned" : "default",
        "uniqueness" : "none"
      },
      {
        "name" : "attributes",
        "type" : "complex",
        "multiValued" : true,
        "description" : "A complex attribute that includes the
          attributes of a schema.",
        "required" : true,
        "mutability" : "readOnly",
        "returned" : "default",
        "subAttributes" : [
          {
            "name" : "name",
            "type" : "string",
            "multiValued" : false,
            "description" : "The attribute's name.",
            "required" : true,
            "caseExact" : true,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "type",
            "type" : "string",
            "multiValued" : false,
            "description" : "The attribute's data type.
              Valid values include 'string', 'complex', 'boolean',
              'decimal', 'integer', 'dateTime', 'reference'.",
            "required" : true,
            "canonicalValues" : [
              "string",
              "complex",
              "boolean",
              "decimal",
              "integer",
              "dateTime",
              "reference"
            ],
            "caseExact" : false,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "multiValued",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value indicating an
              attribute's plurality.",
            "required" : true,
            "mutability" : "readOnly",
            "returned" : "default"
          },
          {
            "name" : "description",
            "type" : "string",
            "multiValued" : false,
            "description" : "A human-readable description of the
              attribute.",
            "required" : false,
            "caseExact" : true,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "required",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A boolean value indicating whether or
              not the attribute is required.",
            "required" : false,
            "mutability" : "readOnly",
            "returned" : "default"
          },
          {
            "name" : "canonicalValues",
            "type" : "string",
            "multiValued" : true,
            "description" : "A collection of canonical values.  When
              applicable, service providers MUST specify the
              canonical types, e.g., 'work', 'home'.",
            "required" : false,
            "caseExact" : true,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "caseExact",
            "type" : "boolean",
            "multiValued" : false,
            "description" : "A Boolean value indicating whether or
              not a string attribute is case sensitive.",
            "required" : false,
            "mutability" : "readOnly",
            "returned" : "default"
          },
          {
            "name" : "mutability",
            "type" : "string",
            "multiValued" : false,
            "description" : "Indicates whether or not an attribute
              is modifiable.",
            "required" : false,
            "caseExact" : true,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none",
            "canonicalValues" : [
              "readOnly",
              "readWrite",
              "immutable",
              "writeOnly"
            ]
          },
          {
            "name" : "returned",
            "type" : "string",
            "multiValued" : false,
            "description" : "Indicates when an attribute is returned
              in a response (e.g., to a query).",
            "required" : false,
            "caseExact" : true,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none",
            "canonicalValues" : [
              "always",
              "never",
              "default",
              "request"
            ]
          },
          {
            "name" : "uniqueness",
            "type" : "string",
            "multiValued" : false,
            "description" : "Indicates how unique a value must be.",
            "required" : false,
            "caseExact" : true,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none",
            "canonicalValues" : [
              "none",
              "server",
              "global"
            ]
          },
          {
            "name" : "referenceTypes",
            "type" : "string",
            "multiValued" : true,
            "description" : "Used only with an attribute of type 
              'reference'.  Specifies a SCIM resourceType that a 
              reference attribute MAY refer to, e.g., 'User'.",
            "required" : false,
            "caseExact" : true,
            "mutability" : "readOnly",
            "returned" : "default",
            "uniqueness" : "none"
          },
          {
            "name" : "subAttributes",
            "type" : "complex",
            "multiValued" : true,
            "description" : "Used to define the sub-attributes of a
              complex attribute.",
            "required" : false,
            "mutability" : "readOnly",
            "returned" : "default",
            "subAttributes" : [
              {
                "name" : "name",
                "type" : "string",
                "multiValued" : false,
                "description" : "The attribute's name.",
                "required" : true,
                "caseExact" : true,
                "mutability" : "readOnly",
                "returned" : "default",
                "uniqueness" : "none"
              },
              {
                "name" : "type",
                "type" : "string",
                "multiValued" : false,
                "description" : "The attribute's data type.
                  Valid values include 'string', 'complex', 'boolean',
                  'decimal', 'integer', 'dateTime', 'reference'.",
                "required" : true,
                "caseExact" : false,
                "mutability" : "readOnly",
                "returned" : "default",
                "uniqueness" : "none",
                "canonicalValues" : [
                  "string",
                  "complex",
                  "boolean",
                  "decimal",
                  "integer",
                  "dateTime",
                  "reference"
                ]
              },
              {
                "name" : "multiValued",
                "type" : "boolean",
                "multiValued" : false,
                "description" : "A Boolean value indicating an
                  attribute's plurality.",
                "required" : true,
                "mutability" : "readOnly",
                "returned" : "default"
              },
              {
                "name" : "description",
                "type" : "string",
                "multiValued" : false,
                "description" : "A human-readable description of the 
                  attribute.",
                "required" : false,
                "caseExact" : true,
                "mutability" : "readOnly",
                "returned" : "default",
                "uniqueness" : "none"
              },
              {
                "name" : "required",
                "type" : "boolean",
                "multiValued" : false,
                "description" : "A boolean value indicating whether or
                  not the attribute is required.",
                "required" : false,
                "mutability" : "readOnly",
                "returned" : "default"
              },
              {
                "name" : "canonicalValues",
                "type" : "string",
                "multiValued" : true,
                "description" : "A collection of canonical values.  When
                  applicable, service providers MUST specify the 
                  canonical types, e.g., 'work', 'home'.",
                "required" : false,
                "caseExact" : true,
                "mutability" : "readOnly",
                "returned" : "default",
                "uniqueness" : "none"
              },
              {
                "name" : "caseExact",
                "type" : "boolean",
                "multiValued" : false,
                "description" : "A Boolean value indicating whether or
                  not a string attribute is case sensitive.",
                "required" : false,
                "mutability" : "readOnly",
                "returned" : "default"
              },
              {
                "name" : "mutability",
                "type" : "string",
                "multiValued" : false,
                "description" : "Indicates whether or not an
                  attribute is modifiable.",
                "required" : false,
                "caseExact" : true,
                "mutability" : "readOnly",
                "returned" : "default",
                "uniqueness" : "none",
                "canonicalValues" : [
                  "readOnly",
                  "readWrite",
                  "immutable",
                  "writeOnly"
                ]
              },
              {
                "name" : "returned",
                "type" : "string",
                "multiValued" : false,
                "description" : "Indicates when an attribute is 
                  returned in a response (e.g., to a query).",
                "required" : false,
                "caseExact" : true,
                "mutability" : "readOnly",
                "returned" : "default",
                "uniqueness" : "none",
                "canonicalValues" : [
                  "always",
                  "never",
                  "default",
                  "request"
                ]
              },
              {
                "name" : "uniqueness",
                "type" : "string",
                "multiValued" : false,
                "description" : "Indicates how unique a value must be.",
                "required" : false,
                "caseExact" : true,
                "mutability" : "readOnly",
                "returned" : "default",
                "uniqueness" : "none",
                "canonicalValues" : [
                  "none",
                  "server",
                  "global"
                ]
              },
              {
                "name" : "referenceTypes",
                "type" : "string",
                "multiValued" : false,
                "description" : "Used only with an attribute of type 
                  'reference'.  Specifies a SCIM resourceType that a 
                  reference attribute MAY refer to, e.g., 'User'.",
                "required" : false,
                "caseExact" : true,
                "mutability" : "readOnly",
                "returned" : "default",
                "uniqueness" : "none"
              }
            ]
          }
        ]
      }
    ]
  }
]</artwork>
          </figure>
        </section>
      </section>
    </section>

    <section anchor="security" title="Security Considerations" toc="default">
      <section title="Protocol">
        <t>SCIM data is intended to be exchanged using the SCIM protocol.
        It is important when handling data to implement the security
        considerations outlined in Section 7 of <xref target="RFC7644"/>.</t>
      </section>

      <section anchor="passwordSecurity"
               title="Passwords and Other Sensitive Security Data">
        <t>Passwords and other attributes related to security credentials are
        of an extremely sensitive nature and require special handling when
        transmitted or stored. While the SCIM protocol uses cleartext passwords
        for value assignment and equality-testing purposes, password values
        MUST NOT be stored in cleartext form.</t>

        <t>Administrators should undertake industry best practices to protect
        the storage of credentials and in particular SHOULD follow
        recommendations outlined in
        Section 5.1.4.1 of <xref target="RFC6819"/>.
        These requirements include, but are not limited to, the following:<list
            style="symbols">
            <t>Provide injection attack countermeasures (e.g., by validating
            all inputs and parameters);</t>

            <t>Credentials should not be stored in cleartext form;</t>

            <t>Store credentials using an encrypted protection mechanism (e.g.,
            hashing); and</t>

            <t>Where possible, avoid passwords as the sole form of
            authentication, and consider using credentials that are
            based on asymmetric cryptography.</t>
          </list></t>
      </section>

      <section anchor="privacyConsiderations" title="Privacy">
        <t>The SCIM core schema defines attributes that are sensitive and may
        be considered personally identifying information (PII). These privacy
        considerations should be considered for extensions as well as the
        schema defined in this specification.</t>

        <t>For the purposes of this specification, PII is defined as
        any attribute that may be used as a unique key to identify
        a person (e.g., <spanx style="verb">User</spanx>).
        Since other information may be used in combination to identify
        an individual, all attributes in SCIM are considered "sensitive"
        personal information. Consult regional jurisdictions to see if
        there are special considerations for the handling of personal
        information (e.g., PII).</t>

        <t>Information should be shared on an as-needed basis. A SCIM client
        should limit information to what it believes a service provider
        requires, and a SCIM service provider should only accept information
        it needs. Clients and service providers should take into consideration
        that personal information is being conveyed across technical (e.g.,
        protocol and applications), administrative (e.g., organizational,
        corporate), and jurisdictional boundaries. In particular, information
        security and privacy must be considered.</t>

        <t>Security service level agreements for the handling of these
        attributes are beyond the scope of this document but are to be
        carefully considered by implementers and deploying organizations.</t>

        <t>Please see the Privacy Considerations section of <xref
        target="RFC7644"/> for more protocol-specific considerations
        regarding the handling of SCIM information.</t>

        <t>SCIM defines attributes such as <spanx style="verb">id</spanx>,
        <spanx style="verb">externalId</spanx>, and SCIM resource URIs, which
        cause new PII to be generated; this information is important to the
        way that the SCIM protocol identifies and locates resources.
        Where possible, it is suggested that service providers take the
        following remediations:<list style="symbols">
            <t>Where possible, assign and bind identifiers to specific tenants
            and/or clients. When multiple tenants are able to reference the
            same resource, they should do so via separate identifiers (id or
            externalId). This ensures that separate domains linked to the same
            information cannot perform identifier correlation.</t>

            <t>In the case of <spanx style="verb">externalId</spanx>, if
            multiple values are supported, use access control to restrict
            access to the client domain that assigned
            the <spanx style="verb">externalId</spanx> value.</t>

            <t>Ensure that access to data is appropriately restricted to
            authorized parties with a "need to know".</t>

            <t>When persisted, ensure that the appropriate protection
            mechanisms are in place to restrict access by unauthorized
            parties, including administrators or parties with access to
            backup data.</t>
          </list></t>
      </section>
    </section>

    <section title="IANA Considerations">
      <section anchor="scimRegistry"
              title="Registration of SCIM URN Sub-namespace and SCIM Registry">

        <t>IANA has added an entry to the "IETF URN Sub-namespace
        for Registered Protocol Parameter Identifiers" registry and created a
        sub&nbhy;namespace for the Registered Parameter Identifier as
        per <xref target="RFC3553"/>:
        <spanx style="verb">urn:ietf:params:scim</spanx>.</t>

        <t>To manage this sub-namespace, IANA has created the
        "System for Cross&nbhy;domain Identity Management (SCIM) Schema URIs"
        registry, which is used to manage entries within the
        <spanx style="verb">urn:ietf:params:scim</spanx> namespace. The
        registry description is as follows:</t>

        <t><list style="symbols">
            <t>Registry name: SCIM</t>

            <t>Specification: this document (RFC 7643)</t>

            <t>Repository: See <xref target="scimNamespace"/></t>

            <t>Index value: See <xref target="scimNamespace"/></t>
          </list></t>
      </section>

      <section anchor="scimNamespace" title="URN Sub-namespace for SCIM">
        <t>SCIM schemas and SCIM messages utilize URIs to identify the schema
        in use or other relevant context. This section creates and registers
        an IETF URN Sub-namespace for use in the SCIM specifications and
        future extensions.</t>

        <section title="Specification Template">
          <t><list style="hanging">
              <t hangText="Namespace ID:"><vspace blankLines="1"/> The
              Namespace ID <spanx style="verb">scim</spanx> has been assigned.</t>

              <t hangText="Registration Information:"><vspace blankLines="1"/>
              Version: 1</t>

              <t>Date: 2015-06-22</t>

              <t hangText="Declared registrant of the namespace:"><list
                  style="hanging">
                  <t hangText="Registering organization"><vspace
                  blankLines="0"/> The Internet Engineering Task Force</t>

                  <t hangText="Designated contact"><vspace blankLines="0"/> A
                  designated expert will monitor the SCIM public mailing list,
                  <spanx style="verb">scim@ietf.org</spanx>.</t>
                </list></t>

              <t hangText="Declaration of Syntactic Structure:"><vspace
              blankLines="1"/> The Namespace Specific String (NSS) of all URNs
              that use the "scim" Namespace ID shall have the
              following structure:
              <figure>
                  <artwork>urn:ietf:params:scim:{type}:{name}{:other}</artwork>
                </figure> The keywords have the following meaning: <list
                  style="hanging">
                  <t hangText="type"><vspace blankLines="0"/> The entity type,
                  which is either <spanx style="verb">schemas</spanx> or
                  <spanx style="verb">api</spanx>.</t>

                  <t hangText="name"><vspace blankLines="0"/> A required
                  US-ASCII string that conforms to the URN syntax requirements
                  (see <xref target="RFC2141"/>) and defines a major
                  namespace of a schema used within SCIM (e.g., <spanx
                  style="verb">core</spanx>, which is reserved for SCIM
                  specifications). The value MAY also be an industry name or
                  organization name.</t>

                  <t hangText="other"><vspace blankLines="0"/> Any US-ASCII
                  string that conforms to the URN syntax requirements (see
                  <xref target="RFC2141"/>) and defines the sub-namespace
                  (which MAY be further broken down in namespaces delimited by
                  colons) as needed to uniquely identify a schema.</t>
                </list></t>

              <t hangText="Relevant Ancillary Documentation:"><vspace
              blankLines="1"/>None</t>

              <t hangText="Identifier Uniqueness Considerations:"><vspace
              blankLines="1"/>The designated contact shall be responsible for
              reviewing and enforcing uniqueness.</t>

              <t hangText="Identifier Persistence Considerations:"><vspace
              blankLines="1"/>Once a name has been allocated, it MUST NOT be
              reallocated for a different purpose. The rules provided for
              assignments of values within a sub-namespace MUST be constructed
              so that the meanings of values cannot change. This registration
              mechanism is not appropriate for naming values whose meanings
              may change over time.</t>

              <t>As the SCIM specifications are updated and the SCIM protocol
              version is adjusted, a new registration will be made when
              significant changes are made -- for example,
              <spanx style="verb">urn:ietf:params:scim:schemas:core:1.0
              (externally defined, not previously registered)</spanx>
              and
             <spanx style="verb">urn:ietf:params:scim:schemas:core:2.0</spanx>.
</t>

              <t hangText="Process of Identifier Assignment:"><vspace
              blankLines="1"/> Identifiers with namespace type "schema" (e.g.,
              <spanx style="verb">urn:ietf:params:scim:schemas</spanx>) are
              assigned after the review of the assigned contact via the SCIM
              public mailing list, <spanx style="verb">scim@ietf.org</spanx>,
              as documented in <xref target="schemaReg"/>.</t>

              <t>Namespaces with type "api" (e.g.,
              <spanx style="verb">urn:ietf:params:scim:api</spanx>)
              and "param" (e.g.,
              <spanx style="verb">urn:ietf:params:scim:param</spanx>)
              are reserved for  IETF-approved SCIM specifications.</t>

              <t hangText="Process of Identifier Resolution:"><vspace
              blankLines="1"/> The namespace is not currently listed with a
              Resolution Discovery System (RDS), but nothing about the
              namespace prohibits the future definition of appropriate
              resolution methods or listing with an RDS.</t>

              <t hangText="Rules for Lexical Equivalence:"><vspace
              blankLines="1"/> No special considerations; the rules for
              lexical equivalence specified in <xref target="RFC2141"/>
              apply.</t>

              <t hangText="Conformance with URN Syntax:"><vspace
              blankLines="1"/> No special considerations.</t>

              <t hangText="Validation Mechanism:"><vspace blankLines="1"/>
              None specified.</t>

              <t hangText="Scope:"><vspace blankLines="1"/> Global.</t>
            </list></t>
        </section>
      </section>

      <section anchor="schemaReg" title="Registering SCIM Schemas">
        <t>This section defines the process for registering new SCIM schemas
        with IANA in the "System for Cross&nbhy;domain Identity Management
        (SCIM) Schema URIs" registry (see <xref target="scimRegistry"/>).
        A schema URI is used as a value in the
        <spanx style="verb">schemas</spanx> attribute
        (<xref target="schema"/>) for the purpose of distinguishing
        extensions used in a SCIM resource.</t>

        <section title="Registration Procedure">
          <t>The IETF has created a mailing list, scim@ietf.org, which can be
          used for public discussion of SCIM schema proposals prior to
          registration. Use of the mailing list is strongly encouraged. The
          IESG has appointed a designated expert <xref target="RFC5226"/>
          who will monitor the scim@ietf.org mailing list and review
          registrations.</t>

          <t>Registration of new "core" schemas (e.g., in the namespace
          <spanx style="verb">urn:ietf:params:scim:schemas:core</spanx>)
          and "API" schemas (e.g., in the namespace
          <spanx style="verb">urn:ietf:params:scim:api</spanx>)
          MUST be reviewed by the designated expert and published in an RFC.
          An RFC is REQUIRED for the registration of new value data types that
          modify existing properties. An RFC is also REQUIRED for registration
          of SCIM schema URIs that modify SCIM schema previously documented in
          an existing RFC. URNs within
          <spanx style="verb">urn:ietf:params:scim</spanx> but outside the
          above namespaces MAY be registered with a simple
          review (e.g., check for spam) by the designated expert on a
          first-come-first-served basis.</t>

          <t>The registration procedure begins when a completed registration
          template, defined in the sections below, is sent to scim@ietf.org
          and iana@iana.org. Within two weeks, the designated expert is
          expected to tell IANA and the submitter of the registration whether
          the registration is approved, approved with minor changes, or
          rejected with cause. When a registration is rejected with cause, it
          can be resubmitted if the concerns listed in the cause are
          addressed. Decisions made by the designated expert can be appealed
          to the IESG Applications Area Director, then to the IESG. They
          follow the normal appeals procedure for IESG decisions.</t>

          <t>Once the registration procedure concludes successfully, IANA
          creates or modifies the corresponding record in the SCIM schema
          registry. The completed registration template is discarded.</t>

          <t>An RFC specifying one or more new schema URIs MUST include
          the completed registration templates, which MAY be expanded with
          additional information. These completed templates are intended
          to go in the body of the document, not in the IANA Considerations
          section. The RFC SHOULD include any attributes defined.</t>
        </section>

        <section title="Schema Registration Template">
          <t>A SCIM schema URI is defined by completing the following
          template: <list style="hanging">
              <t hangText="Schema URI:">A unique URI for the SCIM schema
              extension.</t>

              <t hangText="Schema Name:">A descriptive name of the schema
              extension (e.g., "Generic Device").</t>

              <t hangText="Intended or Associated Resource Type:">A value
              defining the resource type (e.g., "Device").</t>

              <t hangText="Purpose:">A description of the purpose of the
              extension and/or its intended use.</t>

              <t hangText="Single-value Attributes:">A list and description of
              single-valued attributes defined, including complex
              attributes.</t>

              <t hangText="Multi-valued Attributes:">A list and description of
              multi-valued attributes defined, including complex
              attributes.</t>
            </list></t>
        </section>
      </section>

      <section anchor="initialSchemaRegistry"
               title="Initial SCIM Schema Registry">
        <t>The IANA has populated the
        "System for Cross&nbhy;domain Identity Management (SCIM) Schema URIs"
        registry with the following registries for SCIM schema URIs, with
        pointers to appropriate reference documents. Note: The schema URIs
        listed below are broken into two lines for readability.</t>

<?rfc compact="no"?>
        <texttable title="SCIM Schema URIs for Data Resources">
          <ttcol>Schema URI</ttcol>

          <ttcol>Name</ttcol>

          <ttcol>Reference</ttcol>

          <c>urn:ietf:params:scim:schemas: core:2.0:User</c>

          <c>User Resource</c>

          <c>See <xref target="user-resource"/></c>

          <c>urn:ietf:params:scim:schemas: extension:enterprise:2.0:User</c>

          <c>Enterprise User Extension</c>

          <c>See <xref target="enterpriseUser"/></c>

          <c>urn:ietf:params:scim:schemas: core:2.0:Group</c>

          <c>Group Resource</c>

          <c>See <xref target="group-resource"/></c>
        </texttable>

        <texttable title="SCIM Server-Related Schema URIs">
          <ttcol>Schema URI</ttcol>

          <ttcol>Name</ttcol>

          <ttcol>Reference</ttcol>

          <c>urn:ietf:params:scim:schemas: core:2.0:ServiceProviderConfig</c>

          <c>Service Provider Configuration Schema</c>

          <c>See <xref target="serviceProviderConfig"/></c>

          <c>urn:ietf:params:scim:schemas: core:2.0:ResourceType</c>

          <c>Resource Type Configuration</c>

          <c>See <xref target="resource-type-schema"/></c>

          <c>urn:ietf:params:scim:schemas: core:2.0:Schema</c>

          <c>Schema Definitions Schema</c>

          <c>See <xref target="schema-schema"/></c>
        </texttable>
<?rfc compact="yes"?>
      </section>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.2141"?>

      <?rfc include='reference.RFC.3553' ?>

      <?rfc include='reference.RFC.3629' ?>

      <?rfc include="reference.RFC.3986"?>

      <?rfc include="reference.RFC.3966"?>

      <?rfc include="reference.RFC.7159"?>

      <?rfc include="reference.RFC.4647"?>

      <?rfc include="reference.RFC.4648"?>

      <?rfc include="reference.RFC.5234"?>

      <?rfc include="reference.RFC.5280"?>

      <?rfc include="reference.RFC.5321"?>

      <?rfc include="reference.RFC.5646"?>

      <?rfc include="reference.RFC.6557"?>

      <?rfc include="reference.RFC.7231"?>

      <?rfc include="reference.RFC.7232"?>

<!-- draft-ietf-scim-api (RFC 7644) -->
<reference anchor='RFC7644' target="http://www.rfc-editor.org/info/rfc7644">
<front>
<title>System for Cross-domain Identity Management: Protocol</title>
<author initials='P' surname='Hunt' fullname='Phil Hunt' role="editor">
    <organization />
</author>
<author initials='K' surname='Grizzle' fullname='Kelly Grizzle'>
    <organization />
</author>
<author initials='M' surname='Ansari' fullname='Morteza Ansari'>
    <organization />
</author>
<author initials='E' surname='Wahlstroem' fullname='Erik Wahlstroem'>
    <organization />
</author>
<author initials='C' surname='Mortimore' fullname='Chuck Mortimore'>
    <organization />
</author>
<date month='September' year='2015' />
</front>
<seriesInfo name='RFC' value='7644' />
<seriesInfo name='DOI' value='10.17487/RFC7644'/>
</reference>

    </references>

    <references title="Informative References">
      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.2277.xml'?>

      <?rfc include="reference.RFC.4512"?>

      <?rfc include="reference.RFC.5226"?>

      <?rfc include="reference.RFC.6350"?>

      <?rfc include="reference.RFC.6749"?>

      <?rfc include="reference.RFC.6819"?>

      <reference anchor="XML-Schema" target="http://www.w3.org/TR/xmlschema11-2/">
        <front>
          <title>XML Schema Definition Language (XSD) 1.1 Part 2:
          Datatypes</title>
          <author fullname="David Peterson" initials="D." surname="Peterson">
            <organization>SGML Works!</organization>
          </author>
          <author fullname="Shudi (sandi) Gao" initials="S." surname="Gao">
            <organization>IBM</organization>
          </author>
          <author fullname="Ashok Malhotra" initials="A." surname="Malhotra">
            <organization>Oracle Corporation</organization>
          </author>
          <author fullname="C. M. Sperberg-McQueen" initials="C. M."
                  surname="Sperberg-McQueen">
            <organization>Black Mesa Technologies LLC</organization>
          </author>
          <author fullname="Henry S. Thompson" initials="H."
                  surname="Thompson">
            <organization>University of Edinburgh</organization>
          </author>
          <date month="April" year="2012"/>
        </front>
      </reference>

      <reference anchor="Olson-TZ" target="https://www.iana.org/time-zones">
        <front>
          <title>IANA Time Zone Database</title>
          <author>
            <organization>Internet Assigned Numbers Authority</organization>
          </author>
          <date/>
        </front>
      </reference>

      <reference anchor="ISO3166" target="http://www.iso.org">
        <front>
          <title>Codes for the representation of names of countries
               and their subdivisions - Part 1: Country codes</title>
          <author>
            <organization>International Organization for
                Standardization</organization>
          </author>
          <date month="November" year="2013"/>
        </front>
       <seriesInfo name="ISO" value="3166-1:2013"/>
      </reference>

      <reference anchor="PortableContacts"
       target="http://www.portablecontacts.net/draft-spec.html">
        <front>
          <title>Portable Contacts 1.0 Draft C - Schema Only</title>
          <author fullname="Joseph Smarr" initials="J." surname="Smarr">
            <organization abbrev="plaxo">Plaxo</organization>
          </author>
          <date month="August" year="2008"/>
        </front>
      </reference>
    </references>

    <section title="Acknowledgements" numbered="no">
      <t>The editor would like to acknowledge the contribution and work of
      the editors of draft versions of this document: <list>
          <t>Chuck Mortimore, Salesforce</t>

          <t>Patrick Harding, Ping</t>

          <t>Paul Madsen, Ping</t>

          <t>Trey Drake, UnboundID</t>
        </list></t>

      <t>The SCIM Community would like to thank the following people for the
      work they've done in the research, formulation, drafting, editing, and
      support of this specification.</t>

      <t><list style="empty">
          <t>Morteza Ansari (morteza.ansari@cisco.com)</t>

          <t>Sidharth Choudhury (schoudhury@salesforce.com)</t>

          <t>Samuel Erdtman (samuel@erdtman.se)</t>

          <t>Kelly Grizzle (kelly.grizzle@sailpoint.com)</t>

          <t>Chris Phillips (cjphillips@gmail.com)</t>

          <t>Erik Wahlstroem (erik.wahlstrom@nexusgroup.com)</t>

          <t>Phil Hunt (phil.hunt@yahoo.com)</t>
        </list></t>

      <t>Special thanks to Joseph Smarr, whose excellent work on the Portable
      Contacts Specification <xref target="PortableContacts"/> provided a
      basis for the SCIM schema structure and text.</t>
    </section>
  </back>
</rfc>
