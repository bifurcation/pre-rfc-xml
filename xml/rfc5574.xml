<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>

<rfc number="5574" category="std" >
 <front>
   <title abbrev="Speex">RTP Payload Format for the Speex Codec</title>

   <author initials="G" surname="Herlein" fullname="Greg Herlein">
     <organization> Independent </organization>
     <address>
	<postal>
	  <street>2034 Filbert Street</street>
	  <city>San Francisco</city> 
	  <region>California</region>
	  <code>94123</code>
	  <country>United States</country> 
	</postal>
	<email>gherlein@herlein.com</email>
     </address>
   </author>

   <author initials="J.-M." surname="Valin" fullname="Jean-Marc Valin">
     <organization>Xiph.Org Foundation</organization>
     <address>
	<email>jean-marc.valin@usherbrooke.ca</email>
     </address>
   </author>

   <author initials="A" surname="Heggestad" fullname="Alfred E. Heggestad">
     <organization>Creytiv.com</organization>
     <address>
	<postal>
	  <street>Biskop J. Nilssonsgt. 20a</street>
	  <city>Oslo</city>
	  <code>0659</code>
	  <country>Norway</country>
	</postal>
	<email>aeh@db.org</email>
     </address>
   </author>

   <author initials="A" surname="Moizard" fullname="Aymeric Moizard">
     <organization>Antisip</organization>
     <address>
      <postal>
        <street>5 Place Benoit Crepu</street>
        <city>Lyon</city>
        <region></region>
        <code>69005</code>
        <country>France</country>
      </postal> 
      <email>jack@atosc.org</email>
     </address>
   </author>

   <date month="June" year="2009"/>
   <workgroup>AVT</workgroup>

   <abstract>
     <t>
Speex is an open-source voice codec suitable for use in VoIP (Voice over
IP) type applications.  This document describes the payload
format for Speex-generated bit streams within an RTP packet.  Also
included here are the necessary details for the use of Speex with
the Session Description Protocol (SDP).
</t>
   </abstract>

</front>

<middle>

   <section title="Introduction">
     <t>
       Speex is based on the Code Excited Linear Prediction <xref target="CELP"/> encoding technique
       with support for either narrowband (nominal 8 kHz), wideband (nominal 16 kHz),
       or ultra-wideband (nominal 32 kHz).

       The main characteristics can be summarized as follows:
     </t>

     <t>
       <list style="symbols">
	  <t>Free software/open-source</t>
	  <t>Integration of wideband and narrowband in the same bit-stream</t>
	  <t>Wide range of bit-rates available</t>
	  <t>Dynamic bit-rate switching and variable bit-rate (VBR)</t>
	  <t>Voice Activity Detection (VAD, integrated with VBR)</t>
	  <t>Variable complexity</t>
	</list>
</t>

     <t>The Speex codec supports a wide range of bit-rates from 2.15 kbit/s to 44 kbit/s.
	 In some cases however, it may not be possible for an implementation to include
	 support for all rates (e.g., because of bandwidth or RAM or CPU constraints).
       In those cases, to be compliant with this specification, implementations MUST
	support at least narrowband (8 kHz) encoding and decoding at 8 kbit/s bit-rate 
	(narrowband mode 3). Support for narrowband at 15 kbit/s (narrowband mode 5) is
	RECOMMENDED and support for wideband at 27.8 kbit/s (wideband mode 8) is also 
	RECOMMENDED.

       The sampling rate MUST be 8, 16 or 32 kHz.

       This specification defines only single channel audio (mono).
     </t>
   </section>



   <section title="Terminology">
     <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
           and "OPTIONAL" in this document are to be interpreted as described in RFC2119 <xref target="RFC2119"/> and indicate requirement levels for compliant RTP implementations.</t>
   </section>




   <section title="RTP Usage for Speex">

     <section title="RTP Speex Header Fields">
	<t>The RTP header is defined in the RTP specification
         <xref target="RFC3550"/>. This section defines how fields in the RTP
         header are used.</t>
	<t><list>
         <list style="hanging" hangIndent="3">
	    <t hangText="Payload Type (PT):"> The assignment of an RTP payload type for
             this packet format is outside the scope of this document; it is
             specified by the RTP profile under which this payload format is
             used, or signaled dynamically out-of-band (e.g., using SDP).
           </t>
	    <t hangText="Marker (M) bit:"> The M bit is set to one on the first packet sent
             after a silence period, during which packets have not been
             transmitted contiguously.
           </t>
	    <t hangText="Extension (X) bit:"> Defined by the RTP profile used.</t>
	    <t hangText="Timestamp:"> A 32-bit word that corresponds to the sampling instant for the first frame in the RTP packet.  </t>
	  </list></list>
       </t>
     </section>


   <section title="RTP Payload Format for Speex">
     <t> The RTP payload for Speex has the format shown in Figure 1.
No additional header fields specific to this payload format are required.
For RTP-based transportation of Speex-encoded audio, the standard 
RTP header <xref target="RFC3550"/> is followed by one or more payload data blocks. 
An optional padding terminator may also be used. 
</t>

     <figure>
	<artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         RTP Header                            |
   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
   |                 one or more frames of Speex ....              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |        one or more frames of Speex ....       |    padding    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                 Figure 1: RTP Payload for Speex					]]>
</artwork>

	</figure>
     </section>

     <section anchor="Speex payload" title="Speex Payload">

	<t>
For the purposes of packetizing the bit stream in RTP, it is only
necessary to consider the sequence of bits as output by the Speex
encoder <xref target="SPEEX"/>, and present the same sequence to the
decoder. The payload format described here maintains this sequence.
</t>

	<t>
A typical Speex frame, encoded at the maximum bit-rate, is approximately
110 octets and the total number of Speex frames SHOULD be kept 
less than the path MTU to prevent fragmentation. Speex frames MUST
NOT be fragmented across multiple RTP packets.
</t>

	<t>
         The Speex frames must be placed starting with the oldest frame
         and then continue consecutively in time.
	</t>

	<t>
An RTP packet MAY contain Speex frames of the same bit-rate or of
varying bit-rates, since the bit-rate for a frame is conveyed in-band with the signal.
</t>

	<t>
The encoding and decoding algorithm can change the bit-rate at any
20 msec frame boundary, with the bit-rate change notification provided
in-band with the bit stream.  Each frame contains both sampling rate
(narrowband, wideband, or ultra-wideband) and "mode" (bit-rate)
information in the bit stream.  No out-of-band notification is
required for the decoder to process changes in the bit-rate sent
by the encoder.
</t>

	<t>
         The sampling rate MUST be either 8000 Hz, 16000 Hz, or 32000 Hz.
       </t>

	<t>
The RTP payload MUST be padded to provide an integer number of
octets as the payload length.  These padding bits are LSB-aligned (Least Significant Bit)
in network octet order and consist of a 0 followed by all ones
(until the end of the octet).  This padding is only required for
the last frame in the packet, and only to ensure the packet
contents end on an octet boundary.
</t>

     </section>

     <section anchor="Example Speex packet" title="Example Speex Packet">

	<t>
In the example below, we have a single Speex frame with 5 bits
of padding to ensure the packet size falls on an octet boundary.
</t>

	<figure>

	  <artwork><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                      RTP Header                               |
  +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
  |                        ..speex data..                         |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                        ..speex data..               |0 1 1 1 1|
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
	</figure>

     </section>

     <section anchor="Multiple Speex frames in a RTP packet" title="Multiple Speex Frames in an RTP Packet">

	<t>
Below is an example of two Speex frames contained within one RTP 
packet.  The Speex frame length in this example falls on an octet
boundary so there is no padding.
</t>

	<t>
The Speex decoder <xref target="SPEEX"/> can detect the bit-rate from the
payload and is responsible for detecting the 20 msec boundaries
between each frame.
</t>

     <figure>


	<artwork><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                      RTP Header                               |
  +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
  |                     ..speex frame 1..                         |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |       ..speex frame 1..       |      ..speex frame 2..        |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                      ..speex frame 2..                        |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
	</figure>

     </section>

   </section>




   <section title="IANA Considerations">
     <t>This document defines the Speex media type.</t>
     <section title="Media Type Registration">
	<t>This section describes the media types and names associated with
this payload format. The section registers the media types, as per RFC 4288
<xref target="RFC4288"/>.
				</t>
	<section title="Registration of Media Type Audio/Speex">
	  <t>Media type name: audio </t>
	  <t> Media subtype name: speex </t>
	  <t> Required parameters: </t>
	  <t>
	    <list>
	    <list style="hanging" hangIndent="3">
           <t hangText="rate:"> RTP timestamp clock rate, which is equal to the sampling rate in Hz.
             The sampling rate MUST be either 8000, 16000, or 32000. 
           </t>
           </list>
	    </list>
         </t>

	  <t>Optional parameters:  </t>
	  <t>
	    <list><list style="hanging" hangIndent="3">

	      <t hangText="ptime:"> SHOULD be a multiple of 20 msec <xref target="RFC4566"/></t>
	      <t hangText="maxptime:"> SHOULD be a multiple of 20 msec <xref target="RFC4566"/></t>

             <t hangText="vbr:">   variable bit-rate  - either 'on', 'off', or 'vad'
		(defaults to 'off').  If 'on', variable bit-rate is
		enabled.  If 'off', disabled.  If set to 'vad', then
		constant bit-rate is used, but silence will be encoded
		with special short frames to indicate a lack of voice
		for that period.
               This parameter is a preference to the encoder.
             </t>

             <t hangText="cng:">   comfort noise generation - either 'on' or 'off' (defaults to 'off'). If
		'off', then silence frames will be silent; if 'on', then
		those frames will be filled with comfort noise.
               This parameter is a preference to the encoder.
	     </t>

             <t hangText="mode:">  Comma-separated list of supported Speex decoding modes,
                      in order of preference. The first is the most preferred
                      and the remaining is in decreasing order of preference.

                 The valid modes are different for narrowband and wideband, and are defined as follows:
             <list>
               <t hangText="*"> {1,2,3,4,5,6,7,8,any} for narrowband</t>
               <t hangText="*"> {0,1,2,3,4,5,6,7,8,9,10,any} for wideband and ultra-wideband</t>
             </list>

               The 'mode' parameters may contain multiple values. In this case, the remote party
               SHOULD configure its encoder using the first supported mode provided. When
              'any' is used, the offerer indicates that it supports all decoding modes.
               The 'mode' parameter value MUST always be quoted.

               If the 'mode' parameter is not provided, the mode value is considered to be
               equivalent to 'mode="3,any"' in narrowband and 'mode="8,any"' in
               wideband and ultra-wideband.

               Note that each Speex frame does contain the mode (or bit-rate) that should be
               used to decode it. Thus, an application MUST be able to decode any Speex frame
               unless the SDP clearly specifies that some modes are not supported (e.g., by not
               including 'mode="any"').

               Indicating support for a given set of decoding modes also
               implies that the implementation support the same encoding modes.
           </t>
             </list>
	    </list>
         </t>
	  <t> Encoding considerations: </t>
	  <t>
						<list>
	      <t>This media type is framed and binary, see Section 4.8 in
<xref target="RFC4288"/>.
							</t>
	    </list>
					</t>
	  <t>Security considerations: See <xref target="Implementation Guidelines" />.</t>
	  <t>Interoperability considerations: </t>
	  <t>
           <list hangIndent="1">
	      <t>None. </t>
	    </list>
         </t>
         <t> Published specification: 
           <list hangIndent="1">
	    <t>
             RFC 5574.
           </t>
	    </list>
         </t>
	  <t> Applications that use this media type: </t>
	  <t>
						<list hangIndent="1">
	      <t>  Audio streaming and conferencing applications. </t>
	    </list>
					</t>
	  <t>Additional information: none. </t>
	  <t>Person and e-mail address to contact for further information:</t>
	  <t>
						<list hangIndent="1">
	      <t> Alfred E. Heggestad: aeh@db.org</t>
	    </list>
					</t>
	  <t>Intended usage: COMMON </t>
	  <t>Restrictions on usage: </t>
	  <t>
						<list hangIndent="1">
	      <t>This media type depends on RTP framing, and hence is only
defined for transfer via RTP <xref target="RFC3550"/>. Transport within
other framing protocols is not defined at this time.</t>
	    </list>
					</t>
	  <t>Author: Alfred E. Heggestad </t>
	  <t>Change controller:</t>
	  <t>
						<list hangIndent="1">
	      <t>IETF Audio/Video Transport working group delegated from the IESG.</t>
	    </list>
					</t>
	</section>
     </section>
   </section>




   <section anchor="SDP usage of Speex" title="SDP Usage of Speex">

     <t>
       The information carried in the media type specification has a
       specific mapping to fields in the Session Description Protocol (SDP)
       <xref target="RFC4566"/>, which is commonly used to describe RTP
       sessions.  When SDP is used to specify sessions employing the Speex
       codec, the mapping is as follows:

       <list style="symbols">
	  <t>The media type ("audio") goes in SDP "m=" as the media name.</t>
	  <t>The media subtype ("speex") goes in SDP "a=rtpmap" as the encoding
            name. The required parameter "rate" also goes in "a=rtpmap" as the
            clock rate.</t>
	  <t>The parameters "ptime" and "maxptime" go in the SDP "a=ptime" and
            "a=maxptime" attributes, respectively.</t>
	  <t>Any remaining parameters go in the SDP "a=fmtp" attribute by
            copying them directly from the media type string as a semicolon-separated list of parameter=value pairs.</t>
	</list>

     </t>

     <t>
       The tables below include the equivalence between modes and bit-rates for
       narrowband, wideband, and ultra-wideband. Also, the corresponding "Speex
       quality" setting (see SPEEX_SET_QUALITY in the Speex Codec Manual
<xref target="SPEEX"/>) is included as an indication.</t>

<texttable title="Mode vs. Bit-Rate for Narrowband" anchor='table_nb_modes'>
<ttcol align='center'>mode</ttcol>
<ttcol align='center'>Speex quality</ttcol>
<ttcol align='center'>bit-rate</ttcol>
<c>1</c>
         <c>0</c>
	  <c>2.15 kbit/s</c>
<c>2</c>
         <c>2</c>
	  <c>5.95 kbit/s</c>
<c>3</c>
         <c>3 or 4</c>
	  <c>8.00 kbit/s</c>
<c>4</c>
         <c>5 or 6</c>
	  <c>11.0 kbit/s</c>
<c>5</c>
         <c>7 or 8</c>
	  <c>15.0 kbit/s</c>
<c>6</c>
         <c>9</c>
	  <c>18.2 kbit/s</c>
<c>7</c>
         <c>10&nbsp;</c>
	  <c>24.6 kbit/s</c>
<c>8</c>
         <c>1</c>
	  <c>3.95 kbit/s</c>
<postamble></postamble>
</texttable>

<texttable title="Mode vs. Bit-Rate for Wideband and Ultra-Wideband" anchor='table_wb_modes'>
<ttcol align='center'>mode</ttcol>
<ttcol align='center'>Speex quality</ttcol>
<ttcol align='center'>wideband bit-rate</ttcol>
<ttcol align='center'>ultra wideband bit-rate</ttcol>
<c>0</c>
	  <c>0</c>
	  <c>3.95 kbit/s</c>
	  <c>5.75 kbit/s</c>
<c>1</c>
	  <c>1</c>
	  <c>5.75 kbit/s</c>
	  <c>7.55 kbit/s</c>
<c>2</c>
	  <c>2</c>
	  <c>7.75 kbit/s</c>
	  <c>9.55 kbit/s</c>
<c>3</c>
	  <c>3</c>
	  <c>9.80 kbit/s</c>
	  <c>11.6 kbit/s</c>
<c>4</c>
	  <c>4</c>
	  <c>12.8 kbit/s</c>
	  <c>14.6 kbit/s</c>
<c>5</c>
         <c>5</c>
	  <c>16.8 kbit/s</c>
	  <c>18.6 kbit/s</c>
<c>6</c>
         <c>6</c>
	  <c>20.6 kbit/s</c>
	  <c>22.4 kbit/s</c>
<c>7</c>
         <c>7</c>
	  <c>23.8 kbit/s</c>
	  <c>25.6 kbit/s</c>
<c>8</c>
         <c>8</c>
	  <c>27.8 kbit/s</c>
	  <c>29.6 kbit/s</c>
<c>9</c>
         <c>9</c>
	  <c>34.2 kbit/s</c>
	  <c>36.0 kbit/s</c>
<c>10</c>
         <c>10</c>
	  <c>42.2 kbit/s</c>
	  <c>44.0 kbit/s</c>
<postamble></postamble>
</texttable>

     <t>
       The Speex parameters indicate the decoding capabilities of the agent,
       and what the agent prefers to receive.
     </t>

     <t>
       The Speex parameters in an SDP Offer/Answer exchange are
       completely orthogonal, and there is no relationship between
       the SDP Offer and the Answer.
     </t>

     <t>
       Several Speex specific parameters can be given in a single
       a=fmtp line provided that they are separated by a semicolon:
     </t>

     <t>
       <list hangIndent="10">
       <t>a=fmtp:97 mode="1,any";vbr=on</t>
       </list>	
     </t>

     <t>
       Some example SDP session descriptions utilizing Speex encodings
       follow.
     </t>


     <section title="Example Supporting All Modes, Prefer Mode 4">

       <t>
         The offerer indicates that it wishes to receive a Speex stream at
         8000 Hz, and wishes to receive Speex 'mode 4'. It is important to
         understand that any other mode might still be sent by remote party:
         the device might have bandwidth limitation or might only be able to
         send 'mode="3"'. Thus, applications that support all decoding modes
         SHOULD include 'mode="any"' as shown in the example below:
       </t>

       <t>
         <list hangIndent="10">
	    <t>m=audio 8088 RTP/AVP 97<vspace blankLines="0"/>
	    a=rtpmap:97 speex/8000<vspace blankLines="0"/>
	    a=fmtp:97 mode="4,any"</t>
	  </list>
       </t>

     </section>




     <section title="Example Supporting Only Modes 3 and 5">

	<t>
         The offerer indicates the mode he wishes to receive (Speex 'mode 3').
         This offer indicates mode 3 and mode 5 are supported and that no other
         modes are supported. The remote party MUST NOT configure its encoder
         using another Speex mode.
       </t>

       <t>
         <list hangIndent="10">
	    <t>m=audio 8088 RTP/AVP 97<vspace blankLines="0"/>
	    a=rtmap:97 speex/8000<vspace blankLines="0"/>
	    a=fmtp:97 mode="3,5"</t>
	  </list>	
       </t>

     </section>




     <section title="Example with Variable Bit-Rate and Comfort Noise">

     <t>
       The offerer indicates that it wishes to receive variable bit-rate
       frames with comfort noise:
     </t>

     <t>
       <list hangIndent="10">
	  <t>m=audio 8088 RTP/AVP 97<vspace blankLines="0"/>
	  a=rtmap:97 speex/8000<vspace blankLines="0"/>
	  a=fmtp:97 vbr=on;cng=on</t>
	</list>	
     </t>

     </section>




     <section title="Example with Voice Activity Detection">

     <t>
       The offerer indicates that it wishes to use silence suppression. In
       this case, the vbr=vad parameter will be used: 
     </t>

     <t>
       <list hangIndent="10">
	  <t>m=audio 8088 RTP/AVP 97<vspace blankLines="0"/>
	     a=rtmap:97 speex/8000<vspace blankLines="0"/>
	     a=fmtp:97 vbr=vad</t>
	</list>	
     </t>

     </section>




     <section title="Example with Multiple Sampling Rates">

     <t>
       The offerer indicates that it wishes to receive Speex audio at
       16000 Hz with mode 10 (42.2 kbit/s) or, alternatively, Speex audio at
       8000 Hz with mode 7 (24.6 kbit/s). The offerer supports decoding
       all modes.
     </t>

     <t>
       <list hangIndent="10">
	  <t>m=audio 8088 RTP/AVP 97 98<vspace blankLines="0"/>
	     a=rtmap:97 speex/16000<vspace blankLines="0"/>
	     a=fmtp:97 mode="10,any"<vspace blankLines="0"/>
	     a=rtmap:98 speex/8000<vspace blankLines="0"/>
	     a=fmtp:98 mode="7,any"<vspace blankLines="0"/>
         </t>
	</list>	
     </t>

     </section>



     <section title="Example with Ptime and Multiple Speex Frames">

     <t>
       The "ptime" SDP attribute is used to denote the packetization
       interval (i.e., how many milliseconds of audio is encoded in a
       single RTP packet).  Since Speex uses 20 msec frames, ptime values
       of multiples of 20 denote multiple Speex frames per packet.
       It is recommended to use ptime values that are a multiple of 20.
     </t>
     <t>
       If ptime contains a value that is not multiple of 20, the internal
       interpretation of it should be rounded up to the nearest multiple
       of 20 before the number of Speex frames is calculated. For example,
       if the "ptime" attribute is set to 30, the internal interpretation
       should be rounded up to 40 and then used to calculate two Speex
       frames per packet.
     </t>

     <t>
       In the example below, the ptime value is set to 40, indicating that 
       there are two frames in each packet.	
     </t>

     <t>
       <list hangIndent="10">
  	  <t>m=audio 8088 RTP/AVP 97<vspace blankLines="0"/>
	  a=rtpmap:97 speex/8000<vspace blankLines="0"/>
	  a=ptime:40</t>
	</list>	
     </t>

     <t>
       Note that the ptime parameter applies to all payloads listed
       in the media line and is not used as part of an a=fmtp directive.
     </t>

     <t>
       Care must be taken when setting the value of ptime so that the 
       RTP packet size does not exceed the path MTU. 
     </t>

     </section>




     <section title="Example with Complete Offer/Answer Exchange">

     <t>
       The offerer indicates that it wishes to receive Speex audio at
       16000 Hz or, alternatively, Speex audio at 8000 Hz.
       The offerer does support ALL modes because no mode is specified.
     </t>

     <t>
       <list hangIndent="10">
	  <t>m=audio 8088 RTP/AVP 97 98<vspace blankLines="0"/>
	     a=rtmap:97 speex/16000<vspace blankLines="0"/>
	     a=rtmap:98 speex/8000<vspace blankLines="0"/>
         </t>
	</list>	
     </t>

     <t>
       The answerer indicates that it wishes to receive Speex audio at
       8000 Hz, which is the only sampling rate it supports.
       The answerer does support ALL modes because no mode is specified.
     </t>

     <t>
       <list hangIndent="10">
	  <t>m=audio 8088 RTP/AVP 99<vspace blankLines="0"/>
	     a=rtmap:99 speex/8000<vspace blankLines="0"/>
         </t>
	</list>	
     </t>

     </section>




</section>


<section anchor="Implementation Guidelines" title="Implementation Guidelines">

<t>
 Implementations that support Speex are responsible for correctly
 decoding incoming Speex frames.
</t>
<t>
 Each Speex frame does contain all needed information to decode itself.
 In particular, the 'mode' and 'ptime' values proposed in the SDP contents
 MUST NOT be used for decoding: those values are not needed to properly
 decode a RTP Speex stream.
</t>

</section>

<section anchor="Security Considerations" title="Security Considerations">

<t>
RTP packets using the payload format defined in this specification
are subject to the security considerations discussed in the RTP
specification <xref target="RFC3550"/>, and any appropriate RTP profile.  This implies
that confidentiality of the media streams is achieved by encryption.
Because the data compression used with this payload format is applied
end-to-end, encryption may be performed after compression so there is
no conflict between the two operations.
</t>

<t>
A potential denial-of-service threat exists for data encodings using
compression techniques that have non-uniform receiver-end
computational load.  The attacker can inject pathological datagrams
into the stream that are complex to decode and cause the receiver to
be overloaded.  However, this encoding does not exhibit any
significant non-uniformity.
</t>

<t>
As with any IP-based protocol, in some circumstances, a receiver may
be overloaded simply by the receipt of too many packets, either
desired or undesired.  Network-layer authentication may be used to
discard packets from undesired sources, but the processing cost of
the authentication itself may be too high.  
</t>

</section> 

<section anchor="Acknowledgments" title="Acknowledgments">

<t>
The authors would like to thank Equivalence Pty Ltd of Australia
for their assistance in attempting to standardize the use of Speex
in H.323 applications, and for implementing Speex in their open-source OpenH323 stack.  The authors would also like to thank Brian
C. Wiles &lt;brian@streamcomm.com&gt; of StreamComm for his assistance in
developing the proposed standard for Speex use in H.323
applications.
</t>

<t>
The authors would also like to thank the following members of the 
Speex and AVT communities for their input:  Ross Finlayson, 
Federico Montesino Pouzols, Henning Schulzrinne, Magnus Westerlund,
Colin Perkins, and Ivo Emanuel Goncalves.
</t>

<t>
Thanks to former authors of this document; Simon Morlat, Roger Hardiman, and Phil Kerr.
</t>
</section> 

</middle>

<back>

   <references title="Normative References">

     <reference anchor="RFC2119">
	<front>
	  <title abbrev="RFC Key Words">Key words for use in RFCs to Indicate Requirement Levels</title>
	  <author initials="S." surname="Bradner" fullname="Scott Bradner">
	    <organization>Harvard University</organization>
	    <address>
	      <postal>
		<street>1350 Mass. Ave.</street>
		<street>Cambridge</street>
		<street>MA 02138</street>
	      </postal>
	      <phone>- +1 617 495 3864</phone>
	      <email>sob@harvard.edu</email>
	    </address>
	  </author>
	  <date month="March" year="1997"/>
	  <area>General</area>
	  <keyword>keyword</keyword>
	  <abstract>
	    <t>
  In many standards track documents several words are used to signify
  the requirements in the specification.  These words are often
  capitalized.  This document defines these words as they should be
  interpreted in IETF documents.  Authors who follow these guidelines
  should incorporate this phrase near the beginning of their document:

<list>
		<t>
     The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL
     NOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,  &quot;MAY&quot;, and
     &quot;OPTIONAL&quot; in this document are to be interpreted as described in
     RFC 2119.
</t>
	      </list>
						</t>
	    <t>
  Note that the force of these words is modified by the requirement
  level of the document in which they are used.
</t>
	  </abstract>
	</front>
	<seriesInfo name="BCP" value="14"/>
	<seriesInfo name="RFC" value="2119"/>
	<format type="HTML" octets="14486" target="http://xml.resource.org/public/rfc/html/rfc2119.html"/>
	<format type="XML" octets="5661" target="http://xml.resource.org/public/rfc/xml/rfc2119.xml"/>
     </reference>

     <reference anchor="RFC3550">
	<front>
	  <title>RTP: A Transport Protocol for Real-Time Applications</title>
	  <author initials="H." surname="Schulzrinne" fullname="H. Schulzrinne">
	    <organization/>
	  </author>
	  <author initials="S." surname="Casner" fullname="S. Casner">
	    <organization/>
	  </author>
	  <author initials="R." surname="Frederick" fullname="R. Frederick">
	    <organization/>
	  </author>
	  <author initials="V." surname="Jacobson" fullname="V. Jacobson">
	    <organization/>
	  </author>
	  <date month="July" year="2003"/>
	</front>
	<seriesInfo name="STD" value="64"/>
	<seriesInfo name="RFC" value="3550"/>
     </reference>


     <reference anchor="RFC4566">
	<front>
	  <title>SDP: Session Description Protocol</title>
	  <author initials="M." surname="Handley" fullname="M. Handley">
	    <organization/>
	  </author>
	  <author initials="V." surname="Jacobson" fullname="V. Jacobson">
	    <organization/>
	  </author>
	  <author initials="C." surname="Perkins" fullname="C. Perkins">
	    <organization/>
	  </author>
	  <date year="2006" month="July"/>
	  <abstract>
	    <t>&lt;p>This memo defines the Session Description Protocol (SDP). SDP is intended for describing multimedia sessions for the purposes of session announcement, session invitation, and other forms of multimedia session initiation. [STANDARDS TRACK]&lt;/p></t>
	  </abstract>
	</front>
	<seriesInfo name="RFC" value="4566"/>
     </reference>

   </references> 

   <references title="Informative References">

     <reference anchor="RFC4288">
	<front>
	  <title>Media Type Specifications and Registration Procedures</title>
	  <author initials="N." surname="Freed" fullname="N. Freed">
	    <organization/>
	  </author>
	  <author initials="J." surname="Klensin" fullname="J. Klensin">
	    <organization/>
	  </author>
	  <date year="2005" month="December"/>
	</front>
	<seriesInfo name="BCP" value="13"/>
	<seriesInfo name="RFC" value="4288"/>
     </reference>

     <reference anchor="SPEEX" target="http://www.speex.org/docs/">
	<front>
	  <title>The Speex Codec Manual</title>
	  <author initials="J.-M." surname="Valin" fullname="Jean-Marc Valin">
	    <organization/>
	  </author>
	</front>
     </reference>

     <reference anchor="CELP" target="http://www.ntis.gov/">
	<front>
	  <title> Code-excited linear prediction(CELP): High-quality
speech at very low bit rates</title>
	  <author initials="M" surname="Schroeder">
	    <organization />
	  </author>
          <author initials="B" surname="Atal">
           <organization />
           </author>
           <date year="1985" />
	</front>
	<seriesInfo name="Proc. International Conference on Acoustics, Speech, and Signal Processing" value="(ICASSP)" />
	<seriesInfo name="Vol" value="10" /> 
	<seriesInfo name="pp." value="937-940" />

     </reference>

</references> 

</back>
</rfc>
