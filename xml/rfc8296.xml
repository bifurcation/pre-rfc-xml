<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM "reference.RFC.2119.xml">
<!ENTITY RFC2474 SYSTEM "reference.RFC.2474.xml">
<!ENTITY RFC5331 SYSTEM "reference.RFC.5331.xml">
<!ENTITY RFC5586 SYSTEM "reference.RFC.5586.xml">
<!ENTITY RFC3031 SYSTEM "reference.RFC.3031.xml">
<!ENTITY RFC3032 SYSTEM "reference.RFC.3032.xml">
<!ENTITY RFC5332 SYSTEM "reference.RFC.5332.xml">
<!ENTITY RFC5462 SYSTEM "reference.RFC.5462.xml">
<!ENTITY RFC6790 SYSTEM "reference.RFC.6790.xml">
<!ENTITY RFC7120 SYSTEM "reference.RFC.7120.xml">
<!ENTITY RFC8126 SYSTEM "reference.RFC.8126.xml">
<!ENTITY RFC8174 SYSTEM "reference.RFC.8174.xml">
<!ENTITY RFC8279 SYSTEM "reference.RFC.8279.xml">
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="exp" number="8296" submissionType="IETF" consensus="yes"
     ipr="trust200902"> 

  <front>

    <title abbrev="BIER MPLS Encapsulation">Encapsulation for Bit Index
    Explicit Replication (BIER) in&nbsp;MPLS&nbsp;and&nbsp;Non&nbhy;MPLS&nbsp;Networks</title>

    <author fullname="IJsbrand Wijnands" initials="IJ." role="editor"
            surname="Wijnands">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>De Kleetlaan 6a</street>
          <city>Diegem</city>
          <region></region>
          <code>1831</code>
          <country>Belgium</country>
        </postal>
        <email>ice@cisco.com</email>
      </address>
    </author>

    <author fullname="Eric C. Rosen" initials="E." role="editor"
            surname="Rosen">
      <organization>Juniper Networks, Inc.</organization>
      <address>
        <postal>
          <street>10 Technology Park Drive</street>
          <city>Westford</city>
          <region>Massachusetts</region>
          <code>01886</code>
          <country>United States of America</country>
        </postal>
        <email>erosen@juniper.net</email>
      </address>
    </author>

    <author fullname="Andrew Dolganow" initials="A." 
            surname="Dolganow">
      <organization>Nokia</organization>
      <address>
        <postal>
          <street>438B Alexandra Rd #08-07/10</street>
          <street>Alexandra Technopark</street>
          <code>119968</code>
          <region>Singapore</region>
          <country>Singapore</country>
        </postal>
        <email>andrew.dolganow@nokia.com</email>
      </address>
    </author>


    <author fullname="Jeff Tantsura" initials="J." 
            surname="Tantsura">
      <organization>Individual</organization>
      <address>
        <email>jefftant.ietf@gmail.com</email>
      </address>
    </author>

    <author fullname="Sam K. Aldrin" initials="S." 
            surname="Aldrin">
      <organization>Google, Inc.</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View</city>
          <region>California</region>
          <code>94043</code>
          <country>United States of America</country>
        </postal>
        <email>aldrin.ietf@gmail.com</email>
      </address>
    </author>

    <author fullname="Israel Meilik" initials="I." surname="Meilik">
      <organization> Broadcom </organization>
      <address>
        <email>israel@broadcom.com</email>
      </address>
    </author>
          
    <date month="January" year="2018" />

    <keyword>Multicast</keyword>

    <abstract>
      <t>
        Bit Index Explicit Replication (BIER) is an architecture that
        provides optimal multicast forwarding through a "multicast domain",
        without requiring intermediate routers to maintain any per-flow
        state or to engage in an explicit tree-building protocol.  When a
        multicast data packet enters the domain, the ingress router
        determines the set of egress routers to which the packet needs to be
        sent.  The ingress router then encapsulates the packet in a BIER
        header.  The BIER header contains a bit string in which each bit
        represents exactly one egress router in the domain; to forward the
        packet to a given set of egress routers, the bits corresponding to
        those routers are set in the BIER header.  The details of the
        encapsulation depend on the type of network used to realize the
        multicast domain.  This document specifies a BIER encapsulation that
        can be used in an MPLS network or, with slight differences, in a
        non-MPLS network.  
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction" anchor="introduction">
      <t>
        <xref target="RFC8279"/> describes a new architecture for the
        forwarding of multicast data packets.  Known as "Bit Index Explicit
        Replication" (BIER), that architecture provides optimal forwarding
        of multicast data packets through a "multicast domain".  It does so
        without requiring any explicit tree-building protocol and without
        requiring intermediate nodes to maintain any per-flow state.
      </t>
      <t>
        This document will use terminology defined in <xref
        target="RFC8279"/>. 
      </t>
      <t>
        A router that supports BIER is known as a "Bit&nbhy;Forwarding Router"
        (BFR).  A "BIER domain" is a connected set of BFRs, each of which
        has been assigned a BFR&nbhy;prefix.  A BFR&nbhy;prefix is a
        routable IP address of a BFR and is used by BIER to identify a BFR.
        A packet enters a BIER domain at a Bit&nbhy;Forwarding Ingress Router
        (BFIR) and leaves the BIER domain at one or more
        Bit&nbhy;Forwarding Egress Routers (BFERs).  As specified
        in <xref target="RFC8279"/>, each BFR of a given BIER domain is
        provisioned to be in one or more "sub&nbhy;domains" (SDs).  In the
        context of a given SD, each BFIR and BFER must have a
        BFR&nbhy;id that is unique within that SD.  A BFR&nbhy;id is
        just a number in the range [1,65535] that, relative to a
        BIER SD, identifies a BFR uniquely.
      </t>
      <t>
        As described in <xref target="RFC8279"/>, BIER requires that
        multicast data packets be encapsulated with a header that provides
        the information needed to support the BIER forwarding procedures.
        This information includes the SD to which the packet has been
        assigned, a Set Identifier (SI), a BitString, and a
        BitStringLength (BSL). Together, these values are used to identify
        the set of BFERs to which the packet must be delivered.
      </t>
      <t>
        This document defines an encapsulation that can be used in either
        MPLS networks or non-MPLS networks.  However, the construction and
        processing of the BIER header are slightly different in MPLS networks
        than in non-MPLS networks.  In particular:
      </t>
      <t>
        <list style="symbols">
          <t>
            The handling of certain fields in the encapsulation header (the
            "BIER header") is different, depending upon whether the
            underlying network is an MPLS network or not.
          </t>
          <t>
            In an MPLS network, the first four octets of a BIER header are
            also the bottom entry (the last four octets) of an MPLS label
            stack.
          </t>
        </list>
      </t>
      <t>
        The MPLS-based encapsulation is explained in detail in <xref
        target="mpls"/>.  The differences between the MPLS-based
        encapsulation and the non-MPLS encapsulation are explained in <xref
        target="non-mpls"/>.
      </t>

      <t>
        Following the BIER header is the "payload".  The payload may be an
        IPv4 packet, an IPv6 packet, an Ethernet frame, an MPLS packet, or
        an Operations, Administration, and Maintenance (OAM) packet.  (The
        use of BIER with other payload types is also possible but is not
        further discussed in this document.)  The BIER header contains
        information (the Next Protocol field) identifying the type of the
        payload.
      </t>
      <t>
        If the payload is an MPLS packet, then an MPLS label stack
        immediately follows the BIER header.  The top label of this MPLS
        label stack may be either a downstream-assigned label <xref
        target="RFC3031"/> or an upstream-assigned label <xref
        target="RFC5331"/>.
      </t>

      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
      "SHALL&nbsp;NOT", "SHOULD", "SHOULD&nbsp;NOT", "RECOMMENDED",
      "NOT&nbsp;RECOMMENDED", "MAY", and "OPTIONAL" in this document
      are to be interpreted as described in BCP&nbsp;14
      <xref format="default" pageno="false" target="RFC2119"/>
      <xref format="default" pageno="false" target="RFC8174"/> when,
      and only when, they appear in all capitals, as shown here.</t>
    </section>

    <section title="BIER Header" anchor="header">
      <t>
        The BIER header is shown in <xref target="bier_header"/>.
      </t>

  <figure align="center" anchor="bier_header" title="BIER Header">
    <artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|              BIFT-id                  | TC  |S|     TTL       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Nibble |  Ver  |  BSL  |              Entropy                  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|OAM|Rsv|    DSCP   |   Proto   |            BFIR-id            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                BitString  (first 32 bits)                     ~
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
~                                                               ~
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
~                BitString  (last 32 bits)                      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
  </figure>

  <t>
    The BIFT-id represents a particular Bit Index Forwarding Table (BIFT);
    see Section&nbsp;6.4 of <xref target="RFC8279"/>.  As explained in <xref
    target="RFC8279"/>, each BIFT corresponds to a particular combination
    of SD, BSL, and SI.
  </t>
  <t>
    <xref target="mpls"/> explains how the fields of the encapsulation
    header are used in MPLS networks.  For those fields that are used
    differently in non-MPLS networks, <xref target="non-mpls"/>
    explains the differences.
  </t>
  <t>
    The default BitStringLength value for the encapsulations defined in this
    document is 256.  See Section&nbsp;3 of <xref target="RFC8279"/> for a
    discussion of the default BitStringLength value.
  </t>

  <section title="In MPLS Networks" anchor="mpls">
    <section title="Encapsulation Initial Four Octets" anchor="mpls-label">
      <section title="The BIER-MPLS Label" anchor="label">
        <t>
          As stated in <xref target="RFC8279"/>, when a BIER domain is
          also an IGP domain, IGP extensions can be used by each BFR to
          advertise the BFR&nbhy;id and BFR&nbhy;prefix.  The extensions for
          OSPF are given in <xref target="OSPF_BIER_EXTENSIONS"/>.  The
          extensions for IS-IS are given in <xref
          target="ISIS_BIER_EXTENSIONS"/>.
        </t>
        <t>
          When a particular BIER domain is both an IGP domain and an MPLS
          network, we assume that each BFR will also use IGP extensions to
          advertise a set of one or more "BIER-MPLS" labels.  When the
          domain contains a single SD, a given BFR needs to advertise one
          such label for each combination of SI and BSL.  If the domain
          contains multiple SDs, a BFR needs to advertise one such
          label per SI per BSL for each&nbsp;SD.
        </t>
        <t>
          In some environments, the only routing protocol in a BIER domain
          might be BGP; in this case, the BGP extensions described in <xref
          target="BGP_BIER_EXTENSIONS"/> can be used to advertise the
          necessary set of BIER-MPLS labels.
        </t>
        <t>
          The BIER-MPLS labels are locally significant (i.e., unique only to
          the BFR that advertises them) downstream-assigned MPLS labels.
          Penultimate hop popping <xref target="RFC3031"/> MUST NOT be
          applied to a BIER-MPLS label.
        </t>
        <t>
          Suppose, for example, that there is a single SD (the default SD),
          that the network is using a BSL of 256, and that all BFERs in the
          SD have BFR&nbhy;ids in the range [1,512].  Since each BIER
          BitString is 256 bits long, this requires the use of two SIs:
          SI=0 and SI=1.  So each BFR will advertise, via IGP extensions,
          two MPLS labels for BIER: one corresponding to SI=0 and one
          corresponding to SI=1.  The advertisements of these labels will
          also bind each label to the default SD and to BSL 256.
        </t>
        <t>
          As another example, suppose a particular BIER domain contains
          two SDs (SD 0 and SD 1), supports two BSLs (256 and 512), and
          contains 1024&nbsp;BFRs.  A BFR that is provisioned for both SDs,
          and that supports both BSLs, would have to advertise the following
          set of BIER-MPLS labels:
          <list style="format    L%d:">
            <t>
              corresponding to SD 0, BSL 256, SI 0.
            </t>
            <t>
              corresponding to SD 0, BSL 256, SI 1.
            </t>
            <t>
              corresponding to SD 0, BSL 256, SI 2.
            </t>
            <t>
              corresponding to SD 0, BSL 256, SI 3.
            </t>
            <t>
              corresponding to SD 0, BSL 512, SI 0.
            </t>
            <t>
              corresponding to SD 0, BSL 512, SI 1.
            </t>
            <t>
              corresponding to SD 1, BSL 256, SI 0.
            </t>
            <t>
              corresponding to SD 1, BSL 256, SI 1.
            </t>
            <t>
              corresponding to SD 1, BSL 256, SI 2.
            </t>
            <t>
              corresponding to SD 1, BSL 256, SI 3.
            </t>
            <t>
              corresponding to SD 1, BSL 512, SI 0.
            </t>
            <t>
              corresponding to SD 1, BSL 512, SI 1.
            </t>
          </list>
        </t>
        <t>
          The above example should not be taken as implying that the BFRs
          need to advertise 12 individual labels.  For instance, instead of
          advertising a label for &lt;SD 1, BSL 512, SI 0&gt; and a label
          for &lt;SD&nbsp;1,&nbsp;BSL&nbsp;512,&nbsp;SI&nbsp;1&gt;, a BFR
          could advertise a contiguous range of labels (in this case, a
          range containing exactly two labels) corresponding to
          &lt;SD&nbsp;1,&nbsp;BSL&nbsp;512&gt;.  The first label in the
          range could correspond to SI 0, and the second to SI 1.  The
          precise mechanism for generating and forming the advertisements
          is outside the scope of this document; see <xref
          target="OSPF_BIER_EXTENSIONS"/> and <xref
          target="ISIS_BIER_EXTENSIONS"/>.
        </t>
        <t>
          The BIER-MPLS label corresponding to a particular combination of
          SD, SI, and BSL is interpreted as representing the BIFT that
          corresponds to that same combination of SD, SI, and BSL. That is,
          the BIER-MPLS label performs the function of a BIFT&nbhy;id.
          This label value is carried in the BIFT&nbhy;id field of the
          BIER encapsulation.
        </t>
        <t>
          It is crucial to understand that in an MPLS network the first
          four&nbsp;octets of the BIER encapsulation header are also the last
          four&nbsp;octets of the MPLS header. Therefore, any prior MPLS label
          stack entries MUST have the S&nbsp;bit (see <xref target="RFC3032"/>)
          clear (i.e., the S&nbsp;bit must be&nbsp;0).
        </t>
        <t>
          When a BFR receives an MPLS packet and the next label to be
          processed is one of its BIER-MPLS labels, it will assume that the
          remainder of the BIER header (see <xref target="mpls-remainder"/>)
          immediately follows the stack.  
        </t>
        <t>
          Note that in practice, labels only have to be assigned if they are
          going to be used.  If a particular BIER domain supports BSLs 256
          and 512, but some SD, say SD 1, only uses BSL 256, then it is not
          necessary to assign labels that correspond to the combination of
          SD 1 and BSL 512.
        </t>
       </section>
       
       <section title="Other Fields of the Initial Four Octets"
                anchor="mpls-other">
         <t>
           <list style="hanging">
             <t hangText="TC:">
               <vspace blankLines="1"/>
               The "Traffic Class" field <xref target="RFC5462"/> has its
               usual meaning in an MPLS label stack entry.
             </t>
             <t hangText="S bit:">
               <vspace blankLines="1"/>
               When a BIER packet is traveling through an MPLS network, the
               high&nbhy;order 20 bits of the initial four octets of the BIER
               encapsulation contain an MPLS label in the BIFT&nbhy;id field.
               These four&nbsp;octets are treated as the final entry in the
               packet's MPLS label stack.  Hence, the S&nbsp;bit (see <xref
               target="RFC3032"/>) MUST be set to 1.  If there are any MPLS
               label stack entries immediately preceding the BIER
               encapsulation, the S&nbsp;bit of those label stack entries
               MUST be set to 0.
             </t>
             <t hangText="TTL:">
               <vspace blankLines="1"/>
               This is the usual MPLS "Time to Live" field <xref
               target="RFC3032"/>.  When a BIER packet is received, its
               "incoming TTL" (see below) is taken from this TTL field.
               <vspace blankLines="1"/>
               When a BIER packet is forwarded to one or more BFR
               adjacencies, the BIER-MPLS label carried by the forwarded
               packet MUST have a TTL field whose value is one less than
               that of the packet's incoming TTL.
               <vspace blankLines="1"/>
               If a BIER packet's incoming TTL is 1 or greater and one of
               the bits in its BitString identifies the current BFR, then
               the current BFR is a BFER for the packet.  Therefore, the
               current BFR MUST process the packet as a BFER, e.g., by
               removing the BIER encapsulation and processing the payload
               based on the contents of the Proto (Next Protocol) field.
               <vspace blankLines="1"/>
               If the incoming TTL is 0, the packet is considered to be
               "expired".  If the incoming TTL is 1 and the BitString has a
               bit set that does not identify the current BFR, the packet is
               also considered to be expired.  Expired packets SHOULD be
               passed to an error&nbhy;handling procedure.  (Optional
               implementation-specific rate&nbsp;limiting may be applied to
               control the rate at which packets are passed to the
               error&nbhy;handling procedure.)  Specification of the
               error&nbhy;handling procedure is outside the scope of
               this document.
               <vspace blankLines="1"/>
               Note that if a received BIER packet has an incoming TTL of 1
               and its BitString has a bit set identifying the current BFR,
               the payload MUST be processed by the current BFR, but the
               packet MUST&nbsp;NOT be forwarded further, and the packet
               SHOULD also be passed to the error&nbhy;handling procedures
               for expired packets (subject to any implementation-specific
               rate limiting).
             </t>
         </list>
         </t>
       </section>
     </section>

     <section title="Remainder of Encapsulation" anchor="mpls-remainder">
       <t>
         <list style='hanging'>
           <t hangText="Nibble:">
             <vspace blankLines="1"/>
             This field is set to the binary value 0101; this ensures that
             the MPLS ECMP logic will not confuse the remainder of the BIER
             header with an IP header or with the header of a pseudowire
             packet.  In an MPLS network, if a BFR receives a BIER packet
             with any other value in the first nibble after the label stack,
             it SHOULD discard the packet and log an error.
           </t>
           <t hangText='Ver:'>
             <vspace blankLines="1"/>
             This 4-bit field identifies the version of the BIER header.
             This document specifies version 0 of the BIER header.  If a
             packet is received by a particular BFR and that BFR does not
             support the specified version of the BIER header, the BFR MUST
             discard the packet and log an error.
             <vspace blankLines="1"/>
             The value 0xF is reserved for experimental use; that value
             MUST&nbsp;NOT be assigned by any future IETF document or by IANA.
           </t>

          <t hangText="BSL:">
            <vspace blankLines="1"/>
            This 4-bit field encodes the length in bits of the BitString.
            <vspace blankLines="1"/>
            Note: When parsing the BIER header, a BFR MUST infer the length
            of the BitString from the BIFT&nbhy;id and MUST NOT infer it from
            the value of this field.  This field is present only to enable
            offline tools (such as LAN analyzers) to parse the BIER header.
            <vspace blankLines="1"/>
            If k is the length of the BitString, the value of this field is
            log2(k)-5.  However, only certain values are supported:
            <list>
              <t>
                1: 64 bits
              </t>
              <t>
                2: 128 bits
              </t>
              <t>
                3: 256 bits
              </t>
              <t>
                4: 512 bits
              </t>
              <t>
                5: 1024 bits
              </t>
              <t>
                6: 2048 bits
              </t>
              <t>
                7: 4096 bits
              </t>
            </list>
              The value of this field MUST NOT be set to any value other
              than those listed above.  A received packet containing another
              value in this field SHOULD be discarded and an error logged.
              If the value in this field is other than what is expected
              based on the BIER&nbhy;MPLS label, the packet SHOULD be
              discarded and an error logged.
          </t>
          <t hangText='Entropy:'>
            <vspace blankLines="1"/>
            This 20-bit field specifies an "entropy" value that can be used
            for load&nbhy;balancing purposes.  The BIER forwarding process
            may do equal&nbhy;cost load balancing, in which case the
            load&nbhy;balancing procedure MUST choose the same path for
            any two packets that have the same entropy value and the same
            BitString.  Please see Section&nbsp;6.7
            ("Equal-Cost Multipath Forwarding") of <xref target="RFC8279"/>
            for a more detailed discussion of BIER load&nbhy;balancing
            procedures.
            <vspace blankLines="1"/>
            If a BFIR is encapsulating (as the payload) MPLS packets that
            have entropy labels, the BFIR MUST ensure that if two such
            packets have the same MPLS entropy label they also have the
            same value of the BIER entropy field.            
          </t>

          <t hangText="OAM:">
            <vspace blankLines="1"/>
            By default, these two bits are set to 0 by the BFIR and are
            not modified by other BFRs.  These two bits have no effect on
            the path taken by a BIER packet and have no effect on the
            quality of service applied to a BIER packet.
            <vspace blankLines="1"/>
            The use of these bits in other than the default manner is
            OPTIONAL.  Specification of the non-default use or uses of these
            bits is outside the scope of this document; see <xref
            target="BIER-PMM"/> for an example of such a specification.
          </t>

          <t hangText="Rsv:">
            <vspace blankLines="1"/>
            These two bits are currently unused.  They SHOULD be set to 0
            upon transmission and MUST be ignored upon reception.
          </t>
          <t hangText="DSCP:">
            <vspace blankLines="1"/>
            By default, this 6-bit field is not used in MPLS networks.  The
            default behavior is that all six&nbsp;bits SHOULD be set to 0
            upon transmission and MUST be ignored upon reception.
            <vspace blankLines="1"/>
            Non-default use of this field in MPLS networks is outside the
            scope of this document.
          </t>
          <t hangText='Proto:'>
            <vspace blankLines="1"/>
            This 6-bit "Next Protocol" field identifies the type of the
            payload. (The "payload" is the packet or frame immediately
            following the BIER header.) IANA has created a registry called
            "BIER Next Protocol Identifiers".  This field is to
            be populated with the appropriate entry from that registry.
            <vspace blankLines="1"/>
            If a BFER receives a BIER packet but does not recognize (or
            does not support) the value of the Next Protocol field, the BFER
            SHOULD discard the packet and log an error.
          </t>
          <t hangText="BFIR&nbhy;id:">
            <vspace blankLines="1"/>
            By default, this is the BFR&nbhy;id of the BFIR, in the SD to
            which the packet has been assigned.  The BFR&nbhy;id is encoded
            in the 16-bit field as an unsigned integer in the range
            [1,65535].
            <vspace blankLines="1"/>
            Certain applications may require that the BFIR&nbhy;id field
            contain the BFR&nbhy;id of a BFR other than the BFIR.  However,
            that usage of the BFIR&nbhy;id field is outside the scope of this
            document.</t>
          <t hangText="BitString:">
            <vspace blankLines="1"/>
             This field holds the BitString that, together with the
             packet's SI and SD, identifies the destination BFERs for this
             packet. Note that the SI and SD for the packet are not carried
             explicitly in the BIER header, as a particular BIFT&nbhy;id
             always corresponds to a particular SI and SD.
          </t>
        </list>
      </t>
    </section>

    <section title="Further Encapsulating a BIER Packet" anchor="l2mpls">
      <t>
        Sending a BIER packet from one BFR to another may require the packet
        to be further encapsulated.  For example, in some scenarios it may
        be necessary to encapsulate a BIER packet in an Ethernet frame; in
        other scenarios it may be necessary to encapsulate a BIER packet in
        a UDP packet.  In such cases, the BIER packet itself is the payload
        of an "outer" encapsulation.
      </t>
      <t>
        In this document, we assume that the frame or packet carrying a BIER
        packet as its payload is a unicast frame or packet.  That is,
        although a BIER packet is a multicast packet, we assume that the
        frame or packet carrying the BIER packet as its payload is unicast
        from one BFR to the next.
      </t>
      <t>
        Generally, the outer encapsulation has a codepoint identifying the
        "next protocol".  The outer encapsulation's "next protocol"
        codepoint for MPLS MUST be used.  If a particular outer
        encapsulation has a codepoint for "MPLS with downstream-assigned
        label" and a different codepoint for "MPLS with upstream-assigned
        label", the codepoint for "MPLS with downstream-assigned label" MUST
        be used.
      </t>
      <t>
        For example, if a BIER packet is encapsulated in an Ethernet frame,
        the Ethertype MUST be 0x8847 <xref target="RFC5332"/>, which is
        the Ethertype for a unicast Ethernet frame that carries an MPLS
        packet whose label stack begins with a downstream-assigned label.
      </t>
      <t>
        In the special case where the outer encapsulation is MPLS, the outer
        encapsulation has no "next protocol" codepoint. All that is needed
        to encapsulate the BIER packet is to push more MPLS label stack
        entries (with the S&nbsp;bit clear) on the BIER packet's label stack.
      </t>
      <t>
        If two BIER packets have the same value in the entropy field of
        their respective BIER headers and if both are placed in an outer
        encapsulation, it is desirable for the outer encapsulation to
        preserve the fact that the two packets have the same entropy.  If
        the outer encapsulation is MPLS and if the MPLS entropy label
        <xref target="RFC6790"/> is in use in a given deployment, one way
        to do this is to copy the value of the BIER header entropy field
        into an MPLS entropy label.
      </t>
    </section>
  </section>

  <section title="In Non-MPLS Networks" anchor="non-mpls">
    <section title="Encapsulation Initial Four Octets" anchor="non-mpls-label">
      <section title="The BIFT-id" anchor="bift-id">
        <t>
          In non-MPLS networks, a BIFT-id MUST be assigned for every
          combination of &lt;SD, SI, BSL&gt; that is to be used in that
          network.  The correspondence between a BIFT&nbhy;id and a particular
          &lt;SD, SI, BSL&gt; triple is unique throughout the BIER domain
          and is known to all the BFRs in the BIER domain.  
        </t>
        <t>
          The means by which the BIFT-ids are assigned, and the means by
          which these assignments are made known to the BFRs, are outside
          the scope of this document.
        </t>
        <t>
          In an MPLS network, since the BIFT-id is an MPLS label, its value
          may be changed as a BIER packet goes from BFR to BFR.  In a
          non-MPLS network, since the BIFT&nbhy;id is domain-wide unique, it
          is not expected to change as a BIER packet travels.
        </t>
       </section>
       
       <section title="Other Fields of the Initial Four Octets"
                anchor="non-mpls-other">
         <t>
           <list style="hanging">
             <t hangText="TC:">
               <vspace blankLines="1"/>
               By default, the TC field has no significance in a non-MPLS
               network.  The default behavior is that this field SHOULD be
               set to the binary value 000 upon transmission and MUST be
               ignored upon reception.
               <vspace blankLines="1"/>
               Non-default use of this field in non-MPLS networks is outside
               the scope of this document.
             </t>
             <t hangText="S bit:">
               <vspace blankLines="1"/>
               The S bit has no significance in a non-MPLS network.  It
               SHOULD be set to 1 upon transmission, but it MUST be ignored
               upon reception.
             </t>
             <t hangText="TTL:">
               <vspace blankLines="1"/>
               This is the BIER "Time to Live" field.  Its purpose is to
               prevent BIER packets from looping indefinitely in the event
               of improper operation of the control plane.  When a BIER
               packet is received, its "incoming TTL" (see below) is taken
               from this TTL field.
               <vspace blankLines="1"/>
               The effect of this field on the processing of a BIER packet
               is described in <xref target="mpls-other"/>.
             </t>
         </list>
         </t>
       </section>
     </section>

     <section title="Remainder of Encapsulation" anchor="non-mpls-remainder">
       <t>
         <list style='hanging'>
           <t hangText="Nibble:">
             <vspace blankLines="1"/>
             This field SHOULD be set to 0000 upon transmission but MUST be
             ignored upon reception.
           </t>
           <t hangText='Ver:'>
             <vspace blankLines="1"/>
             See <xref target="mpls-remainder"/>.
           </t>
           <t hangText="BSL:">
             <vspace blankLines="1"/>
             See <xref target="mpls-remainder"/>.
           </t>
           <t hangText='Entropy:'>
             <vspace blankLines="1"/>
             See <xref target="mpls-remainder"/>.
           </t>
           <t hangText="OAM:">
             <vspace blankLines="1"/>
             See <xref target="mpls-remainder"/>.
           </t>
           <t hangText="Rsv:">
             <vspace blankLines="1"/>
             See <xref target="mpls-remainder"/>.
           </t>
           <t hangText="DSCP:">
             <vspace blankLines="1"/>
             This 6-bit field MAY be used to hold a Differentiated Services
             Codepoint <xref target="RFC2474"/>.  The significance of this
             field is outside the scope of this document.
           </t>
           <t hangText='Proto:'>
             <vspace blankLines="1"/>
             See <xref target="mpls-remainder"/>.
           </t>
           <t hangText="BFIR&nbhy;id:">
             <vspace blankLines="1"/>
             See <xref target="mpls-remainder"/>.
           </t>
           <t hangText="BitString:">
             <vspace blankLines="1"/>
             See <xref target="mpls-remainder"/>.
           </t>
         </list>
       </t>
     </section>
     <section title="Further Encapsulating a BIER Packet" anchor="l2non-mpls">
       <t>
         Sending a BIER packet from one BFR to another may require the
         packet to be further encapsulated.  For example, in some scenarios
         it may be necessary to encapsulate a BIER packet in an Ethernet
         frame; in other scenarios it may be necessary to encapsulate a BIER
         packet in a UDP packet.  In such cases, the BIER packet itself
         is the payload of an "outer" encapsulation.
       </t>
       <t>
         In this document, we assume that the frame or packet carrying a
         BIER packet as its payload is a unicast frame or packet.  That is,
         although a BIER packet is a multicast packet, we assume that the
         frame or packet carrying the BIER packet as its payload is unicast
         from one BFR to the next.
       </t>
       <t>
         Generally, the outer encapsulation has a codepoint identifying the
         "next protocol".  This codepoint MUST be set to a value that means
         "non-MPLS BIER".  In particular, a codepoint that means "MPLS"
         (with either upstream-assigned or downstream-assigned labels) MUST
         NOT be used.
       </t>
       <t>
         By requiring the use of a distinct codepoint for "non-MPLS BIER",
         we allow for deployment scenarios where non-MPLS BIER can coexist
         with non-BIER MPLS.  The BIFT&nbhy;id values used by the former
         will not conflict with MPLS label values used by the latter.
       </t>
       <t>
         Therefore, if a non-MPLS BIER packet is encapsulated in an Ethernet
         header, the Ethertype MUST NOT be 0x8847 or 0x8848 <xref
         target="RFC5332"/>.  IEEE has assigned Ethertype 0xAB37
         for non-MPLS BIER packets.
       </t>
       <t>
         In the special case where the outer encapsulation is MPLS, the
         outer encapsulation has no "next protocol" codepoint.  If it is
         necessary to use MPLS as an outer encapsulation for BIER packets,
         it is RECOMMENDED to use the MPLS encapsulation for BIER.
         Procedures for encapsulating a non-MPLS BIER packet in MPLS are
         outside the scope of this document.
       </t>
       <t>
         If two BIER packets have the same value in the entropy field of
         their respective BIER headers and if both are placed in an outer
         encapsulation, it is desirable for the outer encapsulation to
         preserve the fact that the two packets have the same entropy.
       </t>
     </section>
   </section>
 </section>
      
  <section title="Imposing and Processing the BIER Encapsulation">
    <t>
      Each BFIR is expected to know the Maximum Transmission Unit (MTU) of
      the BIER domain.  This may be known by provisioning, or by some other
      method outside the scope of this document.  Each BFIR also knows the
      size of the BIER encapsulation.  Thus, each BFIR can deduce the maximum
      size of the payload that can be encapsulated in a BIER packet.  We will
      refer to this payload size as the BIER-MTU.
    </t>
    <t>
      If a BFIR receives a multicast packet from outside the BIER domain
      and the packet size exceeds the BIER-MTU, the BFIR takes whatever
      action is appropriate to take when receiving a multicast packet that
      is too large to be forwarded to all its next hops.  If the appropriate
      action is to drop the packet and advertise an MTU to the source, then
      the BFIR drops the packet and advertises the BIER-MTU.  If the
      appropriate action is to fragment the packet, then the procedures of
      this section are applied, in sequence, to each fragment.
    </t>
      <t>
        When a BFIR processes a multicast packet (or fragment thereof) from
        outside the BIER domain, the BFIR carries out the following
        procedure:
      </t>
      <t>
        <list style="numbers">
          <t>
            By consulting the "multicast flow overlay" <xref
            target="RFC8279"/>, it determines the value of the Proto field.
          </t>
          <t>
            By consulting the multicast flow overlay, it determines the set
            of BFERs that must receive the packet.
          </t>
          <t>
            If more than one SD is supported, the BFIR assigns the packet to
            a particular SD.  Procedures for determining the SD to which a
            particular packet should be assigned are outside the scope of
            this document.
          </t>
          <t>
            The BFIR looks up the BFR&nbhy;id, in the given SD, of each of
            the BFERs.
          </t>
          <t>
            The BFIR converts each such BFR&nbhy;id into "SI:BitString"
            format, as described in <xref target="RFC8279"/>.
          </t>
          <t>
            All such BFR&nbhy;ids that have the same SI can be encoded into
            the same BitString.  Details of this encoding can be found in
            <xref target="RFC8279"/>.  For each distinct SI that occurs in
            the list of the packet's destination BFERs:
            <list style="format %c.">
              <t>
                The BFIR makes a copy of the multicast data packet and
                encapsulates the copy in a BIER header (see <xref
                target="header"/>).  The BIER header contains the BitString
                that represents all the destination BFERs whose BFR&nbhy;ids
                (in the given SD) correspond to the given SI.  It
                also contains the BFIR's BFR&nbhy;id in the SD to which
                the packet has been assigned.
                <vspace blankLines="1"/>
                Note well that for certain applications it may be necessary
                for the BFIR&nbhy;id field to contain the BFR&nbhy;id of a
                BFR other than the BFIR that is creating the header.  Such
                uses are outside the scope of this document.
              </t>

              <t>
                The BFIR then applies to that copy the forwarding procedure
                of <xref target="RFC8279"/>.  This may result in one or
                more copies of the packet (possibly with a modified
                BitString) being transmitted to a neighboring BFR.
              </t>
              <t>
                If the non-MPLS BIER encapsulation is being used, the
                BIFT&nbhy;id field is set to the BIFT&nbhy;id that
                corresponds to the packet's &lt;SD, SI, BSL&gt;.  The
                TTL is set according to policy. 
                <vspace blankLines="1"/>
                If the MPLS BIER encapsulation is being used, the BFIR finds
                the BIER-MPLS label that was advertised by the neighbor as
                corresponding to the given &lt;SD, SI, BSL&gt;.  An MPLS
                label stack is then prepended to the packet.  This label
                stack <xref target="RFC3032"/> will contain one label --
                the aforementioned BIER&nbhy;MPLS label.  The S&nbsp;bit
                MUST be set, indicating the end of the MPLS label stack.
                The TTL field of this label stack entry is set according
                to policy.
              </t>
              <t>
                The packet may then be transmitted to the neighboring BFR.
                (In an MPLS network, this may result in additional MPLS
                labels being pushed on the stack.  For example, if an
                RSVP&nbhy;TE tunnel is used to transmit packets to the
                neighbor, a label representing that tunnel would be pushed
                onto the stack.)
              </t>
            </list>
          </t>
        </list>
      </t>
      <t>
        When an intermediate BFR is processing a received MPLS packet and
        one of the BFR's own BIER-MPLS labels rises to the top of the label
        stack, the BFR infers the BSL from the label.  The SI and SD are
        also implicitly identified by the label.  The BFR then follows the
        forwarding procedures of <xref target="RFC8279"/>.  If it forwards
        a copy of the packet to a neighboring BFR, it first swaps the label
        at the top of the label stack with the BIER-MPLS label, advertised
        by that neighbor, that corresponds to the same &lt;SD, SI, BSL&gt;.
        Note that when this swap operation is done, the TTL field of the
        BIER-MPLS label of the outgoing packet MUST be one less than the
        "incoming TTL" of the packet, as
        defined in <xref target="mpls-other"/>.
      </t>
      <t>
        When an intermediate BFR is processing a received non-MPLS BIER
        packet, the BFR infers the BSL from the BIFT&nbhy;id.  The SI and
        SD are also implicitly identified by the BIFT&nbhy;id.  The BFR then
        follows the forwarding procedures of <xref target="RFC8279"/>.
      </t>

      <t>
        If the BIER payload is an MPLS packet, the BIER header is
        followed by an MPLS label stack.  This stack is separate from any
        MPLS stack that may precede the BIER header.  For an example of an
        application where it is useful to carry an MPLS packet as the BIER
        payload, see <xref target="BIER_MVPN"/>.  If the BIER encapsulation's
        Proto field indicates that the payload is an MPLS packet with an
        upstream-assigned label at the top of the stack, the
        upstream-assigned label is interpreted in the context of
        &lt;BFIR&nbhy;id,&nbsp;sub&nbhy;domain&nbhy;id&gt;. Note that the
        sub&nbhy;domain&nbhy;id must be inferred from the BIFT&nbhy;id.
      </t>
    </section>

    <section title="IANA Considerations">
      <t>
        IANA has set up a registry called "BIER Next Protocol
        Identifiers".  The registration policy for this registry is
        "IETF Review" <xref target="RFC8126"/> <xref target="RFC7120"/>.
      </t>

      <t>
        The initial values in the "BIER Next Protocol Identifiers" registry
        are: 
        <list style="hanging">
          <t hangText="0:">
            Reserved
          </t>
          <t hangText="1:">
            MPLS packet with downstream-assigned label at top of stack
          </t>
          <t hangText="2:">
            MPLS packet with upstream-assigned label at top of stack
          </t>
          <t hangText="3:">
            Ethernet frame
          </t>
          <t hangText="4:">
            IPv4 packet
          </t>
          <t hangText="5:">
            OAM packet (Reference: <xref target="BIER_PING"/>)
          </t>
          <t hangText="6:">
            IPv6 packet
          </t>
          <t hangText="63:">
            Reserved
          </t>
        </list>
      </t>

    </section>

    <section title="IEEE Considerations">
      <t>
        IEEE has assigned Ethertype 0xAB37 for non-MPLS BIER packets.
      </t>
    </section>

    <section title="Security Considerations" anchor="security">
      <t>
        Insofar as this document makes use of MPLS, it inherits any security
        considerations that apply to the use of the MPLS data plane.
      </t>
      <t>
        If a BIER encapsulation header is modified in ways other than those
        specified in <xref target="RFC8279"/> and in this document,
        packets may be lost, stolen, or otherwise misdelivered.  Such
        modifications are likely to go undetected, as the BIER encapsulation
        does not provide cryptographic integrity protection.        
      </t>
      <t>
        Layer 2 encryption can be used to ensure that a BIER&nbhy;encapsulated
        packet is not altered while in transit between adjacent BFRs.  If a
        BFR itself is compromised, there is no way to prevent the
        compromised BFR from making illegitimate modifications to the BIER
        header or to prevent it from misforwarding or misdelivering the
        BIER&nbhy;encapsulated packet.
      </t>
      <t>
        If the routing underlay (see Section&nbsp;4.1 of <xref
        target="RFC8279"/>) is based on a unicast routing protocol, BIER
        assumes that the routers participating in the unicast routing
        protocol have not been compromised.  BIER has no procedures to
        ensure that the unicast routing adjacencies have not been
        compromised; that falls within the scope of whatever unicast routing
        protocols are being used.
      </t>
      <t>
        BIER&nbhy;encapsulated packets should generally not be accepted from
        untrusted interfaces or tunnels.  For example, an operator may wish
        to have a policy of accepting BIER&nbhy;encapsulated packets only from
        interfaces to trusted routers, and not from customer-facing
        interfaces.
      </t>
      <t>
        There may be applications that require a BFR to accept a
        BIER&nbhy;encapsulated packet from an interface to a system that is not
        controlled by the network operator.  For instance, there may be an
        application in which a virtual machine in a data center submits
        BIER&nbhy;encapsulated packets to a router.  In such a case, it is
        desirable to verify that the packet is from a legitimate source and
        that its BitString denotes only systems to which that source is
        allowed to send.  However, the BIER encapsulation itself does not
        provide a way to verify that the source is (1)&nbsp;legitimate,
        (2)&nbsp;really the system denoted by the BFIR&nbhy;id, or
        (3)&nbsp;allowed to set any particular set of bits in the BitString.
      </t>
      <t>
        Insofar as this document relies upon IGP extensions, it inherits any
        security considerations that apply to the IGP.
      </t>
      <t>
        The security considerations of <xref target="RFC8279"/> also
        apply.
      </t>
    </section>

  </middle>

  <back>

    <references title="Normative References">

      &RFC2119;
      &RFC2474;
      &RFC3031;
      &RFC3032;
      &RFC5331;
      &RFC5332;      
      &RFC5462;
      &RFC7120;
      &RFC8126;
      &RFC8174;
      &RFC8279;
    </references>

    <references title="Informative References">

<!-- draft-ietf-bier-idr-extensions (I-D Exists) -->
      <reference anchor="BGP_BIER_EXTENSIONS">
        <front>
          <title>BGP Extensions for BIER</title>
          <author initials="X" surname="Xu" role="editor">
            <organization/>
          </author>
          <author initials="M" surname="Chen">
            <organization />
          </author>
          <author initials="K" surname="Patel">
            <organization />
          </author>
          <author initials="IJ" surname="Wijnands">
            <organization />
          </author>
          <author initials="A" surname="Przygienda">
            <organization />
          </author>
         <date month="January" year="2018" />
        </front>
        <seriesInfo name='Work in Progress,'
            value='draft-ietf-bier-idr-extensions-04'/>
      </reference>

<!-- draft-ietf-bier-mvpn (Pub. Requested) -->
      <reference anchor="BIER_MVPN">
        <front>
          <title>Multicast VPN Using BIER</title>
          <author initials="E" surname="Rosen" role="editor">
            <organization />
          </author>
          <author initials="M" surname="Sivakumar">
            <organization />
          </author>
          <author initials="S" surname="Aldrin">
            <organization />
          </author>
          <author initials="A" surname="Dolganow">
            <organization />
          </author>
          <author initials="T" surname="Przygienda">
            <organization />
          </author>
          <date month="November" year="2017"/>
        </front>
        <seriesInfo name='Work in Progress,'
            value='draft-ietf-bier-mvpn-09'/>
      </reference>

<!-- draft-ietf-bier-ping (I-D Exists) -->
      <reference anchor="BIER_PING">
        <front>
          <title>BIER Ping and Trace</title>
          <author initials="N" surname="Kumar">
            <organization />
          </author>
          <author initials="C" surname="Pignataro">
            <organization/>
          </author>
          <author initials="N" surname="Akiya">
            <organization />
          </author>
          <author initials="L" surname="Zheng">
            <organization />
          </author>
          <author initials="M" surname="Chen">
            <organization />
          </author>
          <author initials="G" surname="Mirsky">
            <organization />
          </author>
          <date month="July" year="2017" />
        </front>
        <seriesInfo name="Work in Progress,"
                    value="draft-ietf-bier-ping-02"/> 
      </reference>
      
<!-- draft-ietf-bier-pmmm-oam (I-D Exists) -->
      <reference anchor="BIER-PMM">
        <front>
          <title> Performance Measurement (PM) with Marking Method in Bit
          Index Explicit Replication (BIER) Layer</title>
          <author initials="G" surname="Mirsky" fullname="Greg Mirsky">
            <organization/>
          </author>
          <author initials="L" surname="Zheng" fullname="Lianshu Zheng">
            <organization/>
          </author>
          <author initials="M" surname="Chen" fullname="Mach Chen">
            <organization/>
          </author>
          <author initials="G" surname="Fioccola" fullname="Giuseppe Fioccola">
            <organization/>
          </author>
          <date month="October" year="2017"/>
        </front>
        <seriesInfo name="Work in Progress,"
                    value="draft-ietf-bier-pmmm-oam-03"/>
      </reference>

<!-- draft-ietf-bier-isis-extensions (I-D Exists) -->
      <reference anchor='ISIS_BIER_EXTENSIONS'>
        <front>
          <title>BIER support via ISIS</title>
          <author initials="L" surname="Ginsberg" role="editor">
            <organization />
          </author>
          <author initials="A" surname="Przygienda">
            <organization/>
          </author>
          <author initials="S" surname="Aldrin">
            <organization />
          </author>
          <author initials="J" surname="Zhang">
            <organization />
          </author>
          <date month="October" year="2017" />
        </front>
        <seriesInfo name='Work in Progress,'
             value='draft-ietf-bier-isis-extensions-06' />
      </reference>
      
<!-- draft-ietf-bier-ospf-bier-extensions (I-D Exists) -->
      <reference anchor='OSPF_BIER_EXTENSIONS'>
        <front>
          <title>OSPF Extensions for BIER</title>
          <author initials="P" surname="Psenak" role="editor">
            <organization/>
          </author>
          <author initials="N" surname="Kumar">
            <organization />
          </author>
          <author initials="IJ" surname="Wijnands">
            <organization />
          </author>
          <author initials="A" surname="Dolganow">
            <organization />
          </author>
          <author initials="T" surname="Przygienda">
            <organization />
          </author>
          <author initials="J" surname="Zhang">
            <organization />
          </author>
          <author initials="S" surname="Aldrin">
            <organization />
          </author>
          <date month="December" year="2017" />
        </front>
        <seriesInfo name='Work in Progress,'
            value='draft-ietf-bier-ospf-bier-extensions-10'/>
      </reference>

      &RFC6790;

    </references>

    <section anchor="Acknowledgements" title="Acknowledgements" numbered="no">
      <t>
        The authors wish to thank Rajiv Asati, John Bettink, Nagendra Kumar,
        Christian Martin, Neale Ranns, Greg Shepherd, Ramji Vaithianathan,
        Xiaohu Xu, and Jeffrey Zhang for their ideas and contributions to
        this work.
      </t>
    </section>

    <section title="Contributors" numbered="no">
      <t>
   The following people (listed in alphabetical order) contributed
   significantly to the content of this document and should be
   considered co&nbhy;authors:
        <figure align="left">
          <artwork align="left"><![CDATA[
Mach(Guoyi) Chen
Huawei
Email: mach.chen@huawei.com

Arkadiy Gulko
Thomson Reuters
195 Broadway
New York, NY  10007
United States of America
Email: arkadiy.gulko@thomsonreuters.com
          
Wim Henderickx
Nokia
Copernicuslaan 50
Antwerp  2018
Belgium
Email: wim.henderickx@nokia.com

Martin Horneffer
Deutsche Telekom
Hammer Str. 216-226
Muenster  48153
Germany
Email: Martin.Horneffer@telekom.de

Uwe Joorde
Deutsche Telekom
Hammer Str. 216-226
Muenster  D-48153
Germany
Email: Uwe.Joorde@telekom.de

Tony Przygienda
Juniper Networks, Inc.
1194 N. Mathilda Ave.
Sunnyvale, California  94089
United States of America
Email: prz@juniper.net
          ]]></artwork>
        </figure>
      </t>
    </section>

  </back>
</rfc>
