<?xml version='1.0' encoding='us-ascii'?>

<!-- XML source generated using id2xml July 2018 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY I-D.ietf-teas-actn-framework SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-teas-actn-framework.xml">
<!ENTITY I-D.ietf-teas-yang-te-topo SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-teas-yang-te-topo.xml">
<!ENTITY RFC3209 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3209.xml">
<!ENTITY RFC3630 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3630.xml">
<!ENTITY RFC4427 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4427.xml">
<!ENTITY RFC5541 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5541.xml">
<!ENTITY RFC7471 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7471.xml">
<!ENTITY I-D.ietf-teas-yang-path-computation SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-teas-yang-path-computation.xml">
]>

<rfc number="8454"
     submissionType="IETF" 
     category="info"
     consensus="yes">

        <?rfc compact="yes"?>
	<?rfc text-list-symbols="oo*+-"?>
	<?rfc subcompact="no"?>
	<?rfc sortrefs="yes"?>
	<?rfc symrefs="yes"?>
	<?rfc strict="yes"?>
	<?rfc toc="yes"?>
	<front>
	<title abbrev="ACTN Info Model">Information Model for Abstraction and Control of TE Networks (ACTN)</title>
	<author fullname="Young Lee (Editor)" initials="Y." surname="Lee">
	<organization abbrev="Huawei">Huawei Technologies</organization>
	<address><postal><street>5340 Legacy Drive</street>
	<street>Plano, TX 75023, USA</street>
	</postal>
	<phone>(469)277-5838</phone>
	<email>leeyoung@huawei.com</email>
	</address>
	</author>

	<author fullname="Sergio Belotti (Editor)" initials="S." surname="Belotti">
	<organization abbrev="Nokia">Nokia</organization>
	<address><postal><street>Via Trento, 30</street>
	<street>Vimercate, Italy</street>
	</postal>
	<email>sergio.belotti@nokia.com</email>
	</address>
	</author>

	<author fullname="Dhruv Dhody" initials="D." surname="Dhody">
	<organization abbrev="Huawei">Huawei Technologies,</organization>
	<address><postal><street>Divyashree Technopark, Whitefield</street>
	<street>Bangalore, India</street>
	</postal>
	<email>dhruv.ietf@gmail.com</email>
	</address>
	</author>

	<author fullname="Daniele Ceccarelli" initials="D." surname="Ceccarelli">
	<organization>Ericsson</organization>
	<address><postal><street>Torshamnsgatan,48</street>
	<street>Stockholm, Sweden</street>
	</postal>
	<email>daniele.ceccarelli@ericsson.com</email>
	</address>
	</author>

	<author fullname="Bin Yeong Yoon" initials="B." surname="Yoon">
	<organization>ETRI</organization>
	<address><email>byyun@etri.re.kr</email>
	</address>
	</author>

	<date month="September" year="2018"/>
	<workgroup>Teas Working Group</workgroup>

<!-- [rfced] Please insert any keywords (beyond those that appear in 
the title) for use on https://www.rfc-editor.org/search.
-->

<keyword>example</keyword>
	
	<abstract><t>
   This document provides an information model for Abstraction and Control
   of TE Networks (ACTN).</t>

	</abstract>
	</front>

	<middle>
	<section title="Introduction" anchor="section-1"><t>
   This document provides an information model for Abstraction and Control
   of TE Networks (ACTN). The information model
   described in this document covers the interface requirements
   identified in the ACTN Framework document <xref target="RFC8453"/>.</t>

	<t>
   The ACTN reference architecture <xref target="RFC8453"/> identifies a three-tier
   control hierarchy comprising the following as depicted in <xref target="ref-a-three-tier-actn-control-hierarchy"/>:</t>

	<figure title="A Three-Tier ACTN Control Hierarchy" anchor="ref-a-three-tier-actn-control-hierarchy"><artwork><![CDATA[
   o Customer Network Controllers (CNCs)
   o Multi-Domain Service Coordinator (MDSC)
   o Provisioning Network Controllers (PNCs)

+-------+                 +-------+                   +-------+
| CNC-A |                 | CNC-B |                   | CNC-C |
+-------+                 +-------+                   +-------+
     \                        |                          /
      ------------            | CMI         -------------
                  \           |            /
                   +----------------------+
                   |         MDSC         |
                   +----------------------+
                  /           |            \
      ------------            | MPI         -------------
     /                        |                          \
+-------+                 +-------+                   +-------+
|  PNC  |                 |  PNC  |                   |  PNC  |
+-------+                 +-------+                   +-------+
]]></artwork>
	</figure>
	<t>
   The two interfaces with respect to the MDSC, one north of the MDSC
   and the other south of the MDSC, are referred to as "CMI" (CNC-MDSC
   Interface) and "MPI" (MDSC-PNC Interface), respectively. This document
   models these two interfaces and derivative interfaces thereof (e.g.,
   MDSC-to-MDSC in a hierarchy of MDSCs) as a single common interface.</t>

	<section title="Terminology" anchor="section-1.1"><t>
The terms "Virtual Network (VN)" and "Virtual Network Service (VNS)" are defined in <xref target="RFC8453"/>. Other key terms and concepts, for example, "abstraction", can be found in <xref target="RFC7926"/>.</t>


	</section>

	</section>

	<section title="ACTN Common Interfaces Information Model" anchor="section-2"><t>
   This section provides an ACTN common interface information model to
   describe primitives, objects, their properties (represented as
   attributes), their relationships, and the resources for the service
   applications needed in the ACTN context.</t>

	<t>
   The standard interface is described between a client controller and
   a server controller. A client-server relationship is recursive
   between a CNC and an MDSC and between an MDSC and a PNC. In the CMI,
   the client is a CNC while the server is an MDSC. In the MPI, the
   client is an MDSC and the server is a PNC. There may also be MDSC-MDSC interfaces that need to be supported. This may arise in a
   hierarchy of MDSCs in which workloads may need to be partitioned to
   multiple MDSCs.</t>

	<t>
   Basic primitives (messages) are required between the CNC-MDSC and
   MDSC-PNC controllers. These primitives can then be used to support
   different ACTN network control functions like network topology
   requests/queries, VN service requests, path computation and connection
   control, VN service policy negotiation, enforcement, routing
	options, etc.</t>

<!--[rfced] Is "ACTN network control" redundant?  Should we update as below?

Original:
These primitives can then be used to support
different ACTN network control functions like network topology...


Perhaps:
These primitives can then be used to support
different ACTN functions like network topology...

YL>> It is not meant to be redundant. ACTN "network control" functions are a subset
of ACTN functions. 
-->

	<t>
   There are two different types of primitives depending on the type of
   interface:

<?rfc subcompact="yes"?>
<list style="symbols">

<t>Virtual Network primitives at CMI</t>
<t>Traffic Engineering primitives at MPI</t></list></t>
<?rfc subcompact="no"?>
	<t>
   As well described in <xref target="RFC8453"/>, at the CMI level, there is no
   need for detailed TE information since the basic functionality is to
   translate customer service information into VNS
   operation.</t>

	<t>
   At the MPI level, MDSC has the main scope for multi-domain
   coordination and creation of a single end-to-end (E2E) abstracted
   network view that is strictly related to TE information.</t>

	<t>As for topology, this document employs two types of topology.</t>
	<t><list style="symbols">
	<t>The first type is referred to as "virtual network topology" and
        is associated with a VN. Virtual network topology is a
        customized topology for view and control by the customer. See
        <xref target="section-3.1"/> for details.</t>

	<t>The second type is referred to as "TE topology" and is
        associated with provider network operation on which we can
        apply policy to obtain the required level of abstraction to
        represent the underlying physical network topology.</t>

	</list>
	</t>

	</section>


	<section title="Virtual Network Primitives" anchor="section-3"><t>
   This section provides a list of main VN primitives related to
   VNs and that  are necessary to satisfy the ACTN requirements
   specified in <xref target="ACTN-REQ"/>.</t>

	<t>
   The following VN Action primitives are supported:</t>

	<t><list style="symbols">
	<t>VN Instantiate</t>

	<t>VN Modify</t>

	<t>VN Delete</t>

	<t>VN Update</t>

	<t>VN Path Compute</t>

	<t>VN Query</t>

      </list>


 <!--[rfced] Please note that we see the similar terms to those in this list in draft-ietf-teas-actn-requirements-09, however, those terms use "VNS" instead of "VN".  Please confirm that "VN" is intentional in this list and elsewhere in the document.

Original:

   - VN Instantiate

   - VN Modify

   - VN Delete

   - VN Update

   - VN Path Compute

   - VN Query
   
YL>> I would keep it as is and would change the reference from [ACTN-REQ] to [ACTN-Frame] where VN terminology is used. 
-->
	</t>

	<t>
   VN Action is an object describing the main VN primitives.</t>

	<t>
   VN Action can assume one of the mentioned above primitives values.</t>

	<figure><artwork><![CDATA[
<VN Action> ::= <VN Instantiate> |

                <VN Modify> |

                <VN Delete> |

                <VN Update> |

                <VN Path Compute> |

                <VN Query>
]]></artwork>
	</figure>
	<t>
   All these actions will solely happen at CMI level between CNC and MDSC.</t>

	<section title="VN Instantiate" anchor="section-3.1"><t>
   VN Instantiate refers to an action from customers/applications to
   request the creation of VNs. VN Instantiate is for CNC-to-MDSC
   communication. Depending on the agreement between client and
   provider, VN instantiate can imply different VN operations. There
   are two types of VN instantiation:
<list style="hanging" hangIndent="12">
	<t hangText="VN Type 1:">VN is viewed as a set of edge-to-edge links (VN members).</t>

	<t hangText="VN Type 2:">VN is viewed as a VN-topology comprising virtual nodes
   and virtual links.</t></list></t>

	<t>
   Please see <xref target="RFC8453"/> for full details regarding the types of VN.</t>

	</section>

	<section title="VN Modify" anchor="section-3.2"><t>
   VN Modify refers to an action issued from customers/applications to
   modify an existing VN (i.e., an instantiated VN). VN Modify is for
   CNC-to-MDSC communication.</t>

	<t>
	  VN Modify, depending of the type of VN instantiated, can be:
	  <list style="numbers"><t>a
   modification of the characteristics of VN members (edge-to-edge
   links) in the case of VN Type 1, or</t><t>a modification of an existing
   virtual topology (e.g., adding/deleting virtual nodes/links) in the case
   of VN Type 2.</t></list></t>

	</section>

	<section title="VN Delete" anchor="section-3.3"><t>
   VN Delete refers to an action issued from customers/applications to
   delete an existing VN. VN Delete is for CNC-to-MDSC communication.</t>

<!--[rfced] The description of "VN Delete" seems less involved than
the descriptions for the other subsections of Section 3.  Please
confirm that this is intentional and text is not missing.  

YL>> It is meant to be that way. As you are deleting, you only need a few
information. 
-->

	</section>

	<section title="VN Update" anchor="section-3.4"><t>
   "VN Update" refers to any update to the VN that needs to be updated to
   the customers.

<!--[rfced] May we update this text as follows to avoid redundancy and provide a bit more clarity?

Original:
   VN Update refers to any update to the VN that needs to be updated to
   the customers.

Perhaps:
   "VN Update" refers to any change to the VN that needs to be communicated to
   the customers.

YL>> Agree with your suggestion.
-->
   VN Update is MDSC-to-CNC communication. VN Update
   fulfills a push model at the CMI level, making customers aware of any
   specific changes in the topology details related to the instantiated
   VN.</t>

	<t>
	  VN Update, depending of the type of VN instantiated, can be:
	  <list style="numbers"><t>an
   update of VN members (edge-to-edge links) in case of VN Type 1, or</t>
   <t>an update of virtual topology in case of VN Type 2.</t></list></t>

   <t>
 <!--[rfced] We are having trouble parsing this sentence.  Please clarify (especially the subject).

Original:
  The connection-related information (e.g., LSPs) update association
   with VNs will be part of the "translation" function that happens in
   MDSC to map/translate VN request into TE semantics.

YL>> Agree. It is hard to parse. Hpow about the following? 

New: 
  The connection-related information (e.g., LSPs) update associated
   with VNs will be a part of the "translation" function the MDSC performs
   in order to map/translate VN request into TE semantics.
-->
   The connection-related information (e.g., Label Switched Paths (LSPs)) update association
   with VNs will be part of the "translation" function that happens in
   MDSC to map/translate VN request into TE semantics. This information
   will be provided in case the customer optionally wants to have more-detailed TE information associated with the instantiated VN.</t>

	</section>

	<section title="VN Compute" anchor="section-3.5"><t>
   VN Compute consists of a Request and Reply. "VN Compute Request" refers to an
   action from customers/applications to request a VN computation.</t>

	<t>
   "VN Compute Reply" refers to the reply in response to VN Compute
   Request.</t>

	<t>
   A VN Compute Request/Reply is to be differentiated from a VN
   Instantiate. The purpose of VN Compute is a priori exploration to
   compute network resources availability and getting a possible VN
   view in which path details can be specified matching
   customer/applications constraints. This a priori exploration may not
   guarantee the availability of the computed network resources at the
   time of instantiation.</t>

	</section>

	<section title="VN Query" anchor="section-3.6"><t>
   "VN Query" refers to an inquiry pertaining to a VN that has already
   been instantiated. VN Query fulfills a pull model that permits
   getting a topology view.</t>

	<t>
   "VN Query Reply" refers to the reply in response to a VN Query. The
   topology view returned by a VN Query Reply would be consistent with
   the topology type instantiated for any specific VN.</t>

	</section>

	</section>

	<section title="TE Primitives" anchor="section-4"><t>
   This section provides a list of the main TE primitives necessary to
   satisfy ACTN requirements specified in <xref target="ACTN-REQ"/> related to typical
   TE operations supported at the MPI level.</t>

	<t>
   The TE action primitives defined in this section should be supported
   at the MPI consistently with the type of topology defined at the
   CMI.</t>

	<t>
   The following TE action primitives are supported:</t>

	<t><list style="symbols">
	
	<t>TE Instantiate/Modify/Delete</t>

	<t>TE Topology Update (see <xref target="section-4.4"/>. for the description)</t>

	<t>Path Compute</t>

	</list>
	</t>

	<t>
   TE Action is an object describing the main TE primitives.</t>

	<t>
   TE Action can assume one of the mentioned above primitives values.</t>

	<figure><artwork><![CDATA[
<TE Action> ::= <TE Instantiate> |

                <TE Modify> |

                <TE Delete> |

                <TE Topology Update> |
                <Path Compute> |
]]></artwork>
	</figure>
	<t>
   All these actions will solely happen at MPI level between MDSC and PNC.</t>

	<section title="TE Instantiate" anchor="section-4.1"><t>
   "TE Instantiate" refers to an action issued from MDSC to PNC to
   instantiate new TE tunnels.</t>

	</section>

	<section title="TE Modify" anchor="section-4.2"><t>
   "TE Modify" refers to an action issued from MDSC to PNC to modify
   existing TE tunnels.</t>

	</section>

	<section title="TE Delete" anchor="section-4.3"><t>
   "TE Delete" refers to an action issued from MDSC to PNC to delete
   existing TE tunnels.</t>

	</section>

	<section title="TE Topology Update (for TE Resources)" anchor="section-4.4"><t>
   TE Topology Update is a primitive specifically related to MPI used to
   provide a TE resource update between any domain controller and 
   MDSC regarding the entire content of any actual
   TE topology of a domain controller or an abstracted filtered view of TE topology depending
   on negotiated policy.</t>

	<t>
   See <xref target="TE-TOPO"/> for detailed YANG implementation of TE topology
   update.</t>

	<figure><artwork><![CDATA[
<TE Topology Update> ::= <TE-topology-list>

<TE-topology-list> ::= <TE-topology> [<TE-topology-list>]

<TE-topology> ::= [<Abstraction>] <TE-Topology-identifier> <Node-
list> <Link-list>
<Node-list> ::= <Node>[<Node-list>]

<Node> ::= <Node> <TE Termination Point-list>

<TE Termination Point-list> ::= <TE Termination Point> [<TE-
Termination Point-list>]

<Link-list> ::= <Link>[<Link-list>]

Where
]]></artwork>
	</figure>
	<t>
   Abstraction provides information on the level of abstraction (as
   determined a priori).</t>

	<t>
   TE-topology-identifier is an identifier that identifies a specific
   te-topology, e.g., te-types:te-topology-id <xref target="TE-TOPO"/>.</t>

	<t>
   Node-list is detailed information related to a specific node
   belonging to a te-topology, e.g., te-node-attributes <xref target="TE-TOPO"/>.</t>

	<t>
   Link-list is information related to the specific link related
   belonging to a te-topology, e.g., te-link-attributes <xref target="TE-TOPO"/>.</t>

	<t>
   TE Termination Point-list is detailed information associated with
   the termination points of a te-link related to a specific node, e.g.,
   interface-switching-capability <xref target="TE-TOPO"/>.</t>

	</section>

	<section title="Path Compute" anchor="section-4.5"><t>
   Path Compute consists of Request and Reply. "Path Compute Request" refers to an
   action from MDSC to PNC to request a path computation.</t>

	<t>
   "Path Compute Reply" refers to the reply in response to the Path Compute
   Request.</t>

	<t>
   The context of Path Compute is described in <xref target="Path-Compute"/>.</t>

	</section>

	</section>

	<section title="VN Objects" anchor="section-5"><t>
   This section provides a list of objects associated to VN action
   primitives.</t>

	<section title="VN Identifier" anchor="section-5.1"><t>
   A VN Identifier is a unique identifier of the VN.</t>

	</section>

	<section title="VN Service Characteristics" anchor="section-5.2"><t>
   VN Service Characteristics describes the customer/application
   requirements against the VNs to be instantiated.</t>

	<figure><artwork><![CDATA[
<VN Service Characteristics> ::= <VN Connectivity Type>

                                 <VN Directionality>

                                 (<VN Traffic Matrix>...)

                                 <VN Survivability>

Where

<VN Connectivity Type> ::= <P2P>|<P2MP>|<MP2MP>|<MP2P>|<Multi-
destination>
]]></artwork>
	</figure>
	<t>
   The Connectivity Type identifies the type of required VN Service. In
   addition to the classical types of services (e.g., P2P/P2MP, etc.),
   ACTN defines the "multi-destination" service that is a new P2P
   service where the endpoints are not fixed. They can be chosen among
   a list of preconfigured endpoints or dynamically provided by the
   CNC.</t>

	<t>
   VN Directionality indicates if a VN is unidirectional or
   bidirectional. This implies that each VN member that belongs to the
   VN has the same directionality as the VN.</t>

	<figure><artwork><![CDATA[
<VN Traffic Matrix> ::= <Bandwidth>

                        [<VN Constraints>]
]]></artwork>
	</figure>
	<t>
   The VN Traffic Matrix represents the traffic matrix parameters for
   the required service connectivity. Bandwidth is a mandatory
   parameter, and a number of optional constraints can be specified in
   the VN Constraints (e.g., diversity, cost). They can include
   objective functions and TE metric bounds as specified in <xref target="RFC5541"/>.</t>

	<t>Further details on the VN constraints are specified below:</t>

<figure><artwork><![CDATA[
      <VN Constraints> ::= [<Layer Protocol>]
                           [<Diversity>]

                           ( <Metric> | <VN Objective Function> )
]]></artwork></figure>
<t><list style="empty">
  <t> Where:</t>

     <t>Layer Protocol identifies the layer topology at which the VN
      service is requested. It could be, for example, MPLS, Optical Data Unit (ODU), and Optical Channel (OCh).</t>

     <t>Diversity allows asking for diversity constraints for a VN
      Instantiate/Modify or a VN Path Compute. For example, a new VN or
      a path is requested in total diversity from an existing one (e.g.,
      diversity exclusion).</t>
    </list></t>
<figure><artwork><![CDATA[
         <Diversity> ::= (<VN-exclusion> (<VN-id>...)) |

                  (<VN-Member-exclusion> (<VN-Member-id>...))
]]></artwork></figure>

<t><list style="empty">
    <t>Metric can include all the Metrics (cost, delay, delay variation,
      latency) and bandwidth utilization parameters defined and referenced
      by <xref target="RFC3630"/> and <xref target="RFC7471"/>.</t>

     <t>As for VN Objective Function, see <xref target="section-5.4"/>.</t>
   </list></t>
<t>
   VN Survivability describes all attributes related to the VN recovery
   level and its survivability policy enforced by the
   customers/applications.</t>

	<figure><artwork><![CDATA[
   <VN Survivability> ::= <VN Recovery Level>

                           [<VN Tunnel Recovery Level>]

                           [<VN Survivability Policy>]
      Where:

      VN Recovery Level is a value representing the requested level
      of resiliency required against the VN.  The following values
      are defined:

      o  Unprotected VN
      
      o  VN with per tunnel recovery: The recovery level is defined
         against the tunnels composing the VN, and it is specified in
         the VN Tunnel Recovery Level.

      <VN Tunnel Recovery Level> ::= <0:1>|<1+1>|<1:1>|<1:N>|<M:N>|
                           <On the fly restoration>
]]></artwork></figure>

	<t><list style="hanging" hangIndent="6"><t>
         The VN Tunnel Recovery Level indicates the type of protection
         or restoration mechanism applied to the VN. It augments the
         recovery types defined in <xref target="RFC4427"/>.</t>

	</list>
	</t>

	<figure><artwork><![CDATA[
      <VN Survivability Policy> ::= [<Local Reroute Allowed>]

                                    [<Domain Preference>]

                                    [<Push Allowed>]

                                    [<Incremental Update>]

      Where:
]]></artwork>
	</figure>
	<t><list hangIndent="6" style="hanging"><t>
          Local Reroute Allowed is a delegation policy to the Server on whether or not to
          allow a local reroute fix upon a failure of the
          primary LSP.</t>

<t>
          Domain Preference is only applied on the MPI where the MDSC
          (client) provides a domain preference to each PNC (server),
          e.g., when an inter-domain link fails, then PNC can choose
          the alternative peering with this info.</t>
<t>
          Push Allowed is a policy that allows a server to trigger an
          updated VN topology upon failure without an explicit request
          from the client. Push action can be set as default unless
          otherwise specified.</t>

<t>
          Incremental Update is another policy that triggers an
          incremental update from the server since the last period of
          update. Incremental update can be set as default unless
          otherwise specified.</t>

	</list>
	</t>

      </section>

<!--[rfced] We have updated to use "endpoint" instead of "end-point" or "end point" throughout the text for consistency with the RFC series.  However, we have left things such as "VN End-Point Object" as we assume an update here is not wanted.  If we may use "Endpoint" instead for cases similar to this, please let us know.  

YL>> It is fine as is. 
-->

	<section title="VN Endpoint" anchor="section-5.3"><t>
   VN End-Point Object describes the VN's customer endpoint
   characteristics.</t>

	<figure><artwork><![CDATA[
<VN End-Point> ::= (<Access Point Identifier>

                   [<Access Link Capability>]
                   [<Source Indicator>])...

   Where:
]]></artwork>
	</figure>
	<t><list hangIndent="2" style="hanging"><t>
     Access Point Identifier represents a unique identifier of the
     client endpoint. They are used by the customer to ask for the
     setup of a virtual network instantiation. A VN End-Point is
     defined against each AP in the network and is shared between
     customer and provider. Both the customer and the provider will map
     it against their own physical resources.</t>

<t>
     Access Link Capability identifies the capabilities of the access
     link related to the given access point (e.g., max-bandwidth,
     bandwidth availability, etc.).</t>
<t>
     Source Indicator indicates whether or not an endpoint is the source.</t>

	</list>
	</t>

	</section>

	<section title="VN Objective Function" anchor="section-5.4"><t>
   The VN Objective Function applies to each VN member (i.e., each E2E
   tunnel) of a VN.</t>

	<t>
   The VN Objective Function can reuse objective functions defined in
   Section 4 of <xref target="RFC5541"/>.</t>

	<t>
   For a single path computation, the following objective functions are
   defined:</t>


	<t><list style="symbols">
	<t>MCP is the Minimum Cost Path with respect to a specific
             metric (e.g., shortest path).</t>
	<t>MLP is the Minimum Load Path, meaning find a path
             composted by te-link least loaded.</t>
	<t>MBP is the Maximum residual Bandwidth Path.</t>
      </list></t>


	<t>
   For a concurrent path computation, the following objective functions
   are defined:</t>


   <t><list style="symbols">
          <t>MBC is to Minimize aggregate Bandwidth Consumption.</t>
          <t>MLL is to Minimize the Load of the most loaded Link.</t>
          <t>MCC is to Minimize the Cumulative Cost of a set of paths.</t>
	</list>
	</t>

	</section>

	<section title="VN Action Status" anchor="section-5.5"><t>
   VN Action Status is the status indicator whether or not the VN has been
   successfully instantiated, modified, or deleted in the server
   network in response to a particular VN action.</t>

	<t>
   Note that this action status object can be implicitly indicated and,
   thus, not included in any of the VN primitives discussed in <xref target="section-3"/>.</t>

	</section>

	<section title="VN Topology" anchor="section-5.6"><t>
   When a VN is seen by the customer as a topology, it is referred to
   as "VN topology". This is associated with VN Type 2, which is composed
   of virtual nodes and virtual links.</t>

	<figure><artwork><![CDATA[
<VN Topology> ::= <Virtual node list> <Virtual link list>

<Virtual node list> ::= <Virtual node> [<Virtual node list>]

<Virtual link list> :: = <Virtual link>  [<Virtual link list>]
]]></artwork></figure>

	</section>

	<section title="VN Member" anchor="section-5.7"><t>
   VN Member describes details of a VN Member that is a list of a set
   of VN Members represented as VN_Member_List.</t>

	<figure><artwork><![CDATA[
<VN_Member_List> ::= <VN Member> [<VN_Member_List>]

Where <VN Member> ::= <Ingress VN End-Point>

                      [<VN Associated LSP>]

                      <Egress VN End-Point>
]]></artwork>
	</figure>
	<t>
   Ingress VN End-Point is the VN End-Point information for the ingress
   portion of the AP. See <xref target="section-5.3"/> for VN End-Point details.</t>

	<t>
   Egress VN End-Point is the VN End-Point information for the egress
   portion of the AP. See <xref target="section-5.3"/> for VN End-Point details.</t>

	<t>
   VN Associated LSP describes the instantiated LSPs in the Provider's
   network for the VN Type 1. It describes the instantiated LSPs over
   the VN topology for VN Type 2.</t>

	<section title="VN Computed Path" anchor="section-5.7.1"><t>
   The VN Computed Path is the list of paths obtained after the VN path
   computation request from a higher controller. Note that the computed
   path is to be distinguished from the LSP. When the computed path is
   signaled in the network (and thus the resource is reserved for that
   path), it becomes an LSP.</t>

	<figure><artwork><![CDATA[
<VN Computed Path> ::= (<Path>...)
]]></artwork>
	</figure>
	</section>

	<section title="VN Service Preference" anchor="section-5.7.2"><t>
   This section provides the VN Service preference. VN Service is defined
   in <xref target="section-2"/>.</t>

	<figure><artwork><![CDATA[
<VN Service Preference> ::= [<Location Service Preference >]

                        [<Client-specific Preference >]

                        [<End-Point Dynamic Selection Preference >]

Where
]]></artwork>
	</figure>
	<t><list hangIndent="3" style="hanging"><t>
      Location Service Preference describes the End-Point Location's
      (e.g., data centers (DCs)) support for certain Virtual Network Functions
      (VNFs) (e.g., security function, firewall capability, etc.) and
      is used to find the path that satisfies the VNF constraint.</t>

<t>
      Client-specific Preference describes any preference related to
      VNS that an application/client can enforce
      via CNC towards lower-level controllers. For example, CNC can
      enforce client-specific preferences, e.g., selection of a
      destination DC from the set of candidate DCs
      based on some criteria in the context of Virtual Machine (VM) migration. MSDC/PNC
      should then provide the DC interconnection that supports
      the Client-specific Preference.</t>

<t>
      End-Point Dynamic Selection Preference describes if the endpoint
      (e.g., DC) can support load-balancing, disaster recovery,
      or VM migration and so can be part of the selection by MDSC
      following service Preference enforcement by CNC.</t>

	</list>
	</t>

	</section>

	</section>

	</section>

	<section title="TE Objects" anchor="section-6"><section title="TE Tunnel Characteristics" anchor="section-6.1"><t>
   Tunnel Characteristics describes the parameters needed to configure
   TE tunnel.</t>

	<figure><artwork><![CDATA[
<TE Tunnel Characteristics> ::= [<Tunnel Type>]

                                <Tunnel Id>

                                [<Tunnel Layer>]

                                [<Tunnel end-point>]

                                [<Tunnel protection-restoration>]

                                <Tunnel Constraints>

                               [<Tunnel Optimization>]

Where

<Tunnel Type> ::= <P2P>|<P2MP>|<MP2MP>|<MP2P>
]]></artwork>
	</figure>
	<t>
   The Tunnel Type identifies the type of required tunnel. In this
   document, only the P2P model is provided.</t>

	<t>
   Tunnel Id is the TE tunnel identifier</t>

	<t>
   Tunnel Layer represents the layer technology of the LSPs supporting
   the tunnel</t>

	<figure><artwork><![CDATA[
<Tunnel End Points> ::= <Source> <Destination>

<Tunnel protection-restoration> ::= <prot 0:1>|<prot 1+1>|<prot
1:1>|<prot 1:N>|prot <M:N>|<restoration>
Tunnel Constraints are the base tunnel configuration constraints
parameters.

Where <Tunnel Constraints> ::= [<Topology Id>]

                               [<Bandwidth>]

                               [<Disjointness>]

                               [<SRLG>]

                               [<Priority>]

                               [<Affinities>]

                               [<Tunnel Optimization>]

                               [<Objective Function>]

Topology Id references the topology used to compute the tunnel path.

Bandwidth is the bandwidth used as a parameter in path computation.

<Disjointness> ::= <node> | <link> | <srlg>
]]></artwork>
	</figure>
	<t>
   Disjointness provides the type of resources from which the tunnel
   has to be disjointed.</t>

	<t>
   Shared Risk Link Group (SRLG) is a group of physical resources impacted by the same risk from
   which an E2E tunnel is required to be disjointed.</t>

	<figure><artwork><![CDATA[
<Priority> ::= <Holding Priority> <Setup Priority>

where
]]></artwork>
	</figure>
	<t>
   Setup Priority indicates the level of priority for taking resources
   from another tunnel <xref target="RFC3209"/>.</t>

	<t>
   Holding Priority indicates the level of priority to hold resources
   avoiding preemption from another tunnel <xref target="RFC3209"/>.</t>

	<t>
   Affinities represents the structure to validate a link belonging to the path
   of the tunnel <xref target="RFC3209"/>.</t>

	<figure><artwork><![CDATA[
<Tunnel Optimization> ::= <Metric> | <Objective Function>
]]></artwork>
	</figure>
	
<t>Metric can include all the Metrics (cost, delay, delay variation,
latency) and bandwidth utilization parameters defined and referenced by
<xref target="RFC3630"/> and <xref target="RFC7471"/>.</t>

<figure><artwork><![CDATA[
<Objective Function> ::= <objective function type>

<objective function type> ::= <MCP> | <MLP> | <MBP> | <MBC> | <MLL>
| <MCC>
]]></artwork>
	</figure>
<t>See <xref target="section-5.4"/> for a description of objective function type.</t>

	</section>

	</section>

	<section title="Mapping of VN Primitives with VN Objects" anchor="section-7"><t>
   This section describes the mapping of VN primitives with VN Objects
   based on <xref target="section-5"/>.</t>

	<figure><artwork><![CDATA[
<VN Instantiate> ::= <VN Service Characteristics>

                     <VN Member-List>

                     [<VN Service Preference>]

                     [<VN Topology>]

<VN Modify> ::= <VN identifier>

                <VN Service Characteristics>

                <VN Member-List>

                [<VN Service Preference>]

                [<VN Topology>]

<VN Delete> ::= <VN Identifier>

<VN Update> :: = <VN Identifier>
                 [<VN Member-List>]

                 [<VN Topology>]

<VN Path Compute Request> ::= <VN Service Characteristics>

                              <VN Member-List>

                              [<VN Service Preference>]

<VN Path Compute Reply> ::= <VN Computed Path>

<VN Query> ::= <VN Identifier>

<VN Query Reply> ::= <VN Identifier>

                     <VN Associated LSP>

                     [<TE Topology Reference>]
]]></artwork>
	</figure>
	</section>

	<section title="Mapping of TE Primitives with TE Objects" anchor="section-8"><t>
   This section describes the mapping of TE primitives with TE Objects
   based on <xref target="section-6"/>.</t>

	<figure><artwork><![CDATA[
<TE Instantiate> ::= <TE Tunnel Characteristics>

<TE Modify> ::=  <TE Tunnel Characteristics>

<TE Delete> ::= <Tunnel Id>
<TE Topology Update> ::= <TE-topology-list>

<Path Compute Request> ::= <TE Tunnel Characteristics>

<Path Compute Reply> ::= <TE Computed Path>

                         <TE Tunnel Characteristics>
]]></artwork>
	</figure>
	</section>

	<section title="Security Considerations" anchor="section-9"><t>
   The ACTN information model is not directly relevant when considering
   potential security issues. Rather, it defines a set of interfaces
   for TE networks. The underlying protocols,
   procedures, and implementations used to exchange the information
   model described in this document will need to secure the request and
   control of resources with proper authentication and authorization
   mechanisms. In addition, the data exchanged over the ACTN interfaces
   discussed in this document requires verification of data integrity.
   Backup or redundancies should also be available to restore the
   affected data to its correct state.</t>

	<t>
   Implementations of the ACTN framework will have distributed
   functional components that will exchange an instantiation
   that adheres to this information model. Implementations should
   encrypt data that flows between them, especially when they are
   implemented at remote nodes and irrespective of whether these data
   flows are on external or internal network interfaces. The
   information model may contain customer, application, and network data
   that, for business or privacy reasons, may be considered sensitive. It
   should be stored only in an encrypted data store.</t>

	<t>
   The ACTN security discussion is further split into two specific
   interfaces:</t>

<t><list style="symbols"><t>Interface between the CNC and MDSC, CNC-MDSC Interface (CMI)</t>

<t>Interface between the MDSC and PNC, MDSC-PNC Interface (MPI).</t>

	</list>
	</t>

	<t>
   See the detailed discussion of the CMI and MPI in Sections 9.1 and 9.2 (respectively) in <xref target="RFC8453"/>.</t>

	<t>
   The conclusion is that all data models and protocols used to realize
   the ACTN information model should have rich security features, as discussed
   in this section. Additional security risks may still exist.
   Therefore, discussion and applicability of specific security
   functions and protocols will be better described in documents that
   are use case and environment specific.</t>

	</section>

	<section title="IANA Considerations" anchor="section-10"><t>
	  This document has no IANA actions.</t>

	</section>

	</middle>

	<back>
	  <references title="Normative References">
	    
<!--[rfced] We see the citation [ACTN-REQ] used in the text with no corresponding reference entry.  We have updated to point to draft-ietf-teas-actn-requirements as an informative reference as was done in draft-ietf-teas-actn-framework-15.  Please let us know any objections.

YL>> As discussed in the above, please replace [ACTN-REQ] with [ACTN-Frame], which is RFC8453 (to be). 
-->

<!--draft-ietf-teas-actn-framework-15; companion document -->
 <?rfc include="reference.RFC.8453"?>
	</references>
	<references title="Informative References">

<?rfc include="reference.RFC.7926"?>
<!--draft-ietf-teas-actn-requirements-09; Expired -->
<reference anchor='ACTN-REQ'>
<front>
<title>Requirements for Abstraction and Control of TE Networks</title>

<author initials='Y' surname='Lee' fullname='Young Lee'>
    <organization />
</author>

<author initials='D' surname='Ceccarelli' fullname='Daniele Ceccarelli'>
    <organization />
</author>

<author initials='T' surname='Miyasaka' fullname='Takuya Miyasaka'>
    <organization />
</author>

<author initials='J' surname='Shin' fullname='Jongyoon Shin'>
    <organization />
</author>

<author initials='K' surname='Lee' fullname='Kwang-koog Lee'>
    <organization />
</author>

<date month='March' day='2' year='2018' />

<abstract><t>This document provides a set of functional requirements for abstraction and control of Traffic Engineering networks to facilitate virtual network operation via the creation of a single virtualized network or a seamless service. This supports operators in viewing and controlling different domains (at any dimension: applied technology, administrative zones, or vendor-specific technology islands) as a single virtualized network.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-ietf-teas-actn-requirements-09' />

</reference>
	  
<!--draft-ietf-teas-yang-te-topo-18; in MISSREF as of 8/9/18  -->
<reference anchor='TE-TOPO'>
<front>
<title>YANG Data Model for Traffic Engineering (TE) Topologies</title>

<author initials='X' surname='Liu' fullname='Xufeng Liu'>
    <organization />
</author>

<author initials='I' surname='Bryskin' fullname='Igor Bryskin'>
    <organization />
</author>

<author initials='V' surname='Beeram' fullname='Vishnu Beeram'>
    <organization />
</author>

<author initials='T' surname='Saad' fullname='Tarek Saad'>
    <organization />
</author>

<author initials='H' surname='Shah' fullname='Himanshu Shah'>
    <organization />
</author>

<author initials='O' surname='Dios' fullname='Oscar de Dios'>
    <organization />
</author>

<date month='June' year='2018' />

<abstract><t>This document defines a YANG data model for representing, retrieving and manipulating Traffic Engineering (TE) Topologies. The model serves as a base model that other technology specific TE Topology models can augment.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-ietf-teas-yang-te-topo-18' />

</reference>

	&RFC3209;
	&RFC3630;
	&RFC4427;
	&RFC5541;
	&RFC7471;


<!--draft-ietf-teas-yang-path-computation-02; I-D Exists -->	
<reference anchor='Path-Compute'>
<front>
<title>Yang model for requesting Path Computation</title>

<author initials='I' surname='Busi' fullname='Italo Busi'>
    <organization />
</author>

<author initials='S' surname='Belotti' fullname='Sergio Belotti'>
    <organization />
</author>

<author initials='V' surname='Lopezalvarez' fullname='Victor Lopezalvarez'>
    <organization />
</author>

<author initials='O' surname='Dios' fullname='Oscar de Dios'>
    <organization />
</author>

<author initials='A' surname='Sharma' fullname='Anurag Sharma'>
    <organization />
</author>

<author initials='Y' surname='Shi' fullname='Yan Shi'>
    <organization />
</author>

<author initials='R' surname='Vilata' fullname='Ricard Vilata'>
    <organization />
</author>

<author initials='K' surname='Sethuraman' fullname='Karthik Sethuraman'>
    <organization />
</author>

<date month='June' year='2018' />

<abstract><t>There are scenarios, typically in a hierarchical SDN context, where the topology information provided by a TE network provider may not be sufficient for its client to perform end-to-end path computation. In these cases the client would need to request the provider to calculate some (partial) feasible paths.  This document defines a YANG data model for a stateless RPC to request path computation. This model complements the stateful solution defined in [TE-TUNNEL].  Moreover this document describes some use cases where a path computation request, via YANG-based protocols (e.g., NETCONF or RESTCONF), can be needed.</t></abstract>

</front>

<seriesInfo name='Work in Progress,' value='draft-ietf-teas-yang-path-computation-02' />

</reference>

	</references>


	<section title="Contributors" anchor="section-13" numbered="no">

<figure><artwork><![CDATA[
Haomian Zheng
Huawei Technologies
Email: zhenghaomian@huawei.com

Xian Zhang
Huawei Technologies
Email: zhang.xian@huawei.com
]]></artwork>
	</figure>
	</section>

	</back>

	</rfc>
	
