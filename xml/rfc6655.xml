<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc2246 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2246.xml">
<!ENTITY rfc4346 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4346.xml">
<!ENTITY rfc4347 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4347.xml">
<!ENTITY rfc4309 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4309.xml">
<!ENTITY rfc4366 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4366.xml">
<!ENTITY rfc5288 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5288.xml">
<!ENTITY ietf-tls-ctr SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-tls-ctr.xml">
<!ENTITY mcgrew-auth-enc SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.mcgrew-auth-enc.xml">
<!ENTITY rfc4279 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4279.xml">
<!ENTITY rfc4309 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4309.xml">
<!ENTITY rfc5246 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">
<!ENTITY rfc5116 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5116.xml">
<!ENTITY rfc5430 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5430.xml">
<!ENTITY rfc5246 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">
<!ENTITY rfc5487 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5487.xml">
<!ENTITY rfc6347 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY rfc6066 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6066.xml">

]>

<?rfc toc="yes"?>
<?rfc tocdepth="6"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc compact="yes"?>  
<?rfc subcompact="no"?>

<rfc number="6655" ipr="trust200902" category="std" submissionType="IETF" consensus="yes">
	<front>
		<title abbrev="AES-CCM Ciphersuites">AES-CCM Cipher Suites for
Transport Layer Security (TLS)</title>
		<author fullname="David McGrew" initials="D" surname="McGrew">
			<organization>Cisco Systems</organization>
			<address><postal>
					<street>13600 Dulles Technology Drive</street>
					<city>Herndon </city>
					<code>20171</code>
					<region>VA</region>
					<country>USA</country>
				</postal><email> mcgrew@cisco.com </email></address>
			
		</author>


		<author fullname="Daniel V. Bailey" initials="D"surname="Bailey">
			<organization>RSA, Security Division of EMC</organization>
			<address><postal>
					<street>174 Middlesex Tpke.</street>
					<city>Bedford</city>
					<code>01463</code>
					<region>MA</region>
					<country>USA</country>
				</postal><email> dbailey@rsa.com
</email></address>
			
		</author> 

		<date month="July" year="2012"/>
		<area> Security Area </area>
		<workgroup> TLS Working Group </workgroup>


<!-- [rfced] Please insert any keywords (beyond those that appear in
the title) for use on http://www.rfc-editor.org/rfcsearch.html. -->

<keyword>example</keyword>

<!-- [rfced] We note inconsistencies in the terms below throughout the text.
Should these be uniform? If so, please let us know which form is 
preferred.

ciphersuite v. cipher suite v. CipherSuite
* We note that RFCs 5288 and 5487, which are normative references in this 
document, use "cipher suite". However, all forms are used in past RFCs.

Authenticated Encryption with Associated Data v. authenticated encryption with 
associated data
-->


		<abstract>
		  <t>This memo describes the use of the Advanced
		    Encryption Standard (AES) in the Counter with Cipher Block
Chaining - Message Authentication Code (CBC-MAC) Mode (CCM) of operation within Transport
		    Layer Security (TLS) and Datagram TLS (DTLS) to provide confidentiality
		    and data origin authentication.  The AES-CCM
		    algorithm is amenable to compact implementations,
		    making it suitable for constrained
		    environments.</t>
		</abstract>

	</front>
	<middle>

<section title="Introduction">
  
  <t>This document describes the use of Advanced Encryption Standard
  (AES) <xref target="AES"></xref> in Counter with CBC-MAC Mode (CCM)
  <xref target="CCM"></xref> in several TLS ciphersuites.  AES-CCM
  provides both authentication and confidentiality and uses as its
  only primitive the AES encrypt operation (the AES decrypt operation
  is not needed).  This makes it amenable to compact implementations,
  which is advantageous in constrained environments.  Of course,
  adoption outside of constrained environments is necessary to enable
  interoperability, such as that between web clients and embedded
  servers or between embedded clients and web servers.  The use of
  AES-CCM has been specified for IPsec Encapsulating Security Payload (ESP) <xref
  target="RFC4309"></xref> and 802.15.4 wireless networks <xref
  target="IEEE802154"></xref>.
</t>

<t>
  Authenticated encryption, in addition to providing confidentiality
  for the plaintext that is encrypted, provides a way to check its
  integrity and authenticity.  Authenticated Encryption with
  Associated Data, or AEAD <xref target="RFC5116"/>, adds the ability
  to check the integrity and authenticity of some associated data that
  is not encrypted.  This document utilizes the AEAD facility within TLS
  1.2 <xref target="RFC5246"></xref> and the AES-CCM-based AEAD
  algorithms defined in <xref target="RFC5116"/>.  Additional AEAD
  algorithms are defined that use AES-CCM but have shorter
  authentication tags and are therefore more suitable for use across
  networks in which bandwidth is constrained and message sizes may be
  small.
</t>
<t>
The ciphersuites defined in this document use RSA or Pre-Shared Key
(PSK) as their key establishment mechanism; these ciphersuites can be
used with DTLS <xref target="RFC6347"></xref>.  Since the ability
to use AEAD ciphers was introduced in DTLS version 1.2, the ciphersuites
defined in this document cannot be used with earlier versions of that protocol.  
</t>

			
</section>
<section title="Conventions Used in This Document">
		<t>The key words "MUST", "MUST NOT", "REQUIRED",
   "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
   and "OPTIONAL" in this document are to be interpreted as described
   in <xref target="RFC2119"></xref>.</t>
		</section>

		<section title="RSA-Based AES-CCM Cipher Suites" anchor="rsasuite">
			<t>The ciphersuites defined in this document
			are based on the AES-CCM Authenticated
			Encryption with Associated Data (AEAD)
			algorithms AEAD_AES_128_CCM and
			AEAD_AES_256_CCM described
			in <xref target="RFC5116"></xref>.

<!-- IANA FLAG -->			  
The following RSA-based ciphersuites are defined:</t>
<?rfc subcompact="yes" ?>
				
<figure><artwork><![CDATA[
          CipherSuite TLS_RSA_WITH_AES_128_CCM       = {0xC0,0x9C}
          CipherSuite TLS_RSA_WITH_AES_256_CCM       = {0xC0,0x9D)
          CipherSuite TLS_DHE_RSA_WITH_AES_128_CCM   = {0xC0,0x9E}
          CipherSuite TLS_DHE_RSA_WITH_AES_256_CCM   = {0xC0,0x9F}
          CipherSuite TLS_RSA_WITH_AES_128_CCM_8     = {0xC0,0xA0}
          CipherSuite TLS_RSA_WITH_AES_256_CCM_8     = {0xC0,0xA1)
          CipherSuite TLS_DHE_RSA_WITH_AES_128_CCM_8 = {0xC0,0xA2}
          CipherSuite TLS_DHE_RSA_WITH_AES_256_CCM_8 = {0xC0,0xA3}
]]></artwork></figure>


<?rfc subcompact="no" ?>

<t>These ciphersuites make use of the AEAD capability in TLS
1.2 <xref target="RFC5246"></xref>.  
Each uses AES-CCM; those that end in "_8" have an 8-octet authentication tag,
while the other ciphersuites have 16-octet authentication tags.
</t>
<t>

  The Hashed Message Authentication Code (HMAC) truncation option described in Section 7 of
  <xref target="RFC6066"/> (which negotiates the "truncated_hmac" TLS
  extension) does not have an effect on cipher suites that do not use
  HMAC.
</t>

<t>
The "nonce" input to the AEAD algorithm is exactly that of <xref target="RFC5288"></xref>:
  the "nonce" SHALL be 12 bytes long and is constructed as follows:
(this is an example of a "partially explicit" nonce; see Section 3.2.1 in
<xref target="RFC5116"></xref>).
</t>

<figure >
        <artwork>
                    struct {
          opaque salt[4];
          opaque nonce_explicit[8];
                    } CCMNonce;
</artwork>
</figure>

<t>
The salt is the "implicit" part of the nonce and is not sent in the
packet.  Instead, the salt is generated as part of the handshake
process: it is either the client_write_IV (when the client is
sending) or the server_write_IV (when the server is sending).  The
salt length (SecurityParameters.fixed_iv_length) is 4 octets.

The nonce_explicit is the "explicit" part of the nonce.  It is chosen
by the sender and is carried in each TLS record in the
GenericAEADCipher.nonce_explicit field.  The nonce_explicit length
(SecurityParameters.record_iv_length) is 8 octets.

Each value of the nonce_explicit MUST be distinct for each distinct
invocation of the GCM encrypt function for any fixed key.  Failure to
meet this uniqueness requirement can significantly degrade security.
The nonce_explicit MAY be the 64-bit sequence number (as long as those
values are assured to meet the distinctness requirement).
</t>

<t>
  In DTLS, the 64-bit seq_num is the 16-bit epoch concatenated with the
  48-bit seq_num.
</t>

<t>
When the nonce_explicit is equal to the sequence number, the CCMNonce
will have the structure of the CCMNonceExample given below.
</t>

<figure >
        <artwork  align="center">
struct {
 uint32 client_write_IV; // low order 32-bits
 uint64 seq_num;         // TLS sequence number
} CCMClientNonce.


struct {
 uint32 server_write_IV; // low order 32-bits
 uint64 seq_num; // TLS sequence number
} CCMServerNonce.


struct {
 case client:
   CCMClientNonce;
 case server:
   CCMServerNonce:
} CCMNonceExample;
</artwork>
</figure>



  <t>These ciphersuites make use of the default TLS 1.2 Pseudorandom
    Function (PRF), which uses HMAC with the SHA-256 hash
    function. The RSA and DHE_RSA, key exchange is performed as defined
    in <xref target="RFC5246"></xref>.
  </t>

		</section>

		<section title="PSK-Based AES-CCM Cipher Suites" anchor="psksuite">
			<t>As in <xref target="rsasuite"></xref>, 
			these ciphersuites follow <xref target="RFC5116"></xref>.
			The PSK and DHE_PSK key exchange is performed as in <xref target="RFC4279"/>.
			The following ciphersuites are defined:</t>

<!-- IANA FLAG -->

<?rfc subcompact="yes" ?>
			

<figure><artwork><![CDATA[
          CipherSuite TLS_PSK_WITH_AES_128_CCM       = {0xC0,0xA4}
          CipherSuite TLS_PSK_WITH_AES_256_CCM       = {0xC0,0xA5)
          CipherSuite TLS_DHE_PSK_WITH_AES_128_CCM   = {0xC0,0xA6}
          CipherSuite TLS_DHE_PSK_WITH_AES_256_CCM   = {0xC0,0xA7}
          CipherSuite TLS_PSK_WITH_AES_128_CCM_8     = {0xC0,0xA8}
          CipherSuite TLS_PSK_WITH_AES_256_CCM_8     = {0xC0,0xA9)
          CipherSuite TLS_PSK_DHE_WITH_AES_128_CCM_8 = {0xC0,0xAA}
          CipherSuite TLS_PSK_DHE_WITH_AES_256_CCM_8 = {0xC0,0xAB}
]]></artwork></figure>

			
<?rfc subcompact="no" ?>

<t>
The "nonce" input to the AEAD
algorithm is defined as in <xref target="rsasuite"></xref>.  	
</t>
  <t>These ciphersuites make use of the default TLS 1.2 Pseudorandom
    Function (PRF), which uses HMAC with the SHA-256 hash
    function. The PSK and DHE_PSK key exchange is performed as defined
    in <xref target="RFC5487"></xref>.
  </t>

		</section>

		<section title="TLS Versions">
<t>These ciphersuites make use of the authenticated encryption with
additional data (AEAD) defined in TLS 1.2 <xref
target="RFC5288"></xref>.  Earlier versions of TLS do not have support
for AEAD; for instance, the TLSCiphertext structure does not have the
"aead" option in TLS 1.1.  Consequently, these ciphersuites MUST NOT be
negotiated in older versions of TLS.  Clients MUST NOT offer these
cipher suites if they do not offer TLS 1.2 or later.  Servers that
select an earlier version of TLS MUST NOT select one of these cipher
suites.  Because TLS has no way for the client to indicate that it
supports TLS 1.2 but not earlier, a non-compliant server might
potentially negotiate TLS 1.1 or earlier and select one of the cipher
suites in this document.  Clients MUST check the TLS version and
generate a fatal "illegal_parameter" alert if they detect an incorrect
version.</t>
			
		</section>

	<section anchor="newaead" title="New AEAD Algorithms">
	<t>
	  The following AEAD algorithms are defined:</t>
          <t>
	  
<?rfc subcompact="yes" ?>

<figure><artwork><![CDATA[
     AEAD_AES_128_CCM_8     = 18 
     AEAD_AES_256_CCM_8     = 19
]]></artwork></figure>	

<?rfc subcompact="no" ?>
	</t>
	
	  <section title="AES-128-CCM with an 8-Octet Integrity Check Value (ICV)">
	    <t>
	      
   The AEAD_AES_128_CCM_8 authenticated encryption algorithm is
   identical to the AEAD_AES_128_CCM algorithm (see Section 5.3 of
   <xref target="RFC5116"/>), except that it uses 8 octets for
   authentication, instead of the full 16 octets used by
   AEAD_AES_128_CCM.  The AEAD_AES_128_CCM_8 ciphertext consists of
   the ciphertext output of the CCM encryption operation concatenated
   with the 8-octet authentication tag output of the CCM encryption
   operation.  Test cases are provided in <xref target="CCM"/>.  The input and output
   lengths are the same as those for AEAD_AES_128_CCM.  An AEAD_AES_128_CCM_8
   ciphertext is exactly 8 octets longer than its corresponding
   plaintext.

	  </t>
	    </section>

	  <section title="AES-256-CCM with a 8-Octet Integrity Check Value (ICV)">
	    <t>
	      
   The AEAD_AES_256_CCM_8 authenticated encryption algorithm is
   identical to the AEAD_AES_256_CCM algorithm (see Section 5.4 of
   <xref target="RFC5116"/>), except that it uses 8 octets for
   authentication, instead of the full 16 octets used by
   AEAD_AES_256_CCM.  The AEAD_AES_256_CCM_8 ciphertext consists of
   the ciphertext output of the CCM encryption operation concatenated
   with the 8-octet authentication tag output of the CCM encryption
   operation.  Test cases are provided in <xref target="CCM"/>.  The input and output
   lengths are as for AEAD_AES_128_CCM.  An AEAD_AES_128_CCM_8
   ciphertext is exactly 8 octets longer than its corresponding
   plaintext.

	  </t>
	    </section>

	</section>

		<section anchor="IANA" title="IANA Considerations">
<t>
IANA has assigned the values for the ciphersuites defined in 
Sections <xref target="rsasuite" format="counter"/> and <xref
target="psksuite" format="counter"/> from the "TLS Cipher Suite" registry and 
the values of the AEAD algorithms defined in <xref target="newaead"/> from the "AEAD Algorithms"
registry.  

</t>

		</section>
		<section anchor="Security" title="Security Considerations">
			<section title="Perfect Forward Secrecy">
				<t>The perfect forward secrecy
				properties of RSA-based TLS
				ciphersuites are discussed in the
				security analysis
				of <xref target="RFC5246"></xref>.  It
				should be noted that only the
				ephemeral Diffie-Hellman-based
				ciphersuites are capable of providing
				perfect forward secrecy. </t>
			
			</section>
			<section title="Counter Reuse">
				<t>AES-CCM security requires that the
				counter is never reused.  The IV
				construction
				in <xref target="rsasuite"></xref> is
				designed to prevent counter
				reuse. </t>
			
			</section>
		</section>


		<section anchor="Acknowledgements" title="Acknowledgements">
			<t>This document borrows heavily from <xref target="RFC5288"></xref>.
			Thanks are due to Stephen Farrell and Robert Cragie for their input.  
			</t>
		</section>
	</middle>
	<back>
		<references title="Normative References">
			&rfc2119;
			&rfc4279;
			&rfc6347;
			&rfc6066;
			&rfc5288;
			&rfc5116;
			&rfc5246;
			&rfc5487;

			<reference anchor="CCM">
				<front>
					<title>Recommendation for
					  Block Cipher Modes of
					  Operation: The CCM Mode for
					  Authentication and
					  Confidentiality
					</title>
					<author>
						<organization>National Institute of Standards and Technology</organization>
					</author>
					<date month="May" year="2004"></date>
					
				</front>
				<seriesInfo name="SP" value="800-38C"></seriesInfo>
			</reference>
			<reference anchor="AES">
				<front>
					<title>Specification for the Advanced Encryption Standard (AES)</title>
					<author>
						<organization>National Institute of Standards and Technology</organization>
					</author>
					<date month="November" year="2001"></date>
				</front>
				<seriesInfo name="FIPS" value="197"></seriesInfo>
			</reference>
		</references>

		<references title="Informative References">	
				&rfc4309;
				<reference anchor="IEEE802154">
					<front>
						<title>Wireless Personal Area Networks</title>
						<author>
							<organization>Institute of Electrical and Electronics Engineers</organization>
						</author>
						<date year="2006"></date>
					</front>
					<seriesInfo name="IEEE Standard" value="802.15.4-2006"></seriesInfo>
				</reference>
		</references>
	</back>
</rfc>
