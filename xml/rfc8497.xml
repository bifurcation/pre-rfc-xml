<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC3323 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3323.xml">
<!ENTITY RFC3665 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3665.xml">
<!ENTITY RFC3891 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3891.xml">
<!ENTITY RFC3911 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3911.xml">
<!ENTITY RFC4538 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4538.xml">
<!ENTITY RFC4568 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4568.xml">
<!ENTITY RFC5234 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml">
<!ENTITY RFC5589 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5589.xml">
<!ENTITY RFC5627 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5627.xml">
<!ENTITY RFC6064 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6064.xml">
<!ENTITY RFC6872 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6872.xml">
<!ENTITY RFC6873 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6873.xml">
<!ENTITY RFC6973 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6973.xml">
<!ENTITY RFC7092 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7092.xml">
<!ENTITY RFC7206 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7206.xml">
<!ENTITY RFC7989 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7989.xml">
<!ENTITY RFC8123 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8123.xml">
<!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc number="8497" category="std" submissionType="IETF" consensus="yes" ipr="trust200902">

  <front>

    <title abbrev="Log Me Marking">Marking SIP Messages to Be Logged</title>


    <author fullname="Peter Dawes" initials="P." surname="Dawes">
      <organization>Vodafone Group</organization>

      <address>
        <postal>
          <street>The Connection</street>

          <city>Newbury</city>

          <region>Berkshire</region>

          <code>RG14 2FN</code>

          <country>United Kingdom</country>
        </postal>
	
	<phone>+44 7717 275009</phone>

        <email>peter.dawes@vodafone.com</email>


      </address>
    </author>
        <author fullname="Chidambaram Arunachalam" initials="C." surname="Arunachalam">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>7200-12 Kit Creek Road</street>

          <city>Research Triangle Park</city>

          <region>NC</region>

          <code>27709</code>

          <country>United States of America</country>
        </postal>

        <phone></phone>

        <email>carunach@cisco.com</email>


      </address>
    </author>

    <date month="November" year="2018" />

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>SIP, logme, troubleshooting, debug, debugging, logging</keyword>

    <abstract>
      <t>SIP networks use signaling monitoring tools to diagnose user-reported
      problems and to perform regression testing if network or user agent (UA) software is
      upgraded. As networks grow and become interconnected, including
      connection via transit networks, it becomes impractical to predict the
      path that SIP signaling will take between user agents and therefore
      impractical to monitor SIP signaling end to end.</t>



      <t>This document
      describes an indicator for the SIP protocol that can be used to mark
      signaling as being of interest to logging. Such marking will typically
      be applied as part of network testing controlled by the network operator
      and is not used in normal user agent signaling. Operators of all networks
      on the signaling path can agree to carry such marking end to end,
      including the originating and terminating SIP user agents, even if a
      session originates and terminates in different networks.</t>
    </abstract>
  </front>


<middle>



   <section title="Introduction">

     <t>When users experience problems with setting up sessions using SIP,
     enterprise or service provider network operators often have to identify
     the root cause by examining the SIP signaling.  Also, when network or
     user agent (UA) software or hardware is upgraded, regression testing is
     needed. Such diagnostics apply to a small proportion of network traffic
     and can apply end to end, even if signaling crosses several networks
     possibly belonging to several different network operators. It may not be
     possible to predict the path through those networks in advance, therefore,
     a mechanism is needed to mark a session as being of interest so that SIP
     entities along the signaling path can provide diagnostic logging. <xref
     target="RFC8123"/> illustrates this motivating scenario. This document
     describes a solution that meets the requirements for such &quot;log
     me&quot; marking of SIP signaling also defined in <xref target="RFC8123"/>.
     </t>

     <t>This document also defines a new header field parameter, "logme", for the
     Session-ID header field <xref target="RFC7989"/>. Implementations of
     this document MUST implement <xref target="RFC7989"/>.
     </t>




   </section>

   <section title="Requirements Language">

 <t>
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
    NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
    "MAY", and "OPTIONAL" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>

   </section>

   <section title="&quot;Log Me&quot; Marking Protocol Aspects">
   
      <section title="Session-ID &quot;logme&quot; Parameter">
      <t>Logging for diagnostic purposes is most effective when it is applied
      end to end in a communication session. This ability requires a &quot;log
      me&quot; marker to be passed through SIP intermediaries. The Session-ID
      header field defined in <xref target="RFC7989"/> was chosen to carry the
      &quot;log me&quot; marker as a &quot;logme&quot; parameter since the
      session identifier is typically passed through SIP Back-to-Back User
      Agents (B2BUAs) (described in
      <xref target="RFC7092"/>) or other intermediaries, as per the Session-ID
      requirement REQ3 in <xref target="RFC7206"/>. The &quot;logme&quot;
      parameter shown in <xref target="logme-session-id-parameter"/> does not
      introduce any device-specific or user-specific information and MUST be
      passed unchanged with the Session-ID header field. There is an
      exception, however, for the cases
      specified in <xref target="external_network"/> where the &quot;log
      me&quot; marker may be removed at a network boundary.</t>
            
       <t><figure align="center" anchor="logme-session-id-parameter" title="&quot;Log Me&quot; Marking Using the &quot;logme&quot; Session-ID Header Field Parameter">
            <artwork align="left"><![CDATA[
    Alice              Proxy            Registrar 
    u1.example.com     p1.example.com   r1.example.com 
      |                  |                  |        
      |(1) INVITE        |                  |  
      | Session-ID: ab30317f1a784dc48ff824d0d3715d86;
      |  remote=47755a9de7794ba387653f2099600ef2;logme
      |----------------->|                  | 
      |                  |                  |
         ]]></artwork>
            </figure></t>

         </section>
   
      <section title="Starting and Stopping Logging">
      
        <t>If a dialog is to be &quot;log me&quot; marked, then marking MUST
start with the SIP request that initiates that dialog (dialog-initiating requests are described in Section 12.1 of <xref
target="RFC3261"/>).


For the most effective testing and troubleshooting,
marking continues for the lifetime of the dialog, applies to each
request and response in the dialog, and applies uninterrupted
end to end (including user devices). The &quot;log me&quot; marking
mechanism described in this document allows for parts of the signaling
path to not be marked, e.g, because an endpoint does not
support the &quot;log me&quot; marking mechanism (see <xref
target="stateful_processing"/>) or because an endpoint or intermediary
deliberately removes the &quot;log me&quot; marker (see <xref
target="onbehalf-case4"/>). Also, marking errors can terminate marking
before the dialog ends (see <xref target="error_handling"/>).</t>

         
         <t>A UA or intermediary adds a &quot;log me&quot; marker in
	 an unmarked request or response in two cases: first, because it is
 configured to add the marking to a dialog-creating request, or
 second, because it has received a dialog-creating request that is
 being &quot;log me&quot; marked causing it to maintain state to
 ensure that all requests and responses in the dialog are similarly
 &quot;log me&quot; marked. Once the &quot;log me&quot; marking is
 started for a dialog, all subsequent requests and responses in this
 dialog are &quot;log me&quot; marked. Marking is stopped when this
 dialog and its related dialogs end. It is considered an error (see
 <xref target="logme_mid_dialog"/>) if &quot;log me&quot; marking is
 started in a mid-dialog request or response.</t>
         
         <t>For the first case, &quot;log me&quot; marking trigger condition
 configurations that define whether a UA or intermediary can
 initiate &quot;log me&quot; marking for a given dialog are out of
 scope of this document. As an example of trigger condition
 configurations, the UA or intermediary could be configured to
 add a &quot;log me&quot; marker for all dialogs initiated during a
 specific time period (e.g., 9:00 am - 10:00 am every day) or for
 specific dialogs that have a particular &quot;User-Agent&quot; header
 field value. They could also be configured to add a &quot;log
 me&quot; marker for a specific set of called party numbers for which
 users are experiencing call setup failures.</t>
         
         <t>For the second case of a UA or intermediary detecting that
 a dialog-initiating request is being &quot;log me&quot; marked, the
 scope of such marking extends to the lifetime of the dialog. In
 addition, as discussed in <xref target="related_dialogs"/>, &quot;log
 me&quot; marked dialogs that create related dialogs (e.g., REFER) may
 transfer the marking to the related dialogs.  In such cases, the
 entire &quot;session&quot;, identified by the Session-ID header
 field, is &quot;log me&quot; marked.</t>
         
      </section>
	  


      <section anchor="test_identifier" title="Identifying Test Cases">
         <t>The local Universally Unique Identifier (UUID) portion of
the Session-ID header field value <xref target="RFC7989"/> in the initial SIP request of a
 dialog is used as a random test case identifier (described in REQ 5
 in <xref target="RFC8123"/>). This provides the ability to collate
 all logged SIP requests and responses to the initial SIP request in a
 dialog or standalone transaction.</t>
      </section>

      <section title="Passing the Marker">
         <section title="To/From a User Device">
            <t>When a user device inserts the &quot;log me&quot; marker, the marker MUST be passed unchanged in the Session-ID header field across an edge proxy or a B2BUA adjacent to the user device.</t>
         </section>
         <section anchor="external_network" title="To/From an External Network">
            <t>An external network is a peer network connected at a network boundary as defined in <xref target="RFC8123"/>.</t>
            <t>External networks may be connected directly or via a peering
    network, and such networks often have specific connection
    agreements. Whether &quot;log me&quot; marking is removed depends
    on the policy applied at the network-to-network
    interface. Troubleshooting and testing will be easier if peer
    networks endeavor to make agreements to pass &quot;log me&quot;
    marking unchanged. However, since a &quot;log me&quot; marker may
    cause a SIP entity to log the SIP header and body of a request or
    response, the &quot;log me&quot; marker MUST be removed at a
    network boundary if no agreement exists between peer networks.</t>
         </section>
 <section anchor="non_supporting_intermediary" title="Across a Non-supporting SIP Intermediary">
            <t>&quot;Log me&quot; marking is most effective if passed
    end to end. However, intermediaries that do not comply with this
    document might pass the &quot;log me&quot; marker unchanged or
    even drop it entirely.
</t>
         </section>
      </section>

	  
      <section title="Logging Multiple Simultaneous Dialogs">
         <t>Multiple SIP dialogs can be simultaneously logged by an originating UA, terminating UA, and SIP entities on the signaling
 path. These dialogs are differentiated by their test case identifier
 (the local UUID portion of the Session-ID header field value at the originating
 device).</t>
      </section>
      

	  
      <section anchor="logging_level" title="Format of Logged Signaling">
         <t>The entire SIP message (SIP request line, response line, header
 fields, and message body) SHOULD be logged since troubleshooting might
 be difficult if information is missing. Logging SHOULD use common
 standard formats such as SIP Common Log Format (CLF) defined in <xref
 target="RFC6873"/> and Libpcap as defined in "vnd.tcpdump.pcap" in the
 Media Types registry <xref
 target="MEDIA-TYPES"/>. If SIP CLF is used,
 the entire message is logged using Vendor-ID = 00000000 and Tag = 02
 in the &lt;OptionalFields&gt; portion of the SIP CLF record (see Section 4.4 of
 <xref target="RFC6873"/>). Header fields SHOULD be logged
 in the form in which they appear in the message; they SHOULD NOT be
 converted between long and compact forms described in Section 7.3.3 of <xref
 target="RFC3261"/>.</t>
      </section>

	  

      
      <section anchor="related_dialogs" title="Marking Related Dialogs">

	  

      <t>&quot;Log me&quot; marking is done per dialog; typically, it begins at
      dialog creation and ends when the dialog ends. However, dialogs related
      to a &quot;log me&quot; marked dialog MAY also be &quot;log me&quot;
      marked for call control features such as call forward, transfer, park,
      and join. As described in Section 6 of <xref target="RFC7989"/>, related
      dialogs can occur when an endpoint receives a 3xx message, a REFER that
      directs the endpoint to a different peer, an INVITE request with
      Replaces that also potentially results in communicating with a new peer,
      or an INVITE with a Join header field as described in <xref
      target="RFC3911"/>. An example is the call transfer feature described in Section 6.1
      of <xref target="RFC5589"/>. The logged signaling for related dialogs
      can be correlated using Session-ID header field values as described in Section 10.9
      of <xref target="RFC7989"/>.</t>
      <t>In the example shown in <xref target="call-transfer"/>, Alice has
      reported problems making call transfers. Her terminal is placed in debug
      mode in preparation for &quot;log me&quot; marked signaling from the network
      administrator, Bob.&nbsp;Bob's terminal is configured to &quot;log me&quot;
      mark and log signaling for calls originated during the troubleshooting
      session (e.g., for a duration of 15 minutes). Bob, who is troubleshooting
      the problem, arranges to make a call that Alice can attempt to
      transfer. Bob calls Alice, which creates initial dialog1, and then Alice
      transfers the call to connect Bob to Carol. Logged signaling is
      correlated using the test case identifier, which is the local UUID
      ab30317f1a784dc48ff824d0d3715d86 in the Session-ID header field of
      INVITE request F1. Logging by Alice's terminal begins when it receives
      and echoes the &quot;log me&quot; marker in INVITE F1 and ends when the
      last request or response in the dialog is sent or received (200 OK F7 of
      dialog1). Also during dialog1, Alice's terminal logs related REFER
      dialog2, which it initiates and terminates as part of the call
      transfer. Alice's terminal inserts a &quot;log me&quot; marker in the
      REFER request and 200 OK responses to NOTIFY requests in dialog2. Both
      dialog1 and dialog2 have the same test case identifier.</t>
      <t>Logging by Bob's terminal begins when it sends INVITE F1, which
      includes the &quot;log me&quot; marker, and ends when dialog3, initiated
      by Bob, ends. Logging by Carol's terminal begins when it receives the
      INVITE F5 with the &quot;log me&quot; marker and ends when dialog3
      ends.</t>
      <t>dialog3 is not logged by Alice's terminal; however, the test case
      identifier ab30317f1a784dc48ff824d0d3715d86 is also the test case
      identifier (local-uuid) in INVITE F5. Also, the test case identifier of
      dialog2, which is logged by Alice's terminal, can be linked to dialog1
      and dialog3 because the remote-uuid component of dialog2 is the test
      case identifier ab30317f1a784dc48ff824d0d3715d86.</t>

      <t>
         <figure align="center" anchor="call-transfer" title="&quot;Log Me&quot; Marking Related Dialogs in Call Transfer">
            <artwork align="left"><![CDATA[
              Alice                 Bob                  Carol
            Transferor           Transferee             Transfer
                 |                    |                  Target
                 |          INVITE F1 |                    |
         dialog1 |<-------------------|                    |
                 |          200 OK F2 |                    |
         dialog1 |------------------->|                    |
                 |            ACK     |                    |
         dialog1 |<-------------------|                    |
                 |  INVITE (hold)     |                    |
         dialog1 |------------------->|                    |
                 |  200 OK            |                    |
         dialog1 |<-------------------|                    |
                 |  ACK               |                    |
         dialog1 |------------------->|                    |
                 |  REFER F3 (Target-Dialog:1)             |
         dialog2 |------------------->|                    |
                 |  200 OK            |                    |
         dialog2 |<-------------------|                    |
                 | NOTIFY (100 Trying) F4                  |
         dialog2 |<-------------------|                    |
                 |            200 OK  |                    |
         dialog2 |------------------->|                    |
                 |                    |  INVITE F5         |
         dialog3 |                    |------------------->|
                 |                    |  200 OK            |
         dialog3 |                    |<-------------------|
                 |                    |  ACK               |
         dialog3 |                    |------------------->|
                 |  NOTIFY (200 OK) F6|                    |
         dialog2 |<-------------------|                    |
                 |            200 OK  |                    |
         dialog2 |------------------->|                    |
                 |  BYE               |                    |
         dialog1 |------------------->|                    |
                 |  200 OK F7         |                    |
         dialog1 |<-------------------|                    |
                 |                    |             BYE    |
         dialog3 |                    |<-------------------|
                 |                    |             200 OK |
         dialog3 |                    |------------------->| ]]>
            </artwork>
         </figure>
         </t>
 
	 <t>
	   <list style="hanging" hangIndent="6"><t hangText="F1:">Bob's UA inserts the &quot;logme&quot; parameter in
the Session-ID header field of the INVITE request that creates
dialog1.</t>
<t hangText="F3:">Alice's UA inserts the &quot;logme&quot; parameter in
the Session-ID header field of the REFER request that creates
dialog2, which is related to dialog1.</t>
<t hangText="F5:">Bob's UA inserts the &quot;logme&quot; parameter in
the Session-ID header field of the INVITE request that creates
dialog3, which is related to dialog1.</t></list></t>         
         <figure>
         <artwork align="left"><![CDATA[

       F1 INVITE Transferee -> Transferor
         
       INVITE sips:transferor@atlanta.example.com SIP/2.0
       Via: SIP/2.0/TLS [2001:db8::1];branch=z9hG4bKnas432
       Max-Forwards: 70
       To: <sips:transferor@atlanta.example.com>
       From: <sips:transferee@biloxi.example.com>;tag=7553452
       Call-ID: 090459243588173445
       Session-ID: ab30317f1a784dc48ff824d0d3715d86
          ;remote=00000000000000000000000000000000;logme
       CSeq: 29887 INVITE
       Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY
       Supported: replaces, gruu, tdialog
       Contact: <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>
       Content-Type: application/sdp
       Content-Length: ...


       F2 200 OK Transferor -> Transferee

       SIP/2.0 200 OK
       Via: SIP/2.0/TLS [2001:db8::1];branch=z9hG4bKnas432
       To: <sips:transferor@atlanta.example.com>;tag=31kdl4i3k
       From: <sips:transferee@biloxi.example.com>;tag=7553452
       Call-ID: 090459243588173445
       Session-ID: 47755a9de7794ba387653f2099600ef2
          ;remote=ab30317f1a784dc48ff824d0d3715d86;logme
       CSeq: 29887 INVITE
       Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY
       Supported: replaces, gruu, tdialog
       Contact: <sips:4889445d8kjtk3@atlanta.example.com;gr=723jd2d>
       Content-Type: application/sdp
       Content-Length: ...

         
       F3 REFER Transferor -> Transferee

       REFER sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha SIP/2.0
       Via: SIP/2.0/TLS pc33.atlanta.example.com;branch=z9hG4bKna9
       Max-Forwards: 70
       To: <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>
       From: <sips:transferor@atlanta.example.com>;tag=1928301774
       Call-ID: a84b4c76e66710
       Session-ID: 47755a9de7794ba387653f2099600ef2
          ;remote=ab30317f1a784dc48ff824d0d3715d86;logme
       CSeq: 314159 REFER
       Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY
       Supported: gruu, replaces, tdialog
       Require: tdialog
       Refer-To: <sips:transfertarget@chicago.example.com>
       Target-Dialog: 090459243588173445;local-tag=7553452
        ;remote-tag=31kdl4i3k
       Contact: <sips:4889445d8kjtk3@atlanta.example.com;gr=723jd2d>
       Content-Length: 0
         
         
       F4 NOTIFY Transferee -> Transferor

       NOTIFY sips:4889445d8kjtk3@atlanta.example.com
          ;gr=723jd2d SIP/2.0
       Via: SIP/2.0/TLS [2001:db8::1];branch=z9hG4bKnas432
       Max-Forwards: 70
       To: <sips:transferor@atlanta.example.com>;tag=1928301774
       From: <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>
        ;tag=a6c85cf
       Call-ID: a84b4c76e66710
       Session-ID: ab30317f1a784dc48ff824d0d3715d86
          ;remote=47755a9de7794ba387653f2099600ef2;logme
       CSeq: 73 NOTIFY
       Contact: <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>
       Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY
       Supported: replaces, tdialog
       Event: refer
       Subscription-State: active;expires=60
       Content-Type: message/sipfrag
       Content-Length: ...
      
   
       F5 INVITE Transferee -> Transfer Target

       INVITE sips:transfertarget@chicago.example.com SIP/2.0
       Via: SIP/2.0/TLS [2001:db8::1];branch=z9hG4bKnas41234
       Max-Forwards: 70
       To: <sips:transfertarget@chicago.example.com>
       From: <sips:transferee@biloxi.example.com>;tag=j3kso3iqhq
       Call-ID: 90422f3sd23m4g56832034
       Session-ID: ab30317f1a784dc48ff824d0d3715d86
          ;remote=00000000000000000000000000000000;logme
       CSeq: 521 REFER
       Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY
       Supported: replaces, gruu, tdialog
       Contact: <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>
       Content-Type: application/sdp
       Content-Length: ...
         
         
       F6 NOTIFY Transferee -> Transferor

       NOTIFY sips:4889445d8kjtk3@atlanta.example.com
          ;gr=723jd2d SIP/2.0
       Via: SIP/2.0/TLS [2001:db8::1];branch=z9hG4bKnas432
       Max-Forwards: 70
       To: <sips:transferor@atlanta.example.com>;tag=1928301774
       From: <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>
        ;tag=a6c85cf
       Call-ID: a84b4c76e66710
       Session-ID: ab30317f1a784dc48ff824d0d3715d86
          ;remote=47755a9de7794ba387653f2099600ef2;logme
       CSeq: 74 NOTIFY
       Contact: <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>
       Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY
       Supported: replaces, tdialog
       Event: refer
       Subscription-State: terminated;reason=noresource
       Content-Type: message/sipfrag
       Content-Length: ...
         ]]></artwork>
         </figure>

      </section>
      
      <section title="Forked Requests">
  <t>A SIP intermediary is required to copy the &quot;log
  me&quot; marker into forked requests. SIP request forking is
  discussed in Sections 4 and 16.6 of <xref
  target="RFC3261"/>.</t>
      </section>
      
   </section>

   <section anchor="SIP_behavior" title="SIP Entity Behavior">
   
      <section title="Scope of Marking">
      
      <t>&quot;Log me&quot; marking is intended to be limited, in time period and number of dialogs marked, to the minimum needed to troubleshoot a particular problem or perform a particular test.</t>
      
        <t><list style="symbols">

            <t>SIP entities MUST be configured to &quot;log me&quot; mark only
    dialogs needed for the current testing purpose, e.g.,
    troubleshooting or regression testing. The mechanisms in this
    section ensure that &quot;log me&quot; marking begins at dialog
    creation and, other than cases of marking related dialogs or
    premature ending, ends when the dialog being &quot;log me&quot;
    marked ends.</t>

            <t>If a dialog is to be marked, the only way to initiate &quot;log
    me&quot; marking is at the dialog-creating request (e.g., SIP
    INVITE) sent by an originating endpoint or an intermediary that
    marks on behalf of the originating endpoint. Marking that appears
    mid-dialog is an error as described in <xref
    target="logme_mid_dialog"/>. The final terminating endpoint, or
    intermediary that marks on behalf of the terminating endpoint,
    cannot initiate marking, but it takes action as defined in Sections <xref
    target="endpoints" format="counter"/> and <xref
    target="acting_on_behalf" format="counter"/> if it
    receives an incoming &quot;log me&quot; marker.</t>
        
        </list></t>



        <t>Note that the error cases described in Section 5.1 cause
SIP entities to stop &quot;log me&quot; marking, and the requirements
in <xref target="security"/> also place requirements on SIP entities,
including allowing SIP entities to not log signaling based on local
policies (see <xref target="user_control"/>).</t>

      </section>

      <section anchor="endpoints" title="Endpoints">

        <t>A common scenario is to have both originating and terminating
endpoints support &quot;log me&quot; marking with the originating
endpoint configured to initiate &quot;log me&quot; marking. In this
simplest use case, the originating UA inserts a &quot;log
me&quot; marker in the dialog-creating SIP request and all subsequent
SIP requests within that dialog.  The &quot;log me&quot; marker is
passed through the SIP intermediaries and arrives at the terminating
UA, which echoes the &quot;log me&quot; marker in the
corresponding responses. If the terminating UA sends an
in-dialog request on a dialog that is being &quot;log me&quot; marked,
it inserts a &quot;log me&quot; marker and the originating UA
echoes the &quot;log me&quot; marker in responses. The terminating
UA logs the &quot;log me&quot; marked SIP requests and
responses if it is allowed as per policy defined in the terminating
network. This basic use case suggests the following rules for
originating and terminating UAs.</t>

         <t>For originating UAs:
         <list style="symbols">

         <t>The originating UA configured for &quot;log me&quot; marking MUST
 insert a &quot;log me&quot; marker into the dialog-creating SIP
 request and subsequent in-dialog SIP requests.</t>
         <t>The originating UA itself logs marked requests and responses.</t>
         <t>The originating UA echoes, in responses, the &quot;log me&quot;
 marker received in in-dialog requests from the terminating side.</t>
         <t>The originating UA logs the SIP responses that it sends in
 response to received &quot;log me&quot; marked in-dialog requests.</t>
         <t>The originating UA MAY also apply these rules to any subsequent
 related SIP dialogs as described in <xref
 target="related_dialogs"/>.</t>
         </list></t>
         
         <t>For terminating UAs:
         <list style="symbols">
         <t>The terminating UA detects that a dialog is of interest to logging by the existence of a &quot;log me&quot; marker in an incoming dialog-creating SIP request.</t>
         <t>The terminating UA itself logs marked requests and corresponding marked responses if allowed as per policy.</t>
         <t>The terminating UA MUST echo a &quot;log me&quot; marker in responses to a SIP request that included a &quot;log me&quot; marker.</t>
         <t>If the terminating UA has detected that a dialog is being &quot;log me&quot; marked, it MUST insert a &quot;log me&quot; marker in any in-dialog SIP requests that it sends.</t>
         <t>The terminating UA itself logs any in-dialog SIP requests that it sends if allowed as per policy.</t>
         <t>The terminating UA MAY also apply these rules to any subsequent related SIP dialogs as described in <xref target="related_dialogs"/>.</t>
         </list></t>

      </section>
      
      

      <section anchor="acting_on_behalf" title="SIP Intermediaries Acting on Behalf of Endpoints">

         <t>A network operator may know that some of the UAs connected to the
 network do not support &quot;log me&quot; marking. Subject to the
 authorizations in <xref target="authorization"/>, a SIP intermediary
 close to the UA (e.g., edge proxy, B2BUA) on the originating and/or
 terminating sides inserts the &quot;log me&quot; marker instead in
 order to test sessions involving such UAs.</t>
         <t>The originating and terminating SIP intermediaries are not
 identified by protocol means but are designated and explicitly
 configured by the network administrator to &quot;log me&quot; mark on
 behalf of endpoints. The intermediaries that are known to be closest
 to the terminals can be configured to &quot;log me&quot; mark on
 behalf of terminals that do not support &quot;log me&quot;
 marking. The originating SIP intermediary is the first one to be
 traversed by a SIP request sent by the originating
 endpoint. Similarly, the terminating SIP intermediary is the last
 intermediary traversed before the terminating endpoint is reached.</t>
         <t>The SIP intermediary at the originating side is configured to
 insert the &quot;log me&quot; marker on behalf of the originating
 endpoint. If the terminating UA does not echo the &quot;log
 me&quot; marker in responses to a marked request, then the SIP
 intermediary closest to the terminating UA, if configured to
 mark on behalf of the terminating UA, inserts a &quot;log
 me&quot; marker in responses to the request.  Likewise, if the
 terminating UA sends an in-dialog request, the SIP
 intermediary at the terminating side inserts a &quot;log me&quot;
 marker and the SIP intermediary at the originating side echoes the
 &quot;log me&quot; marker in responses to that request. Originating
 and terminating intermediaries that are configured for &quot;log
 me&quot; marking on behalf of the endpoint must also mark
 dialog-creating requests that contain Target-Dialog <xref
 target="RFC4538"/>, Join <xref target="RFC3911"/>, and Replaces <xref
 target="RFC3891"/> header fields and corresponding responses. The SIP
 intermediaries at the originating and terminating sides log the
 &quot;log me&quot; marked SIP requests and responses if it is allowed
 as per policy defined in the originating and terminating
 networks. This scenario suggests the following rules when a SIP
 intermediary is configured to initiate or handle &quot;log me&quot;
 marking on behalf of a UA.</t>

         <t>For the originating SIP intermediary:
         <list style="symbols">
          <t>The originating SIP intermediary configured for &quot;log me&quot; marking MUST insert a &quot;log me&quot; marker into the dialog-creating SIP request and subsequent in-dialog SIP requests.</t>
          <t>The originating SIP intermediary itself logs marked requests and responses.</t>
          <t>The originating SIP intermediary detects the &quot;log me&quot; marker received in in-dialog requests and echoes the &quot;log me&quot; marker in the corresponding SIP responses.</t>
          <t>The originating SIP intermediary logs the SIP responses that it sends in response to &quot;log me&quot; marked in-dialog requests.</t>
          <t>The originating SIP intermediary MAY also apply these rules to
  any subsequent related SIP dialogs as described in <xref
  target="related_dialogs"/>.</t>
        </list></t>
        
        <t>For the terminating SIP intermediary:
         <list style="symbols">
          <t>The terminating SIP intermediary detects that a dialog is of interest to logging by the existence of a &quot;log me&quot; marker in an incoming dialog-creating SIP request.</t>
          <t>The terminating SIP intermediary itself logs marked requests and corresponding responses if allowed as per policy.</t>
          <t>The terminating SIP intermediary MUST echo a &quot;log me&quot; marker in responses to a SIP request that included a &quot;log me&quot; marker.</t>
	  		  

          <t>If the terminating SIP intermediary has detected that a dialog is being &quot;log me&quot; marked, it MUST insert a &quot;log me&quot; marker in any in-dialog SIP requests from the terminating UA.</t>
          <t>The terminating SIP intermediary itself logs any in-dialog SIP requests that it sends if allowed as per policy.</t>
          <t>The terminating SIP intermediary MAY also apply these rules to any subsequent related SIP dialogs as described in <xref target="related_dialogs"/>.</t>
        </list></t>

</section> 

<section anchor="b2bua" title="B2BUAs">
        
        <t>B2BUA &quot;log me&quot; behavior is specified based on its different signaling plane roles described in <xref target="RFC7092"/>.</t>



        <t>A Proxy-B2BUA SHOULD copy &quot;log me&quot; marking in requests
and responses from its terminating side to the originating side without
needing explicit configuration to do so.</t>


        <t>A dialog on one &quot;side&quot; of the B2BUA may or may not be
coupled to a related dialog on the other &quot;side&quot; for
&quot;log me&quot; purposes. To allow end-to-end troubleshooting of
user problems and regression testing, a signaling-only and
SDP-modifying signaling-only B2BUA <xref target="RFC7092"/> SHOULD
couple related dialogs for &quot;log me&quot; marking purposes and
pass on the received &quot;log me&quot; parameter from the originating
side to the terminating side and vice versa.  For example, a SIP B2BUA
handling an end-to-end session between an external caller and an agent
in a contact center environment can couple the dialog between itself
and an agent with the dialog between itself and the external caller. It can pass
on the &quot;log me&quot; marking from the originating side to the
terminating side to enable end-to-end logging of specific sessions
of interest.</t>  

        <t>For dialogs that are being &quot;log me&quot; marked, all B2BUAs MUST &quot;log me&quot; mark in-dialog SIP requests that they generate on their own, without needing explicit configuration to do so.  This rule applies to both the originating and terminating sides of a B2BUA.</t>
         
</section> 

<section title="&quot;Log Me&quot; Marker Processing by SIP Intermediaries">

<section title="Stateless Processing">

         <t>Typically, &quot;log me&quot; marking will be done by an
 originating UA and echoed by a terminating UA. SIP
 intermediaries on the signaling path between these UAs that do not
 perform the tasks described in Sections <xref
 target="acting_on_behalf" format="counter"/> or
 <xref target="b2bua" format="counter"/> MUST simply log any request or response that
 contains a &quot;log me&quot; marker in a stateless manner, if it is
 allowed per local policy.</t>

</section>

        <section anchor="stateful_processing" title="Stateful Processing">
        <t>The originating and terminating SIP intermediaries that &quot;log
me&quot; mark on behalf of endpoints and SIP intermediaries that
remove &quot;log me&quot; marking at the network boundary must
maintain state to enable &quot;log me&quot; marking. Applicable
scenarios are as follows:</t>

            <t><list style="symbols">

              <t>The originating UA does not support &quot;log me&quot; marking. This scenario was described in <xref target="acting_on_behalf"/> and requires support by the originating SIP intermediary. &quot;Log me&quot; marker processing is illustrated in <xref target="onbehalf-case1"/>.</t>
              
              <t>The terminating UA does not support &quot;log me&quot; marking. This scenario was described in <xref target="acting_on_behalf"/> and requires support by the terminating SIP intermediary. &quot;Log me&quot; marker processing is illustrated in <xref target="onbehalf-case2"/>.</t>

              <t>The originating network ensures that it does not pass marking
      outside its boundaries in order to not impact any external
      networks. The originating network removes &quot;log me&quot;
      marking from SIP requests and responses before forwarding them
      from its network boundary to external networks, but it adds marking
      back to any incoming SIP requests and responses belonging to any
      &quot;log me&quot; marked dialog. This scenario requires support
      by the SIP intermediary at the originating network boundary. &quot;Log me&quot; marker processing is illustrated in <xref
      target="onbehalf-case3"/>.</t>

              <t>The terminating network ensures that it does not allow
      &quot;log me&quot; marking from external networks to pass
      through its boundary to its internal entities. The terminating
      network removes &quot;log me&quot; marking from SIP requests and
      responses before forwarding them internally, but it adds marking
      back to any outgoing SIP requests and responses belonging to any
      &quot;log me&quot; marked dialog. This scenario requires support
      by the SIP intermediary at the terminating network boundary.
      &quot;Log me&quot; marker processing is illustrated in <xref
      target="onbehalf-case4"/>.</t>
              
              <t>The terminating network does not support &quot;log me&quot;
      marking and does not echo marking that it receives. The
      originating network adds marking back to any incoming SIP
      requests and responses belonging to the &quot;log me&quot;
      marked dialog. This scenario requires support by the SIP
      intermediary at the originating network boundary and &quot;log
      me&quot; marker processing is illustrated in <xref
      target="onbehalf-case5"/>.</t>

             </list>

            </t>
            
        <t>SIP intermediary behavior in these scenarios is illustrated using
<xref target="RFC3665"/> example call flow "Session Establishment
Through Two Proxies". </t>
        
        
        
        
        
            <section anchor="onbehalf-case1" title="&quot;Log Me&quot; Marking Not Supported by Originating UA">


             <t>Alice's UA does not support &quot;log me&quot;
	     marking; hence, Proxy 1, which is  the SIP intermediary closest to
     Alice, is configured to act on behalf of Alice's UA to
     &quot;log me&quot; mark specific dialogs of interest that are
     created by Alice for troubleshooting purposes.</t>

             <t>In <xref target='stateful-case1'/>, Proxy 1 in the
     originating network maintains state of which dialogs are being
     logged in order to &quot;log me&quot; mark all SIP requests and
     responses that it receives from Alice's UA before
     forwarding them to Proxy 2.</t>

             <t>
             <figure align="center" anchor="stateful-case1" title="The Originating UA Does Not Support &quot;Log Me&quot; Marking">
                <artwork align="left"><![CDATA[
     [ NETWORK A           ]          [ NETWORK B          ]
     Alice           Proxy 1          Proxy 2            Bob
       |                |                |                |
       |   INVITE F1    |                |                |
       |  (no logme)    |                |                |
       |--------------->|                |                |
       |                |   INVITE F2    |                |
       |                |    (logme)     |                |
       |                |--------------->|                |
       |                |                |                |
       |                |                |                |
       |   100  F3      |                |   INVITE F4    |
       |   (logme)      |                |     (logme)    |
       |<---------------|     100  F5    |--------------->|
       |                |    (logme)     |                |
       |                |<---------------|                |
       |                |                |     180 F6     |
       |                |                |     (logme)    |
       |                |    180 F7      |<---------------|
       |                |    (logme)     |                |
       |     180 F8     |<---------------|                |
       |     (logme)    |                |                |
       |<---------------|                |     200 F9     |
       |                |                |     (logme)    |
       |                |    200 F10     |<---------------|
       |                |    (logme)     |                |
       |     200 F11    |<---------------|                |
       |     (logme)    |                |                |
       |<---------------|                |                |
       |     ACK F12    |                |                |
       |  (no logme)    |                |                |
       |--------------->|                |                |
       |                |                |                |
       |                |    ACK F13     |                |
       |                |    (logme)     |                |
       |                |--------------->|                |
       |                |                |                |
       |                |                |     ACK F14    |
       |                |                |     (logme)    |
       |                |                |--------------->|
       |                Both Way RTP Media                |
       |<================================================>|
       |                |                |     BYE F15    |
       |                |                |     (logme)    |
       |                |    BYE F16     |<---------------|
       |                |    (logme)     |                |
       |     BYE F17    |<---------------|                |
       |     (logme)    |                |                |
       |<---------------|                |                |
       |     200 F18    |                |                |
       |  (no logme)    |                |                |
       |--------------->|                |                |
       |                |     200 F19    |                |
       |                |    (logme)     |                |
       |                |--------------->|                |
       |                |                |                |
       |                |                |     200 F20    |
       |                |                |     (logme)    |
       |                |                |--------------->|
       |                |                |                | ]]>
                </artwork>
             </figure>
             </t>
             <t><list style="hanging" hangIndent="6"><t hangText="F1:">Alice's UA does not insert a &quot;log me&quot;
     marker in the dialog-creating INVITE request F1. Nevertheless,
     Proxy 1 is configured to initiate logging on behalf of
     Alice. Proxy 1 logs INVITE request F1 and maintains state that
     this dialog is being logged.</t>
            
             <t hangText="F2:">Proxy 1 inserts a &quot;log me&quot; marker in INVITE
     request F2 before forwarding it to Proxy 2. Proxy 1 logs this
     request.</t>
             

             <t hangText="F3:">Proxy 1 inserts a &quot;log me&quot; marker in 100
     response F3 before forwarding it to Alice's UA since this
     is a response sent on a dialog that is being &quot;log me&quot;
     marked. Proxy 1 logs this response.</t>
             
             <t hangText="F4:">"Bob's UA detects the &quot;log me&quot; marker
     and logs the INVITE request F4 if allowed as per policy.</t>
             
             <t hangText="F6:">Bob's UA echoes the &quot;log me&quot; marker in
     INVITE request F4 into 180 response F6. It logs this response if
     allowed as per policy.</t>
             
             <t hangText="F7 and F8:">Proxy 1 logs the received &quot;180&quot;
     response F7 and passes the &quot;log me&quot; marker to Alice's
     UA in F8.</t> 
             
             <t hangText="F12:">Proxy 1 receives ACK with no &quot;log me&quot;
     marker. It doesn't consider this an error since it is
     configured to &quot;log me&quot; mark on behalf of Alice's UA.</t>

             <t hangText="F13:">Proxy 1 inserts a &quot;log me&quot; marker in ACK
     request F13 before forwarding it to Proxy 2. Proxy 1 logs this
     request.</t>
             
             <t hangText="F15:">Bob's UA inserts a &quot;log me&quot; marker in
     the in-dialog BYE request and this &quot;log me&quot; marker is
     carried back to Alice's UA in F16 and F17. Bob's UA logs this request if allowed as per policy.</t>
             
             <t hangText="F18:">Alice's UA does not echo the &quot;log me&quot; marker from BYE request F17 into 200 response F18.</t>
             
             <t hangText="F19:">Proxy 1 inserts a &quot;log me&quot; marker in 200
     response F19 before forwarding it to Proxy 2. Proxy 1 logs this
     response.</t></list></t>
             
            </section>
            
            <section anchor="onbehalf-case2" title="&quot;Log Me&quot; Marking Not Supported by Terminating UA">

         <t>In <xref target='stateful-case3'/>, Bob's UA does not
 support &quot;log me&quot; marking, so Proxy 2 in the terminating
 network maintains state to ensure &quot;log me&quot; marking of SIP
 requests and responses from Bob's UA.</t>

         
         <figure align="center" anchor="stateful-case3" title="The Terminating
       UA Does Not Support &quot;Log Me&quot; Marking.">
            <artwork align="left"><![CDATA[
    [ NETWORK A           ]          [ NETWORK B          ]
    Alice           Proxy 1          Proxy 2            Bob
      |                |                |                |
      |   INVITE F1    |                |                |
      |    (log me)    |                |                |
      |--------------->|                |                |
      |                |    INVITE F2   |                |
      |                |     (log me)   |                |
      |                |--------------->|                |
      |                |                |                |
      |                |                |                |
      |     100  F3    |                |                |
      |     (log me)   |                |                |
      |<---------------|                |                |
      |                |                |   INVITE F4    |
      |                |                |    (log me)    |
      |                |     100  F5    |--------------->|
      |                |     (log me)   |                |
      |                |<---------------|                |
      |                |                |     180 F6     |
      |                |                |   (no log me)  |
      |                |                |<---------------|
      |                |                |                |
      |                |                |                |
      |                |    180 F7      |                |
      |                |   (log me)     |                |
      |                |<---------------|                |
      |                |                |                |
      |                |                |                |
      |     180 F8     |                |                |
      |     (log me)   |                |                |
      |<---------------|                |     200 F9     |
      |                |                |    (no log me) |
      |                |    200 F10     |<---------------|
      |                |    (log me)    |                |
      |     200 F11    |<---------------|                |
      |     (log me)   |                |                |
      |<---------------|                |                |
      |     ACK F12    |                |                |
      |    (log me)    |                |                |
      |--------------->|                |                |
      |                |    ACK F13     |                |
      |                |    (log me)    |                |
      |                |--------------->|     ACK F14    |
      |                |                |    (log me)    |
      |                |                |--------------->|
      |                Both Way RTP Media                |
      |<================================================>|
      |                |                |     BYE F15    |
      |                |                |   (no log me)  |
      |                |    BYE F16     |<---------------|
      |                |   (log me)     |                |
      |     BYE F17    |<---------------|                |
      |    (log me)    |                |                |
      |<---------------|                |                |
      |     200 F18    |                |                |
      |    (log me)    |                |                |
      |--------------->|                |                |
      |                |     200 F19    |                |
      |                |    (log me)    |                |
      |                |--------------->|     200 F20    |
      |                |                |    (log me)    |
      |                |                |--------------->|
      |                |                |                | ]]>
            </artwork>
         </figure>
         
        <t><list style="hanging" hangIndent="6"><t hangText="F1:">Alice's UA inserts a &quot;log me&quot; marker in the dialog-creating INVITE request F1.</t>

        <t hangText="F2:">INVITE F2 is &quot;log me&quot; marked; therefore, Proxy 2 maintains state that this dialog is to be logged. Proxy 2 logs the request and responses of this dialog if allowed per policy.</t>
      
        <t hangText="F5:">Proxy 2 inserts a &quot;log me&quot; marker in the 100 response it sends to Proxy 1.</t>

        <t hangText="F6:">Bob's UA does not support &quot;log me&quot; marking;
therefore, the 180 response to the INVITE request doesn't have a
&quot;log me&quot; marker.</t>
                  
        <t hangText="F7:">Proxy 2 inserts a &quot;log me&quot; marker in the 180 response on behalf of Bob's UA before forwarding it. The same applies to response F10 and the BYE request in F16.</t></list></t>
         
        </section>

        <section anchor="onbehalf-case3" title="&quot;Log Me&quot; Marking Removed by Originating Network">
         
         <t>If network A in <xref target='stateful-case2'/> is performing
 testing independently of network B, then network A removes &quot;log
 me&quot; marking from SIP requests and responses forwarded to network
 B to prevent triggering unintended logging in network B.  Proxy 1
 removes &quot;log me&quot; marking from requests and responses that
 it forwards to Proxy 2 and maintains state of which dialogs are being
 &quot;log me&quot; marked in order to &quot;log me&quot; mark
 requests and responses that it forwards from Proxy 2 to Alice's UA.  For troubleshooting purposes, Proxy 1 MAY also log the
 requests and responses sent to or received from Proxy 2 even though
 it removed &quot;log me&quot; marker prior to forwarding the messages
 to Proxy 2.</t>
         
         <figure align="center" anchor="stateful-case2" title="The Originating Network Removes &quot;Log Me&quot; Marking from Outgoing SIP Messages at its Network Edge.">
            <artwork align="left"><![CDATA[
       [ NETWORK A           ]          [ NETWORK B          ]
     Alice           Proxy 1          Proxy 2            Bob
       |                |                |                |
       |   INVITE F1    |                |                |
       |   (logme)      |                |                |
       |--------------->|                |                |
       |                |   INVITE F2    |                |
       |                |  (no logme)    |                |
       |                |--------------->|                |
       |                |                |                |
       |                |                |                |
       |     100  F3    |                |                |
       |     (logme)    |                |   INVITE F4    |
       |                |                |  (no logme)    |
       |<---------------|     100  F5    |--------------->|
       |                |  (no logme)    |                |
       |                |<---------------|                |
       |                |                |     180 F6     |
       |                |                |  (no logme)    |
       |                |    180 F7      |<---------------|
       |                |  (no logme)    |                |
       |     180 F8     |<---------------|                |
       |     (logme)    |                |                |
       |<---------------|                |     200 F9     |
       |                |                |  (no logme)    |
       |                |    200 F10     |<---------------|
       |                |  (no logme)    |                |
       |     200 F11    |<---------------|                |
       |     (logme)    |                |                |
       |<---------------|                |                |
       |     ACK F12    |                |                |
       |     (logme)    |                |                |
       |--------------->|                |                |
       |                |                |                |
       |                |    ACK F13     |                |
       |                |  (no logme)    |                |
       |                |--------------->|                |
       |                |                |                |
       |                |                |     ACK F14    |
       |                |                |   (no logme)   |
       |                |                |--------------->|
       |                Both Way RTP Media                |
       |<================================================>|
       |                |                |     BYE F15    |
       |                |                |   (no logme)   |
       |                |    BYE F16     |<---------------|
       |                |  (no logme)    |                |
       |     BYE F17    |<---------------|                |
       |     (logme)    |                |                |
       |<---------------|                |                |
       |     200 F18    |                |                |
       |    (logme)     |                |                |
       |--------------->|                |                |
       |                |     200 F19    |                |
       |                |   (no logme)   |                |
       |                |--------------->|                |
       |                |                |                |
       |                |                |     200 F20    |
       |                |                |   (no logme)   |
       |                |                |--------------->|
       |                |                |                | ]]>
            </artwork>
         </figure>
         
         <t><list style="hanging" hangIndent="6"><t hangText="F1:">Alice's UA inserts a &quot;log me&quot; marker in the
 dialog-creating INVITE request, and Proxy 1 therefore maintains state
 that this dialog is to be logged.</t>

         <t hangText="F2:">Proxy 1 removes &quot;log me&quot; marking from INVITE request before forwarding it to Proxy 2. Proxy 1 logs INVITE request F2.</t>

         <t hangText="F3:">Proxy 1 inserts a &quot;log me&quot; marker in the 100
 response sent to Alice's UA. Proxy 1 logs this response.</t>
                              
         <t hangText="F8:">Proxy 1 inserts a &quot;log me&quot; marker in the 180
 response before forwarding it to Alice's UA. Proxy 1 logs
 this response. The same applies to responses F11 and F17.</t>
                  
         <t hangText="F13:">Proxy 1 removes &quot;log me&quot; marking from the ACK
 request. Proxy 1 logs this request before forwarding it to Proxy 2.</t>
                  
         <t hangText="F19:">Proxy 1 removes &quot;log me&quot; marking from the 200
 response of the BYE request. Proxy 1 logs this response before forwarding it to Proxy 2.</t></list></t>
         
         </section>
         

         
        
        <section anchor="onbehalf-case4" title="&quot;Log Me&quot; Marking Removed by Supporting Terminating Network">
         
         <t>In <xref target='stateful-case4'/>, Proxy 2 removes &quot;log
 me&quot; marking from all SIP requests and responses entering network
 B.  However, Proxy 2 supports maintaining the marking state of the
 dialog and &quot;log me&quot; marks requests and responses that it
 sends towards Proxy 1.  For troubleshooting purposes, Proxy 2 MAY
 also log the requests and responses received from or sent to Bob even
 though it removed the &quot;log me&quot; marker prior to forwarding the
 messages to Bob.&nbsp;This scenario might be used for troubleshooting a
 signaling path between two enterprise or carrier networks, or across
 a transit network, with minimal logging (i.e., only at the network
 boundaries).</t>
         
         <figure align="center" anchor="stateful-case4" title="The terminating network removes &quot;log me&quot; marking from incoming SIP messages at its network edge.">
            <artwork align="left"><![CDATA[
    [ NETWORK A           ]          [ NETWORK B          ]
    Alice           Proxy 1          Proxy 2            Bob
      |                |                |                |
      |   INVITE F1    |                |                |
      |   (log me)     |                |                |
      |--------------->|                |                |
      |                |    INVITE F2   |                |
      |                |    (log me)    |                |
      |                |--------------->|                |
      |                |                |                |
      |                |                |                |
      |     100  F3    |                |                |
      |    (log me)    |                |                |
      |<---------------|                |                |
      |                |                |   INVITE F4    |
      |                |                |   (no log me)  |
      |                |     100  F5    |--------------->|
      |                |    (log me)    |                |
      |                |<---------------|                |
      |                |                |     180 F6     |
      |                |                |   (no log me)  |
      |                |                |<---------------|
      |                |    180 F7      |                |
      |                |   (log me)     |                |
      |                |<---------------|                |
      |                |                |                |
      |                |                |                |
      |     180 F8     |                |                |
      |    (log me)    |                |                |
      |<---------------|                |     200 F9     |
      |                |                |   (no log me)  |
      |                |    200 F10     |<---------------|
      |                |   (log me)     |                |
      |     200 F11    |<---------------|                |
      |    (log me)    |                |                |
      |<---------------|                |                |
      |     ACK F12    |                |                |
      |    (log me)    |                |                |
      |--------------->|                |                |
      |                |    ACK F13     |                |
      |                |   (log me)     |                |
      |                |--------------->|     ACK F14    |
      |                |                |   (no log me)  |
      |                |                |--------------->|
      |                Both Way RTP Media                |
      |<================================================>|
      |                |                |     BYE F15    |
      |                |                |   (no log me)  |
      |                |    BYE F16     |<---------------|
      |                |   (log me)     |                |
      |     BYE F17    |<---------------|                |
      |    (log me)    |                |                |
      |<---------------|                |                |
      |     200 F18    |                |                |
      |    (log me)    |                |                |
      |--------------->|                |                |
      |                |     200 F19    |                |
      |                |    (log me)    |                |
      |                |--------------->|     200 F20    |
      |                |                |   (no log me)  |
      |                |                |--------------->|
      |                |                |                | ]]>
            </artwork>
         </figure>
  
           <t><list style="hanging" hangIndent="6"><t hangText="F1:">Alice's UA inserts a &quot;log me&quot; marker in the
   dialog-creating INVITE request F1. Proxy 1 detects the &quot;log
   me&quot; marker, logs the request, and maintains state that this
   dialog is to be logged.</t>
           
           <t hangText="F2:">Proxy 2 removes the &quot;log me&quot; marker in the
   INVITE request F2 before forwarding it as F4. The same applies to
   responses F13 and F19.</t>
         
           <t hangText="F6:">Proxy 2 inserts a &quot;log me&quot; marker in the 180 response to the INVITE request and logs the request before forwarding it as F7. The same applies to response F9 and the BYE request in F15.</t> </list></t>

  
         </section>
         

         <section anchor="onbehalf-case5" title="&quot;Log Me&quot; Marking Passed by Non-supporting Terminating Network">

         <t>In <xref target='stateful-case4'/>, Proxy 2 is not &quot;log
 me&quot; aware and therefore passes marking in all SIP requests and
 responses entering network B according to the rules in Sections 16.6
 and 16.7 of <xref target="RFC3261"/>. Proxy 2 does not log requests
 and responses in the dialog. Proxy 1 supports maintaining the marking
 state of the dialog. When Proxy 1 observes that requests and
 responses received from Proxy 2 are not marked, it adds the marking.</t>
         
         <t>For troubleshooting purposes, Proxy 1 MAY also log the requests and responses received from or sent to Proxy 2 even though Proxy 2 didn't add &quot;log me&quot; to  messages sent to Proxy 1.</t>
         
         <figure align="center" anchor="stateful-case5" title="The Terminating Network Removes &quot;Log Me&quot; Marking from Incoming SIP Messages at its Network Edge.">
            <artwork align="left"><![CDATA[
    [ NETWORK A           ]          [ NETWORK B          ]
    Alice           Proxy 1          Proxy 2            Bob
      |                |                |                |
      |   INVITE F1    |                |                |
      |   (log me)     |                |                |
      |--------------->|                |                |
      |                |    INVITE F2   |                |
      |                |   (log me)     |                |
      |                |--------------->|                |
      |                |                |                |
      |                |                |                |
      |     100  F3    |                |                |
      |   (log me)     |                |                |
      |<---------------|                |                |
      |                |                |   INVITE F4    |
      |                |                |   (log me)     |
      |                |     100  F5    |--------------->|
      |                |   (no log me)  |                |
      |                |<---------------|                |
      |                |                |     180 F6     |
      |                |                |  (no log me)   |
      |                |                |<---------------|
      |                |    180 F7      |                |
      |                |   (no log me)  |                |
      |                |<---------------|                |
      |                |                |                |
      |                |                |                |
      |     180 F8     |                |                |
      |   (log me)     |                |                |
      |<---------------|                |     200 F9     |
      |                |                |   (no log me)  |
      |                |    200 F10     |<---------------|
      |                |  (no log me)   |                |
      |     200 F11    |<---------------|                |
      |   (log me)     |                |                |
      |<---------------|                |                |
      |     ACK F12    |                |                |
      |   (log me)     |                |                |
      |--------------->|                |                |
      |                |    ACK F13     |                |
      |                |   (log me)     |                |
      |                |--------------->|     ACK F14    |
      |                |                |    (log me)    |
      |                |                |--------------->|
      |                Both Way RTP Media                |
      |<================================================>|
      |                |                |     BYE F15    |
      |                |                |  (no log me)   |
      |                |    BYE F16     |<---------------|
      |                |   (no log me)  |                |
      |     BYE F17    |<---------------|                |
      |   (log me)     |                |                |
      |<---------------|                |                |
      |     200 F18    |                |                |
      |   (log me)     |                |                |
      |--------------->|                |                |
      |                |     200 F19    |                |
      |                |    (log me)    |                |
      |                |--------------->|     200 F20    |
      |                |                |    (log me)    |
      |                |                |--------------->|
      |                |                |                |]]>
            </artwork>
         </figure>
  
           <t><list style="hanging" hangIndent="6"><t hangText="F1:">Alice's UA inserts a &quot;log me&quot; marker in the
   dialog-creating INVITE request F1. Proxy 1 detects the &quot;log
   me&quot; marker, logs the request, and maintains state that this
   dialog is to be logged.</t>
           
           <t hangText="F2:">Proxy 2 passes the &quot;log me&quot; marker in the
   INVITE request F2 before forwarding it as F4. The same applies to
   request F13 and response F19.</t>
   
   <t hangText="F6:">Bob's UA does not support &quot;log me&quot;
   marking and does not echo the &quot;log me&quot; marker in
   response F6. The same applies to response F9 and the BYE
   request F15.</t>
         
           <t hangText="F7:">Proxy 1 inserts a &quot;log me&quot; marker in the 180
   response of the INVITE request before forwarding it as F8. The same
   applies to response F10 and the BYE request F16.</t> </list></t>

  
         </section> 
        
</section>
        
    </section> 
          

</section>

<section title="Errors">
        
<section anchor="error-cases" title="Error Cases">
        <t>The following error cases are possible for &quot;log me&quot; marking:
        
        <list style="numbers">
               <t>A &quot;log me&quot; marker is unexpectedly missing from a dialog that is being logged.</t>
               <t>A &quot;log me&quot; marker unexpectedly appears in a dialog that is not being logged.</t>
               <t>A &quot;log me&quot; marker unexpectedly disappears and then
       reappears in a dialog being logged. This is treated in the same
       way as case 1.</t>
               <t>A &quot;log me&quot; marker is unexpectedly missing from a
       retransmission in a dialog being logged. This is treated in the
       same way as case 1.</t>
        </list>
</t>
<t>
        These cases apply to any request or response sent by any entity and in any direction in a dialog being &quot;log me&quot; marked. Detection of these error cases is described in this section.
        </t>

	  

		
        <section title="Missing &quot;Log Me&quot; Marker Error Case">
        <t>Since &quot;log me&quot; marking is per-dialog, if a dialog is
being marked and marking is missing from a request or response then
this is an error.</t><t>However, detecting such errors is not as
simple as checking for missing markers because of cases such as
non-supporting terminals where it is normal that marking is not done.</t>
        <t>Detecting errors must be evaluated separately for each neighbor. It
is an error if a particular neighbor has previously sent &quot;log me&quot; in the
dialog and then stops, independently of what has been happening with
other neighbors.</t>
        <t>UAs and intermediaries that are stateless with respect to
&quot;log me&quot; marking are not able detect such errors. User
agents and intermediaries that are stateful with respect to &quot;log
me&quot; marking are able to detect that a marker is missing from a
dialog that has previously been &quot;log me&quot; marked. Error cases
are illustrated in this section, and non-error cases in <xref
target="missing_marker_non_error"/>.</t> 
        
      
        <t>The following figures illustrate missing &quot;log me&quot; marker errors.</t>
        
        <t><xref target="error-orig-UA"/> shows an error detected at Proxy 1, where an expected &quot;log me&quot; marker is missing.</t>
        
        <figure align="center" anchor="error-orig-UA" title="Error Case: Missing &quot;Log Me&quot; Marker">
            <artwork align="left"><![CDATA[
    [ NETWORK A           ]          [ NETWORK B          ]
    Alice           Proxy 1          Proxy 2            Bob
      |                |                |                |
      |   INVITE F1    |                |                |
      |    (log me)    |  INVITE F2     |                |
      |--------------->|   (log me)     |  INVITE F3     |
      |                |--------------->|   (log me)     |
      |                |                |--------------->|
      |                |                |                |
      |                |                |   200 F4       |
      |                |     200 F5     |   (log me)     |
      |     200 F6     |    (log me)    |<---------------|
      |    (log me)    |<---------------|                |
      |<---------------|                |                |
      |                |                |                |            
      |     ACK F7     |                |                |
      |  (no log me)   |                |                |
      |--------------->|                |                |
      |                |     ACK F8     |                |
      |                |  (no log me)   |                |
      |                |--------------->|                |
      |                |                |     ACK F9     |
      |                |                |  (no log me)   |
      |                |                |--------------->|]]>
            </artwork>
         </figure>
         
           <t><list style="hanging" hangIndent="6"><t hangText="F1:">Proxy 1 detects the &quot;log me&quot; marker and maintains state that this dialog is to be logged.</t>
           
           <t hangText="F7:">Proxy 1 detects that the expected &quot;log me&quot; marker is missing, considers it to be an error, and stops &quot;log me&quot; marking in subsequent requests and responses in this dialog.</t></list></t>


        <t><xref target="error-orig-proxy2"/> shows an error detected at both Proxy
2 and Bob's UA. </t>

        <figure align="center" anchor="error-orig-proxy2" title="Error Case: Missing &quot;Log Me&quot; Marker">
            <artwork align="left"><![CDATA[
    [ NETWORK A           ]          [ NETWORK B          ]
    Alice           Proxy 1          Proxy 2            Bob
      |   INVITE F1    |                |                |
      |   (log me)     |                |                |
      |--------------->|                |                |
      |                |    INVITE F2   |                |
      |                |   (log me)     |                |
      |                |--------------->|                |
      |                |                |                |
      |                |                |                |
      |     100  F3    |                |                |
      |   (log me)     |                |                |
      |<---------------|                |                |
      |                |                |   INVITE F4    |
      |                |                |   (log me)     |
      |                |     100  F5    |--------------->|
      |                |   (log me)     |                |
      |                |<---------------|                |
      |                |                |     180 F6     |
      |                |                |     (log me)   |
      |                |                |<---------------|
      |                |    180 F7      |                |
      |                |   (log me)     |                |
      |                |<---------------|                |
      |                |                |                |
      |                |                |                |
      |     180 F8     |                |                |
      |   (log me)     |                |                |
      |<---------------|                |     200 F9     |
      |                |                |    (log me)    |
      |                |    200 F10     |<---------------|
      |                |   (log me)     |                |
      |     200 F11    |<---------------|                |
      |   (log me)     |                |                |
      |<---------------|                |                |
      |     ACK F12    |                |                |
      |  (no log me)   |                |                |
      |--------------->|                |                |
      |                |    ACK F13     |                |
      |                | (no log me)    |                |
      |                |--------------->|     ACK F14    |
      |                |                |   (no log me)  |
      |                |                |--------------->| ]]>
            </artwork>
         </figure>
         
           <t><list style="hanging" hangIndent="6"><t hangText="F2:">Proxy 2 detects the &quot;log me&quot; marker and maintains state that this dialog is to be logged.</t>
           
           <t hangText="F4:">Bob's UA detects the &quot;log me&quot; marker and maintains state that this dialog is to be logged.</t>
           
           <t hangText="F12:">Proxy 1 detects that the expected &quot;log me&quot;
   marker is missing, considers it to be an error, and stops &quot;log
   me&quot; marking in subsequent requests and responses in this
   dialog.  Hence, it does not insert a &quot;log me&quot; marker in
   F13.</t>

           <t hangText="F13:">Proxy 2 detects that the expected &quot;log me&quot;
   marker is missing, considers it to be an error, and stops &quot;log
   me&quot; marking in subsequent requests and responses in this
   dialog.</t>
           
           <t hangText="F14:">Proxy 2 does not insert a &quot;log me&quot; marker
   because it has stopped &quot;log me&quot; marking due to an error
   observed in F13.  Bob's UA detects that the expected &quot;log
   me&quot; marker is missing, considers it to be an error, and stops
   &quot;log me&quot; marking in subsequent requests and responses in
   this dialog.</t></list></t>         

        </section> 
           
      
      
      <section anchor="logme_mid_dialog" title="&quot;Log Me&quot; Marker Appears Mid-dialog Error Case">
         <t> SIP endpoints, intermediaries acting on behalf of endpoints, and
 B2BUAs that can perform &quot;log me&quot; marking are stateful. Such
 entities will expect a &quot;log me&quot; marker only for dialogs
 where the initial dialog-creating request was &quot;log me&quot;
 marked, either by themselves or by an upstream entity. &quot;Log
 me&quot; marking that subsequently begins mid-dialog is an error.</t>
         
         <t><xref target="mid-dialog-error"/> illustrates a &quot;log me&quot;
 marking error observed in the middle of a dialog. Alice's UA supports
 &quot;log me&quot; marking but the call is not initially marked for
 logging, i.e., INVITE F1 is not &quot;log me&quot; marked. But Alice's
 UA starts to &quot;log me&quot; mark at the ACK request F7. Proxy 1
 supports &quot;log me&quot; marking at the originating network
 boundary and therefore detects the error, does not log signaling, and
 removes the &quot;log me&quot; marker before forwarding the ACK
 request F8.</t>
            
            <figure align="center" anchor="mid-dialog-error" title="Error Case: &quot;Log Me&quot; Marker Begins Mid-dialog">
                <artwork align="left"><![CDATA[
       [ NETWORK A           ]          [ NETWORK B          ]
       Alice           Proxy 1          Proxy 2            Bob
         |                |                |                |
         |   INVITE F1    |                |                |
         |  (no log me)   |    INVITE F2   |                |
         |--------------->|   (no log me)  |    INVITE F3   |
         |                |--------------->|   (no log me)  |
         |                |                |--------------->|
         |                |                |                |
         |                |                |    200 F4      | 
         |                |    200 F5      |  (no log me)   |
         |    200 F6      |  (no log me)   |<---------------|
         |  (no log me)   |<---------------|                |
         |<---------------|                |                |
         |                |                |                |
         |    ACK F7      |                |                |
         |   (log me)     |                |                |
         |--------------->|                |                |
         |                |    ACK F8      |                |
         |                |  (no log me)   |                |
         |                |--------------->|                |
         |                |                |    ACK F9      |
         |                |                |   (log me)     |
         |                |                |--------------->|]]>
                </artwork>
             </figure>
         
         
         
      </section>
  
  
  </section>
        

<section anchor="non-error-cases" title="Non-error Cases">

<section anchor="missing_marker_non_error" title="Missing &quot;Log Me&quot; Marker Non-error Case">
               
            <t>The following figure illustrates a non-error case.</t>
            
            <t><xref target="non-error-proxy2"/> shows Proxy 2 receiving a response with no &quot;log me&quot; marker that is not an error case. Proxy 2 is configured by network B to perform &quot;log me&quot; marking on behalf of Bob's UA, which does not support &quot;log me&quot; marking. Proxy 2 does not therefore expect responses from Bob to include a &quot;log me&quot; marker.</t>
            
            <figure align="center" anchor="non-error-proxy2" title="Non-error Case: Missing &quot;Log Me&quot; Marker">
                <artwork align="left"><![CDATA[
    [ NETWORK A           ]          [ NETWORK B          ]
    Alice           Proxy 1          Proxy 2            Bob
      |                |                |                |
      |   INVITE F1    |                |                |
      |   (log me)     |                |                |
      |--------------->|                |                |
      |                |    INVITE F2   |                |
      |                |   (log me)     |                |
      |                |--------------->|                |
      |                |                |                |
      |                |                |                |
      |     100  F3    |                |                |
      |   (log me)     |                |                |
      |<---------------|                |                |
      |                |                |   INVITE F4    |
      |                |                |   (log me)     |
      |                |     100  F5    |--------------->|
      |                |   (log me)     |                |
      |                |<---------------|                |
      |                |                |     180 F6     |
      |                |                |   (no log me)  |
      |                |                |<---------------|
      |                |    180 F7      |                |
      |                |   (log me)     |                |
      |                |<---------------|                |
      |     180  F8    |                |                |
      |    (log me)    |                |                |
      |<---------------|                |                | ]]>
                </artwork>
             </figure>
             
               <t><list style="hanging" hangIndent="6"><t hangText="F2:">Proxy 2 detects the &quot;log me&quot; marker and
       maintains state that this dialog is to be logged. Proxy 2
       inserts &quot;log me&quot; markers on behalf of Bob's user
       agent, such as in F7.</t>
               
               <t hangText="F6:">Proxy 2 detects that the &quot;log me&quot; marker is missing from the response but considers &quot;log me&quot; marking to be ongoing as a marker was not expected. </t>
               
               <t hangText="F7:">Proxy 2 continues to &quot;log me&quot; mark requests and responses on behalf of Bob's UA.</t></list></t>
            
        </section> 

        <section anchor="logme_mid_dialog_non_error" title="&quot;Log Me&quot; Marker Appears Mid-dialog Non-error Case">

	  
		
<t>A SIP intermediary that can perform &quot;log
me&quot; marking on behalf of an endpoint MAY
optionally mark a request or response towards a
non-supporting endpoint, such as the 100 response F3
in <xref target="stateful-case1"/>.  In this case, the
endpoint will receive a &quot;log me&quot; marker
mid-dialog, and this is not considered an error.</t>

<t>Another use case is a network in which some (but
not all) endpoints support &quot;log me&quot; marking
and that wants to avoid treating endpoints differently by
always managing &quot;log me&quot; marking at a SIP
intermediary. In this case, the endpoint that supports
&quot;log me&quot; is not configured to mark a dialog;
instead, the SIP intermediary is configured to perform
&quot;log me&quot; marking on behalf of that
endpoint. This case still requires authorization as
described in <xref target="authorization"/>. This SIP
intermediary MAY optionally mark a request or response
towards the endpoint, such as the 100 response F3 in
<xref target="stateful-case1"/>. The endpoint will
receive a &quot;log me&quot; marker mid-dialog, which is not considered an error.
</t>

        </section>

<section anchor="logme_combine_dialogs" title="Combining Dialogs Non-error Case">


<t>When troubleshooting call flows that involve the
SIP Join header field specified in <xref
target="RFC3911"/>, the ideal scenario is to have
&quot;log me&quot; marking enabled on all UAs and
intermediaries participating in the end-to-end
session. If the ideal  scenario is not feasible, the
following rules apply:

<list style="symbols">


      <t>If an endpoint or an intermediary that is &quot;log me&quot; aware and
      is already &quot;log me&quot; marking a dialog receives a SIP
      INVITE with a Join header field and without a &quot;log me&quot;
      marker, it MUST NOT &quot;log me&quot; mark responses and
      requests exchanged within the new dialog established as a result
      of processing the SIP INVITE.</t>
	  	  
              
      <t>If an endpoint or an intermediary that is &quot;log me&quot; aware and
      is not &quot;log me&quot; marking a dialog receives a SIP INVITE
      with a Join header field and with a &quot;log me&quot; marker,
      it MUST &quot;log me&quot; mark responses and requests exchanged
      within the new dialog established as a result of processing the
      SIP INVITE as per <xref target="SIP_behavior"/> of this
      document. </t>

             </list>
</t>



        </section>


</section>

<section anchor="error_handling" title="Error Handling">

<t>The two error types that SIP entities must handle are
defined in <xref target="error-cases"/>: a missing marker
error and an error of &quot;log me&quot; marking that begins
mid-dialog. <xref target="non-error-cases"/> gives exceptions
that have marking that begins mid-dialog or a missing marker but are not errors.</t>

<t> If a missing marker error is detected by a UA, SIP
intermediary, or B2BUA, it SHOULD consider this to be an error
condition in the &quot;log me&quot; functionality. It MUST NOT
mark subsequent requests and responses, and it MUST stop logging
messages in the same dialog. Any previously logged messages
SHOULD be retained, for the time period defined in <xref
target="retaining_logs"/>, and not deleted.</t>

<t>If a &quot;log me&quot; marking that begins mid-dialog
error is detected by a UA, SIP intermediary, or B2BUA, it
SHOULD consider this to be an error condition in the &quot;log
me&quot; functionality. It MUST NOT forward the &quot;log
me&quot; marker, and it MUST NOT log the message. It MUST NOT mark
subsequent requests and responses, and it MUST NOT log subsequent
messages in the same dialog.</t>

<t>&quot;Log me&quot; marking errors can be detected and handled only by supporting UAs or B2BUAs. A SIP proxy as defined in <xref target="RFC3261"/> cannot detect or handle marking errors and will simply forward any &quot;log me&quot; marker it receives.</t>

</section> 
	
	</section> 

   <section title="Augmented BNF for the &quot;logme&quot; Parameter">
    <t>ABNF is described in <xref target="RFC5234"/>. This document introduces a new &quot;logme&quot; parameter for the Session-ID header field defined in Section 5 of <xref target="RFC7989"/>.</t>
    <figure align="center" anchor="logme-abnf" title="Augmented BNF for the &quot;logme&quot; Parameter">
       <artwork type="abnf"><![CDATA[
       
       sess-id-param       =/ logme-param
       
       logme-param         = "logme"    ]]>
     </artwork>
     </figure>
    </section>
   
   
   <section anchor="security" title="Security Considerations">
      <section anchor="authorization" title="&quot;Log Me&quot; Authorization">
        		 
		 <t>&quot;Log me&quot; marking MUST be disabled by default both at the endpoints and intermediaries and MUST be enabled only by authorized users. For example, an end user or network administrator must give permission for a terminal that supports &quot;log me&quot; marking in order to initiate marking. Similarly, a network administrator must enable a configuration at the SIP intermediary to perform &quot;log me&quot; marking on behalf of a terminal that does not support &quot;log me&quot; marking. The permission MUST be limited to only specific calls of interest that are originated in a given time duration.</t>
         

         <t>Activating a debug mode affects the operation of a terminal;
	 therefore, the debugging configuration MUST be supplied by an authorized
	 party to an authorized terminal through a secure communication
	 channel. </t>
         
      </section>
      <section title="&quot;Log Me&quot; Marker Removal">
         <t>The &quot;log me&quot; marker is not sensitive information, though it will sometimes be inserted because a particular device is experiencing problems. </t>
         <t>The presence of a &quot;log me&quot; marker will cause some SIP entities to log signaling messages. Therefore, this marker MUST be removed at the earliest opportunity if it has been incorrectly inserted, such as appearing mid-dialog in a dialog that was not being logged or outside the configured start and stop of logging.</t>
         <t>If SIP requests and responses are exchanged with an external network with which there is no agreement to pass &quot;log me&quot; marking, then the &quot;log me&quot; marking is removed as mandated in <xref target="external_network"/>. This behavior applies to incoming and outgoing requests and responses.</t>
      </section>
      <section title="Denial-of-Service Attacks">
         <t>Maliciously configuring a large number of terminals to simultaneously mark dialogs with a &quot;log me&quot; marker will cause high processor load on SIP entities that are logging signaling. Since &quot;log me&quot; marking is for the small number of dialogs subject to troubleshooting or regression testing, the number of dialogs that can be simultaneously logged can be statically limited without adversely affecting the usefulness of &quot;log me&quot; marking. Also, the SIP intermediary closest to the terminal and SIP intermediary at network edge (e.g., Session Border Controllers) can be configured to screen-out &quot;log me&quot; markers when troubleshooting or regression testing is not in progress.</t>
      </section>

      
      <section title="Data Protection">
         <t>A SIP entity that has logged information MUST protect the logs. Storage of the log files are subject to the security considerations specified in <xref target="RFC6872"/>.</t>
      </section>
  </section> 
  
	<section anchor="privacy" title="Privacy Considerations">
         <t>Logging includes all SIP header fields. The SIP privacy mechanisms defined in <xref target="RFC3323"/> can be used to ensure that logs do not divulge personal identity information in the core SIP header fields specified in <xref target="RFC3261"/>.</t>
		 

		 
		 <t>Privacy mechanisms might also need to be applied to header fields defined by SIP extensions and for managing the confidentiality of the Request-URI and SIP header fields and bodies.</t>
		 
         <section anchor="personal_identifiers" title="Personal Identifiers">
		 
		 
            <t>&quot;Log me&quot; marking is defined for the SIP protocol, and
	    SIP has header fields such as From, Contact, and P-Asserted-Identity that can carry personal identifiers. Different protocol interactions can be correlated using the Session-ID and Call-ID header fields, but such correlation is limited to a single end-to-end session.</t>
            <t>In order to protect user privacy during logging, privacy settings can be enabled or requested by the terminal used by the end user. <xref target="RFC3323"/> suggests two mechanisms:
              <list style="symbols">
               <t>By using the value "anonymous" in the From header field</t>
               <t>By requesting header-level and session-level privacy from SIP intermediaries using the Privacy header</t>
              </list>
            </t>
		
			<t>Endpoints that support Globally Routable User Agent URIs (GRUUs) can use a temporary GRUU (see Section 3.1.2 of <xref target="RFC5627"/>) assigned by the Registrar in order to protect user privacy as discussed in Section 10.3 of <xref target="RFC5627"/>.</t>

<t>Intermediaries that perform &quot;log me&quot; marking on behalf of the endpoints (see <xref target="acting_on_behalf"/>) may also be configured to apply privacy (as defined in Section 3.3 of <xref target="RFC3323"/>) on messages that belong to a dialog that is &quot;log me&quot; marked.</t>



<t>Complete anonymization (e.g., the Request-URI and
the &quot;username&quot; field in the &quot;o=&quot;
parameter of an SDP body) may not be possible in all
circumstances; therefore, administrators of the
originating and terminating networks should consider
how privacy will be ensured when providing consent for
&quot;log me&quot; marking.</t>
			
			<t>&quot;Log me&quot; marking is typically used for
			troubleshooting and regression testing; in some
			cases, a service-provider-owned device with a dummy
			account can be used instead of a customer device. In
			such cases, no personal identifiers are included in
			the logged signaling messages.</t>
			
         </section> 
		 
         <section title="Data Stored at SIP Intermediaries">
            <t>SIP endpoints and intermediaries that honor the &quot;log
	    me&quot; request store all the SIP messages that are exchanged
	    within a given dialog. SIP messages can contain the personal
	    identifiers listed in <xref target="personal_identifiers"/> and
	    additionally a user identity, calling party number, IP address,
	    hostname, and other user-related or device-related items. The SIP
	    message bodies describe the kind of session being set up by the
	    identified end user and device.</t> 
		

	  
		
            <t>&quot;Log me&quot; marking does not introduce any additional
	    user or device data to SIP but might indicate that a specific
	    user is experiencing a problem.</t> 
			
			<t>If the SIP SDP parameters <xref
			target="SDP-PARAMETERS"/> contain sensitive security
			information (e.g., encryption keys) such as
			&quot;crypto&quot; <xref target="RFC4568"/>,
			3GPP-Integrity-Key, or 3GPP-SRTP-Config <xref
			target="RFC6064"/> attributes, then the attribute value
			MUST be masked with a dummy value prior to storing the
			message in a log file. For example, the attribute
			value can be replaced with a string of special
			characters like &quot;X&quot;, &quot;*&quot;, and
			&quot;#&quot; as shown in the example below.</t>
			
<figure>
<artwork type="abnf"><![CDATA[
a=crypto:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
 XXXXXXXXXXXXX ]]>
</artwork>
</figure>
			
         </section>
		 
         <section title="Data Visible at Network Elements">
            <t>SIP messages that are logged due to &quot;log me&quot; requests
	    are stored only by the SIP initiators, intermediaries, and
	    recipients. Enablers as defined in Section 3.1 of <xref
	    target="RFC6973"/>, such as firewalls and DNS servers, do not log
	    messages due to the &quot;log me&quot; marking.</t>
         </section>
		 
         <section title="Preventing Fingerprinting">
            <t>&quot;Log me&quot; functionality is typically used to
	    troubleshoot a given problem and, hence, can be used as a method
	    to identify users and devices that are experiencing issues. The
	    best way to prevent fingerprinting of users is to enable or
	    request SIP privacy for the logged dialog.</t>
         </section>
		 
         <section anchor="retaining_logs" title="Retaining Logs">

	  
		 
		 
            <t>The lifetime of &quot;log me&quot; marking is equivalent to the
	    lifetime of the dialog that initiated the &quot;log me&quot;
	    request. When &quot;log me&quot; is extended to related dialogs,
	    the lifetime is extended until there is no remaining related dialog for
	    the end-to-end session.</t>
            <t>&quot;Log me&quot; automatically expires at the end of the
	    dialog, and there is no explicit mechanism to turn off logging
	    within a dialog.</t>
            <t>The scope of &quot;log me&quot; marking is limited, i.e., a user
	    or the network administrator has to enable it on a per-session
	    basis or for a specific time period. This minimizes the risk of
	    exposing user data for an indefinite time.</t>
            <t>The retention time period for logged messages SHOULD be the
	    minimum needed for each particular troubleshooting or testing
	    case. The retention period is configured based on the data-retention policies of service providers and enterprises.</t>
         </section>
		 
         <section anchor="user_control" title="User Control of Logging">
            <t>Consent to turn on &quot;log me&quot; marking for a given
	    session MUST be provided by the end user or by the network
	    administrator. It is handled outside of the protocol through user
	    interface or application programming interfaces at the endpoint,
	    call control elements, and network management systems.</t>
			
			<t>Originating and terminating endpoints that are
			&quot;log me&quot; aware and have a user interface
			MUST indicate (using text, icon, etc.) to the user that
			a session is being logged.</t>
			
            <t>SIP entities across the communication path MAY be configured to
	    pass through the &quot;log me&quot; marking but not honor the
	    request, i.e., not log the data based on local policies.</t>
         </section>
		 
        
         <section title="Recommended Defaults">
            <t>The recommended defaults for &quot;log me&quot; marking are:
               <list style="symbols">
               <t>Turn on SIP privacy as described in <xref target="privacy"/>
	       or use a device that is service provider owned with a dummy user identity for test calls.</t> 
               <t>Use the local UUID portion of the Session-ID header field value at the originating device as the test case identifier as described in <xref target="test_identifier"/>.</t>
               </list>
            </t>
         </section>
    </section>


  <section title="IANA Considerations">
    <section title="Registration of the &quot;logme&quot; Parameter">
        <t>The following parameter has been added to the "Header Field Parameters and Parameter Values" section of the "Session Initiation Protocol (SIP) Parameters" registry:</t>
        <texttable anchor='logme-IANA' title="">
         <ttcol align='left'>Header Field</ttcol>
         <ttcol align='left'>Parameter Name</ttcol>
         <ttcol align='left'>Predefined Values</ttcol>
         <ttcol align='left'>Reference</ttcol>
         <c>Session-ID</c>
         <c>logme</c>
         <c>No (no values are allowed) </c>
         <c>[RFC8497]</c>
        </texttable>
    </section>
   </section>

</middle>


<back>

  <references title="Normative References">


     &RFC2119;
     
     &RFC3261;
     
     &RFC3323;
 
 &RFC3891;
 
 &RFC3911;
 
 &RFC4538;
 
 &RFC4568;
 
 &RFC5627;
 
 &RFC6064;
          
     &RFC6872;
     
     &RFC6873;
     
     &RFC7989;
     
     &RFC8174;

 
<reference anchor="MEDIA-TYPES"
   target="https://www.iana.org/assignments/media-types/"> 
  <front>
    <title>Media Types</title>
    <author><organization>IANA</organization></author>
    <date />
  </front>
</reference>




<reference anchor="SDP-PARAMETERS"
   target="https://www.iana.org/assignments/sdp-parameters/">
<front>

<title>Session Description Protocol (SDP) Parameters</title>
<author><organization>IANA</organization></author>
<date />
</front>
</reference>



  </references>

  <references title="Informative References">

     &RFC3665;
     
     &RFC5234;
     
     &RFC5589;
     
     &RFC6973;
      
     &RFC7092;
     
     &RFC7206;
     
     &RFC8123;
	 

  </references>
  
  <section anchor="acknowledgments" title="Acknowledgments" numbered="no">
    <t>The authors wish to thank Paul Giralt, Paul Kyzivat, Jorgen Axell,
    Christer Holmberg, Vijay Gurbani, Ben Campbell, Gonzalo Salgueiro,
    Francesca Palombini, Adam Roach, Mirja Kuhlewind, Benjamin Kaduk, Eric
    Rescorla, Alissa Cooper, Warren Kumari, and Alexey Melnikov for their
    constructive review comments and guidance while developing this document.</t>
  </section>
  

</back>

</rfc>

