<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="no"?>
<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>
<?rfc sortrefs="yes" ?>

<rfc number="5998" category="std" ipr="pre5378Trust200902" updates="5996">
<front>
  <title abbrev="Extension for EAP in IKEv2">An Extension for EAP-Only Authentication in IKEv2</title>
        <author initials="P." surname="Eronen" fullname="Pasi Eronen">
<organization>Independent</organization>
<address>
                <email>pe@iki.fi</email> </address>

        </author>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization>Nokia Siemens Networks</organization>
      <address>
    <postal>
     <street>Linnoitustie 6</street>
     <city>Espoo</city>
     <code>02600</code>
     <country>Finland</country>
    </postal>
    <phone>+358 (50) 4871445</phone>
    <email>Hannes.Tschofenig@gmx.net</email>
    <uri>http://www.tschofenig.priv.at</uri>
   </address>
    </author>
    <author initials="Y." surname="Sheffer" fullname="Yaron Sheffer">
      <organization>Independent</organization>
      <address>
        <email>yaronf.ietf@gmail.com</email>
      </address>
    </author>
        <date month="September" year="2010"/>
        <area>Security</area>

<!--[rfced] Please insert any keywords (beyond those that appear in 
  the title) for use on http://www.rfc-editor.org/rfcsearch.html. --> 
<keyword>example</keyword>

<!-- [rfced] Please note that after you have approved the document,
post-xml2rfc changes will be made to update the header and
boilerplate as described in RFC 5741.
-->

  <abstract>

  <t>IKEv2 specifies that Extensible Authentication Protocol (EAP) authentication must be used together
  with responder authentication based on public key signatures. This
  is necessary with old EAP methods that provide only unilateral
  authentication using, e.g., one-time passwords or token cards.</t>

  <t>This document specifies how EAP methods that provide mutual
  authentication and key agreement can be used to provide extensible
  responder authentication for IKEv2 based on methods other than
  public key signatures.</t>

  </abstract>
</front>

<middle>

<!-- ====================================================================== -->

<section anchor="introduction" title="Introduction">

  <t>The Extensible Authentication Protocol (EAP), defined in <xref
  target="RFC3748"/>, is an authentication framework that
  supports multiple authentication mechanisms. Today, EAP has been
  implemented at end hosts and routers that connect via switched
  circuits or dial-up lines using PPP <xref target="RFC1661"/>, IEEE
  802 wired switches <xref target="IEEE8021X"/>, and IEEE 802.11
  wireless access points <xref target="IEEE80211i"/>.</t>

  <t>One of the advantages of the EAP architecture is its
  flexibility. EAP is used to select a specific authentication
  mechanism, typically after the authenticator requests more
  information in order to determine the specific authentication method
  to be used. Rather than requiring the authenticator (e.g., wireless
  LAN access point) to be updated to support each new authentication
  method, EAP permits the use of a backend authentication server that
  may implement some or all authentication methods.</t>

  <t>IKEv2 (<xref target="RFC4306"/> and <xref target="RFC5996"/>)
  is a component of
  IPsec used for performing mutual authentication and establishing and
  maintaining Security Associations (SAs) for IPsec ESP and Authentication Header (AH). In addition
  to supporting authentication using public key signatures and shared
  secrets, IKEv2 also supports EAP authentication.</t>

  <t>IKEv2 provides EAP authentication since it was recognized that
  public key signatures and shared secrets are not flexible enough to
  meet the requirements of many deployment scenarios.  By using EAP,
  IKEv2 can leverage existing authentication infrastructure and
  credential databases, since EAP allows users to choose a method
  suitable for existing credentials, and also makes separation of the
  IKEv2 responder (VPN gateway) from the EAP authentication endpoint
  (backend Authentication, Authorization, and Accounting (AAA) server) easier.</t>

  <t>Some older EAP methods are designed for unilateral authentication
  only (that is, EAP peer to EAP server). These methods are used in
  conjunction with IKEv2 public-key-based authentication of the
  responder to the initiator. It is expected that this approach is
  especially useful for "road warrior" VPN gateways that use, for
  instance, one-time passwords or token cards to authenticate the
  clients.</t>

  <t>However, most newer EAP methods, such as those typically used
  with IEEE 802.11i wireless LANs, provide mutual authentication and
  key agreement. Currently, IKEv2 specifies that these EAP
  methods must also be used together with
  responder authentication based on public key signatures.</t>

  <t> In order for the public key signature authentication of the gateway to be
    effective, a deployment of Public Key Infrastructure (PKI) is required, which has to include
    management of trust anchors on all supplicants. In many environments,
    this is not realistic, and the security of the gateway public key is
    the same as the security of a self-signed certificate. Mutually authenticating EAP methods alone can
  provide a sufficient level of security in many circumstances, and
  in fact, in some deployments, IEEE 802.11i uses EAP without any PKI for authenticating
  the Wireless Local Area Network (WLAN) access points.</t>

  <t>This document specifies how EAP methods that offer mutual
  authentication and key agreement can be used to provide responder
  authentication in IKEv2 completely based on EAP.</t>

<section anchor="terminology" title="Terminology">

<t>All notation in this protocol extension is taken from <xref target="RFC4306"/>.</t>
<t>Numbered messages refer to the IKEv2 message sequence when using EAP. Thus:
<list style="symbols">
<t>Message 1 is the request message of IKE_SA_INIT.</t>
<t>Message 2 is the response message of IKE_SA_INIT.</t>
<t>Message 3 is the first request of IKE_AUTH.</t>
<t>Message 4 is the first response of IKE_AUTH.</t>
</list>
</t>
  <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
  NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL"
  in this document are to be interpreted as described in <xref
  target="RFC2119"/>.</t>

</section>

</section>

<!-- ====================================================================== -->

<section anchor="scenarios" title="Scenarios">

  <t>In this section, we describe two scenarios for extensible
  authentication within IKEv2. These scenarios are intended to be
  illustrative examples rather than specifying how things should be
  done.</t>

  <t><xref target="co-located"/> shows a configuration where the EAP
  and the IKEv2 endpoints are co-located. Authenticating the IKEv2
  responder using both EAP and public key signatures is redundant.
  Offering EAP-based authentication has the advantage that multiple
  different authentication and key exchange protocols are available
  with EAP with different security properties (such as strong password-based protocols, protocols offering user identity confidentiality,
  and many more). </t>

<figure title="EAP and IKEv2 Endpoints Are Co-Located" anchor="co-located">
<artwork><![CDATA[
       +------+-----+                            +------------+
  O    |   IKEv2    |                            |   IKEv2    |
 /|\   | Initiator  |<---////////////////////--->| Responder  |
 / \   +------------+          IKEv2             +------------+
 User  |  EAP Peer  |          Exchange          | EAP Server |
       +------------+                            +------------+
]]></artwork>
</figure>

  <t><xref target="corporate-network"/> shows a typical corporate
  network access scenario. The initiator (client) interacts with the
  responder (VPN gateway) in the corporate network. The EAP exchange
  within IKE runs between the client and the home AAA server. As a
  result of a successful EAP authentication protocol run, session keys
  are established and sent from the AAA server to the VPN gateway, and
  then used to authenticate the IKEv2 SA with AUTH payloads.</t>

  <t>The protocol used between the VPN gateway and AAA server could
  be, for instance, Diameter <xref target="RFC4072"/> or
  RADIUS <xref target="RFC3579"/>. See <xref target='security'/>
  for related security considerations.</t>

<figure title="Corporate Network Access" anchor="corporate-network">
<artwork><![CDATA[
                             +-------------------------------+
                             |       Corporate network       |
                             |                               |
                        +-----------+            +--------+  |
                        |   IKEv2   |     AAA    |  Home  |  |
  IKEv2      +////----->+ Responder +<---------->+  AAA   |  |
  Exchange   /          | (VPN GW)  |  (RADIUS/  | Server |  |
             /          +-----------+  Diameter) +--------+  |
             /               |        carrying EAP           |
             |               |                               |
             |               +-------------------------------+
             v
      +------+-----+
  o   |   IKEv2    |
 /|\  | Initiator  |
 / \  | VPN client |
User  +------------+
]]></artwork>
</figure>

</section>

<!-- ====================================================================== -->

<section anchor="solution" title="Solution">

  <t>IKEv2 specifies that when the EAP method establishes a shared
  secret key, that key is used by both the initiator and responder to
  generate an AUTH payload (thus authenticating the IKEv2 SA set up by
  messages 1 and 2).</t>

  <t>When used together with public key responder authentication, the
  responder is, in effect, authenticated using two different methods:
  the public key signature AUTH payload in message 4, and the
  EAP-based AUTH payload later.</t>

  <t>If the initiator does not wish to use public-key-based responder
  authentication, it includes an EAP_ONLY_AUTHENTICATION notification
  payload (16417) in message 3. The Protocol ID and Security Parameter Index (SPI) size fields are
  set to zero, and there is no additional data associated with
  this notification.</t>

  <t>If the responder supports this notification and chooses to use it, it omits the
  public-key-based AUTH payload and CERT payloads from message 4.</t>

  <t>If the responder does not support the EAP_ONLY_AUTHENTICATION
  notification or does not wish to use it, it ignores the notification payload, and includes the
  AUTH payload in message 4. In this case, the initiator MUST verify
  that payload and any associated certificates,
  as per <xref target="RFC4306"/>.</t>

<t>When receiving message 4, the initiator MUST verify that the proposed
EAP method is allowed by this specification, and MUST abort the protocol
immediately otherwise.</t>

  <t>Both the initiator and responder MUST verify that the EAP method
  actually used provided mutual authentication and established a
  shared secret key. The AUTH payloads sent after EAP Success MUST use
  the EAP-generated key, and MUST NOT use SK_pi or SK_pr (see Section 2.15 of
  <xref target="RFC5996"/>).</t>

  <t>An IKEv2 message exchange with this modification is shown below:</t>

<figure>
<artwork><![CDATA[

   Initiator                   Responder
  -----------                 -----------
   HDR, SAi1, KEi, Ni,
        [N(NAT_DETECTION_SOURCE_IP),
         N(NAT_DETECTION_DESTINATION_IP)]  -->

                         <--   HDR, SAr1, KEr, Nr, [CERTREQ],
                                    [N(NAT_DETECTION_SOURCE_IP),
                                     N(NAT_DETECTION_DESTINATION_IP)]

   HDR, SK { IDi, [IDr], SAi2, TSi, TSr,
             N(EAP_ONLY_AUTHENTICATION),
             [CP(CFG_REQUEST)] }  -->

                         <--   HDR, SK { IDr, EAP(Request) }

   HDR, SK { EAP(Response) }  -->

                         <--   HDR, SK { EAP(Request) }

   HDR, SK { EAP(Response) }  -->

                         <--   HDR, SK { EAP(Success) }

   HDR, SK { AUTH }  -->

                         <--   HDR, SK { AUTH, SAr2, TSi, TSr,
                                         [CP(CFG_REPLY] }

]]></artwork></figure>

   <t>Note: all notation in the above protocol sequence and elsewhere in this specification is as
   defined in <xref target="RFC4306"/>, and see in particular Sec. 1.2 of 
   <xref target="RFC4306"/> for payload types.</t>
   <t>The NAT detection and Configuration payloads are shown for
   informative purposes only; they do not change how EAP
   authentication works.</t>
<t>
  An IKE SA that was set up with this extension can be resumed using the mechanism described
   in <xref target="RFC5723"/>. However, session resumption does not change the authentication
   method. Therefore, during the IKE_AUTH exchange of the resumed
   session, this extension MUST NOT be sent by the initiator. 
</t>
</section>

<section anchor="safe-methods" title="Safe EAP Methods">
<t>EAP methods to be used with this extension MUST have the following properties:</t>
<t>
<list style="numbers">
<t>The method provides mutual authentication of the peers.</t>
<t>The method is key-generating.</t>
<t>The method is resistant to dictionary attacks.</t>
</list>
</t>
<t>The authors believe that the following EAP methods are secure when used with the current extension.
The list is not inclusive, and there are likely other
safe methods that have not been listed here.</t>
<texttable>
<ttcol>Method Name</ttcol>
<ttcol>Allows Channel Binding?</ttcol>
<ttcol>Reference</ttcol>
<c>EAP-SIM</c><c>No</c><c><xref target="RFC4186"/></c>
<c>EAP-AKA</c><c>Yes</c><c><xref target="RFC4187"/></c>
<c>EAP-AKA'</c><c>Yes</c><c><xref target="RFC5448"/></c>
<c>EAP-GPSK</c><c>Yes</c><c><xref target="RFC5433"/></c>
<c>EAP-pwd</c><c>No</c><c><xref target="RFC5931"/></c>
<c>EAP-EKE</c><c>Yes</c><c><xref target="EMU-EAP-EKE"/></c>
<c>EAP-PAX</c><c>Yes</c><c><xref target="RFC4746"/></c>
<c>EAP-SAKE</c><c>No</c><c><xref target="RFC4763"/></c>
<c>EAP-SRP</c><c>No</c><c><xref target="EAP-SRP"/></c>
<c>EAP-POTP (mutual authentication variant)</c><c>Yes</c>
<c><xref target="RFC4793"/></c>
<c>EAP-TLS</c><c>No</c><c><xref target="RFC5216"/></c>
<c>EAP-FAST</c><c>No</c><c><xref target="RFC4851"/></c>
<c>EAP-TTLS</c><c>No</c><c><xref target="RFC5281"/></c>
</texttable>
<t>The "Allows channel binding?" column denotes protocols where protected identity
information may be sent between the EAP endpoints. This third, optional property of the method provides protection against
certain types of attacks (see <xref target="channel-binding"/> for an explanation),
and therefore in some scenarios,
methods that allow for channel binding are to be preferred.
It is noted that at the time of
writing, even when such capabilities are provided, they are not fully specified
in an interoperable manner. In particular, no RFC specifies what identities should be sent under the protection of
the channel binding mechanism, or what policy is to be used to correlate identities at the different layers.</t>
</section>

<!-- ====================================================================== -->

<section anchor="iana" title="IANA Considerations">

  <t>This document defines a new IKEv2 Notification Payload type,
  EAP_ONLY_AUTHENTICATION, described in <xref target='solution'/>.
  This payload has been assigned the type number 16417 from the
  "Status Types" range.</t>
</section>

<!-- ====================================================================== -->

<section anchor="security" title="Security Considerations">

  <t>Security considerations applicable to all EAP methods are
  discussed in <xref target='RFC3748'/>. The EAP Key
  Management Framework <xref target='RFC5247'/> deals with
  issues that arise when EAP is used as a part of a larger system.</t>

<section title="Authentication of IKEv2 SA">

  <t>It is important to note that the IKEv2 SA is not authenticated by
  just running an EAP conversation: the crucial step is the AUTH
  payload based on the EAP-generated key. Thus, EAP methods that do
  not provide mutual authentication or establish a shared secret key
  MUST NOT be used with the modifications presented in this
  document.</t>

</section>

<section anchor="channel-binding" title="Authentication with Separated
  IKEv2 Responder / EAP Server">

  <t>As described in <xref target="scenarios"/>, the EAP conversation
  can terminate either at the IKEv2 responder or at a backend AAA
  server.</t>

  <t>If the EAP method is terminated at the IKEv2 responder, then no key
  transport via the AAA infrastructure is required. Pre-shared secret
  and public-key-based authentication offered by IKEv2 is then
  replaced by a wider range of authentication and key exchange
  methods.</t>

  <t>However, typically EAP will be used with a backend AAA server.
  See <xref target='RFC5247'/> for a more complete
  discussion of the related security issues; here we provide only a
  short summary.</t>

  <t>When a backend server is used, there are actually two
  authentication exchanges: the EAP method between the client and the
  AAA server, and another authentication between the AAA server and
  IKEv2 gateway. The AAA server authenticates the client using the selected EAP method,
  and they establish a session key. The AAA server then sends
  this key to the IKEv2 gateway over a connection authenticated using,
  e.g., IPsec or Transport Layer Security (TLS).</t>

  <t>Some EAP methods do not have any concept of pass-through
  authenticator (e.g., Network Access Server (NAS) or IKEv2 gateway) identity, and these two
  authentications remain quite independent of each other. That is,
  after the client has verified the AUTH payload sent by the IKEv2
  gateway, it knows that it is talking to SOME gateway trusted by the
  home AAA server, but not which one. The situation is somewhat
  similar if a single cryptographic hardware accelerator, containing a
  single private key, would be shared between multiple IKEv2 gateways
  (perhaps in some kind of cluster configuration). In particular, if
  one of the gateways is compromised, it can impersonate any of the
  other gateways towards the user (until the compromise is discovered
  and access rights revoked).</t>

  <t>In some environments it is not desirable to trust the IKEv2
  gateways this much (also known as the "Lying NAS Problem").  EAP
  methods that provide what is called "connection binding" or "channel
  binding" transport some identity or identities of the gateway (or
  WLAN access point / NAS) inside the EAP method.  Then the AAA server
  can check that it is indeed sending the key to the gateway expected
  by the client. A potential solution is described in <xref target="EAP-SERVICE"/>, see also
  <xref target="EMU-AAAPAY"/>.</t>

  <t>In some deployment configurations, AAA proxies may be present
  between the IKEv2 gateway and the backend AAA server. These AAA
  proxies MUST be trusted for secure operation, and therefore SHOULD
  be avoided when possible; see Section 2.3.4 of <xref target='RFC4072'/> and
  Section 4.3.7 of <xref target="RFC3579"/> for more discussion.</t>

</section>

<section title="Protection of EAP Payloads">

  <t>Although the EAP payloads are encrypted and integrity protected
  with SK_e/SK_a, this does not provide any protection against
  active attackers. Until the AUTH payload has been received
  and verified, a man-in-the-middle can change the KEi/KEr payloads
  and eavesdrop or modify the EAP payloads.</t>

  <t>In IEEE 802.11i wireless LANs, the EAP payloads are neither encrypted nor
  integrity protected (by the link layer), so EAP methods are
  typically designed to take that into account.</t>

  <t>In particular, EAP methods that are vulnerable to dictionary
  attacks when used in WLANs are still vulnerable (to active
  attackers) when run inside IKEv2.</t>
  
  <t>The rules in <xref target="safe-methods"/> are designed to avoid this
  potential vulnerability.</t>

</section>

<section title="Identities and Authenticated Identities">
<t>When using this protocol, each of the peers sends two identity values:
<list style="numbers">
<t>An identity contained in the IKE ID payload.</t>
<t>An identity transferred within the specific EAP method's messages.</t>
</list>
(IKEv2 omits the EAP Identity request/response pair,
see Section 3.16 of <xref target="RFC5996"/>.) The first identity value can be used
by the recipient to route AAA messages and/or to select
authentication and EAP types. But it is only the second identity that is directly authenticated by the EAP method.
The reader is referred to Section 2.16 of <xref target="RFC5996"/> regarding the need to base IPsec policy
decisions on the authenticated identity. In the context of the extension described here, this
guidance on IPsec policy applies both to the authentication of the client by the gateway and vice versa.
</t>
</section>
<section title="User Identity Confidentiality">

  <t>IKEv2 provides confidentiality for the initiator identity against
  passive eavesdroppers, but not against active attackers. The
  initiator announces its identity first (in message 3), before the
  responder has been authenticated. The usage of EAP in IKEv2 does not
  change this situation, since the ID payload in message 3 is used
  instead of the EAP Identity Request/Response exchange. This is
  somewhat unfortunate since when EAP is used with public key
  authentication of the responder, it would be possible to provide
  active user identity confidentiality for the initiator. </t>

  <t>IKEv2 protects the responder's identity even against active
  attacks. This property cannot be provided when using EAP. If public
  key responder authentication is used in addition to EAP, the
  responder reveals its identity before authenticating the
  initiator. If only EAP is used (as proposed in this document), the
  situation depends on the EAP method used (in some EAP methods, the
  server reveals its identity first).</t>

  <t>Hence, if active user identity confidentiality for the responder
  is required then EAP methods that offer this functionality have to
  be used (see <xref target='RFC3748'/>, Section
  7.3).</t>

</section>

</section>

<!-- ====================================================================== -->

<section title="Acknowledgments">

  <t>This document borrows some text from <xref target="RFC3748"/>, <xref target="RFC4306"/>,
  and <xref target="RFC4072"/>. We would also like to thank Hugo Krawczyk
  for interesting discussions about this topic, Dan Harkins, and David Harrington for their comments.</t>

</section>

</middle>

<!-- ====================================================================== -->

<back>
<references title="Normative References">
    <?rfc include="reference.RFC.2119.xml"?>
    <?rfc include="reference.RFC.3748.xml"?>
    <?rfc include="reference.RFC.4306.xml"?>
    <?rfc include="reference.RFC.5723.xml"?>
<!--    <?rfc include="reference.I-D.ietf-ipsecme-ikev2bis.xml"?> -->

<reference anchor='RFC5996'>
<front>
<title>Internet Key Exchange Protocol Version 2 (IKEv2)</title>

<author initials='C' surname='Kaufman' fullname='Charlie Kaufman'>
    <organization />
</author>

<author initials='P' surname='Hoffman' fullname='Paul Hoffman'>
    <organization />
</author>

<author initials='Y' surname='Nir' fullname='Yoav Nir'>
    <organization />
</author>

<author initials='P' surname='Eronen' fullname='Pasi Eronen'>
    <organization />
</author>

<date month='September'  year='2010' />

</front>

<seriesInfo name='RFC' value='5996' />

</reference>


</references>

<references title="Informative References">

    <?rfc include="reference.RFC.3579.xml"?>
    <?rfc include="reference.RFC.5247.xml"?>
    <?rfc include="reference.RFC.1661.xml"?>
    <?rfc include="reference.RFC.4746.xml"?>
    <?rfc include="reference.RFC.4186.xml"?>
    <?rfc include="reference.RFC.4187.xml"?>
    <?rfc include="reference.RFC.5433.xml"?>
    <?rfc include="reference.RFC.4851.xml"?>
    <?rfc include="reference.RFC.5216.xml"?>
    <?rfc include="reference.RFC.5281.xml"?>
    <?rfc include="reference.RFC.5448.xml"?>
    <?rfc include="reference.RFC.4763.xml"?>
    <?rfc include="reference.RFC.4793.xml"?>
    <?rfc include="reference.RFC.4072.xml"?>
<!--    <?rfc include="reference.I-D.arkko-eap-service-identity-auth.xml"?> -->
<reference anchor='EAP-SERVICE'>
<front>
<title>Authenticated Service Information for the Extensible Authentication Protocol  (EAP)</title>

<author initials='J' surname='Arkko' fullname='Jari Arkko'>
    <organization />
</author>

<author initials='P' surname='Eronen' fullname='Pasi Eronen'>
    <organization />
</author>

<date month='October' day='26' year='2005' />

</front>

<seriesInfo name='Work in' value='Progress' />

</reference>

<!--    <?rfc include="reference.I-D.clancy-emu-aaapay.xml"?> -->

<reference anchor='EMU-AAAPAY'>
<front>
<title>EAP Method Support for Transporting AAA Payloads</title>

<author initials='C' surname='Clancy' fullname='Charles Clancy'>
    <organization />
</author>

<author initials='A' surname='Lior' fullname='Avi Lior'>
    <organization />
</author>

<author initials='G' surname='Zorn' fullname='Glen Zorn'>
    <organization />
</author>

<author initials='K' surname='Hoeper' fullname='Katrin Hoeper'>
    <organization />
</author>

<date month='May' day='10' year='2010' />

</front>

<seriesInfo name='Work in' value='Progress' />

</reference>


<!--    <?rfc include="reference.I-D.sheffer-emu-eap-eke.xml"?> -->

<reference anchor='EMU-EAP-EKE'>
<front>
<title>An EAP Authentication Method Based on the EKE Protocol</title>

<author initials='Y' surname='Sheffer' fullname='Yaron Sheffer'>
    <organization />
</author>

<author initials='G' surname='Zorn' fullname='Glen  Zorn'>
    <organization />
</author>

<author initials='H' surname='Tschofenig' fullname='Hannes Tschofenig'>
    <organization />
</author>
<author initials='S' surname='Fluhrer' fullname='Scott Fluhrer'>
    <organization />
</author>


<date month='August' year='2010' />

</front>

<seriesInfo name='Work in' value='Progress' />

</reference>



<!--  harkins-emu-eap-pwd became 5931  -->

<reference anchor='RFC5931'>
<front>
<title>Extensible Authentication Protocol (EAP) Authentication Using Only A Password</title>

<author initials='D' surname='Harkins' fullname='Dan Harkins'>
    <organization />
</author>

<author initials='G' surname='Zorn' fullname='Glen Zorn'>
    <organization />
</author>

<date month='August' year='2010' />

<abstract><t>This memo describes an Extensible Authentication Protocol (EAP) method, EAP-pwd, which uses a shared password for authentication. The password may be a low-entropy one and may be drawn from some set of possible passwords, like a dictionary, which is available to an attacker.  The underlying key exchange is resistant to active attack, passive attack and dictionary attack.</t></abstract>

</front>

<seriesInfo name='RFC' value='5931' />

</reference>


      <reference
        anchor="EAP-SRP">
        <front>
          <title>EAP SRP-SHA1 Authentication Protocol</title>
          <author initials="J." surname="Carlson" fullname="James Carlson">
            <organization/>
          </author>
          <author initials="B." surname="Aboba" fullname="Bernard Aboba">
            <organization/>
          </author>
          <author initials="H." surname="Haverinen" fullname="Henry Haverinen">
            <organization/>
          </author>
          <date month="July" year="2001"/>
        </front>
        <seriesInfo name="Work in" value="Progress"/>
      </reference>

<reference anchor="IEEE8021X">
  <front>
  <title>Local and Metropolitan Area Networks: Port-Based Network Access Control</title>
  <author><organization>Institute of Electrical and Electronics Engineers</organization></author>
  <date year="2001"/>
  </front>
  <seriesInfo name="IEEE Standard" value="802.1X-2001"/>
</reference>

<reference anchor="IEEE80211i">
  <front>
  <title>IEEE Standard for Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 11: Wireless Medium Access Control (MAC) and Physical Layer (PHY) specifications: Amendment 6: Medium Access Control (MAC) Security Enhancements</title>
  <author><organization>Institute of Electrical and Electronics Engineers</organization></author>
  <date month="July" year="2004"/>
  </front>
  <seriesInfo name="IEEE Standard" value="802.11i-2004"/>
</reference>

</references>


<section anchor="alternatives" title="Alternative Approaches">
  <t>In this section, we list alternatives that have been considered during the work on this document. We concluded that the solution presented in <xref target="solution" /> seems to fit better into IKEv2.</t>

<section anchor="ignore" title="Ignore AUTH Payload at the Initiator">

  <t>With this approach, the initiator simply ignores the AUTH
  payload in message 4 (but obviously must check the second AUTH
  payload later!).  The main advantage of this approach is that no
  protocol modifications are required and no signature verification
  is required. A significant disadvantage is that the EAP method to
  be used cannot be selected to take this behavior into account.</t>

  <t>The initiator could signal to the responder
  (using a notification payload) that it did not verify the first
  AUTH payload.</t>

</section>

<section anchor="unauth" title="Unauthenticated Public Keys in AUTH Payload (Message 4)">

  <t>Another solution approach suggests the use of unauthenticated
  public keys in the public key signature AUTH payload (for message
  4).</t>

  <t>That is, the initiator verifies the signature in the AUTH
  payload, but does not verify that the public key indeed belongs to
  the intended party (using certificates) -- since it doesn't have a PKI
  that would allow this. This could be used with X.509 certificates
  (the initiator ignores all other fields of the certificate except
  the public key), or "Raw RSA Key" CERT payloads.</t>

  <t>This approach has the advantage that initiators that wish to
  perform certificate-based responder authentication (in addition to
  EAP) may do so, without requiring the responder to handle these
  cases separately. A disadvantage here, again, is that the EAP method
  selection cannot take into account the incomplete validation of
  the responder's certificate.</t>

  <t>If using RSA, the overhead of signature verification is quite
  small, compared to the g^xy calculation required by the Diffie-Hellman exchange.</t>

</section>



<section title="Using EAP Derived Session Keys for IKEv2">

  <t>It has been proposed that when using an EAP method that provides
  mutual authentication and key agreement, the IKEv2 Diffie-Hellman
  exchange could also be omitted. This would mean that the session
  keys for IPsec SAs established later would rely only on EAP-provided
  keys.</t>

  <t>It seems the only benefit of this approach is saving some
  computation time (g^xy calculation). This approach
  requires designing a completely new protocol (which would not
  resemble IKEv2 anymore); we do not believe that it should be
  considered. Nevertheless, we include it for completeness.</t>

</section>

</section>
</back>
</rfc>
