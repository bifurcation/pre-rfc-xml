<?xml version="1.0" encoding="us-ascii"?>
<!DOCTYPE rfc PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/rfc2629.dtd"[
  <!ENTITY RFC2119 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
  <!ENTITY RFC2629 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
  <!ENTITY RFC3550 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3550.xml">
  <!ENTITY RFC3640 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3640.xml">
  <!ENTITY RFC3711 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3711.xml">
  <!ENTITY RFC4301 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4301.xml">
  <!ENTITY RFC4566 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4566.xml">
  <!ENTITY RFC5246 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">
  <!ENTITY RFC5583 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5583.xml">

]>
<?xml-stylesheet type='text/xsl' href="http://greenbytes.de/tech/webdav/rfc2629xslt/rfc2629.xslt" ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc rfcedstyle="yes" ?>

<rfc category="std"
     number="5691"
     updates="3640">

  <front>
    <title abbrev="Transport of MPEG Surround">RTP Payload Format for Elementary Streams with&nbsp;MPEG&nbsp;Surround&nbsp;Multi&nbhy;Channel&nbsp;Audio</title>

    <author fullname="Frans de Bont"
            initials="F.d.B."
            surname="de Bont">
      <organization>Philips Electronics</organization>
      <address>
        <postal>
          <street>High Tech Campus 5</street>
          <city>5656 AE Eindhoven</city>
          <region></region>
          <country>NL</country>
        </postal>
        <phone>++31 40 2740234</phone>
        <email>frans.de.bont@philips.com</email>
      </address>
    </author>
    <author fullname="Stefan Doehla"
            initials="S.D."
            surname="Doehla">
      <organization>Fraunhofer IIS</organization>
      <address>
        <postal>
          <street>Am Wolfmantel 33</street>
          <city>91058 Erlangen</city>
          <region></region>
          <country>DE</country>
        </postal>
        <phone>+49 9131 776 6042</phone>
        <email>stefan.doehla@iis.fraunhofer.de</email>
      </address>
    </author>
    <author fullname="Malte Schmidt"
            initials="M.S."
            surname="Schmidt">
      <organization>Dolby Laboratories</organization>
      <address>
        <postal>
          <street>Deutschherrnstr. 15-19</street>
          <city>90537 Nuernberg</city>
          <region></region>
          <country>DE</country>
        </postal>
        <phone>+49 911 928 91 42</phone>
        <email>malte.schmidt@dolby.com</email>
      </address>
    </author>
    <author fullname="Ralph Sperschneider"
            initials="R.S."
            surname="Sperschneider">
      <organization>Fraunhofer IIS</organization>
      <address>
        <postal>
          <street>Am Wolfmantel 33</street>
          <city>91058 Erlangen</city>
          <region></region>
          <country>DE</country>
        </postal>
        <phone>+49 9131 776 6167</phone>
        <email>ralph.sperschneider@iis.fraunhofer.de</email>
      </address>
    </author>
    <date month="October" year="2009" />

    <area>AVT</area>
    <workgroup>AVT</workgroup>

    <keyword>MPEG Surround, RFC3640, RTP, MPEG-4, AAC</keyword>

    <abstract>
      <t>This memo describes extensions for the RTP payload format
      defined in RFC 3640 for the transport of MPEG Surround
      multi-channel audio. Additional Media Type parameters are
      defined to signal backwards-compatible transmission inside an
      MPEG-4 Audio elementary stream. In addition, a layered
      transmission scheme that doesn't use the MPEG-4 systems framework
      is presented to transport an MPEG Surround elementary stream via
      RTP in parallel with an RTP stream containing the downmixed
      audio data.</t>
    </abstract>
  </front>

  <!-- ----------------------------------------------------------------- -->

  <middle>
    <section title="Introduction"
             toc="default">
      <t>
        <xref target="23003-1">MPEG Surround (Spatial Audio Coding,
        SAC)</xref> is an International Standard that was finalized by
        MPEG in January 2007. It is capable of re-creating N channels
        based on M &lt; N transmitted channels and additional control
        data. In the preferred modes of operating the Spatial Audio
        Coding system, the M channels can either be a single mono
        channel or a stereo channel pair.  The control data represents
        a significantly lower data rate than the data rate required
        for transmitting all N channels, making the coding very
        efficient while at the same time ensuring compatibility with M
        channel devices.
      </t>
      <t>
        The MPEG Surround standard incorporates a number of tools
        that enable features that allow for broad application of the
        standard. 

        A key feature is the ability to scale the spatial
        image quality gradually from very low spatial overhead towards
        transparency. Another key feature is that the decoder input
        can be made compatible to existing matrixed surround
        technologies.
      </t>
      <t>
        As an example, for 5.1 multi-channel audio, the MPEG Surround
        encoder creates a stereo (or mono) downmix signal and spatial
        information describing the full 5.1 material in a highly
        efficient, parameterised format. The spatial information is
        transmitted alongside the downmix.
      </t>
      <t>
        By using MPEG Surround, existing services can easily be
        upgraded to provide surround sound in a backwards-compatible
        fashion. While a stereo decoder in an existing legacy consumer
        device ignores the MPEG Surround data and plays back the
        stereo signal without any quality degradation, an
        MPEG-Surround-enabled decoder will deliver high quality,
        multi-channel audio.
      </t>
      <t>
  The MPEG Surround decoder can operate in modes that render the
  multi-channel signal to multi-channel or stereo output, or it can
  operate in a two-channel headphone mode to produce a virtual
  surround output signal.

      </t>
    </section>
    <section title="Conventions"
             toc="default">
      <t>
        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref target="RFC2119" />.
      </t>
    </section>
    <section title="Definitions and Abbreviations"
             toc="default">
      <section title="Definitions"
             toc="default">
        <t>
          This memo makes use of the definitions specified in
          <xref target="14496-1" />, <xref target="14496-3" />,
          <xref target="23003-1" />, and <xref target="RFC3640" />. 
          Frequently used terms are summed up for convenience:
          <list style="hanging">
            <t hangText="Access Unit:"> An MPEG Access Unit is the
            smallest data entity to which timing information is
            attributed. In the case of audio, an Access Unit is the
            smallest individually accessible portion of coded audio
            data within an elementary stream.</t>

            <t hangText="AudioSpecificConfig():">Extends the class
            DecoderSpecificInfo(), as defined in
            <xref target="14496-1" />, when the objectType indication
            refers to a stream complying with <xref target="14496-3"
            />. AudioSpecificConfig() is used as the configuration
            structure for MPEG-4 audio as specified in
            <xref target="14496-3" />. It contains the field
            audioObjectType, which distinguishes between the different
            audio codecs defined in <xref target="14496-3" />, general
            audio information (e.g., the sampling frequency and number
            of channels), and further codec-dependent information
            structures.
            </t>
            <t hangText="SpatialSpecificConfig():">Configuration
            structure for MPEG Surround audio coding, as specified in
            <xref target="23003-1" />. An AudioSpecificConfig() with
            an audioObjectType of value 30 contains a
            SpatialSpecificConfig() structure.
            </t>
          </list>
        </t>
      </section>
      <section title="Abbreviations"
             toc="default">
        <t>
          <figure>
            <artwork>
  AOT:    Audio Object Type
  AAC:    Advanced Audio Coding
  ASC:    AudioSpecificConfig() structure
  AU:     Access Unit
  HE AAC: High Efficiency AAC
  PLI:    Profile and Level Indication
  SSC:    SpatialSpecificConfig() structure
            </artwork>
          </figure>
        </t>
      </section>
    </section>
    <section title="Transport of MPEG Surround"
             toc="default">
      <t>
        From a top-level perspective, MPEG Surround data can be
        subdivided into configuration data contained in the
        SpatialSpecificConfig() (SSC) and the SpatialFrame(), which
        contains the MPEG Surround payload.

        The configuration data can
        be signaled in-band or out-of-band. In the case of in-band
        signaling the SSC is conveyed in a SacDataFrame() jointly with
        a SpatialFrame(). In the case of out-of-band signaling, the SSC
        is transmitted to the decoder separately, e.g., by 
        Session Description Protocol (SDP) <xref target="RFC4566" /> means.
      </t>
      <t>
        SpatialFrame()s may be transmitted either embedded into the
        downmix stream (<xref target="Embedded spatial audio data in AAC payloads" />) or as individual elementary streams
        besides the downmix audio stream (<xref target="MPEG Surround Elementary Streams" />).
      </t>
      <t>
        The buffer definition for AAC decoders limits the size of an
        AU, as specified in <xref target="14496-3" />. For high-bitrate
        applications that exceed this limit, all MPEG Surround data
        MUST be put in a separate stream, as defined in
        <xref target="MPEG Surround Elementary Streams" />.
      </t>
      <section title="Embedded Spatial Audio Data in AAC Payloads" anchor="Embedded spatial audio data in AAC payloads">
        <t>
          <xref target="14496-3" /> defines the extension_payload() as
          a mechanism for transport of extension data inside AAC
          payloads. Typical extension data include Spectral Band
          Replication (SBR) data and MPEG Surround data, i.e., a
          SacDataFrame() in extension_payload()s
          of type EXT_SAC_DATA. 

          extension_payload()s reside inside the
          downmix AAC elementary stream. The resulting single
          elementary stream is transported as specified in
          <xref target="RFC3640" />. As AAC decoders are required to
          skip unknown extension data, MPEG Surround data can be
          embedded in backwards-compatible fashion and be transported
          with the mechanism already described in
          <xref target="RFC3640" />.
        </t>
        <t>
          The SacDataFrame() includes a SpatialFrame() and an optional header that contains an SSC. Any SSC in a SacDataFrame() MUST be identical to the SSC conveyed via SDP for that stream.
        </t>
        <t>
          No new mode is introduced for SpatialFrame()s being embedded
          into AAC payloads. Either the mode AAC-lbr or the mode
          AAC-hbr SHOULD be used. The additional Media Type
          parameters, as defined in <xref target="Media Type registration" />, SHOULD be present when SpatialFrame()s are
          embedded into AAC payloads.
        </t>
        <t>For example:</t>
        <t>
          <figure>
            <artwork>  m=audio 5000 RTP/AVP 96
  a=rtpmap:96 mpeg4-generic/48000/2
  a=fmtp:96 streamType=5; profile-level-id=44; mode=AAC-hbr; config=131
    056E598; sizeLength=13; indexLength=3; indexDeltaLength=3; constant
    Duration=2048; MPS-profile-level-id=55; MPS-config=F1B4CF920442029B
    501185B6DA00;</artwork>
          </figure>
        </t>
        <t>
          In this example, the stream specifies the HE AAC Profile at
          Level 2 [Profile and Level Indication (PLI) 44] and the
          config string contains the hexadecimal representation of the
          HE AAC ASC [audioObjectType=2 (AAC LC);
          extensionAudioObjectType=5 (SBR); samplingFrequencyIndex=0x6
          (24kHz); extensionSamplingFrequencyIndex=0x3 (48kHz);
          channelConfiguration=2 (2.0 channels)] of the downmix AAC
          elementary stream that is using explicit backwards-compatible
          signaling.
        </t>
        <t>
          Furthermore, the stream specifies the MPEG Surround Baseline
          Profile at Level 3 (PLI55) and the MPS-config string
          contains the hexadecimal representation of the MPEG Surround
          ASC [audioObjectType=30 (MPEG Surround);
          samplingFrequencyIndex=0x3 (48kHz); channelConfiguration=6
          (5.1 channels); sacPayloadEmbedding=1; SSC=(48 kHz; 32
          slots; 525 tree; ResCoding=1; ResBands=[0,13,13,13])].
        </t>
        <t>
          Note that the a=fmtp line of the example above has been
          wrapped to fit the page; it would comprise a single line in
          the SDP file.
        </t>
      </section>
      <section title="MPEG Surround Elementary Stream" anchor="MPEG Surround Elementary Streams">
        <t>
          MPEG Surround SpatialFrame()s can be present in an
          individual elementary stream. This stream complements the
          stream containing the downmix audio data, which may be coded
          by an arbitrary coding scheme. MPEG Surround elementary
          streams are packetized as specified in
          <xref target="RFC3640" />. The mode signaled and used for an
          MPEG Surround elementary stream MUST be either MPS-hbr or
          MPS-lbr. The MPS-hbr mode SHALL be used when the frame size
          may exceed 63 bytes, e.g., when high-bitrate residual coding
          is in use.
        </t>
        <t>
          The dependency relationships between the MPEG Surround
          elementary stream and the downmix stream are signaled as
          specified in <xref target="RFC5583" />.
        </t>
        <t>
          The media clocks of the MPEG Surround elementary stream and
          the downmix stream SHALL operate in the same clock domain,
          i.e., the clocks are derived from a common clock and MUST NOT
          drift. RTCP sender reports MUST indicate that the stream
          timestamps are not drifting, i.e., that a single sender
          report for each stream is sufficient to establish
          unambiguous timing. The sampling rate of the MPEG Surround
          signal and the decoded downmix signal MUST be identical.
        </t>
        <t>
          If HE AAC is used as the coding scheme for the downmix, the
          RTP clock-rate of the downmix MAY be the sampling rate of
          the AAC core, i.e., the clock-rate of the MPEG Surround
          elementary stream is an integer multiple of the clock-rate
          of the downmix stream.
        </t>
        <t>
          Note that separate RTP streams have different random RTP
          timestamp offsets, and therefore RTCP MUST be used to
          synchronize the coded downmix audio data and the MPEG
          Surround elementary stream.
        </t>
        <t>For example:</t>
        <t>
          <figure>
            <artwork>  a=group:DDP L1 L2

  m=audio 5000 RTP/AVP 96
  a=rtpmap:96 mpeg4-generic/48000/2
  a=fmtp:96 streamType=5; profile-level-id=44; mode=AAC-hbr; config=2B1
    18800; sizeLength=13; indexLength=3; indexDeltaLength=3; constantDu
    ration=2048
  a=mid:L1

  m=audio 5002 RTP/AVP 97
  a=rtpmap:97 mpeg4-generic/48000/6
  a=fmtp:97 streamType=5; profile-level-id=55; mode=MPS-hbr; config=F1B
    0CF920460029B601189E79E70; sizeLength=13; indexLength=3;  indexDelt
    aLength=3; constantDuration=2048
  a=mid:L2
  a=depend:97 lay L1:96</artwork>
          </figure>
        </t>
        <t>
          In this example, the first stream specifies the HE AAC
          Profile at Level 2 (PLI44) and the config string contains
          the hexadecimal representation of the HE AAC ASC
          [audioObjectType=2 (AAC LC); extensionAudioObjectType=5
          (SBR); samplingFrequencyIndex=0x6 (24kHz);
          extensionSamplingFrequencyIndex=0x3 (48kHz);
          channelConfiguration=2 (2.0 channels)].
        </t>
        <t>
          The second stream specifies Baseline MPEG Surround Profile
          at Level 3 (PLI55) and the config string contains the
          hexadecimal representation of the ASC [AOT=30(MPEG Surround);
          48 kHz; 5.1-ch; sacPayloadEmbedding=0; SSC=(48 kHz; 32
          slots; 525 tree; ResCoding=1; ResBands=[7,7,7,7])].
        </t>
        <t>
          Note that the a=fmtp lines of the example above have been
          wrapped to fit the page; they would each comprise a single
          line in the SDP file.
        </t>
        <section title="Low Bitrate MPEG Surround"
                 toc="default">
          <t>
            This mode is signaled by mode=MPS-lbr. This mode supports
            the transport of one or more complete Access Units, each
            consisting of a single MPEG Surround SpatialFrame(). The
            AUs can be variably sized and interleaved. The maximum
            size of a SpatialFrame() is 63 bytes. Fragmentation MUST
            NOT be used in this mode. Receivers MUST support
            de-interleaving.
          </t>
          <t>
            The payload configuration is the same as in the AAC-lbr
            mode. It consists of the AU Header Section, followed by
            concatenated AUs. Note that Access Units are
            byte-aligned. The Auxiliary Section MUST be empty in the
            MPS-lbr mode. The 1-octet AU-header MUST provide:

            <list hangIndent="0"
                  style="numbers">
              <t>the size of each AAC frame, encoded as 6 bits.</t>
              <t>2 bits of index information for computing the
              sequence (and hence timing) of each SpatialFrame().</t>
            </list>
          </t>

          <t>The concatenated AU Header Section MUST be preceded by
          the 16-bit AU-headers-length field.</t>
          <t>
            In addition to the required Media format parameters, the
            following parameters MUST be present with fixed values:
            sizeLength (fixed value 6), indexLength (fixed value 2),
            and indexDeltaLength (fixed value 2). The parameter
            maxDisplacement MUST be present when
            interleaving. SpatialFrame()s always have a fixed duration
            per AU; the fixed duration MUST be signaled by the Media
            format parameter constantDuration.
          </t>
          <t>
            The value of the &quot;config&quot; parameter is the
            hexadecimal representation of the ASC, as defined in
            <xref target="14496-3" />, with an AOT of 30 and the
            sacPayloadEmbedding flag set to 0.

          </t>
          <t>
            The &quot;profile-level-id&quot; parameter SHALL contain a
            valid PLI for MPEG Surround, as specified in
            <xref target="14496-3" />.
          </t>
        </section>
        <section title="High Bitrate MPEG Surround"
                 toc="default">
          <t>
            This mode is signaled by mode=MPS-hbr. This mode supports the transportation of either one fragment of an Access Unit or one complete AU or several complete AUs. Each AU consists of a single MPEG Surround SpatialFrame(). The AUs can be variably sized and interleaved. The maximum size of a SpatialFrame() is 8191 bytes. Receivers MUST support de-interleaving.
          </t>
          <t>
            The payload configuration is the same as in the AAC-hbr
            mode. It consists of the AU Header Section, followed by
            either one SpatialFrame(), a fragment of a SpatialFrame(),
            or several concatenated SpatialFrame()s. Note that Access
            Units are byte-aligned. The Auxiliary Section MUST be
            empty in the MPS-hbr mode. The 2-octet AU-header MUST
            provide:

            <list hangIndent="0"
                  style="numbers">
              <t>the size of each AAC frame, encoded as 13 bits.</t>
              <t>3 bits of index information for computing the
              sequence (and hence timing) of each SpatialFrame(),
              i.e., the AU-Index or AU-Index-delta field.</t>
            </list>
          </t>

          <t>Each AU-Index field MUST be coded with the value 0. The
          concatenated AU Header Section MUST be preceded by the
          16-bit AU-headers-length field.</t>
          <t>
            In addition to the required Media format parameters, the
            following parameters MUST be present with fixed values:
            sizeLength (fixed value 13), indexLength (fixed value 3),
            and indexDeltaLength (fixed value 3). The parameter
            maxDisplacement MUST be present when
            interleaving. SpatialFrame()s always have a fixed duration
            per AU; the fixed duration MUST be signaled by the Media
            format parameter constantDuration.
          </t>
          <t>
            The value of the &quot;config&quot; parameter is the
            hexadecimal representation of the ASC, as defined in
            <xref target="14496-3" />, with an AOT of 30 and the
            sacPayloadEmbedding flag set to 0.
          </t>
          <t>
            The &quot;profile-level-id&quot; parameter SHALL contain a
            valid PLI for MPEG Surround, as specified in
            <xref target="14496-3" />.
          </t>
        </section>
      </section>
    </section>

    <section title="IANA Considerations"
             toc="default">
      <t>
        This memo defines additional optional format parameters to the
        Media type "audio" and its subtype "mpeg4-generic". These
        parameters SHALL only be used in combination with the AAC-lbr
        or AAC-hbr modes (cf. Section 3.3 of <xref target="RFC3640" />)
        of "mpeg4-generic".
      </t>
      <section title="Media Type Registration" anchor="Media Type registration">
        <t>
          This memo defines the following additional optional parameters, which SHALL be used
          if MPEG Surround data is present inside the payload of an AAC elementary stream.
          <list style="hanging">
            <t hangText="MPS-profile-level-id:"> A decimal
            representation of the MPEG Surround Profile and Level
            indication as defined in <xref target="14496-3" />. This
            parameter MUST be used in the capability exchange or
            session set-up procedure to indicate the MPEG Surround
            Profile and Level that the decoder must be capable of in
            order to decode the stream.</t>

            <t hangText="MPS-config:"> A hexadecimal representation of
            an octet string that expresses the AudioSpecificConfig
            (ASC), as defined in <xref target="14496-3" />, for MPEG
            Surround. The ASC is mapped onto the hexadecimal octet
            string in a most significant bit (MSB)-first basis.
              The AOT in this ASC SHALL have the value 30. The SSC
              inside the ASC MUST have the sacPayloadEmbedding flag
              set to 1.
            </t>
          </list>
        </t>
      </section>
      <section title="Registration of Mode Definitions with IANA"
               toc="default">
        <t>
          This section of this memo requests the registration of the
          "MPS-hbr" value and the "MPS-lbr" value for the "mode"
          parameter of the "mpeg4-generic" media subtype within the
          media type "audio".  The "mpeg4-generic" media subtype is
          defined in <xref target="RFC3640" />, and
          <xref target="RFC3640" /> defines a repository for the
          "mode" parameter.  This memo registers the modes "MPS-hbr"
          and "MPS-lbr" to support MPEG Surround elementary streams.
        </t>

        <t>
          Media type name:
          <list hangIndent="2"
                style="empty">
            <t>
              audio
            </t>
          </list>
        </t>
        <t>
          Subtype name:
          <list hangIndent="2"
                style="empty">
            <t>
              mpeg4-generic
            </t>
          </list>
        </t>
        <t>
          Required parameters:
          <list hangIndent="2"
                style="empty">
            <t>
              The "mode" parameter is required by <xref target="RFC3640" />. 
              This memo specifies the additional modes "MPS-hbr" and
              "MPS-lbr", in accordance with <xref target="RFC3640" />.
            </t>
          </list>
        </t>
        <t>
          Optional parameters:
          <list hangIndent="2"
                style="empty">
            <t>
              For the modes "AAC-hbr" and "AAC-lbr", this memo specifies
              the additional optional parameters "MPS-profile-level-id" and "MPS-config".
              See Section 4.1 for usage details.
            </t>
            <t>
              Optional parameters for the modes "MPS-hbr" and
              "MPS-lbr" may be used as specified in
              <xref target="RFC3640" />. The optional parameters
              "MPS-profile-level-id" and "MPS-config" SHALL NOT be
              used for the modes "MPS-hbr" and "MPS-lbr".
            </t>
          </list>
        </t>
      </section>

      <section title="Usage of SDP"
               toc="default">
        <t>
          It is assumed that the Media format parameters are conveyed
          via an SDP message, as specified in Section 4.4 of <xref target="RFC3640" />.
        </t>
      </section>
    </section>

    <section anchor="Security"
             title="Security Considerations"
             toc="default">

      <t>
        RTP packets using the payload format defined in this specification
        are subject to the security considerations discussed in the RTP
        specification <xref target="RFC3550" />, in the RTP payload
        format specification for MPEG-4 elementary streams <xref target="RFC3640" />
        (which is extended with this memo), and in any applicable RTP profile. The main
        security considerations for the RTP packet carrying the RTP payload
        format defined within this memo are confidentiality, integrity, and
        source authenticity. Confidentiality is achieved by encryption of
        the RTP payload. Integrity of the RTP packets is achieved through a
        suitable cryptographic integrity-protection mechanism. Such a
        cryptographic system may also allow the authentication of the source
        of the payload.  A suitable security mechanism for this RTP payload
        format should provide confidentiality, integrity protection, and 
        source authentication capable of at least determining if an RTP packet
        is from a member of the RTP session.
      </t>

      <t>
        The AAC audio codec includes an extension mechanism to transmit extra
        data within a stream that is gracefully skipped by decoders that do
        not support this extra data. This covert channel may be used to
        transmit unauthorized data in an otherwise valid stream.
      </t>

      <t>
        Note that the appropriate mechanism to provide security to RTP and
        payloads following this memo may vary. It is dependent on the
        application, the transport, and the signaling protocol employed.
        Therefore, a single mechanism is not sufficient; although, if
        suitable, usage of the Secure Real-time Transport Protocol (SRTP)
        <xref target="RFC3711" /> is recommended. Other mechanisms that may
        be used are IPsec <xref target="RFC4301" /> and Transport Layer Security
        (TLS) <xref target="RFC5246" /> (RTP over TCP); other alternatives may exist.
      </t>

    </section>
  </middle>


  <back>

    <references title="Normative References">
      &RFC2119;
      &RFC3550;
      &RFC3640;
      &RFC4566;
      &RFC5583;

      <reference anchor="23003-1">
        <front>
          <title>ISO/IEC International Standard 23003-1 - MPEG Surround (MPEG D)</title>
          <author initials=""
                  surname="MPEG">
            <organization></organization>
          </author>
          <date year="2007" />
        </front>
      </reference>
      <reference anchor="14496-1">
        <front>
          <title>ISO/IEC International Standard 14496-1 - Coding of audio-visual objects, Part 1 Systems</title>
          <author initials=""
                  surname="MPEG">
            <organization></organization>
          </author>
          <date year="2004" />
        </front>
      </reference>
      <reference anchor="14496-3">
        <front>
          <title>ISO/IEC International Standard 14496-3 - Coding of audio-visual objects, Part 3 Audio</title>
          <author initials=""
                  surname="MPEG">
            <organization></organization>
          </author>
          <date year="2009" />
        </front>
      </reference>
    </references>
    <references title="Informative References">
      &RFC3711;
      &RFC4301;
      &RFC5246;
    </references>
  </back>
</rfc>
