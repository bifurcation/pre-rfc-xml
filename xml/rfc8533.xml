<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

]>
<rfc category="std" number="8533" submissionType="IETF" consensus="yes"
     ipr="trust200902">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <?rfc toc="yes" ?>
  <?rfc symrefs="yes" ?>
  <?rfc sortrefs="yes"?>
  <?rfc compact="yes"?>
  <?rfc subcompact="no"?>

  <front>

    <title abbrev="YANG Model for CL OAM Retrieval Methods"> A YANG Data Model for Retrieval Methods for the Management of Operations, Administration, and Maintenance (OAM) Protocols That Use Connectionless 
   Communications</title>

    <author fullname="Deepak Kumar" initials="D." surname="Kumar">
      <organization abbrev="Cisco">CISCO Systems</organization>

      <address>
        <postal>
          <street>510 McCarthy Blvd.</street>

          <street/>

          <city>Milpitas</city>

          <region>CA</region>

          <code>95035</code>

          <country>United States of America</country>
        </postal>

        <email>dekumar@cisco.com</email>
      </address>
    </author>

    <author fullname="Michael Wang" initials="M." surname="Wang">
      <organization abbrev="Huawei">Huawei Technologies, Co., Ltd</organization>

      <address>
        <postal>
          <street>101 Software Avenue, Yuhua District</street>

          <street/>

          <city>Nanjing</city>

          <region/>

          <code>210012</code>

          <country>China</country>
        </postal>

        <email>wangzitao@huawei.com</email>
      </address>
    </author>

    <author fullname="Qin Wu" initials="Q." role="editor" surname="Wu">
      <organization>Huawei</organization>

      <address>
        <postal>
          <street>101 Software Avenue, Yuhua District</street>

          <city>Nanjing</city>

          <region>Jiangsu</region>

          <code>210012</code>

          <country>China</country>
        </postal>

        <email>bill.wu@huawei.com</email>
      </address>
    </author>

    <author fullname="Reshad Rahman" initials="R." surname="Rahman">
      <organization abbrev="Cisco">CISCO Systems</organization>

      <address>
        <postal>
          <street>2000 Innovation Drive</street>

          <street/>

          <city>Kanata</city>

          <region>Ontario</region>

          <code>K2K 3E8</code>

          <country>Canada</country>
        </postal>

        <email>rrahman@cisco.com</email>
      </address>
    </author>

    <author fullname="Srihari Raghavan" initials="S." surname="Raghavan">
      <organization abbrev="Cisco">CISCO Systems</organization>

      <address>
        <postal>
          <street>Tril Infopark Sez, Ramanujan IT City</street>

          <street>Neville Block, 2nd floor, Old Mahabalipuram Road</street>

          <city>Chennai</city>

          <region>Tamil Nadu</region>

          <code>600113</code>

          <country>India</country>
        </postal>

        <email>srihari@cisco.com</email>
      </address>
    </author>

    <date month="March" year="2019"/>

    <area>OPS Area</area>

    <workgroup/>


    <abstract>
      <t>This document presents a retrieval method YANG data model for
      connectionless Operations, Administration, and Maintenance (OAM) protocols. It provides technology-independent RPC
      operations for OAM protocols that
   use connectionless communication. The retrieval methods model herein
      presented can be extended to include technology-specific details.
      There are two key benefits of this approach:
      First, it leads
      to uniformity between OAM
      protocols.  Second, it supports both nested OAM workflows (i.e., performing OAM
      functions at different or same levels through a unified interface) as well as
      interactive OAM workflows (i.e., performing OAM functions at same levels
      through a unified interface).</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">

            <t>Operations, Administration, and Maintenance (OAM) are important networking functions
      that allow operators to: <list style="numbers">
          <t>monitor network communications (i.e., reachability verification and
          Continuity Check)</t>

          <t>troubleshoot failures (i.e., fault verification and localization)</t>

          <t>monitor service-level agreements and performance (i.e., performance
            management)</t>
        </list></t>

      <t>An overview of OAM tools is presented in <xref
      target="RFC7276"/>.</t>

      <t>Ping and Traceroute <xref target="RFC4443"/>, 
      as well as Bidirectional Forwarding Detection (BFD) <xref target="RFC5880"/>, are well-known fault verification and
      isolation tools, respectively, for IP networks <xref target="RFC792"/>. Over the years,
      different technologies have developed similar toolsets for equivalent
      purposes.</t>

      <t>This document presents an on-demand retrieval method YANG data
      model for OAM protocols that use connectionless communication. This
      model provides technology-independent RPC operations for OAM protocols
      that use connectionless communication (i.e., connectionless OAM). It is
      separated from the generic YANG data model for connectionless OAM <xref
      target="RFC8532"/> and can avoid mixing
      the models for the retrieved data from the retrieval procedures. It is
      expected that retrieval procedures will evolve faster than the data
      model <xref target="RFC8532"/> and will
      allow new procedures to be defined for retrieval of the same data
      defined by the generic YANG data model for connectionless OAM.</t>
    </section>

    <section title="Conventions Used in This document">
      <t>The following terms are defined in <xref target="RFC6241"/> and are
      used in this document: <list style="symbols">
          <t>client</t>

          <t>configuration data</t>

          <t>server</t>

          <t>state data</t>
        </list></t>

      <t>The following terms are defined in <xref target="RFC6020"/> and are
      used in this document: <list style="symbols">
          <t>augment</t>

          <t>data model</t>

          <t>data node</t>
        </list>The terminology for describing YANG data models is found in
      <xref target="RFC6020"/>.</t>

      <section title="Terminology">
        <t>TP - Test Point</t>

        <t>MAC - Media Access Control</t>

        <t>RPC - Remote Procedure Call</t>

        <t>RPC Operation - A specific Remote Procedure Call</t>
      </section>

      <section title="Tree Diagrams">
        <t>A simplified graphical representation of the data model is used in
        this document. The meaning of the symbols in these diagrams is as
        follows:</t>

        <t>Each node is printed as:<figure>
            <artwork>
&lt;status&gt; &lt;flags&gt; &lt;name&gt; &lt;opts&gt; &lt;type&gt;

&lt;status&gt; is one of:
     +  for current


&lt;flags&gt; is one of:

    rw for configuration data 
    ro for non-configuration data
    -x for rpcs
    -n for notifications


&lt;name&gt; is the name of the node</artwork>
          </figure></t>

        <t>If the node is augmented into the tree from another module, its
        name is printed as &lt;prefix&gt;:&lt;name&gt;. <figure>
            <artwork>&lt;opts&gt; is one of:

     ?  for an optional leaf or choice
     !  for a presence container
     *  for a leaf-list or list
     [&lt;keys&gt;] for a list's keys

&lt;type&gt; is the name of the type for leafs and leaf-lists</artwork>
          </figure></t>
      </section>
    </section>

    <section anchor="overview_oam_MM" title="Overview of the Connectionless OAM Retrieval Methods Model">
      <t>This document describes an on-demand retrieval method YANG data
      model for OAM protocols that
   use connectionless communication. This model provides
      technology-independent retrieval procedures (RPC operations) for
      connectionless OAM protocols. It provides a flexible way to retrieve the
      data that is defined by the "ietf-connectionless-oam.yang" module <xref
      target="RFC8532"/>.</t>

      <section title="RPC Operation Definitions">
        <t>The RPC model facilitates issuing commands to a Network Configuration Protocol (NETCONF) server (in
        this case to the device that needs to execute the OAM command) and
        obtaining a response.</t>

        <t>Under the "connectionless-oam-methods" module, we summarize common OAM
        functions and define two generic RPC operations: 'continuity-check'
        and 'path-discovery'. In practice, these RPC operations are activated
        on demand and are supported by corresponding technology-specific OAM tools
        <xref target="RFC7276"/>. For example, for the IP OAM model, the
        Continuity Check RPC corresponds to the IP Ping <xref
        target="RFC792"/> <xref target="RFC4443"/>, while the path discovery
        RPC operation corresponds to IP Traceroute <xref target="RFC792"/>
        <xref target="RFC4443"/>.</t>

        <t>Note that the RPC operation presented in this document is the base
        building block, which is used to derive a model for a
        technology-specific OAM (i.e., ICMP Ping <xref target="RFC792"/> <xref
        target="RFC4443"/> and Label Switched Path (LSP) Ping <xref target="RFC8029"/>). This base
        building block should be extended with corresponding technology-specific
        parameters. To facilitate this for future enhancements to
        data retrieval methods, the RPCs are captured under a separate
        module.</t>

        <t>The generic 'tp-address' grouping is used as data input from
        different RPCs described in this document. The generic
        'path-discovery-data' and 'continuity-check-data' groupings defined by
        the "ietf-connectionless-oam.yang" module <xref
        target="RFC8532"/> are used as data
        outputs from different RPCs described in this document. Similar
        methods, including other RPCs, can retrieve the data using the same data
        model (i.e., the "ietf-connectionless-oam.yang" module).</t>

        <figure title="Snippet of Data Hierarchy Related to RPC Operations">
          <artwork>     rpc continuity-check {
      if-feature cl-oam:continuity-check;
      description
        "Continuity Check RPC operation as per RFC 7276.";
      reference
        "RFC 7276: An Overview of Operations, Administration, and 
         Maintenance (OAM) Tools";
      input {
      uses rpc-input-parameters;
      ....
      }
    output {
      container response-info {
        leaf protocol-id {
          type identityref {
            base protocol-id;
          }
          mandatory true;
          description
            "Protocol used in the Continuity Check. ";
        }
        leaf protocol-id-meta-data { 
           type identityref {
            base protocol-id-meta-data;
            }
             description
             "An optional metadata related to the protocol ID.";
        }
        leaf status-code {
          type identityref{
         base status-code;
       }
          mandatory true;
          description
            "Status code for Continuity Check RPC operation.";
        }
        leaf status-sub-code {
          type identityref{
          base status-sub-code;
       }
          mandatory true;
          description
            "Status-sub-code for Continuity Check RPC operation.";
        }
        description
          "Status code and status-sub-code for Continuity Check RPC 
           operation.";
      }
      uses cl-oam:continuity-check-data;
    }
  }

    rpc path-discovery {
      description
        "Path discovery RPC operation as per RFC 7276.";
      reference
        "RFC 7276: An Overview of Operations, Administration, and 
         Maintenance (OAM) Tools";
      input {
      uses rpc-input-parameters;
      .....
      }
    output {
      list response-list {
        key "response-index";
        description
          "Path discovery response list.";
        leaf response-index {
          type uint32;
          mandatory true;
          description
            "Response index.";
        }
        leaf protocol-id {
          type identityref {
            base protocol-id;
          }
          mandatory true;
          description
            "Protocol used in path discovery. ";
        }
        leaf protocol-id-meta-data { 
           type identityref {
            base protocol-id-meta-data;
            }
             description
             "An optional metadata related to the protocol ID.";
        }
        leaf status-code {
          type identityref{
          base status-code;
        }
          mandatory true;
          description
            "Status code for path discovery RPC operation. ";
        }
        leaf status-sub-code {
          type identityref{
          base status-sub-code;
       }
          mandatory true;
          description
            "Status-sub-code for path discovery RPC operation. ";
        }
      }
      uses cl-oam:path-discovery-data;
    }
  }</artwork>
        </figure>
      </section>

      <section title="OAM Retrieval Methods Hierarchy">
        <t>The complete data hierarchy related to the Connectionless OAM
        Retrieval Methods YANG data model is presented below.</t>


        <figure title="Data Hierarchy of OAM Retrieval Methods">
          <artwork>
module: ietf-connectionless-oam-methods

  rpcs:
    +---x continuity-check {cl-oam:continuity-check}?
    |  +---w input
    |  |  +---w destination-tp
    |  |  |  +---w tp-location-type    identityref
    |  |  |  +---w mac-address
    |  |  |  |  +---w mac-address    yang:mac-address
    |  |  |  +---w ipv4-address
    |  |  |  |  +---w ipv4-address    inet:ipv4-address
    |  |  |  +---w ipv6-address
    |  |  |  |  +---w ipv6-address    inet:ipv6-address
    |  |  |  +---w tp-attribute
    |  |  |  |  +---w tp-attribute-type?
    |  |  |  |  |       address-attribute-type
    |  |  |  |  +---w (tp-attribute-value)?
    |  |  |  |     +--:(ip-prefix)
    |  |  |  |     |  +---w ip-prefix?
    |  |  |  |     |          inet:ip-prefix
    |  |  |  |     +--:(bgp)
    |  |  |  |     |  +---w bgp?
    |  |  |  |     |          inet:ip-prefix
    |  |  |  |     +--:(tunnel)
    |  |  |  |     |  +---w tunnel-interface?         uint32
    |  |  |  |     +--:(pw)
    |  |  |  |     |  +---w remote-pe-address?
    |  |  |  |     |  |       inet:ip-address
    |  |  |  |     |  +---w pw-id?                    uint32
    |  |  |  |     +--:(vpls)
    |  |  |  |     |  +---w route-distinguisher?
    |  |  |  |     |  |       rt:route-distinguisher
    |  |  |  |     |  +---w sender-ve-id?             uint16
    |  |  |  |     |  +---w receiver-ve-id?           uint16
    |  |  |  |     +--:(mpls-mldp)
    |  |  |  |        +---w (root-address)?
    |  |  |  |           +--:(ip-address)
    |  |  |  |           |  +---w source-address?
    |  |  |  |           |  |       inet:ip-address
    |  |  |  |           |  +---w group-ip-address?
    |  |  |  |           |          inet:ip-address
    |  |  |  |           +--:(vpn)
    |  |  |  |           |  +---w as-number?
    |  |  |  |           |          inet:as-number
    |  |  |  |           +--:(global-id)
    |  |  |  |              +---w lsp-id?             string
    |  |  |  +---w system-info
    |  |  |     +---w router-id?   rt:router-id
    |  |  +---w source-interface      if:interface-ref
    |  |  +---w outbound-interface    if:interface-ref
    |  |  +---w vrf?
    |  |  |       cl-oam:routing-instance-ref
    |  |  +---w session-type?         enumeration
    |  |  +---w count?                uint32
    |  |  +---w ttl?                  uint8
    |  |  +---w packet-size?          uint32
    |  +--ro output
    |     +--ro response-info
    |     |  +--ro protocol-id              identityref
    |     |  +--ro protocol-id-meta-data?   identityref
    |     |  +--ro status-code              identityref
    |     |  +--ro status-sub-code          identityref
    |     +--ro src-test-point
    |     |  +--ro ni?                 routing-instance-ref
    |     |  +--ro tp-location-type    identityref
    |     |  +--ro mac-address
    |     |  |  +--ro mac-address    yang:mac-address
    |     |  +--ro ipv4-address
    |     |  |  +--ro ipv4-address    inet:ipv4-address
    |     |  +--ro ipv6-address
    |     |  |  +--ro ipv6-address    inet:ipv6-address
    |     |  +--ro tp-attribute
    |     |  |  +--ro tp-attribute-type?
    |     |  |  |       address-attribute-type
    |     |  |  +--ro (tp-attribute-value)?
    |     |  |     +--:(ip-prefix)
    |     |  |     |  +--ro ip-prefix?
    |     |  |     |          inet:ip-prefix
    |     |  |     +--:(bgp)
    |     |  |     |  +--ro bgp?
    |     |  |     |          inet:ip-prefix
    |     |  |     +--:(tunnel)
    |     |  |     |  +--ro tunnel-interface?         uint32
    |     |  |     +--:(pw)
    |     |  |     |  +--ro remote-pe-address?
    |     |  |     |  |       inet:ip-address
    |     |  |     |  +--ro pw-id?                    uint32
    |     |  |     +--:(vpls)
    |     |  |     |  +--ro route-distinguisher?
    |     |  |     |  |       rt:route-distinguisher
    |     |  |     |  +--ro sender-ve-id?             uint16
    |     |  |     |  +--ro receiver-ve-id?           uint16
    |     |  |     +--:(mpls-mldp)
    |     |  |        +--ro (root-address)?
    |     |  |           +--:(ip-address)
    |     |  |           |  +--ro source-address?
    |     |  |           |  |       inet:ip-address
    |     |  |           |  +--ro group-ip-address?
    |     |  |           |          inet:ip-address
    |     |  |           +--:(vpn)
    |     |  |           |  +--ro as-number?
    |     |  |           |          inet:as-number
    |     |  |           +--:(global-id)
    |     |  |              +--ro lsp-id?             string
    |     |  +--ro system-info
    |     |  |  +--ro router-id?   rt:router-id
    |     |  +--ro egress-intf-name?   if:interface-ref
    |     +--ro dest-test-point
    |     |  +--ro ni?                  routing-instance-ref
    |     |  +--ro tp-location-type     identityref
    |     |  +--ro mac-address
    |     |  |  +--ro mac-address    yang:mac-address
    |     |  +--ro ipv4-address
    |     |  |  +--ro ipv4-address    inet:ipv4-address
    |     |  +--ro ipv6-address
    |     |  |  +--ro ipv6-address    inet:ipv6-address
    |     |  +--ro tp-attribute
    |     |  |  +--ro tp-attribute-type?
    |     |  |  |       address-attribute-type
    |     |  |  +--ro (tp-attribute-value)?
    |     |  |     +--:(ip-prefix)
    |     |  |     |  +--ro ip-prefix?
    |     |  |     |          inet:ip-prefix
    |     |  |     +--:(bgp)
    |     |  |     |  +--ro bgp?
    |     |  |     |          inet:ip-prefix
    |     |  |     +--:(tunnel)
    |     |  |     |  +--ro tunnel-interface?         uint32
    |     |  |     +--:(pw)
    |     |  |     |  +--ro remote-pe-address?
    |     |  |     |  |       inet:ip-address
    |     |  |     |  +--ro pw-id?                    uint32
    |     |  |     +--:(vpls)
    |     |  |     |  +--ro route-distinguisher?
    |     |  |     |  |       rt:route-distinguisher
    |     |  |     |  +--ro sender-ve-id?             uint16
    |     |  |     |  +--ro receiver-ve-id?           uint16
    |     |  |     +--:(mpls-mldp)
    |     |  |        +--ro (root-address)?
    |     |  |           +--:(ip-address)
    |     |  |           |  +--ro source-address?
    |     |  |           |  |       inet:ip-address
    |     |  |           |  +--ro group-ip-address?
    |     |  |           |          inet:ip-address
    |     |  |           +--:(vpn)
    |     |  |           |  +--ro as-number?
    |     |  |           |          inet:as-number
    |     |  |           +--:(global-id)
    |     |  |              +--ro lsp-id?             string
    |     |  +--ro system-info
    |     |  |  +--ro router-id?   rt:router-id
    |     |  +--ro ingress-intf-name?   if:interface-ref
    |     +--ro sequence-number?             uint64
    |     +--ro hop-cnt?                     uint8
    |     +--ro session-packet-statistics
    |     |  +--ro rx-packet-count?    uint32
    |     |  +--ro tx-packet-count?    uint32
    |     |  +--ro rx-bad-packet?      uint32
    |     |  +--ro tx-packet-failed?   uint32
    |     +--ro session-error-statistics
    |     |  +--ro packet-loss-count?          uint32
    |     |  +--ro loss-ratio?                 percentage
    |     |  +--ro packet-reorder-count?       uint32
    |     |  +--ro packets-out-of-seq-count?   uint32
    |     |  +--ro packets-dup-count?          uint32
    |     +--ro session-delay-statistics
    |     |  +--ro time-unit-value?       identityref
    |     |  +--ro min-delay-value?       uint32
    |     |  +--ro max-delay-value?       uint32
    |     |  +--ro average-delay-value?   uint32
    |     +--ro session-jitter-statistics
    |        +--ro unit-value?             identityref
    |        +--ro min-jitter-value?       uint32
    |        +--ro max-jitter-value?       uint32
    |        +--ro average-jitter-value?   uint32
    +---x path-discovery {cl-oam:path-discovery}?
       +---w input
       |  +---w destination-tp
       |  |  +---w tp-location-type    identityref
       |  |  +---w mac-address
       |  |  |  +---w mac-address    yang:mac-address
       |  |  +---w ipv4-address
       |  |  |  +---w ipv4-address    inet:ipv4-address
       |  |  +---w ipv6-address
       |  |  |  +---w ipv6-address    inet:ipv6-address
       |  |  +---w tp-attribute
       |  |  |  +---w tp-attribute-type?
       |  |  |  |       address-attribute-type
       |  |  |  +---w (tp-attribute-value)?
       |  |  |     +--:(ip-prefix)
       |  |  |     |  +---w ip-prefix?
       |  |  |     |          inet:ip-prefix
       |  |  |     +--:(bgp)
       |  |  |     |  +---w bgp?
       |  |  |     |          inet:ip-prefix
       |  |  |     +--:(tunnel)
       |  |  |     |  +---w tunnel-interface?         uint32
       |  |  |     +--:(pw)
       |  |  |     |  +---w remote-pe-address?
       |  |  |     |  |       inet:ip-address
       |  |  |     |  +---w pw-id?                    uint32
       |  |  |     +--:(vpls)
       |  |  |     |  +---w route-distinguisher?
       |  |  |     |  |       rt:route-distinguisher
       |  |  |     |  +---w sender-ve-id?             uint16
       |  |  |     |  +---w receiver-ve-id?           uint16
       |  |  |     +--:(mpls-mldp)
       |  |  |        +---w (root-address)?
       |  |  |           +--:(ip-address)
       |  |  |           |  +---w source-address?
       |  |  |           |  |       inet:ip-address
       |  |  |           |  +---w group-ip-address?
       |  |  |           |          inet:ip-address
       |  |  |           +--:(vpn)
       |  |  |           |  +---w as-number?
       |  |  |           |          inet:as-number
       |  |  |           +--:(global-id)
       |  |  |              +---w lsp-id?             string
       |  |  +---w system-info
       |  |     +---w router-id?   rt:router-id
       |  +---w source-interface      if:interface-ref
       |  +---w outbound-interface    if:interface-ref
       |  +---w vrf?
       |  |       cl-oam:routing-instance-ref
       |  +---w session-type?         enumeration
       |  +---w max-ttl?              uint8
       +--ro output
          +--ro response-list* [response-index]
          |  +--ro response-index           uint32
          |  +--ro protocol-id              identityref
          |  +--ro protocol-id-meta-data?   identityref
          |  +--ro status-code              identityref
          |  +--ro status-sub-code          identityref
          +--ro src-test-point
          |  +--ro ni?                 routing-instance-ref
          |  +--ro tp-location-type    identityref
          |  +--ro mac-address
          |  |  +--ro mac-address    yang:mac-address
          |  +--ro ipv4-address
          |  |  +--ro ipv4-address    inet:ipv4-address
          |  +--ro ipv6-address
          |  |  +--ro ipv6-address    inet:ipv6-address
          |  +--ro tp-attribute
          |  |  +--ro tp-attribute-type?
          |  |  |       address-attribute-type
          |  |  +--ro (tp-attribute-value)?
          |  |     +--:(ip-prefix)
          |  |     |  +--ro ip-prefix?
          |  |     |          inet:ip-prefix
          |  |     +--:(bgp)
          |  |     |  +--ro bgp?
          |  |     |          inet:ip-prefix
          |  |     +--:(tunnel)
          |  |     |  +--ro tunnel-interface?         uint32
          |  |     +--:(pw)
          |  |     |  +--ro remote-pe-address?
          |  |     |  |       inet:ip-address
          |  |     |  +--ro pw-id?                    uint32
          |  |     +--:(vpls)
          |  |     |  +--ro route-distinguisher?
          |  |     |  |       rt:route-distinguisher
          |  |     |  +--ro sender-ve-id?             uint16
          |  |     |  +--ro receiver-ve-id?           uint16
          |  |     +--:(mpls-mldp)
          |  |        +--ro (root-address)?
          |  |           +--:(ip-address)
          |  |           |  +--ro source-address?
          |  |           |  |       inet:ip-address
          |  |           |  +--ro group-ip-address?
          |  |           |          inet:ip-address
          |  |           +--:(vpn)
          |  |           |  +--ro as-number?
          |  |           |          inet:as-number
          |  |           +--:(global-id)
          |  |              +--ro lsp-id?             string
          |  +--ro system-info
          |     +--ro router-id?   rt:router-id
          +--ro dest-test-point
          |  +--ro ni?                 routing-instance-ref
          |  +--ro tp-location-type    identityref
          |  +--ro mac-address
          |  |  +--ro mac-address    yang:mac-address
          |  +--ro ipv4-address
          |  |  +--ro ipv4-address    inet:ipv4-address
          |  +--ro ipv6-address
          |  |  +--ro ipv6-address    inet:ipv6-address
          |  +--ro tp-attribute
          |  |  +--ro tp-attribute-type?
          |  |  |       address-attribute-type
          |  |  +--ro (tp-attribute-value)?
          |  |     +--:(ip-prefix)
          |  |     |  +--ro ip-prefix?
          |  |     |          inet:ip-prefix
          |  |     +--:(bgp)
          |  |     |  +--ro bgp?
          |  |     |          inet:ip-prefix
          |  |     +--:(tunnel)
          |  |     |  +--ro tunnel-interface?         uint32
          |  |     +--:(pw)
          |  |     |  +--ro remote-pe-address?
          |  |     |  |       inet:ip-address
          |  |     |  +--ro pw-id?                    uint32
          |  |     +--:(vpls)
          |  |     |  +--ro route-distinguisher?
          |  |     |  |       rt:route-distinguisher
          |  |     |  +--ro sender-ve-id?             uint16
          |  |     |  +--ro receiver-ve-id?           uint16
          |  |     +--:(mpls-mldp)
          |  |        +--ro (root-address)?
          |  |           +--:(ip-address)
          |  |           |  +--ro source-address?
          |  |           |  |       inet:ip-address
          |  |           |  +--ro group-ip-address?
          |  |           |          inet:ip-address
          |  |           +--:(vpn)
          |  |           |  +--ro as-number?
          |  |           |          inet:as-number
          |  |           +--:(global-id)
          |  |              +--ro lsp-id?             string
          |  +--ro system-info
          |     +--ro router-id?   rt:router-id
          +--ro sequence-number?             uint64
          +--ro hop-cnt?                     uint8
          +--ro session-packet-statistics
          |  +--ro rx-packet-count?    uint32
          |  +--ro tx-packet-count?    uint32
          |  +--ro rx-bad-packet?      uint32
          |  +--ro tx-packet-failed?   uint32
          +--ro session-error-statistics
          |  +--ro packet-loss-count?          uint32
          |  +--ro loss-ratio?                 percentage
          |  +--ro packet-reorder-count?       uint32
          |  +--ro packets-out-of-seq-count?   uint32
          |  +--ro packets-dup-count?          uint32
          +--ro session-delay-statistics
          |  +--ro time-unit-value?       identityref
          |  +--ro min-delay-value?       uint32
          |  +--ro max-delay-value?       uint32
          |  +--ro average-delay-value?   uint32
          +--ro session-jitter-statistics
          |  +--ro unit-value?             identityref
          |  +--ro min-jitter-value?       uint32
          |  +--ro max-jitter-value?       uint32
          |  +--ro average-jitter-value?   uint32
          +--ro path-verification
          |  +--ro flow-info?
          |  |       string
          |  +--ro session-path-verification-statistics
          |     +--ro verified-count?   uint32
          |     +--ro failed-count?     uint32
          +--ro path-trace-info
             +--ro path-trace-info-list* [index]
                +--ro index                   uint32
                +--ro ni?
                |       routing-instance-ref
                +--ro tp-location-type        identityref
                +--ro mac-address
                |  +--ro mac-address    yang:mac-address
                +--ro ipv4-address
                |  +--ro ipv4-address    inet:ipv4-address
                +--ro ipv6-address
                |  +--ro ipv6-address    inet:ipv6-address
                +--ro tp-attribute
                |  +--ro tp-attribute-type?
                |  |       address-attribute-type
                |  +--ro (tp-attribute-value)?
                |     +--:(ip-prefix)
                |     |  +--ro ip-prefix?
                |     |          inet:ip-prefix
                |     +--:(bgp)
                |     |  +--ro bgp?
                |     |          inet:ip-prefix
                |     +--:(tunnel)
                |     |  +--ro tunnel-interface?
                |     |          uint32
                |     +--:(pw)
                |     |  +--ro remote-pe-address?
                |     |  |       inet:ip-address
                |     |  +--ro pw-id?
                |     |          uint32
                |     +--:(vpls)
                |     |  +--ro route-distinguisher?
                |     |  |       rt:route-distinguisher
                |     |  +--ro sender-ve-id?
                |     |  |       uint16
                |     |  +--ro receiver-ve-id?
                |     |          uint16
                |     +--:(mpls-mldp)
                |        +--ro (root-address)?
                |           +--:(ip-address)
                |           |  +--ro source-address?
                |           |  |       inet:ip-address
                |           |  +--ro group-ip-address?
                |           |          inet:ip-address
                |           +--:(vpn)
                |           |  +--ro as-number?
                |           |          inet:as-number
                |           +--:(global-id)
                |              +--ro lsp-id?
                |                      string
                +--ro system-info
                |  +--ro router-id?   rt:router-id
                +--ro timestamp-type?         identityref
                +--ro timestamp-64bit
                |  +--ro timestamp-sec?       uint32
                |  +--ro timestamp-nanosec?   uint32
                +--ro timestamp-80bit {ptp-long-format}?
                |  +--ro timestamp-sec?       uint64
                |  +--ro timestamp-nanosec?   uint32
                +--ro ntp-timestamp-32bit
                |       {ntp-short-format}?
                |  +--ro timestamp-sec?       uint16
                |  +--ro timestamp-nanosec?   uint16
                +--ro icmp-timestamp-32bit {icmp-timestamp}?
                |  +--ro timestamp-millisec?   uint32
                +--ro ingress-intf-name?
                |       if:interface-ref
                +--ro egress-intf-name?
                |       if:interface-ref
                +--ro queue-depth?            uint32
                +--ro transit-delay?          uint32
                +--ro app-meta-data?          uint64
 
</artwork>
        </figure>
      </section>
    </section>

    <section title="OAM Retrieval Methods YANG Module">


<t>
<figure>
  <artwork><![CDATA[
   <CODE BEGINS> file
      "ietf-connectionless-oam-methods@2019-03-12.yang"

module ietf-connectionless-oam-methods {
  namespace 
    "urn:ietf:params:xml:ns:yang:ietf-connectionless-oam-methods";
  prefix cloam-methods;

  import ietf-interfaces {
    prefix if;
  }
  import ietf-connectionless-oam {
    prefix cl-oam;
  }

  organization
    "IETF LIME Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/lime>
     WG List:  <mailto:lmap@ietf.org>

     Deepak Kumar <dekumar@cisco.com>
     Qin Wu <bill.wu@huawei.com>
     Srihari Raghavan <rihari@cisco.com>
     Michael Wang <wangzitao@huawei.com>
     Reshad Rahman <rrahman@cisco.com>";
  description
    "This YANG module defines the RPC operations for
     connectionless OAM to be used within the IETF
     in a protocol-independent manner.  It is
     assumed that each protocol maps corresponding
     abstracts to its native format.  Each protocol
     may extend the YANG data model defined here to
     include protocol-specific extensions.

     Copyright (c) 2019 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 8533; see
     the RFC itself for full legal notices.";

  revision 2019-03-12 {
    description
      "Initial revision.";
    reference
      "RFC 8533: Retrieval Methods YANG Data Model for the Management
       of Operations, Administration, and Maintenance (OAM)
       Protocols That Use Connectionless Communications";
  }

  identity protocol-id {
    description
      "This is the base identity for a generic protocol
       ID.  The protocol registry can be found at
       https://www.iana.org/protocols.";
  }

  identity protocol-id-internet {
    base protocol-id;
    description
      "Identity for Internet Protocols.";
  }

  identity protocol-id-proprietary {
    base protocol-id;
    description
      "Identity for proprietary protocols (e.g.,
       IP SLA).";
  }

  identity protocol-id-sfc {
    base protocol-id;
    description
      "Identity for Service Function Chaining.";
  }

  identity protocol-id-mpls {
    base protocol-id;
    description
      "The MPLS protocol.";
  }

  identity protocol-id-mpls-tp {
    base protocol-id;
    description
      "The MPLS-TP protocol.";
  }

  identity protocol-id-twamp {
    base protocol-id;
    description
      "The Two-Way Active Measurement Protocol (TWAMP)
       protocol.";
  }

  identity protocol-id-bier {
    base protocol-id;
    description
      "The Bit Index Explicit Replication (BIER)
       protocol.";
  }

  identity status-code {
    description
      "This is base identity for a status code.";
  }

  identity success-reach {
    base status-code;
    description
      "Indicates that the destination being verified
       is reachable (see RFC 7276).";
    reference
      "RFC 7276: An Overview of Operations, Administration, and
       Maintenance (OAM) Tools";
  }

  identity fail-reach {
    base status-code;
    description
      "Indicates that the destination being verified
       is not reachable (see RFC 7276).";
    reference
      "RFC 7276: An Overview of Operations, Administration, and
       Maintenance (OAM) Tools";
  }

  identity success-path-verification {
    base status-code;
    description
      "Indicates that the path verification is performed
       successfully (see RFC 7276).";
    reference
      "RFC 7276: An Overview of Operations, Administration, and
       Maintenance (OAM) Tools";
  }

  identity fail-path-verification {
    base status-code;
    description
      "Indicates that the path verification fails
       (see RFC 7276).";
    reference
      "RFC 7276: An Overview of Operations, Administration, and
       Maintenance (OAM) Tools";
  }

  identity status-sub-code {
    description
      "IdentityBase status-sub-code.";
  }

  identity invalid-cc {
    base status-sub-code;
    description
      "Indicates that the Continuity Check message is invalid
       (see RFC 7276).";
    reference
      "RFC 7276: An Overview of Operations, Administration, and
       Maintenance (OAM) Tools";
  }

  identity invalid-pd {
    base status-sub-code;
    description
      "Indicates that the path discovery message is invalid
       (see RFC 7276).";
    reference
      "RFC 7276: An Overview of Operations, Administration, and
       Maintenance (OAM) Tools";
  }

  identity protocol-id-meta-data {
    description
      "This is the base identity for metadata that corresponds
       to the protocol ID.";
  }

  identity protocol-internet-number {
    base protocol-id-meta-data;
    description
      "Internet Protocol number for standard
       Internet Protocols (IANA-assigned Internet
       Protocol numbers) to help in protocol processing.
       The Protocol Numbers registry can be found at
       https://www.iana.org/assignments/protocol-numbers.";
  }

  grouping rpc-input-parameters {
    container destination-tp {
      uses cl-oam:tp-address;
      description
        "Destination test point.";
    }
    leaf source-interface {
      type if:interface-ref;
      mandatory true;
      description
        "Source interface.";
    }
    leaf outbound-interface {
      type if:interface-ref;
      mandatory true;
      description
        "Outbound interface.";
    }
    leaf vrf {
      type cl-oam:routing-instance-ref;
      description
        "Virtual Routing and Forwarding (VRF) instance.";
    }
    description
      "Grouping for RPC input parameters";
  }

  rpc continuity-check {
    if-feature "cl-oam:continuity-check";
    description
      "Continuity Check RPC operation as per RFC 7276.";
    reference
      "RFC 7276: An Overview of Operations, Administration, and
       Maintenance (OAM) Tools";
    input {
      uses rpc-input-parameters;
      uses cl-oam:session-type {
        description
          "If session-type is specified, then session-type
              must be set to on demand";
      }
      leaf count {
        type uint32 {
          range "0..4294967295" {
            description
              "The overall number of packets to be transmitted
               by the sender.  The value of the count will be set
               to zero (0) on creation and will thereafter
               increase monotonically until it reaches a maximum
               value of 2^32-1 (4294967295 decimal), when it wraps
               around and starts increasing again from zero.";
          }
        }
        default "5";
        description
          "Specifies the number of
           packets that will be sent.  By
           default, the packet number is
           set to 5.";
      }
      leaf ttl {
        type uint8;
        default "255";
        description
          "Time to live (TTL) used to limit the lifetime
           of data packets transmitted in the network
           to prevent looping.  The TTL value is decremented
           for every hop that the packet traverses.  If the
           TTL is zero, the data packet will be discarded.";
      }
      leaf packet-size {
        type uint32 {
          range "64..10000";
        }
        default "64";
        description
          "Packet size of the Continuity Check message, in octets.
           By default, the packet size is set to 64 octets.";
      }
    }
    output {
      container response-info {
        leaf protocol-id {
          type identityref {
            base protocol-id;
          }
          mandatory true;
          description
            "Protocol used in the Continuity Check message.
             This could be a standard protocol (e.g.,
             TCP/IP protocols, MPLS, etc.) or a proprietary
             protocol as identified by this field.";
        }
        leaf protocol-id-meta-data {
          type identityref {
            base protocol-id-meta-data;
          }
          description
            "An optional metadata related to the protocol ID.
             For example, this could be the Internet Protocol
             number for standard Internet Protocols used for
             help with protocol processing.";
        }
        leaf status-code {
          type identityref {
            base status-code;
          }
          mandatory true;
          description
            "Status code for Continuity Check RPC operation.
             This could be a basic status code (e.g., destination
             is reachable or destination is not reachable; see RFC 7276)
             or some customized status code as identified by this
             field.";
          reference
            "RFC 7276: An Overview of Operations, Administration, and
             Maintenance (OAM) Tools";
        }
        leaf status-sub-code {
          type identityref {
            base status-sub-code;
          }
          mandatory true;
          description
            "An optional status-sub-code for Continuity Check
             RPC operation.  If the basic status code is destination
             reachable, this status-sub-code doesn't need to be
             specified.  If the basic status code is destination
             unreachable, the status-sub-code can be used to specify
             the detailed reasons.  This could be a basic
             sub-status-code (such as an invalid Continuity Check) or
             other error codes specific to the protocol under use for
             the Continuity Checks.  For example, if ICMP is the
             protocol under use, the error codes defined in RFC 4443
             can be used to specify the reasons specific to ICMP.
             This technology-specific status-sub-code can be
             defined in technology-specific models.";
          reference
            "RFC 4443: The IETF Administrative Oversight Committee
             (IAOC) Member Selection Guidelines and Process.";
        }
        description
          "Status code and status-sub-code for Continuity Check RPC
           operation.";
      }
      uses cl-oam:continuity-check-data;
    }
  }

  rpc path-discovery {
    if-feature "cl-oam:path-discovery";
    description
      "Path discovery RPC operation as per RFC 7276.";
    reference
      "RFC 7276: An Overview of Operations, Administration, and
       Maintenance (OAM) Tools";
    input {
      uses rpc-input-parameters;
      uses cl-oam:session-type {
        description
          "If session-type is specified, then session-type
            must be set to on demand";
      }
      leaf max-ttl {
        type uint8;
        default "255";
        description
          "Maximum TTL indicates the maximum number of hops that
           a packet is permitted to travel before being discarded
           by a router.  By default, the maximum TTL is set to
           255.";
      }
    }
    output {
      list response-list {
        key "response-index";
        description
          "Path discovery response list.";
        leaf response-index {
          type uint32;
          mandatory true;
          description
            "Response index.";
        }
        leaf protocol-id {
          type identityref {
            base protocol-id;
          }
          mandatory true;
          description
            "Protocol used in path discovery.  This could be a
             standard protocol (e.g., TCP/IP protocols, MPLS, etc.)
             or a proprietary protocol as identified by
             this field.";
        }
        leaf protocol-id-meta-data {
          type identityref {
            base protocol-id-meta-data;
          }
          description
            "An optional metadata related to the protocol ID.
             For example, this could be the Internet Protocol
             number for standard Internet Protocols used for
             help with protocol processing.";
        }
        leaf status-code {
          type identityref {
            base status-code;
          }
          mandatory true;
          description
            "Status code for Continuity Check RPC operation.
             This could be a basic status code (e.g., destination
             is reachable or destination is not reachable) or some
             customized status code as identified by this field.";
        }
        leaf status-sub-code {
          type identityref {
            base status-sub-code;
          }
          mandatory true;
          description
            "An optional status-sub-code for Continuity Check
             RPC operation.  If the basic status code is destination
             reachable, this status-sub-code doesn't need to be
             specified.  If the basic status code is destination
             unreachable, the status-sub-code can be used to specify
             the detailed reasons.  This could be a basic
             sub-status-code (such as an invalid Continuity Check) or
             other error codes specific to the protocol under use for
             Continuity Checks.  For example, if ICMP is the protocol
             under use, the error codes defined in RFC 4443
             can be used to specify the reasons specific to ICMP.
             This technology-specific status-sub-code can be defined
             in technology-specific models.";
          reference
            "RFC 4443: The IETF Administrative Oversight Committee
             (IAOC) Member Selection Guidelines and Process.";
        }
      }
      uses cl-oam:path-discovery-data;
    }
  }
}

<CODE ENDS>]]></artwork>
        </figure></t>
    </section>

    <section title="Security Considerations">
      <t>
      The YANG module specified in this document defines a schema for
      data that is designed to be accessed via network management
      protocols such as NETCONF <xref target="RFC6241"/> or RESTCONF
      <xref target="RFC8040"/>. The lowest NETCONF layer is the secure
      transport layer, and the mandatory-to-implement secure transport
      is Secure Shell (SSH) <xref target="RFC6242"/>. The lowest
      RESTCONF layer is HTTPS, and the mandatory-to-implement secure
      transport is TLS <xref target="RFC8446"/>.</t>

      <t>
       The Network Configuration Access Control Model (NACM) <xref target="RFC8341"/> 
       provides the means to restrict access for
       particular NETCONF or RESTCONF users to a preconfigured subset of all
       available NETCONF or RESTCONF protocol operations and content. </t>

      <t>Some of the RPC operations in this YANG module may be considered
      sensitive or vulnerable in some network environments. It is thus
      important to control access to these operations. These are the
      operations and their sensitivity/vulnerability: <list style="symbols">

          <t>continuity-check: Generates Continuity Check.</t>

          <t>path-discovery: Generates path discovery.</t>

        </list>These operations are used to retrieve the data from the device
      that needs to execute the OAM command. Unauthorized source access to some
      sensitive information in the above data may be used for network
      reconnaissance or lead to denial-of-service attacks on both the local
      device and the network.</t>
    </section>

    <section title="IANA Considerations">
      <t>This document registers a URI in the "IETF XML Registry" <xref
      target="RFC3688"/>. The following registration has been made:</t>

      <t>URI: urn:ietf:params:xml:ns:yang:ietf-connectionless-oam-methods</t>

      <t>Registrant Contact: The IESG.</t>

      <t>XML: N/A, the requested URI is an XML namespace.</t>

      <t>This document registers a YANG module in the "YANG Module Names"
      registry <xref target="RFC6020"/>.</t>

      <t>name: ietf-connectionless-oam-methods</t>

      <t>namespace:
      urn:ietf:params:xml:ns:yang:ietf-connectionless-oam-methods</t>

      <t>prefix: cloam-methods</t>

      <t>reference: RFC 8533</t>
    </section>

  </middle>

  <back>
    <references title="Normative References">

     <reference anchor="RFC792">
        <front>
          <title>Internet Control Message Protocol</title>
          <author fullname="J. Postel" initials="J." surname="Postel">
            <organization/>
          </author>
          <date month="September" year="1981"/>
        </front>
         <seriesInfo name="STD" value="5"/>
        <seriesInfo name="RFC" value="792"/>
       <seriesInfo name="DOI" value="10.17487/RFC0792"/>
      </reference>

      <?rfc include='reference.RFC.6241'?>

      <?rfc include='reference.RFC.6242'?>

      <?rfc include='reference.RFC.6020'?>

      <?rfc include='reference.RFC.3688'?>

      <?rfc include='reference.RFC.7011'?>

      <?rfc include='reference.RFC.8040'?>

      <?rfc include='reference.RFC.8341'?>

      <?rfc include='reference.RFC.8446'?>

<!--draft-ietf-lime-yang-connectionless-oam-18; AUTH48 RFC 8532 -->
<reference anchor='RFC8532' target="https://www.rfc-editor.org/info/rfc8532">
<front>
<title>Generic YANG Data Model for the Management of Operations, Administration, and Maintenance (OAM) Protocols That Use Connectionless Communications</title>
<author initials='D' surname='Kumar' fullname='Deepak Kumar'>
    <organization />
</author>
<author initials='M' surname='Wang' fullname='Michael Wang'>
    <organization />
</author>
<author initials='Q' surname='Wu' fullname='Qin Wu' role='editor'>
    <organization />
</author>
<author initials='R' surname='Rahman' fullname='Reshad Rahman'>
    <organization />
</author>
<author initials='S' surname='Raghavan' fullname='Srihari Raghavan'>
    <organization />
</author>
<date month='March' year='2019' />
</front>
<seriesInfo name="RFC" value="8532"/>
<seriesInfo name="DOI" value="10.17487/RFC8532"/>
</reference>
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.5880'?>

      <?rfc include='reference.RFC.7276'?>

      <?rfc include='reference.RFC.8029'?>

      <?rfc include='reference.RFC.4443'?>

      <?rfc include='reference.RFC.8407'?>


<!--draft-ietf-netconf-yang-push; Active - I-D exists-->
<reference anchor='YANG-Push'>
<front>
<title>Subscription to YANG Datastores</title>
<author initials='A' surname='Clemm' fullname='Alexander Clemm'>
    <organization />
</author>
<author initials='E' surname='Voit' fullname='Eric Voit'>
    <organization />
</author>
<author initials='A' surname='Prieto' fullname='Alberto Prieto'>
    <organization />
</author>
<author initials='A' surname='Tripathy' fullname='Ambika Tripathy'>
    <organization />
</author>
<author initials='E' surname='Nilsen-Nygaard' fullname='Einar Nilsen-Nygaard'>
    <organization />
</author>
<author initials='A' surname='Bierman' fullname='Andy Bierman'>
    <organization />
</author>
<author initials='B' surname='Lengyel' fullname='Balazs Lengyel'>
    <organization />
</author>
<date month='February' year='2019' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-netconf-yang-push-22' />
</reference>

    </references>

    <section title="Extending Connectionless OAM Method Module Example">
      <t>The following is an example of extensions possible to
      the "ietf-connectionless-oam-methods" YANG data model defined in this
      document.</t>

      <t>The snippet below depicts an example of augmenting the
      "ietf-connectionless-oam-methods" YANG data model with ICMP ping
      attributes:</t>

      <figure>
        <artwork>augment "/cloam-methods:continuity-check"
+"/cloam-methods:output"{
  container session-rtt-statistics{
   leaf min-rtt{
    type uint32;
 description
 "This minimum ping round-trip-time (RTT) received.";
   }
   leaf max-rtt{
    type uint32;
 description
 "This maximum ping RTT received.";
   }
   leaf avg-rtt{
    type uint32;
 description
  "The current average ping RTT.";
   }
   description
   "This container presents the ping RTT statistics.";
  }
}</artwork>
      </figure>
    

    <section title="Example of New Retrieval Procedures Model">
      <t>As discussed in the Introduction section of this document, the new
      retrieval procedures can be defined for retrieval of the same data
      defined by the base YANG data model for connectionless OAM protocols. This
      appendix demonstrates how the base connectionless OAM data model can be
      extended to support persistent data retrieval besides on-demand
      retrieval procedures defined in <xref target="overview_oam_MM" />, 
      i.e., first retrieve a
      persistent-id based on the destination test point location information, and
      then retrieve the export details based on persistent-id. Internet Protocol
      Flow Information Export (IPFIX) <xref target="RFC7011"/> or YANG-Push
      <xref target="YANG-Push"/> are currently outlined here
      as data export options. Additional export options can be added in the future.</t>

      <t>The YANG module "example-cl-oam-persistent-methods" shown below is
      intended as an illustration rather than a real definition of an RPC
      operation model for persistent data retrieval. For the sake of brevity,
      this module does not obey all the guidelines specified in <xref
       target="RFC8407"/>.</t>

      <figure>
        <artwork>  
module example-cl-oam-persistent-methods {
  namespace "http://example.com/cl-oam-persistent-methods";
  prefix pcloam-methods;

  import ietf-interfaces {
    prefix if;
  }
  import ietf-connectionless-oam {
    prefix cl-oam;
  }
  import ietf-yang-types {
    prefix yang;
  }

  identity export-method {
    description
      "Base identity to represent a conceptual
       export-method.";
  }

  identity ipfix-export {
    base export-method;
    description
      "IPFIX-based export.  Configuration provided
       separately.";
  }

  identity yang-push-export {
    base export-method;
    description
      "YANG-Push from draft-ietf-netconf-yang-push.";
  }

  identity protocol-id {
    description
      "A generic protocol identifier.";
  }

  identity status-code {
    description
      "Base status code.";
  }

  identity success-reach {
    base status-code;
    description
      "Indicates that the destination being verified
       is reachable.";
  }

  identity fail-reach {
    base status-code;
    description
      "Indicates that the destination being verified
       is not reachable";
  }

  identity success-path-verification {
    base status-code;
    description
      "Indicates that the path verification is performed
       successfully.";
  }

  identity fail-path-verification {
    base status-code;
    description
      "Indicates that the path verification fails.";
  }

  identity status-sub-code {
    description
      "Base status-sub-code.";
  }

  identity invalid-cc {
    base status-sub-code;
    description
      "Indicates that the Continuity Check message is
       invalid.";
  }

  identity invalid-pd {
    base status-sub-code;
    description
      "Indicates that the path discovery message is invalid.";
  }

  typedef export-method {
    type identityref {
      base export-method;
    }
    description
      "Export method type.";
  }

  typedef change-type {
    type enumeration {
      enum create {
        description
          "Change due to a create.";
      }
      enum delete {
        description
          "Change due to a delete.";
      }
      enum modify {
        description
          "Change due to an update.";
      }
    }
    description
      "Different types of changes that may occur.";
  }

  rpc cc-get-persistent-id {
    if-feature "cl-oam:continuity-check";
    description
      "Obtains Continuity Check persistent identification
       given mapping parameters as input.";
    input {
      container destination-tp {
        uses cl-oam:tp-address;
        description
          "Destination test point.";
      }
      uses cl-oam:session-type;
      leaf source-interface {
        type if:interface-ref;
        description
          "Source interface.";
      }
      leaf outbound-interface {
        type if:interface-ref;
        description
          "Outbound interface.";
      }
      leaf vrf {
        type cl-oam:routing-instance-ref;
        description
          "VRF instance.";
      }
    }
    output {
      container error-code {
        leaf protocol-id {
          type identityref {
            base protocol-id;
          }
          mandatory true;
          description
            "Protocol used.  This could be a standard
             protocol (e.g., TCP/IP protocols, MPLS, etc.)
             or a proprietary protocol as identified by
             this field.";
        }
        leaf protocol-id-meta-data {
          type uint64;
          description
            "An optional metadata related to the protocol ID.
             For example, this could be the Internet Protocol
             number for standard Internet Protocols used for
             help with protocol processing.";
        }
        leaf status-code {
          type identityref {
            base status-code;
          }
          mandatory true;
          description
            "Status code.";
        }
        leaf status-sub-code {
          type identityref {
            base status-sub-code;
          }
          mandatory true;
          description
            "Sub code for the Continuity Check.";
        }
        description
          "Status code and sub code.";
      }
      leaf cc-persistent-id {
        type string;
        description
          "Id to act as a cookie.";
      }
    }
  }

  rpc cc-persistent-get-export-details {
    if-feature "cl-oam:continuity-check";
    description
      "Given the persistent ID, gets the configuration
       options and details related to the configured data
       export.";
    input {
      leaf cc-persistent-id {
        type string;
        description
          "Persistent ID for use as a key in search.";
      }
    }
    output {
      container error-code {
        leaf protocol-id {
          type identityref {
            base protocol-id;
          }
          mandatory true;
          description
            "Protocol used.  This could be a standard
             protocol (e.g., TCP/IP protocols, MPLS, etc.)
             or a proprietary protocol as identified by
             this field.";
        }
        leaf protocol-id-meta-data {
          type uint64;
          description
            "An optional metadata related to the protocol ID.
             For example, this could be the Internet Protocol
             number for standard Internet Protocols used for
             help with protocol processing.";
        }
        leaf status-code {
          type identityref {
            base status-code;
          }
          mandatory true;
          description
            "Status code.";
        }
        leaf status-sub-code {
          type identityref {
            base status-sub-code;
          }
          mandatory true;
          description
            "Sub code for the Continuity Check.";
        }
        description
          "Status code and sub code.";
      }
      leaf data-export-method {
        type export-method;
        description
          "Type of export in use.";
      }
      choice cc-trigger {
        description
          "Necessary conditions for
           periodic or on-change trigger.";
        case periodic {
          description
            "Periodic reports.";
          leaf period {
            type yang:timeticks;
            description
              "Time interval between reports.";
          }
          leaf start-time {
            type yang:date-and-time;
            description
              "Timestamp from which reports were started.";
          }
        }
        case on-change {
          description
            "On-change trigger and not periodic.";
          leaf all-data-on-start {
            type boolean;
            description
              "Full update done on start or not.";
          }
          leaf-list excluded-change {
            type change-type;
            description
              "Changes that will not trigger an update.";
          }
        }
      }
    }
  }

  rpc pd-get-persistent-id {
    if-feature "cl-oam:path-discovery";
    description
      "Obtains persistent path discovery identification.";
    input {
      container destination-tp {
        uses cl-oam:tp-address;
        description
          "Destination test point.";
      }
      uses cl-oam:session-type;
      leaf source-interface {
        type if:interface-ref;
        description
          "Source interface.";
      }
      leaf outbound-interface {
        type if:interface-ref;
        description
          "Outbound interface.";
      }
      leaf vrf {
        type cl-oam:routing-instance-ref;
        description
          "VRF";
      }
    }
    output {
      list response-list {
        key "response-index";
        description
          "Path discovery response list.";
        leaf response-index {
          type uint32;
          mandatory true;
          description
            "Response index.";
        }
        leaf protocol-id {
          type identityref {
            base protocol-id;
          }
          mandatory true;
          description
            "Protocol used.  This could be a standard
             protocol (e.g., TCP/IP protocols, MPLS, etc.)
             or a proprietary protocol as identified by
             this field.";
        }
        leaf protocol-id-meta-data {
          type uint64;
          description
            "An optional metadata related to the protocol ID.
             For example, this could be the Internet Protocol
             number for standard Internet Protocols used for
             help with protocol processing.";
        }
        leaf status-code {
          type identityref {
            base status-code;
          }
          mandatory true;
          description
            "Status code for persistent path discovery
             information.";
        }
        leaf status-sub-code {
          type identityref {
            base status-sub-code;
          }
          mandatory true;
          description
            "Sub code for persistent path discovery
             information.";
        }
        leaf pd-persistent-id {
          type string;
          description
            "Id to act as a cookie.";
        }
      }
    }
  }

  rpc pd-persistent-get-export-details {
    if-feature "cl-oam:path-discovery";
    description
      "Given the persistent ID, gets the configuration
       options and details related to the configured data

       export.";
    input {
      leaf cc-persistent-id {
        type string;
        description
          "Persistent ID for use as a key in search.";
      }
    }
    output {
      list response-list {
        key "response-index";
        description
          "Path discovery response list.";
        leaf response-index {
          type uint32;
          mandatory true;
          description
            "Response index.";
        }
        leaf protocol-id {
          type identityref {
            base protocol-id;
          }
          mandatory true;
          description
            "Protocol used.  This could be a standard
             protocol (e.g., TCP/IP protocols, MPLS, etc.)
             or a proprietary protocol as identified by
             this field.";
        }
        leaf protocol-id-meta-data {
          type uint64;
          description
            "An optional metadata related to the protocol ID.
             For example, this could be the Internet Protocol
             number for standard Internet Protocols used for
             help with protocol processing.";
        }
        leaf status-code {
          type identityref {
            base status-code;
          }
          mandatory true;
          description
            "Status code for persistent path discovery
             creation.";
        }
        leaf status-sub-code {
          type identityref {
            base status-sub-code;
          }
          mandatory true;
          description
            "Sub code for persistent path discovery
             creation.";
        }
        leaf data-export-method {
          type export-method;
          description
            "Type of export.";
        }
        choice pd-trigger {
          description
            "Necessary conditions
             for periodic or on-change
             trigger.";
          case periodic {
            description
              "Periodic reports.";
            leaf period {
              type yang:timeticks;
              description
                "Time interval between reports.";
            }
            leaf start-time {
              type yang:date-and-time;
              description
                "Timestamp from which reports are started.";
            }
          }
          case on-change {
            description
              "On-change trigger and not periodic.";
            leaf all-data-on-start {
              type boolean;
              description
                "Full update done on start or not.";
            }
            leaf-list excluded-change {
              type change-type;
              description
                "Changes that will not trigger an update.";
            }
          }
        }
      }
    }
  }
}
       </artwork>
      </figure>
     </section>

  </section>
  <section title="Acknowlegements" numbered="no">
      <t>The authors of this document would like to thank Elwyn Davies, Alia
      Atlas, Brian E.&nbsp;Carpenter, Greg Mirsky, Adam Roach, Alissa Cooper, Eric
      Rescorla, Ben Campbell, Benoit Claise, Kathleen Moriarty, Carlos Pignataro, Benjamin Kaduk,
      and others for their substantive review, comments, and proposals to
      improve the document.</t>
    </section>
 

  </back>
</rfc>
