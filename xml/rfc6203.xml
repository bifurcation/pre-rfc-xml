<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc3501 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3501.xml'>
    <!ENTITY rfc5255 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5255.xml'>
]>

<rfc category="std" ipr="trust200902" number="6203" submissionType="IETF" consensus="yes">

    <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
    <?rfc toc="no" ?>
    <?rfc tocompact="no" ?>
    <?rfc tocindent="no" ?>
    <?rfc inline="yes" ?>
    <?rfc symrefs="yes" ?>
    <?rfc sortrefs="yes"?>
    <?rfc iprnotified="no" ?>
    <?rfc compact="yes"?>
    <?rfc subcompact="no"?>
    <?rfc rfcedstyle="yes"?>

  <front>
    <title abbrev="IMAP4 FUZZY Search">IMAP4 Extension for Fuzzy Search</title>
    
    <author initials='T.' surname="Sirainen" fullname='Timo Sirainen'>
        <organization/>
        <address>
          <email>tss@iki.fi</email>
        </address>
    </author>

    <date month="March" year="2011"/>

    <abstract>
      <t>
        This document describes an IMAP protocol extension enabling a server to
        perform searches with inexact matching and assigning relevancy
        scores for matched messages.
      </t>
    </abstract>
  </front>

  <middle>

    <section title="Introduction">
        <t>When humans perform searches in IMAP clients, they typically want to
        see the most relevant search results first. IMAP servers are able to
        do this in the most efficient way when they're free to internally
        decide how searches should match messages. This document describes a
        new SEARCH=FUZZY extension that provides such functionality.</t>
    </section>

    <section title="Conventions Used in This Document">
      <t>In examples, "C:" indicates lines sent by a client that is connected
      to a server.  "S:" indicates lines sent by the server to the client.</t>
      
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in
       RFC 2119 <xref target="KEYWORDS"/>.</t>
    </section>

    <section title="The FUZZY Search Key">
        
        <t>The FUZZY search key takes another search key as its argument.
        The server
        is allowed to perform all matching in an implementation-defined manner
        for this search key, including ignoring the active comparator as
        defined by <xref target="RFC5255"/>. Typically, this would be used to
        search for strings.  For example:</t>

        <list style="empty"><t>
        C: A1 SEARCH FUZZY (SUBJECT "IMAP break")<vspace/>
        S: * SEARCH 1 5 10<vspace/>
        S: A1 OK Search completed.
        </t></list>

        <t>Besides matching messages with a subject of "IMAP break",
        the above
        search may also match messages with subjects "broken IMAP", "IMAP is
        broken", or anything else the server decides that might be a good
        match.</t>
        
        <t>This example does a fuzzy SUBJECT search, but a non-fuzzy FROM
        search:</t>

        <list style="empty"><t>
        C: A2 SEARCH FUZZY SUBJECT work FROM user@example.com<vspace/>
        S: * SEARCH 1 4<vspace/>
        S: A2 OK Search completed.
        </t></list>

        <t>How the server handles multiple separate FUZZY search keys
           is implementation-defined.</t>

        <t>Fuzzy search algorithms might change, or the results of the
         algorithms might be different from search to search, so that
         fuzzy searches with the same parameters might give
         different results for 1)&nbsp;the same user at different times,
         2) different users (searches executed simultaneously),
         or 3) different users (searches executed at different times).
  For example, a fuzzy search might adapt to a
 user's search habits in an attempt to give more relevant results (in a
 "learning" manner). Such differences can also occur because of
 operational decisions, such as load balancing.  Clients asking for
 "fuzzy" really are requesting search results in a
 not-necessarily-deterministic way and need to give the user
 appropriate warning about that.
        </t>

    </section>

    <section title="Relevancy Scores for Search Results">
        
        <t>Servers SHOULD assign a search relevancy score for each matched
        message when the FUZZY search key is given. Relevancy scores are
        given in the range 1-100, where 100 is the highest relevancy.
        The relevancy
        scores SHOULD use the full 1-100 range, so that clients can show them
        to users in a meaningful way, e.g., as a percentage value.</t>
        
        <t>As the name already indicates, relevancy scores specify how
        relevant to
        the search the matched message is. It's not necessarily the same as
        how precisely the message matched. For example, a message whose subject
        fuzzily matches the search string might get a higher relevancy score
        than a message whose body had the exact string in the middle of a
        sentence. When multiple search keys are matched fuzzily, how the
        relevancy score is calculated is server-dependent.</t>

        <t>If the server also advertises the ESEARCH capability as defined by
        <xref target="ESEARCH"/>, the relevancy scores can be retrieved using
        the new RELEVANCY return option for SEARCH:</t>

        <list style="empty"><t>
        C: B1 SEARCH RETURN (RELEVANCY ALL) FUZZY TEXT "Helo"<vspace/>
        S: * ESEARCH (TAG "B1") ALL 1,5,10 RELEVANCY (4 99 42)<vspace/>
        S: B1 OK Search completed.
        </t></list>

    <t>In the example above, the server would treat "hello", "help",
    and other similar strings as fuzzily matching the misspelled
    "Helo".</t>

    <t>The RELEVANCY return option MUST NOT be used unless a FUZZY search key
    is also given. Note that SEARCH results aren't sorted by relevancy;
    SORT is needed for that.</t>

    </section>

    <section title="Fuzzy Matching with Non-String Search Keys">

        <t>Fuzzy matching is not limited to just string matching.  All search
        keys SHOULD be matched fuzzily, although exactly what that means for
        different search keys is left for server implementations to decide
        -- including deciding that fuzzy matching is meaningless for a
        particular key, and falling back to exact matching.  Some suggestions
        are given below.</t>

        <t>Dates: A typical example could be when a user wants to find a
        message "from Dave about a week ago". A client could perform this
        search using SEARCH FUZZY (FROM "Dave" SINCE 21-Jan-2009 BEFORE
        24&nbhy;Jan&nbhy;2009). The server could return messages
        outside the specified
        date range, but the further away the message is, the lower the
        relevancy score.</t>

        <t>Sizes: These should be handled similarly to dates. If a user wants
        to search for "about 1 MB attachments", the client could do this by
        sending SEARCH FUZZY (LARGER 900000 SMALLER 1100000). Again, the
        further
        away the message size is from the specified range, the lower the
        relevancy score.</t>

        <t>Flags: If other search criteria match, the server could return
        messages that don't have the specified flags set, but with lower
        relevancy scores. SEARCH SUBJECT "xyz" FUZZY ANSWERED, for example,
        might be useful if the user thinks the message he is looking for has
        the ANSWERED flag set, but he isn't sure.</t>

        <t>Unique Identifiers (UIDs), sequences,
        modification sequences: These are examples of keys
        for which exact matching probably makes sense.  Alternatively,
        a server might choose, for instance, to expand a UID range by 5% on
        each side.</t>

    </section>

    <section title="Extensions to SORT and SEARCH">

        <t>If the server also advertises the SORT capability as defined by
        <xref target="SORT"/>, the results can be sorted by the new RELEVANCY
        sort criteria:</t>

        <list style="empty"><t>
        C: C1 SORT (RELEVANCY) UTF-8 FUZZY SUBJECT "Helo"<vspace/>
        S: * SORT 5 10 1<vspace/>
        S: C1 OK Sort completed.
        </t></list>

        <t>The message with the highest score is returned first. As with the
        RELEVANCY return option, RELEVANCY sort criteria MUST NOT be used
        unless a FUZZY search key is also given.</t>

        <t>If the server also advertises the ESORT capability as defined by
        <xref target="CONTEXT"/>, the relevancy scores can be retrieved using
        the new RELEVANCY return option for SORT:</t>

        <artwork align="left">
   C: C2 SORT RETURN (RELEVANCY ALL) (RELEVANCY) UTF-8 FUZZY TEXT
      "Helo"
   S: * ESEARCH (TAG "C2") ALL 5,10,1 RELEVANCY (99 42 4)
   S: C2 OK Sort completed.
        </artwork>

        <t>Furthermore, if the server advertises the CONTEXT=SORT (or
        CONTEXT=SEARCH) capability, then the client can limit the
        number of returned messages to a SORT (or a
        SEARCH) by using the PARTIAL return option.  For example,
        this returns the 10 most relevant messages:</t>

        <artwork align="left">
   C: C3 SORT RETURN (PARTIAL 1:10) (RELEVANCY) UTF-8 FUZZY TEXT
      "World"
   S: * ESEARCH (TAG "C3") PARTIAL (1:10 42,9,34,13,15,4,2,7,23,82)
   S: C3 OK Sort completed.
        </artwork>
    </section>

    <section anchor="syntax" title="Formal Syntax">
      <t>
        The following syntax specification uses the augmented
        Backus-Naur Form (BNF)
        as described in <xref target="ABNF"/>. It includes definitions from
        <xref target="RFC3501"/>, <xref target="IMAP-ABNF"/>, and
        <xref target="SORT"/>.
      </t>

<figure><artwork type="ABNF">
    capability         =/ "SEARCH=FUZZY"

    score              = 1*3DIGIT
       ;; (1 &lt;= n &lt;= 100)

    score-list         = "(" [score *(SP score)] ")"

    search-key         =/ "FUZZY" SP search-key

    search-return-data =/ "RELEVANCY" SP score-list
       ;; Conforms to &lt;search-return-data&gt;, from [IMAP-ABNF]
   
    search-return-opt  =/ "RELEVANCY"
       ;; Conforms to &lt;search-return-opt&gt;, from [IMAP-ABNF]

    sort-key           =/ "RELEVANCY"
</artwork></figure>

    </section>

    <section anchor="security" title="Security Considerations">

    <t>Implementation of this extension might enable denial-of-service
  attacks against server resources.  Servers MAY limit the resources that
  a single search (or a single user) may use. Additionally, implementors
  should be aware of the following: Fuzzy
  search engines are often complex with non-obvious disk space, memory,
  and/or CPU usage patterns.  Server implementors should at least test the
  fuzzy-search behavior with large messages that contain very long words
  and/or unique random strings. Also, very long search keys might cause
  excessive memory or CPU usage.</t>
    
    <t>Invalid input may also be problematic. For example, if the search engine
    takes a UTF-8 stream as input, it might fail more or less badly when
    illegal UTF-8 sequences are fed to it from a message whose character set
    was claimed to be UTF-8. This could be avoided by validating all the
    input and, for example, replacing illegal UTF-8 sequences with the Unicode
    replacement character (U+FFFD).</t>
    
    <t>Search relevancy rankings might be susceptible to "poisoning" by smart
    attackers using certain keywords or hidden markup (e.g., HTML) in their
    messages to boost the rankings. This can't be fully prevented by
    servers, so clients should prepare for it by at least allowing users to
    see all the search results, rather than hiding results below a certain
    score.</t>
      
    </section>

    <section anchor="iana" title="IANA Considerations">
        <t>
        IMAP4 capabilities are registered by publishing a standards track or
        IESG-approved experimental RFC.  The "Internet Message Access
        Protocol (IMAP) 4 Capabilities Registry" is
        available from http://www.iana.org/.
        </t>

        <t>
        This document defines the SEARCH=FUZZY IMAP capability.
        IANA has added it to the registry.
        </t>
        
    </section>
    
    <section title="Acknowledgements">
        <t>
        Alexey Melnikov, Zoltan Ordogh, Barry Leiba, Cyrus Daboo, and
        Dave Cridland have helped with this document.
        </t>
    </section>    
  </middle>

  <back>
    <references title="Normative References">
        &rfc3501;

        <reference anchor="KEYWORDS">
        <front>
        <title>Key words for use in RFCs to Indicate Requirement Levels</title>
          <author initials="S." surname="Bradner" fullname="Scott Bradner">
            <organization>Harvard University</organization>
          </author>
          <date month="March" year="1997" />
        </front>
        <seriesInfo name="BCP" value="14" />
        <seriesInfo name="RFC" value="2119" />
      </reference>
        
      <reference anchor="ABNF">
        <front>
          <title>Augmented BNF for Syntax Specifications: ABNF</title>
          <author initials="D." surname="Crocker" fullname="Dave Crocker" role="editor">
            <organization>Internet Mail Consortium</organization>
          </author>
          <author initials="P." surname="Overell" fullname="Paul Overell">
            <organization>Demon Internet Ltd.</organization>
          </author>
          <date month="January" year="2008" />
        </front>
        <seriesInfo name="STD" value="68" />
        <seriesInfo name="RFC" value="5234" />
      </reference>

      <reference anchor='IMAP-ABNF'>
        <front>
          <title>Collected Extensions to IMAP4 ABNF</title>
          <author initials='A.' surname='Melnikov' fullname='A. Melnikov'>
              <organization>Isode Limited</organization>
          </author>
          <author initials='C.' surname='Daboo' fullname='C. Daboo'>
            <organization />
          </author>
          <date year='2006' month='April' />
        </front>
        <seriesInfo name="RFC" value="4466" />
      </reference>

      <reference anchor="ESEARCH">
        <front>
          <title>IMAP4 Extension to SEARCH Command for Controlling
            What Kind of Information Is Returned</title>
          <author initials='A.' surname="Melnikov" fullname='Alexey Melnikov'>
              <organization>Isode Limited</organization>
          </author>
          <author initials='D.' surname="Cridland" fullname='Dave Cridland'>
              <organization>Isode Limited</organization>
          </author>
          <date month="November" year="2006" />
        </front>
        <seriesInfo name="RFC" value="4731" />
      </reference>

      &rfc5255;

      <reference anchor="SORT">
        <front>
          <title>Internet Message Access Protocol - SORT and THREAD Extensions</title>
          <author initials='M.' surname='Crispin' fullname='M. Crispin'>
            <organization /></author>
          <author initials='K.' surname='Murchison' fullname='K. Murchison'>
            <organization /></author>
          <date year='2008' month='June' />
        </front>
        <seriesInfo name="RFC" value="5256" />
      </reference>

      <reference anchor="CONTEXT">
        <front>
          <title>Contexts for IMAP4</title>
          <author initials='D.' surname="Cridland" fullname='Dave Cridland'>
              <organization>Isode Limited</organization>
          </author>
          <author initials='C.' surname="King" fullname='Curtis King'>
              <organization>Isode Limited</organization>
          </author>
          <date year='2008' month='July' />
        </front>
       <seriesInfo name="RFC" value="5267" />
      </reference>
    </references>
  </back>
</rfc>
