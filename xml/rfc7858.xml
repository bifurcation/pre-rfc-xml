<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
  <!ENTITY RFC2119 PUBLIC '' "reference.RFC.2119.xml">
  <!ENTITY RFC1034 PUBLIC '' "reference.RFC.1034.xml">
  <!ENTITY RFC1035 PUBLIC '' "reference.RFC.1035.xml">
  <!ENTITY RFC4033 PUBLIC '' "reference.RFC.4033.xml">
  <!ENTITY RFC5246 PUBLIC '' "reference.RFC.5246.xml">
  <!ENTITY RFC2595 PUBLIC '' "reference.RFC.2595.xml">
  <!ENTITY RFC3501 PUBLIC '' "reference.RFC.3501.xml">
  <!ENTITY RFC3207 PUBLIC '' "reference.RFC.3207.xml">
  <!ENTITY RFC3234 PUBLIC '' "reference.RFC.3234.xml">
  <!ENTITY RFC1939 PUBLIC '' "reference.RFC.1939.xml">
  <!ENTITY RFC2131 PUBLIC '' "reference.RFC.2131.xml">
  <!ENTITY RFC6891 PUBLIC '' "reference.RFC.6891.xml">
  <!ENTITY RFC4648 PUBLIC '' "reference.RFC.4648.xml">
  <!ENTITY RFC4892 PUBLIC '' "reference.RFC.4892.xml">
  <!ENTITY RFC5077 PUBLIC '' "reference.RFC.5077.xml">
  <!ENTITY RFC6234 PUBLIC '' "reference.RFC.6234.xml">
  <!ENTITY RFC6335 PUBLIC '' "reference.RFC.6335.xml">
  <!ENTITY RFC7766 PUBLIC '' "reference.RFC.7766.xml">
  <!ENTITY RFC7120 PUBLIC '' "reference.RFC.7120.xml">
  <!ENTITY RFC7258 PUBLIC '' "reference.RFC.7258.xml">
  <!ENTITY RFC7413 PUBLIC '' "reference.RFC.7413.xml">
  <!ENTITY RFC7435 PUBLIC '' "reference.RFC.7435.xml">
  <!ENTITY RFC7469 PUBLIC '' "reference.RFC.7469.xml">
  <!ENTITY RFC7525 PUBLIC '' "reference.RFC.7525.xml">
  <!ENTITY RFC7626 PUBLIC '' "reference.RFC.7626.xml">
  <!ENTITY RFC7828 PUBLIC '' "reference.RFC.7828.xml">
  <!ENTITY RFC7830 PUBLIC '' "reference.RFC.7830.xml">
  <!ENTITY RFC3646 PUBLIC '' "reference.RFC.3646.xml">
  ]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes" ?>
<?rfc toc="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="std" number="7858" ipr="trust200902" submissionType="IETF" consensus="yes">


  <front>
    <title abbrev="DNS over TLS">Specification for DNS over Transport Layer Security (TLS)</title>

    <author fullname="Zi Hu" initials="Z." surname="Hu">
      <organization abbrev="USC/ISI">USC/Information Sciences Institute</organization>
      <address>
        <postal>
          <street>4676 Admiralty Way, Suite 1133</street>
          <city>Marina del Rey</city>
          <region>CA</region>
          <code>90292</code>
          <country>United States</country>
        </postal>
        <phone>+1-213-587-1057</phone>
        <email>zihu@outlook.com</email>
      </address>
    </author>

    <author fullname="Liang Zhu" initials="L." surname="Zhu">
      <organization abbrev="USC/ISI">USC/Information Sciences Institute</organization>
      <address>
        <postal>
          <street>4676 Admiralty Way, Suite 1133</street>
          <city>Marina del Rey</city>
          <region>CA</region>
          <code>90292</code>
          <country>United States</country>
        </postal>
        <phone>+1-310-448-8323</phone>
        <email>liangzhu@usc.edu</email>
      </address>
    </author>

    <author fullname="John Heidemann" initials="J." surname="Heidemann">
      <organization abbrev="USC/ISI">USC/Information Sciences Institute</organization>
      <address>
        <postal>
          <street>4676 Admiralty Way, Suite 1001</street>
          <city>Marina del Rey</city>
          <region>CA</region>
          <code>90292</code>
          <country>United States</country>
        </postal>
        <phone>+1-310-822-1511</phone>
        <email>johnh@isi.edu</email>
      </address>
    </author>

    <author fullname="Allison Mankin" initials="A." surname="Mankin">
      <organization>Independent</organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <region></region>
          <code></code>
        </postal>
        <phone>+1-301-728-7198</phone>
        <email>Allison.mankin@gmail.com</email>
      </address>
    </author>

    <author fullname="Duane Wessels" initials="D." surname="Wessels">
      <organization>Verisign Labs</organization>
      <address>
        <postal>
          <street>12061 Bluemont Way</street>
          <city>Reston</city>
          <region>VA</region>
          <code>20190</code>
          <country>United States</country>
        </postal>
        <phone>+1-703-948-3200</phone>
        <email>dwessels@verisign.com</email>
      </address>
    </author>

    <author fullname="Paul Hoffman" initials="P." surname="Hoffman">
      <organization>ICANN</organization>
      <address>
        <email>paul.hoffman@icann.org</email>
      </address>
    </author>

    <date month="May" year="2016" />



    <area>Internet</area>

    <abstract>
      <t>
        This document describes the use of Transport Layer Security (TLS) to provide privacy
        for DNS.  Encryption provided by TLS eliminates opportunities
        for eavesdropping and on-path tampering with DNS queries in the network, such as
        discussed in RFC 7626.
        In addition, this document specifies
        two usage profiles for DNS over TLS and provides advice on
        performance considerations to minimize overhead from using
        TCP and TLS with DNS.
      </t>
      <t>
	This document focuses on securing stub-to-recursive traffic, as per the
	charter of the DPRIVE Working Group.  It does not prevent future applications
	of the protocol to recursive-to-authoritative traffic.
      </t>

    </abstract>
  </front>



  <middle>
    <section anchor="Intro" title="Introduction">

      <t>
        Today, nearly all DNS queries <xref target="RFC1034"/>
        <xref target="RFC1035"/> are sent unencrypted, which makes
        them vulnerable to eavesdropping by an attacker that has
        access to the network channel, reducing the privacy of the
        querier.  Recent news reports have elevated these concerns,
        and recent IETF work has specified privacy considerations
        for DNS <xref target="RFC7626"/>.
      </t>

      <t>
        Prior work has addressed some aspects of DNS security, but
        until recently, there has been little work on privacy between
        a DNS client and server.  DNS Security Extensions (DNSSEC)
        <xref target="RFC4033"/> provide <spanx style="emph">response
          integrity</spanx> by defining mechanisms to cryptographically
        sign zones, allowing end users (or their first-hop resolver)
        to verify replies are correct.  By intention, DNSSEC does not
        protect request and response privacy.  Traditionally, either
        privacy was not considered a requirement for DNS traffic or
        it was assumed that network traffic was sufficiently private;
        however, these perceptions are evolving due to recent events
        <xref target="RFC7258"/>.
      </t>
      <t>
        Other work that has offered the potential to encrypt 
        between DNS clients and servers includes 
        DNSCurve <xref target="DNSCurve"/>,  
        DNSCrypt <xref target="DNSCRYPT-WEBSITE"/>,
        Confidential DNS <xref target="CONFIDENTIAL-DNS"/>, 
        and IPSECA <xref target="IPSECA"/>. 
        In addition to the present specification, the DPRIVE Working Group
        has also adopted a proposal for DNS over Datagram Transport Layer Security (DTLS)
        <xref target="DNSoD"/>.  

      </t> 


      <t>
        This document describes using DNS over TLS on a well-known port and 
        also offers advice on performance considerations to minimize overheads from 
        using TCP and TLS with DNS.
      </t>

      <t>
        Initiation of DNS over TLS is very straightforward.  By
        establishing a connection over a well-known port, clients and
        servers expect and agree to negotiate a TLS session to secure
        the channel.  Deployment will be gradual.  Not all servers will
        support DNS over TLS and the well-known port might be blocked
        by some firewalls.  Clients will be expected to keep track
        of servers that support TLS and those that don't.  Clients and
        servers will adhere to the TLS implementation recommendations
        and security considerations of <xref target="BCP195"/>.
      </t>

      <t>
        The protocol described here works
        for queries and responses between stub clients and recursive
        servers.   It might work equally between recursive clients
        and authoritative servers, but this application of the
        protocol is out of scope for the DNS PRIVate Exchange
        (DPRIVE) Working Group per its current charter.
      </t>

      <t>
	This document describes two profiles in <xref target="profiles"/>
        that provide different levels of assurance of privacy: an opportunistic
        privacy profile and an out-of-band key-pinned privacy profile.
	It is expected that a future document based on <xref target="TLS-DTLS-PROFILES"/> will further
	describe additional privacy profiles for DNS over both TLS and DTLS.
      </t>

      <t>
        An earlier draft version of this document described a technique for
        upgrading a DNS-over-TCP connection to a DNS-over-TLS session
	with, essentially, "STARTTLS for DNS".
	To simplify the protocol, this document now
	only uses a well-known port to specify TLS use,
	omitting the upgrade approach.
        The upgrade approach no longer
        appears in this document, which now focuses exclusively on
        the use of a well-known port for DNS over TLS.
      </t>

    </section>

    <section title="Key Words">
      <t>
        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
        NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
        "OPTIONAL" in this document are to be interpreted as described
        in <xref target="RFC2119">RFC 2119</xref>.
      </t>
    </section>




    <section anchor="Establishment" title="Establishing and Managing DNS-over-TLS Sessions">
      <section anchor="Initiation" title="Session Initiation">
        <t>
          By default, a DNS server that supports DNS over TLS MUST listen for
          and accept TCP connections on port 853, unless it has mutual agreement
          with its clients to use a port other than
          853 for DNS over TLS.
          In order to use a port other than 853, both clients and servers
          would need a configuration option in their software.
        </t>
        <t>
          By default, a DNS client desiring privacy from DNS over TLS from a
          particular server MUST establish a TCP connection to
          port 853 on the server, unless it has mutual agreement with its server
          to use a port other than port 853 for DNS over TLS.
          Such another port MUST NOT be port 53 but MAY be from the
          "first-come, first-served" port range.
          This recommendation against use of port 53 for DNS over TLS
	  is to avoid
          complication in selecting use or non-use of TLS
          and to reduce risk of downgrade attacks.
          The first data exchange on this TCP
          connection MUST be the client and server
          initiating a TLS handshake using the procedure described
          in <xref target="RFC5246"/>.
        </t>
        <t>
          DNS clients and servers MUST NOT use port 853 to transport
          cleartext DNS messages.  DNS clients MUST NOT send and
          DNS servers MUST NOT respond to cleartext DNS messages
          on any port used for DNS over TLS (including, for example,
          after a failed TLS handshake).  There are significant
          security issues in mixing protected and unprotected data,
          and for this reason, TCP connections on a port designated
          by a given server for DNS over TLS are reserved purely
          for encrypted communications.
        </t>
        <t>
          DNS clients SHOULD remember server IP addresses that don't
          support DNS over TLS, including timeouts, connection
          refusals, and TLS handshake failures, and not request
          DNS over TLS from them for a reasonable period (such as
          one hour per server).  DNS clients following an out-of-band key-pinned
          privacy profile (<xref target="oobkppp"/>) MAY be more aggressive about retrying
          DNS-over-TLS connection failures.
        </t>
      </section>

      <section anchor="handshake" title="TLS Handshake and Authentication">     
        <t>
          Once the DNS client succeeds in connecting via TCP on the well-known port for
          DNS over TLS, it proceeds with the TLS handshake <xref target="RFC5246"/>,
	  following
          the best practices specified in <xref target="BCP195"/>.
	</t>
	<t>
	  The client will then authenticate the server, if required.
	  This document does 
          not propose new ideas for authentication.
          Depending on the privacy profile in use (<xref target="profiles"/>), the DNS client may
          choose not to require authentication of the server, or it may make use of 
          a trusted Subject Public Key Info (SPKI) Fingerprint pin set.
        </t>
        <t>
          After TLS negotiation completes, the connection will be encrypted
          and is now protected from eavesdropping.

        </t>
      </section>  

      <section anchor="transmitting" title="Transmitting and Receiving Messages">
        <t>
          All messages (requests and responses) in the established TLS session
          MUST use the two-octet length field described in Section 4.2.2 of
          <xref target="RFC1035"/>.
          For reasons of efficiency, DNS clients and servers SHOULD
          pass the two-octet length field, and the message
          described by that length field, to the TCP layer at the
          same time (e.g., in a single "write" system call) to make
          it more likely that all the data will be transmitted in
          a single TCP segment
          (<xref target="RFC7766"/>, Section 8).
        </t>
	<t>
	  In order to minimize latency, clients SHOULD pipeline
	  multiple queries over a TLS session.  When a DNS client sends
	  multiple queries to a server, it should not wait for an
	  outstanding reply before sending the next query (<xref
	  target="RFC7766"/>, Section 6.2.1.1).
	</t>
	<t>
	  Since pipelined responses can arrive out of order, clients
	  MUST match responses to outstanding queries on the same
	  TLS connection using the Message ID.  If the response
	  contains a Question Section, the client MUST match the
	  QNAME, QCLASS, and QTYPE fields.  Failure by clients to
	  properly
	  match responses to outstanding queries can have serious
	  consequences for interoperability (<xref
	  target="RFC7766"/>, Section 7).
	</t>
      </section>  

      <section anchor="Connection" title="Connection Reuse, Close, and Reestablishment">
        <t>
          For DNS clients that use library functions such as "getaddrinfo()" and "gethostbyname()",
          current implementations are known to open and close TCP connections for each DNS
          query.  To avoid excess TCP connections, each with a single query,
          clients SHOULD reuse a single TCP connection to the
          recursive resolver.  Alternatively, they may prefer to use UDP
          to a DNS-over-TLS-enabled caching resolver on the same machine
          that then uses a system-wide TCP connection to the recursive
          resolver.
        </t>
        <t>
          In order to amortize TCP and TLS connection setup costs, clients
          and servers SHOULD NOT immediately close a connection after
          each response.  Instead, clients and servers SHOULD reuse
          existing connections for subsequent queries as long as they
          have sufficient resources.  In some cases, this means that
          clients and servers may need to keep idle connections open for
          some amount of time.
        </t>
        <t>
          Proper management of established and idle connections is important
          to the healthy operation of a DNS server.  An implementor of
          DNS over TLS SHOULD follow best practices for DNS over TCP, as
          described in <xref target="RFC7766"/>.  Failure
          to do so may lead to resource exhaustion and denial of service.
        </t>
        <t>
          Whereas client and server implementations from the era of <xref
                target="RFC1035"/> are known to have poor TCP connection
          management, this document stipulates that successful negotiation
          of TLS indicates the willingness of both parties to keep idle
          DNS connections open, independent of timeouts or other
          recommendations for DNS over TCP without TLS.  In other words,
          software implementing this protocol is assumed to support idle,
          persistent connections and be prepared to manage
	  multiple, potentially long-lived TCP connections.
        </t>
        <t>
          This document does not make specific recommendations for timeout
          values on idle connections.  Clients and servers should reuse
          and/or close connections depending on the level of available
          resources.  Timeouts may be longer during periods of low activity
          and shorter during periods of high activity.  Current work in
          this area may also assist DNS-over-TLS clients and servers
          in selecting useful timeout values <xref
                target="RFC7828"/> <xref target="TDNS"/>.
        </t>
        <t>
          Clients and servers that keep idle connections open MUST be
          robust to termination of idle connection by either party.  As
          with current DNS over TCP, DNS servers MAY close the connection
          at any time (perhaps due to resource constraints).  As with current
          DNS over TCP, clients MUST handle abrupt closes and be prepared
          to reestablish connections and/or retry queries.
        </t>
        <t>
          When reestablishing a DNS-over-TCP connection that was terminated,
	  as discussed in <xref target="RFC7766"/>, TCP Fast Open <xref
                target="RFC7413"/> is of benefit.
          Underlining the requirement for sending only encrypted
          DNS data on a DNS-over-TLS port (<xref target="handshake"/>), when
          using TCP Fast Open, the client and server MUST immediately
          initiate or resume a TLS handshake (cleartext DNS MUST
          NOT be exchanged).
          DNS servers SHOULD enable fast 
          TLS session resumption <xref target="RFC5077"/>, and this SHOULD
          be used when reestablishing connections.
        </t>
        <t>
          When closing a connection, DNS servers SHOULD use the TLS
          close-notify request to shift TCP TIME-WAIT state to the clients.
          Additional requirements and guidance for optimizing DNS over TCP
          are provided by <xref target="RFC7766"/>.
        </t>
      </section>

    </section>

    <section anchor="profiles" title="Usage Profiles">
      <t>
        This protocol provides flexibility to accommodate several different use cases.
	This document defines two usage profiles: (1) opportunistic privacy and
	(2) out-of-band key-pinned authentication that can be used to obtain
	stronger privacy guarantees if the client has a trusted
	relationship with a DNS server supporting TLS.  Additional
	methods of authentication will be defined in a forthcoming
	document <xref target="TLS-DTLS-PROFILES"/>.
      </t>

      <section title="Opportunistic Privacy Profile">
        <t>
          For opportunistic privacy, analogous to SMTP opportunistic
          security <xref target="RFC7435"/>, one does not require privacy,
	  but one desires privacy when
          possible.
        </t>
        <t>
          With opportunistic privacy, a client might learn of a
          TLS-enabled recursive DNS resolver from an untrusted
          source. One possible example flow would be if the client 
          used the DHCP DNS server option <xref target="RFC3646"/> to
          discover the IP address of a TLS-enabled recursive and then attempted 
          DNS over TLS on port 853.  With such a discovered DNS
          server, the client might or might not validate the resolver.
          These choices maximize availability and performance, but
          they leave the client vulnerable to on-path attacks that
          remove privacy.
        </t>
        <t>
          Opportunistic privacy can be used by any current client, but
          it only provides privacy when there are no on-path
          active attackers.
        </t>
      </section>

      <section title="Out-of-Band Key-Pinned Privacy Profile" anchor="oobkppp">
	<t>
	  The out-of-band key-pinned privacy profile can be used in
	  environments where an established trust relationship already
	  exists between DNS clients and servers (e.g.,
	  stub-to-recursive in enterprise networks,
	  actively maintained contractual service relationships,
	  or a client using a public DNS resolver).
	  The result of this profile is that the client has strong guarantees 
	  about the privacy of its DNS data by
	  connecting only to servers it can authenticate.
          Operators
	  of a DNS-over-TLS service in this profile are expected to provide pins
	  that are specific to the service being pinned (i.e., public
	  keys belonging directly to the end entity or to a
	  service-specific private certificate authority (CA)) and not to a public key(s) of a
	  generic public CA.
	</t>
	<t>
	  In this profile, clients authenticate servers by matching
	  a set of SPKI Fingerprints in an analogous
	  manner to that described in <xref target="RFC7469"/>.
	  With this out-of-band key-pinned privacy profile, client administrators
	  SHOULD deploy a backup pin along with the primary pin, for the reasons explained in <xref target="RFC7469"/>.
	  A backup pin is especially helpful in the event of a key rollover,
	  so that a server
	  operator does not have to coordinate key transitions with
	  all its clients simultaneously.  After a change of keys on
	  the server, an updated pin set SHOULD be distributed to all
	  clients in some secure way in preparation for future key
	  rollover.  The mechanism for an out&nbhy;of&nbhy;band pin set update is
	  out of scope for this document.
	</t>
	<t>
	  Such a client will only use DNS servers for which an SPKI
	  Fingerprint pin set has been provided.
	  The possession of a trusted pre-deployed pin set
	  allows the client to detect and prevent person-in-the-middle and
	  downgrade attacks.
	</t>
        <t>
          However, a configured DNS server may be temporarily unavailable
          when configuring a network.  For example, for clients on
          networks that require authentication through web-based login,
          such authentication may rely on DNS interception and spoofing.
          Techniques such as those used by DNSSEC-trigger <xref
                target="DNSSEC-TRIGGER"/> MAY be used during network
          configuration, with the intent to transition to the designated
          DNS provider after authentication.  The user MUST be alerted
	  whenever possible
          that the DNS is not private during such bootstrap.
	</t>
	<t>
	  Upon successful TLS connection and handshake, the client
	  computes the SPKI Fingerprints for the public keys found
	  in the validated server's certificate chain (or in the raw public key, if
	  the server provides that instead).  If a computed
	  fingerprint exactly matches one of the configured pins, the
	  client continues with the connection as normal.  Otherwise,
	  the client MUST treat the SPKI validation failure as a
	  non-recoverable error. <xref target="example"/> provides a detailed example
	  of how this authentication could be performed in practice.
	</t>
        <t>
          Implementations of this privacy profile MUST support
          the calculation of a fingerprint as the SHA-256
          <xref target="RFC6234"/> hash of the DER-encoded ASN.1
          representation of the SPKI of
          an X.509 certificate.
          Implementations MUST support the representation of a
          SHA-256 fingerprint as a base64-encoded character string
          <xref target="RFC4648"/>.
          Additional fingerprint types MAY also be supported.
        </t>
      </section>

    </section>

    <section anchor="Performance" title="Performance Considerations">
      <t>
        DNS over TLS incurs additional latency at session startup.  It
        also requires additional state (memory) and increased processing
        (CPU).
        <list style="hanging">
          <t hangText="Latency:">
            Compared to UDP, DNS over TCP requires an additional
            round-trip time (RTT) of latency to establish a TCP connection.
            TCP Fast Open <xref target="RFC7413"/> can eliminate that RTT
	    when information exists from prior connections.
            The TLS handshake adds another two RTTs of latency.  Clients
            and servers should support connection keepalive (reuse) and
            out-of-order processing to amortize connection setup costs.
	    Fast TLS connection         
            resumption <xref target="RFC5077"/> further reduces the
            setup delay and avoids the DNS server keeping per-client session state.  
	  </t>
	  <t>
            TLS False Start <xref target="TLS-FALSESTART"/> can also lead to a latency
            reduction in certain situations.
            Implementations supporting TLS False Start need to be
            aware that it imposes additional constraints on how one
            uses TLS, over and above those stated in <xref
            target="BCP195"/>.
            It is unsafe to use False Start if your implementation
            and deployment does not adhere to these specific
            requirements.
            See <xref target="TLS-FALSESTART"/> for the
            details of these additional constraints.
          </t>
          <t hangText="State:">
            The use of connection-oriented TCP requires keeping additional
            state at the server in both the kernel and application.
	    The state requirements
            are of particular concern on servers with many clients,
	    although memory-optimized TLS can add only modest state over TCP.
            Smaller timeout values will reduce the number of concurrent
            connections, and servers can preemptively close connections
            when resource limits are exceeded.
          </t>
          <t hangText="Processing:">
            The use of TLS encryption algorithms results in slightly higher
            CPU usage.  Servers can choose to refuse new DNS-over-TLS
            clients if processing limits are exceeded.
          </t>
          <t hangText="Number of connections:">
            To minimize state on DNS servers and
            connection startup time, clients SHOULD minimize the creation
            of new TCP connections.  Use of a local DNS request aggregator
            (a particular type of forwarder) allows a single active
            DNS-over-TLS connection from any given client computer to
            its server.  Additional guidance can be found in <xref
                  target="RFC7766"/>.
          </t>
        </list>

        A full performance evaluation is outside the scope of this
        specification.  A more detailed analysis of the performance
        implications of DNS over TLS (and DNS over TCP) is discussed
        in <xref target="TDNS"/> and <xref
              target="RFC7766"/>.
      </t>

    </section>


    <section anchor="IANA" title="IANA Considerations">

      <t>
        IANA has added the following value to the "Service Name
        and Transport Protocol Port Number Registry" in the System
        Range.  The registry for that range requires IETF Review or IESG Approval 
        <xref target="RFC6335"/>, and such a review was requested using the
        early allocation process <xref target="RFC7120"/> for the well-known TCP port
        in this document.
      </t>

      <t>
	IANA has reserved the same port number over UDP
	for the proposed DNS-over-DTLS protocol <xref
           target="DNSoD"/>.
      </t>



    <figure>
    <artwork><![CDATA[
    Service Name           domain-s
    Port Number            853
    Transport Protocol(s)  TCP/UDP
    Assignee               IESG
    Contact                IETF Chair
    Description            DNS query-response protocol run over TLS/DTLS
    Reference              This document
      ]]></artwork>
    </figure>

    </section>

    <section anchor="Evolution" title="Design Evolution">

      <t>
	Earlier draft versions of this document
	proposed an upgrade-based approach to establish a TLS
	session.  The client would signal its interest in TLS by
	setting a "TLS OK" bit in the Extensions Mechanisms for DNS (EDNS(0)) flags field.  A server
	would signal its acceptance by responding with the TLS OK
	bit set.
      </t>
      <t>
	Since we assume the client doesn't want to reveal (leak)
	any information prior to securing the channel, we proposed
	the use of a "dummy query" that clients could send for this
	purpose.  The proposed query name was STARTTLS, query type
	TXT, and query class CH.
      </t>
      <t>
	The TLS OK signaling approach has both advantages and
	disadvantages.  One important advantage is that clients and
	servers could negotiate TLS.  If the server is too busy,
	or doesn't want to provide TLS service to a particular
	client, it can respond negatively to the TLS probe.  An
	ancillary benefit is that servers could collect information
	on adoption of DNS over TLS (via the TLS OK bit in queries)
	before implementation and deployment.  Another anticipated
	advantage is the expectation that DNS over TLS would work
	over port 53.  That is, no need to "waste" another port and
	deploy new firewall rules on middleboxes.
      </t>
      <t>
	However, at the same time, there was uncertainty whether
	or not middleboxes would pass the TLS OK bit, given that
	the EDNS0 flags field has been unchanged for many years.
	Another disadvantage is that the TLS OK bit may make downgrade
	attacks easy and indistinguishable from broken middleboxes.
	From a performance standpoint, the upgrade-based approach
	had the disadvantage of requiring 1xRTT additional latency
	for the dummy query.
      </t>
      <t>
	Following this proposal, DNS over DTLS was proposed separately.
	DNS over DTLS claimed it could work over port 53, but only
	because a non-DTLS server interprets a DNS-over-DTLS query
	as a response.  That is, the non-DTLS server observes the
	QR flag set to 1.  While this technically works, it seems
	unfortunate and perhaps even undesirable.
      </t>
      <t>
	DNS over both TLS and DTLS can benefit from a single
	well-known port and avoid extra latency and misinterpreted
	queries as responses.
      </t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>
        Use of DNS over TLS is designed to address the privacy
        risks that arise out of the ability to eavesdrop on DNS messages.  It
        does not address other security issues in DNS, and there are a
        number of residual risks that may affect its success at protecting
        privacy:

        <list style="numbers">
          <t>
            There are known attacks on TLS, such as person-in-the-middle
            and protocol downgrade.  These are general attacks on TLS
            and not specific to DNS over TLS; please refer to the TLS
            RFCs for discussion of these security issues.
            Clients and
            servers MUST adhere to the TLS implementation recommendations
            and security considerations of <xref target="BCP195"/>.
            DNS clients keeping track of servers known to support TLS
            enables clients to detect downgrade attacks.
            For servers with no connection history and no apparent
            support for TLS, depending on their privacy
            profile and privacy requirements, clients may choose to (a) try another server when
            available, (b) continue without TLS, or (c) refuse to
            forward the query.
          </t>
          <t>
            Middleboxes <xref target="RFC3234"/> are present in some
            networks and have been known to interfere with normal DNS
            resolution.
	    Use of a designated port for DNS over TLS
	    should avoid such interference.
            In general, clients that attempt TLS and fail can either fall
            back on unencrypted DNS or wait and retry later, depending
            on their privacy profile and privacy requirements.
          </t> 

          <t>
            Any DNS protocol interactions
            performed in the clear can be modified by a person-in-the-middle
            attacker.  For example, unencrypted queries and responses
            might take place over port 53 between a client and server.
            For this reason, clients MAY discard cached
            information about server capabilities advertised in cleartext.
          </t>
          <t>
            This document does not, itself, specify ideas to resist
            known traffic analysis or side-channel leaks.  Even with encrypted
            messages, a well-positioned party may be able to glean
            certain details from an analysis of message timings and
            sizes.  Clients and servers may consider the use of a padding
            method to address privacy leakage due to message sizes
            <xref target="RFC7830"/>.
            Since traffic analysis can be based on many kinds of
            patterns and many kinds of classifiers, simple padding
            schemes alone might not be sufficient to mitigate
            such an attack.
            Padding will, however, form a part of more
            complex mitigations for traffic-analysis attacks
            that are likely to be developed over time.
            Implementors
            who can offer flexibility in terms of how padding can
            be used may be in a better position to enable such
            mitigations to be deployed in the future.
          </t>
        </list>
      </t>
      <t>
        As noted earlier, DNSSEC and DNS over TLS are independent
        and fully compatible protocols, each solving different
        problems.  The use of one does not diminish the need nor
        the usefulness of the other.
      </t>

    </section>


 

  </middle>

  <back>

    <references title="Normative References">
      &RFC2119;
      &RFC1034;
      &RFC1035;
      &RFC4648;
      &RFC5246;
      &RFC5077;
      &RFC6234;
      &RFC6335;
      &RFC7766;
      &RFC7120;
      &RFC7469;

      <reference anchor="BCP195" target="https://www.rfc&nbhy;editor.org/info/bcp195">
        <front>
          <title abbrev="Recommendations for Secure use of TLS and DTLS">Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
	  <author initials="Y." surname="Sheffer" fullname="Y. Sheffer">
	    <organization/>
	  </author>
	  <author initials="R." surname="Holz" fullname="R. Holz">
	    <organization/>
	  </author>
	  <author initials="P." surname="Saint-Andre" fullname="P. Saint-Andre">
	    <organization/>
	  </author>
	  <date year="2015" month="May"/>
	</front>
	<seriesInfo name="BCP" value="195"/>
	<seriesInfo name="RFC" value="7525"/>
      </reference>

    </references>

    <references title="Informative References">


      &RFC3234;
      &RFC4033;
      &RFC7258;
      &RFC7413;
      &RFC7435;
      &RFC7626;
      &RFC3646;
<!--draft-ietf-dnsop-edns-tcp-keepalive-06 is now RFC 7828-->
      &RFC7828;
<!--draft-ietf-dprive-edns0-padding-03 is now RFC7830-->
      &RFC7830;

<!--draft-osterweil-dane-ipsec-03, Expired-->
      <reference anchor="IPSECA">
        <front>
          <title>Opportunistic Encryption with DANE Semantics and IPsec: IPSECA</title>
          <author initials="E." surname="Osterweil" fullname="Eric Osterweil">
            <organization abbrev="VeriSign">VeriSign, Inc</organization>
            <address></address>
          </author>
          <author initials="G." surname="Wiley" fullname="Glen Wiley">
            <organization abbrev="VeriSign">VeriSign, Inc</organization>
            <address></address>
          </author>
          <author initials="T." surname="Okubo" fullname="Tomofumi Okubo">
            <organization abbrev="VeriSign">Verisign, Inc</organization>
            <address></address>
          </author>
          <author initials="R." surname="Lavu" fullname="Ramana Lavu">
            <organization abbrev="VeriSign">VeriSign, Inc</organization>
            <address></address>
          </author>
          <author initials="A." surname="Mohaisen" fullname="Aziz Mohaisen">
            <organization abbrev="Buffalo">SUNY Buffalo</organization>
            <address></address>
          </author>
          <date month="July" year="2015" />
        </front>
        <seriesInfo name="Work in Progress," value="draft-osterweil-dane-ipsec-03"/>
      </reference>

      <reference anchor="DNSSEC-TRIGGER" target="https://www.nlnetlabs.nl/projects/dnssec-trigger/">
        <front>
          <title>Dnssec-Trigger</title>
          <author>
            <organization abbrev="NLnet">NLnet Labs</organization>
            <address></address>
          </author>
          <date month="May" year="2014" />
        </front>
      </reference>

<!--draft-dempsky-dnscurve-01, Expired-->
<reference anchor='DNSCurve'>
<front>
<title>DNSCurve: Link-Level Security for the Domain Name System</title>
<author initials='M' surname='Dempsky' fullname='Matthew Dempsky'>
    <organization />
</author>
<date month='February' year='2010' />
</front>
<seriesInfo name='Work in Progress,' value='draft-dempsky-dnscurve-01' />
</reference>

    
      <reference anchor="DNSCRYPT-WEBSITE" target="https://www.dnscrypt.org/">
        <front>
          <title>DNSCrypt</title>
          <author initials="F." surname="Denis" fullname="Frank Denis">
            <organization></organization>
            <address></address>
          </author>
          <date month="December" year="2015" />
        </front>
      </reference>

<!--draft-dgr-dprive-dtls-and-tls-profiles-00 was replaced by draft-ietf-dprive-dtls-and-tls-profiles-01; Active, I-D Exists-->
      <reference anchor="TLS-DTLS-PROFILES">
       <front>
<title>Authentication and (D)TLS Profile for DNS-over-TLS and DNS-over-DTLS</title>
<author initials='S' surname='Dickinson' fullname='Sara Dickinson'>
    <organization />
</author>
<author initials='D' surname='Gillmor' fullname='Daniel Kahn Gillmor'>
    <organization />
</author>
<author initials='T' surname='Reddy' fullname='Tirumaleswar Reddy'>
    <organization />
</author>
<date month='March' year='2016' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-dprive-dtls-and-tls-profiles-01' />
</reference>


<!--draft-wijngaards-dnsop-confidentialdns-03, Expired-->
      <reference anchor="CONFIDENTIAL-DNS">
      <front>
<title>Confidential DNS</title>
<author initials='W' surname='Wijngaards' fullname='Wouter Wijngaards'>
    <organization />
</author>
<author initials='G' surname='Wiley' fullname='Glen Wiley'>
    <organization />
</author>
<date month='March' year='2015' />
</front>
<seriesInfo name='Work in Progress,' value='draft-wijngaards-dnsop-confidentialdns-03' />
</reference>


      <reference anchor="TDNS" target="http://dx.doi.org/10.1109/SP.2015.18">
        <front>
          <title>Connection-Oriented DNS to Improve Privacy and Security</title>
          <author initials="L." surname="Zhu" fullname="Liang Zhu"/>
          <author initials="Z." surname="Hu" fullname="Zi Hu"/>
          <author initials="J." surname="Heidemann" fullname="John Heidemann"/>
          <author initials="D." surname="Wessels" fullname="Duane Wessels"/>
          <author initials="A." surname="Mankin" fullname="Allison Mankin"/>
          <author initials="N." surname="Somaiya" fullname="Nikita Somaiya"/>
          <date/>
        </front>
        <seriesInfo name="2015 IEEE Symposium" value="on Security and Privacy (SP)" />
   <seriesInfo name="DOI" value="10.1109/SP.2015.18" />
      </reference>

<!--draft-ietf-tls-falsestart-02; Active, AD Evaluation-->
      <reference anchor="TLS-FALSESTART">
       <front>
<title>Transport Layer Security (TLS) False Start</title>
<author initials='A' surname='Langley' fullname='Adam Langley'>
    <organization />
</author>
<author initials='N' surname='Modadugu' fullname='Nagendra Modadugu'>
    <organization />
</author>
<author initials='B' surname='Moeller' fullname='Bodo Moeller'>
    <organization />
</author>
<date month='May' year='2016' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-tls-falsestart-02' />
</reference>

<!--draft-ietf-dprive-dnsodtls-06; Active, I-D Exists-->
      <reference anchor="DNSoD">
      <front>
<title>DNS over DTLS (DNSoD)</title>
<author initials='T' surname='Reddy' fullname='Tirumaleswar Reddy'>
    <organization />
</author>
<author initials='D' surname='Wing' fullname='Dan Wing'>
    <organization />
</author>
<author initials='P' surname='Patil' fullname='Prashanth Patil'>
    <organization />
</author>
<date month='April' year='2016' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-dprive-dnsodtls-06' />
</reference>
    </references>

    <section title="Out-of-Band Key-Pinned Privacy Profile Example" anchor="example">
      <t>
	This section presents an example of how the out-of-band key-pinned
	privacy profile could work in practice based on a minimal 
	pin set (two pins).
      </t>
      <t>
	A DNS client system is configured with an out-of-band key-pinned privacy 
	profile from a network service, using a
        pin set containing two pins.  Represented in <xref
        target="RFC7469">HTTP Public Key Pinning (HPKP)</xref> style, the pins are:
        <list style="symbols">
          <t>
            pin-sha256="FHkyLhvI0n70E47cJlRTamTrnYVcsYdjUGbr79CfAVI="
          </t>
          <t>
            pin-sha256="dFSY3wdPU8L0u/8qECuz5wtlSgnorYV2f66L6GNQg6w="
          </t>
        </list>
      </t>
      <t>
        The client also configures the IP addresses of its
        expected DNS server: perhaps 192.0.2.3 and 2001:db8::2:4.
      </t>
      <t>
        The client connects to one of these addresses on TCP port 853 and
        begins the TLS handshake: negotiation of TLS 1.2 with a
        Diffie-Hellman key exchange.  The server sends a
        certificate message with a list of three certificates (A,
        B, and C) and signs the ServerKeyExchange message
        correctly with the public key found in certificate A.
      </t>
      <t>
        The client now takes the SHA-256 digest of the SPKI in
        cert A and compares it against both pins in the pin set.
        If either pin matches, the verification is successful; the
        client continues with the TLS connection and can make its
        first DNS query.
      </t>
      <t>
        If neither pin matches the SPKI of cert A, the client
        verifies that cert A is actually issued by cert B.  If it
        is, it takes the SHA-256 digest of the SPKI in cert B and
        compares it against both pins in the pin set.  If either
        pin matches, the verification is successful.  Otherwise,
        it verifies that B was issued by C and then compares the
        pins against the digest of C's SPKI.
      </t>
      <t>
        If none of the SPKIs in the cryptographically valid chain
        of certs match any pin in the pin set, the client closes
        the connection with an error and marks the IP address as
        failed.
      </t>
    </section>
  
    <section anchor="Acknowledgments" title="Acknowledgments" numbered="no">
      <t>
        The authors would like to thank
	Stephane Bortzmeyer,
	John Dickinson,
	Brian Haberman,
	Christian Huitema,
	Shumon Huque,
	Simon Joseffson,
	Kim-Minh Kaplan,
	Simon Kelley,
	Warren Kumari,
	John Levine,
	Ilari Liusvaara,
	Bill Manning,
	George Michaelson,
        Eric Osterweil,
	Jinmei Tatuya,
	Tim Wicinski,
	and
	Glen Wiley
	for reviewing this specification.
	They also thank
        Nikita Somaiya for early work on this idea.
      </t>

      <t>
        Work by Zi Hu, Liang Zhu, and John Heidemann on this document is
        partially sponsored by the U.S.&nbsp;Dept.&nbsp;of Homeland Security (DHS)
        Science and Technology Directorate, Homeland Security Advanced Research Projects Agency (HSARPA), Cyber Security
        Division, BAA 11-01-RIKA and Air Force Research Laboratory,
        Information Directorate under agreement number FA8750-12-2-0344,
        and contract number D08PC75599.
      </t>
    </section>

 <section anchor="contrib" title="Contributors" numbered="no">
      <t>
        The below individuals contributed significantly to the document:
      </t>
 <figure>
    <artwork><![CDATA[
Sara Dickinson
Sinodun Internet Technologies
Magdalen Centre
Oxford Science Park
Oxford  OX4 4GA
United Kingdom

Email: sara@sinodun.com
URI:   http://sinodun.com

Daniel Kahn Gillmor
ACLU
125 Broad Street, 18th Floor
New York, NY  10004
United States
      ]]></artwork>
    </figure>
    </section>

  </back>
</rfc>

