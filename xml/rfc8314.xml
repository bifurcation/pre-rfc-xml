<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc strict="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" category="std" 
     updates="1939, 2595, 3501, 5068, 6186, 6409"
     number="8314" submissionType="IETF" consensus="yes">

<front>

<title abbrev="Use of TLS for Email Submission/Access">Cleartext Considered
Obsolete: Use of Transport Layer Security (TLS) for&nbsp;Email Submission and Access</title>

<author fullname="Keith Moore" initials="K" surname="Moore">
  <organization>Windrock, Inc.</organization>
  <address>
    <postal>
      <street>PO Box 1934</street>
      <city>Knoxville</city>
      <region>TN</region>
      <country>United States of America</country>
      <code>37901</code>
    </postal>
    <email>moore@network-heretics.com</email>
  </address>
</author>

<author initials="C." surname="Newman" fullname="Chris Newman">
 <organization>Oracle</organization>
 <address>
  <postal>
   <street>440 E. Huntington Dr., Suite 400</street>
   <city>Arcadia</city>
   <region>CA</region>
   <code>91006</code>
   <country>United States of America</country>
  </postal>
  <email>chris.newman@oracle.com</email>
 </address>
</author>

<date month="January" year="2018" />

<abstract>
<t>
This specification outlines current recommendations for the use of
Transport Layer Security (TLS) to provide confidentiality of email
traffic between a Mail User Agent (MUA) and a Mail Submission Server
or Mail Access Server. This document updates RFCs 1939, 2595, 3501,
5068, 6186, and 6409.
</t>
</abstract>
</front>

<middle>
<section title="Introduction" anchor="intro">

<t>
Software that provides email service via the Internet Message Access
Protocol (IMAP) <xref target="RFC3501"/>, the Post Office Protocol (POP)
<xref target="RFC1939"/>, and&wj;/or Simple Mail Transfer Protocol (SMTP)
Submission <xref target="RFC6409"/> usually has Transport Layer
Security (TLS) <xref target="RFC5246"/> support but often does not use
it in a way that maximizes end&nbhy;user confidentiality. This
specification describes current recommendations for the use of TLS in
interactions between Mail User Agents (MUAs) and Mail Access Servers,
and also between MUAs and Mail Submission Servers.
</t>

<t>In brief, this memo now recommends that:
<list style="symbols">

  <t>TLS version 1.2 or greater be used for all traffic between MUAs
  and Mail Submission Servers, and also between MUAs and Mail Access
  Servers.</t>

  <t>MUAs and Mail Service Providers (MSPs) (a) discourage the use of
  cleartext protocols for mail access and mail submission and
  (b)&nbsp;deprecate the use of cleartext protocols for these purposes as soon
  as practicable.</t>
  
  <t>Connections to Mail Submission Servers and Mail Access Servers be made
     using "Implicit TLS" (as defined below), in preference to connecting to
     the "cleartext" port and negotiating TLS using the STARTTLS command or
     a similar command.</t>

</list>
</t>

<t>This memo does not address the use of TLS with SMTP for message relay
(where <xref target="RFC6409">Message Submission</xref> does not
apply).  Improving the use of TLS with SMTP for message relay requires a
different approach. One approach to address that topic is described in
<xref target="RFC7672"/>; another is provided in <xref target="MTA-STS"/>.</t>

<t>The recommendations in this memo do not replace the functionality
of, and are not intended as a substitute for, end-to-end encryption of
electronic mail.</t>

  <section title="How This Document Updates Previous RFCs" anchor="sec1.1">
  <t>This document updates POP (RFC 1939), IMAP (RFC 3501), and Submission
  (RFC 6409, RFC 5068) in two ways:

   <list style="numbers">
   <t>By adding Implicit TLS ports as Standards Track ports for these protocols
   as described in <xref target="tls-implicit"/>.</t>
   <t>By updating TLS best practices that apply to these protocols as described
   in Sections&nbsp;<xref target="sec4" format="counter"/> and
   <xref target="sec5" format="counter"/>.</t>
   </list>
  </t>

  <t>This document updates RFC 2595 by replacing Section 7 of RFC 2595
  with the preference for Implicit TLS as described in
  Sections&nbsp;<xref target="intro" format="counter"/> and
  <xref target="tls-implicit" format="counter"/> of this document, as well
  as by updating TLS best practices that apply to the protocols in
  RFC&nbsp;2595 as described in Sections&nbsp;<xref target="sec4"
  format="counter"/> and <xref target="sec5" format="counter"/>
  of this document.</t>

  <t>This document updates RFC 6186 as described herein, in
  <xref target="dns-srv"/>.</t>
  </section>

</section>

<section title="Conventions and Terminology Used in This Document">
  
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
"SHALL&nbsp;NOT", "SHOULD", "SHOULD&nbsp;NOT", "RECOMMENDED",
"NOT&nbsp;RECOMMENDED", "MAY", and "OPTIONAL" in this document
are to be interpreted as described in BCP&nbsp;14
<xref format="default" pageno="false" target="RFC2119"/>
<xref format="default" pageno="false" target="RFC8174"/> when,
and only when, they appear in all capitals, as shown here.</t>

<t>The term "Implicit TLS" refers to the automatic negotiation of TLS
whenever a TCP connection is made on a particular TCP port that is
used exclusively by that server for TLS connections.  The term
"Implicit TLS" is intended to contrast with the use of STARTTLS and
similar commands in POP, IMAP, SMTP Message Submission, and other
protocols, that are used by the client and the server to explicitly
negotiate TLS on an established cleartext TCP connection.</t>

<t>The term "Mail Access Server" refers to a server for POP, IMAP, and
any other protocol used to access or modify received messages, or to
access or modify a mail user's account configuration.</t>

<t>The term "Mail Submission Server" refers to a server for the protocol
specified in <xref target="RFC6409" /> (or one of its predecessors or
successors) for submission of outgoing messages for delivery to
recipients.</t>

<t>The term "Mail Service Provider" (or "MSP") refers to an operator of
Mail Access Servers and&wj;/or Mail Submission Servers.</t>

<t>The term "Mail Account" refers to a user's identity with an MSP,
that user's authentication credentials, any user email that is stored
by the MSP, and any other per-user configuration information maintained by
the MSP (for example, instructions for filtering spam).  Most MUAs support
the ability to access multiple Mail Accounts.</t>

<t>For each account that an MUA accesses on its user's behalf, it must
have the server names, ports, authentication credentials, and other
configuration information specified by the user.  This information,
which is used by the MUA, is referred to as "Mail Account Configuration".</t>

<t>This specification expresses syntax using the Augmented Backus-Naur
Form (ABNF) as described in <xref target="RFC5234"/>, including the
core rules provided in Appendix&nbsp;B of <xref target="RFC5234"/>
and the rules provided in <xref target="RFC5322"/>.</t>

</section>

<section anchor="tls-implicit" title="Implicit TLS">
<t>
Previous standards for the use of email protocols with TLS used the
STARTTLS mechanism: <xref target="RFC2595"/>, <xref
target="RFC3207"/>, and <xref target="RFC3501"/>. With STARTTLS, the
client establishes a cleartext application session and determines
whether to issue a STARTTLS command based on server capabilities and
client configuration. If the client issues a STARTTLS command, a TLS
handshake follows that can upgrade the connection. Although this
mechanism has been deployed, an alternate mechanism where TLS is
negotiated immediately at connection start on a separate port
(referred to in this document as "Implicit TLS") has been deployed
more successfully.  To encourage more widespread use of TLS and to
also encourage greater consistency regarding how TLS is used, this
specification now recommends the use of Implicit TLS for POP, IMAP,
SMTP Submission, and all other protocols used between an MUA and
an MSP.
</t>
<section title="Implicit TLS for POP">
<t>
When a TCP connection is established for the "pop3s" service (default
port&nbsp;995), a TLS handshake begins immediately.  Clients MUST implement
the certificate validation mechanism described in <xref
target="RFC7817"/>.  Once the TLS session is established, POP3 <xref
target="RFC1939"/> protocol messages are exchanged as TLS application
data for the remainder of the TCP connection.  After the server sends
an +OK greeting, the server and client MUST enter the AUTHORIZATION state,
even if a client certificate was supplied during the TLS handshake.
</t>
<t>
See Sections <xref target="mua-clientcert" format="counter"/> and <xref
target="server-clientcert" format="counter"/> for additional information on
client certificate authentication. See <xref target="iana-pop3s"/> for port
registration information.
</t>
</section>
<section title="Implicit TLS for IMAP">
<t>
When a TCP connection is established for the "imaps" service (default
port&nbsp;993), a TLS handshake begins immediately.  Clients MUST implement
the certificate validation mechanism described in <xref target="RFC7817"/>.
Once the TLS session is established, IMAP <xref target="RFC3501"/> protocol
messages are exchanged as TLS application data for the remainder of the TCP
connection. If a client certificate was provided during the TLS handshake that
the server finds acceptable, the server MAY issue a PREAUTH greeting, in which
case both the server and the client enter the AUTHENTICATED state. If the
server issues an OK greeting, then both the server and the client enter the
NOT AUTHENTICATED state.
</t>
<t>
See Sections <xref target="mua-clientcert" format="counter"/> and <xref
target="server-clientcert" format="counter"/> for additional information on
client certificate authentication. See <xref target="iana-imaps"/> for
port registration information.</t>
</section>

<section title="Implicit TLS for SMTP Submission">
<t>
When a TCP connection is established for the "submissions" service
(default port&nbsp;465), a TLS handshake begins immediately.  Clients MUST
implement the certificate validation mechanism described in <xref
target="RFC7817"/>.  Once the TLS session is established, Message
Submission protocol data <xref target="RFC6409"/> is exchanged as TLS
application data for the remainder of the TCP connection.  (Note: The
"submissions" service name is defined in <xref target="iana-submissions"/>
of this document and follows the usual convention that the name of a service
layered on top of Implicit TLS consists of the name of the service as
used without TLS, with an "s" appended.)</t>
<t>The STARTTLS mechanism on port 587 is relatively widely deployed due
to the situation with port&nbsp;465 (discussed in <xref
target="iana-submissions"/>). This differs from IMAP and POP services
where Implicit TLS is more widely deployed on servers than STARTTLS. It
is desirable to migrate core protocols used by MUA software to Implicit
TLS over time, for consistency as well as for the additional reasons
discussed in <xref target="design"/>. However, to maximize the use of
encryption for submission, it is desirable to support both mechanisms for
Message Submission over TLS for a transition period of several years. As
a result, clients and servers SHOULD implement both STARTTLS on port&nbsp;587
and Implicit TLS on port&nbsp;465 for this transition period. Note that there
is no significant difference between the security properties of STARTTLS
on port&nbsp;587 and Implicit TLS on port&nbsp;465 if the implementations are
correct and if both the client and the server are configured to require
successful negotiation of TLS prior to Message Submission.
</t>
<t>Note that the "submissions" port provides access to a Message Submission
Agent (MSA) as defined in <xref target="RFC6409"/>, so requirements
and recommendations for MSAs in that document, including the requirement to
implement SMTP AUTH <xref target="RFC4954"/> and the requirements of
Email Submission Operations <xref target="RFC5068"/>, also apply to the
submissions port.</t>
<t>
See Sections <xref target="mua-clientcert" format="counter"/> and <xref
target="server-clientcert" format="counter"/> for additional information on
client certificate authentication. See <xref target="iana-submissions"/> for
port registration information.
</t>
</section>
<section title="Implicit TLS Connection Closure for POP, IMAP, and SMTP Submission">
<t>
When a client or server wishes to close the connection, it SHOULD
initiate the exchange of TLS close alerts before TCP connection
termination. The client MAY, after sending a TLS close alert,
gracefully close the TCP connection (e.g., call the close() function on
the TCP socket or otherwise issue a TCP CLOSE (<xref target="RFC793"/>,
Section&nbsp;3.5)) without waiting for a TLS response from the server.
</t>
</section>
</section>

<section title="Use of TLS by Mail Access Servers and Message Submission
Servers" anchor="sec4" >
  <t>
    The following requirements and recommendations apply to
    Mail Access Servers and Mail Submission Servers, or, if indicated,
    to MSPs:
    <list style="symbols">

      <t>MSPs that support POP, IMAP, and&wj;/or Message Submission MUST
      support TLS access for those protocol servers.</t>

      <t>Servers provided by MSPs other than POP, IMAP, and/or
      Message Submission SHOULD support TLS access and MUST support TLS
      access for those servers that support authentication via
      username and password.</t>

      <t>MSPs that support POP, IMAP, and/or Message Submission SHOULD
      provide and support instances of those services that use
      Implicit TLS. (See <xref target="tls-implicit" />.)</t>

      <t>For compatibility with existing MUAs and existing MUA
      configurations, MSPs SHOULD also, in the near term, provide
      instances of these services that support STARTTLS.  This will
      permit legacy MUAs to discover new availability of TLS
      capability on servers and may increase the use of TLS by such MUAs.
      However, servers SHOULD NOT advertise STARTTLS if the use of the
      STARTTLS command by a client is likely to fail (for example, if
      the server has no server certificate configured).</t>

      <t>MSPs SHOULD advertise their Mail Access Servers and Mail
      Submission Servers, using DNS SRV records according to <xref
      target="RFC6186"/>.  (In addition to making correct
      configuration easier for MUAs, this provides a way by which MUAs
      can discover when an MSP begins to offer TLS-based services.)
      Servers supporting TLS SHOULD be advertised in preference to
      cleartext servers (if offered).  In addition, servers using
      Implicit TLS SHOULD be advertised in preference to servers
      supporting STARTTLS (if offered). (See also <xref
      target="msp-dns"/>.)</t>

      <t>MSPs SHOULD deprecate the use of cleartext Mail Access Servers and
      Mail Submission Servers as soon as practicable.
      (See <xref target="cleartext-dep" />.)</t>

      <t>MSPs currently supporting such use of cleartext SMTP (on
      port&nbsp;25) as a means of Message Submission by their users
      (whether or not requiring authentication) SHOULD transition their
      users to using TLS (either Implicit TLS or STARTTLS) as soon as
      practicable.</t>

      <t>Mail Access Servers and Mail Submission Servers MUST support
      TLS&nbsp;1.2 or later.</t>

      <t>All Mail Access Servers and Mail Submission Servers SHOULD
      implement the recommended TLS ciphersuites described in <xref
      target="RFC7525"/> or a future BCP or Standards Track revision of that
      document.</t>
      
      <t>As soon as practicable, MSPs currently supporting
      Secure Sockets Layer (SSL)&nbsp;2.x, SSL&nbsp;3.0, or TLS&nbsp;1.0
      SHOULD transition their users to TLS&nbsp;1.1 or later and discontinue
      support for those earlier versions of SSL and TLS.</t>

      <t>Mail Submission Servers accepting mail using TLS SHOULD
      include in the Received field of the outgoing message the
      TLS ciphersuite of the session in which the mail was received.
      (See <xref target="tls-received"/>.)</t>

      <t>All Mail Access Servers and Mail Submission Servers implementing
      TLS SHOULD log TLS cipher information along with any connection or
      authentication logs that they maintain.</t>
  </list>

  Additional considerations and details appear below.
</t>

  <section title="Deprecation of Services Using Cleartext and TLS Versions
 Less&nbsp;Than&nbsp;1.1" anchor="cleartext-dep">
    <t>The specific means employed for deprecation of cleartext Mail
    Access Servers and Mail Submission Servers MAY vary from
    one MSP to the next in light of their user communities' needs and
    constraints.  For example, an MSP MAY implement a gradual
    transition in which, over time, more and more users are forbidden
    to authenticate to cleartext instances of these servers, thus
    encouraging those users to migrate to Implicit TLS.  Access to
    cleartext servers should eventually be either (a)&nbsp;disabled or
    (b)&nbsp;limited strictly for use by legacy systems that cannot be
    upgraded.</t>

    <t>After a user's ability to authenticate to a server using
    cleartext is revoked, the server denying such access MUST NOT
    provide any indication over a cleartext channel of whether the
    user's authentication credentials were valid.  An attempt to
    authenticate as such a user using either invalid credentials or
    valid credentials MUST both result in the same indication of
    access being denied.</t>

    <t>Also, users previously authenticating with passwords sent as
    cleartext SHOULD be required to change those passwords when
    migrating to TLS, if the old passwords were likely to have been
    compromised.  (For any large community of users using the public
    Internet to access mail without encryption, the compromise of
    at least some of those passwords should be assumed.)</t>

    <t>Transition of users from SSL or TLS 1.0 to later versions of
    TLS MAY be accomplished by a means similar to that described
    above.  There are multiple ways to accomplish this.  One way is
    for the server to refuse a ClientHello message from any client
    sending a ClientHello.version field corresponding to any version
    of SSL or TLS&nbsp;1.0.  Another way is for the server to accept
    ClientHello messages from some client versions that it does not
    wish to support but later refuse to allow the user to authenticate.
    The latter method may provide a better indication to the user of the
    reason for the failure but (depending on the protocol and method of
    authentication used) may also risk exposure of the user's password over
    a channel that is known to not provide adequate confidentiality.</t>

    <t>It is RECOMMENDED that new users be required to use TLS
    version&nbsp;1.1 or greater from the start.  However, an MSP may
    find it necessary to make exceptions to accommodate some legacy systems
    that support only earlier versions of TLS or only cleartext.</t>

  </section>
  
  <section anchor="server-clientcert" 
           title="Mail Server Use of Client Certificate Authentication">
    <t>Mail Submission Servers and Mail Access Servers MAY implement
    client certificate authentication on the Implicit TLS port. Such servers
    MUST NOT request a client certificate during the TLS handshake unless the
    server is configured to accept some client certificates as sufficient for
    authentication and the server has the ability to determine a mail
    server authorization identity matching such certificates. How to
    make this determination is presently implementation specific.</t>

    <t>If the server accepts the client's certificate as sufficient
    for authorization, it MUST enable the Simple Authentication and Security
    Layer (SASL) EXTERNAL mechanism <xref target="RFC4422"/>. An IMAPS server
    MAY issue a PREAUTH greeting instead of enabling SASL EXTERNAL.</t>
  </section>

  <section anchor="tls-received" title="Recording TLS Ciphersuite in &quot;Received&quot; Header Field">
    <t>
      The ESMTPS transmission type <xref target="RFC3848"/> provides
      trace information that can indicate that TLS was used when
      transferring mail.  However, TLS usage by itself is not a
      guarantee of confidentiality or security. The TLS ciphersuite
      provides additional information about the level of security made
      available for a connection. This section defines a new SMTP "tls"
      Received header additional-registered-clause that is used to
      record the TLS ciphersuite that was negotiated for the
      connection. This clause SHOULD be included whenever a Submission
      server generates a Received header field for a message received
      via TLS.  The value included in this additional clause SHOULD be
      the registered ciphersuite name (e.g.,
      TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) included in the
      "TLS Cipher Suite Registry". In the event that the implementation
      does not know the name of the ciphersuite (a situation that should be
      remedied promptly), a four-digit hexadecimal ciphersuite
      identifier MAY be used.  In addition, the Diffie-Hellman group
      name associated with the ciphersuite MAY be included (when
      applicable and known) following the ciphersuite name.  The ABNF
      for the field follows:

      <figure>
        <artwork type="abnf"><![CDATA[
tls-cipher-clause  =  CFWS "tls" FWS tls-cipher
                      [ CFWS tls-dh-group-clause ]

tls-cipher         =  tls-cipher-name / tls-cipher-hex

tls-cipher-name    =  ALPHA *(ALPHA / DIGIT / "_")
; as registered in the IANA "TLS Cipher Suite Registry"
; <https://www.iana.org/assignments/tls-parameters>

tls-cipher-hex     =  "0x" 4HEXDIG

tls-dh-group-clause = "group" FWS dh-group
; not to be used except immediately after tls-cipher

dh-group           = ALPHA *(ALPHA / DIGIT / "_" / "-")
; as registered in the IANA "TLS Supported Groups Registry"
; <https://www.iana.org/assignments/tls-parameters>
]]></artwork></figure>

    </t>
  </section>
  <section title="TLS Server Certificate Requirements">
    <t>MSPs MUST maintain valid server certificates for all servers.
    See <xref target="RFC7817"/> for the recommendations and requirements
    necessary to achieve this.</t>
    <t>If a protocol server provides service for more than one
    mail domain, it MAY use a separate IP address for each domain
    and&wj;/or a server certificate that advertises multiple
    domains. This will generally be necessary unless and until it
    is acceptable to impose the constraint that the server and all
    clients support the Server Name Indication (SNI) extension to
    TLS <xref target="RFC6066"/>. Mail servers supporting the SNI need to
    support the post&nbhy;SRV hostname to interoperate with MUAs that have not
    implemented <xref target="RFC6186"/>. For more discussion of this problem,
    see Section&nbsp;5.1 of <xref target="RFC7817"/>.
    </t>
  </section>
  <section title="Recommended DNS Records for Mail Protocol Servers"
           anchor="msp-dns">
    <t>This section discusses not only the DNS records that are
    recommended but also implications of DNS records for server
    configuration and TLS server certificates.</t>
    <section title="MX Records">
      <t>It is recommended that MSPs advertise MX records for the handling of
      inbound mail (instead of relying entirely on A or AAAA records) and
      that those MX records be signed using DNSSEC <xref target="RFC4033"/>.
      This is mentioned here only for completeness, as the handling of
      inbound mail is out of scope for this document.</t>
    </section>
    <section title="SRV Records">
      <t>MSPs SHOULD advertise SRV records to aid MUAs in
      determining the proper configuration of servers, per the
      instructions in <xref target="RFC6186"/>.</t>
      <t>MSPs SHOULD advertise servers that support Implicit TLS
      in preference to servers that support cleartext and&wj;/or
      STARTTLS operation.</t>
    </section>
    <section title="DNSSEC">
      <t>All DNS records advertised by an MSP as a means of aiding
      clients in communicating with the MSP's servers SHOULD be
      signed using DNSSEC if and when the parent DNS zone supports
      doing so.</t>
    </section>
    <section title="TLSA Records">
      <t>MSPs SHOULD advertise TLSA records to provide an
      additional trust anchor for public keys used in TLS server
      certificates.  However, TLSA records MUST NOT be advertised
      unless they are signed using DNSSEC.</t>
    </section>
  </section>
  <section title="Changes to Internet-Facing Servers">
    <t>When an MSP changes the Internet-facing Mail Access Servers
    and Mail Submission Servers, including SMTP-based spam/virus filters,
    it is generally necessary to support the same and&wj;/or a
    newer version of TLS than the one previously used.</t>
  </section>

</section>

<section title="Use of TLS by Mail User Agents" anchor="sec5">
<t>
  The following requirements and recommendations apply to MUAs:
  <list style="symbols">

    <t>MUAs SHOULD be capable of using DNS SRV records to discover
    Mail Access Servers and Mail Submission Servers that are
    advertised by an MSP for an account being configured.  Other means
    of discovering server configuration information (e.g., a database
    maintained by the MUA vendor) MAY also be supported.  
    (See <xref target="dns-srv" /> for more information.)</t>

    <t>MUAs SHOULD be configurable to require a minimum level of
    confidentiality for any particular Mail Account and refuse to
    exchange information via any service associated with that Mail
    Account if the session does not provide that minimum level of
    confidentiality.  (See <xref target="min-confidentiality" />.)</t>

    <t>MUAs MUST NOT treat a session as meeting a minimum level of
    confidentiality if the server's TLS certificate cannot be
    validated.  (See <xref target="cert-validation" />.)</t>

    <t>MUAs MAY impose other minimum confidentiality requirements in
    the future, e.g., in order to discourage the use of TLS versions or
    cryptographic algorithms in which weaknesses have been discovered.</t>

    <t>MUAs SHOULD provide a prominent indication of the level of
    confidentiality associated with an account configuration that is
    appropriate for the user interface (for example, a "lock" icon or
    changed background color for a visual interface, or some sort of
    audible indication for an audio user interface), at appropriate
    times and&wj;/or locations, in order to inform the user of the
    confidentiality of the communications associated with that
    account.  For example, this might be done whenever (a) the user is prompted
    for authentication credentials, (b) the user is composing
    mail that will be sent to a particular submission server, (c) a
    list of accounts is displayed (particularly if the user can select
    from that list to read mail), or (d) the user is asking to
    view or update any configuration data that will be stored on a
    remote server.  If, however, an MUA provides such an indication,
    it MUST&nbsp;NOT indicate confidentiality for any connection that
    does&nbsp;not at least use TLS 1.1 with certificate verification and
    also meet the minimum confidentiality requirements associated with that
    account.</t>

    <t>MUAs MUST implement TLS 1.2 <xref target="RFC5246"/> or later.
    Earlier TLS and SSL versions MAY also be supported, so long as the
    MUA requires at least TLS 1.1 <xref target="RFC4346"/> when
    accessing accounts that are configured to impose minimum
    confidentiality requirements.</t>

    <t>All MUAs SHOULD implement the recommended TLS ciphersuites
    described in <xref target="RFC7525"/> or a future BCP or Standards Track
    revision of that document.</t>
    
    <t>MUAs that are configured to not require minimum confidentiality
    for one or more accounts SHOULD detect when TLS becomes available
    on those accounts (using <xref target="RFC6186"/> or other means)
    and offer to upgrade the account to require TLS.</t>

  </list>
  Additional considerations and details appear below.
</t>
  <section title="Use of SRV Records in Establishing Configuration"
           anchor="dns-srv">
    <t>This document updates <xref target="RFC6186"/> by changing the
    preference rules and adding a new SRV service label _submissions._tcp to
    refer to Message Submission with Implicit TLS.</t>

    <t>User-configurable MUAs SHOULD support the use of <xref
    target="RFC6186" /> for account setup. However, when using
    configuration information obtained via this method, MUAs SHOULD
    ignore advertised services that do not satisfy minimum
    confidentiality requirements, unless the user has explicitly
    requested reduced confidentiality. This will have the effect of
    causing the MUA to default to ignoring advertised configurations
    that do not support TLS, even when those advertised configurations
    have a higher priority than other advertised configurations.</t>
    
    <t>When using configuration information per <xref target="RFC6186"/>,
    MUAs SHOULD NOT automatically establish new configurations that do not
    require TLS for all servers, unless there are no advertised configurations
    using TLS. If such a configuration is chosen, prior to attempting to
    authenticate to the server or use the server for Message Submission, the
    MUA SHOULD warn the user that traffic to that server will not be encrypted
    and that it will therefore likely be intercepted by unauthorized
    parties. The specific wording is to be determined by the implementation,
    but it should adequately capture the sense of risk, given the widespread
    incidence of mass surveillance of email traffic.</t>

    <t>Similarly, an MUA MUST NOT attempt to "test" a particular
    Mail Account configuration by submitting the user's authentication
    credentials to a server, unless a TLS session meeting minimum
    confidentiality levels has been established with that server.  If
    minimum confidentiality requirements have not been satisfied, the
    MUA must explicitly warn that the user's password may be exposed
    to attackers before testing the new configuration.</t>
    
    <t>When establishing a new configuration for connecting to an IMAP,
    POP, or SMTP submission server, based on SRV records, an MUA
    SHOULD verify that either (a)&nbsp;the SRV records are signed 
    using DNSSEC or (b)&nbsp;the target Fully Qualified Domain Name (FQDN) of
    the SRV record matches the original server FQDN for which the SRV queries
    were made.  If the target FQDN is not in the queried domain, the MUA
    SHOULD verify with the user that the SRV target FQDN is suitable for use,
    before executing any connections to the host.
    (See Section&nbsp;6 of <xref target="RFC6186"/>.)</t>
    
    <t>An MUA MUST NOT consult SRV records to determine which
    servers to use on every connection attempt, unless those SRV records are
    signed by DNSSEC and have a valid signature. However, an MUA MAY
    consult SRV records from time to time to determine if an MSP's server
    configuration has changed and alert the user if it appears that this
    has happened. This can also serve as a means to encourage users to
    upgrade their configurations to require TLS if and when their MSPs
    support it.</t>
  </section>
  
  <section title="Minimum Confidentiality Level" anchor="min-confidentiality">
    <t>MUAs SHOULD, by default, require a minimum level of
    confidentiality for services accessed by each account.  For MUAs
    supporting the ability to access multiple Mail Accounts, this
    requirement SHOULD be configurable on a per-account basis.</t>

    <t>The default minimum expected level of confidentiality for all
    new accounts MUST require successful validation of the server's
    certificate and SHOULD require negotiation of TLS version 1.1 or
    greater.  (Future revisions to this specification may raise these
    requirements or impose additional requirements to address
    newly discovered weaknesses in protocols or cryptographic
    algorithms.)</t>

    <t>MUAs MAY permit the user to disable this minimum confidentiality
    requirement during initial account configuration or when
    subsequently editing an account configuration but MUST warn
    users that such a configuration will not assure privacy for either
    passwords or messages.</t>

    <t>An MUA that is configured to require a minimum level of
    confidentiality for a Mail Account MUST NOT attempt to perform any
    operation other than capability discovery, or STARTTLS for servers
    not using Implicit TLS, unless the minimum level of confidentiality
    is provided by that connection.</t>

    <t>MUAs SHOULD NOT allow users to easily access or send mail via a
    connection, or authenticate to any service using a password, if that
    account is configured to impose minimum confidentiality requirements
    and that connection does not meet all of those requirements.  An example
    of "easy access" would be to display a dialog informing the user that the
    security requirements of the account were not met by the connection but
    allowing the user to "click through" to send mail or access the service
    anyway.  Experience indicates that users presented with such an option
    often "click through" without understanding the risks that they're
    accepting by doing so.  Furthermore, users who frequently find the need to
    "click through" to use an insecure connection may become conditioned to do
    so as a matter of habit, before considering whether the risks are
    reasonable in each specific instance.</t>

    <t>An MUA that is not configured to require a minimum level of
    confidentiality for a Mail Account SHOULD still attempt to connect
    to the services associated with that account using the most secure
    means available, e.g., by using Implicit TLS or STARTTLS.</t>

  </section>

  <section title="Certificate Validation" anchor="cert-validation">
    <t>MUAs MUST validate TLS server certificates according to <xref
    target="RFC7817" /> and PKIX <xref target="RFC5280" />.</t>
    
    <t>MUAs MAY also support DNS-Based Authentication of Named Entities (DANE)
    <xref target="RFC6698"/> as a means of validating server certificates in
    order to meet minimum confidentiality requirements.</t>

    <t>MUAs MAY support the use of certificate pinning but MUST NOT
    consider a connection in which the server's authenticity relies on
    certificate pinning as providing the minimum level of
    confidentiality. (See <xref target="certificate-pinning" />.)</t>
  </section>
  
  <section title="Certificate Pinning" anchor="certificate-pinning">
    <t>During account setup, the MUA will identify servers that
    provide account services such as mail access and mail submission
    (<xref target="dns-srv"/> describes one way to do this).  The
    certificates for these servers are verified using the rules
    described in <xref target="RFC7817"/> and PKIX <xref
    target="RFC5280"/>. In the event that the certificate does not validate
    due to an expired certificate, a lack of an appropriate chain of trust,
    or a lack of an identifier match, the MUA MAY offer to create a
    persistent binding between that certificate and the saved hostname
    for the server, for use when accessing that account's servers. This
    is called "certificate pinning".</t>

    <t>(Note: This use of the term "certificate pinning" means
    something subtly different than HTTP Public Key Pinning as described
    in <xref target="RFC7469"/>.  The dual use of the same term is 
    confusing, but unfortunately both uses are well established.)</t>

    <t>Certificate pinning is only appropriate during Mail Account
    setup and MUST NOT be offered as an option in response to a failed
    certificate validation for an existing Mail Account. An MUA that
    allows certificate pinning MUST NOT allow a certificate pinned for
    one account to validate connections for other accounts.  An MUA
    that allows certificate pinning MUST also allow a user to undo the
    pinning, i.e., to revoke trust in a certificate that has previously
    been pinned.
    </t>

    <t>A pinned certificate is subject to a man-in-the-middle attack
    at account setup time and typically lacks a mechanism to automatically
    revoke or securely refresh the certificate.  Note also that a 
    man-in-the-middle attack at account setup time will expose the user's
    password to the attacker (if a password is used).  Therefore, the use of
    a pinned certificate does not meet the requirement for a minimum
    confidentiality level, and an MUA MUST NOT indicate to the user
    that such confidentiality is provided. Additional advice on
    certificate pinning is presented in <xref target="RFC6125"/>.
    </t>
  </section>

  <section anchor="mua-clientcert" title="Client Certificate Authentication">
    <t>MUAs MAY implement client certificate authentication on the
    Implicit TLS port.  An MUA MUST NOT provide a client certificate
    during the TLS handshake unless the server requests one and the
    MUA has been authorized to use that client certificate with that
    account.  Having the end&nbsp;user explicitly configure a client
    certificate for use with a given account is sufficient to meet
    this requirement.  However, installing a client certificate for
    use with one account MUST NOT automatically authorize the use of that
    certificate with other accounts.  This is not intended to prohibit
    site-specific authorization mechanisms, such as (a)&nbsp;a
    site-administrator-controlled mechanism to authorize the use of a
    client certificate with a given account or (b)&nbsp;a
    domain-name-matching mechanism.</t>

    <t>Note: The requirement that the server request a certificate is
    just a restatement of the TLS protocol rules, e.g., Section&nbsp;7.4.6 of <xref
    target="RFC5246"/>.  The requirement that the client
    not send a certificate not known to be acceptable to the server is
    pragmatic in multiple ways: the current TLS protocol provides no
    way for the client to know which of the potentially multiple certificates
    it should use; also, when the client sends a certificate, it is
    potentially disclosing its identity (or its user's identity) to both the
    server and any party with access to the transmission medium, perhaps
    unnecessarily and for no useful purpose.</t>

    <t>A client supporting client certificate authentication with
    Implicit TLS MUST implement the SASL EXTERNAL mechanism <xref
    target="RFC4422"/>, using the appropriate authentication
    command (AUTH for POP3 <xref target="RFC5034"/>, AUTH for SMTP
    Submission <xref target="RFC4954"/>, or AUTHENTICATE for IMAP <xref
    target="RFC3501"/>).</t>
</section>
</section>

<section title="Considerations Related to Antivirus/Antispam Software and Services">
  <t>There are multiple ways to connect an AVAS service (e.g.,
  "Antivirus &amp; Antispam") to a mail server. Some mechanisms,
  such as the de&nbsp;facto "milter" protocol, are out of scope for this
  specification. However, some services use an SMTP relay proxy that
  intercepts mail at the application layer to perform a scan and proxy or
  forward to another Mail Transfer Agent (MTA). Deploying AVAS services in
  this way can cause many problems <xref target="RFC2979"/>, including direct
  interference with this specification, and other forms of confidentiality or
  security reduction.  An AVAS product or service is considered compatible
  with this specification if all IMAP, POP, and SMTP-related software
  (including proxies) it includes are compliant with this specification.
  </t>

  <t>Note that end-to-end email encryption prevents AVAS software and
  services from using email content as part of a spam or virus
  assessment.  Furthermore, although a minimum confidentiality level can
  prevent a man-in-the-middle from introducing spam or virus content
  between the MUA and Submission server, it does not prevent other
  forms of client or account compromise.  The use of AVAS services for
  submitted email therefore remains necessary.</t>
</section>

<section anchor="iana" title="IANA Considerations">

  <section anchor="iana-pop3s" title="POP3S Port Registration Update">
    <t>
      IANA has updated the registration of the TCP well-known
      port&nbsp;995 using the following template <xref target="RFC6335"/>:
      <figure>
        <artwork>
  Service Name: pop3s
  Transport Protocol: TCP
  Assignee: IESG &lt;iesg@ietf.org&gt;
  Contact: IETF Chair &lt;chair@ietf.org&gt;
  Description: POP3 over TLS protocol
  Reference: RFC 8314
  Port Number: 995
</artwork></figure>
    </t>
  </section>

  <section anchor="iana-imaps" title="IMAPS Port Registration Update">
    <t>
      IANA has updated the registration of the TCP well-known
      port&nbsp;993 using the following template <xref target="RFC6335"/>:
      <figure>
        <artwork>
  Service Name: imaps
  Transport Protocol: TCP
  Assignee: IESG &lt;iesg@ietf.org&gt;
  Contact: IETF Chair &lt;chair@ietf.org&gt;
  Description: IMAP over TLS protocol
  Reference: RFC 8314
  Port Number: 993
</artwork></figure>
    </t>
    <t>
      No changes to existing UDP port assignments for pop3s or imaps
      are being requested.
    </t>
  </section>

  <section anchor="iana-submissions" title="Submissions Port Registration">
    <t>
      IANA has assigned an alternate usage of TCP port&nbsp;465 in
      addition to the current assignment using the following template
      <xref target="RFC6335"/>:
      <figure>
        <artwork>
  Service Name: submissions
  Transport Protocol: TCP
  Assignee: IESG &lt;iesg@ietf.org&gt; 
  Contact: IETF Chair &lt;chair@ietf.org&gt; 
  Description: Message Submission over TLS protocol
  Reference: RFC 8314
  Port Number: 465
</artwork></figure>
    </t>
    <t>
      This is a one-time procedural exception to the rules in
      <xref target="RFC6335"/>. This requires explicit IESG approval and does
      not set a precedent.  Note: Since the purpose of this alternate usage
      assignment is to align with widespread existing practice and
      there is no known usage of UDP port&nbsp;465 for Message Submission
      over TLS, IANA has not assigned an alternate usage
      of UDP port&nbsp;465.
    </t>
    <t>Historically, port 465 was briefly registered as the "smtps"
    port. This registration made no sense, as the SMTP transport MX
    infrastructure has no way to specify a port, so port&nbsp;25 is always
    used. As a result, the registration was revoked and was
    subsequently reassigned to a different service. In hindsight, the
    "smtps" registration should have been renamed or reserved rather
    than revoked. Unfortunately, some widely deployed mail software
    interpreted "smtps" as "submissions" <xref target="RFC6409"/> and
    used that port for email submission by default when an end&nbsp;user
    requested security during account setup. If a new port is assigned
    for the submissions service, either (a)&nbsp;email software will 
    continue with unregistered use of port&nbsp;465 (leaving the
    port registry inaccurate relative to de&nbsp;facto practice and wasting
    a well&nbhy;known port) or (b)&nbsp;confusion between the de&nbsp;facto
    and registered ports will cause harmful interoperability problems that
    will deter the use of TLS for Message Submission. The authors of this
    document believe that both of these outcomes are less desirable than a
    "wart" in the registry documenting real&nbhy;world usage of a port for two
    purposes. Although STARTTLS on port&nbsp;587 has been deployed, it has not
    replaced the deployed use of Implicit TLS submission on port&nbsp;465.
    </t>
  </section>

  <section title="Additional Registered Clauses for &quot;Received&quot; Fields">
    <t>Per the provisions in <xref target="RFC5321"/>, IANA has
    added two additional-registered-clauses for Received
    fields as defined in <xref target="tls-received"/> of this
    document: 
    <list style="symbols">
    <t>"tls": Indicates the TLS cipher used (if applicable)</t> 
    <t>"group": Indicates the Diffie-Hellman group used with the
    TLS cipher (if applicable)</t>
    </list>
    The descriptions and syntax of these additional clauses
    are provided in <xref target="tls-received"/> of this document.
    </t>
  </section>
</section>

<section title="Security Considerations">
<t>
This entire document is about security considerations. In general, this
is targeted to improve mail confidentiality and to mitigate threats external to
the email system such as network-level snooping or interception; this is
not intended to mitigate active attackers who have compromised service
provider systems.
</t>
<t>
Implementers should be aware that the use of client certificates with
TLS&nbsp;1.2 reveals the user's identity to any party with the ability to
read packets from the transmission medium and therefore may compromise the
user's privacy.  There seems to be no easy fix with TLS&nbsp;1.2 or earlier
versions, other than to avoid presenting client certificates except
when there is explicit authorization to do so.   TLS&nbsp;1.3
<xref target="TLS-1.3"/> appears to reduce this privacy risk somewhat.
</t>
</section>

</middle>
<back>
<references title="Normative References">

<reference  anchor='RFC793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<date year='1981' month='September' />
</front>
<seriesInfo name='STD' value='7'/>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>

<?rfc include="reference.RFC.1939"?>
<?rfc include="reference.RFC.2119"?>
<?rfc include="reference.RFC.3207"?>
<?rfc include="reference.RFC.3501"?>
<?rfc include="reference.RFC.4033"?>
<?rfc include="reference.RFC.5034"?>
<?rfc include="reference.RFC.5234"?>
<?rfc include="reference.RFC.5246"?>
<?rfc include="reference.RFC.5280"?>
<?rfc include="reference.RFC.5322"?>
<?rfc include="reference.RFC.6186"?>
<?rfc include="reference.RFC.6409"?>
<?rfc include="reference.RFC.6698"?>
<?rfc include="reference.RFC.7525"?>
<?rfc include="reference.RFC.7672"?>
<?rfc include="reference.RFC.7817"?>
<?rfc include="reference.RFC.8174"?>
</references>

<references title="Informative References">

<reference anchor="CERT-555316" target="https://www.kb.cert.org/vuls/id/555316">
 <front>
  <title>Vulnerability Note VU#555316: STARTTLS plaintext command injection vulnerability</title>
  <author fullname="CERT">
   <organization>CERT</organization>
  </author>
  <date month="September" year="2011"/>
 </front>
 <seriesInfo name="Carnegie Mellon University" value="Software Engineering Institute"/>
</reference>

<?rfc include="reference.RFC.2595"?>
<?rfc include="reference.RFC.2979"?>
<?rfc include="reference.RFC.3848"?>
<?rfc include="reference.RFC.4346"?>
<?rfc include="reference.RFC.4422"?>
<?rfc include="reference.RFC.4954"?>
<?rfc include="reference.RFC.5068"?>
<?rfc include="reference.RFC.5321"?> 
<?rfc include="reference.RFC.6066"?>
<?rfc include="reference.RFC.6125"?>
<?rfc include="reference.RFC.6335"?>
<?rfc include="reference.RFC.7469"?>

<!-- draft-moore-email-tls (Expired) -->
<reference anchor='Email-TLS'>
<front>
<title>Recommendations for use of TLS by Electronic Mail Access Protocols</title>
<author initials='K' surname='Moore' fullname='Keith Moore'>
    <organization />
</author>
<date month='October' year='2013' />
</front>
<seriesInfo name='Work in Progress,' value='draft-moore-email-tls-00' />
</reference>

<!-- draft-ietf-uta-mta-sts (I-D Exists) -->
<reference anchor='MTA-STS'>
<front>
<title>SMTP MTA Strict Transport Security (MTA-STS)</title>
<author initials='D' surname='Margolis' fullname='Daniel Margolis'>
    <organization />
</author>
<author initials='M' surname='Risher' fullname='Mark Risher'>
    <organization />
</author>
<author initials='B' surname='Ramakrishnan' fullname='Binu Ramakrishnan'>
    <organization />
</author>
<author initials='A' surname='Brotman' fullname='Alexander Brotman'>
    <organization />
</author>
<author initials='J' surname='Jones' fullname='Janet Jones'>
    <organization />
</author>
<date month='January' year='2018' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-uta-mta-sts-14' />
</reference>

<!-- draft-melnikov-pop3-over-tls (Expired) -->
<reference anchor='POP3-over-TLS'>
<front>
<title>POP3 over TLS</title>
<author initials='A' surname='Melnikov' fullname='Alexey Melnikov'>
    <organization />
</author>
<author initials='C' surname='Newman' fullname='Chris Newman'>
    <organization />
</author>
<author initials='M' surname='Yevstifeyev' fullname='Mykyta Yevstifeyev' role="editor">
    <organization />
</author>
<date month='August' year='2011' />
</front>
<seriesInfo name='Work in Progress,' value='draft-melnikov-pop3-over-tls-02' />
</reference>

<!-- draft-ietf-tls-tls13 (AD is watching) -->
<reference anchor='TLS-1.3'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author initials='E' surname='Rescorla' fullname='Eric Rescorla'>
    <organization />
</author>
<date month='January' year='2018' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-tls-tls13-23' />
</reference>

</references>

<section anchor="design" title="Design Considerations">
<t>
This section is not normative.
</t>
<t>
The first version of this document was written independently from
the October&nbsp;2013 version of <xref target="Email-TLS"/>
("Recommendations for use of TLS by Electronic Mail Access Protocols").
Subsequent versions merge ideas from both documents.
</t>
<t>
One author of this document was also the author of RFC 2595, which
became the standard for TLS usage with POP and IMAP, and the other
author was perhaps the first to propose that idea. In hindsight, both
authors now believe that that approach was a mistake. At this point,
the authors believe that while anything that makes it easier to deploy
TLS is good, the desirable end state is that these protocols always
use TLS, leaving no need for a separate port for cleartext operation
except to support legacy clients while they continue to be used. The
separate&nbhy;port model for TLS is inherently simpler to implement, debug,
and deploy. It also enables a "generic TLS load-balancer" that accepts
secure client connections for arbitrary foo-over-TLS protocols and
forwards them to a server that may or may not support TLS. Such
load-balancers cause many problems because they violate the end-to-end
principle and the server loses the ability to log security-relevant
information about the client unless the protocol is designed to
forward that information (as this specification does for the ciphersuite).
However, they can result in TLS deployment where it would not otherwise
happen, which is a sufficiently important goal that it overrides any
problems.
</t>
<t>
Although STARTTLS appears only slightly more complex than separate&nbhy;port
TLS, we again learned the lesson that complexity is the enemy of
security in the form of the STARTTLS command injection vulnerability
(Computer Emergency Readiness Team (CERT) vulnerability
ID&nbsp;#555316 <xref target="CERT-555316"/>). Although there's nothing
inherently wrong with STARTTLS, the fact that it resulted in a common
implementation error (made independently by multiple implementers) suggests
that it is a less secure architecture than Implicit TLS.
</t>
<t>
Section 7 of RFC 2595 critiques the separate-port approach to TLS. The
first bullet was a correct critique. There are proposals in the HTTP
community to address that, and the use of SRV records as described in
RFC&nbsp;6186 resolves that critique for email. The second bullet is correct
as well but is not very important because useful deployment of security
layers other than TLS in email is small enough to be effectively
irrelevant.  (Also, it's less correct than it used to be because "export"
ciphersuites are no longer supported in modern versions of TLS.)  The
third bullet is incorrect because it misses the desirable option of
"use TLS for all subsequent connections to this server once TLS is
successfully negotiated". The fourth bullet may be correct, but it
is not a problem yet with current port consumption rates. The fundamental
error was prioritizing a perceived better design based on a mostly valid
critique over real-world deployability. But getting security and
confidentiality facilities actually deployed is so important that it should
trump design purity considerations.
</t>
<t>
Port 465 is presently used for two purposes: for submissions by a large
number of clients and service providers and for the "urd" protocol by
one vendor. Actually documenting this current state is controversial, as
discussed in the IANA Considerations section. However, there
is no good alternative. Registering a new port for submissions when
port&nbsp;465 is already widely used for that purpose will just create
interoperability problems. Registering a port that's only used if advertised
by an SRV record (RFC&nbsp;6186) would not create interoperability problems
but would require all client deployments, server deployments, and software
to change significantly, which is contrary to the goal of promoting the
increased use of TLS. Encouraging the use of STARTTLS on port&nbsp;587 would
not create interoperability problems, but it is unlikely to have any impact on
the current undocumented use of port&nbsp;465 and makes the guidance in
this document less consistent. The remaining option is to document the current
state of the world and support future use of port&nbsp;465 for submission,
as this increases consistency and ease of deployment for TLS email
submission.
</t>
</section>

<section title="Acknowledgements" numbered="no">
<t>Thanks to Ned Freed for discussion of the initial concepts in this
document. Thanks to Alexey Melnikov for <xref target="POP3-over-TLS"/>,
which was the basis of the POP3 Implicit TLS text. Thanks to Russ Housley,
Alexey Melnikov, and Dan Newman for review feedback. Thanks to Paul Hoffman
for interesting feedback in initial conversations about this idea.</t>
</section>
</back>

</rfc>
