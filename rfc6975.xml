<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<!--V1-->
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="6"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc ipr="trust200902" category="std" number="6975" consensus="yes" submissionType="IETF">
<front>
<title abbrev="Algorithm-Signal">Signaling Cryptographic Algorithm
Understanding in DNS Security Extensions (DNSSEC) </title>
	<author fullname="Steve Crocker" initials="S." surname="Crocker">
			<organization>Shinkuro Inc.</organization>
			<address>
				<postal>
					<street>5110 Edgemoor Lane</street>
					<city>Bethesda</city>
					<code>20814</code>
					<region>MD</region>
					<country>USA</country>
				</postal>
				<email>steve@shinkuro.com</email>
			</address>
	</author>
	<author fullname="Scott Rose" initials="S." surname="Rose">
			<organization> NIST </organization>
			<address>
				<postal>
					<street>100 Bureau Dr.</street>
					<city>Gaithersburg</city>
					<code>20899</code>
					<region>MD</region>
					<country>USA</country>
				</postal>
				<phone>+1-301-975-8439</phone>
				<email> scottr.nist@gmail.com </email>
			</address>
		</author>
	
<date month="June" year="2013"/>
<area> Internet Area </area>
<workgroup> DNS Extensions Working Group </workgroup>
<keyword>DNS</keyword>
<keyword>DNSSEC</keyword>
<keyword>EDNS</keyword>
<abstract>
	<t>
	The DNS Security Extensions (DNSSEC) were developed to provide origin 
	authentication and integrity protection for DNS data by using digital 
	signatures.  These digital signatures can be generated 
	using different algorithms.  This document specifies a way for
	validating end-system resolvers to signal to a server which digital
	signature and hash algorithms they support. The extensions
allow the signaling of new algorithm uptake in client code to allow zone
administrators to know when it is possible to complete an algorithm rollover in
a DNSSEC-signed zone. 
	</t>
</abstract>

</front>
<middle>
<section title="Introduction">
	<t>
	The DNS Security Extensions (DNSSEC), <xref target="RFC4033" />,
	<xref target="RFC4034" />, and <xref target="RFC4035" />, were developed 
	to provide origin authentication and integrity protection for DNS data
by using digital  
	signatures. Each digital signature (RRSIG) Resource Record (RR)
contains an algorithm code number that corresponds to a DNSSEC public key
(DNSKEY) RR.  These algorithm codes tell validators which cryptographic
algorithm was used to generate the digital signature. 
	</t>
	<t>
        Likewise, the Delegation Signer (DS) RRs and Hashed Authenticated Denial of
        Existence (NSEC3) RRs use a hashed value as part of their 
        resource record data (RDATA) and, like digital signature algorithms, these hash algorithms 
	have code numbers. All three algorithm codes (RRSIG/DNSKEY, DS, and NSEC3)
	are maintained in unique IANA registries.
	</t>

	<t>
	This document sets specifies a way for validating end-system
        resolvers to tell a server in a DNS query which digital signature
        and/&wj;or hash algorithms they support.  This is done using the new
        Extension Mechanisms for DNS (EDNS0) options specified below in Section
2 for use in the OPT meta-RR <xref target="RFC6891" />.  
        These three new EDNS0 option codes are all OPTIONAL to implement and use.
	</t>
	<t>
        These proposed EDNS0 options serve to measure the acceptance and use of new
        digital signing algorithms.  These signaling options can be used by zone administrators as a gauge
	to measure the successful deployment of code that implements the newly
deployed digital signature algorithm, DS hash, and the NSEC3 hash algorithm
used with DNSSEC.   
	A zone administrator is able to determine when to stop signing with a superseded algorithm when
	the server sees that a significant number of its clients signal that they 
	are able to accept the new algorithm.  Note that this survey 
	may be conducted over a period of years before a tipping point is seen.
	</t>
	<t>
	This document does not seek to introduce another process for including new algorithms for
	use with DNSSEC.  It also does not address the question of which algorithms are to
	be included in any official list of mandatory or recommended cryptographic algorithms
	for use with DNSSEC.  Rather, this document specifies a means by which a client 
	query can signal the set of algorithms and hashes that it implements.
	</t>

</section>

<section title="Requirements Language">
	<t>The key words &quot;MUST&quot;, &quot;MUST NOT&quot;,
&quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;,
&quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,  &quot;NOT RECOMMENDED&quot;,
&quot;MAY&quot;, and &quot;OPTIONAL&quot; in this document are to be
interpreted as described in <xref target="RFC2119">RFC 2119</xref>.
	</t>
	</section>

<section title="Signaling DNSSEC Algorithm Understood (DAU), DS Hash Understood (DHU), and NSEC3 Hash Understood (N3U) Using EDNS">
	<t>
	The EDNS0 specification outlined in <xref target="RFC6891" /> defines a 
        way to include new options using a standardized mechanism. These options
        are contained in the RDATA of the OPT meta-RR.  This
        document defines three new EDNS0 options for a client to signal which digital
        signature and/or hash algorithms the client supports.  These options can be used independently of each other 
	and MAY appear in any order in the OPT RR. Each option code can appear only once in 
	an OPT RR.
	</t>
	<figure><preamble>The figure below shows how each option is 
	defined in the RDATA of the OPT RR specified in <xref target="RFC6891" />:
	</preamble>
<artwork>
    0                       8                      16
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    |                 OPTION-CODE (TBD)             |
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    |                  LIST-LENGTH                  |
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    |       ALG-CODE        |        ...            /
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    
</artwork><postamble></postamble>
	</figure>

<!-- [rfced] Please let us know if "(TBD)" should be deleted from the table now that 
the values have been assigned and TBD no longer appears elsewhere in the 
document. 

       0                       8                      16
       +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
       |                 OPTION-CODE (TBD)             |
       +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
       |                  LIST-LENGTH                  |
       +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
       |       ALG-CODE        |        ...            \
       +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
-->

	<t>
	OPTION-CODE is the code for the given signaling option.  The options are:
	<list style="symbols"><t>DNSSEC Algorithm Understood (DAU) option for
DNSSEC digital signing algorithms. Its value is fixed at 5.</t>
	<t>DS Hash Understood (DHU) option for DS RR hash algorithms.  Its
value is fixed at 6. 
	</t>
	<t>NSEC3 Hash Understood (N3U) option for NSEC3 hash algorithms.  Its
value is fixed at 7. 
	</t>
	</list></t>
	<t>
	LIST-LENGTH is the length of the list of digital signatures or hash algorithm codes in octets.
        Each algorithm code occupies a single octet.
	</t>
	<t>
	ALG-CODE is the list of assigned values of DNSSEC zone signing algorithms, DS hash algorithms, or
	NSEC3 hash algorithms (depending on the OPTION-CODE in use) that 
	the client declares to be supported.  The order of the code values can be arbitrary and 
	MUST NOT be used to infer preference.
	</t>
	<t>
	If all three options are included in the OPT RR, there is a potential for the OPT RR to take up 
	considerable size in the DNS message.  However, in practical terms, including all three options
	is likely to take up 22-32 octets (average of 6-10 digital signature algorithms, 3-5 DS hash algorithms,
	and 1-5 NSEC3 hash algorithms) including the EDNS0 option codes and option lengths in 
	potential future examples.
	</t>
</section>

<section title="Client Considerations">
	<t>
	A validating end-system resolver sets the DAU, DHU, and/or N3U option, or combination thereof, in the OPT meta-RR when sending a 
	query. The validating end-system resolver
	MUST also set the DNSSEC OK bit <xref target="RFC4035" /> to 
        indicate that it wishes to receive DNSSEC RRs in the response.
	</t>
	<t>
	Note that the PRIVATEDNS (253) and/or the PRIVATEOID (254) digital signature codes both cover a potentially wide range
	of algorithms and are likely not useful to a server.  There is no compelling reason for a client
	to include these codes in its list of the DAU. Likewise, clients MUST NOT include RESERVED codes
	in any of the options. Additionally, a client is under no obligation to list every algorithm it implements and MAY choose to only
	list algorithms the client wishes to signal as understood.
	</t>
	<t>
	Since the DAU, DHU, and/or N3U options are only set in the query, if a client sees these options in the response, no action 
	needs to be taken and the client MUST ignore the option values.
	</t>
  <section title="Stub Resolvers">
	<t>
	Typically, stub resolvers rely on an upstream recursive server (or cache) to provide
	a response.  So optimal setting of the DAU, DSU, and N3U options depends on whether the stub resolver elects to perform its own validation.
	</t>
   <section title="Validating Stub Resolvers">
	<t>
A validating stub resolver sets the DNSSEC OK (DO) bit
<xref target="RFC4035" /> to indicate that it wishes to receive additional DNSSEC RRs
 (i.e., RRSIG RRs) in the response.  Such validating resolvers SHOULD
 include the DAU, DHU, and/or the N3U option(s) in the OPT RR when
sending a query.
	</t>
   </section>
   <section title="Non-validating Stub Resolvers">
   <t>
	The DAU, DHU, and N3U EDNS0 options MUST NOT 
	be included by non&nbhy;validating stub resolvers.  
	</t>
  </section>
  </section>	  
<section title="Recursive Resolvers">

  <section title="Validating Recursive Resolvers">
	<t>
	A validating recursive resolver sets the DAU, DHU, and/or N3U option(s) when performing recursion based on its list of algorithms and
	any DAU, DHU, and/or N3U option lists in the stub client query. When the recursive server receives a query with one or more of the
	options set, the recursive server MUST set the algorithm list for any outgoing iterative queries for that resolution chain to a union of the stub client's list 
	and the validating recursive resolver's list.
	For example, if the recursive resolver's algorithm list for the DAU option is (3, 5, 7) and the stub's algorithm list is (7, 8), the 
	final DAU algorithm list would be (3, 5, 7, 8). 
	</t>
	<t>
        If the client included the DO and Checking  Disabled (CD) bits, but did not include the DAU, DHU, and/or N3U option(s) in the query, 
	the validating recursive resolver MAY include the option(s) with its own list in full.  If one or more of the options are
	missing, the validating recursive resolver MAY include the missing options with its own list in full.
	</t>
	<t>
	Validating recursive resolvers MUST NOT set the DAU, DHU, and/or N3U option(s) in the final response to the stub client.
	</t>
  </section>
  <section title="Non-validating Recursive Resolvers">
	<t>
	Recursive resolvers that do not do validation MUST copy the DAU, DHU, and/or N3U option(s) 
	seen in received queries as they represent the wishes of the validating downstream resolver that issued the original query.
	</t>
  </section>
</section>

</section>

<section title="Intermediate System Considerations">
	<t>
	Intermediate proxies (see Section 4.4.2 of <xref target="RFC5625" />) that understand DNS are RECOMMENDED to behave like a comparable recursive resolver when 
	dealing with the DAU, DHU, and N3U options.   
	</t>
</section>

<section title="Server Considerations">
	<t>
	When an authoritative server sees the DAU, DHU, and/or N3U option(s) in the OPT meta-RR in a
	request, the normal algorithm for servicing requests is followed. The options
	MUST NOT trigger any special processing (e.g., RRSIG filtering in responses) on the server side.  </t>
	<t>
	If the options are present but the DO bit is not set, the
	server does not do any DNSSEC processing, which includes any recording of the option(s).
	</t>
	<t>
	If the server sees one (or more) of the options set with RESERVED values, the server MAY ignore recoding of those values.
	</t>
	<t>
	Authoritative servers MUST NOT set the DAU, DHU, and/or N3U option(s) on any responses.  These values
	are only set in queries.
	</t>
</section>

<section title="Traffic Analysis Considerations">
	<t>
	Zone administrators that are planning or are in the process of a 
	cryptographic algorithm rollover operation should monitor DNS query traffic
	and record the number of queries, the presence of the OPT RR in queries, and the values of the DAU/DHU/N3U option(s) (if present).  
	This monitoring can be used to measure the deployment of client code that implements (and signals) specific
	algorithms. A description of the techniques used to capture DNS traffic and measure new 
	algorithm adoption is beyond the scope of this document.
	</t>
	<t>
	Zone administrators that need to comply with changes to their organization's
	security policy (with regards to cryptographic algorithm use) can use this data to set 
	milestone dates for performing an algorithm 
	rollover. For example, zone administrators can use the data to determine when older algorithms can be phased out without disrupting a
	significant number of clients.   In order to keep this disruption to a minimum, zone
	administrators should wait to complete an algorithm rollover until a large 
	majority of clients signal that they recognize the new algorithm.  This may be
	in the order of years rather than months.
	</t>
	<t>
	Note that clients that do not implement these options are likely to be older 
	implementations that would also not implement any newly deployed algorithm.
	</t>
</section>

<section anchor="IANA" title="IANA Considerations">
	<t> 
	The algorithm codes used to identify DNSSEC algorithms, DS RR hash
algorithms, and NSEC3 hash algorithms have already been established by IANA.
This document does not seek to alter that registry in any way.
	</t>
	<t>
IANA has allocated option codes 5, 6, and 7 for the DAU, DHU, and N3U
options, respectively, in the "DNS EDNS0 Option Codes (OPT)" registry. The
three options have a status of "standard".
	</t>
</section>

<section anchor="Security" title="Security Considerations">
	<t>
	This document specifies a way for a client to signal its digital signature and hash 
	algorithm knowledge to a cache or server.  It is not meant to be a 
discussion
	on algorithm superiority.  The signals are optional codes contained in
	the OPT meta-RR used with EDNS.  The goal of these options is to signal new
	algorithm uptake in client code to allow zone administrators to know when
	it is possible to complete an algorithm rollover in a DNSSEC-signed zone.
	</t>
	<t>
	There is a possibility that an eavesdropper or server could infer the validator
	in use by a client by the presence of the AU options and/or algorithm code list.  
	This information leakage in itself is not very useful to a potential attacker, but
	it could be used to identify the validator or narrow down the possible validator 
	implementations in use by a client, which could have a known vulnerability that could
	be exploited by the attacker.
	</t>
</section>

</middle>

<back>
	<references title="Normative References">
		<?rfc include="reference.RFC.2119" ?>
		<?rfc include="reference.RFC.4033" ?>
		<?rfc include="reference.RFC.4034" ?>
		<?rfc include="reference.RFC.4035" ?>
		<?rfc include="reference.RFC.5625" ?>
		<?rfc include="reference.RFC.6891" ?>
	</references>
</back>
</rfc>

