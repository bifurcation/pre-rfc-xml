<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xlst' ?>
<?rfc toc="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc number="6268" category="info" ipr="pre5378Trust200902"
     updates="5911" consensus="yes" submissionType="IETF">

<!-- [rfced] The document action approved this document as a Proposed Standard; 
however, the category indicated in the I-D was "Informational".  We have marked 
this document as PS, but it reads a bit like an Informational document.  Please
let us know which is correct. -->

  <front>
    <title abbrev="Additional New ASN.1 Modules">Additional New ASN.1 Modules for the Cryptographic Message Syntax (CMS) and the Public Key Infrastructure Using X.509 (PKIX)</title>
    <author fullname="Jim Schaad" initials="J." surname="Schaad">
      <organization>Soaring Hawk Consulting</organization>
      <address>
        <email>ietf@augustcellars.com</email>
      </address>
    </author>
    <author fullname="Sean Turner" initials="S." surname="Turner">
      <organization>IECA, Inc.</organization>
      <address>
	<postal>
	  <street>3057 Nutley Street, Suite 106</street>
	  <city>Fairfax, VA  22031</city>
	</postal>
        <email>turners@ieca.com</email>
      </address>
    </author>

<!-- [rfced] Please insert any keywords (beyond those that appear in
the title) for use on http://www.rfc-editor.org/rfcsearch.html. -->

    <date month="July" year="2011"/>

<keyword>ASN.1, Certficate Extensions, HMAC  </keyword>

    <abstract>
      <t>The Cryptographic Message Syntax (CMS) format, and many associated
formats, are expressed using ASN.1.  The current ASN.1 modules conform to the
1988 version of ASN.1.  This document updates some auxiliary ASN.1 modules to
conform to the 2008 version of ASN.1; the 1988 ASN.1 modules remain the
normative version.  There are no bits-on-the-wire changes to any of the
formats; this is simply a change to the syntax. 
</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">

      <t>Some developers would like the IETF to use the latest version of ASN.1 in its standards.  Most of the RFCs that relate to security protocols still use ASN.1 from the 1988 standard, which has been deprecated.  This is particularly true for the standards that relate to PKIX, CMS, and Secure/Multipurpose Internet Mail Extensions (S/MIME).</t>

      <t>
	In this document we have either changed the syntax to use the 2008 ASN.1 standard, or done some updates from previous conversions.  The ASN.1 modules updated came from the following RFCs:

	<list style="symbols">
	  <t>RFC 3274, Compressed Data Content Type for Cryptographic Message Syntax (CMS) <xref target="RFC3274"/>.</t>
	  <t>RFC 3779, X.509 Extensions for IP Addresses and AS Identifiers
 <xref target="RFC3779"/>.</t>
	  <t>RFC 6019, BinaryTime: An Alternate Format for Representing Date and Time in ASN.1 <xref target="RFC6019"/>.</t>
	  <t>RFC 4073, Protecting Multiple Contents with the Cryptographic Message Syntax (CMS) <xref target="RFC4073"/>.</t>
	  <t>RFC 4231, Identifiers and Test Vectors for HMAC-SHA-224, HMAC&nbhy;SHA&nbhy;256, HMAC-SHA-384, and HMAC-SHA-512 <xref target="RFC4231"/>.</t>
	  <t>RFC 4334,  Certificate Extensions and Attributes Supporting
            Authentication in Point-to-Point Protocol (PPP)
            and Wireless Local Area Networks (WLAN) <xref target="RFC4334"/>.</t>
	  <t>RFC 5083, Cryptographic Message Syntax (CMS) Authenticated-Enveloped-Data Content Type <xref target="RFC5083"/>.</t>
	  <t>RFC 5652, Cryptographic Message Syntax (CMS) <xref target="RFC5652"/>.</t>
	  <t>RFC 5752, Multiple Signatures in Cryptographic Message Syntax (CMS) <xref target="RFC5752"/>.</t>
	</list>
      </t>

      <t>Note that some of the modules in this document get some of their definitions from places different than the modules in the original RFCs.  The idea is that these modules, when combined with the modules in <xref target="RFC5911"/> and <xref target="RFC5912"/>, can stand on their own and do not need to import definitions from anywhere else.
</t>

      <t>This document does not explicitly update the RFCs from which the ASN.1 modules have been extracted.  This is because the original 1988 ASN.1 syntax remains the normative version and the modules in this document as well as in <xref target="RFC5911"/> and <xref target="RFC5912"/> are informative (but hopefully useful) annexes.</t>
      <section title="ASN.1 Updates (2002 to 2008)">
        <t>
          The modules defined in this document  are compatible with
          the most current ASN.1 specification published in 2008 (see
          <xref target="ASN1-2008"/>).  The changes between the 2002
          specification and the 2008 specification include the
          creation of additional pre-defined types (DATE,
          DATE-TIME, DURATION, NOT-A-NUMBER, OID-IRI,
          RELATIVE-OID-IRI, TIME, TIME-OF-DAY) and the ability to define different encoding rules (ENCODING-CONTROL, INSTRUCTIONS).  None of the newly defined tokens are currently used in any of the ASN.1 specifications published here.</t>

        <t>Information on the changes to ASN.1 between the 1988 and 2002 versions can be found in <xref target="RFC6025"/>.</t>
      </section>

      <section title="Requirements Terminology">

	<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"/>.
	</t>

      </section>
    </section>

    <section title="ASN.1 Module RFC 3274">
      <t>We have updated the ASN.1 module associated with this document to be 2008 compliant and to use the set of classes previously defined in <xref target="RFC5911"/>.</t>

      <?rfc linefile="1:ForDraft/rfc3274.incl"?><figure><artwork>
CompressedDataContent-2010
   { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)
     smime(16) modules(0) id-mod-compressedDataContent(54) }

DEFINITIONS IMPLICIT TAGS ::=
BEGIN

IMPORTS
  CMSVersion, ContentSet,
  CONTENT-TYPE
  FROM CryptographicMessageSyntax-2010
    { iso(1) member-body(2) us(840) rsadsi(113549)
       pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-2009(58) }

  AlgorithmIdentifier{}, SMIME-CAPS, ParamOptions
  FROM AlgorithmInformation-2009
    {iso(1) identified-organization(3) dod(6) internet(1) security(5)
    mechanisms(5) pkix(7) id-mod(0)
    id-mod-algorithmInformation-02(58)}
  ;

  --
  --  ContentTypes contains the set of content types that are
  --    defined in this module.
  --
  --  The contents of ContentTypes should be added to 
  --    ContentSet defined in [RFC5652]
  --

  ContentTypes CONTENT-TYPE ::= {ct-compressedData}

  --
  --  SMimeCaps contains the set of S/MIME capabilities that
  --    are associated with the algorithms defined in this
  --    document.
  --
  --  SMimeCaps are added to the SMimeCapsSet defined in 
  --  [RFC5751] as updated [RFC5911].

  SMimeCaps SMIME-CAPS ::= {cpa-zlibCompress.&amp;smimeCaps, ...}

  --
  --  Define the compressed data content type
  --

  ct-compressedData CONTENT-TYPE ::= {
    TYPE CompressedData IDENTIFIED BY id-ct-compressedData
  }

  CompressedData ::= SEQUENCE {
     version CMSVersion (v0),  -- Always set to 0
     compressionAlgorithm CompressionAlgorithmIdentifier,
     encapContentInfo EncapsulatedContentInfo
  }

  EncapsulatedContentInfo ::= SEQUENCE {
     eContentType       CONTENT-TYPE.&id({ContentSet}),
     eContent           [0] EXPLICIT OCTET STRING OPTIONAL }

  CompressionAlgorithmIdentifier ::=
     AlgorithmIdentifier{COMPRESS-ALGORITHM, {CompressAlgorithmSet}}

  CompressAlgorithmSet COMPRESS-ALGORITHM ::= {
    cpa-zlibCompress, ...
  }

  -- Algorithm Identifiers

  id-alg-zlibCompress OBJECT IDENTIFIER ::= { iso(1) member-body(2)
       us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) alg(3) 8 }

  cpa-zlibCompress COMPRESS-ALGORITHM ::= {
    IDENTIFIER id-alg-zlibCompress
    PARAMS TYPE NULL ARE preferredAbsent
    SMIME-CAPS {IDENTIFIED BY id-alg-zlibCompress}
  }

  -- Content Type Object Identifiers

  id-ct-compressedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)
       us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) ct(1) 9 }

  --
  --  Class defined for compression algorithms
  --

  COMPRESS-ALGORITHM ::= CLASS {
    &amp;id                OBJECT IDENTIFIER UNIQUE,
    &amp;Params            OPTIONAL,
    &amp;paramPresence     ParamOptions DEFAULT absent,
    &amp;smimeCaps         SMIME-CAPS OPTIONAL
  }
  WITH SYNTAX {
    IDENTIFIER &amp;id
    [PARAMS [TYPE &amp;Params] ARE &amp;paramPresence]
    [SMIME-CAPS &amp;smimeCaps]
  }

 END
</artwork></figure>
<?rfc linefile="106:new-asn1.xml"?>

    </section>

    <section title="ASN.1 Module RFC 3779">
      <t>We have updated the ASN.1 module associated with RFC 3779 to be ASN.1 2008 compliant and to use the set of classes previously defined in <xref target="RFC5912"/>.</t>

       <?rfc linefile="1:ForDraft/rfc3379.incl"?><figure><artwork>
IPAddrAndASCertExtn-2010 { iso(1) identified-organization(3) dod(6)
         internet(1) security(5) mechanisms(5) pkix(7) mod(0)
         id-mod-ip-addr-and-as-ident-2(72) }
DEFINITIONS EXPLICIT TAGS ::=
BEGIN
   EXPORTS ALL;

   IMPORTS

   -- PKIX specific OIDs and arcs --
   id-pe
   FROM PKIX1Explicit-2009
     { iso(1) identified-organization(3) dod(6) internet(1)
       security(5) mechanisms(5) pkix(7) id-mod(0)
       id-mod-pkix1-explicit-02(51)}

   EXTENSION
   FROM PKIX-CommonTypes-2009
     { iso(1) identified-organization(3) dod(6) internet(1) 
       security(5) mechanisms(5) pkix(7) id-mod(0)
       id-mod-pkixCommon-02(57)}
   ;

   --
   --  Extensions contains the set of extensions defined in this 
   --      module
   --
   --  These are intended to be placed in public key certificates 
   --     and thus should be added to the CertExtensions extension
   --     set in PKIXImplicit-2009 defined for [RFC5280]
   --
 
   Extensions EXTENSION ::= {
      ext-pe-ipAddrBlocks | ext-pe-autonomousSysIds
   }

   -- IP Address Delegation Extension OID --

   ext-pe-ipAddrBlocks EXTENSION ::= {
     SYNTAX IPAddrBlocks
     IDENTIFIED BY id-pe-ipAddrBlocks
   }

   id-pe-ipAddrBlocks  OBJECT IDENTIFIER ::= { id-pe 7 }

   -- IP Address Delegation Extension Syntax --

   IPAddrBlocks        ::= SEQUENCE OF IPAddressFamily

   IPAddressFamily     ::= SEQUENCE { -- AFI &amp; opt SAFI --
      addressFamily        OCTET STRING (SIZE (2..3)),
      ipAddressChoice      IPAddressChoice }

   IPAddressChoice     ::= CHOICE {
      inherit              NULL, -- inherit from issuer --
      addressesOrRanges    SEQUENCE OF IPAddressOrRange }

   IPAddressOrRange    ::= CHOICE {
      addressPrefix        IPAddress,
      addressRange         IPAddressRange }

   IPAddressRange      ::= SEQUENCE {
      min                  IPAddress,
      max                  IPAddress }

   IPAddress           ::= BIT STRING

   -- Autonomous System Identifier Delegation Extension OID --

   ext-pe-autonomousSysIds EXTENSION ::= {
     SYNTAX ASIdentifiers
     IDENTIFIED BY id-pe-autonomousSysIds
   }

   id-pe-autonomousSysIds  OBJECT IDENTIFIER ::= { id-pe 8 }

   -- Autonomous System Identifier Delegation Extension Syntax --

   ASIdentifiers       ::= SEQUENCE {
       asnum               [0] ASIdentifierChoice OPTIONAL,
       rdi                 [1] ASIdentifierChoice OPTIONAL }
       (WITH COMPONENTS {..., asnum PRESENT} |
        WITH COMPONENTS {..., rdi PRESENT})

   ASIdentifierChoice  ::= CHOICE {
      inherit              NULL, -- inherit from issuer --
      asIdsOrRanges        SEQUENCE OF ASIdOrRange }

   ASIdOrRange         ::= CHOICE {
       id                  ASId,
       range               ASRange }

   ASRange             ::= SEQUENCE {
       min                 ASId,
       max                 ASId }

   ASId                ::= INTEGER

END
</artwork></figure>
<?rfc linefile="113:new-asn1.xml"?>

    </section>
    <section title="ASN.1 Module RFC 6019">
      <t>We have updated the ASN.1 module associated with this document to be 2008 compliant and to use the set of classes previously defined in <xref target="RFC5911"/>.</t>

      <?rfc linefile="1:ForDraft/rfc4049.incl"?><figure><artwork>
BinarySigningTimeModule-2010
      { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)
        pkcs-9(9) smime(16) modules(0) 
        id-mod-binSigningTime-2009(55) }
DEFINITIONS IMPLICIT TAGS ::=
BEGIN
  IMPORTS

  -- From PKIX-CommonTypes-2009 [RFC5912]

  ATTRIBUTE
    FROM PKIX-CommonTypes-2009
      { iso(1) identified-organization(3) dod(6) internet(1)
        security(5) mechanisms(5) pkix(7) id-mod(0)
        id-mod-pkixCommon-02(57) }
 ;

  --
  -- BinaryTime Definition
  --
  --  BinaryTime contains the number seconds since
  --  midnight Jan 1, 1970 UTC.
  --  Leap seconds are EXCLUDED from the computation.
  --

  BinaryTime ::= INTEGER (0..MAX)

  --
  -- Signing Binary Time Attribute
  --
  --   The binary signing time should be added to 
  --   SignedAttributeSet and AuthAttributeSet in CMS [RFC5652]
  --   and to AuthEnvDataAttributeSet in [RFC5083] with the
  --   new modules in this document, RFC 6268.
  --

  aa-binarySigningTime ATTRIBUTE ::= {
    TYPE BinarySigningTime
    IDENTIFIED BY id-aa-binarySigningTime }

  id-aa-binarySigningTime OBJECT IDENTIFIER ::= { iso(1)
    member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
    smime(16) aa(2) 46 }

  BinarySigningTime ::= BinaryTime

END
</artwork></figure>
<?rfc linefile="119:new-asn1.xml"?>

    </section>
    <section title="ASN.1 Module RFC 4073">
      <t>We have updated the ASN.1 module associated with this document to be 2008 compliant and to use the set of classes previously defined in <xref target="RFC5911"/>.</t>

      <?rfc linefile="1:ForDraft/rfc4073.incl"?><figure><artwork>
ContentCollectionModule-2010
    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)
      pkcs-9(9) smime(16) modules(0) id-mod-context-Collect-2009(56) }
DEFINITIONS IMPLICIT TAGS ::=
BEGIN
  IMPORTS

  -- From CryptographicMessageSyntax-2010 [RFC6268]

  CONTENT-TYPE, ContentInfo
    FROM CryptographicMessageSyntax-2010
    { iso(1) member-body(2) us(840) rsadsi(113549)
       pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-2009(58) }

  AttributeSet{}, ATTRIBUTE
    FROM PKIX-CommonTypes-2009
      { iso(1) identified-organization(3) dod(6) internet(1)
        security(5) mechanisms(5) pkix(7) id-mod(0)
        id-mod-pkixCommon-02(57) }
  ;

  --
  --  An object set of all content types defined by this module.
  --    This is to be added to ContentSet in the CMS module
  --

  ContentSet CONTENT-TYPE ::= {
      ct-ContentCollection | ct-ContentWithAttributes, ...
  }

  --
  -- Content Collection Content Type and Object Identifier
  --

  ct-ContentCollection CONTENT-TYPE ::= {
    TYPE ContentCollection IDENTIFIED BY id-ct-contentCollection }

  id-ct-contentCollection OBJECT IDENTIFIER ::= {
    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)
    smime(16) ct(1) 19 }

  ContentCollection ::= SEQUENCE SIZE (1..MAX) OF ContentInfo

  --
  -- Content With Attributes Content Type and Object Identifier
  --

  ct-ContentWithAttributes CONTENT-TYPE ::= {
    TYPE ContentWithAttributes IDENTIFIED BY id-ct-contentWithAttrs }

  id-ct-contentWithAttrs OBJECT IDENTIFIER ::= {
    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)
    smime(16) ct(1) 20 }

  ContentWithAttributes ::= SEQUENCE {
     content  ContentInfo,
     attrs    SEQUENCE SIZE (1..MAX) OF AttributeSet
                                             {{ ContentAttributeSet }}
  }

   ContentAttributeSet ATTRIBUTE ::= { ... }
END
</artwork></figure>
<?rfc linefile="125:new-asn1.xml"?>

    </section>
    <section title="ASN.1 Module RFC 4231">
      <t>RFC 4231 does not contain an ASN.1 module to be updated.  We have therefore created an ASN.1 module to represent the ASN.1 that is present in the document.  Note that the parameters are defined as expecting a parameter for the algorithm identifiers in this module; this is different from most of the algorithms used in PKIX and S/MIME.  There is no concept of being able to truncate the MAC (Message Authentication Code) value in the ASN.1 unlike the XML definitions.  This is reflected by not having a minimum MAC length defined in the ASN.1.</t>

      <?rfc linefile="1:ForDraft/rfc4231.incl"?><figure><artwork>
HMAC-2010  { iso(1) identified-organization(3) dod(6) internet(1)
   security(5) mechanisms(5) pkix(7) mod(0) id-mod-hmac(74) }
DEFINITIONS EXPLICIT TAGS ::=
BEGIN
  EXPORTS ALL;

  IMPORTS

  MAC-ALGORITHM, SMIME-CAPS
  FROM AlgorithmInformation-2009
    { iso(1) identified-organization(3) dod(6) internet(1) security(5)
      mechanisms(5) pkix(7) id-mod(0)
      id-mod-algorithmInformation-02(58)};

  --
  --  This object set contains all of the MAC algorithms that are
  --    defined in this module.
  --  One would add it to a constraining set of objects such as the
  --    MessageAuthenticationCodeAlgorithmSet in [RFC5652]
  --

  MessageAuthAlgs MAC-ALGORITHM ::= {
    maca-hMAC-SHA224 |
    maca-hMAC-SHA256 |
    maca-hMAC-SHA384 |
    maca-hMAC-SHA512
  }

  --
  --  This object set contains all of the S/MIME capabilities that
  --     have been defined for all the MAC algorithms in this module.
  --  One would add this to an object set that is used to restrict
  --    S/MIME capabilities such as the SMimeCapsSet variable in
  --    RFC 3851 (obsoleted by RFC 5751) as modified in RFC 5911.
  --

  SMimeCaps SMIME-CAPS ::= {
    maca-hMAC-SHA224.&amp;smimeCaps     |
    maca-hMAC-SHA256.&amp;smimeCaps     |
    maca-hMAC-SHA384.&amp;smimeCaps     |
    maca-hMAC-SHA512.&amp;smimeCaps
  }

  --
  --  Define the base OID for the algorithm identifiers
  --

  rsadsi OBJECT IDENTIFIER ::=
       {iso(1) member-body(2) us(840) rsadsi(113549)}

  digestAlgorithm   OBJECT IDENTIFIER ::= {rsadsi 2}

  --
  --  Define the necessary algorithm identifiers
  --

  id-hmacWithSHA224 OBJECT IDENTIFIER ::= {digestAlgorithm 8}
  id-hmacWithSHA256 OBJECT IDENTIFIER ::= {digestAlgorithm 9}
  id-hmacWithSHA384 OBJECT IDENTIFIER ::= {digestAlgorithm 10}
  id-hmacWithSHA512 OBJECT IDENTIFIER ::= {digestAlgorithm 11}

  --
  --  Define each of the MAC-ALGORITHM objects to describe the
  --    algorithms defined
  --

  maca-hMAC-SHA224 MAC-ALGORITHM ::= {
    IDENTIFIER id-hmacWithSHA224
    PARAMS TYPE NULL ARE preferredPresent
    IS-KEYED-MAC TRUE
    SMIME-CAPS {IDENTIFIED BY id-hmacWithSHA224}
  }


  maca-hMAC-SHA256 MAC-ALGORITHM ::= {
    IDENTIFIER id-hmacWithSHA256
    PARAMS TYPE NULL ARE preferredPresent
    IS-KEYED-MAC TRUE
    SMIME-CAPS {IDENTIFIED BY id-hmacWithSHA256}
  }


  maca-hMAC-SHA384 MAC-ALGORITHM ::= {
    IDENTIFIER id-hmacWithSHA384
    PARAMS TYPE NULL ARE preferredPresent
    IS-KEYED-MAC TRUE
    SMIME-CAPS {IDENTIFIED BY id-hmacWithSHA384}
  }


  maca-hMAC-SHA512 MAC-ALGORITHM ::= {
    IDENTIFIER id-hmacWithSHA512
    PARAMS TYPE NULL ARE preferredPresent
    IS-KEYED-MAC TRUE
    SMIME-CAPS {IDENTIFIED BY id-hmacWithSHA512}
  }

END
</artwork></figure>
<?rfc linefile="131:new-asn1.xml"?>

    </section>
    <section title="ASN.1 Module RFC 4334">
      <t>We have updated the ASN.1 module associated with RFC 4334 to be ASN.1 2008 compliant and to use the set of classes previously defined in <xref target="RFC5912"/>.</t>

      <?rfc linefile="1:ForDraft/rfc4334.incl"?><figure><artwork>
WLANCertExtn-2010
   { iso(1) identified-organization(3) dod(6) internet(1)
     security(5) mechanisms(5) pkix(7) id-mod(0)
     id-mod-wlan-extns-2(73) }

DEFINITIONS IMPLICIT TAGS ::=
BEGIN
  EXPORTS ALL;

  IMPORTS

  EXTENSION, ATTRIBUTE
  FROM PKIX-CommonTypes-2009
    {iso(1) identified-organization(3) dod(6) internet(1) security(5)
    mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)}

  id-pe, id-kp
  FROM PKIX1Explicit-2009
    { iso(1) identified-organization(3) dod(6) internet(1) security(5)
      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)}

  id-aca
  FROM PKIXAttributeCertificate-2009
    { iso(1) identified-organization(3) dod(6) internet(1) security(5)
      mechanisms(5) pkix(7) id-mod(0) id-mod-attribute-cert-02(47)}

  ;

  -- Extended Key Usage Values


  KeyUsageValues OBJECT IDENTIFIER ::= {
      id-kp-eapOverPPP | id-kp-eapOverLAN
  }

  id-kp-eapOverPPP  OBJECT IDENTIFIER  ::=  { id-kp 13 }

  id-kp-eapOverLAN  OBJECT IDENTIFIER  ::=  { id-kp 14 }


  -- Wireless LAN SSID Extension


  ext-pe-wlanSSID EXTENSION ::= {
    SYNTAX SSIDList
    IDENTIFIED BY id-pe-wlanSSID
    CRITICALITY {FALSE}
  }

  id-pe-wlanSSID  OBJECT IDENTIFIER  ::=  { id-pe 13 }

  SSIDList  ::=  SEQUENCE SIZE (1..MAX) OF SSID

  SSID  ::=  OCTET STRING (SIZE (1..32))


  -- Wireless LAN SSID Attribute Certificate Attribute
  -- Uses same syntax as the certificate extension: SSIDList


   at-aca-wlanSSID ATTRIBUTE ::= {
     TYPE SSIDList
     IDENTIFIED BY id-aca-wlanSSID
   }


   id-aca-wlanSSID  OBJECT IDENTIFIER ::= { id-aca 7 }

  END
</artwork></figure>
<?rfc linefile="137:new-asn1.xml"?>

    </section>
      <section title="ASN.1 Module RFC 5083">

      <t>This module is updated from RFC 5911 <xref target="RFC5911"/> by the following changes:
        <list style="numbers">
          <t>Define separate attribute sets for the unprotected attributes used in EnvelopedData, EncryptedData, and AuthenticatedEnvelopedData (RFC 5083).</t>
          <t>Define a parameterized type EncryptedContentInfoType so that the basic type can be used with different algorithm sets (used for EnvelopedData, EncryptedData, and AuthenticatedEnvelopedData (RFC 5083)).  The parameterized type is assigned to an unparameterized type of EncryptedContentInfo to minimize the output changes from previous versions.</t>
        </list>
      </t>
      <t>Protocol designers can make use of the '08 ASN.1 constraints to define different sets of attributes for EncryptedData and EnvelopedData and for AuthenticatedData and AuthEnvelopedData.
Previously, attributes could only be constrained based on whether they were in the clear or unauthenticated not on the encapsulating content type.
      </t>

     <?rfc linefile="1:ForDraft/rfc5083.incl"?><figure><artwork>
CMS-AuthEnvelopedData-2010
    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)
    smime(16) modules(0) id-mod-cmsAuthEnvData-2009(57) }
DEFINITIONS IMPLICIT TAGS ::=
BEGIN
IMPORTS

CMSVersion, EncryptedContentInfoType{},
  MessageAuthenticationCode, OriginatorInfo, RecipientInfos,
  CONTENT-TYPE, Attributes{}, ATTRIBUTE, CONTENT-ENCRYPTION,
  AlgorithmIdentifier{},
  aa-signingTime, aa-messageDigest, aa-contentType
FROM CryptographicMessageSyntax-2010
  { iso(1) member-body(2) us(840) rsadsi(113549)
     pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-2009(58) }

ContentEncryptionAlgs
FROM CMS-AES-CCM-and-AES-GCM-2009
  { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)
    pkcs-9(9) smime(16) modules(0) id-mod-cms-aes-ccm-gcm-02(44) }
;

ContentTypes CONTENT-TYPE ::= {ct-authEnvelopedData, ... }

ct-authEnvelopedData CONTENT-TYPE ::= {
  TYPE AuthEnvelopedData IDENTIFIED BY id-ct-authEnvelopedData
}

id-ct-authEnvelopedData OBJECT IDENTIFIER ::=
  {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)
  smime(16) ct(1) 23}

AuthEnvelopedData ::= SEQUENCE {
  version CMSVersion,
  originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,
  recipientInfos RecipientInfos,
  authEncryptedContentInfo EncryptedContentInfo,
  authAttrs [1] IMPLICIT AuthAttributes OPTIONAL,
  mac MessageAuthenticationCode,
  unauthAttrs [2] IMPLICIT UnauthAttributes OPTIONAL
}

EncryptedContentInfo ::=
  EncryptedContentInfoType { AuthContentEncryptionAlgorithmIdentifier }

AuthContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier
  {CONTENT-ENCRYPTION, {AuthContentEncryptionAlgorithmSet}}

AuthContentEncryptionAlgorithmSet CONTENT-ENCRYPTION ::= {
  ContentEncryptionAlgs, ...}

AuthAttributes ::= Attributes{{AuthEnvDataAttributeSet}}

UnauthAttributes ::= Attributes{{UnauthEnvDataAttributeSet}}

AuthEnvDataAttributeSet ATTRIBUTE ::= {
  aa-contentType | aa-messageDigest | aa-signingTime, ... }

UnauthEnvDataAttributeSet ATTRIBUTE ::= {...}

END
</artwork></figure>
<?rfc linefile="152:new-asn1.xml"?>

      </section>
    <section title="ASN.1 Module RFC 5652">

      <t>This module is updated from RFC 5911 <xref target="RFC5911"/> by the following changes:
        <list style="numbers">
          <t>Define separate attribute sets for the unprotected attributes used in EnvelopedData, EncryptedData, and AuthenticatedEnvelopedData (RFC 5083).</t>
          <t>Define a parameterized type EncryptedContentInfoType so that the basic type can be used with algorithm sets (used for EnvelopedData, EncryptedData, and AuthenticatedEnvelopedData (RFC 5083)).  The parameterized type is assigned to an unparameterized type of EncryptedContentInfo to minimize the output changes from previous versions.</t>

        </list>
      </t>
      <t>We are anticipating the definition of attributes that are going to be restricted to the use of only EnvelopedData.  We are therefore separating the different attribute sets so that protocol designers that need to do this will be able to define attributes that are used for EnvelopedData, but not for EncryptedData.  The same separation is also being applied to AuthenticatedData and AuthEnvelopedData.
      </t>

      <?rfc linefile="1:ForDraft/rfc5652.incl"?><figure><artwork>
CryptographicMessageSyntax-2010
    { iso(1) member-body(2) us(840) rsadsi(113549)
       pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-2009(58) }
DEFINITIONS IMPLICIT TAGS ::=
BEGIN
IMPORTS

ParamOptions, DIGEST-ALGORITHM, SIGNATURE-ALGORITHM,
  PUBLIC-KEY, KEY-DERIVATION, KEY-WRAP, MAC-ALGORITHM,
  KEY-AGREE, KEY-TRANSPORT, CONTENT-ENCRYPTION, ALGORITHM,
  AlgorithmIdentifier{}
FROM AlgorithmInformation-2009
  {iso(1) identified-organization(3) dod(6) internet(1) security(5)
  mechanisms(5) pkix(7) id-mod(0)
  id-mod-algorithmInformation-02(58)}

SignatureAlgs, MessageDigestAlgs, KeyAgreementAlgs,
  MessageAuthAlgs, KeyWrapAlgs, ContentEncryptionAlgs,
  KeyTransportAlgs, KeyDerivationAlgs, KeyAgreePublicKeys
FROM CryptographicMessageSyntaxAlgorithms-2009
  { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)
  smime(16) modules(0) id-mod-cmsalg-2001-02(37) }

Certificate, CertificateList, CertificateSerialNumber,
  Name, ATTRIBUTE
FROM PKIX1Explicit-2009
  { iso(1) identified-organization(3) dod(6) internet(1)
  security(5) mechanisms(5) pkix(7) id-mod(0)
  id-mod-pkix1-explicit-02(51) }

AttributeCertificate
FROM PKIXAttributeCertificate-2009
  { iso(1) identified-organization(3) dod(6) internet(1)
  security(5) mechanisms(5) pkix(7) id-mod(0)
  id-mod-attribute-cert-02(47) }

AttributeCertificateV1
FROM AttributeCertificateVersion1-2009
  { iso(1) identified-organization(3) dod(6) internet(1)
  security(5) mechanisms(5) pkix(7) id-mod(0)
  id-mod-v1AttrCert-02(49) } ;

-- Cryptographic Message Syntax

-- The following are used for version numbers using the ASN.1
-- NOTE: The document reference represents where the versioned 
--   feature was introduced to the module.
--
--   idiom "[[n:"
--   Version 1 = PKCS #7
--   Version 2 = S/MIME V2
--   Version 3 = RFC 2630
--   Version 4 = RFC 3369
--   Version 5 = RFC 3852

CONTENT-TYPE ::= CLASS {
  &amp;id        OBJECT IDENTIFIER UNIQUE,
  &amp;Type      OPTIONAL
} WITH SYNTAX {
    [TYPE &amp;Type] IDENTIFIED BY &amp;id
}

ContentType ::= CONTENT-TYPE.&amp;id

ContentInfo ::= SEQUENCE {
  contentType        CONTENT-TYPE.
                  &amp;id({ContentSet}),
  content            [0] EXPLICIT CONTENT-TYPE.
                  &amp;Type({ContentSet}{@contentType})}

ContentSet CONTENT-TYPE ::= {
  --  Define the set of content types to be recognized.
  ct-Data | ct-SignedData | ct-EncryptedData | ct-EnvelopedData |
  ct-AuthenticatedData | ct-DigestedData, ... }

SignedData ::= SEQUENCE {
  version CMSVersion,
  digestAlgorithms SET OF DigestAlgorithmIdentifier,
  encapContentInfo EncapsulatedContentInfo,
  certificates [0] IMPLICIT CertificateSet OPTIONAL,
  crls [1] IMPLICIT RevocationInfoChoices OPTIONAL,
  signerInfos SignerInfos }

SignerInfos ::= SET OF SignerInfo

EncapsulatedContentInfo ::= SEQUENCE {
  eContentType       CONTENT-TYPE.&amp;id({ContentSet}),
  eContent           [0] EXPLICIT OCTET STRING
          ( CONTAINING CONTENT-TYPE.
              &amp;Type({ContentSet}{@eContentType})) OPTIONAL }

SignerInfo ::= SEQUENCE {
  version CMSVersion,
  sid SignerIdentifier,
  digestAlgorithm DigestAlgorithmIdentifier,
  signedAttrs [0] IMPLICIT SignedAttributes OPTIONAL,
  signatureAlgorithm SignatureAlgorithmIdentifier,
  signature SignatureValue,
  unsignedAttrs [1] IMPLICIT Attributes
      {{UnsignedAttributes}} OPTIONAL }

SignedAttributes ::= Attributes {{ SignedAttributesSet }}

SignerIdentifier ::= CHOICE {
  issuerAndSerialNumber IssuerAndSerialNumber,
  ...,
  [[3: subjectKeyIdentifier [0] SubjectKeyIdentifier ]] }

SignedAttributesSet ATTRIBUTE ::=
  { aa-signingTime | aa-messageDigest | aa-contentType, ... }

UnsignedAttributes ATTRIBUTE ::= { aa-countersignature, ... }

SignatureValue ::= OCTET STRING

EnvelopedData ::= SEQUENCE {
  version CMSVersion,
  originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,
  recipientInfos RecipientInfos,
  encryptedContentInfo EncryptedContentInfo,
  ...,
  [[2: unprotectedAttrs [1] IMPLICIT Attributes
      {{ UnprotectedEnvAttributes }} OPTIONAL ]] }

OriginatorInfo ::= SEQUENCE {
  certs [0] IMPLICIT CertificateSet OPTIONAL,
  crls [1] IMPLICIT RevocationInfoChoices OPTIONAL }

RecipientInfos ::= SET SIZE (1..MAX) OF RecipientInfo

EncryptedContentInfo ::= 
  EncryptedContentInfoType { ContentEncryptionAlgorithmIdentifier }

EncryptedContentInfoType { AlgorithmIdentifierType } ::= SEQUENCE {
  contentType        CONTENT-TYPE.&amp;id({ContentSet}),
  contentEncryptionAlgorithm AlgorithmIdentifierType,
  encryptedContent   [0] IMPLICIT OCTET STRING OPTIONAL }
   

-- If you want to do constraints, you might use:
-- EncryptedContentInfo ::= SEQUENCE {
--  contentType        CONTENT-TYPE.&amp;id({ContentSet}),
--  contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,
--  encryptedContent   [0] IMPLICIT ENCRYPTED {CONTENT-TYPE.
--      &amp;Type({ContentSet}{@contentType}) OPTIONAL }
-- ENCRYPTED {ToBeEncrypted} ::= OCTET STRING ( CONSTRAINED BY
--        { ToBeEncrypted } )

UnprotectedEnvAttributes ATTRIBUTE ::=  { ... }
UnprotectedEncAttributes ATTRIBUTE ::=  { ... }

RecipientInfo ::= CHOICE {
  ktri           KeyTransRecipientInfo,
  ...,
  [[3: kari  [1] KeyAgreeRecipientInfo ]],
  [[4: kekri [2] KEKRecipientInfo]],
  [[5: pwri  [3] PasswordRecipientInfo,
       ori   [4] OtherRecipientInfo ]] }

EncryptedKey ::= OCTET STRING

KeyTransRecipientInfo ::= SEQUENCE {
  version CMSVersion,  -- always set to 0 or 2
  rid RecipientIdentifier,
  keyEncryptionAlgorithm AlgorithmIdentifier
      {KEY-TRANSPORT, {KeyTransportAlgorithmSet}},
  encryptedKey EncryptedKey }

KeyTransportAlgorithmSet KEY-TRANSPORT ::= { KeyTransportAlgs, ... }

RecipientIdentifier ::= CHOICE {
  issuerAndSerialNumber IssuerAndSerialNumber,
  ...,
  [[2: subjectKeyIdentifier [0] SubjectKeyIdentifier ]] }
KeyAgreeRecipientInfo ::= SEQUENCE {
  version CMSVersion,  -- always set to 3
  originator [0] EXPLICIT OriginatorIdentifierOrKey,
  ukm [1] EXPLICIT UserKeyingMaterial OPTIONAL,
  keyEncryptionAlgorithm AlgorithmIdentifier
      {KEY-AGREE, {KeyAgreementAlgorithmSet}},
  recipientEncryptedKeys RecipientEncryptedKeys }

KeyAgreementAlgorithmSet KEY-AGREE ::= { KeyAgreementAlgs, ... }

OriginatorIdentifierOrKey ::= CHOICE {
  issuerAndSerialNumber IssuerAndSerialNumber,
  subjectKeyIdentifier [0] SubjectKeyIdentifier,
  originatorKey [1] OriginatorPublicKey }

OriginatorPublicKey ::= SEQUENCE {
  algorithm AlgorithmIdentifier {PUBLIC-KEY, {OriginatorKeySet}},
  publicKey BIT STRING }

OriginatorKeySet PUBLIC-KEY ::= { KeyAgreePublicKeys, ... }

RecipientEncryptedKeys ::= SEQUENCE OF RecipientEncryptedKey

RecipientEncryptedKey ::= SEQUENCE {
  rid KeyAgreeRecipientIdentifier,
  encryptedKey EncryptedKey }

KeyAgreeRecipientIdentifier ::= CHOICE {
  issuerAndSerialNumber IssuerAndSerialNumber,
  rKeyId [0] IMPLICIT RecipientKeyIdentifier }

RecipientKeyIdentifier ::= SEQUENCE {
  subjectKeyIdentifier SubjectKeyIdentifier,
  date GeneralizedTime OPTIONAL,
  other OtherKeyAttribute OPTIONAL }

SubjectKeyIdentifier ::= OCTET STRING

KEKRecipientInfo ::= SEQUENCE {
  version CMSVersion,  -- always set to 4
  kekid KEKIdentifier,
  keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,
  encryptedKey EncryptedKey }

KEKIdentifier ::= SEQUENCE {
  keyIdentifier OCTET STRING,
  date GeneralizedTime OPTIONAL,
  other OtherKeyAttribute OPTIONAL }
PasswordRecipientInfo ::= SEQUENCE {
  version CMSVersion,   -- always set to 0
  keyDerivationAlgorithm [0] KeyDerivationAlgorithmIdentifier
                          OPTIONAL,
  keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,
  encryptedKey EncryptedKey }

OTHER-RECIPIENT ::= TYPE-IDENTIFIER

OtherRecipientInfo ::= SEQUENCE {
  oriType    OTHER-RECIPIENT.
          &amp;id({SupportedOtherRecipInfo}),
  oriValue   OTHER-RECIPIENT.
          &amp;Type({SupportedOtherRecipInfo}{@oriType})}

SupportedOtherRecipInfo OTHER-RECIPIENT ::= { ... }

DigestedData ::= SEQUENCE {
  version CMSVersion,
  digestAlgorithm DigestAlgorithmIdentifier,
  encapContentInfo EncapsulatedContentInfo,
  digest Digest, ... }

Digest ::= OCTET STRING

EncryptedData ::= SEQUENCE {
  version CMSVersion,
  encryptedContentInfo EncryptedContentInfo,
  ...,
  [[2: unprotectedAttrs [1] IMPLICIT Attributes
      {{UnprotectedEncAttributes}} OPTIONAL ]] }

AuthenticatedData ::= SEQUENCE {
  version CMSVersion,
  originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,
  recipientInfos RecipientInfos,
  macAlgorithm MessageAuthenticationCodeAlgorithm,
  digestAlgorithm [1] DigestAlgorithmIdentifier OPTIONAL,
  encapContentInfo EncapsulatedContentInfo,
  authAttrs [2] IMPLICIT AuthAttributes OPTIONAL,
  mac MessageAuthenticationCode,
  unauthAttrs [3] IMPLICIT UnauthAttributes OPTIONAL }

AuthAttributes ::= SET SIZE (1..MAX) OF Attribute
  {{AuthAttributeSet}}

AuthAttributeSet ATTRIBUTE ::= { aa-contentType | aa-messageDigest
                                     | aa-signingTime, ...}

MessageAuthenticationCode ::= OCTET STRING

UnauthAttributes ::= SET SIZE (1..MAX) OF Attribute
    {{UnauthAttributeSet}}

UnauthAttributeSet ATTRIBUTE ::= {...}

--
--  General algorithm definitions
--

DigestAlgorithmIdentifier ::= AlgorithmIdentifier
  {DIGEST-ALGORITHM, {DigestAlgorithmSet}}

DigestAlgorithmSet DIGEST-ALGORITHM ::= {
  CryptographicMessageSyntaxAlgorithms-2009.MessageDigestAlgs, ... }

SignatureAlgorithmIdentifier ::= AlgorithmIdentifier
  {SIGNATURE-ALGORITHM, {SignatureAlgorithmSet}}

SignatureAlgorithmSet SIGNATURE-ALGORITHM ::=
  { SignatureAlgs, ... }

KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier
  {KEY-WRAP, {KeyEncryptionAlgorithmSet}}

KeyEncryptionAlgorithmSet KEY-WRAP ::= { KeyWrapAlgs, ... }

ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier
  {CONTENT-ENCRYPTION, {ContentEncryptionAlgorithmSet}}

ContentEncryptionAlgorithmSet CONTENT-ENCRYPTION ::=
  { ContentEncryptionAlgs, ... }

MessageAuthenticationCodeAlgorithm ::= AlgorithmIdentifier
  {MAC-ALGORITHM, {MessageAuthenticationCodeAlgorithmSet}}

MessageAuthenticationCodeAlgorithmSet MAC-ALGORITHM ::=
  { MessageAuthAlgs, ... }

KeyDerivationAlgorithmIdentifier ::= AlgorithmIdentifier
  {KEY-DERIVATION, {KeyDerivationAlgs, ...}}

RevocationInfoChoices ::= SET OF RevocationInfoChoice

RevocationInfoChoice ::= CHOICE {
  crl CertificateList,
  ...,
  [[5: other [1] IMPLICIT OtherRevocationInfoFormat ]] }

OTHER-REVOK-INFO ::= TYPE-IDENTIFIER

OtherRevocationInfoFormat ::= SEQUENCE {
  otherRevInfoFormat    OTHER-REVOK-INFO.
          &amp;id({SupportedOtherRevokInfo}),
  otherRevInfo          OTHER-REVOK-INFO.
          &amp;Type({SupportedOtherRevokInfo}{@otherRevInfoFormat})}

SupportedOtherRevokInfo OTHER-REVOK-INFO ::= { ... }

CertificateChoices ::= CHOICE {
  certificate Certificate,
  extendedCertificate [0] IMPLICIT ExtendedCertificate,
       -- Obsolete
  ...,
  [[3: v1AttrCert [1] IMPLICIT AttributeCertificateV1]],
       -- Obsolete
  [[4: v2AttrCert [2] IMPLICIT AttributeCertificateV2]],
  [[5: other      [3] IMPLICIT OtherCertificateFormat]] }

AttributeCertificateV2 ::= AttributeCertificate

OTHER-CERT-FMT ::= TYPE-IDENTIFIER

OtherCertificateFormat ::= SEQUENCE {
  otherCertFormat OTHER-CERT-FMT.
          &amp;id({SupportedCertFormats}),
  otherCert       OTHER-CERT-FMT.
          &amp;Type({SupportedCertFormats}{@otherCertFormat})}

SupportedCertFormats OTHER-CERT-FMT ::= { ... }

CertificateSet ::= SET OF CertificateChoices

IssuerAndSerialNumber ::= SEQUENCE {
  issuer Name,
  serialNumber CertificateSerialNumber }

CMSVersion ::= INTEGER  { v0(0), v1(1), v2(2), v3(3), v4(4), v5(5) }

UserKeyingMaterial ::= OCTET STRING

KEY-ATTRIBUTE ::= TYPE-IDENTIFIER

OtherKeyAttribute ::= SEQUENCE {
  keyAttrId  KEY-ATTRIBUTE.
          &amp;id({SupportedKeyAttributes}),
  keyAttr    KEY-ATTRIBUTE.
          &amp;Type({SupportedKeyAttributes}{@keyAttrId})}

SupportedKeyAttributes KEY-ATTRIBUTE ::= { ... }

-- Content Type Object Identifiers

id-ct-contentInfo OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  us(840) rsadsi(113549) pkcs(1) pkcs9(9) smime(16) ct(1) 6 }

ct-Data CONTENT-TYPE ::= { IDENTIFIED BY id-data }

id-data OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  us(840) rsadsi(113549) pkcs(1) pkcs7(7) 1 }

ct-SignedData CONTENT-TYPE ::=
  { TYPE SignedData IDENTIFIED BY id-signedData}

id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }

ct-EnvelopedData CONTENT-TYPE ::=
  { TYPE EnvelopedData IDENTIFIED BY id-envelopedData}

id-envelopedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  us(840) rsadsi(113549) pkcs(1) pkcs7(7) 3 }

ct-DigestedData CONTENT-TYPE ::=
  { TYPE DigestedData IDENTIFIED BY id-digestedData}

id-digestedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  us(840) rsadsi(113549) pkcs(1) pkcs7(7) 5 }

ct-EncryptedData CONTENT-TYPE ::=
  { TYPE EncryptedData IDENTIFIED BY id-encryptedData}

id-encryptedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  us(840) rsadsi(113549) pkcs(1) pkcs7(7) 6 }

ct-AuthenticatedData CONTENT-TYPE ::=
  { TYPE AuthenticatedData IDENTIFIED BY id-ct-authData}

id-ct-authData OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) ct(1) 2 }

--
-- The CMS Attributes
--

MessageDigest ::= OCTET STRING

SigningTime  ::= Time

Time ::= CHOICE {
  utcTime UTCTime,
  generalTime GeneralizedTime }

Countersignature ::= SignerInfo

-- Attribute Object Identifiers

aa-contentType ATTRIBUTE ::=
  { TYPE ContentType IDENTIFIED BY id-contentType }
id-contentType OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  us(840) rsadsi(113549) pkcs(1) pkcs9(9) 3 }

aa-messageDigest ATTRIBUTE ::=
  { TYPE MessageDigest IDENTIFIED BY id-messageDigest}
id-messageDigest OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  us(840) rsadsi(113549) pkcs(1) pkcs9(9) 4 }

aa-signingTime ATTRIBUTE ::=
  { TYPE SigningTime IDENTIFIED BY id-signingTime }
id-signingTime OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  us(840) rsadsi(113549) pkcs(1) pkcs9(9) 5 }

aa-countersignature ATTRIBUTE ::=
  { TYPE Countersignature IDENTIFIED BY id-countersignature }
id-countersignature OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  us(840) rsadsi(113549) pkcs(1) pkcs9(9) 6 }

--
-- Obsolete Extended Certificate syntax from PKCS#6
--

ExtendedCertificateOrCertificate ::= CHOICE {
  certificate Certificate,
  extendedCertificate [0] IMPLICIT ExtendedCertificate }

ExtendedCertificate ::= SEQUENCE {
  extendedCertificateInfo ExtendedCertificateInfo,
  signatureAlgorithm SignatureAlgorithmIdentifier,
  signature Signature }

ExtendedCertificateInfo ::= SEQUENCE {
  version CMSVersion,
  certificate Certificate,
  attributes UnauthAttributes }

Signature ::= BIT STRING

Attribute{ ATTRIBUTE:AttrList } ::= SEQUENCE {
  attrType           ATTRIBUTE.
          &amp;id({AttrList}),
  attrValues         SET OF ATTRIBUTE.
          &amp;Type({AttrList}{@attrType})  }

Attributes { ATTRIBUTE:AttrList } ::=
  SET SIZE (1..MAX) OF Attribute {{ AttrList }}

END
</artwork></figure>
<?rfc linefile="167:new-asn1.xml"?>

      </section>
    <section title="ASN.1 Module RFC 5752">
      <t>We have updated the ASN.1 module associated with this document to be 2008 compliant and to use the set of classes previously defined in <xref target="RFC5911"/>.</t>

      <?rfc linefile="1:ForDraft/rfc5752.incl"?><figure><artwork>
MultipleSignatures-2010
  { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
    smime(16) modules(0) id-mod-multipleSign-2009(59) }
DEFINITIONS IMPLICIT TAGS ::=
BEGIN
  -- EXPORTS All
  -- The types and values defined in this module are exported for use
  -- in the other ASN.1 modules.  Other applications may use them for
  -- their own purposes.

  IMPORTS

  -- Imports from PKIX-Common-Types-2009 [RFC5912]

  ATTRIBUTE
    FROM PKIX-CommonTypes-2009
        { iso(1) identified-organization(3) dod(6) internet(1)
          security(5) mechanisms(5) pkix(7) id-mod(0)
          id-mod-pkixCommon-02(57)}

  -- Imports from CryptographicMessageSyntax-2010 [RFC6268]

  DigestAlgorithmIdentifier, SignatureAlgorithmIdentifier
    FROM CryptographicMessageSyntax-2010
    { iso(1) member-body(2) us(840) rsadsi(113549)
       pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-2009(58) }

  -- Imports from ExtendedSecurityServices-2009 [RFC5911]

  ESSCertIDv2
    FROM ExtendedSecurityServices-2009
    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)
      smime(16) modules(0) id-mod-ess-2006-02(42) }
  ;

  --
  -- Section 3.0
  --
  --  at-multipleSignatures should be added ONLY to the
  --    SignedAttributesSet defined in [RFC5652]
  --

  at-multipleSignatures ATTRIBUTE ::= {
    TYPE MultipleSignatures
    IDENTIFIED BY id-aa-multipleSignatures
  }

  id-aa-multipleSignatures OBJECT IDENTIFIER ::= {
    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
    id-aa(2) 51 }

  MultipleSignatures ::= SEQUENCE {
    bodyHashAlg     DigestAlgorithmIdentifier,
    signAlg         SignatureAlgorithmIdentifier,
    signAttrsHash   SignAttrsHash,
    cert            ESSCertIDv2 OPTIONAL
  }

  SignAttrsHash ::= SEQUENCE {
    algID            DigestAlgorithmIdentifier,
    hash             OCTET STRING
  }

END
</artwork></figure>
<?rfc linefile="173:new-asn1.xml"?>

    </section>
      <section title="Module Identifiers in ASN.1">
	<t>One potential issue that can occur when updating modules is the fact that a large number of modules may need to be updated if they import from a newly updated module.  This section addresses one method that can be used to deal with this problem, but the modules in this document don't currently implement the solution discussed here.</t>
	<t>When looking at an import statement, there are three portions:  The list of items imported, a textual name for the module, and an object identifier for the module.  Full implementations of ASN.1 do module matching using first the object identifier, and if that is not present, the textual name of the module.  Note however that some older implementations used the textual name of the module for the purposes of matching.  In a full implementation, the name assigned to the module is scoped to the ASN.1 module that it appears in (and thus the need to match the module it is importing from).</t>
	<t>One can create a module that contains only the module number assignments and import the module assignments from the new module.  This means that when a module is replaced, one can replace the previous module, update the module number assignment module, and recompile without having to modify any other modules.</t>
	<t>A sample module assignment module would be:</t>
	<figure><artwork>
ModuleNumbers
DEFINITIONS TAGS ::=
BEGIN
   id-mod-CMS ::= { iso(1) member-body(2) us(840) rsadsi(113549)
      pkcs(1) pkcs-9(9) smime(16) modules(0) 58 }

   id-mod-AlgInfo ::=     
      {iso(1) identified-organization(3) dod(6) internet(1)
       security(5) mechanisms(5) pkix(7) id-mod(0) 
       id-mod-algorithmInformation-02(58)}
END
	</artwork></figure>
	<t>This would be used in the following import statement:</t>
	<figure><artwork>
IMPORTS
  id-mod-CMS, id-mod-AlgInfo
  FROM ModuleNumbers  -- Note it will match on the name since no 
                      -- OID is provided

  CMSVersion, EncapsulatedContentInfo, CONTENT-TYPE
  FROM CryptographicMessageSyntax-2010
    id-mod-CMS

  AlgorithmIdentifier{}, SMIME-CAPS, ParamOptions
  FROM AlgorithmInformation-2009 id-mod-AlgInfo
  ;
	</artwork></figure>
      </section>
      <section title="Security Considerations">

	<t>This document itself does not have any security considerations.  The ASN.1 modules keep the same bits-on-the-wire as the modules that they replace.      
	</t>

      </section>

  </middle>
  <back>

    <references title="Normative References">

<reference anchor='RFC5280'>

<front>
<title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
<author initials='D.' surname='Cooper' fullname='D. Cooper'>
<organization /></author>
<author initials='S.' surname='Santesson' fullname='S. Santesson'>
<organization /></author>
<author initials='S.' surname='Farrell' fullname='S. Farrell'>
<organization /></author>
<author initials='S.' surname='Boeyen' fullname='S. Boeyen'>
<organization /></author>
<author initials='R.' surname='Housley' fullname='R. Housley'>
<organization /></author>
<author initials='W.' surname='Polk' fullname='W. Polk'>
<organization /></author>
<date year='2008' month='May' />
<abstract>
<t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5280' />
<format type='TXT' octets='352580' target='ftp://ftp.rfc-editor.org/in-notes/rfc5280.txt' />
</reference>

<reference anchor='RFC2119'>

<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year='1997' month='March' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>

<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='http://www.rfc-editor.org/rfc/rfc2119.txt' />
<format type='HTML' octets='17491' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5777' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>


<reference anchor='RFC3274'>

<front>
<title>Compressed Data Content Type for Cryptographic Message Syntax (CMS)</title>
<author initials='P.' surname='Gutmann' fullname='P. Gutmann'>
<organization /></author>
<date year='2002' month='June' />
<abstract>
<t>This document defines a format for using compressed data as a Cryptographic Message Syntax (CMS) content type.  Compressing data before transmission provides a number of advantages, including the elimination of data redundancy which could help an attacker, speeding up processing by reducing the amount of data to be processed by later steps (such as signing or encryption), and reducing overall message size.  Although there have been proposals for adding compression at other levels (for example at the MIME or SSL level), these don't address the problem of compression of CMS content unless the compression is supplied by an external means (for example by intermixing MIME and CMS). [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='3274' />
<format type='TXT' octets='11276' target='http://www.rfc-editor.org/rfc/rfc3274.txt' />
</reference>


<reference anchor='RFC3779'>

<front>
<title>X.509 Extensions for IP Addresses and AS Identifiers</title>
<author initials='C.' surname='Lynn' fullname='C. Lynn'>
<organization /></author>
<author initials='S.' surname='Kent' fullname='S. Kent'>
<organization /></author>
<author initials='K.' surname='Seo' fullname='K. Seo'>
<organization /></author>
<date year='2004' month='June' />
<abstract>
<t>This document defines two X.509 v3 certificate extensions.  The first binds a list of IP address blocks, or prefixes, to the subject of a certificate.  The second binds a list of autonomous system identifiers to the subject of a certificate.  These extensions may be used to convey the authorization of the subject to use the IP addresses and autonomous system identifiers contained in the extensions. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='3779' />
<format type='TXT' octets='60732' target='http://www.rfc-editor.org/rfc/rfc3779.txt' />
</reference>

<reference anchor='RFC6019'>

<front>
<title>BinaryTime: An Alternate Format for Representing Date and Time in ASN.1</title>
<author initials='R.' surname='Housley' fullname='R. Housley'>
<organization /></author>
<date year='2010' month='September' />
<abstract>
<t>This document specifies a new ASN.1 type for representing time: BinaryTime.  This document also specifies an alternate to the signing-time attribute for use with the Cryptographic Message Syntax (CMS) SignedData and AuthenticatedData content types; the binary-signing-time attribute uses BinaryTime.  CMS and the signing-time attribute are defined in RFC 5652. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='6019' />
<format type='TXT' octets='11394' target='http://www.rfc-editor.org/rfc/rfc6019.txt' />
</reference>

<reference anchor='RFC4073'>

<front>
<title>Protecting Multiple Contents with the Cryptographic Message Syntax (CMS)</title>
<author initials='R.' surname='Housley' fullname='R. Housley'>
<organization /></author>
<date year='2005' month='May' />
<abstract>
<t>This document describes a convention for using the Cryptographic Message Syntax (CMS) to protect a content collection.  If desired, attributes can be associated with the content. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4073' />
<format type='TXT' octets='17103' target='http://www.rfc-editor.org/rfc/rfc4073.txt' />
</reference>

<reference anchor='RFC4231'>

<front>
<title>Identifiers and Test Vectors for HMAC&nbhy;SHA&nbhy;224, HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512</title>
<author initials='M.' surname='Nystrom' fullname='M. Nystrom'>
<organization /></author>
<date year='2005' month='December' />
<abstract>
<t>This document provides test vectors for the HMAC-SHA-224, HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512 message authentication schemes.  It also provides ASN.1 object identifiers and Uniform Resource Identifiers (URIs) to identify use of these schemes in protocols.  The test vectors provided in this document may be used for conformance testing. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4231' />
<format type='TXT' octets='17725' target='http://www.rfc-editor.org/rfc/rfc4231.txt' />
</reference>

<reference anchor='RFC4334'>

<front>
<title>Certificate Extensions and Attributes Supporting Authentication in Point-to-Point Protocol (PPP) and Wireless Local Area Networks (WLAN)</title>
<author initials='R.' surname='Housley' fullname='R. Housley'>
<organization /></author>
<author initials='T.' surname='Moore' fullname='T. Moore'>
<organization /></author>
<date year='2006' month='February' />
<abstract>
<t>This document defines two Extensible Authentication Protocol (EAP) extended key usage values and a public key certificate extension to carry Wireless LAN (WLAN) System Service identifiers (SSIDs).  This document obsoletes RFC 3770. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4334' />
<format type='TXT' octets='20739' target='http://www.rfc-editor.org/rfc/rfc4334.txt' />
</reference>

<reference anchor='RFC5083'>

<front>
<title>Cryptographic Message Syntax (CMS) Authenticated-Enveloped-Data Content Type</title>
<author initials='R.' surname='Housley' fullname='R. Housley'>
<organization /></author>
<date year='2007' month='November' />
<abstract>
<t>This document describes an additional content type for the Cryptographic Message Syntax (CMS).  The authenticated-enveloped-data content type is intended for use with authenticated encryption modes.  All of the various key management techniques that are supported in the CMS enveloped-data content type are also supported by the CMS authenticated-enveloped-data content type. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5083' />
<format type='TXT' octets='22810' target='http://www.rfc-editor.org/rfc/rfc5083.txt' />
</reference>

<reference anchor='RFC5652'>

<front>
<title>Cryptographic Message Syntax (CMS)</title>
<author initials='R.' surname='Housley' fullname='R. Housley'>
<organization /></author>
<date year='2009' month='September' />
<abstract>
<t>This document describes the Cryptographic Message Syntax (CMS).  This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary message content. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='STD' value='70' />
<seriesInfo name='RFC' value='5652' />
<format type='TXT' octets='126813' target='http://www.rfc-editor.org/rfc/rfc5652.txt' />
</reference>

<reference anchor='RFC5752'>

<front>
<title>Multiple Signatures in Cryptographic Message Syntax (CMS)</title>
<author initials='S.' surname='Turner' fullname='S. Turner'>
<organization /></author>
<author initials='J.' surname='Schaad' fullname='J. Schaad'>
<organization /></author>
<date year='2010' month='January' />
<abstract>
<t>Cryptographic Message Syntax (CMS) SignedData includes the SignerInfo structure to convey per-signer information.  SignedData supports multiple signers and multiple signature algorithms per signer with multiple SignerInfo structures.  If a signer attaches more than one SignerInfo, there are concerns that an attacker could perform a downgrade attack by removing the SignerInfo(s) with the \'strong' algorithm(s).  This document defines the multiple-signatures attribute, its generation rules, and its processing rules to allow signers to convey multiple SignerInfo objects while protecting against downgrade attacks.  Additionally, this attribute may assist during periods of algorithm migration. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5752' />
<format type='TXT' octets='34502' target='http://www.rfc-editor.org/rfc/rfc5752.txt' />
</reference>


<reference anchor='RFC5911'>

<front>
<title>New ASN.1 Modules for Cryptographic Message Syntax (CMS) and S/MIME</title>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'>
<organization /></author>
<author initials='J.' surname='Schaad' fullname='J. Schaad'>
<organization /></author>
<date year='2010' month='June' />
<abstract>
<t>The Cryptographic Message Syntax (CMS) format, and many associated formats, are expressed using ASN.1.  The current ASN.1 modules conform to the 1988 version of ASN.1.  This document updates those ASN.1 modules to conform to the 2002 version of ASN.1.  There are no bits-on-the-wire changes to any of the formats; this is simply a change to the syntax.  This document is not an Internet Standards Track specification; it is published for informational purposes.</t></abstract></front>

<seriesInfo name='RFC' value='5911' />
<format type='TXT' octets='101576' target='http://www.rfc-editor.org/rfc/rfc5911.txt' />
</reference>


<reference anchor='RFC5912'>

<front>
<title>New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)</title>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'>
<organization /></author>
<author initials='J.' surname='Schaad' fullname='J. Schaad'>
<organization /></author>
<date year='2010' month='June' />
<abstract>
<t>The Public Key Infrastructure using X.509 (PKIX) certificate format, and many associated formats, are expressed using ASN.1.  The current ASN.1 modules conform to the 1988 version of ASN.1.  This document updates those ASN.1 modules to conform to the 2002 version of ASN.1.  There are no bits-on-the-wire changes to any of the formats; this is simply a change to the syntax.  This document is not an Internet Standards Track specification; it is published for informational purposes.</t></abstract></front>

<seriesInfo name='RFC' value='5912' />
<format type='TXT' octets='216154' target='http://www.rfc-editor.org/rfc/rfc5912.txt' />
</reference>

      <reference anchor="ASN1-2008">
	<front>
	  <title>ITU-T Recommendations X.680, X.681, X.682, and X.683</title>
	  <author><organization>ITU-T</organization></author>
	  <date year="2008"/>
	</front>
      </reference>
    </references>

    <references title="Informative References">

<reference anchor='RFC6025'>

<front>
<title>ASN.1 Translation</title>
<author initials='C.' surname='Wallace' fullname='C. Wallace'>
<organization /></author>
<author initials='C.' surname='Gardiner' fullname='C. Gardiner'>
<organization /></author>
<date year='2010' month='October' />
<abstract>
<t>Abstract Syntax Notation One (ASN.1) is widely used throughout the IETF Security Area and has been for many years.  Some specifications were written using a now deprecated version of ASN.1 and some were written using the current version of ASN.1.  Not all ASN.1 compilers support both older and current syntax.  This document is intended to provide guidance to specification authors and to implementers converting ASN.1 modules from one version of ASN.1 to another version without causing changes to the "bits on the wire".  This document does not provide a comprehensive tutorial of any version of ASN.1.  Instead, it addresses ASN.1 features that are used in IETF Security Area specifications with a focus on items that vary with the ASN.1 version.  This document is not an Internet Standards Track specification; it is published for informational purposes.</t></abstract></front>

<seriesInfo name='RFC' value='6025' />
<format type='TXT' octets='39221' target='http://www.rfc-editor.org/rfc/rfc6025.txt' />
</reference>

    </references>
  </back>
</rfc>

