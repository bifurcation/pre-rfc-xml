<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc.dtd">

<?rfc toc="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc subcompact="no"?>
<?rfc symrefs="no"?>

<rfc number="5006" category="exp">

<front>
    <title abbrev="IPv6 RA Option for DNS Configuration">
         IPv6 Router Advertisement Option for DNS Configuration
    </title>
        
    <author role='editor' initials="J." surname="Jeong" fullname="Jaehoon Paul Jeong">
        <organization abbrev="ETRI/University of Minnesota">
            ETRI/Department of Computer Science and Engineering
        </organization>

        <address>
            <postal>
                <street>University of Minnesota</street>
                <street>117 Pleasant Street SE</street>
                <city>Minneapolis</city> <region>MN</region>
                <code>55455</code>
                <country>USA</country>
            </postal>
            <phone>+1 651 587 7774</phone>
            <facsimile>+1 612 625 0572</facsimile>
            <email>jjeong@cs.umn.edu</email>
            <uri>http://www.cs.umn.edu/~jjeong/</uri>
        </address>
    </author>
    
    <author initials="S." surname="Park" fullname="Soohong Daniel Park">
        <organization abbrev="SAMSUNG Electronics">
            Mobile Convergence Laboratory
        </organization>

        <address>
            <postal>
                <street>SAMSUNG Electronics</street>
                <street>416 Maetan-3dong, Yeongtong-Gu</street>
                <city>Suwon</city> <region>Gyeonggi-Do</region>
                <code>443-742</code>
                <country>Korea</country>
            </postal>
            <phone>+82 31 200 4508</phone>
            <email>soohong.park@samsung.com</email>
        </address>
    </author>

    <author initials="L." surname="Beloeil" fullname="Luc Beloeil">
        <organization abbrev="France Telecom R&D">
            France Telecom R&D
        </organization>

        <address>
            <postal>
                <street>42, rue des coutures</street>
                <street>BP 6243</street>
                <city>14066 CAEN Cedex 4</city>
                <country>France</country>
            </postal>
            <phone>+33 02 3175 9391</phone>
            <email>luc.beloeil@orange-ftgroup.com</email>
        </address>
    </author>

    <author initials="S." surname="Madanapalli" fullname="Syam Madanapalli">
<organization>Ordyn Technologies</organization>
		<address>
		<postal>
                    <street>1st Floor, Creator Building, ITPL</street>
		        <city>Bangalore - 560066</city> 
		        <country>India</country>
		</postal>
            <phone>+91-80-40383000</phone>
		<email>smadanapalli@gmail.com</email>
        </address>
    </author>

    <date month="August" year="2007" />
        
<!-- [rfced] Please insert any keywords (beyond those that appear in
the title) for use on http://www.rfc-editor.org/rfcsearch.html. -->

<keyword>example</keyword>       

    <abstract>
        <t>This document specifies a new IPv6 Router Advertisement option to
        allow IPv6 routers to advertise DNS recursive server addresses to
        IPv6 hosts.
        </t>
    </abstract>
</front>

<middle>

<section title="Introduction"> 
    <t>Neighbor Discovery (ND) for IP Version 6 and IPv6 Stateless 
    Address Autoconfiguration provide ways to configure either fixed 
    or mobile nodes with one or more IPv6 addresses, default routers 
    and some other parameters <xref target="rfc2461" /><xref target="rfc2462" />.
    To support the access to additional services in the Internet that are identified by a DNS 
    name, such as a web server, the configuration of at least one 
    recursive DNS server is also needed for DNS name resolution.
    </t>

    <t>It is infeasible for nomadic hosts, such as laptops, to 
    be configured manually with a DNS resolver each time they connect to
    a different wireless LAN (WLAN) such as IEEE 802.11 a/b/g
    <xref target="ieee-802.11" />-<xref target="ieee-802.11g" />. 
    Normally, DHCP <xref target="rfc3315" />-<xref target="rfc3646" /> 
    is used to locate such resolvers. This document 
    provides an alternate, experimental mechanism which uses a new IPv6 Router
    Advertisement (RA) option to allow IPv6 routers to
    advertise DNS recursive server addresses to IPv6 hosts.
    </t>

    <section title="Applicability Statements">
    <t>The only standards-track DNS configuration mechanism in
    the IETF is DHCP, and its support in hosts and routers 
    is necessary for reasons of interoperability.
    </t>

    <t>RA-based DNS configuration is a useful, optional
    alternative in networks where an IPv6 host's address is
    autoconfigured through IPv6 stateless address
    autoconfiguration, and where the delays in acquiring
    server addresses and communicating with the servers are
    critical. RA-based DNS configuration allows the host to
    acquire the nearest server addresses on every
    link. Furthermore, it learns these addresses from the
    same RA message that provides configuration information
    for the link, thereby avoiding an additional protocol
    run.  This can be beneficial in some mobile
    environments, such as with Mobile IPv6 <xref target="rfc3775" />.
    </t>
    
    <t>The advantages and disadvantages of the RA-based
    approach are discussed in <xref target="rfc4339" /> along with other
    approaches, such as the DHCP and well-known anycast
    addresses approaches.
    </t>
    </section>

    <section title="Coexistence of RDNSS Option and DHCP Option">
        <t>The RDNSS (Recursive DNS Server) option and DHCP option can be used together <xref target="rfc4339" />.
        To order the RA and DHCP approaches, the O (Other stateful configuration) flag can
        be used in the RA message <xref target="rfc2461" />.  If no RDNSS option is included in the RA messages, an IPv6
        host may perform DNS configuration through DHCPv6 
        <xref target="rfc3315" />-<xref target="rfc3646" /> regardless of whether the O flag is set or not.
        </t>
  	</section>
</section>
  
<section title="Definitions">
    <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
    document are to be interpreted as described in <xref target="rfc2119" />.
    </t>
</section>

<section title="Terminology">
    <t>This document uses the terminology described in <xref target="rfc2461" /> and <xref target="rfc2462" />.
  In addition, four new terms are defined below:
    </t>
    
    
    <list style="symbols"> 
        <t>Recursive DNS Server (RDNSS): Server which provides a recursive DNS resolution service for
        translating domain names into IP addresses as defined in <xref target="rfc1034" /> and <xref target="rfc1035" />.
        </t>


        <t>RDNSS Option: IPv6 RA option to deliver the RDNSS information to the IPv6 hosts
        <xref target="rfc2461" />.
        </t>


        <t>DNS Server List: Data structure for managing DNS Server Information existing
        in the IPv6 protocol stack in addition to Neighbor Cache and Destination Cache for
        Neighbor Discovery <xref target="rfc2461" />.
        </t>
    

        <t>Resolver Repository: Configuration repository with RDNSS addresses that a DNS  
    resolver on the host uses for DNS name resolution; for example, the Unix resolver file
    (i.e., /etc/resolv.conf) and Windows registry.
        </t>

    </list>
</section>

<section title="Overview">
    <t>This document defines a new ND option called RDNSS option that
    contains the addresses of recursive DNS servers.  Existing ND 
    transport mechanisms (i.e., advertisements and solicitations) are 
    used.  This works in the same way that hosts learn about routers 
    and prefixes.  An IPv6 host can configure the IPv6 addresses of 
    one or more RDNSSes via RA messages periodically sent by a router or 
    solicited by a Router Solicitation (RS). 
  </t>

    <t>Through the RDNSS option, along with the prefix information 
    option based on the ND protocol (<xref target="rfc2461" /> and <xref target="rfc2462" />),
  an IPv6 host can perform network configuration of its IPv6 address and RDNSS simultaneously
  without needing a separate message exchange for the RDNSS information.
    The RA option for RDNSS can be used on any network that supports the use of ND.  
    </t>
  
    <t>This approach requires RDNSS information to be configured in the 
    routers sending the advertisements.  The configuration of RDNSS
  addresses in the routers can be done by manual configuration.  
  The automatic configuration or redistribution of RDNSS information is
  possible by running a DHCPv6 client running on the router
  <xref target="rfc3315" />-<xref target="rfc3646" />.
  The automatic configuration of RDNSS addresses in the routers is 
  out of scope in this document.  
  </t>
 

</section>

<section title="Neighbor Discovery Extension">
    <t>The IPv6 DNS configuration mechanism in this document needs a new ND
    option in Neighbor Discovery: the Recursive DNS Server (RDNSS) option.
    </t>

    <section title="Recursive DNS Server Option">
        <t>RDNSS option contains one or more IPv6 addresses of recursive DNS servers.
        All of the addresses share the same lifetime value.  If it is
        desirable to have different lifetime values, multiple RDNSS
        options can be used. Figure 1 shows the format of RDNSS option.
        </t>


        <figure anchor="rdnss-option-format" title="Recursive DNS Server (RDNSS) Option Format">
            <artwork><![CDATA[
   0                   1                   2                   3  
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1  
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
  |     Type      |     Length    |           Reserved            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
  |                           Lifetime                            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
  |                                                               | 
  :            Addresses of IPv6 Recursive DNS Servers            : 
  |                                                               | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
            ]]></artwork>
        </figure>


    <t>Fields:</t>

            <artwork><![CDATA[
     Type          8-bit identifier of the option type
                         Option Name               Type
                         RDNSS option              25

     Length        8-bit unsigned integer.  The length of the
                   option (including the Type and Length fields) is
                   in units of 8 octets.  The minimum value is 0x03
                   if one IPv6 address is contained in the option.
                   Every additional RDNSS address increases the
                   length by 0x02.  The Length field is used by
                   the receiver to determine the number of IPv6
                   addresses in the option.
            ]]></artwork>
            <artwork><![CDATA[

     Lifetime      32-bit unsigned integer.  The maximum time, in
                   seconds (relative to the time the packet is sent),
                   over which this RDNSS MAY be used for name 
                   resolution.  Hosts MAY send a Router Solicitation 
                   to ensure the RDNSS information is fresh before
                   the interval expires.  In order to provide fixed
                   hosts with the stable DNS service and allow mobile
                   hosts to prefer local RDNSSes to remote RDNSSes,
                   the value of Lifetime should be at least as long
                   as the Maximum RA Interval (MaxRtrAdvInterval) in 
                   RFC 2461, and be at most as long as two times
                   MaxRtrAdvInterval; Lifetime SHOULD be bounded as
                   follows:
                   MaxRtrAdvInterval <= Lifetime <= 2*MaxRtrAdvInterval.
                   A value of all one bits (0xffffffff) represents
                   infinity.  A value of zero means that the RDNSS
                   MUST no longer be used.

     Addresses of IPv6 Recursive DNS Servers
                   One or more 128-bit IPv6 addresses of the
                   recursive DNS servers.  The number of addresses
                   is determined by the Length field.  That is,
                   the number of addresses is equal to
                   (Length - 1) / 2.
            ]]></artwork>

    </section>

    <section title="Procedure of DNS Configuration">
        <t>The procedure of DNS configuration through RDNSS option is the same as
        any other ND option <xref target="rfc2461" />.
        </t>

        <section title="Procedure in IPv6 Host">
            <t>When an IPv6 host receives RDNSS option through RA, it checks whether the option is valid.
            </t>


            <list style="symbols"> 
                <t>If the RDNSS option is present, the host SHOULD copy the option's value into
                the DNS Server List and the Resolver Repository as
                long as the value of the Length field is greater than or
                equal to the minimum value (0x03).  The host MAY ignore additional RDNSS addresses within
        				an RDNSS option and/or additional RDNSS options within an RA when it has gathered a  
        				sufficient number of RDNSSes.
                </t>


                <t>If the RDNSS option is present but invalid (e.g.,
                the Length field has a value less than 0x03),
                the host SHOULD discard the option.
                </t>
            </list>
        </section>
    </section>
</section>

<section title="Implementation Considerations">

  <t><list style="hanging">
  <t hangText="Note:">
        This non-normative section gives some hints for implementing the processing of RDNSS option
    		in an IPv6 host.
        </t>
  </list></t>


    <t>For the configuration and management of RDNSS information, the advertised
  	RDNSS addresses can be stored and managed in both the DNS Server List and the Resolver Repository. 
    </t>

    <t>In environments where the RDNSS information is stored in user space
  	and ND runs in the kernel, it is necessary to synchronize the DNS
  	Server List for RDNSSes in kernel space and the Resolver Repository 
  	in user space.  For the synchronization, the implementation where ND
  	works in the kernel should provide the write operation for updating RDNSS information
  	from the kernel to the Resolver Repository.  One simple approach 
  	is to have a daemon (or a program that is called at defined
  	intervals) that keeps monitoring the lifetime of RDNSSes all the time.  
  	Whenever there is an expired entry in the DNS Server List, the daemon can delete the
  	corresponding entry from the Resolver Repository.
    </t>

    <section title="DNS Server List Management">
        <t>The kernel or user-space process (depending on where RAs are processed) should maintain
    		a data structure called a DNS Server List which keeps the list of RDNSSes.
        Each entry in the DNS Server List consists of an RDNSS address and Expiration-time as follows: 
        </t>


                <list style="symbols"> 
                		<t>RDNSS address: IPv6 address of the Recursive DNS Server, which is available for
          					recursive DNS resolution service in the network advertising the RDNSS option;
          					such a network is called site in this document.
                		</t>
    

                    <t>Expiration-time: Expiration time field giving the time when this
          	entry becomes invalid.  Expiration-time is set to the
          	value of the Lifetime
          	field of the RDNSS option plus the current system time.  Whenever a new
          	RDNSS option with the same address is received, this field is updated
          	to have a new expiration time.   When Expiration-time becomes less than
          	the current system time, this entry is regarded as expired.
                    </t>
    
                </list>


  <t><list style="hanging">
<t hangText="Note:">
  An RDNSS MUST be used only as long as both the RA router lifetime and
  the RDNSS option lifetime have not expired. 
  The reason is that the RDNSS may not be currently reachable or may not provide service to the  
  host's current address (e.g., due to the network ingress filtering
  <xref target="draft-ietf-dnsop-reflectors-are-evil" /><xref target="bcp38-rfc2827" />).
  </t>
  </list></t>
    </section>

    <section title="Synchronization between DNS Server List and Resolver Repository">
        <t>When an IPv6 host receives the information of multiple RDNSSes within
        a site through an RA message with RDNSS option(s), it stores the RDNSS
        addresses (in order) into both the DNS Server List and the Resolver Repository.  The
        processing of the RDNSS option included in an RA message is as follows:
        </t>


                <list style="empty">
                    <t>Step (a): Receive and parse RDNSS option(s).  For the RDNSS addresses in each RDNSS option, 
                    perform Step (b) through Step (d).  Note that Step (e) is performed whenever an entry expires
                    in the DNS Server List.
                    </t>


                    <t>Step (b): For each RDNSS address, check the following: If the RDNSS address already
                    exists in the DNS Server List and the RDNSS option's Lifetime field is set to zero, 
                    delete the corresponding RDNSS entry from both the DNS Server List and the 
                    Resolver Repository in order to prevent the RDNSS from
                    being used any more for certain reasons 
                    in network management, e.g., the breakdown of the RDNSS or a renumbering situation.
                    The processing of this RDNSS address is finished here.  Otherwise, go to Step (c).  
                    </t>
    

                    <t>Step (c): For each RDNSS address, if it already exists in the DNS Server List,
                    then just update the value of Expiration-time field to have a new expiration time 
                    with the RDNSS option's Lifetime field and the current system time.  
                    Otherwise, go to Step (d).
                    </t>

 
                    <t>Step (d): For each RDNSS address, if it does not exist in the DNS Server List, 
                    register the RDNSS address and lifetime with the DNS Server List and then insert 
                    the RDNSS address in front of the Resolver Repository.
                    In the case where the data structure for the DNS Server List is full of RDNSS entries, 
                    delete from the DNS Server List the entry with the
                    shortest expiration time (i.e., the entry that will expire first).
                    The corresponding RDNSS address is also deleted from the Resolver Repository.

                    In the order in the RDNSS option, position the newly added RDNSS addresses 
                    in the front of the Resolver Repository so that the RDNSS addresses may be preferred 
                    according to their order in the RDNSS option for the DNS name resolution.
                    The processing of these RDNSS addresses is finished here.
                    Note that, in the case where there are several routers advertising 
                    RDNSS option(s) in a subnet, the RDNSSes that have
                    been announced recently are preferred.
                    </t>
  

                    <t>Step (e): Delete each expired entry from DNS
                    Server List, and delete
                    the RDNSS address corresponding to the entry from the Resolver Repository.
                    </t>
                </list>

    </section>
</section>

<section anchor="security-considerations" title="Security Considerations">
    <t>The security of RA option for RDNSS might be worse than ND protocol 
    security <xref target="rfc2461" />.  However, any new vulnerability is
    not known yet in this RA option.
    In this context, it can be claimed that the vulnerability of ND is not worse and is a
    subset of the attacks that any node attached to a LAN can do
    independently of ND.  A malicious node on a LAN can promiscuously
    receive packets for any router's MAC address and send packets with
    the router's MAC address as the source MAC address in the L2 header.
    As a result, the L2 switches send packets addressed to the router to
    the malicious node.  Also, this attack can send redirects that tell
    the hosts to send their traffic somewhere else.  The malicious node
    can send unsolicited RA or Neighbor Advertisement (NA) 
replies, answer RS or Neighbor Solicitation (NS) requests, etc.
    Also, an attacker could configure a host to send out RA with
    a fraudulent RDNSS address, which is presumably an easier avenue of attack
    than becoming a rogue router and having to process all traffic for the subnet.
    It is necessary to disable the RA RDNSS option in both routers and clients
    administratively to avoid this problem.
    All of this can be done independently of implementing ND. 
    Therefore, it can be claimed that the RA option for RDNSS has 
    vulnerabilities similar to those existing in current mechanisms.
    </t>
    
    <t>If Secure Neighbor Discovery (SEND) protocol is used as the security mechanism for ND,
    all the ND options including the RDNSS option are automatically included in the
    signatures <xref target="rfc3971" />, so the RDNSS transport is integrity-protected.  
    However, since any valid SEND node can still insert RDNSS options, SEND cannot verify who
    is or is not authorized to send the options.
    </t>
   
</section>

<section title="IANA Considerations">
    <t>The IANA has assigned a new IPv6 Neighbor Discovery Option type
    for the RDNSS option defined in this document.
    
      <artwork><![CDATA[
              Option Name               Type
              RDNSS option              25
      ]]></artwork>
    </t>
	  <t>The IANA registry for these options is:
      <artwork><![CDATA[
    http://www.iana.org/assignments/icmpv6-parameters
      ]]></artwork>
    </t>    
</section>

<section title="Acknowledgements">

    <t>This document has greatly benefited from inputs by Robert Hinden, 
    Pekka Savola, Iljitsch van Beijnum, Brian Haberman and Tim Chown.  
  The authors appreciate their contributions.
    </t>

</section>

</middle>

<back>

<references title="Normative References">

    <reference anchor="rfc2119">
        <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author initials="S." surname="Bradner" />
            <date month="March" year="1997" />
        </front>
        <seriesInfo name="BCP" value="14" />
        <seriesInfo name="RFC" value="2119" />
    </reference>  

    <reference anchor="rfc2461">
        <front>
            <title>Neighbor Discovery for IP Version 6 (IPv6)</title>
            <author initials="T." surname="Narten" />
            <author initials="E." surname="Nordmark" />
            <author initials="W." surname="Simpson" />
            <date month="December" year="1998" />
        </front>
        <seriesInfo name="RFC" value="2461" />
    </reference>  

    <reference anchor="rfc2462">
        <front>
            <title>IPv6 Stateless Address Autoconfiguration</title>
            <author initials="S." surname="Thomson" />
            <author initials="T." surname="Narten" />
            <date month="December" year="1998" />
        </front>
        <seriesInfo name="RFC" value="2462" />
    </reference>  

</references>
    
<references title="Informative References">

    <reference anchor="rfc1034">
        <front>
            <title>Domain Names - Concepts and Facilities</title>
            <author initials="P." surname="Mockapetris" />
            <date month="November" year="1987" />
        </front>
        <seriesInfo name="RFC" value="1034" />
    </reference>  

    <reference anchor="rfc1035">
        <front>
            <title>Domain Names - Implementation and Specification</title>
            <author initials="P." surname="Mockapetris" />
            <date month="November" year="1987" />
        </front>
        <seriesInfo name="RFC" value="1035" />
    </reference>  

    <reference anchor="rfc3315">
        <front>
            <title>Dynamic Host Configuration Protocol for IPv6 (DHCPv6)</title>
            <author role='editor' initials="R." surname="Droms" />
            <date month="July" year="2003" />
        </front>
        <seriesInfo name="RFC" value="3315" />
    </reference>  

    <reference anchor="rfc3736">
        <front>
            <title>Stateless Dynamic Host Configuration Protocol (DHCP) Service for IPv6</title>
            <author initials="R." surname="Droms" />
            <date month="April" year="2004" />
        </front>
        <seriesInfo name="RFC" value="3736" />
    </reference>  

    <reference anchor="rfc3646">
        <front>
            <title>DNS Configuration options for Dynamic Host Configuration Protocol for IPv6 (DHCPv6)</title>
            <author role='editor' initials="R." surname="Droms" />
            <date month="December" year="2003" />
        </front>
        <seriesInfo name="RFC" value="3646" />
    </reference>  

    <reference anchor="rfc4339">
        <front>
            <title>IPv6 Host Configuration of DNS Server Information Approaches</title>
            <author role='editor' initials="J." surname="Jeong" />
            <date month="February" year="2006" />
        </front>
        <seriesInfo name="RFC" value="4339" />
    </reference>  

    <reference anchor="rfc3775">
        <front>
            <title>Mobility Support in IPv6</title>
            <author initials="D." surname="Johnson" />
            <author initials="C." surname="Perkins" />
            <author initials="J." surname="Arkko" />
            <date month="June" year="2004" />
        </front>
        <seriesInfo name="RFC" value="3775" />
    </reference>  

    <reference anchor="rfc3971">
        <front>
            <title>SEcure Neighbor Discovery (SEND)</title>
            <author role='editor' initials="J." surname="Arkko" />
            <date month="March" year="2005" />
        </front>
        <seriesInfo name="RFC" value="3971" />
    </reference>  

    <reference anchor="ieee-802.11">
        <front>
            <title>Part 11: Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) Specifications</title>
            <author surname="ANSI/IEEE Std 802.11" />
            <date month="March" year="1999" />
        </front>
    </reference>  

    <reference anchor="ieee-802.11a">
        <front>
            <title>Part 11: Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) specifications: High-speed Physical Layer in the 5 GHZ Band</title>
            <author surname="IEEE Std 802.11a" />
            <date month="September" year="1999" />
        </front>
    </reference>  

    <reference anchor="ieee-802.11b">
        <front>
            <title>Part 11: Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) specifications: Higher-Speed Physical Layer Extension in the 2.4 GHz Band</title>
            <author surname="IEEE Std 802.11b" />
            <date month="September" year="1999" />
        </front>
    </reference>  

    <reference anchor="ieee-802.11g">
        <front>
            <title>Part 11: Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) specifications: Further Higher Data Rate Extension in the 2.4 GHz Band</title>
            <author surname="IEEE P802.11g/D8.2" />
            <date month="April" year="2003" />
        </front>
    </reference>  

    <reference anchor="draft-ietf-dnsop-reflectors-are-evil">
        <front>
            <title>Preventing Use of Recursive Nameservers in Reflector Attacks</title>
            <author initials="J." surname="Damas" />
            <author initials="F." surname="Neves" />
            <date month="July" year="2007" />
        </front>
        <seriesInfo name="Work" value="in Progress" />
    </reference>  

    <reference anchor="bcp38-rfc2827">
        <front>
            <title>Network Ingress Filtering: Defeating Denial of Service Attacks which employ IP Source Address Spoofing</title>
            <author initials="P." surname="Ferguson" />
            <author initials="D." surname="Senie" />
            <date month="May" year="2000" />
        </front>
        <seriesInfo name="BCP" value="38" />
        <seriesInfo name="RFC" value="2827" />
    </reference>
</references>

</back>

<vspace blankLines="100"/> <!-- page break to put addresses onto one page-->

</rfc>
