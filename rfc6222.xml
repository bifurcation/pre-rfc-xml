<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY __reference.RFC.3550 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3550.xml">
<!ENTITY __reference.RFC.2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY __reference.RFC.1918 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY __reference.RFC.4122 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4122.xml">
<!ENTITY __reference.RFC.4193 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4193.xml">
<!ENTITY __reference.RFC.5389 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5389.xml">
<!ENTITY __reference.RFC.3022 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3022.xml">
<!ENTITY __reference.RFC.3711 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3711.xml">
<!ENTITY __reference.RFC.4941 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4941.xml">
<!ENTITY __reference.RFC.4648 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4648.xml">
<!ENTITY __reference.RFC.4634 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4634.xml">
<!ENTITY __reference.RFC.5952 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5952.xml">
<!ENTITY __reference.RFC.5905 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5905.xml">
<!ENTITY __reference.RFC.4291 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4291.xml">
<!ENTITY __reference.RFC.5342 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5342.xml">
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc iprnotified="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no" ?>
<?rfc sortrefs="no" ?>
<?rfc colonspace='yes' ?>
<?rfc tocindent='yes' ?>
<?rfc rfcedstyle="yes" ?>

<rfc category="std" consensus="yes" number="6222" ipr="trust200902" updates="3550">

  <front>
    <title abbrev="Choosing an RTCP CNAME">Guidelines for Choosing RTP Control
    Protocol (RTCP) Canonical&nbsp;Names&nbsp;(CNAMEs)</title>

    <author fullname="Ali Begen" initials="A." surname="Begen">
      <organization>Cisco</organization>
      <address>
        <postal>
          <street>181 Bay Street</street>
          <city>Toronto</city>
          <region>ON</region>
          <code>M5J 2T3</code>
          <country>CANADA</country>
        </postal>
        <email>abegen@cisco.com</email>
      </address>
    </author>

    <author fullname="Colin Perkins" initials="C." surname="Perkins">
      <organization>University of Glasgow</organization>
      <address>
        <postal>
          <street>School of Computing Science</street>
          <city>Glasgow</city>
          <code>G12 8QQ</code>
          <country>UK</country>
        </postal>
        <email>csp@csperkins.org</email>
      </address>
    </author>

    <author fullname="Dan Wing" initials="D." surname="Wing">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>170 West Tasman Dr.</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>USA</country>
        </postal>
        <email>dwing@cisco.com</email>
      </address>
    </author>

    <date month="April" year="2011" />

    <abstract>
      <t>The RTP Control Protocol (RTCP) Canonical Name (CNAME) is a
      persistent transport-level identifier for an RTP endpoint. While the
      Synchronization Source (SSRC) identifier of an RTP endpoint may change
      if a collision is detected or when the RTP application is restarted,
      its RTCP CNAME is meant to stay unchanged, so that RTP endpoints can be
      uniquely identified and associated with their RTP media streams. For
      proper functionality, RTCP CNAMEs should be unique within the
      participants of an RTP session. However, the existing guidelines for
      choosing the RTCP CNAME provided in the RTP standard are insufficient to
      achieve this uniqueness. This memo updates those guidelines to allow
      endpoints to choose unique RTCP CNAMEs.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="sec_introduction" title="Introduction">
      <t>In Section 6.5.1 of the RTP specification, <xref
      target="RFC3550"></xref>, there are a number of recommendations for
      choosing a unique RTCP CNAME for an RTP endpoint. However, in practice,
      some of these methods are not guaranteed to produce a unique RTCP CNAME.
      This memo updates guidelines for choosing RTCP CNAMEs, superseding those
      presented in Section 6.5.1 of <xref target="RFC3550"></xref>.</t>
    </section>

    <section title="Requirements Notation">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in <xref
      target="RFC2119"></xref>.</t>
    </section>

    <section title="Deficiencies with Earlier Guidelines for Choosing an RTCP CNAME">
      <t>The recommendation in <xref target="RFC3550"></xref> is to generate
      an RTCP CNAME of the form "user@host" for multiuser systems, or "host"
      if the username is not available. The "host" part is specified to be the
      fully qualified domain name (FQDN) of the host from which the real-time
      data originates. While this guidance was appropriate at the time <xref
      target="RFC3550"></xref> was written, FQDNs are no longer necessarily
      unique and can sometimes be common across several endpoints in large
      service provider networks. This document replaces the use of FQDN as an
      RTCP CNAME by alternative mechanisms.</t>

      <t>IPv4 addresses are also suggested for use in RTCP CNAMEs in <xref
      target="RFC3550"></xref>, where the "host" part of the RTCP CNAME is the
      numeric representation of the IPv4 address of the interface from which
      the RTP data originates. As noted in <xref target="RFC3550"></xref>, the
      use of private network address space <xref target="RFC1918"></xref> can
      result in hosts having network addresses that are not globally unique.
      Additionally, this shared use of the same IPv4 address can also occur
      with public IPv4 addresses if multiple hosts are assigned the same
      public IPv4 address and connected to a Network Address Translation (NAT)
      device <xref target="RFC3022"></xref>. When multiple hosts share the
      same IPv4 address, whether private or public, using the IPv4 address as
      the RTCP CNAME leads to RTCP CNAMEs that are not necessarily unique.</t>

      <t>It is also noted in <xref target="RFC3550"></xref> that if hosts with
      private addresses and no direct IP connectivity to the public Internet
      have their RTP packets forwarded to the public Internet through an
      RTP-level translator, they could end up having non-unique RTCP CNAMEs.
      The suggestion in <xref target="RFC3550"></xref> is that such applications
      provide a configuration option to allow the user to choose a unique RTCP
      CNAME; this technique puts the burden on the translator to
      translate RTCP CNAMEs
      from private addresses to public addresses if necessary to keep private
      addresses from being exposed. Experience has shown that this does not
      work well in practice.</t>
    </section>

    <section anchor="sec_cname" title="Choosing an RTCP CNAME">
      <t>It is difficult, and in some cases impossible, for a host to
      determine if there is a NAT between itself and its RTP peer.
      Furthermore, even some public IPv4 addresses can be shared by multiple
      hosts in the Internet. Using the numeric representation of the IPv4
      address as the "host" part of the RTCP CNAME is NOT RECOMMENDED.</t>

      <section anchor="sec_types"
               title="Persistent RTCP CNAMEs versus Per-Session RTCP CNAMEs">
        <t>The RTCP CNAME can be either persistent across different RTP
        sessions for an RTP endpoint or unique per session, meaning
        that an RTP endpoint chooses a different RTCP CNAME for each RTP
        session.</t>

        <t>An RTP endpoint that is emitting multiple related RTP streams that
        require synchronization at the other endpoint(s) MUST use the same
        RTCP CNAME for all streams that are to be synchronized. This requires
        a short-term persistent RTCP CNAME that is common across several RTP
        streams, and potentially across several related RTP sessions. A common
        example of such use occurs when lip-syncing audio and video streams in
        a multimedia session, where a single participant has to use the same
        RTCP CNAME for its audio RTP session and for its video RTP session.
        Another example might be to synchronize the layers of a layered audio
        codec, where the same RTCP CNAME has to be used for each layer.</t>

        <t>A longer-term persistent RTCP CNAME is sometimes useful to
        facilitate third-party monitoring, consistent with <xref
        target="RFC3550"></xref>. One such use might be to allow network
        management tools to correlate the ongoing quality of service for a
        participant across multiple RTP sessions for fault diagnosis, and to
        understand long-term network performance statistics. An implementation
        that wishes to discourage this type of third-party monitoring can
        generate a unique RTCP CNAME for each RTP session, or group of related
        RTP sessions, that it joins. Such a per-session RTCP CNAME cannot be
        used for traffic analysis, and so provides some limited form of
        privacy (note that there are non-RTP means that can be used by a
        third party to correlate RTP sessions, so the use of per-session RTCP
        CNAMEs will not prevent a determined traffic analyst from
        monitoring such sessions).</t>

        <t>This memo defines several different ways by which an implementation
        can choose an RTCP CNAME. It is possible, and legitimate, for
        independent implementations to make different choices of RTCP CNAME
        when running on the same host. This can hinder third-party monitoring,
        unless some external means is provided to configure a persistent
        choice of RTCP CNAME for those implementations.</t>

        <t>Note that there is no backwards compatibility issue (with <xref
        target="RFC3550"></xref>-compatible implementations) introduced in
        this memo, since the RTCP CNAMEs are opaque strings to remote
        peers.</t>
      </section>

      <section title="Requirements">
        <t>RTP endpoints will choose to generate RTCP CNAMEs that are
        persistent or per-session. An RTP endpoint that wishes to generate a
        persistent RTCP CNAME MUST use one of the following two methods:</t>

        <t><list style="symbols">
            <t>To produce a long-term persistent RTCP CNAME, an RTP endpoint
            MUST generate and store a Universally Unique IDentifier (UUID)
            <xref target="RFC4122"></xref> for use as the "host" part of its
            RTCP CNAME. The UUID MUST be version 1, 2, or 4, as
            described in <xref target="RFC4122"></xref>, with the
            "urn:uuid:" stripped, resulting
            in a 36-octet printable string representation.</t>

            <t>To produce a short-term persistent RTCP CNAME, an RTP endpoint
            MUST either (a) use the numeric representation of the layer-2
            (Media Access Control (MAC)) address of the interface
            that is used to initiate the RTP
            session as the "host" part of its RTCP CNAME or (b) generate and
            use an identifier by following the procedure described in <xref
            target="identifier"></xref>. In either case, the procedure is
            performed once per initialization of the software. After obtaining
            an identifier by doing (a) or (b), the least significant 48 bits
            are converted to the standard colon-separated hexadecimal format
            <xref target="RFC5342"></xref>, e.g., "00:23:32:af:9b:aa",
            resulting in a 17&nbhy;octet printable string representation.</t>
          </list></t>

        <t>In the two cases above, the "user@" part of the RTCP CNAME MAY be
        omitted on single-user systems and MAY be replaced by an opaque token
        on multi-user systems, to preserve privacy.</t>

        <t>An RTP endpoint that wishes to generate a per-session RTCP CNAME
        MUST use the following method:</t>

        <t><list style="symbols">
            <t>For every new RTP session, a new CNAME is generated following
            the procedure described in <xref target="identifier"></xref>.
            After performing that procedure, the least significant 96 bits are
            used to generate an identifier (to compromise between packet size
            and security), which is converted to ASCII using
            Base64 encoding <xref target="RFC4648"></xref>.
            This results in a 16-octet string
            representation. The RTCP CNAME cannot change over the life of an
            RTP session <xref target="RFC3550"></xref>; hence, only the
            initial SSRC value chosen by the endpoint is used. The "user@"
            part of the RTCP CNAME is omitted when generating
            per&nbhy;session RTCP CNAMEs.</t>
          </list></t>

        <t>It is believed that obtaining uniqueness (with a high probability)
        is an important property that requires careful evaluation of the
        method. This document provides a number of methods, at least one of
        which would be suitable for all deployment scenarios. This document
        therefore does not provide for the implementor to define and select an
        alternative method.</t>

        <t>A future specification might define an alternative method for
        generating RTCP CNAMEs, as long as the proposed method has appropriate
        uniqueness and there is consistency between the methods used for
        multiple RTP sessions that are to be correlated. However, such a
        specification needs to be reviewed and approved before deployment.</t>

        <t>The mechanisms described in this document are to be used to
        generate RTCP CNAMEs, and they are not to be used for generating
        general-purpose unique identifiers.</t>
      </section>
    </section>

    <section anchor="identifier"
             title="Procedure to Generate a Unique Identifier">
      <t>The algorithm described below is intended to be used for
      locally generated unique identifiers.</t>

      <t><list style="numbers">
          <t>Obtain the current time of day in 64-bit NTP format <xref
          target="RFC5905"></xref>.</t>

          <t>Obtain a modified EUI-64 identifier from the system running this
          algorithm <xref target="RFC4291"></xref>. If such a system
          does not exist, an identifier can be created from a 48-bit
          MAC address, as specified in <xref target="RFC4291"></xref>.
          If one cannot be obtained or created, a
          suitably unique identifier, local to the node, should be used (e.g.,
          system serial number).</t>

          <t>Concatenate the time of day with the system-specific identifier
          in order to create a key.</t>

          <t>If generating a per-session CNAME, also concatenate the RTP
          endpoint's initial SSRC, the source and destination IP addresses,
          and ports to the key.</t>

          <t>Compute the 256-bit output of the SHA-256 digest of the key,
          as specified in <xref target="RFC4634"></xref>.</t>
        </list></t>

    </section>

    <section anchor="sec_security_considerations"
             title="Security Considerations">
      <t>The security considerations of <xref target="RFC3550"></xref> apply
      to this memo.</t>

      <section title="Considerations on Uniqueness of RTCP CNAMEs">
        <t>The recommendations given in this document for RTCP CNAME
        generation ensure that a set of cooperating participants in an
        RTP session will, with very high probability,
        have unique RTCP CNAMEs. However, neither
        <xref target="RFC3550"></xref> nor this document provides any way to
        ensure that participants will choose RTCP CNAMEs appropriately, and
        thus implementations MUST NOT rely on the uniqueness of CNAMEs for any
        essential security services. This is consistent with <xref
        target="RFC3550"></xref>, which does not require that RTCP CNAMEs are
        unique within a session but instead says that condition SHOULD hold.
        As described in the Security Considerations section of <xref
        target="RFC3550"></xref>, because each participant in a session is
        free to choose its own RTCP CNAME, they can do so in such a way as to
        impersonate another participant. That is, participants are trusted to
        not impersonate each other. No recommendation for generating RTCP
        CNAMEs can prevent this impersonation, because an attacker can
        neglect
        the stipulation. Secure RTP (SRTP) <xref target="RFC3711"></xref>
        keeps unauthorized entities out of an RTP session, but it does not
        aim to prevent impersonation attacks from unauthorized entities.</t>

        <t>This document uses a hash function to ensure the uniqueness of RTCP
        CNAMEs. A cryptographic hash function is used because such functions
        provide the randomness properties that are needed. However, no
        security assumptions are made on the hash function. The hash function
        is not assumed to be collision resistant, preimage resistant, or
        second preimage resistant in an adversarial setting; as described
        above, an attacker attempting an impersonation attack could merely set
        the RTCP CNAME directly rather than attacking the hash function.
        Similarly, the hash function is not assumed to be a one-way function
        or pseudorandom in a cryptographic sense.</t>

        <t>No confidentiality is provided on the data used as input to the
        RTCP CNAME generation algorithm. It might be possible for an attacker
        who observes an RTCP CNAME to determine the inputs that were used to
        generate that value.</t>
      </section>

      <section title="Session Correlation Based on RTCP CNAMEs">
        <t>In some environments, notably telephony, a fixed RTCP CNAME value
        allows separate RTP sessions to be correlated and eliminates the
        obfuscation provided by IPv6 privacy addresses <xref
        target="RFC4941"></xref> or IPv4 Network Address Port Translation
        (NAPT) <xref target="RFC3022"></xref>.
        SRTP <xref target="RFC3711"></xref> can help prevent such correlation
        by encrypting Secure RTCP (SRTCP), but it should be noted that SRTP
        only mandates SRTCP integrity protection (not encryption). Thus, RTP
        applications used in such environments should consider encrypting
        their SRTCP or generate a per-session RTCP CNAME as discussed in <xref
        target="sec_types"></xref>.</t>
      </section>
    </section>

    <section title="Acknowledgments">
      <t>Thanks to Marc Petit-Huguenin, who suggested using UUIDs in
      generating RTCP CNAMEs. Also, thanks to David McGrew for providing text
      for the Security Considerations section.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      &__reference.RFC.3550;

      &__reference.RFC.2119;

      &__reference.RFC.4122;

      &__reference.RFC.4634;

      &__reference.RFC.4648;

      &__reference.RFC.5905;

      &__reference.RFC.4291;

      &__reference.RFC.5342;
    </references>

    <references title="Informative References">
      &__reference.RFC.1918;

      &__reference.RFC.3022;

      &__reference.RFC.3711;

      &__reference.RFC.4941;
    </references>
  </back>
</rfc>
