<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" 

<?rfc subcompact="no"?>
<rfc number="5416" category="std">
<?rfc toc="yes"?>
<?rfc rfcedstyle="yes"?>
  <front>
    <title abbrev= "CAPWAP Protocol Binding for IEEE 802.11"> Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Binding for IEEE 802.11</title>

   <author initials="P.C." surname="Calhoun" fullname="Pat R. Calhoun" role="editor">
     <organization>Cisco Systems, Inc.</organization>
     <address>
       <postal>
         <street>170 West Tasman Drive</street>
         <city>San Jose</city> <region>CA</region> <code>95134</code>
       </postal>
       <phone>+1 408-902-3240</phone>
       <email>pcalhoun@cisco.com</email>
     </address>
   </author>

   <author initials="M.M." surname="Montemurro" fullname="Michael P. Montemurro" role="editor">
     <organization>Research In Motion</organization>
     <address>
       <postal>
         <street>5090 Commerce Blvd</street>
         <city>Mississauga</city> <region>ON</region> <country>Canada</country> <code>L4W 5M4</code>
       </postal>
       <phone>+1 905-629-4746 x4999</phone>
       <email>mmontemurro@rim.com</email>
     </address>
   </author>

   <author initials="D.S." surname="Stanley" fullname="Dorothy Stanley" role="editor">
     <organization>Aruba Networks</organization>
     <address>
       <postal>
         <street>1322 Crossman Ave</street>
         <city>Sunnyvale</city> <region>CA</region> <code>94089</code>
       </postal>
       <phone>+1 630-363-1389</phone>
       <email>dstanley@arubanetworks.com</email>
     </address>
   </author>

   <date month="March" year="2009" />
   <area>Operations and Management</area>
   <workgroup>Network Working Group</workgroup>
   <keyword>LWAPP</keyword>
   <keyword>CAPWAP</keyword>
   <keyword>802.11</keyword>
   <keyword>IEEE</keyword>
   <keyword>Wireless LAN</keyword>
   <keyword>WiFi</keyword>
   <keyword>Access Point</keyword>
   <keyword>Access Controller</keyword>
   <keyword>Wireless Termination Point</keyword>

<note title="">
<t>
 This document may contain material from IETF Documents or IETF
 Contributions published or made publicly available before November 10,
 2008. The person(s) controlling the copyright in some of this material
 may not have granted the IETF Trust the right to allow modifications
 of such material outside the IETF Standards Process.  Without
 obtaining an adequate license from the person(s) controlling the
 copyright in such materials, this document may not be modified outside
 the IETF Standards Process, and derivative works of it may not be
 created outside the IETF Standards Process, except to format it for
 publication as an RFC or to translate it into languages other than
 English.
</t>
</note>

   <abstract>
      <t>Wireless LAN product architectures have evolved from single autonomous
	  access points to systems consisting of a centralized Access Controller
	  (AC) and Wireless Termination Points (WTPs). The general goal of
	  centralized control architectures is to move access control, including
	  user authentication and authorization, mobility management, and radio
	  management from the single access point to a centralized controller.</t>

	  <t>This specification defines the Control And Provisioning of
	  Wireless Access Points (CAPWAP) Protocol Binding Specification for use
	  with the IEEE 802.11 Wireless Local Area Network protocol. </t>

   </abstract>
  </front>
  <middle>
   <section title="Introduction">

	<t>The CAPWAP protocol <xref target="RFC5415">
	</xref> defines an extensible protocol to allow an Access Controller to
	manage wireless agnostic Wireless Termination Points. The CAPWAP protocol
	itself does not include any specific wireless technologies; instead, it
	relies on a binding specification to extend the technology to a particular
	wireless technology.</t>

	<t>This specification defines the Control And Provisioning of Wireless
	Access Points (CAPWAP) Protocol Binding Specification for use with the IEEE
	802.11 Wireless Local Area Network protocol. Use of CAPWAP control message 
	fields, new control messages, and message elements are defined. The minimum
	required definitions for a binding-specific Statistics message element,
	Station message element, and WTP Radio Information message element are
	included.</t>

	<t>Note that this binding only supports the IEEE 802.11-2007 specification.
	Of note, this binding does not support the ad hoc network mode defined in
	the IEEE 802.11-2007 standard. This specification also does not cover the
	use of data frames with the four-address format, commonly referred to as
	Wireless Bridges, whose use is not specified in the IEEE 802.11-2007
	standard.  This protocol specification does not currently officially
	support IEEE 802.11n. That said, the protocol does allow a WTP to
	advertise support for an IEEE 802.11n radio; however, the protocol does
	not allow for any of the protocol's additional features to be configured
	and/or used. New IEEE protocol specifications published outside of this
	document (e.g., IEEE 802.11v, IEEE 802.11r) are also not supported
	through this binding, and in addition to IEEE 802.11n, must be addressed
	either through a separate CAPWAP binding, or an update to this binding.</t>
<!-- [PRC] The above changes was agreed upon by the ADs during the IESG review. -->

	<t>In order to address immediate market needs for standards still being
	developed by the IEEE 802.11 standards body, the WiFi Alliance created
	interim pseudo-standards specifications. Two such specifications are widely
	used in the industry, namely the WiFi Protect Access <xref target="WPA"/>
	and the WiFi MultiMedia <xref target="WMM"/> specifications. Given their 
	widespread adoption, this CAPWAP binding requires the use of these two
	specifications.</t>

	 <section title="Goals">

	<t>The goals of this CAPWAP protocol binding are to make the capabilities of
	the CAPWAP protocol available for use in conjunction with IEEE 802.11
	wireless networks. The capabilities to be made available can be summarized
	as:</t>

	<list style="hanging">
	<t hangText="1.">To centralize the authentication and policy enforcement
	functions for an IEEE 802.11 wireless network. The AC may also provide
	centralized bridging, forwarding, and encryption of user traffic.
	Centralization of these functions will enable reduced cost and higher
	efficiency by applying the capabilities of network processing silicon to the
	wireless network, as in wired LANs.</t>

	<t hangText="2."> To enable shifting of the higher-level protocol processing
	from the WTP. This leaves the time-critical applications of wireless control
	and access in the WTP, making efficient use of the computing power available 
	in WTPs that are subject to severe cost pressure.</t>

	</list>

	<t>The CAPWAP protocol binding extensions defined herein apply solely to the
	interface between the WTP and the AC. Inter-AC and station-to-AC
	communication are strictly outside the scope of this document.</t>

	</section>

	<section title="Conventions Used in This Document">
		<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
		"SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in
		this document are to be interpreted as described in <xref target="RFC2119">
		RFC 2119</xref>.</t>
	</section> <!-- Conventions used in this document -->

  	<section anchor="Terminology" title="Terminology">		
		<t>This section contains definitions for terms used frequently
		throughout this document. However, many additional definitions can be
		found in <xref target="IEEE.802-11.2007"></xref>.</t>

		<t>Access Controller (AC): The network entity  that provides WTP 
		access to the network infrastructure in the data plane, control plane,
   		management plane, or a combination therein.
		</t>

		<t>Basic Service Set (BSS): A set of stations controlled by a single
		coordination function.</t>

		<t>Distribution: The service that, by using association information,
		delivers medium access control (MAC) service data units (MSDUs)
		within the distribution system (DS).</t>

		<t>Distribution System Service (DSS): The set of services provided by
		the distribution system (DS) that enable the medium access control
		(MAC) layer to transport MAC service data units (MSDUs) between
		stations that are not in direct communication with each other over a
		single instance of the wireless medium (WM).  These services include
		the transport of MSDUs between the access points (APs) of basic
		service sets (BSSs) within an extended service set (ESS), transport
		of MSDUs between portals and BSSs within an ESS, and transport of
		MSDUs between stations in the same BSS in cases where the MSDU has a
		multicast or broadcast destination address, or where the destination
		is an individual address but the station sending the MSDU chooses to
		involve the DSS.  DSSs are provided between pairs of IEEE 802.11 MACs.</t>

		<t>Integration: The service that enables delivery of medium access
		control (MAC) service data units (MSDUs) between the distribution
		system (DS) and an existing, non-IEEE 802.11 local area network (via
		a portal).</t>

		<t>Station (STA): A device that contains an IEEE 802.11 conformant
		medium access control (MAC) and physical layer (PHY) interface to the
		wireless medium (WM).</t>

		<t>Portal: The logical point at which medium access control (MAC)
		service data units (MSDUs) from a non-IEEE 802.11 local area network
		(LAN) enter the distribution system (DS) of an extended service set
		(ESS).</t>

		<t>WLAN: In this document, WLAN refers to a logical component
		instantiated on a WTP device. A single physical WTP may operate a number
		of WLANs. Each Basic Service Set Identifier (BSSID) and its constituent
		wireless terminal radios is denoted as a distinct WLAN on a physical
		WTP.</t>

		<t>Wireless Termination Point (WTP): The physical or network entity that
   		contains an IEEE 802.11 RF antenna and wireless PHY to transmit and receive 
   		station traffic for wireless access networks.
		</t>
	</section> <!-- Terminology -->
 
	</section> <!-- Introduction -->


    <section anchor="IEEE 802.11 Binding" title="IEEE 802.11 Binding">
	<t>This section describes use of the CAPWAP protocol with the IEEE 802.11
	Wireless Local Area Network protocol, including Local and Split MAC
	operation, Group Key Refresh, Basic Service Set Identification (BSSID) to
	WLAN Mapping, IEEE 802.11 MAC management frame Quality of Service (Qos) tagging
	and Run State operation.</t>

    <section title="CAPWAP Wireless Binding Identifier"
	anchor="CAPWAP Wireless Binding Identifier">
	<t>The CAPWAP Header, defined in Section 4.3 of
	<xref target="RFC5415"> </xref> requires that
	all CAPWAP binding specifications have a Wireless Binding Identifier (WBID)
	assigned. This document, which defines the IEEE 802.11 binding, uses the
	value one (1).</t>
	</section>

    <section title="Split MAC and Local MAC Functionality">
	<t>The CAPWAP protocol, when used with IEEE 802.11 devices, requires
	specific behavior from the WTP and the AC to support the required IEEE
	802.11 protocol functions.</t>

	<t>For both the Split and Local MAC approaches, the CAPWAP functions,
	as defined in the taxonomy specification <xref target="RFC4118">
	</xref>, reside in the AC.</t>

	<t>To provide system component interoperability, the WTP and AC MUST support
	802.11 encryption/decryption at the WTP. The WTP and AC MAY support 802.11
	encryption/decryption at the AC.</t>

    <section title="Split MAC">
	<t>This section shows the division of labor between the WTP and the
	AC in a Split MAC architecture. <xref target="split-function-distribution">
	</xref> shows the separation of functionality between CAPWAP
	components.</t>

<figure anchor="split-function-distribution" title="Mapping of 802.11 Functions
for Split MAC Architecture">
<artwork>
     Function                               Location
	 Distribution Service                      AC
	 Integration Service                       AC
	 Beacon Generation                         WTP
	 Probe Response Generation                 WTP
	 Power Mgmt/Packet Buffering               WTP
	 Fragmentation/Defragmentation             WTP/AC
	 Assoc/Disassoc/Reassoc                    AC

    IEEE 802.11 QoS
	 Classifying                               AC
	 Scheduling                                WTP/AC
	 Queuing                                   WTP

    IEEE 802.11 RSN
	 IEEE 802.1X/EAP                           AC
	 RSNA Key Management                       AC
	 IEEE 802.11 Encryption/Decryption         WTP/AC
</artwork>
</figure>

	<t>In a Split MAC Architecture, the Distribution and Integration services
	reside on the AC, and therefore all user data is tunneled between the WTP
	and the AC. As noted above, all real-time IEEE 802.11 services, including
	the Beacon and Probe Response frames, are handled on the WTP.</t>

	<t>All remaining IEEE 802.11 MAC management frames are supported on the AC,
	including the Association Request frame that allows the AC to be involved
	in the access policy enforcement portion of the IEEE 802.11 protocol. The
	IEEE 802.1X <xref target="IEEE.802-1X.2004"/>, Extensible Authentication
	Protocol (EAP) <xref target="RFC3748"></xref> and IEEE Robust Security
	Network Association (RSNA) Key Management
	<xref target="IEEE.802-11.2007"></xref> functions are also located on the
	AC. This implies that the Authentication, Authorization, and Accounting (AAA) client also resides on the AC.</t>

	<t>While the admission control component of IEEE 802.11 resides on the AC,
	the real-time scheduling and queuing functions are on the WTP. Note that
	this does not prevent the AC from providing additional policy and scheduling
	functionality.</t>

	<t>Note that in the following figure, the use of '( - )' indicates that
	processing of the frames is done on the WTP. This figure represents a case
	where encryption services are provided by the AC.</t>

<figure title="Split MAC Message Flow" anchor="Split MAC Message Flow">
<artwork>
          Client                      WTP                         AC

                   Beacon
	  &lt;-----------------------------
                Probe Request
	  ----------------------------( - )------------------------->
                Probe Response
	  &lt;-----------------------------
                           802.11 AUTH/Association
	  &lt;--------------------------------------------------------->
                                     Station Configuration Request
                                       [Add Station (Station MAC
                                       Address), IEEE 802.11 Add
                                       Station (WLAN ID), IEEE
                                       802.11 Session Key(Flag=A)]
	                                 &lt;-------------------------->
                 802.1X Authentication & 802.11 Key Exchange
	  &lt;--------------------------------------------------------->
                                     Station Configuration Request
                                       [Add Station(Station MAC
                                       Address), IEEE 802.11 Add
                                       Station (WLAN ID), IEEE 802.11
                                       Station Session Key(Flag=C)]
	                                 &lt;-------------------------->
                            802.11 Action Frames
 	  &lt;--------------------------------------------------------->
                                802.11 DATA (1)
	  &lt;---------------------------( - )------------------------->
</artwork></figure>

	<t><xref target="Split MAC Message Flow"/> provides an illustration of the
	division of labor in a Split MAC architecture. In this example, a WLAN
	has been created that is configured for IEEE 802.11, using 802.1X-based
	end user authentication and Advanced Encryption Standard-Counter Mode with CBC-MAC Protocol(AES-CCMP) link layer encryption (CCMP, see 
	<xref target="FIPS.197.2001"/>). The following process occurs:</t>
	<list style="hanging">
    <t hangText="o"> The WTP generates the IEEE 802.11 Beacon frames, using
	information provided to it through the IEEE 802.11 Add WLAN (see <xref
	target="IEEE-802.11-Add-WLAN"/>) message element, including the Robust Security Network Information Element (RSNIE), which
	indicates support of 802.1X and AES-CCMP.</t>
    <t hangText="o"> The WTP processes the Probe Request frame and responds with
	a corresponding Probe Response frame. The Probe Request frame is then
	forwarded to the AC for optional processing.</t>
    <t hangText="o"> The WTP forwards the IEEEE 802.11 Authentication and
	Association frames to the AC, which is responsible for responding to the
	client.</t>
    <t hangText="o"> Once the association is complete, the AC transmits a
	Station Configuration Request message, which includes an Add Station message
	element, to the WTP (see Section 4.6.8 in
	<xref target="RFC5415"> </xref>). In the
	above example, the WLAN was configured for IEEE 802.1X, and therefore the
	IEEE 802.11 Station Session Key is included with the flag field's 'A' bit
	set.</t>
	<t hangText="o"> If the WTP is providing encryption/decryption services,
	once the client has completed the IEEE 802.11 key exchange, the AC transmits
	another Station Configuration Request message, which includes:</t>
	<list style="hanging">
	<t hangText="-">An Add Station message element.</t>
	<t hangText="-">An IEEE 802.11 Add Station message element, which includes
	the WLAN Identifier with which the station has associated.</t>
	<t hangText="-">An IEEE 802.11 Station Session Key message element, which
	includes the pairwise encryption key.</t>
	<t hangText="-">An IEEE 802.11 Information Element message element, which
	includes the Robust Security Network Information Element (RSNIE) to the WTP,
	stating the security policy to enforce for the client (in this case
	AES-CCMP).</t>
	</list>
	<t hangText="o"> If the WTP is providing encryption/decryption services,
	once the client has completed the IEEE 802.11 key exchange, the AC transmits
	another Station Configuration Request message, which includes:</t>
	<list style="hanging">
	<t hangText="-">An Add Station message element.</t>
	<t hangText="-">An IEEE 802.11 Add Station message element, which includes
	the WLAN Identifier with which the station has associated.</t>
	<t hangText="-">An IEEE 802.11 Station Session Key message element, which
	includes the pairwise encryption key.</t>
	<t hangText="-">An IEEE 802.11 Information Element message element, which
	includes the Robust Security Network Information Element (RSNIE) to the WTP,
	stating the security policy to enforce for the client (in this case
	AES-CCMP).</t>
	</list>
	<t hangText="o"> If the AC is providing encryption/decryption services,
	once the client has completed the IEEE 802.11 key exchange, the AC transmits
	another Station Configuration Request message, which includes:</t>
	<list style="hanging">
	<t hangText="-">An Add Station message element.</t>
	<t hangText="-">An IEEE 802.11 Add Station message element, which includes
	the WLAN Identifier with which the station has associated.</t>
	<t hangText="-">An IEEE 802.11 Station Session Key message element with the
	flag field's 'C' bit enabled (indicating that the AC will provide crypto
	services).</t>
	</list>
    <t hangText="o"> The WTP forwards any IEEE 802.11 Management Action frames
	received to	the AC.</t>
    <t hangText="o"> All IEEE 802.11 station data frames are tunneled between the
	WTP and the AC. </t>
    </list>

	<t>Note that during the EAP over LAN (EAPOL)-Key exchange between the Station and the AC,
	the Receive Sequence Counter (RSC) field for the Group Key (GTK) needs to be included in
	the frame. The value of zero (0) is used by the AC during this exchange.
	Additional details are available in <xref target="IEEE 802.11 Security"/>.</t>

<!-- ISSUE 217 -->
	<t> The WTP SHALL include the IEEE 802.11 MAC header contents in all frames
	transmitted to the AC.</t>

	<t>When 802.11 encryption/decryption is performed at the WTP, the WTP MUST
	decrypt the uplink frames, MUST set the Protected Frame field to 0, and MUST
	make the frame format consistent with that of an unprotected 802.11 frame
	prior to transmitting the frames to the AC.  The fields added to an 802.11
	protected frame (i.e., Initialization Vector/Extended Initialization Vector
	(IV/EIV), Message Integrity Code (MIC), and Integrity Check Value (ICV))
	MUST be stripped off prior to transmission from the WTP to AC. For
	downlink frames, the Protected Frame field MUST be set to 0 by the AC as
	the frame being sent is unencrypted. The WTP MUST apply the required
	protection policy for the WLAN, and set the Protected Frame field on
	transmission over the air.  The Protected Frame field always needs to
	accurately indicate the status of the 802.11 frame that is carrying it.</t> 

	<t>When 802.11 encryption/decryption is performed at the AC, the WTP SHALL
	NOT decrypt the uplink frames prior to transmitting the frames to the AC.
	The AC and WTP SHALL populate the IEEE 802.11 MAC header fields as described
	in <xref target="mac-header-division"/>.</t>

<figure anchor="mac-header-division" title="Population of the IEEE 802.11 MAC Header Fields
	 for Downlink Frames">
 <artwork>
	MAC header field	Location
		Frame Control:		
			Version         AC
			ToDS            AC
			FromDS          AC
			Type            AC
			SubType         AC
			MoreFrag        WTP/AC 
			Retry           WTP
			Pwr Mgmt        -
			MoreData        WTP
			Protected       WTP/AC
			Order           AC
		Duration:           WTP
		Address 1:          AC
		Address 2:          AC
		Address 3:          AC
		Sequence Ctrl:      WTP 
		Address 4:          AC
		QoS Control:        AC
		Frame Body:         AC
		FCS:                WTP 
 </artwork>
 </figure>
 
 	<t>When 802.11 encryption/decryption is performed at the AC, the
 	MoreFrag bit is populated at the AC. The Pwr Mgmt bit is not applicable to
 	downlink frames, and is set to 0. Note that the Frame Check Sequence (FCS)
	field is not included in 802.11 frames exchanged between the WTP and the AC.
	Upon sending data frames to the AC, the WTP is responsible for validating
	and stripping the FCS field. Upon receiving data frames from the AC, the WTP
	is responsible for adding the FCS field, and populating the field as
	described in <xref target="IEEE.802-11.2007"></xref>.</t>
 <!-- /ISSUE 217 -->
 
 	<t>Note that when the WTP tunnels data packets to the AC (and vice versa),
	the CAPWAP protocol does not guarantee in-order delivery. When the protocol
	being transported over IEEE 802.11 is IP, out-of-order delivery is not 
	an issue as IP has no such requirements. However, implementers need to be
	aware of this protocol characteristic before deciding to use CAPWAP.</t>

	</section> <!-- Split MAC -->

    <section title="Local MAC">
	<t>This section shows the division of labor between the WTP and the
	AC in a Local MAC architecture. <xref target="local-function-distribution">
	</xref> shows the separation of functionality among CAPWAP
	components.</t>

<figure anchor="local-function-distribution" title="Mapping of 802.11 Functions
for Local AP Architecture">
<artwork>
     Function                               Location
	 Distribution Service                      WTP/AC
	 Integration Service                       WTP
	 Beacon Generation                         WTP
	 Probe Response Generation                 WTP
	 Power Mgmt/Packet Buffering               WTP
	 Fragmentation/Defragmentation             WTP
	 Assoc/Disassoc/Reassoc                    WTP/AC

    IEEE 802.11 QoS
	 Classifying                               WTP
	 Scheduling                                WTP
	 Queuing                                   WTP

    IEEE 802.11 RSN
	 IEEE 802.1X/EAP                           AC
	 RSNA Key Management                       AC
	 IEEE 802.11 Encryption/Decryption         WTP
</artwork>
</figure>

	<t>In the Local MAC mode, the integration service exists on the WTP, while
	the distribution service MAY reside on either the WTP or the AC. When it
	resides on the AC, station-generated frames are not forwarded to the AC in
	their native format, but encapsulated as 802.3 frames.</t>

	<t>While the MAC is terminated on the WTP, it is necessary for the AC to be
	aware of mobility events within the WTPs. Thus, the WTP MUST forward the IEEE
	802.11 Association Request frames to the AC. The AC MAY reply with a failed
	Association Response frame if it deems it necessary, and upon receipt of a
	failed Association Response frame from the AC, the WTP MUST send a
	Disassociation frame to the station. </t>

	<t>The IEEE 802.1X <xref target="IEEE.802-1X.2004"></xref>, EAP, and IEEE
	RSNA Key Management <xref target="IEEE.802-11.2007"></xref> functions
	reside in the AC. Therefore, the WTP MUST forward all IEEE 802.1X, EAP, and
	RSNA Key Management frames to the AC and forward the corresponding responses
	to the station. This implies that the AAA client also resides on the AC.</t>

	<t>Note that in the following figure, the use of '( - )' indicates that
	processing of the frames is done on the WTP.</t>

<figure title="Local MAC Message Flow" anchor="Local MAC Message Flow">
<artwork>
          Client                      WTP                         AC

                   Beacon
	  &lt;-----------------------------
                    Probe 
	  &lt;---------------------------->
    	             802.11 AUTH
	  &lt;-----------------------------
                              802.11 Association
	  &lt;---------------------------( - )------------------------->
                                     Station Configuration Request
                                       [Add Station (Station MAC
                                       Address), IEEE 802.11 Add
                                       Station (WLAN ID), IEEE
                                       802.11 Session Key(Flag=A)]
	                                 &lt;-------------------------->
                 802.1X Authentication & 802.11 Key Exchange
	  &lt;--------------------------------------------------------->
                                     Station Configuration Request
                                       [Add Station(Station MAC
                                       Address), IEEE 802.11 Add
                                       Station (WLAN ID), IEEE 802.11
                                       Station session Key (Key=x),
                                       IEEE 802.11 Information
                                       Element(RSNIE(Pairwise
                                       Cipher=CCMP))]
	                                 &lt;-------------------------->
                            802.11 Action Frames
	  &lt;--------------------------------------------------------->
                  802.11 DATA
	  &lt;----------------------------->
</artwork></figure>

	<t><xref target="Local MAC Message Flow"/> provides an illustration of the
	division of labor in a Local MAC architecture. In this example, a WLAN
	that is configured for IEEE 802.11 has been created using AES-CCMP for 
	privacy. The following process occurs:</t>
	<list style="hanging">
    <t hangText="o"> The WTP generates the IEEE 802.11 Beacon frames, using
	information provided to it through the Add WLAN (see <xref
	target="IEEE-802.11-Add-WLAN"/>) message element.</t>
    <t hangText="o"> The WTP processes a Probe Request frame and responds with
	a corresponding Probe Response frame.</t>
    <t hangText="o"> The WTP forwards the IEEE 802.11 Authentication and
	Association frames to the AC.</t>
    <t hangText="o"> Once the association is complete, the AC transmits a
	Station Configuration Request message, which includes the Add Station
	message element, to the WTP (see Section 4.6.8 in
	<xref target="RFC5415"> </xref>). In the
	above example, the WLAN was configured for IEEE 802.1X, and therefore the
	IEEE 802.11 Station Session Key is included with the flag field's 'A' bit
	set.</t>
	<t hangText="o"> The WTP forwards all IEEE 802.1X and IEEE 802.11 key
	exchange messages to the AC for processing.</t>
	<t hangText="o"> The AC transmits another Station Configuration Request
	message, which includes:</t>
	<list style="hanging">
	<t hangText="-">An Add Station message element, which MAY include a Virtual
	LAN (VLAN) <xref target="IEEE.802-1Q.2005"></xref> name, which when present
	is used by the WTP to identify the VLAN on which the user's data frames are
	to be bridged.</t>
	<t hangText="-">An IEEE 802.11 Add Station message element, which includes
	the WLAN Identifier with which the station has associated.</t>
	<t hangText="-">An IEEE 802.11 Station Session Key message element, which
	includes the pairwise encryption key.</t>
	<t hangText="-">An IEEE 802.11 Information Element message element, which
	includes the RSNIE to the WTP, stating the security policy to enforce for
	the client (in this case AES-CCMP).</t>
	</list>
    <t hangText="o"> The WTP forwards any IEEE 802.11 Management Action frames
	received to the AC.</t>
    <t hangText="o"> The WTP MAY locally bridge client data frames (and provide
	the necessary encryption and decryption services). The WTP MAY also tunnel
	client data frames to the AC, using 802.3 frame tunnel mode or 802.11 frame
	tunnel mode.</t>
	</list>

	</section> <!-- Local MAC -->

	</section> <!-- Split MAC and Local MAC Functionality -->

    <section title="Roaming Behavior" anchor="Roaming Behaviour">
	<t>This section expands upon the examples
	provided in the previous section, and describes how the CAPWAP control
	protocol is used to provide secure roaming.</t>

	<t>Once a client has successfully associated with the network in a secure
	fashion, it is likely to attempt to roam to another WTP. <xref
	target="Client Roaming Example"></xref> shows an example of a currently
	associated station moving from its "Old WTP" to a "New WTP". The figure is
	valid for multiple different security policies, including IEEE 802.1X and
	Wireless Protected Access (WPA) or Wireless Protected Access 2 (WPA2) <xref
	target="WPA"></xref>. In the event that key caching was employed, the 802.1X
	Authentication step would be eliminated. Note that the example represents
	one where crypto services are provided by the WTP, so in a case where the
	AC provided this function the last Station Configuration Request would be
	different.</t>

<figure title="Client Roaming Example" anchor="Client Roaming Example">
<artwork>
         Client              Old WTP            New WTP           AC

                       Association Request/Response
	  &lt;--------------------------------------( - )-------------->
                                     Station Configuration Request
                                       [Add Station (Station MAC
                                       Address), IEEE 802.11 Add
                                       Station (WLAN ID), IEEE
                                       802.11 Session Key(Flag=A)]
	                                           &lt;---------------->
          802.1X Authentication (if no key cache entry exists)
	  &lt;--------------------------------------( - )-------------->
                        802.11 4-way Key Exchange
	  &lt;--------------------------------------( - )-------------->
                             Station Configuration Request
                               [Delete Station]
	                         &lt;---------------------------------->
                                     Station Configuration Request
                                       [Add Station(Station MAC
                                       Address), IEEE 802.11 Add
                                       Station (WLAN ID), IEEE 802.11
                                       Station session Key (Key=x),
                                       IEEE 802.11 Information
                                       Element(RSNIE(Pairwise
                                       Cipher=CCMP))]
	                                           &lt;---------------->
</artwork></figure>

    </section> <!--  Roaming Behavior -->
    
    <section title="Group Key Refresh" anchor="Group Key Refresh">

	<t>Periodically, the Group Key (GTK) for the BSS needs to be updated. The AC
	uses an EAPOL-Key frame to update the group key for each STA in the BSS.
	While the AC is updating the GTK, each Layer 2 (L2) broadcast frame transmitted to
	the BSS needs to be duplicated and transmitted using both the current GTK
	and the new GTK. Once the GTK update process has completed, broadcast
	frames transmitted to the BSS will be encrypted using the new GTK.</t>

	<t>In the case of Split MAC, the AC needs to duplicate all broadcast packets 
	and update the key index so that the packet is transmitted using both the
	current and new GTK to ensure that all STAs in the BSS receive the
	broadcast frames. In the case of Local MAC, the WTP needs to duplicate and
	transmit broadcast frames using the appropriate index to ensure that all
	STAs in the BSS continue to receive broadcast frames.</t>

	<t>The Group Key update procedure is shown in the following figure. The AC
	will signal the update to the GTK using an IEEE 802.11 Configuration Request
	message, including an IEEE 802.11 Update WLAN message element with the new
	GTK, its index, the Transmit Sequence Counter (TSC) for the Group Key and the Key Status set to 3 (begin
	GTK update). The AC will then begin updating the GTK for each STA. During
	this time, the AC (for Split MAC) or WTP (for Local MAC) MUST duplicate 
	broadcast packets and transmit them encrypted with both the current and new
	GTK. When the AC has completed the GTK update to all STAs in the BSS, the
	AC MUST transmit an IEEE 802.11 Configuration Request message including an
	IEEE 802.11 Update WLAN message element containing the new GTK, its index, 
	and the Key Status set to 4 (GTK update	complete). </t>

<figure title="Group Key Update Procedure" anchor="Group Key Update Procedure.">
<artwork>
      Client           WTP                                          AC

                       IEEE 802.11 WLAN Configuration Request [Update
                         WLAN (GTK, GTK Index, GTK Start,
                         Group TSC) ]
                       &lt;--------------------------------------------
                             802.1X EAPoL (GTK Message 1)
      &lt;-------------( - )-------------------------------------------
                             802.1X EAPoL (GTK Message 2)
      -------------( - )-------------------------------------------&gt;
                       IEEE 802.11 WLAN Configuration Request [ Update
                         WLAN (GTK Index, GTK Complete) ]
                       &lt;--------------------------------------------
</artwork>
</figure>

    </section>  <!--  Group Key Refresh -->


    <section title="BSSID to WLAN ID Mapping">
	<t>The CAPWAP protocol binding enables the WTP to assign BSSIDs upon
	creation of a WLAN (see <xref target="IEEE-802.11-Add-WLAN"></xref>). While 
	manufacturers are free to assign BSSIDs using any arbitrary mechanism, it is
	advised that where possible the BSSIDs are assigned as a contiguous
	block.</t>

	<t>When assigned as a block, implementations can still assign any of the
	available BSSIDs to any WLAN. One possible method is for the WTP to assign
	the address using the following algorithm: base BSSID address + WLAN ID.</t>

	<t>The WTP communicates the maximum number of BSSIDs that it supports during
	configuration via the IEEE 802.11 WTP WLAN Radio Configuration
	message element (see <xref target="IEEE-802.11-WTP-Radio-Configuration"/>).</t>
	</section>

    <section anchor="CAPWAP Data Channel QoS Behavior" title="CAPWAP Data Channel QoS Behavior">
		<t>The CAPWAP IEEE 802.11 binding specification provides procedures to
		allow for the WTP to enforce Quality of Service on IEEE 802.11 Data
		Frames and MAC Management messages.</t>

    <section anchor="IEEE 802.11 Data Frames" title="IEEE 802.11 Data Frames">

		<t>When the WLAN is created on the WTP, a default Quality of Service
		policy is established through the IEEE 802.11 WTP Quality of Service
		message element (see <xref target="IEEE-802.11-WTP-Quality-of-Service"/>).
		This default policy will cause the WTP to use the default QoS values for
		any station associated with the WLAN in question. The AC MAY also
		override the policy for a given station by sending the IEEE 802.11
		Update Station QoS message element (see <xref
		target="IEEE-802.11-Update-Station-QoS"/>), known as a station-specific
		QoS policy.</t>

		<t>Beyond the default, and per station QoS policy, the IEEE 802.11
		protocol also allows a station to request special QoS treatment for a
		specific flow through the Traffic Specification (TSPEC) Information Elements found in
		the IEEE 802.11-2007's QoS Action Frame. Alternatively, stations MAY
		also use the WiFi Alliance's WMM specification instead to request
		QoS treatment for a flow (see <xref target="WMM"/>). This requires
		the WTP to observe the Status Code in the IEEE 802.11-2007 and WMM QoS
		Action Add Traffic System (ADDTS) responses from the AC, and provide the services requested
		in the TSPEC Information Element. Similarly, the WTP MUST observe the
		Reason Code Information Element in the IEEE 802.11-2007 and WMM QoS
		Action DELTS responses from the AC by removing the policy associated
		with the TSPEC.</t>

		<t>The IEEE 802.11 WTP Quality of Service message element's Tagging
		Policy field indicates how the packets are to be tagged, known as the
		Tagging Policy. There are five bits defined, two of which are used to
		indicate the type of QoS to be used by the WTP. The first is the 'P' bit, 
		which is set to inform the WTP it is to use the 802.1p QoS mechanism.
		When set, the 'Q' bit is used to inform the WTP which 802.1p priority
		values it is to use.</t>

		<t>The 'D' bit is set to inform the WTP it is to use the Differentiated Services Code Point (DSCP) QoS
		mechanism. When set, the 'I' and 'O' bits are used to inform the
		WTP which values it is to use in the inner header, in the station's
		original packet, or the outer header, the latter of which is only valid
		when tunneling is enabled.</t> 

		<t>When an IEEE 802.11 Update Station QoS message element is received,
		while the specific 802.1p priority or DSCP values may change for a given
		station, known as the station specific policy, the original Tagging
		Policy (the use of the five bits) remains the same.</t>

		<t>The use of the DSCP and 802.1p QoS mechanisms are not mutually
		exclusive. An AC MAY request that a WTP use none, one, or both types of
		QoS mechanisms at the same time.</t>

    <section anchor="802.1p Support" title="802.1p Support">
		<t>The IEEE 802.11 WTP Quality of Service and IEEE 802.11 Update
		Station QoS message elements include the "802.1p Tag" field, which is
		the 802.1p priority value. This value is used by the WTP by adding an
		802.1Q header (see <xref target="IEEE.802-1Q.2005"/>) with the priority
		field set according to the policy provided. Note that this tagging is only
		valid for interfaces that support 802.1p. The actual treatment does not
		change for either Split or Local MAC modes, or when tunneling is used.
		The only exception is when tunneling is used, the 802.1Q header is added
		to the outer packet (tunneled) header. The IEEE 802.11 standard does not
		permit the station's packet to include an 802.1Q header. Instead, the
		QoS mechanisms defined in the IEEE 802.11 standard are used by stations
		to mark a packet's priority. When the 'P' bit is set in the Tagging
		Policy, the 'Q' bit has the following behavior:</t>

		<list style="hanging" hangIndent="6">
		<t hangText= "Q=1: ">The WTP marks the priority field in the 802.1Q 
		header to either the default or the station-specific 802.1p policy.</t>
		<t hangText= "Q=0: ">The WTP marks the priority field in the 802.1Q 
		header to the value found in the User Priority field of the QoS Control
		field of the IEEE 802.11 header. If the QoS Control field is not present
		in the IEEE 802.11 header, then the behavior described under 'Q=1' is
		used.</t>
		</list>

	</section><!-- 802.1p Support -->

    <section anchor="DSCP Support" title="DSCP Support">
		<t>The IEEE 802.11 WTP Quality of Service and IEEE 802.11 Update
		Station QoS message elements also provide a "DSCP Tag", which is used by
		the WTP when the 'D' bit is set to mark the DSCP field of both
		the IPv4 and IPv6 headers (see <xref target="RFC2474"></xref>). When
		DSCP is used, the WTP marks the inner packet (the original packet
		received by the station) when the 'I' bit is set. Similarly, the WTP
		marks the outer packet (tunnel header's DSCP field) when the 'O' bit is
		set.</t>

		<t>When the 'D' bit is set, the treatment of the packet differs based on
		whether the WTP is tunneling the station's packets to the AC. Tunneling
		does not occur in a Local MAC mode when the AC has communicated that
		tunneling is not required, as part of the IEEE 802.11 Add WLAN message
		element, see <xref target="IEEE-802.11-Add-WLAN"/>. In the case where
		tunneling is not used, the 'I' and 'O' bits have the following
		behaviors:
</t>

		<list style="hanging" hangIndent="6">
		<t hangText= "O=1: ">This option is invalid when tunneling is not
		enabled for station data frames.</t>
		<t hangText= "O=0: ">This option is invalid when tunneling is not
		enabled for station data frames.</t>
		<t hangText= "I=1: ">The WTP sets the DSCP field in the station's packet
		to either the default policy or the station-specific policy if one
		exists.</t>
		<t hangText= "I=0: ">The WTP MUST NOT modify the DSCP field in the
		station's packet.</t>
		</list>

		<t>For Split MAC mode, or Local MAC with tunneling enabled, the WTP
		needs to contend with both the inner packet (the station's original
		packet) as well as the tunnel header (added by the WTP). In this mode
		of operation, the bits are treated as follows:</t>

		<list style="hanging" hangIndent="6">
		<t hangText= "O=1: ">The WTP sets the DSCP field in the tunnel header
		to either the default policy or the station specific policy if
		one exists.</t>
		<t hangText= "O=0: ">The WTP sets the DSCP field in the tunnel header
		to the value found in the inner packet's DSCP field. If encryption
		services are provided by the AC (see <xref
		target="IEEE 802.11 Station Session Key"/>), the packet is encrypted;
		therefore, the WTP cannot access the inner DSCP field, in which case it
		uses the behavior described when the 'O' bit is set. This occurs also if
		the inner packet is not IPv4 or IPv6, and thus does not have a DSCP
		field.</t>
		<t hangText= "I=1: ">The WTP sets the DSCP field in the station's packet
		to either the default policy or the station-specific policy if one
		exists. If encryption services are provided by the AC (see <xref
		target="IEEE 802.11 Station Session Key"/>), the packet is encrypted;
		therefore, the WTP cannot access the inner DSCP field, in which case it
		uses the behavior described when the 'I' bit is not set. This occurs
		also if the inner packet is not IPv4 or IPv6, and thus does not have a
		DSCP field.</t>
		<t hangText= "I=0: ">The WTP MUST NOT modify the DSCP field in the
		station's packet.</t>
		</list>

		<t>The CAPWAP protocol supports the Explicit Congestion Notification (ECN)
		bits <xref target="RFC3168"/>. Additional details on ECN support can be
		found in <xref target="RFC5415"/>.</t>

	</section> <!-- DSCP Support -->
	</section> <!-- IEEE 802.11 Data Frames -->

    <section title="IEEE 802.11 MAC Management Messages">
        <t>It is recommended that IEEE 802.11 MAC Management frames be sent by
		both the AC and the WTP with appropriate Quality of Service values,
		listed below, to ensure that congestion in the network minimizes
		occurrences of packet loss. Note that the QoS Mechanism specified in the
		Tagging Policy is used as specified by the AC in the IEEE 802.11 WTP
		Quality of Service message element (see <xref
		target="IEEE-802.11-WTP-Quality-of-Service"/>). However, the station-specific policy is not used for IEEE 802.11 MAC Management frames.</t>

	<list style="hanging">
<!-- Mike Issue 100 -->
	<t hangText= "802.1p: ">The precedence value of 7 (decimal) SHOULD be used
	for all IEEE 802.11 MAC management frames, except for Probe Requests, which
	SHOULD use 4.</t>
<!-- Mike Issue 100 -->
	<t hangText= "DSCP: ">All IEEE 802.11 MAC management frames SHOULD use the 
	CS6 per-hop behavior (see <xref target="RFC2474"></xref>), while IEEE 802.11
	Probe Requests should use the Low Drop Assured Forwarding per-hop behavior
	(see <xref target="RFC3246"></xref>).</t>
	</list>

	</section> <!-- IEEE 802.11 MAC Management Messages -->
	</section> <!-- CAPWAP Data Channel QoS Behavior -->

	<section title="Run State Operation">
		<t>The Run state is the normal state of operation for the CAPWAP
		protocol in both the WTP and the AC. </t>

		<t> When the WTP receives a WLAN Configuration Request message (see
		<xref target="IEEE-802.11-WLAN-Configuration-Request"></xref>), it MUST
		respond with a WLAN Configuration Response message (see
		<xref target="IEEE-802.11-WLAN-Configuration-Response"></xref>), and it
		remains in the Run state.</t>

		<t>When the AC sends a WLAN Configuration Request message (see <xref
		target="IEEE-802.11-WLAN-Configuration-Request"></xref>) or receives the
		corresponding WLAN Configuration Response message (see
		<xref target="IEEE-802.11-WLAN-Configuration-Response"></xref>) from the
		WTP, it remains in the Run state.</t>

	</section> <!-- Run State Operation -->
	
       </section> <!-- IEEE 802.11 Binding --> 
       
    <section title="IEEE 802.11 Specific CAPWAP Control Messages"
	anchor="IEEE 802.11 Specific CAPWAP Control Messages">
		<t>This section defines CAPWAP Control messages that are specific
		to the IEEE 802.11 binding. Two messages are defined: IEEE 802.11 
		WLAN Configuration Request and IEEE 802.11 WLAN Configuration Response.
		See Section 4.5 in <xref target="RFC5415">
		</xref> for CAPWAP Control message definitions and the derivation of the
		Message Type value from the IANA Enterprise number. </t>

		<t>The valid message types for IEEE 802.11-specific control messages are
		listed below. The IANA Enterprise number used with these messages is 13277.
		</t>

<artwork>
        CAPWAP Control Message                    Message Type
                                                     Value
        				       
        IEEE 802.11 WLAN Configuration Request      3398913
        IEEE 802.11 WLAN Configuration Response     3398914
</artwork>

				
    <section anchor="IEEE-802.11-WLAN-Configuration-Request" title="IEEE 802.11 WLAN Configuration Request">
        <t>The IEEE 802.11 WLAN Configuration Request is sent by the AC to the
        WTP in order to change services provided by the WTP. This control 
        message is used to either create, update, or delete a WLAN on the WTP.</t>

        <t>The IEEE 802.11 WLAN Configuration Request is sent as a result of
        either some manual administrative process (e.g., deleting a WLAN), or
        automatically to create a WLAN on a WTP. When sent automatically to
        create a WLAN, this control message is sent after the CAPWAP
        Configuration Update Response message (see Section 8.5 in
		<xref target="RFC5415"> </xref>) has been
		received by the AC.</t>

        <t>Upon receiving this control message, the WTP will modify the necessary
        services and transmit an IEEE 802.11 WLAN Configuration Response.</t>

        <t>A WTP MAY provide service for more than one WLAN; therefore, every
        WLAN is identified through a numerical index. For instance, a WTP that
        is capable of supporting up to 16 Service Set Identifiers (SSIDs), could
		accept up to 16 IEEE 802.11 WLAN Configuration Request messages that
		include the Add WLAN message element.</t>

        <t>Since the index is the primary identifier for a WLAN, an AC MAY
        attempt to ensure that the same WLAN is identified through the same
        index number on all of its WTPs. An AC that does not follow this approach
        MUST find some other means of maintaining a WLAN-Identifier-to-SSID
        mapping table.</t>

    	<t>The following message elements MAY be included in the IEEE 802.11
		WLAN Configuration Request message. Only one message element MUST be present.</t>
 	
		<list style="symbols">	
		<t>IEEE 802.11 Add WLAN, see <xref target="IEEE-802.11-Add-WLAN"></xref> </t>
		<t>IEEE 802.11 Delete WLAN, see <xref target="IEEE-802.11-Delete-WLAN"></xref> </t>
   	 	<t>IEEE 802.11 Update WLAN, see <xref target="IEEE-802.11-Update-WLAN"></xref> </t>
		</list>

    	<t>The following message element MAY be present.</t>

		<list style="symbols">	
		<t>IEEE 802.11 Information Element, see <xref target="IEEE-802.11-Information-Element"></xref></t>		
		<t>Vendor-Specific Payload, see
		<xref target="RFC5415"></xref> </t>
		</list>

    </section> <!-- IEEE 802.11 WLAN Configuration Request -->

    <section anchor="IEEE-802.11-WLAN-Configuration-Response" title="IEEE 802.11 WLAN Configuration Response">
        <t>The IEEE 802.11 WLAN Configuration Response message is sent by the WTP to the AC. It is used to 
		acknowledge receipt of an IEEE 802.11 WLAN
		Configuration Request message, and to indicate that the requested
		configuration was successfully applied or that an error related to the processing
		of the IEEE 802.11 WLAN Configuration Request message occurred on the WTP.</t>

		<t>The following message element MUST be included in the IEEE 802.11
		WLAN Configuration Response message.</t>
   	
   		<list style="symbols">	
		<t>Result Code, see Section 4.6.34 in
		<xref target="RFC5415"> </xref> </t>
		</list>

    	<t>The following message element MAY be included in the IEEE 802.11
		WLAN Configuration Response message.</t>
 	
		<list style="symbols">	
		<t>IEEE 802.11 Assigned WTP BSSID, see <xref target="IEEE-802.11-Assigned-WTP-BSSID"></xref> </t>
		<t>Vendor-Specific Payload, see
		<xref target="RFC5415"></xref> </t>
		</list>

   </section> <!-- IEEE 802.11 WLAN Configuration Response -->


   </section> <!-- IEEE 802.11 Specific CAPWAP Control Messages -->

	<section anchor="CAPWAP-Data-Message-Bindings" title="CAPWAP Data Message Bindings">
	<t>This section describes the CAPWAP data message bindings to support transport of
	IEEE 802.11 frames.</t>

	<list style="hanging">
    <t hangText="Payload encapsulation:">
	The CAPWAP protocol defines the CAPWAP data message, which is used to encapsulate a
	wireless payload. For IEEE 802.11, the IEEE 802.11 header and payload
	are encapsulated (excluding the IEEE 802.11 FCS checksum). The IEEE 802.11 FCS
	checksum is handled by the WTP. This allows the WTP to validate an IEEE 802.11 frame
	prior to sending it to the AC. Similarly, when an AC wishes to transmit a
	frame to a station, the WTP computes and adds the FCS checksum.</t>

    <t hangText="Optional Wireless Specific Information:">
	This optional CAPWAP header field (see Section 4.3 in
	<xref target="RFC5415"> </xref>) is only used
	with CAPWAP data messages, and it serves two purposes, depending upon the
	direction of the message. For messages from the WTP to the AC, the field
	uses the format described in the "IEEE 802.11 Frame Info" field (see below).
	However, for messages sent by the AC to the WTP, the format used is
	described in the "Destination WLANs" field (also defined below).</t>

	<t>Note that in both cases, the two optional headers fit in the "Data"
	field of the Wireless Specific Information header.</t>
            
    <t hangText="IEEE 802.11 Frame Info:">
	When an IEEE 802.11 frame is received from a station over the air,
	it is encapsulated and this field is used to include radio and PHY-specific information associated with the frame. </t>

	<t>The IEEE 802.11 Frame Info field has the following
	format:</t>

<artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |     RSSI      |     SNR       |           Data Rate           |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

	<list style="hanging">
	<t hangText= "RSSI: ">
	Received Signal Strength Indication (RSSI) is a signed, 8-bit value.  It is the received signal strength
	indication, in dBm.</t>

	<t hangText= "SNR: ">
	SNR is a signed, 8-bit value.  It is the signal-to-noise ratio of the
	received IEEE 802.11 frame, in dB.</t>

	<t hangText= "Data Rate: ">
	The data rate field is a 16-bit unsigned value. The data rate field is a
	16-bit unsigned value expressing the data rate of the packets received by
	the WTP in units of 0.1 Mbps. For instance, a packet received at 5.5 Mbps
	would be set to 55, while 11 Mbps would be set to 110.</t>
	</list>
 
    <t hangText="Destination WLANs:">
	The Destination WLANs field is used to specify the target WLANs for a
	given frame, and is only used with broadcast and multicast frames. This
	field allows the AC to transmit a single broadcast or multicast frame to the
	WTP and allows the WTP to perform the necessary frame replication. 
	The field uses the following format:</t>

<artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |        WLAN ID bitmap         |            Reserved           |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

	<list style="hanging">
	<t hangText= "WLAN ID bitmap: ">
	This bit field indicates the WLAN ID (see <xref
	target="IEEE-802.11-Add-WLAN"/>) on which the WTP will transmit the included
	frame. For instance, if a multicast packet is to be transmitted on WLANs 1
	and 3, the bits for WLAN 1 and 3 of this field would be enabled. WLAN 1 is
	represented by bit 15 in the figure above, or the least significant bit,
	while WLAN 16 would be represented by bit zero (0), or the most significant
	bit, in the figure. This field is to be set to all zeroes for unicast
	packets and is unused if the WTP is not providing IEEE 802.11
	encryption.</t>
	<t hangText= "Reserved: ">
	All implementations complying with this protocol MUST set to zero any bits
	that are reserved in the version of the protocol supported by that
	implementation.  Receivers MUST ignore all bits not defined for the
	version of the protocol they support.</t>
	</list>
	</list>
	</section> <!-- Data Message bindings -->

	<section title="CAPWAP Control Message Bindings">
	<t>This section describes the IEEE 802.11-specific message elements included
	in CAPWAP Control Messages.</t>

	<section title="Discovery Request Message">

		<t> The following IEEE 802.11-specific message element MUST be included
		in the CAPWAP Discovery Request Message. </t>

		<list style="symbols">	
		<t>IEEE 802.11 WTP Radio Information, see
		<xref target="IEEE-802-11-WTP-Radio-Information"></xref>. An IEEE
		802.11 WTP Radio Information message element MUST be present for every
		radio in the WTP.</t>
		</list>

	</section> <!-- Discovery Request Message -->

	<section title="Discovery Response Message">

		<t> The following IEEE 802.11-specific message element MUST be included
		in the CAPWAP Discovery Response Message. </t>

		<list style="symbols">	
		<t>IEEE 802.11 WTP Radio Information, see
		<xref target="IEEE-802-11-WTP-Radio-Information"></xref>. An IEEE
		802.11 WTP Radio Information message element MUST be present for every
		radio in the WTP.</t>
		</list>

	</section> <!-- Discovery Response Message -->

	<section title="Primary Discovery Request Message">

		<t> The following IEEE 802.11 specific message element MUST be included
		in the CAPWAP Primary Discovery Request message. </t>

		<list style="symbols">	
		<t>IEEE 802.11 WTP Radio Information, see
		<xref target="IEEE-802-11-WTP-Radio-Information"></xref>. An IEEE 802.11
		WTP Radio Information message element MUST be present for every radio in
		the WTP. </t>
		</list>

	</section> <!-- Primary Discovery Request Message -->   

	<section title="Primary Discovery Response Message">

		<t> The following IEEE 802.11-specific message element MUST be included
		in the CAPWAP Primary Discovery Response message. </t>

		<list style="symbols">	
		<t>IEEE 802.11 WTP Radio Information, see
		<xref target="IEEE-802-11-WTP-Radio-Information"></xref>. An IEEE 802.11
		WTP Radio Information message element MUST be present for every radio in
		the WTP. </t>
		</list>

	</section> <!-- Primary Discovery Response Message -->   

	<section title="Join Request Message">

		<t> The following IEEE 802.11-specific message element MUST be included
		in the CAPWAP Join Request message. </t>

		<list style="symbols">	
		<t>IEEE 802.11 WTP Radio Information, see
		<xref target="IEEE-802-11-WTP-Radio-Information"></xref>. An IEEE 802.11
		WTP Radio Information message element MUST be present for every
		radio in the WTP. </t>
		</list>

	</section> <!-- Join Request Message -->  

	<section title="Join Response Message">

		<t> The following IEEE 802.11-specific message element MUST be included
		in the CAPWAP Join Response message. </t>

		<list style="symbols">	
		<t>IEEE 802.11 WTP Radio Information, see
		<xref target="IEEE-802-11-WTP-Radio-Information"></xref>. An IEEE 802.11
		WTP Radio Information message element MUST be present for every
		radio in the WTP. </t>
		</list>

	</section> <!-- Join Response Message -->  

	<section title="Configuration Status Request Message">

		<t> The following IEEE 802.11-specific message elements MAY be included
		in the CAPWAP Configuration Status Request message. More than one of
		each message element listed MAY be included. </t>

		<list style="symbols">	
		<t>IEEE 802.11 Antenna, see <xref target="IEEE-802.11-Antenna"></xref> </t>
		<t>IEEE 802.11 Direct Sequence Control, see <xref target="IEEE-802.11-Direct-Sequence-Control"></xref> </t>
		<t>IEEE 802.11 MAC Operation, see <xref target="IEEE-802.11-MAC-Operation"></xref> </t>
		<t>IEEE 802.11 Multi-Domain Capability, see <xref target="IEEE-802.11-Multi-Domain-Capability"></xref> </t>
		<t>IEEE 802.11 Orthogonal Frequency Division Multiplexing (OFDM) Control, see <xref target="IEEE-802.11-OFDM-Control"></xref> </t>
		<t>IEEE 802.11 Supported Rates, see <xref target="IEEE-802.11-Supported-Rates"></xref> </t>
		<t>IEEE 802.11 Tx Power, see <xref target="IEEE-802.11-Tx-Power"></xref> </t>
		<t>IEEE 802.11 TX Power Level, see <xref target="IEEE-802.11-Tx-Power-Level"></xref> </t>
		<t>IEEE 802.11 WTP Radio Configuration, see <xref target="IEEE-802.11-WTP-Radio-Configuration"></xref> </t>
		<t>IEEE 802.11 WTP Radio Information, see <xref target="IEEE-802-11-WTP-Radio-Information"></xref>.
		An IEEE 802.11 WTP Radio Information message element MUST be present for
		every radio in the WTP.</t>
		</list>      

	</section> <!-- Configuration Status Request Message -->

	<section title="Configuration Status Response Message">

		<t> The following IEEE 802.11 specific message elements MAY be included
		in the CAPWAP Configuration Status Response Message. More than one of
		each message element listed MAY be included.</t>

		<list style="symbols">	
		<t>IEEE 802.11 Antenna, see <xref target="IEEE-802.11-Antenna"></xref> </t>
		<t>IEEE 802.11 Direct Sequence Control, see <xref target="IEEE-802.11-Direct-Sequence-Control"></xref> </t>
		<t>IEEE 802.11 MAC Operation, see <xref target="IEEE-802.11-MAC-Operation"></xref> </t>
		<t>IEEE 802.11 Multi-Domain Capability, see <xref target="IEEE-802.11-Multi-Domain-Capability"></xref> </t>
		<t>IEEE 802.11 OFDM Control, see <xref target="IEEE-802.11-OFDM-Control"></xref> </t>
		<t>IEEE 802.11 Rate Set, see <xref target="IEEE-802.11-Rate-Set"></xref> </t>	
		<t>IEEE 802.11 Supported Rates, see <xref target="IEEE-802.11-Supported-Rates"></xref> </t>
		<t>IEEE 802.11 Tx Power, see <xref target="IEEE-802.11-Tx-Power"></xref> </t>
		<t>IEEE 802.11 WTP Quality of Service, see <xref target="IEEE-802.11-WTP-Quality-of-Service"></xref> </t>
		<t>IEEE 802.11 WTP Radio Configuration, see <xref target="IEEE-802.11-WTP-Radio-Configuration"></xref> </t>
		</list>
	</section> <!-- Configuration Status Response Message -->

	<section title="Configuration Update Request Message">

		<t> The following IEEE 802.11-specific message elements MAY be included
		in the CAPWAP Configuration Update Request message. More than one of each message element
		listed MAY be included.</t>

		<list style="symbols">	
		<t>IEEE 802.11 Antenna, see <xref target="IEEE-802.11-Antenna"></xref> </t>
		<t>IEEE 802.11 Direct Sequence Control, see <xref target="IEEE-802.11-Direct-Sequence-Control"></xref> </t>
		<t>IEEE 802.11 MAC Operation, see <xref target="IEEE-802.11-MAC-Operation"></xref> </t>
		<t>IEEE 802.11 Multi-Domain Capability, see <xref target="IEEE-802.11-Multi-Domain-Capability"></xref> </t>
		<t>IEEE 802.11 OFDM Control, see <xref target="IEEE-802.11-OFDM-Control"></xref> </t>
		<t>IEEE 802.11 Rate Set, see <xref target="IEEE-802.11-Rate-Set"></xref> </t>
		<t>IEEE 802.11 RSNA Error Report from Station, see <xref target="IEEE-802.11-RSNA-Error-Report-From-Station"></xref> </t>		
		<t>IEEE 802.11 Tx Power, see <xref target="IEEE-802.11-Tx-Power"></xref> </t>
		<t>IEEE 802.11 WTP Quality of Service, see <xref target="IEEE-802.11-WTP-Quality-of-Service"></xref> </t>
		<t>IEEE 802.11 WTP Radio Configuration, see <xref target="IEEE-802.11-WTP-Radio-Configuration"></xref> </t>
		</list>
	</section> <!-- Configuration Update Request Message -->   

	<section title="Station Configuration Request">
		<t>The following IEEE 802.11-specific message elements MAY be
		included in the CAPWAP Station Configuration Request message. More than one of each message element
		listed MAY be included.</t>

		<list style="symbols">
		<t> IEEE 802.11 Station, see <xref target="IEEE 802.11 Station"></xref> </t>
		<t> IEEE 802.11 Station Session Key, see <xref target="IEEE 802.11 Station Session Key"></xref> </t>
		<t> IEEE 802.11 Station QoS Profile, see <xref target="Station-QoS-Profile"></xref></t>
		<t> IEEE 802.11 Update Station Qos, see <xref target="IEEE-802.11-Update-Station-QoS"/></t>

		</list>

	</section> <!-- Station Configuration Request -->

    <section anchor="Change State Event Request" title="Change State Event Request">
		<t>The following IEEE 802.11-specific message element MAY be
		included in the CAPWAP Station Configuration Request message.</t>

		<list style="symbols">	
		<t>IEEE 802.11 WTP Radio Fail Alarm Indication, 
		see <xref target="IEEE-802.11-WTP-Radio-Fail-Alarm-Indication"></xref> </t>

		</list>

	</section> <!-- Change State Event Request -->

	<section title="WTP Event Request">
		<t>The following IEEE 802.11-specific message elements MAY be included
		in the CAPWAP WTP Event Request message. More than one of each message
		element listed MAY be included.</t>

		<list style="symbols">	
		<t>IEEE 802.11 MIC Countermeasures, see <xref target="IEEE-802.11-MIC-Countermeasures"></xref> </t>
		<t>IEEE 802.11 RSNA Error Report from Station, see <xref target="IEEE-802.11-RSNA-Error-Report-From-Station"></xref> </t>
		<t>IEEE 802.11 Statistics, see <xref target="IEEE-802.11-Statistics"></xref> </t>
		</list>

	</section> <!-- WTP Event Request -->

	</section> <!-- Control Message bindings -->

	<section anchor="IEEE 802.11 Message Element Definitions" title="IEEE 802.11 Message Element Definitions"> 
	<t> The following IEEE 802.11-specific message elements are defined in this section. </t>
	
<figure anchor="IEEE 802.11 Binding Message Elements"
   title="IEEE 802.11 Binding Message Elements">
<artwork>

IEEE 802.11 Message Element			Type Value
								
IEEE 802.11 Add WLAN                               1024	
IEEE 802.11 Antenna                                1025
IEEE 802.11 Assigned WTP BSSID                     1026 
IEEE 802.11 Delete WLAN                            1027
IEEE 802.11 Direct Sequence Control                1028
IEEE 802.11 Information Element                    1029
IEEE 802.11 MAC Operation                          1030 
IEEE 802.11 MIC Countermeasures                    1031 
IEEE 802.11 Multi-Domain Capability                1032
IEEE 802.11 OFDM Control                           1033
IEEE 802.11 Rate Set                               1034
IEEE 802.11 RSNA Error Report From Station         1035
IEEE 802.11 Station                                1036
IEEE 802.11 Station QoS Profile                    1037
IEEE 802.11 Station Session Key                    1038
IEEE 802.11 Statistics                             1039 
IEEE 802.11 Supported Rates                        1040
IEEE 802.11 Tx Power                               1041 
IEEE 802.11 Tx Power Level                         1042
IEEE 802.11 Update Station QoS                     1043 
IEEE 802.11 Update WLAN                            1044
IEEE 802.11 WTP Quality of Service                 1045
IEEE 802.11 WTP Radio Configuration                1046
IEEE 802.11 WTP Radio Fail Alarm Indication        1047
IEEE 802.11 WTP Radio Information                  1048
</artwork>
</figure>

	<section anchor="IEEE-802.11-Add-WLAN" title="IEEE 802.11 Add WLAN">
        <t>The IEEE 802.11 Add WLAN message element is used by the AC to define
		a WLAN on the WTP. The inclusion of this message element MUST also
		include IEEE 802.11 Information Element message elements, containing the
		following IEEE 802.11 IEs:</t>
        <list style="hanging">
         <t hangText= "Power Constraint information element"></t>
         <t hangText= "EDCA Parameter Set information element"></t>
         <t hangText= "QoS Capability information element"></t>
         <t hangText= "WPA information element"><xref target="WPA"></xref></t>
         <t hangText= "RSN information element"></t>
         <t hangText= "WMM information element"><xref target="WMM"></xref></t>
		</list>

		<t>These IEEE 802.11 Information Elements are stored by the WTP and
		included in any Probe Responses and Beacons generated, as specified in
		the IEEE 802.11 standard <xref target="IEEE.802-11.2007"/>. If present,
		the RSN Information Element is sent with the IEEE 802.11 Add WLAN
		message element to instruct the WTP on the usage of the Key field.</t>

		<t>If cryptographic services are provided at the WTP, the WTP MUST
		observe the algorithm dictated in the Group Cipher Suite field of the
		RSN Information Element sent by the AC. The RSN Information Element is
		used to communicate any supported algorithm, including
                WEP, Temporal Key Integrity Protocol (TKIP) and
		AES-CCMP. In the case of static WEP keys, the RSN Information Element is
		still used to indicate the cryptographic algorithm even though no key
		exchange occurred.</t>

		<t>An AC MAY include additional Information Elements as desired.
		The message element uses the following format:</t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |    WLAN ID    |          Capability           |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |   Key Index   |   Key Status  |           Key Length          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                             Key...                            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                           Group TSC                           |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |           Group TSC           |      QoS      |   Auth Type   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |   MAC Mode    |  Tunnel Mode  | Suppress SSID |    SSID ...   
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1024 for IEEE 802.11 Add WLAN</t>

         <t hangText= "Length: ">
         >= 20</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio, whose value is between one (1)
		 and 31.</t>

         <t hangText= "WLAN ID: ">
         An 8-bit value specifying the WLAN Identifier. The value MUST be
		 between one (1) and 16.</t>

         <t hangText= "Capability: ">
         A 16-bit value containing the Capability information field to be
		 advertised by the WTP in the Probe Request and Beacon frames. Each bit
		 of the Capability field represents a different WTP capability, which
		 are described in detail in <xref target="IEEE.802-11.2007"></xref>.
		 The format of the field is:</t>
<artwork>
     0                   1
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |E|I|C|F|P|S|B|A|M|Q|T|D|V|O|K|L|
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
		 <list style="hanging">
         <t hangText= "E (ESS): ">
         The AC MUST set the Extended Service Set (ESS) subfield to 1.</t>

         <t hangText= "I (IBSS): ">
         The AC MUST set the Independent Basic Service Set (IBSS) subfield to
		 0.</t>

         <t hangText= "C (CF-Pollable): ">
         The AC sets the Contention Free Pollable (CF-Pollable) subfield based
		 on the table found in <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "F (CF-Poll Request): ">
         The AC sets the CF-Poll Request subfield based on the table found in
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "P (Privacy): ">
         The AC sets the Privacy subfield based on the confidentiality
		 requirements of the WLAN, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "S (Short Preamble): ">
         The AC sets the Short Preamble subfield based on whether the use of
		 short preambles is permitted on the WLAN, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "B (PBCC): ">
         The AC sets the Packet Binary Convolutional Code (PBCC) modulation
		 option subfield based on whether the use of PBCC is permitted on the
		 WLAN, as defined in <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "A (Channel Agility): ">
         The AC sets the Channel Agility subfield based on whether the WTP is
		 capable of supporting the High Rate Direct Sequence Spread Spectrum
		 (HR/DSSS), as defined in <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "M (Spectrum Management): ">
         The AC sets the Spectrum Management subfield according to the value of
		 the dot11SpectrumManagementRequired MIB variable, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "Q (QoS): ">
         The AC sets the Quality of Service (QoS) subfield based on the table found in
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "T (Short Slot Time): ">
         The AC sets the Short Slot Time subfield according to the value of
		 the WTP's currently used slot time value, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "D (APSD): ">
         The AC sets the Automatic Power Save Delivery (APSD) subfield according to the value of
		 the dot11APSDOptionImplemented Management Information Base (MIB)
		 variable, as defined in <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "V (Reserved): ">
         The AC sets the Reserved subfield to zero, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "O (DSSS-OFDM): ">
         The AC sets the DSSS-OFDM subfield to indicate the use of Direct
		 Sequence Spread Spectrum with Orthogonal Frequency Division
		 Multiplexing (DSSS-OFDM), as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "K (Delayed Block ACK): ">
         The AC sets the Delayed Block ACK subfield according to the value of
		 the dot11DelayedBlockAckOptionImplemented MIB variable, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "L (Immediate Block ACK): ">
         The AC sets the Delayed Block ACK subfield according to the value of
		 the dot11ImmediateBlockAckOptionImplemented MIB variable, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>
		 </list>

         <t hangText= "Key-Index: ">
         The Key Index associated with the key.</t>

         <t hangText= "Key Status: ">
         A 1-byte value that specifies the state and usage of the key that has
		 been included. Note this field is ignored if the Key Length field is
		 set to zero (0). The following values describe the key usage and its
		 status:</t>
		 <list style="hanging" hangIndent="6">
		 <t hangText="0 -"> A value of zero, with the inclusion of the RSN
		 Information Element means that the WLAN uses per-station encryption
		 keys, and therefore the key in the 'Key' field is only used for
		 multicast traffic.</t>
		 <t hangText="1 -">When set to one, the WLAN employs a shared Wired
		 Equivalent Privacy (WEP) key, also known as a static WEP key, and uses
		 the encryption key for both unicast and multicast traffic for all
		 stations.</t>
		 <t hangText="2 -">The value of 2 indicates that the AC will begin
		 rekeying the GTK with the STA's in the BSS. It is only valid when 
		 IEEE 802.11 is enabled as the security policy for the BSS.</t>
		 <t hangText="3 -">The value of 3 indicates that the AC has completed
		 rekeying the GTK and broadcast packets no longer need to be duplicated
		 and transmitted with both GTK's.</t>
		 </list>

         <t hangText= "Key Length: ">
         A 16-bit value representing the length of the Key field.</t>

         <t hangText= "Key: ">
         A Session Key, whose length is known via the Key Length field, used to
		 provide data privacy. For encryption schemes that employ a separate
		 encryption key for unicast and multicast traffic, the key included here
		 only applies to multicast frames, and the cipher suite is specified in
		 an accompanied RSN Information Element. In these scenarios, the key and
		 cipher information is communicated via the Add Station message element,
		 see Section 4.6.8 in <xref
		 target="RFC5415"/> and the IEEE 802.11
		 Station Session Key message element, see <xref
		 target="IEEE 802.11 Station Session Key"/>. When used with WEP, the key
		 field includes the broadcast key. When used with CCMP, the Key field 
		 includes the 128-bit Group Temporal Key. When used with TKIP, the Key 
		 field includes the 256-bit Group Temporal Key (which consists of a 
		 128-bit key used as input for TKIP key mixing, and two 64-bit keys used 
		 for Michael).</t>

		 <t hangText= "Group TSC: ">
		 A 48-bit value containing the Transmit Sequence Counter (TSC) for the updated group key.
		 The WTP will set the TSC for broadcast/multicast frames to this value for the updated
		 group key.</t> 

		 <t hangText= "QoS: ">
		 An 8-bit value specifying the default QoS policy for the WTP to apply
		 to network traffic received for a non-WMM enabled STA. </t>
         <t>The following enumerated values are supported:</t>
           <list>
              <t hangText="0 -">Best Effort</t>
              <t hangText="1 -">Video</t>
              <t hangText="2 -">Voice</t>
              <t hangText="3 -">Background</t>
           </list>

         <t hangText= "Auth Type: ">
         An 8-bit value specifying the supported authentication type.</t>
         <t>The following enumerated values are supported:</t>
           <list>
              <t hangText="0 -">Open System</t>
              <t hangText="1 -">WEP Shared Key</t>
           </list>

         <t hangText= "MAC Mode: ">
         This field specifies whether the WTP should support the WLAN in
		 Local or Split MAC mode. Note that the AC MUST NOT request a mode
		 of operation that was not advertised by the WTP during the
		 discovery process (see Section 4.6.43 in
		 <xref target="RFC5415"> </xref>).
		 The following enumerated values are supported:</t>
		 <list style="hanging" hangIndent="6">
		 <t hangText="0 -">
		 Local MAC: Service for the WLAN is to be provided in Local MAC mode.</t>
		 <t hangText="1 -">
		 Split MAC: Service for the WLAN is to be provided in Split MAC mode.</t>
		 </list>

         <t hangText= "Tunnel Mode: ">
         This field specifies the frame tunneling type to be used for 802.11
		 data frames from all stations associated with the WLAN. The AC MUST NOT
		 request a mode of operation that was not advertised by the WTP during
		 the discovery process (see Section 4.6.42 in
		 <xref target="RFC5415"> </xref>). All
		 IEEE 802.11 management frames MUST be tunneled using 802.11 Tunnel
		 mode. The following enumerated values are supported:</t>
		 <list style="hanging" hangIndent="6">
		 <t hangText="0 -">
		 Local Bridging: All user traffic is to be locally bridged.</t>
		 <t hangText="1 -">
		 802.3 Tunnel: All user traffic is to be tunneled to the AC in 802.3 format (see
		 Section 4.4.2 in
		 <xref target="RFC5415"> </xref>). Note
		 that this option MUST NOT be selected with Split MAC mode.</t>
		 <t hangText="2 -">
		 802.11 Tunnel: All user traffic is to be tunneled to the AC in 802.11 format.</t>
		 </list>

         <t hangText= "Suppress SSID: ">
         A boolean indicating whether the SSID is to be advertised by
         the WTP. A value of zero suppresses the SSID in the 802.11 Beacon and
		 Probe Response frames, while a value of one will cause the WTP to
		 populate the field.</t>

         <t hangText= "SSID: ">
         The SSID attribute is the service set identifier that will be
         advertised by the WTP for this WLAN. The SSID field contains any ASCII
		 character and MUST NOT exceed 32 octets in length, as defined in
		 <xref target="IEEE.802-11.2007"></xref>.</t>
       </list>

      </section> <!-- IEEE 802.11 Add WLAN -->

  <section anchor="IEEE-802.11-Antenna" title="IEEE 802.11 Antenna">
        <t>The IEEE 802.11 Antenna message element is communicated by the WTP to
		the AC to provide information on the antennas available.  The AC MAY use
		this element to reconfigure the WTP's antennas.  The message element
		contains the following fields:</t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |   Diversity   |    Combiner   |  Antenna Cnt  |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    | Antenna Selection...
    +-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1025 for IEEE 802.11 Antenna</t>

         <t hangText= "Length: ">
         >= 5</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio to configure, whose value is
		 between one (1) and 31.</t>

         <t hangText= "Diversity: ">
         An 8-bit value specifying whether the antenna is to provide receiver
		 diversity. 
The value of this field is the same as the IEEE 802.11
		 dot11DiversitySelectionRx MIB element, see
		 <xref target="IEEE.802-11.2007"></xref>.  The following enumerated
		 values are supported:</t>
	     <list style="hanging" hangIndent="6">
            <t hangText="0 -">Disabled</t>
            <t hangText="1 -">Enabled (may only be true if the antenna can be
			used as a receiving antenna)</t>
         </list>

         <t hangText= "Combiner: ">
         An 8-bit value specifying the combiner selection. The following
		 enumerated values are supported:</t>
         <list style="hanging" hangIndent="6">
            <t hangText="1 -">Sectorized (Left)</t>
            <t hangText="2 -">Sectorized (Right)</t>
            <t hangText="3 -">Omni</t>
            <t hangText="4 -">Multiple Input/Multiple Output (MIMO)</t>
         </list>

         <t hangText= "Antenna Count: ">
         An 8-bit value specifying the number of Antenna Selection fields.
		 This value SHOULD be the same as the one found in the IEEE 802.11
		 dot11CurrentTxAntenna MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Antenna Selection: ">
         One 8-bit antenna configuration value per antenna in the WTP,
		 containing up to 255 antennas. The following enumerated values are
		 supported:</t>
         <list>
            <t hangText="1 -">Internal Antenna</t>
            <t hangText="2 -">External Antenna</t>
         </list>
       </list>

     </section> <!-- IEEE 802.11 Antenna -->

    <section title="IEEE 802.11 Assigned WTP BSSID" anchor="IEEE-802.11-Assigned-WTP-BSSID">
        <t>The IEEE 802.11 Assigned WTP BSSID is only included by the WTP when
		the IEEE 802.11 WLAN Configuration Request included the IEEE 802.11 Add WLAN
		message element. The BSSID value field of this message element contains the
		BSSID that has been assigned by the WTP, enabling the WTP to 
		perform its own BSSID assignment.</t>

		<t>The WTP is free to assign the BSSIDs the way it sees fit, but it is
		highly recommended that the WTP assign the BSSID using the following 
		algorithm: BSSID = {base BSSID} + WLAN ID.</t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |    WLAN ID    |           BSSID               
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                             BSSID                             |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1026 for IEEE 802.11 Assigned WTP BSSID</t>

         <t hangText= "Length: ">
         8</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio, whose value is between one (1)
		 and 31.</t>

         <t hangText= "WLAN ID: ">
         An 8-bit value specifying the WLAN Identifier. The value MUST be
		 between one (1) and 16.</t>
	 
         <t hangText="BSSID: ">
         The BSSID assigned by the WTP for the WLAN created as a result of
		 receiving an IEEE 802.11 Add WLAN.</t>
        </list>
    </section> <!-- IEEE 802.11 Assigned WTP BSSID -->
    
    <section anchor="IEEE-802.11-Delete-WLAN" title="IEEE 802.11 Delete WLAN">
        <t>The IEEE 802.11 Delete WLAN message element is used to inform the WTP that a 
        previously created WLAN is to be deleted, and contains the 
        following fields:</t>

<artwork>
   0                   1
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |    Radio ID   |    WLAN ID    |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1027 for IEEE 802.11 Delete WLAN</t>

         <t hangText= "Length: ">
         2</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio, whose value is between one (1)
		 and 31.</t>

         <t hangText="WLAN ID: ">
         An 8-bit value specifying the WLAN Identifier. The value MUST be
		 between one (1) and 16.</t>
        </list>
    </section> <!-- IEEE 802.11 Delete WLAN -->

   <section anchor="IEEE-802.11-Direct-Sequence-Control" title="IEEE 802.11 Direct Sequence Control">
        <t>The IEEE 802.11 Direct Sequence Control message element is a bi-directional
        element.  When sent by the WTP, it contains the current state.  When
        sent by the AC, the WTP MUST adhere to the values provided.  This element is
        only used for IEEE 802.11b radios.  The message element has the following fields.</t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |    Reserved   | Current Chan  |  Current CCA  |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                    Energy Detect Threshold                    |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1028 for IEEE 802.11 Direct Sequence Control</t>

         <t hangText= "Length: ">
         8</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio to configure, whose value is
		 between one (1) and 31.</t>

         <t hangText="Reserved: ">
         All implementations complying with this protocol MUST set to zero any
		 bits that are reserved in the version of the protocol supported by that
		 implementation.  Receivers MUST ignore all bits not defined for the
		 version of the protocol they support.</t>

         <t hangText= "Current Channel: ">
         This attribute contains the current operating frequency channel of the
		 Direct Sequence Spread Spectrum (DSSS) PHY. This value comes from the
		 IEEE 802.11 dot11CurrentChannel MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Current CCA: ">
         The current Clear Channel Assessment (CCA) method in operation, whose
		 value can be found in the IEEE 802.11 dot11CCAModeSupported MIB element
		 (see <xref target="IEEE.802-11.2007"></xref>). Valid values are:</t>
		 <list>
		 	<t>1 - energy detect only (edonly)</t>
			<t>2 - carrier sense only (csonly)</t>
			<t>4 - carrier sense and energy detect (edandcs)</t>
			<t>8 - carrier sense with timer (cswithtimer)</t>
			<t>16 - high rate carrier sense and energy detect (hrcsanded)</t>
		</list>

         <t hangText= "Energy Detect Threshold: ">
         The current Energy Detect Threshold being used by the DSSS PHY.
		 The value can be found in the IEEE 802.11 dot11EDThreshold MIB element
		 (see <xref target="IEEE.802-11.2007"></xref>).</t>
       </list>

     </section> <!-- IEEE 802.11 Direct Sequence Control -->

    <section title="IEEE 802.11 Information Element" anchor="IEEE-802.11-Information-Element">
        <t>The IEEE 802.11 Information Element is used to communicate any IE
		defined in the IEEE 802.11 protocol. The data field contains the raw
		IE as it would be included within an IEEE 802.11 MAC management
		message.</t>

<artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |   Radio ID    |    WLAN ID    |B|P| Reserved  |Info Element... 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 </artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1029 for IEEE 802.11 Information Element</t>

         <t hangText= "Length: ">
         >= 4</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio, whose value is between one (1)
		 and 31.</t>

         <t hangText= "WLAN ID: ">
         An 8-bit value specifying the WLAN Identifier. The value MUST be
		 between one (1) and 16.</t>
	 
		 <t hangText= "B: ">
         When set, the WTP is to include the Information Element in IEEE 802.11
		 Beacons associated with the WLAN.</t>

         <t hangText= "P: ">
         When set, the WTP is to include the Information Element in Probe 
		 Responses associated with the WLAN.</t>

         <t hangText= "Reserved: ">
         All implementations complying with this protocol MUST set to zero any
		 bits that are reserved in the version of the protocol supported by that
		 implementation.  Receivers MUST ignore all bits not defined for the
		 version of the protocol they support.</t>

         <t hangText="Info Element: ">
         The IEEE 802.11 Information Element, which includes the type, length,
		 and value field.</t>
        </list>
    </section> <!-- IEEE 802.11 Information Element -->

  <section anchor="IEEE-802.11-MAC-Operation" title="IEEE 802.11 MAC Operation">
        <t>The IEEE 802.11 MAC Operation message element is sent by the AC to set the IEEE 802.11
        MAC parameters on the WTP, and contains the following fields.</t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |    Reserved   |         RTS Threshold         |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |  Short Retry  |  Long Retry   |    Fragmentation Threshold    |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                       Tx MSDU Lifetime                        |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                       Rx MSDU Lifetime                        |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1030 for IEEE 802.11 MAC Operation</t>

         <t hangText= "Length: ">
         16</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio to configure, whose value is
		 between one (1) and 31.</t>

         <t hangText="Reserved: ">
         All implementations complying with this protocol MUST set to zero any
		 bits that are reserved in the version of the protocol supported by that
		 implementation.  Receivers MUST ignore all bits not defined for the
		 version of the protocol they support.</t>

         <t hangText= "RTS Threshold: ">
         This attribute indicates the number of octets in an
         MAC Protocol Data Unit (MPDU), below which a Request To Send/Clear To 
		 Send (RTS/CTS) handshake MUST NOT be performed.  An RTS/CTS handshake
		 MUST be performed at the beginning of any frame exchange sequence where
		 the MPDU is of type Data or Management, the MPDU has an individual
		 address in the Address1 field, and the length of the MPDU is greater
		 than this threshold.  Setting this attribute to be larger than the
		 maximum MSDU size MUST have the effect of turning off the RTS/CTS
		 handshake for frames of Data or Management type transmitted by this STA.
		 Setting this attribute to zero MUST have the effect of turning on the
		 RTS/CTS handshake for all frames of Data or Management type transmitted
		 by this STA. The default value of this attribute MUST be 2347. The
		 value of this field comes from the IEEE 802.11 dot11RTSThreshold MIB
		 element, (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Short Retry: ">
         This attribute indicates the maximum number of
         transmission attempts of a frame, the length of which is less than
         or equal to RTSThreshold, that MUST be made before a failure
         condition is indicated.  The default value of this attribute MUST
         be 7. The value of this field comes from the IEEE 802.11
		 dot11ShortRetryLimit MIB element, (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Long Retry: ">
         This attribute indicates the maximum number of
         transmission attempts of a frame, the length of which is greater
         than dot11RTSThreshold, that MUST be made before a failure
         condition is indicated.  The default value of this attribute MUST
         be 4. The value of this field comes from the IEEE 802.11
		 dot11LongRetryLimit MIB element, (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Fragmentation Threshold: ">
         This attribute specifies the current
         maximum size, in octets, of the MPDU that MAY be delivered to the
         PHY.  A MAC Service Data Unit (MSDU) MUST be broken into fragments if
		 its size exceeds the value of this attribute after adding MAC headers
		 and trailers. An MSDU or MAC Management Protocol Data Unit (MMPDU) MUST
		 be fragmented when the resulting frame has an individual address in the
		 Address1 field, and the length of the frame is larger than this
		 threshold.  The default value for this attribute MUST be the lesser of
		 2346 or the aMPDUMaxLength of the attached PHY and MUST never exceed
		 the lesser of 2346 or the aMPDUMaxLength of the attached PHY.  The
		 value of this attribute MUST never be less than 256. The value of this
		 field comes from the IEEE 802.11 dot11FragmentationThreshold MIB
		 element, (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Tx MSDU Lifetime: ">
         This attribute specifies the elapsed time in Time Units (TUs),
         after the initial transmission of an MSDU, after which further
         attempts to transmit the MSDU MUST be terminated.  The default
         value of this attribute MUST be 512. The value of this
		 field comes from the IEEE 802.11 dot11MaxTransmitMSDULifetime MIB
		 element, (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Rx MSDU Lifetime: ">
         This attribute specifies the elapsed time in TU,
         after the initial reception of a fragmented MMPDU or MSDU, after
         which further attempts to reassemble the MMPDU or MSDU MUST be
         terminated.  The default value MUST be 512. The value of this
		 field comes from the IEEE 802.11 dot11MaxReceiveLifetime MIB element, (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>
       </list>
	</section> <!-- IEEE 802.11 MAC Operation -->

<section anchor="IEEE-802.11-MIC-Countermeasures" title="IEEE 802.11 MIC Countermeasures">
		<t>The IEEE 802.11 MIC Countermeasures message element is sent by the
		WTP to the AC to indicate the occurrence of a MIC failure. For more
		information on MIC failure events, see the
		dot11RSNATKIPCounterMeasuresInvoked MIB element definition in
		<xref target="IEEE.802-11.2007"></xref>.</t>

<artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |   Radio ID    |    WLAN ID    |          MAC Address          |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                          MAC Address                          |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1031 for IEEE 802.11 MIC Countermeasures</t>

         <t hangText= "Length: ">
         8</t>

         <t hangText="Radio ID: ">
         The Radio Identifier, whose value is between one (1) and 31, typically
		 refers to some interface index on the WTP.</t>

         <t hangText="WLAN ID: ">
         This 8-bit unsigned integer includes the WLAN Identifier, on which the MIC
         failure occurred. The value MUST be between one (1) and 16.</t>

         <t hangText="MAC Address: ">
         The MAC Address of the station that caused the MIC failure.</t>

        </list>
    </section> <!-- IEEE 802.11 MIC Countermeasures -->
    

<!-- Moved IEEE 802.11 Station and IEEE 802.11 Station Session Key because they 
     were no longer alphabetically ordered (changed Mobile to Station) -->

<section anchor="IEEE-802.11-Multi-Domain-Capability" title="IEEE 802.11 Multi-Domain Capability">
		<t>The IEEE 802.11 Multi-Domain Capability message element is used by the AC to
		inform the WTP of regulatory limits.  The AC will transmit one message
		element per frequency band to indicate the regulatory constraints in
		that domain. The message element contains the following fields.</t>
<!-- Mike Issue 104 -->
<artwork>
      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |    Reserved   |        First Channel #        |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |       Number of Channels      |       Max Tx Power Level      |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1032 for IEEE 802.11 Multi-Domain Capability</t>

         <t hangText= "Length: ">
         8</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio to configure, whose value is
		 between one (1) and 31.</t>

         <t hangText="Reserved: ">
         All implementations complying with this protocol MUST set to zero any
		 bits that are reserved in the version of the protocol supported by that
		 implementation.  Receivers MUST ignore all bits not defined for the
		 version of the protocol they support.</t>

         <t hangText= "First Channel #: ">
         This attribute indicates the value of the lowest
         channel number in the sub-band for the associated domain country
         string. The value of this field comes from the IEEE 802.11
		 dot11FirstChannelNumber MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Number of Channels: ">
         This attribute indicates the value of the total number of channels
		 allowed in the sub-band for the associated domain country string (see
		 <xref target="IEEE-802.11-WTP-Radio-Configuration"/>). The value of
		 this field comes from the IEEE 802.11 dot11NumberofChannels MIB element
		 (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Max Tx Power Level: ">
         This attribute indicates the maximum transmit power, in dBm, allowed in
		 the sub-band for the associated domain country string (see
		 <xref target="IEEE-802.11-WTP-Radio-Configuration"/>). The value of
		 this field comes from the IEEE 802.11 dot11MaximumTransmitPowerLevel
		 MIB element (see <xref target="IEEE.802-11.2007"></xref>).</t>
        </list>

     </section> <!-- IEEE 802.11 Multi-domain Capability -->
     
       <section anchor="IEEE-802.11-OFDM-Control" title="IEEE 802.11 OFDM Control">
        <t>The IEEE 802.11 Orthogonal Frequency Division Multiplexing (OFDM)
		Control message element is a bi-directional element.  When sent by the
		WTP, it contains the current state.  When sent by the AC, the WTP MUST
		adhere to the received values.  This message element is only used for
        802.11a radios and contains the following fields:</t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |    Reserved   | Current Chan  |  Band Support |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                         TI Threshold                          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1033 for IEEE 802.11 OFDM Control</t>

         <t hangText= "Length: ">
         8</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio to configure, whose value is
		 between one (1) and 31.</t>

         <t hangText="Reserved: ">
         All implementations complying with this protocol MUST set to zero any
		 bits that are reserved in the version of the protocol supported by that
		 implementation.  Receivers MUST ignore all bits not defined for the
		 version of the protocol they support.</t>

         <t hangText= "Current Channel: ">
         This attribute contains the current operating frequency channel of the
		 OFDM PHY. The value of this field comes from the IEEE 802.11
		 dot11CurrentFrequency MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Band Supported: ">
         The capability of the OFDM PHY implementation to
         operate in the three Unlicensed National Information Infrastructure (U-NII) bands. The value of this field comes from
		 the IEEE 802.11 dot11FrequencyBandsSupported MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>), coded as a bit field, whose
		 values are:</t>
	
         <list style="hanging">
            <t hangText="Bit 0 -">capable of operating in the 5.15-5.25 GHz band</t>
            <t hangText="Bit 1 -">capable of operating in the 5.25-5.35 GHz band</t>
            <t hangText="Bit 2 -">capable of operating in the 5.725-5.825 GHz band</t>
            <t hangText="Bit 3 -">capable of operating in the 5.47-5.725 GHz band</t>
            <t hangText="Bit 4 -">capable of operating in the lower Japanese 5.25 GHz band</t>
            <t hangText="Bit 5 -">capable of operating in the 5.03-5.091 GHz band</t>
            <t hangText="Bit 6 -">capable of operating in the 4.94-4.99 GHz band</t>
         </list>
         <t>For example, for an implementation capable of operating in the
		 5.15-5.35 GHz bands, this attribute would take the value 3.</t>

         <t hangText= "TI Threshold: ">
         The threshold being used to detect a busy medium
         (frequency).  CCA MUST report a busy medium upon detecting the
         RSSI above this threshold. The value of this field comes from the IEEE
		 802.11 dot11TIThreshold MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>
       </list>

     </section> <!-- IEEE 802.11 OFDM Control -->

  <section anchor="IEEE-802.11-Rate-Set" title="IEEE 802.11 Rate Set">
        <t>The rate set message element value is sent by the AC and contains the
        supported operational rates.  It contains the following fields.</t>

<artwork>
      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |                 Rate Set...                    
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1034 for IEEE 802.11 Rate Set</t>

         <t hangText= "Length: ">
         >= 3</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio to configure, whose value is
		 between one (1) and 31.</t>

         <t hangText= "Rate Set: ">
         The AC generates the Rate Set that the WTP is to include in
         its Beacon and Probe messages. The length of this field is between
		 2 and 8 bytes. The value of this field comes from the IEEE 802.11
		 dot11OperationalRateSet MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>
        </list>
	
     </section> <!-- IEEE 802.11 Rate Set -->
  
  <section anchor="IEEE-802.11-RSNA-Error-Report-From-Station" title="IEEE 802.11 RSNA Error Report From Station">
        <t>The IEEE 802.11 RSN Error Report From Station message element is used by a WTP to
		send RSN error reports to the AC. The WTP does not need to
		transmit any reports that do not include any failures. The fields from
		this message element come from the IEEE 802.11 Dot11RSNAStatsEntry
		table, see <xref target="IEEE.802-11.2007"></xref>.</t>

<artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                       Client MAC Address                      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |      Client MAC Address       |             BSSID             |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                             BSSID                             |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |   Radio ID    |    WLAN ID    |           Reserved            |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                        TKIP ICV Errors                        |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                    TKIP Local MIC Failures                    |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                   TKIP Remote MIC Failures                    |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                          CCMP Replays                         |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                        CCMP Decrypt Errors                    |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                          TKIP Replays                         |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1035 for IEEE 802.11 RSNA Error Report From Station</t>

         <t hangText= "Length: ">
         40</t>

         <t hangText="Client MAC Address: ">
         The Client MAC Address of the station.</t>

         <t hangText="BSSID: ">
         The BSSID on which the failures are being reported.</t>

         <t hangText="Radio ID: ">
         The Radio Identifier, whose value is between one (1) and 31, typically
		 refers to some interface index on the WTP.</t>

         <t hangText="WLAN ID: ">
         The WLAN ID on which the RSNA failures are being reported. The value
		 MUST be between one (1) and 16.</t>

         <t hangText="Reserved: ">
         All implementations complying with this protocol MUST set to zero any
		 bits that are reserved in the version of the protocol supported by that
		 implementation.  Receivers MUST ignore all bits not defined for the
		 version of the protocol they support.</t>

         <t hangText="TKIP ICV Errors: ">
         A 32-bit value representing the number of Temporal Key Integrity
		 Protocol (TKIP) (as defined in <xref target="IEEE.802-11.2007"></xref>)
		 ICV errors encountered when decrypting packets from the station. The
		 value of this field comes from the IEEE 802.11
		 dot11RSNAStatsTKIPICVErrors MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="TKIP Local MIC Failures: ">
         A 32-bit value representing the number of MIC failures encountered 
		 when checking the integrity of packets received from the station. The
		 value of this field comes from the IEEE 802.11
		 dot11RSNAStatsTKIPLocalMICFailures MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="TKIP Remote MIC Failures: ">
         A 32-bit value representing the number of MIC failures reported by
		 the station encountered (possibly via the EAPOL-Key frame). The value
		 of this field comes from the IEEE 802.11
		 dot11RSNAStatsTKIPRemoteMICFailures MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="CCMP Replays: ">
         A 32-bit value representing the number of CCMP MPDUs discarded by the
		 replay detection mechanism.  The value of this field comes from the
		 IEEE 802.11 dot11RSNACCMPReplays MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="CCMP Decrypt Errors: ">
         A 32-bit value representing the number of CCMP MDPUs discarded by the
		 decryption algorithm. The value of this field comes from the IEEE
		 802.11 dot11RSNACCMPDecryptErrors MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="TKIP Replays: ">
         A 32-bit value representing the number of TKIP Replays detected in
		 frames received from the station. The value of this field comes
		 from the IEEE 802.11 dot11RSNAStatsTKIPReplays MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>
        </list>
    </section> <!-- IEEE 802.11 RSNA Error Report From Station -->

    <section anchor="IEEE 802.11 Station" title="IEEE 802.11 Station">
	<t>The IEEE 802.11 Station message element accompanies the Add Station
	message element, and is used to deliver IEEE 802.11 station policy from the
	AC to the WTP.</t>
    
	<t>The latest IEEE 802.11 Station message element overrides any previously
	received message elements.</t>

	<t>If the QoS field is set, the WTP MUST observe and provide policing
	of the 802.11e priority tag to ensure that it does not exceed the
	value provided by the AC.</t>

<artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |    Radio ID   |        Association ID         |     Flags     |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                           MAC Address                         |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |          MAC Address          |          Capabilities         |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |   WLAN ID     |Supported Rates|
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1036 for IEEE 802.11 Station</t>

         <t hangText= "Length: ">
         >= 14</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio, whose value is between one (1)
		 and 31.</t>

         <t hangText="Association ID: ">
         A 16-bit value specifying the IEEE 802.11 Association Identifier.</t>

         <t hangText="Flags: ">
         All implementations complying with this protocol MUST set to zero any
		 bits that are reserved in the version of the protocol supported by that
		 implementation.  Receivers MUST ignore all bits not defined for the
		 version of the protocol they support.</t>

         <t hangText="MAC Address: "> 
         The station's MAC Address</t>

         <t hangText="Capabilities: ">
         A 16-bit field containing the IEEE 802.11 Capabilities Information
		 Field to use with the station.</t>

         <t hangText="WLAN ID: ">
         An 8-bit value specifying the WLAN Identifier. The value MUST be
		 between one (1) and 16.</t>

         <t hangText="Supported Rates: ">
         The variable-length field containing the supported rates to be used
		 with the station, as found in the IEEE 802.11 dot11OperationalRateSet
		 MIB element (see <xref target="IEEE.802-11.2007"></xref>). This field
		 MUST NOT exceed 126 octets and specifies the set of data rates at which
		 the station may transmit data, where each octet represents a data
		 rate.</t>
	</list>
    </section> <!-- IEEE 802.11 Station -->

	<section anchor="Station-QoS-Profile" title="IEEE 802.11 Station QoS Profile">
	<t>The IEEE 802.11 Station QoS Profile message element contains the
	maximum IEEE 802.11e priority tag that may be used by the station.
	Any packet received that exceeds the value encoded in this message element
	MUST be tagged using the maximum value permitted by to the user. The
	priority tag MUST be between zero (0) and seven (7).
	
	<!-- ISSUE 212 --> This message element MUST NOT be present without the IEEE 802.11
	Station (see <xref target="IEEE 802.11 Station"></xref>) message element. </t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                           MAC Address                         |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |          MAC Address          |         Reserved        |8021p|
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

	<list style="hanging">
		<t hangText= "Type: ">
		1037 for IEEE 802.11 Station QoS Profile</t>

		<t hangText= "Length: ">
		8</t>

		<t hangText= "MAC Address: ">
		The station's MAC Address</t>

		<t hangText="Reserved: ">
		All implementations complying with this protocol MUST set to zero any
		bits that are reserved in the version of the protocol supported by that
		implementation.  Receivers MUST ignore all bits not defined for the
		version of the protocol they support.</t>

		<t hangText= "8021p: ">
		The maximum 802.1p priority value that the WTP will allow in
		the Traffic Identifier (TID) field in the extended 802.11e QoS Data
		header.</t>
	</list>
	</section> <!-- IEEE 802.11 Station QoS Profile -->
    
	<section anchor="IEEE 802.11 Station Session Key" title="IEEE 802.11 Station Session Key">
	<t>The IEEE 802.11 Station Session Key message element is sent by the AC to provision encryption keys, or to configure an access policy,
	on the WTP. This message element MUST NOT be present without the IEEE 802.11
	Station (see <xref target="IEEE 802.11 Station"></xref>) message element,
	and MUST NOT be sent if the WTP had not specifically advertised support for
	the requested encryption scheme, through the WTP Descriptor Message Element's
	Encryption Capabilities field (see <xref
	target="WTP Descriptor Message Element, Encryption Capabilities Field: "/>).</t>

	<t>When the Key field is non-zero in length, the RSN Information Element
	MUST be sent along with the IEEE 802.11 Station Session Key in order to
	instruct the WTP on the usage of the Key field. The WTP MUST observe the
	Authentication and Key Management (AKM) field of the RSN Information Element in order to identify the
	authentication protocol to be enforced with the station.</t>

	<t>If cryptographic services are provided at the WTP, the WTP MUST observe
	the algorithm dictated in the Pairwise Cipher Suite field of the RSN
	Information Element sent by the AC. The RSN Information Element included
	here is the one sent by the AC in the third message of the 4-Way Key Handshake,
	which specifies which cipher is to be applied to provide encryption and
	decryption services with the station. The RSN Information Element is used to
	communicate any supported algorithm, including WEP, TKIP, and AES-CCMP. In
	the case of static WEP keys, the RSN Information Element is still used to
	indicate the cryptographic algorithm even though no key exchange occurred.</t>

	<t>If the IEEE 802.11 Station Session Key message element's 'AKM-Only' bit is
	set, the WTP MUST drop all IEEE 802.11 packets that are not part of
	the Authentication and Key Management (AKM), such as EAP. Note that
	AKM-Only MAY be set while an encryption key is in force, requiring that
	the AKM packets be encrypted. Once the station has successfully completed
	authentication via the AKM, the AC MUST send a new Add Station message
	element to remove the AKM-Only restriction, and optionally push the session
	key down to the WTP.</t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                           MAC Address                         |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |          MAC Address          |A|C|           Flags           |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                         Pairwise TSC                          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |         Pairwise TSC          |         Pairwise RSC          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                         Pairwise RSC                          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Key...    
    +-+-+-+-+-+-+-+-
</artwork>

	<list style="hanging">
		<t hangText= "Type: ">
		1038 for IEEE 802.11 Station Session Key</t>

		<t hangText= "Length: ">
		>= 25</t>

		<t hangText="MAC Address: "> 
		The station's MAC Address</t>

		<t hangText="Flags: "> 
         All implementations complying with this protocol MUST set to zero any
		 bits that are reserved in the version of the protocol supported by that
		 implementation.  Receivers MUST ignore all bits not defined for the
		 version of the protocol they support. The following bits are defined:</t>

		<list style="hanging">
			<t hangText="A:" hangIndent="6">
			The 1-bit AKM-Only field is set by the AC to inform the WTP that
			is MUST NOT accept any 802.11 Data Frames other than AKM frames.
			This is the equivalent of the WTP's IEEE 802.1X port for the 
			station to be in the closed state. When set, the WTP MUST drop any
			non-IEEE 802.1X packets it receives from the station.</t>

			<t hangText="C: ">
			The 1-bit field is set by the AC to inform the WTP that encryption
			services will be provided by the AC. When set, the WTP SHOULD police
			frames received from stations to ensure that they are properly encrypted
			as specified in the RSN Information Element, but does not need to
			take specific cryptographic action on the frame. Similarly, for
			transmitted frames, the WTP only needs to forward already encrypted
			frames. Since packets received by the WTP will be encrypted, the WTP
			cannot modify the contents of the packets, including modifying the
			DSCP markings of the encapsulated packet. In this case, this
			function would be the responsibility of the AC.</t>
		</list>

		<t hangText="Pairwise TSC: ">
		The 6-byte Transmit Sequence Counter (TSC) field to use for unicast
		packets transmitted to the station.</t>

		<t hangText="Pairwise RSC: ">
		The 6-byte Receive Sequence Counter (RSC) to use for unicast packets
		received from the station.</t>

		<t hangText="Key: ">
		The pairwise key the WTP is to use when encrypting traffic to/from the
		station. The format of the keys differs based on the crypto algorithm
		used. For unicast WEP keys, the Key field consists of the actual
		unicast encryption key (note, this is used when WEP is used in
		conjunction with 802.1X, and therefore a unicast encryption key exists).
		When used with CCMP, the Key field includes the 128-bit Temporal Key. When used with TKIP, the Key field includes the 256-bit Temporal Key 
		(which consists of a 128-bit key used as input for TKIP key mixing, 
		and two 64-bit keys used for Michael).</t>
	</list>
	</section> <!-- IEEE 802.11 Station Session Key -->

  <section title="IEEE 802.11 Statistics" anchor="IEEE-802.11-Statistics" >
     <t>The IEEE 802.11 Statistics message element is sent by the WTP to
	 transmit its current statistics, and it contains the following fields.
	 All of the fields in this message element are set to zero upon WTP
	 initialization. The fields will roll over when they reach their maximum
	 value of 4294967295. Due to the nature of each counter representing different
	 data points, the rollover event will vary greatly across each field.
	 Applications or human operators using these counters need to be aware of
	 the minimal possible times between rollover events in order to make sure
	 that no consecutive rollover events are missed.</t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |                   Reserved                    |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                       Tx Fragment Count                       | 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                       Multicast Tx Count                      |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                          Failed Count                         |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                          Retry Count                          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                      Multiple Retry Count                     |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                     Frame Duplicate Count                     |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                       RTS Success Count                       |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                       RTS Failure Count                       |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                       ACK Failure Count                       |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                       Rx Fragment Count                       |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                       Multicast RX Count                      |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                        FCS Error  Count                       |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                        Tx Frame Count                         |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                       Decryption Errors                       |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                  Discarded QoS Fragment Count                 |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                    Associated Station Count                   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                  QoS CF Polls Received Count                  |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                   QoS CF Polls Unused Count                   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                  QoS CF Polls Unusable Count                  |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1039 for IEEE 802.11 Statistics</t>

         <t hangText= "Length: ">
         80</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio, whose value is between one (1)
		 and 31.</t>

         <t hangText="Reserved: ">
         All implementations complying with this protocol MUST set to zero any
		 bits that are reserved in the version of the protocol supported by that
		 implementation.  Receivers MUST ignore all bits not defined for the
		 version of the protocol they support.</t>

         <t hangText="Tx Fragment Count: ">
         A 32-bit value representing the number of fragmented frames
		 transmitted. The value of this field comes from the IEEE 802.11
		 dot11TransmittedFragmentCount MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="Multicast Tx Count: ">
         A 32-bit value representing the number of multicast frames
		 transmitted. The value of this field comes from the IEEE 802.11
		 dot11MulticastTransmittedFrameCount MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="Failed Count: ">
         A 32-bit value representing the transmit excessive retries. The value
		 of this field comes from the IEEE 802.11 dot11FailedCount MIB element
		 (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="Retry Count: ">
         A 32-bit value representing the number of transmit retries.  The value
		 of this field comes from the IEEE 802.11 dot11RetryCount MIB element
		 (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="Multiple Retry Count: ">
         A 32-bit value representing the number of transmits that required more
		 than one retry. The value of this field comes from the IEEE 802.11
		 dot11MultipleRetryCount MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="Frame Duplicate Count: ">
         A 32-bit value representing the duplicate frames received. The value
		 of this field comes from the IEEE 802.11 dot11FrameDuplicateCount MIB
		 element (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="RTS Success Count: ">
         A 32-bit value representing the number of successfully transmitted
		 Ready To Send (RTS). The value of this field comes from the IEEE 802.11
		 dot11RTSSuccessCount MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="RTS Failure Count: ">
         A 32-bit value representing the failed transmitted RTS. The value of
		 this field comes from the IEEE 802.11 dot11RTSFailureCount MIB element
		 (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="ACK Failure Count: ">
         A 32-bit value representing the number of failed acknowledgements. The
		 value of this field comes from the IEEE 802.11 dot11ACKFailureCount MIB
		 element (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="Rx Fragment Count: ">
         A 32-bit value representing the number of fragmented frames received.
		 The value of this field comes from the IEEE 802.11
		 dot11ReceivedFragmentCount MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="Multicast RX Count: ">
         A 32-bit value representing the number of multicast frames received.
		 The value of this field comes from the IEEE 802.11
		 dot11MulticastReceivedFrameCount MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="FCS Error Count: ">
         A 32-bit value representing the number of FCS failures. The value of
		 this field comes from the IEEE 802.11 dot11FCSErrorCount MIB element
		 (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="Decryption Errors: ">
         A 32-bit value representing the number of Decryption errors that 
		 occurred on the WTP. Note that this field is only valid in cases where
		 the WTP provides encryption/decryption services. The value of this
		 field comes from the IEEE 802.11 dot11WEPUndecryptableCount MIB element
		 (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="Discarded QoS Fragment Count: ">
         A 32-bit value representing the number of discarded QoS fragments
		 received. The value of this field comes from the IEEE 802.11
		 dot11QoSDiscardedFragmentCount MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="Associated Station Count: ">
         A 32-bit value representing the number of number of associated stations.
		 The value of this field comes from the IEEE 802.11
		 dot11AssociatedStationCount MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="QoS CF Polls Received Count: ">
         A 32-bit value representing the number of (+)CF-Polls received. The
		 value of this field comes from the IEEE 802.11
		 dot11QosCFPollsReceivedCount MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="QoS CF Polls Unused Count: ">
         A 32-bit value representing the number of (+)CF-Polls that have been
		 received, but not used. The value of this field comes from the IEEE
		 802.11 dot11QosCFPollsUnusedCount MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText="QoS CF Polls Unusable Count: ">
         A 32-bit value representing the number of (+)CF-Polls that have been
		 received, but could not be used due to the Transmission Opportunity
		 (TXOP) size being smaller than the time that is required for one frame
		 exchange sequence. The value of this field comes from the IEEE 802.11
		 dot11QosCFPollsUnusableCount MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>
       </list>

    </section> <!-- IEEE 802.11 Statistics -->

       <section anchor="IEEE-802.11-Supported-Rates" title="IEEE 802.11 Supported Rates">
        <t>The IEEE 802.11 Supported Rates message element is sent by the WTP to indicate the
        rates that it supports, and contains the following fields.</t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |               Supported Rates...             
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1040 for IEEE 802.11 Supported Rates</t>

         <t hangText= "Length: ">
         >= 3</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio, whose value is between one (1)
		 and 31.</t>

         <t hangText= "Supported Rates: ">
         The WTP includes the Supported Rates that its
         hardware supports.  The format is identical to the Rate Set
         message element and is between 2 and 8 bytes in length.</t>
       </list>

     </section> <!-- IEEE 802.11 Supported Rates -->
     
     	 <section anchor="IEEE-802.11-Tx-Power" title="IEEE 802.11 Tx Power">
        <t>The IEEE 802.11 Tx Power message element value is bi-directional.  When sent by
        the WTP, it contains the current power level of the radio in question.
        When sent by the AC, it contains the power level to which the WTP MUST adhere. </t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |    Reserved   |        Current Tx Power       |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1041 for IEEE 802.11 Tx Power</t>

         <t hangText= "Length: ">
         4</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio to configure, whose value is
		 between one (1) and 31.</t>

         <t hangText="Reserved: ">
         All implementations complying with this protocol MUST set to zero any
		 bits that are reserved in the version of the protocol supported by that
		 implementation.  Receivers MUST ignore all bits not defined for the
		 version of the protocol they support.</t>

         <t hangText= "Current Tx Power: ">
         This attribute contains the current transmit output power in mW, as described
      	 in the dot11CurrentTxPowerLevel MIB variable, see <xref target="IEEE.802-11.2007"></xref>.</t>
       </list>
       
 
     </section> <!-- IEEE 802.11 Tx Power -->

	<section anchor="IEEE-802.11-Tx-Power-Level" title="IEEE 802.11 Tx Power Level">
        <t>The IEEE 802.11 Tx Power Level message element is sent by the WTP and contains the
        different power levels supported. The values found in this message
		element are found in the IEEE 802.11 Dot11PhyTxPowerEntry MIB table,
		see <xref target="IEEE.802-11.2007"></xref>.</t>

		<t>The value field contains the following:</t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |   Num Levels  |        Power Level [n]        |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1042 for IEEE 802.11 Tx Power Level</t>

         <t hangText= "Length: ">
         >= 4</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio to configure, whose value is
		 between one (1) and 31.</t>

         <t hangText= "Num Levels: ">
         The number of power level attributes. The value of this field comes
		 from the IEEE 802.11 dot11NumberSupportedPowerLevels MIB
		 element (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Power Level: ">
         Each power level field contains a supported power level, in mW. The value
		 of this field comes from the corresponding IEEE 802.11
		 dot11TxPowerLevel[n] MIB element, see
		 <xref target="IEEE.802-11.2007"></xref>.</t>
       </list>
	</section> <!-- IEEE 802.11 Tx Power Level -->

	<section anchor="IEEE-802.11-Update-Station-QoS" title="IEEE 802.11 Update Station QoS">
	<t>The IEEE 802.11 Update Station QoS message element is used to change
	the Quality of Service policy on the WTP for a given station. The QoS
	tags included in this message element are to be applied to packets received
	at the WTP from the station indicated through the MAC Address field. This 
	message element overrides the default values provided through the IEEE
	802.11 WTP Quality of Service message element (see <xref
	target="IEEE-802.11-WTP-Quality-of-Service"/>). Any tagging performed by the
	WTP MUST be directly applied to the packets received from the station, as
	well as the CAPWAP tunnel, if the packets are tunneled to the AC. See
	<xref target="CAPWAP Data Channel QoS Behavior"/> for more information.</t>

<artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |   Radio ID    |                  MAC Address                  |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |          MAC Address          |       QoS Sub-Element...      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

	<list style="hanging">
		<t hangText= "Type: ">
		1043 for IEEE 802.11 Update Station QoS</t>

		<t hangText= "Length: ">
		8</t>

		<t hangText="Radio ID: ">
		The Radio Identifier, whose value is between one (1) and 31, typically
		refers to some interface index on the WTP.</t>

		<t hangText="MAC Address: ">
		The station's MAC Address.</t>

		<t hangText="QoS Sub-Element: ">
        The IEEE 802.11 WTP Quality of Service message element contains
		four QoS sub-elements, one for every QoS profile. The order of the QoS
		profiles are Voice, Video, Best Effort, and Background.</t>

	<list style="hanging">
<artwork>
   0                   1
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | Reserved|8021p|RSV| DSCP Tag  |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

</artwork>
        <t hangText="Reserved: ">
        All implementations complying with this protocol MUST set to zero any
		bits that are reserved in the version of the protocol supported by that
		implementation.  Receivers MUST ignore all bits not defined for the
		version of the protocol they support.</t>

		<t hangText="8021p: ">
		The 3-bit 802.1p priority value to use if packets are to be IEEE
		802.1p tagged. This field is used only if the 'P' bit in the WTP Quality
		of Service message element was set; otherwise, its contents MUST be
		ignored.</t>

		<t hangText="RSV: ">
		All implementations complying with this protocol MUST set to zero any
		bits that are reserved in the version of the protocol supported by that
		implementation.  Receivers MUST ignore all bits not defined for the
		version of the protocol they support.</t>

		<t hangText="DSCP Tag: ">
		The 6-bit DSCP label to use if packets are eligible to be DSCP tagged,
		specifically an IPv4 or IPv6 packet	(see
		<xref target="RFC2474"></xref>). This field is used only if the 'D' bit
		in the WTP Quality of Service message element was set; otherwise, its
		contents MUST be ignored.</t>
	</list>
	</list>
    </section> <!-- IEEE 802.11 Update Station QoS -->
    
    <section anchor="IEEE-802.11-Update-WLAN" title="IEEE 802.11 Update WLAN">
        <t>The IEEE 802.11 Update WLAN message element is used by the AC to define a
        wireless LAN on the WTP. The inclusion of this message element
		MUST also include the IEEE 802.11 Information Element message
		element, containing the following 802.11 IEs:</t>
        <list style="hanging">
         <t hangText= "Power Constraint information element"></t>
         <t hangText= "WPA information element"><xref target="WPA"></xref></t>
         <t hangText= "RSN information element"></t>
         <t hangText= "Enhanced Distributed Channel Access (EDCA) Parameter Set information element"></t>
         <t hangText= "QoS Capability information element"></t>
         <t hangText= "WMM information element"><xref target="WMM"></xref></t>
		</list>

		<t>These IEEE 802.11 Information Elements are stored by the WTP and
		included in any Probe Responses and Beacons generated, as specified in
		the IEEE 802.11 standard <xref target="IEEE.802-11.2007"/>.</t>

		<t>If cryptographic services are provided at the WTP, the WTP MUST
		observe the algorithm dictated in the Group Cipher Suite field of the
		RSN Information Element sent by the AC. The RSN Information Element is
		used to communicate any supported algorithm, including WEP, TKIP, and
		AES-CCMP. In the case of static WEP keys, the RSN Information Element is
		still used to indicate the cryptographic algorithm even though no key
		exchange occurred.</t>

		<t>The message element uses the following format:</t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |     WLAN ID   |           Capability          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |   Key Index   |   Key Status  |           Key Length          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                             Key...                            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1044 for IEEE 802.11 Update WLAN</t>

         <t hangText= "Length: ">
         >= 8</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio, whose value is between one (1)
		 and 31.</t>

         <t hangText= "WLAN ID: ">
         An 8-bit value specifying the WLAN Identifier. The value MUST be
		 between one (1) and 16.</t>


         <t hangText= "Capability: ">
         A 16-bit value containing the Capability information field to be
		 advertised by the WTP in the Probe Request and Beacon frames. Each bit
		 of the Capability field represents a different WTP capability, which
		 are described in detail in <xref target="IEEE.802-11.2007"></xref>.
		 The format of the field is:</t>
<artwork>
     0                   1
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |E|I|C|F|P|S|B|A|M|Q|T|D|V|O|K|L|
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
		 <list style="hanging">
         <t hangText= "E (ESS): ">
         The AC MUST set the Extended Service Set (ESS) subfield to 1.</t>

         <t hangText= "I (IBSS): ">
         The AC MUST set the Independent Basic Service Set (IBSS) subfield to
		 0.</t>

         <t hangText= "C (CF-Pollable): ">
         The AC sets the Contention Free Pollable (CF-Pollable) subfield based
		 on the table found in <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "F (CF-Poll Request): ">
         The AC sets the CF-Poll Request subfield based on the table found in
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "P (Privacy): ">
         The AC sets the Privacy subfield based on the confidentiality
		 requirements of the WLAN, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "S (Short Preamble): ">
         The AC sets the Short Preamble subfield based on whether the use of
		 short preambles are permitted on the WLAN, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "B (PBCC): ">
         The AC sets the Packet Binary Convolutional Code (PBCC) modulation
		 option subfield based on whether the use of PBCC is permitted on the
		 WLAN, as defined in <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "A (Channel Agility): ">
         The AC sets the Channel Agility subfield based on whether the WTP is
		 capable of supporting the High Rate Direct Sequence Spread Spectrum
		 (HR/DSSS), as defined in <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "M (Spectrum Management): ">
         The AC sets the Spectrum Management subfield according to the value of
		 the dot11SpectrumManagementRequired MIB variable, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "Q (QoS): ">
         The AC sets the Quality of Service (QoS) subfield based on the table found in
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "T (Short Slot Time): ">
         The AC sets the Short Slot Time subfield according to the value of
		 the WTP's currently used slot time value, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "D (APSD): ">
         The AC sets the APSD subfield according to the value of
		 the dot11APSDOptionImplemented Management Information Base (MIB)
		 variable, as defined in <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "V (Reserved): ">
         The AC sets the Reserved subfield to zero, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "O (DSSS-OFDM): ">
         The AC sets the DSSS-OFDM subfield to indicate the use of Direct
		 Sequence Spread Spectrum with Orthogonal Frequency Division
		 Multiplexing (DSSS-OFDM), as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "K (Delayed Block ACK): ">
         The AC sets the Delayed Block ACK subfield according to the value of
		 the dot11DelayedBlockAckOptionImplemented MIB variable, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "L (Immediate Block ACK): ">
         The AC sets the Delayed Block ACK subfield according to the value of
		 the dot11ImmediateBlockAckOptionImplemented MIB variable, as defined in 
		 <xref target="IEEE.802-11.2007"></xref>.</t>
		 </list>

         <t hangText= "Key-Index: ">
         The Key-Index associated with the key.</t>

         <t hangText= "Key Status: ">
         A 1-byte value that specifies the state and usage of the key that has
		 been included. The following values describe the key usage and its
		 status:</t>
		 <list style="hanging" hangIndent="6">
		 <t hangText="0 -"> A value of zero, with the inclusion of the RSN
		 Information Element means that the WLAN uses per-station encryption
		 keys, and therefore the key in the 'Key' field is only used for
		 multicast traffic.</t>
		 <t hangText="1 -">When set to one, the WLAN employs a shared WEP key, 
		 also known as a static WEP key, and uses the encryption key
		 for both unicast and multicast traffic for all stations.</t>
		 <t hangText="2 -">The value of 2 indicates that the AC will begin
		 rekeying the GTK with the STA's in the BSS. It is only valid when 
		 IEEE 802.11 is enabled as the security policy for the BSS.</t>
		 <t hangText="3 -">The value of 3 indicates that the AC has completed
		 rekeying the GTK and broadcast packets no longer need to be duplicated
		 and transmitted with both GTK's.</t>
		 </list>

         <t hangText= "Key Length: ">
         A 16-bit value representing the length of the Key field.</t>

         <t hangText= "Key: ">
         A Session Key, whose length is known via the Key Length field, used to
		 provide data privacy. For static WEP keys, which is true when the
		 'Key Status' bit is set to one, this key is used for both unicast and
		 multicast traffic. For encryption schemes that employ a separate
		 encryption key for unicast and multicast traffic, the key included here
		 only applies to multicast data, and the cipher suite is specified in an
		 accompanied RSN Information Element. In these scenarios, the key, and
		 cipher information, is communicated via the Add Station message element,
		 see Section 4.6.8 in
		 <xref target="RFC5415"> </xref>. When
		 used with WEP, the Key field includes the broadcast key.  When used 
		 with CCMP, the Key field includes the 128-bit Group Temporal Key. When 
		 used with TKIP, the Key field includes the 256-bit Group Temporal Key 
		 (which consists of a 128-bit key used as input for TKIP key mixing, and 
		 two 64-bit keys used for Michael).</t>
		 </list>
      </section> <!-- IEEE 802.11 Update WLAN -->

      <section anchor="IEEE-802.11-WTP-Quality-of-Service" title="IEEE 802.11 WTP Quality of Service">
        <t>The IEEE 802.11 WTP Quality of Service message element value is sent
		by the AC to the WTP to communicate Quality of Service configuration
		information. The QoS tags included in this message element are the
		default QoS values to be applied to packets received by the WTP from
		stations on a particular radio. Any tagging performed by the WTP MUST be
		directly applied to the packets received from the station, as well as the
		CAPWAP tunnel, if the packets are tunneled to the AC.  See
		<xref target="CAPWAP Data Channel QoS Behavior"/> for more information.</t>

<artwork>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |   Radio ID    |Tagging Policy |       QoS Sub-Element ...
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1045 for IEEE 802.11 WTP Quality of Service</t>

         <t hangText= "Length: ">
         34</t>

         <t hangText="Radio ID: ">
         The Radio Identifier, whose value is between one (1) and 31, typically
		 refers to some interface index on the WTP.</t>

		<t hangText="Tagging Policy: ">
         A bit field indicating how the WTP is to mark packets for QoS
		 purposes. The required WTP behavior is defined in <xref
		 target="IEEE 802.11 Data Frames"/>. The field has the following
		 format:</t>
<artwork>
      0 1 2 3 4 5 6 7 
     +-+-+-+-+-+-+-+-+
     |Rsvd |P|Q|D|O|I|
     +-+-+-+-+-+-+-+-+
</artwork>
		<list style="hanging">
		 <t hangText="Rsvd:">A set of reserved bits for future use. All
		 implementations complying with this protocol MUST set to zero any bits
		 that are reserved in the version of the protocol supported by that
		 implementation.  Receivers MUST ignore all bits not defined for the
		 version of the protocol they support.</t>
                 </list>

                 <list style="hanging" hangIndent="6">
         <t hangText= "P: "> When set, the WTP is to employ the 802.1p QoS
		 mechanism (see <xref target="802.1p Support"/>), and the WTP is to
		 use the 'Q' bit.</t>

         <t hangText= "Q: "> When the 'P' bit is set, the 'Q' bit is used by
		 the AC to communicate to the WTP how 802.1p QoS is to be enforced.
		 Details on the behavior of the 'Q' bit are specified in <xref
		 target="802.1p Support"/>.</t>

         <t hangText= "D: "> When set, the WTP is to employ the DSCP QoS
		 mechanism (see <xref target="DSCP Support"/>), and the WTP is to
		 use the 'O' and 'I' bits.</t>

         <t hangText= "O: "> When the 'D' bit is set, the 'O' bit is used by the
		 AC to communicate to the WTP how DSCP QoS is to be enforced on the
		 outer (tunneled) header. Details on the behavior of the 'O' bit are
		 specified in <xref target="DSCP Support"/>.</t>

         <t hangText= "I: "> When the 'D' bit is set, the 'I' bit is used by the
		 AC to communicate to the WTP how DSCP QoS is to be enforced on the
		 station's packet (inner) header. Details on the behavior of the 'I' bit
		 are specified in <xref target="DSCP Support"/>.</t>
		 </list>

         <t hangText="QoS Sub-Element: ">
         The IEEE 802.11 WTP Quality of Service message element contains
		 four QoS sub-elements, one for every QoS profile. The order of the QoS
		 profiles are Voice, Video, Best Effort, and Background.</t>

	<list style="hanging">
<artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Queue Depth  |             CWMin             |     CWMax     |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |     CWMax     |     AIFS      | Reserved|8021p|RSV| DSCP Tag  |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

</artwork>

        <t hangText="Queue Depth: ">
        The number of packets that can be on the specific QoS transmit queue
		at any given time.</t>

        <t hangText="CWMin: ">
        The Contention Window minimum (CWmin) value for the QoS transmit queue.
		The value of this field comes from the IEEE 802.11 dot11EDCATableCWMin
		MIB element (see <xref target="IEEE.802-11.2007"></xref>).</t>

        <t hangText="CWMax: ">
        The Contention Window maximum (CWmax) value for the QoS transmit queue.
		The value of this field comes from the IEEE 802.11 dot11EDCATableCWMax
		MIB element (see <xref target="IEEE.802-11.2007"></xref>).</t>

        <t hangText="AIFS: ">
        The Arbitration Inter Frame Spacing (AIFS) to use for the QoS transmit queue.
		The value of this field comes from the IEEE 802.11 dot11EDCATableAIFSN
		MIB element (see <xref target="IEEE.802-11.2007"></xref>).</t>

        <t hangText="Reserved: ">
        All implementations complying with this protocol MUST set to zero any
		bits that are reserved in the version of the protocol supported by that
		implementation.  Receivers MUST ignore all bits not defined for the
		version of the protocol they support.</t>

		<t hangText="8021p: ">
		The 3-bit 802.1p priority value to use if packets are to be IEEE
		802.1p tagged. This field is used only if the 'P' bit is set; otherwise,
		its contents MUST be ignored.</t>

		<t hangText="RSV: ">
		All implementations complying with this protocol MUST set to zero any
		bits that are reserved in the version of the protocol supported by that
		implementation.  Receivers MUST ignore all bits not defined for the
		version of the protocol they support.</t>

		<t hangText="DSCP Tag: ">
		The 6-bit DSCP label to use if packets are eligible to be DSCP tagged,
		specifically an IPv4 or IPv6 packet	(see
		<xref target="RFC2474"></xref>). This field is used only if the 'D' bit
		is set; otherwise, its contents MUST be ignored.</t>

	</list>
	</list>
    </section> <!-- IEEE 802.11 WTP Quality of Service -->

     <section anchor="IEEE-802.11-WTP-Radio-Configuration"
	 title="IEEE 802.11 WTP Radio Configuration">
        <t>The IEEE 802.11 WTP WLAN Radio Configuration message element is used by the AC to configure a
        Radio on the WTP, and by the WTP to deliver its radio configuration to the AC.
        The message element value contains the following
        fields:</t>
					
<artwork>
      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    Radio ID   |Short Preamble| Num of BSSIDs |  DTIM Period  |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                            BSSID                              |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |          BSSID                |      Beacon Period            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                        Country String                         |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1046 for IEEE 802.11 WTP WLAN Radio Configuration</t>

         <t hangText= "Length: ">
         16</t>

         <t hangText= "Radio ID: ">
         An 8-bit value representing the radio to configure, whose value is
		 between one (1) and 31.</t>

         <t hangText="Short Preamble: ">
         An 8-bit value indicating whether short preamble is supported.
         The following enumerated values are currently supported:</t>
        <list style="hanging">
         <t hangText="0 -">  Short preamble not supported.</t>
         <t hangText="1 -">  Short preamble is supported.</t>
        </list>

         <t hangText= "BSSID: ">
         The WLAN Radio's base MAC Address. </t>
         
         <t hangText= "Number of BSSIDs: ">
         This attribute contains the maximum number of BSSIDs supported by the
         WTP. This value restricts the number of logical networks supported
         by the WTP, and is between 1 and 16.</t>

         <t hangText= "DTIM Period: ">
         This attribute specifies the number of Beacon intervals
         that elapse between transmission of Beacons frames containing a
         Traffic Indication Map (TIM) element whose Delivery Traffic Indication
		 Message (DTIM) Count field is 0.  This value is transmitted in the
		 DTIM Period field of Beacon frames. The value of this field comes from
		 the IEEE 802.11 dot11DTIMPeriod MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Beacon Period: ">
         This attribute specifies the number of Time Unit (TU) that a
         station uses for scheduling Beacon transmissions.  This value is
         transmitted in Beacon and Probe Response frames.
		 The value of this field comes from the IEEE 802.11 dot11BeaconPeriod
		 MIB element (see <xref target="IEEE.802-11.2007"></xref>).</t>

         <t hangText= "Country String: ">
         This attribute identifies the country in which the station is
		 operating. The value of this field comes from the IEEE 802.11
		 dot11CountryString MIB element (see
		 <xref target="IEEE.802-11.2007"></xref>). Some regulatory domains do
		 not allow WTPs to have user configurable country string, and require
		 that it be a fixed value during the manufacturing process. Therefore,
		 WTP vendors that wish to allow for the configuration of this field will
		 need to validate this behavior during its radio certification process.
		 Other WTP vendors may simply wish to treat this WTP configuration
		 parameter as read-only. The country strings can be found in 
		 <xref target="ISO.3166-1"></xref>.</t>

         <t>The WTP and AC MAY ignore the value of this field, depending upon
		 regulatory requirements, for example to avoid classification as a 
         Software-Defined Radio. When this field is used, the first two octets
		 of this string is the two-character country string as described in <xref target="ISO.3166-1"></xref>, and the third octet MUST
		 either be a space, 'O', 'I', or X' as defined below. When the value of
		 the third octet is 255 (HEX 0xff), the country string field is not
		 used, and MUST be ignored. The following are the possible values for
		 the third octet:</t>
         <list style="numbers" >
         <t>an ASCII space character, if the regulations under
		 which the station is operating encompass all environments in the
		 country,</t>
         <t>an ASCII 'O' character, if the regulations under
		 which the station is operating are for an outdoor environment only,
		 or</t>
         <t>an ASCII 'I' character, if the regulations under
		 which the station is operating are for an indoor environment only,</t>
         <t>an ASCII 'X' character, if the station is operating
		 under a non-country entity. The first two octets of the non-country
		 entity shall be two ASCII 'XX' characters,</t>
         <t>a HEX 0xff character means that the country string
		 field is not used and MUST be ignored.</t>
         </list>

		 <t>Note that the last byte of the Country String MUST be set to NULL.</t>
         </list>

     </section> <!-- IEEE 802.11 WTP Radio Configuration -->
    
  <section anchor="IEEE-802.11-WTP-Radio-Fail-Alarm-Indication"  title="IEEE 802.11 WTP Radio Fail Alarm Indication">
        <t>The IEEE 802.11 WTP Radio Fail Alarm Indication message element is sent by the
        WTP to the AC when it detects a radio failure.</t>

<artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |   Radio ID    |     Type      |    Status     |      Pad      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1047 for IEEE 802.11 WTP Radio Fail Alarm Indication</t>

         <t hangText= "Length: ">
         4</t>

         <t hangText="Radio ID: ">
         The Radio Identifier, whose value is between one (1) and 31, typically
		 refers to some interface index on the WTP.</t>

         <t hangText="Type: ">
         The type of radio failure detected. The following enumerated values are
		 supported:</t>
        <list style="hanging">
         <t hangText="1 -">  Receiver</t>
         <t hangText="2 -">  Transmitter</t>
		 </list>

         <t hangText="Status: ">
         An 8-bit boolean indicating whether the radio failure is being reported or
         cleared. A value of zero is used to clear the event, while a value of
		 one is used to report the event.</t>

         <t hangText="Pad: ">
         All implementations complying with version zero of this
		 protocol MUST set these bits to zero. Receivers MUST ignore all bits
		 not defined for the version of the protocol they support.</t>

        </list>
    </section> <!-- IEEE 802.11 WTP Radio Fail Alarm Indication -->
    
      <section anchor="IEEE-802-11-WTP-Radio-Information" title="IEEE 802.11 WTP Radio Information">
        <t>The IEEE 802.11 WTP Radio Information message element is used to communicate the
        radio information for each IEEE 802.11 radio in the WTP. The Discovery Request message,
        Primary Discovery Request message, and Join Request message MUST include
        one such message element per radio in the WTP. The Radio-Type field is
        used by the AC in order to determine which IEEE 802.11 technology specific binding
        is to be used with the WTP.</t>

        <t>The message element contains two fields, as shown below.</t>

<artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |   Radio ID    |                  Radio Type                   |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Radio Type   |
  +-+-+-+-+-+-+-+-+
</artwork>

        <list style="hanging">
         <t hangText= "Type: ">
         1048 for IEEE 802.11 WTP Radio Information</t>

         <t hangText= "Length: ">
         5</t>

         <t hangText="Radio ID: ">
         The Radio Identifier, whose value is between one (1) and 31, which
		 typically refers to an interface index on the WTP.</t>

		<t hangText="Radio Type: ">
         The type of radio present. Note this is a bit field that is used to
		 specify support for more than a single type of PHY/MAC. The field has
		 the following format:</t>
<artwork>
      0 1 2 3 4 5 6 7 
     +-+-+-+-+-+-+-+-+
     |Reservd|N|G|A|B|
     +-+-+-+-+-+-+-+-+
</artwork>
		<list style="hanging">
		 <t hangText="Reservd:">A set of reserved bits for future use. All
		 implementations complying with this protocol MUST set to zero any bits
		 that are reserved in the version of the protocol supported by that
		 implementation.  Receivers MUST ignore all bits not defined for the
		 version of the protocol they support.</t>

         <t hangText= "N: "> An IEEE 802.11n radio.</t>

         <t hangText= "G: "> An IEEE 802.11g radio.</t>

         <t hangText= "A: "> An IEEE 802.11a radio.</t>

         <t hangText= "B: "> An IEEE 802.11b radio.</t>
		 </list>
		</list>
    </section> <!-- IEEE 802.11 WTP Radio Information -->    

    </section> <!-- IEEE 802.11 Message Element Definitions -->

    <section anchor="IEEE 802.11 Binding WTP Saved Variables" title="IEEE 802.11 Binding WTP Saved Variables">
        <t>This section contains the IEEE 802.11 binding specific variables
		that SHOULD be saved in non-volatile memory on the WTP.</t>

    <section title="IEEE80211AntennaInfo">
        <t>The WTP-per-radio antenna configuration, defined in
	 <xref target="IEEE-802.11-Antenna"></xref>.</t>
    </section> <!-- IEEE80211AntennaInfo -->

    <section title="IEEE80211DSControl">
        <t>The WTP-per-radio Direct Sequence Control configuration,
		defined in <xref target="IEEE-802.11-Direct-Sequence-Control"></xref>.</t>
    </section> <!-- IEEE80211DSControl -->

    <section title="IEEE80211MACOperation">
        <t>The WTP-per-radio MAC Operation configuration,
		defined in <xref target="IEEE-802.11-MAC-Operation"></xref>.</t>
    </section> <!-- IEEE80211MACOperation -->

    <section title="IEEE80211OFDMControl">
        <t>The WTP-per-radio OFDM MAC Operation configuration, 
		defined in <xref target="IEEE-802.11-OFDM-Control"></xref>.</t>
    </section> <!-- IEEE80211OFDMControl -->

    <section title="IEEE80211Rateset">
        <t>The WTP-per-radio Basic Rate Set configuration, defined in
	 <xref target="IEEE-802.11-Rate-Set"></xref>.</t>
    </section> <!-- IEEE80211Rateset -->

    <section title="IEEE80211TxPower">
        <t>The WTP-per-radio Transmit Power configuration, defined in
	 <xref target="IEEE-802.11-Tx-Power"></xref>.</t>
    </section> <!-- IEEE80211TxPower -->

    <section title="IEEE80211QoS">
        <t>The WTP-per-radio Quality of Service configuration, defined 
		 in <xref target="IEEE-802.11-WTP-Quality-of-Service"></xref>.</t>
    </section> <!-- IEEE80211QoS -->

    <section title="IEEE80211RadioConfig">
        <t>The WTP-per-radio Radio Configuration,
	defined in <xref target="IEEE-802.11-WTP-Radio-Configuration"></xref>.</t>
    </section> <!-- IEEE80211RadioConfig -->

	</section> <!-- WTP Saved Variables -->

    <section anchor="Technology-Specific Message Element Values" title="Technology Specific Message Element Values">
         <t>This section lists IEEE 802.11-specific values for the generic
         CAPWAP message elements that include fields whose values are
         technology specific.</t>

         <section anchor="WTP Descriptor Message Element, Encryption Capabilities Field: " 
		 title="WTP Descriptor Message Element, Encryption Capabilities Field ">
		<t hangText="Radio Type: ">
         This specification defines two new bits for the WTP Descriptor's
		 Encryption Capabilities field, as defined in
		 <xref target="RFC5415"> </xref>. Note
		 that only the bits defined in this specification are described below.
		 WEP is not explicitly advertised as a WTP capability since all WTPs
		 are expected to support the encryption cipher. The format of the
		 Encryption Capabilities field is:</t>
<artwork>
                          1
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                       |A|T|   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
		<list style="hanging">
         <t hangText= "A: "> WTP supports AES-CCMP, as defined in
		 <xref target="IEEE.802-11.2007"></xref>.</t>

         <t hangText= "T: "> WTP supports TKIP and Michael, as defined in
		 <xref target="IEEE.802-11.2007"></xref> and
		 <xref target="WPA"></xref>, respectively.</t>
		 </list>
		</section>
    </section> <!-- Technology Specific Message Element Values -->

      <section anchor="Security Considerations" title="Security Considerations">
    	
   	<t>This section describes security considerations for using IEEE 802.11 with
	the CAPWAP protocol. A complete threat analysis of the CAPWAP protocol can
	also be found in <xref target="RFC5418"/>.</t>

  	  	<section anchor="IEEE 802.11 Security" title="IEEE 802.11 Security">    

	  	<t>When used with an IEEE 802.11 infrastructure with WEP encryption,
		    the CAPWAP protocol does not add any new vulnerabilities.  Derived
		    Session Keys between the STA and WTP can be compromised, resulting
		    in many well-documented attacks. Implementers
		    SHOULD discourage the use of WEP and encourage the use of technically-sound 
		    cryptographic solutions such as those in an IEEE 802.11 RSN.
		 </t>

		<t>STA authentication is performed using IEEE 802.lX, and
		    consequently EAP.  Implementers SHOULD use EAP methods meeting
		    the requirements specified <xref target="RFC4017"></xref>.</t>

		  <t>When used with IEEE 802.11 RSN security, the CAPWAP protocol
		  may introduce new vulnerabilities, depending on whether the link security
		 (packet encryption and integrity verification) is provided by the WTP or the AC.
		  When the link security function is provided by the AC, no new security
		  concerns are introduced.</t>

		  <t>However, when the WTP provides link security, a new vulnerability will
		  exist when the following conditions are true:</t>

		  <list style="symbols">	

		  <t>The client is not the first to associate to the WTP/ESSID
		  (i.e., other clients are associated), a GTK already exists, and
 </t>
		  <t> traffic has been broadcast under the existing GTK.</t>

		  </list>

		  <t> Under these circumstances, the receive sequence counter (KeyRSC)
		  associated with the GTK is non-zero, but because the AC anchors the
		  4-way handshake with the client, the exact value of the KeyRSC is not
		  known when the AC constructs the message containing the GTK.
		  The client will update its Key RSC value to the current valid KeyRSC
		  upon receipt of a valid multicast/broadcast message, but prior to this,
		  previous multicast/broadcast traffic that was secured with the existing
		  GTK may be replayed, and the client will accept this traffic as valid. </t>

		  <t> Typically, busy networks will produce numerous multicast or broadcast
		  frames per second, so the window of opportunity with respect to such
		  replay is expected to be very small. In most conditions, it is expected that
		  replayed frames could be detected (and logged) by the WTP. </t>

		  <t> The only way to completely close this window is to provide the
		  exact KeyRSC value in message 3 of the 4-way handshake; any
		  other approach simply narrows the window to varying degrees. Given
		  the low relative threat level this presents, the additional complexity
		  introduced by providing the exact KeyRSC value is not warranted. That
		  is, this specification provides for a calculated risk in this regard. </t>

		  <t> The AC SHOULD use an RSC of 0 when computing message-3 of the 4-way
		  802.11i handshake, unless the AC has knowledge of a more optimal RSC
		  value to use.  Mechanisms for determining a more optimal RSC value
		  are outside the scope of this specification. </t>

        </section> <!-- IEEE 802.11 Security -->      

    </section> <!-- Security Considerations -->

  	<section anchor="IANA Considerations" title="IANA Considerations">
	<t>This section details the actions IANA has taken per this
        specification. There are numerous registries that have been
	be created, and the contents, document action (see <xref target="RFC5226">
	</xref>, and registry format are all included below. Note that in cases
	where bit fields are referred to, the bit numbering is left to right, where
	the leftmost bit is labeled as bit zero (0).</t>

  	<section title="CAPWAP Wireless Binding Identifier">
		<t>This specification requires a value assigned from the Wireless
		Binding Identifier namespace, defined in 
		<xref target="RFC5415"></xref>. (1) has been assigned (see 
		<xref target="CAPWAP Wireless Binding Identifier"></xref>, as it is
		used in implementations. </t> 
	</section> <!-- CAPWAP Message Types -->

  	<section anchor="CAPWAP IEEE 802.11 Message Types" title="CAPWAP IEEE 802.11 Message Types">
		<t>IANA created a new sub-registry in the existing CAPWAP
		Message Type registry, which is defined in <xref
		target="RFC5415"></xref>.</t>

		<t>IANA will create and maintain the CAPWAP IEEE 802.11 Message Types
		sub-registry for all message types whose Enterprise Number is set to
		13277. The namespace is 8 bits (3398912-3399167), where the value
		3398912 is reserved and must not be assigned. The values 3398913 and
		3398914 are allocated in this specification, and can be found in <xref
		target="IEEE 802.11 Specific CAPWAP Control Messages"/>. Any new
		assignments of a CAPWAP IEEE 802.11 Message Type (whose Enterprise
		Number is set to 13277) require an Expert Review. The format of the
		registry to be maintained by IANA is as follows:</t>

<artwork>
        CAPWAP IEEE 802.11               Message Type     Reference
        Control Message                     Value
</artwork>

	</section> <!-- CAPWAP IEEE 802.11 Message Types -->

  	<section anchor="CAPWAP Message Element Type" title="CAPWAP Message Element Type">
		<t>This specification defines new values to be registered to the existing
		CAPWAP Message Element Type registry, defined in <xref
		target="RFC5415"></xref>. The values
		used in this document, 1024 through 1048, as listed in <xref
		target="IEEE 802.11 Binding Message Elements"></xref> are recommended
		as implementations already exist that make use of these values.</t>
	</section> <!-- CAPWAP Control Message Type -->

    <section anchor="IEEE 802.11 Key Status" title="IEEE 802.11 Key Status">
		<t>The Key Status field in the IEEE 802.11 Add WLAN message element 
		(see <xref target="IEEE-802.11-Add-WLAN"></xref>) and IEEE 802.11 Update
		WLAN message element (see <xref target="IEEE-802.11-Update-WLAN"></xref>)
		is used to provide information about the status of the keying exchange.
		This document defines four values, zero (0) through three (3), and the
		remaining  values (4-255) are controlled and maintained by IANA and
		requires an Expert Review.</t>
	</section> <!-- IEEE 802.11 Key Status -->
<!-- [PRC] The above was modified as agreed upon with IANA -->

    <section anchor="IEEE 802.11 QoS" title="IEEE 802.11 QoS">
		<t>The QoS field in the IEEE 802.11 Add WLAN message element 
		(see <xref target="IEEE-802.11-Add-WLAN"></xref>) is used to configure
		a QoS policy for the WLAN. The namespace is 8 bits (0-255),
		where the values zero (0) through three (3) are allocated in this
		specification, and can be found in <xref target="IEEE-802.11-Add-WLAN">
		</xref>. This namespace is managed by IANA and assignments require an
		Expert Review. IANA will create the IEEE 802.11 QoS registry, whose
		format is:</t>

<artwork>
        IEEE 802.11 QoS                  Type Value       Reference
</artwork>
	</section> <!-- IEEE 802.11 QoS -->

    <section anchor="IEEE 802.11 Auth Type" title="IEEE 802.11 Auth Type">
		<t>The Auth Type field in the IEEE 802.11 Add WLAN message element 
		(see <xref target="IEEE-802.11-Add-WLAN"></xref>) is 8 bits and is
		used to configure the IEEE 802.11 authentication policy for the WLAN.
		The namespace is 8 bits (0-255), where the values zero (0) and one (1)
		are allocated in this specification, and can be found in <xref
		target="IEEE-802.11-Add-WLAN"> </xref>. This namespace is managed by
		IANA and assignments require an Expert Review. IANA will create the
		IEEE 802.11 Auth Type registry, whose format is:</t>

<artwork>
        IEEE 802.11 Auth Type            Type Value       Reference
</artwork>

	</section> <!-- IEEE 802.11 Auth Type -->

    <section anchor="IEEE 802.11 Antenna Combiner" title="IEEE 802.11 Antenna Combiner">
		<t>The Combiner field in the IEEE 802.11 Antenna message element 
		(see <xref target="IEEE-802.11-Antenna"></xref>) is used to provide
		information about the WTP's antennas. The namespace is 8 bits (0-255),
		where the values one (1) through four (4) are allocated in this
		specification, and can be found in <xref target="IEEE-802.11-Antenna">
		</xref>. This namespace is managed by IANA and assignments require an
		Expert Review. IANA will create the IEEE 802.11 Antenna Combiner
		registry, whose format is:</t>
<!-- [PRC] The above change was requested by IANA during the IANA phase -->

<artwork>
        IEEE 802.11 Antenna Combiner     Type Value       Reference
</artwork>
	</section> <!-- IEEE 802.11 Antenna Combiner -->

    <section anchor="IEEE 802.11 Antenna Selection" title="IEEE 802.11 Antenna Selection">
		<t>The Antenna Selection field in the IEEE 802.11 Antenna message element 
		(see <xref target="IEEE-802.11-Antenna"></xref>) is used to provide
		information about the WTP's antennas. The namespace is 8 bits (0-255),
		where the values zero (0) is reserved and used and the values
		one (1) through two (2) are allocated in this specification, and can be
		found in <xref target="IEEE-802.11-Antenna"> </xref>. This namespace is
		managed by IANA and assignments require an Expert Review. IANA will
		create the IEEE 802.11 Antenna Selection registry, whose format is:</t>

<artwork>
        IEEE 802.11 Antenna Selection    Type Value       Reference
</artwork>
	</section> <!-- IEEE 802.11 Antenna Selection -->

    <section anchor="IEEE 802.11 Session Key Flags"
	title="IEEE 802.11 Session Key Flags">
		<t>The flags field in the IEEE 802.11 Station Session Key message
		element (see <xref target="IEEE 802.11 Station Session Key"></xref>) is
		16 bits and is used to configure the session key association with the
		mobile device. This specification defines bits zero (0) and one (1),
		while bits two (2) through fifteen are reserved. The reserved bits are
		managed by IANA and assignment requires an Expert Review. IANA
		will create the IEEE 802.11 Session Key Flags registry, whose format is:</t>

<artwork>
        IEEE 802.11 Station Session Key   Bit Position    Reference
</artwork>

	</section> <!-- IEEE 802.11 Session Key Flags -->

    <section anchor="IEEE 802.11 Tagging Policy" title="IEEE 802.11 Tagging Policy">
		<t>The Tagging Policy field in the IEEE 802.11 WTP Quality of Service
		message element (see <xref target="IEEE-802.11-WTP-Quality-of-Service">
		</xref>) is 8 bits and is used to specify how the CAPWAP Data Channel
		packets are to be tagged. This specification defines bits three (3)
		through seven (7). The remaining bits are managed by IANA and assignment requires an Expert Review. IANA will create the IEEE 802.11
		Tagging Policy registry, whose format is:</t>

<artwork>
        IEEE 802.11 Tagging Policy        Bit Position    Reference
</artwork>
	</section> <!-- IEEE 802.11 Tagging Priority -->

    <section anchor="IEEE 802.11 WTP Radio Fail"
	title="IEEE 802.11 WTP Radio Fail">
		<t>The Type field in the IEEE 802.11 WTP Radio Fail Alarm Indication
		message element (see <xref
		target="IEEE-802.11-WTP-Radio-Fail-Alarm-Indication"></xref>) is used to
		provide information on why a WTP's radio has failed. The namespace is 8
		bits (0-255), where the value zero (0) is reserved and unused, while
		the values one (1) and two (2) are allocated in this specification, and
		can be found in <xref
		target="IEEE-802.11-WTP-Radio-Fail-Alarm-Indication"> </xref>. This
		namespace is managed by IANA and assignments require an Expert Review.
		IANA will create the IEEE 802.11 WTP Radio Fail registry, whose
		format is:</t>

<artwork>
        IEEE 802.11 WTP Radio Fail       Type Value       Reference
</artwork>
	</section> <!-- IEEE 802.11 WTP Radio Fail -->

    <section anchor="IEEE 802.11 WTP Radio Type"
	title="IEEE 802.11 WTP Radio Type">
		<t>The Radio Type field in the IEEE 802.11 WTP Radio Information message
		element (see <xref target="IEEE-802-11-WTP-Radio-Information"></xref>)
		is 8 bits and is used to provide information about the WTP's radio type.
		This specification defines bits four (4) through seven (7). The
		remaining bits are managed by IANA and assignment requires an
		Expert Review. IANA will create the IEEE 802.11 WTP Radio Type
		registry, whose format is:</t>

<artwork>
        IEEE 802.11 WTP Radio Type        Bit Position    Reference
</artwork>
	</section> <!-- IEEE 802.11 WTP Radio Type -->

    <section anchor="WTP Encryption Capabilities"
	title="WTP Encryption Capabilities">
		<t>The WTP Encryption Capabilities field in the WTP Descriptor message
		element (see <xref
		target="WTP Descriptor Message Element, Encryption Capabilities Field: ">
		</xref>) is 16 bits and is used by the WTP to indicate its IEEE 802.11
		encryption capabilities. This specification defines bits 12 and 13. The
		reserved bits are managed by IANA and assignment requires an Expert
		Review. IANA will create the IEEE 802.11 Encryption Capabilities
		registry, whose format is:</t>

<artwork>
       IEEE 802.11 Encryption Capabilities  Bit Position    Reference
</artwork>
	</section>

   	</section> <!-- IANA Considerations -->

  	<section anchor="Acknowledgments" title="Acknowledgments">

		<t>The following individuals are acknowledged for their contributions
		to this binding specification: Puneet Agarwal, Charles Clancy,
		Pasi Eronen, Saravanan Govindan, Scott Kelly, Peter Nilsson, Bob O'Hara,
		David Perkins, Margaret Wasserman, and Yong Zhang.</t>

  	</section> <!-- Acknowledgements -->

	</middle>
  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119" ?>
	  <?rfc include="reference.RFC.2474" ?>
          <?rfc include="reference.RFC.3246" ?>
	  <?rfc include="reference.RFC.3168" ?>
      <?rfc include="reference.RFC.3748" ?>
      <?rfc include="reference.RFC.5226" ?>

      <?rfc include="reference.FIPS.197.2001" ?>

	  <reference anchor="ISO.3166-1">
	  <front>
	  <title>International Organization for Standardization, Codes
	  for the representation of names of countries and their
	  subdivisions - Part 1: Country codes</title>
	  <author>
	  <organization>ISO Standard</organization>
	  </author>
	  <date month="" year="1997" />
	  </front>
	  <seriesInfo name="ISO" value="Standard 3166-1:1997" />
	  </reference>

	  <reference anchor="IEEE.802-11.2007" target="http://standards.ieee.org/getieee802/download/802.11-2007.pdf">
	  <front>
	  <title>Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 11: Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) specifications</title>
	  <author>
	  <organization></organization>
	  </author>
	  <date month="" year="2007" />
	  </front>
	  <seriesInfo name="IEEE" value="Standard 802.11" />
	  </reference>

<!--      &I-D.ietf-capwap-protocol-specification; -->

<reference anchor='RFC5415'>
<front>
<title>CAPWAP Protocol Specification</title>

<author initials='M' surname='Montemurro' fullname='Michael Montemurro'>
    <organization />
</author>

<author initials='D' surname='Stanley' fullname='Dorothy Stanley'>
    <organization />
</author>

<author initials='P' surname='Calhoun' fullname='Pat  Calhoun'>
    <organization />
</author>

<date month='March' year='2009' />

<abstract><t>This specification defines the Control And Provisioning of Wireless Access Points (CAPWAP) Protocol, meeting the objectives defined by the CAPWAP working group in RFC 4564.  The CAPWAP protocol is designed to be flexible, allowing it to be used for a variety of wireless technologies.  This document describes the base CAPWAP protocol, while separate binding extensions will enable its use with additional wireless technologies.</t></abstract>

</front>

<seriesInfo name='RFC' value='5415' />

</reference>



	  <reference anchor="IEEE.802-1X.2004" target="http://standards.ieee.org/getieee802/download/802.1X-2004.pdf">
	  <front>
	  <title>Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Port-Based Network Access Control</title>
	  <author>
	  <organization></organization>
	  </author>
	  <date month="" year="2004" />
	  </front>
	  <seriesInfo name="IEEE" value="Standard 802.1X" />
	  </reference>

	  <reference anchor="IEEE.802-1Q.2005" target="http://standards.ieee.org/getieee802/download/802.1Q-2005.pdf">
	  <front>
	  <title>Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Virtual Bridged Local Area Networks</title>
	  <author>
	  <organization></organization>
	  </author>
	  <date month="" year="2005" />
	  </front>
	  <seriesInfo name="IEEE" value="Standard 802.1Q" />
	  </reference>

	</references>	
    <references title="Informative References">

      <?rfc include="reference.RFC.4017" ?>
      <?rfc include="reference.RFC.4118" ?>
<!--      &I-D.ietf-capwap-threat-analysis; -->

<reference anchor='RFC5418'>
<front>
<title>Control And Provisioning for Wireless Access Points (CAPWAP) Threat Analysis for IEEE 802.11 Deployments</title>

<author initials='S' surname='Kelly' fullname='Scott Kelly'>
    <organization />
</author>

<author initials='C' surname='Clancy' fullname='Charles  Clancy'>
    <organization />
</author>

<date month='March' year='2009' />

<abstract><t>Early Wireless Local Area Network (WLAN) deployments feature a "fat" Access Point (AP) which serves as a stand-alone interface between the wired and wireless network segments.  However, this model raises scaling, mobility, and manageability issues, and the Control and Provisioning for Wireless Access Points (CAPWAP) protocol is meant to address these issues.  CAPWAP effectively splits the fat AP functionality into two network elements, and the communication channel between these components may traverse potentially hostile hops.  This document analyzes the security exposure resulting from the introduction of CAPWAP, and summarizes the associated security considerations for IEEE 802.11-based CAPWAP implementations and deployments.</t></abstract>

</front>

<seriesInfo name='RFC' value='5418' />

</reference>

      <reference anchor="WPA" target="www.wi-fi.org">
        <front>
          <title>Deploying Wi-Fi Protected Access (WPA) and WPA2 in the Enterprise </title>
          <author fullname="WiFi Alliance"/>
          <url="http://www.wi-fi.org/white_papers/whitepaper-022705-deployingwpawpa2enterprise/"/>
          <date month="March" year="2005" />
        </front>
      </reference> 
 
      <reference anchor="WMM" target="www.wi-fi.org">
        <front>
          <title>Support for Multimedia Applications with Quality of Service in WiFi Networks)</title>
          <author fullname="WiFi Alliance"/>
          <url="http://www.wi-fi.org/white_papers/whitepaper-090104-wmm"/>
          <date month="September" year="2004" />
        </front>
      </reference> 

    </references>

  </back>
</rfc>

