<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc linkmailto="yes" ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" >
<?rfc rfcedstyle="yes"?>
<?rfc toc="no"?>
<?rfc symrefs="yes"?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc sortrefs="yes" ?>
<rfc ipr="trust200902" number="6867" submissionType="IETF" consensus="yes" category="exp">
  <front>
<title abbrev="ERP for IKE">An Internet Key Exchange Protocol Version 2 (IKEv2) Extension to Support EAP Re-authentication Protocol (ERP)</title>
    <author initials="Y." surname="Nir" fullname="Yoav Nir">
      <organization abbrev="Check Point">Check Point Software Technologies Ltd.</organization>
      <address>
        <postal>
          <street>5 Hasolelim st.</street>
          <city>Tel Aviv</city>
          <code>67897</code>
          <country>Israel</country>
        </postal>
        <email>ynir@checkpoint.com</email>
      </address>
    </author>
    <author initials="Q." surname="Wu" fullname="Qin Wu">
      <organization abbrev="Huawei">Huawei Technologies Co., Ltd.</organization>
      <address>
        <postal>
          <street>101 Software Avenue, Yuhua District</street>
          <city>Nanjing, JiangSu</city>
          <code>210012</code>
          <country>China</country>
        </postal>
        <email>sunseawq@huawei.com</email>
      </address>
    </author>
    <date month="January" year="2013"/>
    <area>Security Area</area>

    <abstract>
      <t> This document updates the Internet Key Exchange Protocol version 2 (IKEv2) described in RFC 5996. This extension allows an 
        IKE Security Association (SA) to be created and authenticated using the Extensible Authentication
   Protocol (EAP) 
        Re-authentication Protocol extension, as described in RFC 6696.</t>
    </abstract>
  </front>
  <middle>
    <!-- ====================================================================== -->


    <section anchor="introduction" title="Introduction">
      <t> IKEv2, as specified in <xref target="RFC5996"/>, allows (Section 2.16) authentication of 
        the initiator using an EAP method. Using EAP significantly increases the count of 
        round trips required to establish the IPsec SA and also may require user interaction. This 
        makes it inconvenient to allow a single remote access client to create multiple IPsec 
        tunnels with multiple IPsec gateways that belong to the same domain.</t> 
      <t> The EAP Re-authentication Protocol (ERP), as described in <xref target="RFC6696"/>, 
        allows an EAP peer to authenticate to multiple authenticators while performing the full 
        EAP method only once. Subsequent authentications require fewer round trips and no user 
        interaction.</t>
      <t> Bringing these two technologies together allows a remote access IPsec client to create
        multiple tunnels with different gateways that belong to a single domain as well as using 
        the keys from other contexts of using EAP, such as network access within the same domain,
        to transparently connect to VPN gateways within this domain. </t>
      <t> Additionally, it allows for faster set up of new tunnels when previous tunnels have
        been torn down due to things like network outage, device suspension, or
a temporary move
        out of range. This is similar to the session resumption mechanism described in
        <xref target="RFC5723"/>.  One exception being that instead of a ticket stored by
the client, the re-authentication Master Session Key (rMSK) (see Section 4.6 of <xref target="RFC6696" />) is used as the session key 
        stored on both the client and the Authentication, Authorization, and
Accounting (AAA) server.</t>
      <section anchor="mustshouldmay" title="Conventions Used in This Document">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT",
          "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described
          in <xref target="RFC2119"/>.</t>
      </section>
      </section>
      <section anchor="scenarios" title="Usage Scenarios">
        <t> This work is motivated by the following scenarios:<list style="symbols">
          <t> Multiple tunnels for a single remote access VPN client. Suppose a company has offices
            in New York City, Paris, and Shanghai. For historical reasons, the email server is 
            located in the Paris office, most of the servers hosting the company's intranet
            are located in Shanghai, and the finance department servers are in New York City. An 
            employee using a remote access VPN may need to connect to servers from all three 
            locations. While it is possible to connect to a single gateway, and have that gateway 
            route the requests to the other gateways (perhaps through site to site VPN), this is 
            not efficient; it is more desirable to have the client initiate three different 
            tunnels. It is, however, not desirable to have the user type in a password three times.</t>
          <t> Roaming. In these days of mobile phones and tablets, users often move from the 
            wireless LAN in their office, where access may be granted through 802.1x, to a cellular
            network, where a VPN is necessary, and back again. Both the VPN server and the 802.1x
            access point are authenticators that connect to the same AAA servers. So it makes sense to make the transition smooth, without 
            requiring user interaction. The device still needs to detect whether it is within the 
            protected network, in which case it should not use VPN. However, this process is beyond the 
            scope of this document. <xref target="SECBEAC"/> is a now-abandoned attempt at 
            this.</t>
          <t> Resumption. If a device gets disconnected from an IKE peer, ERP can be used to 
            reconnect to the same gateway without user intervention.</t> </list></t>
      </section>
      <section anchor="outline" title="Protocol Outline">
        <t> Supporting EAP Re-authentication Extension (ERX) requires an EAP payload in the first IKE_AUTH request. This is a 
          deviation from the rules in <xref target="RFC5996"/>, so support needs to be indicated through a Notify 
          payload in the IKE_SA_INIT response.  This Notify serves the same purpose as the 
EAP-Initiate/Re-auth-Start message of ERX, as specified in Section
5.3.1 of <xref target="RFC6696" />.  The "Domain Name" field contains the content of the Domain-Name TLV as specified in Section 5.3.1.1 of
the same document.


</t>
        <t> A supporting initiator that has unexpired keys for this domain will send the 
          EAP-Initiate/Re-auth message in an EAP payload in the first IKE_AUTH request.</t>
        <t> The responder sends the EAP payload content to a backend AAA server. If that server has
          a valid rMSK for that session, it sends those along with an EAP-Finish/Re-auth message. 
          The responder then forwards the EAP-Finish/Re-auth message to the initiator in an EAP 
          payload within the first IKE_AUTH response.</t>  
        <t> The initiator then sends an additional IKE_AUTH request that includes the AUTH payload,
          which has been calculated using the rMSK in the role of the MSK as described in Sections
          2.15 and 2.16 of <xref target="RFC5996"/>. The responder replies similarly, and the IKE_AUTH exchange is 
          finished.</t>
        <t> If the backend AAA server does not have valid keys for the Re-auth-Start message, it 
          sends back a normal EAP request, and no rMSK key. EAP flow continues as in <xref target="RFC5996"/>.</t>  
        <t> The following figure is adapted from Appendixes C.1 and C.3 of <xref target="RFC5996"/>, with most of 
          the optional payloads removed.  Note that the EAP-Initiate/Re-auth message is added.</t>
        <figure>            <artwork><![CDATA[
            
IKE_SA_INIT Exchange:
| init request         --> SA, KE, Ni,
|
| init response       <-- SA, KE, Nr,
|                         N[ERX_SUPPORTED]

IKE_AUTH Exchanges:
| first request       --> EAP(EAP-Initiate/Re-auth),
|                         IDi,
|                         SA, TSi, TSr
|
| first response      <-- IDr, [CERT+], AUTH,
|                         EAP(EAP-Finish/Re-auth)
|
| last request        --> AUTH
|
| last response       <-- AUTH,
|                         SA, TSi, TSr
            ]]></artwork>
        </figure>
        <t> The IDi payload MUST have ID Type ID_RFC822_ADDR, and the data field MUST contain the 
          same value as the KeyName-NAI TLV in the EAP-Initiate/Re-auth message. See 
          <xref target="keyname_nai" /> for details.</t>
        <section anchor="eap_clarif" title="Clarification about EAP Codes">
          <t> Section 3.16 of <xref target="RFC5996"/> enumerates the EAP codes in EAP messages that are carried 
            in EAP payloads. The enumeration goes only to 4. It is not clear whether or not that list is 
            supposed to be exhaustive.</t>
          <t> To clarify, an implementation conforming to this specification MUST accept and 
            transmit EAP messages with at least the codes for Initiate and
Finish (5 and 6) from Section 5.3 of
            <xref target="RFC6696" />, in addition to the four codes enumerated in <xref target="RFC5996"/>. This document is 
            intentionally silent about other EAP codes that are not enumerated
in those documents.</t>
        </section>        
        <section anchor="keyname_nai" title="Username in the Protocol">
          <t> The authors, as well as participants of the HOKEY and IPsecME working groups, believe 
            that all use cases for this extension to IKE have a single backend AAA server doing 
            both the authentication and the re-authentication. The reasoning behind this is that
            IKE runs over the Internet and would naturally connect to the user's home network.</t>
          <t> This section addresses instances where this is not the case.</t>  
          <t> Section 5.3.2 of <xref target="RFC6696" /> describes the EAP-Initiate/Re-auth packet, which, in the 
            case of IKEv2, is carried in the first IKE_AUTH request. This packet contains the 
            KeyName-NAI TLV. This TLV contains the username used in authentication. It is relayed 
            to the AAA server in the AccessRequest message and is returned from the AAA server in 
            the AccessAccept message.</t>
          <t> The username part of the Network Access Identifier (NAI) within the TLV is the EMSKName <xref target="RFC5295"/>
            encoded in hexadecimal digits. The domain part is the domain name of the home domain of 
            the user. The username part is ephemeral in the sense that a new one is generated for 
            each full authentication. This ephemeral value is not a good basis for making policy 
            decisions, and it is also a poor source of user identification for the purposes of 
            logging.</t>
          <t> Instead, it is up to the implementation in the IPsec gateway to make policy decisions
            based on other factors. The following list is by no means exhaustive: <list style="symbols">
            <t> In some cases, the home domain name may be enough to make policy decisions. If all 
              users with a particular home domain get the same authorization, then policy does not
              depend on the real username. Meaningful logs can still be issued by correlating VPN 
              gateway IKE events with AAA servers access records.</t>
            <t> Sometimes users receive different authorizations based on groups to which they belong.
              The AAA server can communicate such information to the VPN gateway, for example, using 
              the CLASS attribute <xref target="RFC2865"/> in RADIUS and Diameter 


              <xref target="RFC6733"/>. Logging again depends on correlation with AAA servers.</t>
            <t> AAA servers may support extensions that allow them to communicate with their clients
              (in our case -- the VPN gateway) to push user information. For example, a certain
              product integrates a RADIUS server with the Lightweight Directory Access Protocol 
              (LDAP) <xref target="RFC4511"/>, so a client could query the server using LDAP and 
              receive the real record for this user. Others may provide this data through
              vendor-specific extensions to RADIUS or Diameter.</t></list></t>
          <t> In any case, authorization is a major issue in deployments, if the backend AAA server
            supporting the re-authentication is different from the AAA server that had supported
            the original authentication. It is up to the re-authenticating AAA server to provide
            the necessary information for authorization. A conforming implementation of this 
            protocol MAY reject initiators for which it is unable to make policy decisions because 
            of these reasons.</t>
        </section>
      </section>
      <section anchor="vid" title="ERX_SUPPORTED Notification">
        <t> The Notify payload is as described in <xref target="RFC5996"/>:</t>
        <figure>
            <artwork><![CDATA[
                         1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    ! Next Payload  !C!  RESERVED   !         Payload Length        !
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    !  Protocol ID  !   SPI Size    !    ERX Notify Message Type    !
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    !                            Domain Name                        !
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
            ]]></artwork>
        </figure>

          <t><list style="symbols">
            <t>Protocol ID (1 octet) - MUST be zero, as this message is related to an IKE SA.</t>
            <t>Security Parameter Index (SPI) Size (1 octet) - MUST be zero, in conformance with Section 3.10 of <xref target="RFC5996"/>.</t>
            <t>ERX Notify Message Type (2 octets) - MUST be 16427, the value assigned for ERX.</t>
            <t>Domain Name (variable) - contains the domain name or realm, as these terms are used
              in <xref target="RFC6696" /> and encoded as ASCII, as specified in <xref target="RFC4282"/>.</t></list></t>
      </section>
      <section anchor="support" title="Operational Considerations">
        <t> This specification changes the behavior of IKE peers, both initiators and responders.
          The behavior of backend AAA servers is not changed by this specification, but they are 
          required to support <xref target="RFC6696" />. The same goes for the EAP client, if it's not integrated 
          into the IKE initiator (for example, if the EAP client is an operating system component).</t>
        <t> This specification is silent about key storage and key lifetimes on either the EAP client
          or the EAP server. These issues are covered in Sections 3, 4, and 5 of <xref target="RFC6696" />. The key 
          lifetime may be communicated from the AAA server to the EAP client via the Lifetime 
          attribute in the EAP-Finish/Re-auth message. If the server does not have a valid key,
          while the client does have one, regular EAP is used (see <xref target="outline"/>). This
          should not happen if lifetimes are communicated. In such a case, the IKEv2 initiator / 
          EAP client MAY alert the user and MAY log the event. Note that this does not necessarily 
          indicate an attack. It could simply be a loss of state on the AAA server.</t>	
      </section>
      <section anchor="security" title="Security Considerations">
        <t> The protocol extension described in this document extends the authentication from one
          EAP context, which may or may not be part of IKEv2, to an IKEv2 context. Successful
          completion of the protocol proves to the authenticator, which in our case is a VPN
          gateway, that the supplicant or VPN client has authenticated in some other EAP context.</t>
        <t> The protocol supplies the authenticator with the domain name with which the supplicant
          has authenticated, but does not supply it with a specific identity. Instead, the gateway
          receives an EMSKName, which is an ephemeral ID. With this variant of the IKEv2 protocol, 
          the initiator never sends its real identity on the wire while the server does. This is
          different from the usual IKEv2 practice of the initiator revealing its identity first.</t>
        <t> If the domain name is sufficient to make access control decisions, this is enough. If
          not, then the gateway needs to find out either the real name or authorization information
          for that particular user. This may be done using the AAA protocol or by some other 
          federation protocol, which is out of scope for this specification.</t>  
      </section>
      <section anchor="iana" title="IANA Considerations">
        <t> IANA has assigned a notify message type of 16427 from the "IKEv2 Notify Message Types - Status Types" registry with the name "ERX_SUPPORTED".</t>
      </section>
      <section anchor="ack" title="Acknowledgements">
        <t> The authors would like to thank Yaron Sheffer for comments and suggested text that have
          contributed to this document.</t>
        <t> Thanks also to Juergen Schoenwaelder for his OPS-DIR review comments.</t>  
      </section>
  </middle>
  <!-- ====================================================================== -->
  <back>
    <references title="Normative References"> 


<reference anchor='RFC2119'>

<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year='1997' month='March' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>

<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='http://www.rfc-editor.org/rfc/rfc2119.txt' />
<format type='HTML' octets='17970' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5777' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>



<reference anchor='RFC4282'>

<front>
<title>The Network Access Identifier</title>
<author initials='B.' surname='Aboba' fullname='B. Aboba'>
<organization /></author>
<author initials='M.' surname='Beadles' fullname='M. Beadles'>
<organization /></author>
<author initials='J.' surname='Arkko' fullname='J. Arkko'>
<organization /></author>
<author initials='P.' surname='Eronen' fullname='P. Eronen'>
<organization /></author>
<date year='2005' month='December' />
<abstract>
<t>In order to provide roaming services, it is necessary to have a standardized method for identifying users.  This document defines the syntax for the Network Access Identifier (NAI), the user identity submitted by the client during network authentication. "Roaming" may be loosely defined as the ability to use any one of multiple Internet Service Providers (ISPs), while maintaining a formal, \%customer-vendor relationship with only one.  Examples of where roaming capabilities might be required include ISP "confederations" and \%ISP-provided corporate network access support.  This document is a revised version of RFC 2486, which originally defined NAIs.  Enhancements include international character set and privacy support, as well as a number of corrections to the original RFC. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4282' />
<format type='TXT' octets='34421' target='http://www.rfc-editor.org/rfc/rfc4282.txt' />
</reference>



<reference anchor='RFC5295'>

<front>
<title>Specification for the Derivation of Root Keys from an Extended Master Session Key (EMSK)</title>
<author initials='J.' surname='Salowey' fullname='J. Salowey'>
<organization /></author>
<author initials='L.' surname='Dondeti' fullname='L. Dondeti'>
<organization /></author>
<author initials='V.' surname='Narayanan' fullname='V. Narayanan'>
<organization /></author>
<author initials='M.' surname='Nakhjiri' fullname='M. Nakhjiri'>
<organization /></author>
<date year='2008' month='August' />
<abstract>
<t>The Extensible Authentication Protocol (EAP) defined the Extended Master Session Key (EMSK) generation, but reserved it for unspecified future uses.  This memo reserves the EMSK for the sole purpose of deriving root keys.  Root keys are master keys that can be used for multiple purposes, identified by usage definitions.  This document also specifies a mechanism for avoiding conflicts between root keys by deriving them in a manner that guarantees cryptographic separation.  Finally, this document also defines one such root key usage: Domain-Specific Root Keys are root keys made available to and used within specific key management domains. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5295' />
<format type='TXT' octets='45622' target='http://www.rfc-editor.org/rfc/rfc5295.txt' />
</reference>



<reference anchor='RFC5996'>

<front>
<title>Internet Key Exchange Protocol Version 2 (IKEv2)</title>
<author initials='C.' surname='Kaufman' fullname='C. Kaufman'>
<organization /></author>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'>
<organization /></author>
<author initials='Y.' surname='Nir' fullname='Y. Nir'>
<organization /></author>
<author initials='P.' surname='Eronen' fullname='P. Eronen'>
<organization /></author>
<date year='2010' month='September' />
<abstract>
<t>This document describes version 2 of the Internet Key Exchange (IKE) protocol.  IKE is a component of IPsec used for performing mutual authentication and establishing and maintaining Security Associations (SAs).  This document replaces and updates RFC 4306, and includes all of the clarifications from RFC 4718. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5996' />
<format type='TXT' octets='346466' target='http://www.rfc-editor.org/rfc/rfc5996.txt' />
</reference>



<reference anchor='RFC6696'>

<front>
<title>EAP Extensions for the EAP Re-authentication Protocol (ERP)</title>
<author initials='Z.' surname='Cao' fullname='Z. Cao'>
<organization /></author>
<author initials='B.' surname='He' fullname='B. He'>
<organization /></author>
<author initials='Y.' surname='Shi' fullname='Y. Shi'>
<organization /></author>
<author initials='Q.' surname='Wu' fullname='Q. Wu'>
<organization /></author>
<author initials='G.' surname='Zorn' fullname='G. Zorn'>
<organization /></author>
<date year='2012' month='July' />
<abstract>
<t>The Extensible Authentication Protocol (EAP) is a generic framework supporting multiple types of authentication methods.  In systems where EAP is used for authentication, it is desirable to avoid repeating the entire EAP exchange with another authenticator.  This document specifies extensions to EAP and the EAP keying hierarchy to support an EAP method-independent protocol for efficient re- authentication between the peer and an EAP re-authentication server through any authenticator.  The re-authentication server may be in the home network or in the local network to which the peer is connecting. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='6696' />
<format type='TXT' octets='103860' target='http://www.rfc-editor.org/rfc/rfc6696.txt' />
</reference>


  
    </references>
    <references title="Informative References"> 

<!--draft-sheffer-ipsecme-secure-beacon; Expired.

-->

<reference anchor='SECBEAC'>
<front>
<title>Secure Beacon: Securely Detecting a Trusted Network</title>

<author initials='Y' surname='Sheffer' fullname='Yaron Sheffer'>
    <organization />
</author>

<author initials='Y' surname='Nir' fullname='Yoav Nir'>
    <organization />
</author>

<date month='June' day='21' year='2009' />

<abstract><t>Remote access clients, in particular IPsec-based ones, are heavily deployed in enterprise environments.  In many enterprises the security policy allows remote-access clients to switch to unprotected operation when entering the trusted network.  This document specifies a method that lets a client detect this situation in a secure manner, with the help of a security gateway.  We propose a minor extension to IKEv2 to achieve this goal.</t></abstract>

</front>

<seriesInfo name="Work in" value="Progress" />

</reference>



<reference anchor='RFC2865'>

<front>
<title>Remote Authentication Dial In User Service (RADIUS)</title>
<author initials='C.' surname='Rigney' fullname='C. Rigney'>
<organization /></author>
<author initials='S.' surname='Willens' fullname='S. Willens'>
<organization /></author>
<author initials='A.' surname='Rubens' fullname='A. Rubens'>
<organization /></author>
<author initials='W.' surname='Simpson' fullname='W. Simpson'>
<organization /></author>
<date year='2000' month='June' />
<abstract>
<t>This document describes a protocol for carrying authentication, authorization, and configuration information between a Network Access Server which desires to authenticate its links and a shared Authentication Server. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='2865' />
<format type='TXT' octets='146456' target='http://www.rfc-editor.org/rfc/rfc2865.txt' />
</reference>



<reference anchor='RFC6733'>

<front>
<title>Diameter Base Protocol</title>
<author initials='V.' surname='Fajardo' fullname='V. Fajardo'>
<organization /></author>
<author initials='J.' surname='Arkko' fullname='J. Arkko'>
<organization /></author>
<author initials='J.' surname='Loughney' fullname='J. Loughney'>
<organization /></author>
<author initials='G.' surname='Zorn' fullname='G. Zorn'>
<organization /></author>
<date year='2012' month='October' />
<abstract>
<t>The Diameter base protocol is intended to provide an Authentication, Authorization, and Accounting (AAA) framework for applications such as network access or IP mobility in both local and roaming situations.  This document specifies the message format, transport, error reporting, accounting, and security services used by all Diameter applications.  The Diameter base protocol as defined in this document obsoletes RFC 3588 and RFC 5719, and it must be supported by all new Diameter implementations. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='6733' />
<format type='TXT' octets='343760' target='http://www.rfc-editor.org/rfc/rfc6733.txt' />
</reference>

  





<reference anchor='RFC4511'>

<front>
<title>Lightweight Directory Access Protocol (LDAP): The Protocol</title>
<author initials='J.' surname='Sermersheim' fullname='J. Sermersheim'>
<organization /></author>
<date year='2006' month='June' />
<abstract>
<t>This document describes the protocol elements, along with their semantics and encodings, of the Lightweight Directory Access Protocol (LDAP).  LDAP provides access to distributed directory services that act in accordance with X.500 data and service models.  These protocol elements are based on those described in the X.500 Directory Access Protocol (DAP). [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4511' />
<format type='TXT' octets='150116' target='http://www.rfc-editor.org/rfc/rfc4511.txt' />
</reference>




<reference anchor='RFC5723'>

<front>
<title>Internet Key Exchange Protocol Version 2 (IKEv2) Session Resumption</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'>
<organization /></author>
<author initials='H.' surname='Tschofenig' fullname='H. Tschofenig'>
<organization /></author>
<date year='2010' month='January' />
<abstract>
<t>The Internet Key Exchange version 2 (IKEv2) protocol has a certain computational and communication overhead with respect to the number of round trips required and the cryptographic operations involved. In remote access situations, the Extensible Authentication Protocol (EAP) is used for authentication, which adds several more round trips and consequently latency.&lt;/t>&lt;t> To re-establish security associations (SAs) upon a failure recovery condition is time consuming especially when an IPsec peer (such as a VPN gateway) needs to re-establish a large number of SAs with various endpoints. A high number of concurrent sessions might cause additional problems for an IPsec peer during SA re-establishment.&lt;/t>&lt;t> In order to avoid the need to re-run the key exchange protocol from scratch, it would be useful to provide an efficient way to resume an IKE/IPsec session. This document proposes an extension to IKEv2 that allows a client to re-establish an IKE SA with a gateway in a highly efficient manner, utilizing a previously established IKE SA.&lt;/t>&lt;t> A client can reconnect to a gateway from which it was disconnected. The proposed approach encodes partial IKE state into an opaque ticket, which can be stored on the client or in a centralized store, and is later made available to the IKEv2 responder for re-authentication. We use the term ticket to refer to the opaque data that is created by the IKEv2 responder. This document does not specify the format of the ticket but examples are provided. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5723' />
<format type='TXT' octets='59201' target='http://www.rfc-editor.org/rfc/rfc5723.txt' />
</reference>



    </references>
    <!-- ====================================================================== -->
  </back>
</rfc>
