<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC0020 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0020.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3688 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3688.xml">
<!ENTITY RFC3915 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3915.xml">
<!ENTITY RFC5730 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5730.xml">
<!ENTITY RFC5731 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5731.xml">
<!ENTITY RFC7451 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7451.xml">
<!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
<!ENTITY W3C.REC-xmlschema-2-20041028 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml4/reference.W3C.REC-xmlschema-2-20041028.xml'>]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no"?>

<rfc category="std" ipr="trust200902" number="8590" submissionType="IETF" consensus="yes">

  <front>
    <title abbrev="changePoll">
    Change Poll Extension for the Extensible Provisioning Protocol (EPP)</title>

    <author fullname="James Gould" initials="J.G" surname="Gould">
      <organization>VeriSign, Inc.</organization>

      <address>
        <postal>
          <street>12061 Bluemont Way</street>

          <city>Reston</city>

          <region>VA</region>

          <code>20190</code>

          <country>United States of America</country>
        </postal>

        <email>jgould@verisign.com</email>

        <uri>http://www.verisign.com</uri>
      </address>
    </author>

 	<author fullname="Kal Feher" initials="K.F" surname="Feher">
       <organization>Neustar</organization>

       <address>
          <postal>
             <street>lvl 8/10 Queens Road</street>

             <city>Melbourne</city>

             <region>VIC</region>

             <code>3004</code>

             <country>Australia</country>
          </postal>

         <email>ietf@feherfamily.org</email>

         <uri>http://www.neustar.biz</uri>
      </address>
    </author>

    <date  month="May" year="2019"/>

    <abstract>
      <t>This document describes an Extensible Provisioning Protocol (EPP)
      extension for notifying clients of operations on client-sponsored objects
      that were not initiated by the client through EPP. These operations may
      include contractual or policy requirements including, but not limited to,
      regular batch processes, customer support actions, Uniform Domain-Name
      Dispute-Resolution Policy (UDRP) or Uniform Rapid Suspension (URS)
      actions, court-directed actions, and bulk updates based on customer
      requests.  Since the client is not directly involved or knowledgable of
      these operations, the extension is used along with an EPP object mapping
      to provide the resulting state of the postoperation object, and
      optionally a preoperation object, with the operation metadata of
      what, when, who, and why.</t>
    </abstract>

  </front>

  <middle>
    <section title="Introduction">
      <t>This document describes an extension mapping for version 1.0 of the
      <xref target="RFC5730">Extensible Provisioning Protocol (EPP)</xref>.
      This mapping, an extension to EPP object mappings like the <xref
      target="RFC5731">EPP domain name mapping</xref>, is used to notify
      clients of operations they are not directly involved in,
      on objects that the client sponsors.
      It is up to server policy to determine what transform operations and
      clients to notify.
      Using this extension, clients can
      more easily keep their systems in sync with the objects stored in the
      server.  When a change occurs that a client needs to be
      notified of, a poll message can be inserted by the server for
      consumption by the client using the EPP &lt;poll&gt; command and
      response defined in <xref target="RFC5730"/>.  The extension supports
      including a "before" operation poll message and an "after"
      operation poll message.  
      The extension only extends the EPP &lt;poll&gt; response in 
      <xref target="RFC5730"/> and does not extend the EPP &lt;poll&gt; command.  
      Please refer to <xref target="RFC5730"/> for information and examples of 
      the EPP &lt;poll&gt; command.</t>

      <section title="Conventions Used in This Document">
        <t>
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
    NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
    "MAY", and "OPTIONAL" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
      
        <t>XML is case sensitive. Unless stated otherwise, XML specifications
        and examples provided in this document MUST be interpreted in the
        character case presented in order to develop a conforming
        implementation.</t>

        <t>In examples, "C:" represents lines sent by a protocol client, and
	"S:" represents lines returned by a protocol server. Indentation and
	white space in examples are provided only to illustrate element
	relationships and are not a REQUIRED feature of this protocol.
        </t>

        <t>The XML namespace prefix "changePoll" is used for the namespace
           "urn:ietf:params:xml:ns:changePoll-1.0", but implementations
           MUST NOT depend on it; instead, they should employ a proper namespace-aware XML
           parser and serializer to interpret and output the XML documents.</t>
      </section>
    </section>

    <section anchor="attrs" title="Object Attributes">

      <t>This extension adds additional elements to EPP object mappings like the <xref
      target="RFC5731">EPP domain name mapping</xref>. Only those new elements
      are described here.</t>

      <section anchor="operation" title="Operation">

        <t>An operation consists of any transform operation that impacts
        objects that the client sponsors and should be notified of.  The
        &lt;changePoll:operation&gt; element defines the operation.  The OPTIONAL "op"
        attribute is an identifier, represented in the 7-bit US-ASCII character set defined in <xref target="RFC0020"/>, that 
        is used to define a sub-operation or the name of a "custom" operation.
        The enumerated list of &lt;changePoll:operation&gt; values is:</t>

	  <t><list hangIndent="4" style="hanging">
		<t hangText="&quot;create&quot;:">Create operation as defined in <xref target="RFC5730"/>.</t>
		<t hangText="&quot;delete&quot;:">Delete operation as defined
		in <xref target="RFC5730"/>.  If the delete operation results
		in an immediate purge of the object, then the "op" attribute
		MUST be set to "purge".</t>
		<t hangText="&quot;renew&quot;:">Renew operation as defined in <xref target="RFC5730"/>.</t>
		<t hangText="&quot;transfer&quot;:">Transfer operation as
		defined in <xref target="RFC5730"/> that MUST set the "op"
		attribute with one of the possible transfer-type values; these
		include "request", "approve", "cancel", or "reject".</t>
		<t hangText="&quot;update&quot;:">Update operation as defined
		in <xref target="RFC5730"/>.</t>
		<t hangText="&quot;restore&quot;:">Restore operation as
		defined in <xref target="RFC3915"/> that MUST set the "op"
		attribute with one of the possible restore-type
		values; these include "request" or "report".</t>
		<t hangText="&quot;autoRenew&quot;:">Auto renew operation
		executed by the server.</t>
		<t hangText="&quot;autoDelete&quot;:">Auto delete operation
		executed by the server.  If the "autoDelete" operation results
		in an immediate	purge of the object, then the "op" attribute
		MUST be set to "purge".</t>
		<t hangText="&quot;autoPurge&quot;:">Auto purge operation
		executed by the server when removing the object after it has had
		the status "pendingDelete".</t>
		<t hangText="&quot;custom&quot;:">Custom operation that MUST
		set the "op" attribute with the custom operation name. The
		custom operations supported are up to server policy.</t>
		  </list></t>

      </section>

      <section anchor="state" title="State">

        <t>The state attribute reflects the state of the object "before" or "after" the operation.  
        The state is defined using the OPTIONAL "state" attribute of the &lt;changePoll:changeData&gt; element, 
        with the possible values "before" or "after" and a default value of "after".  
        The server MAY support both the "before" state and the "after" state of the operation by using one
        poll message for the "before" state and one poll message for the "after" state.  
        The "before" state poll message MUST be inserted into the message queue prior to the "after" state poll message.</t>
        <t>For operations in <xref target="operation"/> that don't have an "after" state, 
        the server MUST use the "before" state poll message.  
        For example, for the "delete" operation with the "op" attribute set to "purge", 
        or the "autoPurge" operation, the server includes the state of the object prior to being purged 
        in the "before" state poll message.</t>
        <t>For operations in <xref target="operation"/> that don't have a "before" state, 
        the server MUST use the "after" state poll message.  
        For example, for the "create" operation, 
        the server includes the state of the object after creation in the 
        "after" state poll message.</t>

      </section>


      <section anchor="who" title="Who">

        <t>The &lt;changePoll:who&gt; element defines who executed the
	operation, for audit purposes. It is a free-form value that is
	meant strictly for audit purposes and not to drive client-side logic.
        The scheme used for the possible set of &lt;changePoll:who&gt; element
        values is up to server policy.  The server MAY identify the &lt;changePoll:who&gt; element value based on:
        </t>

	  <t><list hangIndent="4" style="hanging">
		<t hangText="&quot;Identifier&quot;:">Unique user identifier
		of the user that executed the operation.  An example is
		"ClientX".</t>
		<t hangText="&quot;Name&quot;:">Name of the user that executed
		the operation.  An example is "John Doe".</t>
		<t hangText="&quot;Role&quot;:">Role of the user that executed
		operation.  An example is "CSR" for a Customer Support
		Representative or "Batch" for a server batch.</t>
		  </list></t>

      </section>
      
      <section anchor="datestimes" title="Dates and Times">
      
        <t>Date and time attribute values MUST be represented in Universal
           Coordinated Time (UTC) using the Gregorian calendar.  The extended
           date-time form using uppercase "T" and "Z" characters defined in
           <xref target="W3C.REC-xmlschema-2-20041028"/> MUST be used to represent date-time
           values, as XML Schema does not support truncated date-time forms or
           lowercase "T" and "Z" characters.</t>

      </section>


    </section>

    <section anchor="commands" title="EPP Command Mapping">
      <t>A detailed description of the EPP syntax and semantics can be found
      in the EPP core protocol specification <xref target="RFC5730"/>.</t>

      <section anchor="queryCommands" title="EPP Query Commands">

        <t>EPP provides three commands to retrieve object information: &lt;check&gt; to determine
        if an object is known to the server, &lt;info&gt; to retrieve detailed information associated
        with an object, and &lt;transfer&gt; to retrieve object-transfer status information.</t>

      <section anchor="checkCommand" title="EPP &lt;check&gt; Command">

       <t>This extension does not add any elements to the EPP &lt;check&gt; command
       or &lt;check&gt; response described in <xref target="RFC5730"/>.</t>

      </section>

      <section anchor="infoCommand" title="EPP &lt;info&gt; Command">

        <t>This extension does not add any elements to the EPP &lt;info&gt; command
        described in <xref target="RFC5730"/>.</t>

        <t>This extension adds operational detail of EPP object-mapping operations 
        (<xref target="operation"/>) to an EPP poll response, as described in
	<xref target="RFC5730"/>.  
        It is an extension of the EPP object-mapping info response.
	Any transform operation to an object defined in an EPP object mapping
	by a client other than the sponsoring
        client MAY result in extending the &lt;info&gt; response of the object for
        inserting an EPP poll message with the operation detail.
        The sponsoring client will then receive the
        state of the object with operation detail like what, who, when, and why the object
        was changed.  The &lt;changePoll:changeData&gt; element contains the operation detail along
        with an indication of whether the object reflects the state before or
	after the operation as defined in <xref target="state"/>.  
        The &lt;changePoll:changeData&gt; element includes the operation
	detail with the following child elements:</t>

	 <t><list hangIndent="4" style="hanging">
		  <t hangText="&lt;changePoll:operation&gt;:">Transform
		  operation executed on the object, as defined in <xref
		  target="operation"/>.</t>
		  <t hangText="&lt;changePoll:date&gt;:">Date and time when
		  the operation was executed.</t>
		  <t hangText="&lt;changePoll:svTRID&gt;:">Server transaction
		  identifier of the operation.</t>
		  <t hangText="&lt;changePoll:who&gt;:">Who executed the
		  operation, as defined in <xref target="who"/>.</t>
		  <t hangText="&lt;changePoll:caseId&gt;:">OPTIONAL case
		  identifier associated with the operation.  The required
		  "type" attribute defines the type of case.  The OPTIONAL
		  "name" attribute is an identifier, represented in the 7-bit
		  US-ASCII character set defined in <xref target="RFC0020"/>,
		  that is used to define the name of the "custom" case
		  type. The enumerated list of case types is:
			    <list style="hanging">
			      <t hangText="udrp:">A Uniform Domain-Name Dispute-Resolution Policy (UDRP) case.</t>
			      <t hangText="urs:">A Uniform Rapid Suspension (URS) case.</t>
			      <t hangText="custom:">A custom case that is defined using the "name" attribute.</t>
			    </list></t>
			  <t hangText="&lt;changePoll:reason&gt;:">OPTIONAL reason for executing the operation.  If present,
			  this element contains the server-specific text to help explain the reason the operation was executed.
			  This text MUST be represented in the response language previously negotiated with the client; an
			  OPTIONAL "lang" attribute MAY be present to identify the language if the negotiated value
			  is something other than the default value of "en" (English).</t>
		</list></t>


       <figure>
            <preamble>The following is an example poll &lt;info&gt; response with the &lt;changePoll:changeData&gt;
            extension for a URS lock transaction on the domain.example domain name, with the
            "before" state.  The "before" state is reflected in the &lt;resData&gt; block:</preamble>

            <artwork><![CDATA[
S:<?xml version="1.0" encoding="UTF-8"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:   <response>
S:      <result code="1301">
S:         <msg lang="en-US">
S:       Command completed successfully; ack to dequeue</msg>
S:      </result>
S:      <msgQ id="201" count="1">
S:         <qDate>2013-10-22T14:25:57.0Z</qDate>
S:         <msg>Registry initiated update of domain.</msg>
S:      </msgQ>
S:    <resData>
S:      <domain:infData
S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:        <domain:name>domain.example</domain:name>
S:        <domain:roid>EXAMPLE1-REP</domain:roid>
S:        <domain:status s="ok"/>
S:        <domain:registrant>jd1234</domain:registrant>
S:        <domain:contact type="admin">sh8013</domain:contact>
S:        <domain:contact type="tech">sh8013</domain:contact>
S:        <domain:clID>ClientX</domain:clID>
S:        <domain:crID>ClientY</domain:crID>
S:        <domain:crDate>2012-04-03T22:00:00.0Z</domain:crDate>
S:        <domain:exDate>2014-04-03T22:00:00.0Z</domain:exDate>
S:      </domain:infData>
S:    </resData>
S:    <extension>
S:      <changePoll:changeData
S:        xmlns:changePoll="urn:ietf:params:xml:ns:changePoll-1.0"
S:        state="before">
S:        <changePoll:operation>update</changePoll:operation>
S:        <changePoll:date>2013-10-22T14:25:57.0Z</changePoll:date>
S:        <changePoll:svTRID>12345-XYZ</changePoll:svTRID>
S:        <changePoll:who>URS Admin</changePoll:who>
S:        <changePoll:caseId type="urs">urs123</changePoll:caseId>
S:        <changePoll:reason>URS Lock</changePoll:reason>
S:      </changePoll:changeData>
S:    </extension>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54321-XYZ</svTRID>
S:    </trID>
S:   </response>
S:</epp>]]></artwork>
       </figure>

       <figure>
            <preamble>The following is an example poll &lt;info&gt; response with the &lt;changePoll:changeData&gt;
            extension for a URS lock transaction on the domain.example domain name, with the
            "after" state. The "after" state is reflected in the &lt;resData&gt; block:</preamble>

            <artwork><![CDATA[
S:<?xml version="1.0" encoding="UTF-8"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:   <response>
S:      <result code="1301">
S:         <msg lang="en-US">
S:       Command completed successfully; ack to dequeue</msg>
S:      </result>
S:      <msgQ id="202" count="1">
S:         <qDate>2013-10-22T14:25:57.0Z</qDate>
S:         <msg>Registry initiated update of domain.</msg>
S:      </msgQ>
S:    <resData>
S:      <domain:infData
S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:        <domain:name>domain.example</domain:name>
S:        <domain:roid>EXAMPLE1-REP</domain:roid>
S:        <domain:status s="serverUpdateProhibited"/>
S:        <domain:status s="serverDeleteProhibited"/>
S:        <domain:status s="serverTransferProhibited"/>
S:        <domain:registrant>jd1234</domain:registrant>
S:        <domain:contact type="admin">sh8013</domain:contact>
S:        <domain:contact type="tech">sh8013</domain:contact>
S:        <domain:clID>ClientX</domain:clID>
S:        <domain:crID>ClientY</domain:crID>
S:        <domain:crDate>2012-04-03T22:00:00.0Z</domain:crDate>
S:        <domain:upID>ClientZ</domain:upID>
S:        <domain:upDate>2013-10-22T14:25:57.0Z</domain:upDate>
S:        <domain:exDate>2014-04-03T22:00:00.0Z</domain:exDate>
S:      </domain:infData>
S:    </resData>
S:    <extension>
S:      <changePoll:changeData
S:        xmlns:changePoll="urn:ietf:params:xml:ns:changePoll-1.0"
S:        state="after">
S:        <changePoll:operation>update</changePoll:operation>
S:        <changePoll:date>2013-10-22T14:25:57.0Z</changePoll:date>
S:        <changePoll:svTRID>12345-XYZ</changePoll:svTRID>
S:        <changePoll:who>URS Admin</changePoll:who>
S:        <changePoll:caseId type="urs">urs123</changePoll:caseId>
S:        <changePoll:reason>URS Lock</changePoll:reason>
S:      </changePoll:changeData>
S:    </extension>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54321-XYZ</svTRID>
S:    </trID>
S:   </response>
S:</epp>]]></artwork>
       </figure>

       <figure>
            <preamble>The following is an example poll &lt;info&gt; response with the &lt;changePoll:changeData&gt;
            extension for a custom "sync" operation on the domain.example domain name, with
            the default "after" state.  The "after" state is reflected in the &lt;resData&gt; block:</preamble>

            <artwork><![CDATA[
S:<?xml version="1.0" encoding="UTF-8"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:   <response>
S:      <result code="1301">
S:         <msg>Command completed successfully; ack to dequeue</msg>
S:      </result>
S:      <msgQ id="201" count="1">
S:         <qDate>2013-10-22T14:25:57.0Z</qDate>
S:    <msg>Registry initiated Sync of Domain Expiration Date</msg>
S:      </msgQ>
S:    <resData>
S:      <domain:infData
S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:        <domain:name>domain.example</domain:name>
S:        <domain:roid>EXAMPLE1-REP</domain:roid>
S:        <domain:status s="ok"/>
S:        <domain:registrant>jd1234</domain:registrant>
S:        <domain:contact type="admin">sh8013</domain:contact>
S:        <domain:contact type="tech">sh8013</domain:contact>
S:        <domain:clID>ClientX</domain:clID>
S:        <domain:crID>ClientY</domain:crID>
S:        <domain:crDate>2012-04-03T22:00:00.0Z</domain:crDate>
S:        <domain:upID>ClientZ</domain:upID>
S:        <domain:upDate>2013-10-22T14:25:57.0Z</domain:upDate>
S:        <domain:exDate>2014-04-03T22:00:00.0Z</domain:exDate>
S:      </domain:infData>
S:    </resData>
S:    <extension>
S:      <changePoll:changeData
S:        xmlns:changePoll="urn:ietf:params:xml:ns:changePoll-1.0">
S:        <changePoll:operation op="sync">custom
S:        </changePoll:operation>
S:        <changePoll:date>2013-10-22T14:25:57.0Z</changePoll:date>
S:        <changePoll:svTRID>12345-XYZ</changePoll:svTRID>
S:        <changePoll:who>CSR</changePoll:who>
S:        <changePoll:reason lang="en">Customer sync request
S:        </changePoll:reason>
S:      </changePoll:changeData>
S:    </extension>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54321-XYZ</svTRID>
S:    </trID>
S:   </response>
S:</epp>]]></artwork>
       </figure>

       <figure>
            <preamble>The following is an example poll &lt;info&gt; response with the &lt;changePoll:changeData&gt;
            extension for a "delete" operation on the domain.example domain name that is
            immediately purged, with the "before" state.  The "before" state is reflected in the
            &lt;resData&gt; block:</preamble>

            <artwork><![CDATA[
S:<?xml version="1.0" encoding="UTF-8"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:  <response>
S:    <result code="1301">
S:      <msg>Command completed successfully; ack to dequeue</msg>
S:    </result>
S:    <msgQ id="200" count="1">
S:      <qDate>2013-10-22T14:25:57.0Z</qDate>
S:      <msg>Registry initiated delete of 
S:         domain resulting in immediate purge.</msg>
S:    </msgQ>
S:    <resData>
S:      <domain:infData 
S:        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:        <domain:name>domain.example</domain:name>
S:        <domain:roid>EXAMPLE1-REP</domain:roid>
S:        <domain:clID>ClientX</domain:clID>
S:      </domain:infData>
S:    </resData>
S:    <extension>
S:      <changePoll:changeData 
S:        xmlns:changePoll="urn:ietf:params:xml:ns:changePoll-1.0" 
S:        state="before">
S:        <changePoll:operation op="purge">delete
S:        </changePoll:operation>
S:        <changePoll:date>2013-10-22T14:25:57.0Z
S:        </changePoll:date>
S:        <changePoll:svTRID>12345-XYZ
S:        </changePoll:svTRID>
S:        <changePoll:who>ClientZ
S:        </changePoll:who>
S:        <changePoll:reason>Court order
S:        </changePoll:reason>
S:      </changePoll:changeData>
S:    </extension>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54321-XYZ</svTRID>
S:    </trID>
S:  </response>
S:</epp>]]></artwork>
       </figure>

       <figure>
            <preamble>The following is an example poll &lt;info&gt; response with the &lt;changePoll:changeData&gt;
            extension for an "autoPurge" operation on the domain.example domain name that
            previously had the "pendingDelete" status, with the "before" state.
            The "before" state is reflected in the &lt;resData&gt; block:</preamble>

            <artwork><![CDATA[
S:<?xml version="1.0" encoding="UTF-8"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:  <response>
S:    <result code="1301">
S:      <msg>Command completed successfully; ack to dequeue
S:      </msg>
S:    </result>
S:    <msgQ id="200" count="1">
S:      <qDate>2013-10-22T14:25:57.0Z</qDate>
S:      <msg>Registry purged domain with pendingDelete status.
S:      </msg>
S:    </msgQ>
S:    <resData>
S:      <domain:infData 
S:        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:        <domain:name>domain.example</domain:name>
S:        <domain:roid>EXAMPLE1-REP</domain:roid>
S:        <domain:status s="pendingDelete"/> 
S:        <domain:clID>ClientX</domain:clID>
S:      </domain:infData>
S:    </resData>
S:    <extension>
S:      <changePoll:changeData 
S:        xmlns:changePoll="urn:ietf:params:xml:ns:changePoll-1.0"
S:        state="before">
S:        <changePoll:operation>autoPurge
S:        </changePoll:operation>
S:        <changePoll:date>2013-10-22T14:25:57.0Z
S:        </changePoll:date>
S:        <changePoll:svTRID>12345-XYZ
S:        </changePoll:svTRID>
S:        <changePoll:who>Batch
S:        </changePoll:who>
S:        <changePoll:reason>Past pendingDelete 5 day period
S:        </changePoll:reason>
S:      </changePoll:changeData>
S:    </extension>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54321-XYZ</svTRID>
S:    </trID>
S:  </response>
S:</epp>]]></artwork>
       </figure>

       <figure>
            <preamble>The following is an example poll &lt;info&gt; response with the &lt;changePoll:changeData&gt;
            extension for an "update" operation on the ns1.domain.example host, with
            the default "after" state.  The "after" state is reflected in the &lt;resData&gt; block:</preamble>

            <artwork><![CDATA[
S:<?xml version="1.0" encoding="UTF-8"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:   <response>
S:      <result code="1301">
S:         <msg>Command completed successfully; ack to dequeue</msg>
S:      </result>
S:      <msgQ id="201" count="1">
S:         <qDate>2013-10-22T14:25:57.0Z</qDate>
S:         <msg>Registry initiated update of host.</msg>
S:      </msgQ>
S:    <resData>
S:      <host:infData
S:       xmlns:host="urn:ietf:params:xml:ns:host-1.0">
S:        <host:name>ns1.domain.example</host:name>
S:        <host:roid>NS1_EXAMPLE1-REP</host:roid>
S:        <host:status s="linked"/>
S:        <host:status s="serverUpdateProhibited"/>
S:        <host:status s="serverDeleteProhibited"/>
S:        <host:addr ip="v4">192.0.2.2</host:addr>
S:        <host:addr ip="v6">2001:db8:0:0:1:0:0:1</host:addr>
S:        <host:clID>ClientX</host:clID>
S:        <host:crID>ClientY</host:crID>
S:        <host:crDate>2012-04-03T22:00:00.0Z</host:crDate>
S:        <host:upID>ClientY</host:upID>
S:        <host:upDate>2013-10-22T14:25:57.0Z</host:upDate>
S:      </host:infData>
S:    </resData>
S:    <extension>
S:      <changePoll:changeData
S:        xmlns:changePoll="urn:ietf:params:xml:ns:changePoll-1.0">
S:        <changePoll:operation>update</changePoll:operation>
S:        <changePoll:date>2013-10-22T14:25:57.0Z</changePoll:date>
S:        <changePoll:svTRID>12345-XYZ</changePoll:svTRID>
S:        <changePoll:who>ClientZ</changePoll:who>
S:        <changePoll:reason>Host Lock</changePoll:reason>
S:      </changePoll:changeData>
S:    </extension>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54321-XYZ</svTRID>
S:    </trID>
S:   </response>
S:</epp>]]></artwork>
       </figure>

      </section>

      <section anchor="transferQueryCommand" title="EPP &lt;transfer&gt; Command">

       <t>This extension does not add any elements to the EPP &lt;transfer&gt; query command
       or &lt;transfer&gt; response described in the <xref target="RFC5730"/>.</t>

      </section>


      </section>

      <section anchor="transformCommands" title="EPP Transform Commands">

        <t>EPP provides five commands to transform objects: &lt;create&gt; to create an instance of an object,
        &lt;delete&gt; to delete an instance of an object, &lt;renew&gt; to extend the validity period of an object,
        &lt;transfer&gt; to manage object-sponsorship changes, and &lt;update&gt; to change information associated
        with an object.</t>

      <section anchor="createCommand" title="EPP &lt;create&gt; Command">

       <t>This extension does not add any elements to the EPP &lt;create&gt; command
       or &lt;create&gt; response described in <xref target="RFC5730"/>.</t>

      </section>


      <section anchor="deleteCommand" title="EPP &lt;delete&gt; Command">

       <t>This extension does not add any elements to the EPP &lt;delete&gt; command
       or &lt;delete&gt; response described in <xref target="RFC5730"/>.</t>

      </section>


      <section anchor="renewCommand" title="EPP &lt;renew&gt; Command">

       <t>This extension does not add any elements to the EPP &lt;renew&gt; command
       or &lt;renew&gt; response described in <xref target="RFC5730"/>.</t>

      </section>


      <section anchor="transferCommand" title="EPP &lt;transfer&gt; Command">

       <t>This extension does not add any elements to the EPP &lt;transfer&gt; command
       or &lt;transfer&gt; response described in <xref target="RFC5730"/>.</t>

      </section>


      <section anchor="updateCommand" title="EPP &lt;update&gt; Command">

       <t>This extension does not add any elements to the EPP &lt;update&gt; command
       or &lt;update&gt; response described in <xref target="RFC5730"/>.</t>

      </section>


    </section>

    </section>



    <section anchor="syntax" title="Formal Syntax">

      <t>One schema is presented here: the EPP Change Poll Extension
      schema.</t>

      <t>The formal
      syntax presented here is a complete schema representation of the object
      mapping suitable for automated validation of EPP XML instances. The
      BEGIN and END tags are not part of the schema; they are used to note the
      beginning and ending of the schema for URI registration purposes.</t>

    <section title="Change Poll Extension Schema">

      <figure>
        <artwork><![CDATA[
BEGIN
<?xml version="1.0" encoding="UTF-8"?>
 <schema targetNamespace="urn:ietf:params:xml:ns:changePoll-1.0"
         xmlns:eppcom="urn:ietf:params:xml:ns:eppcom-1.0"
         xmlns:epp="urn:ietf:params:xml:ns:epp-1.0"
         xmlns:changePoll="urn:ietf:params:xml:ns:changePoll-1.0"
         xmlns="http://www.w3.org/2001/XMLSchema"
         elementFormDefault="qualified">

  <!--
  Import common element types.
  -->
  <import namespace="urn:ietf:params:xml:ns:eppcom-1.0"/>
  <import namespace="urn:ietf:params:xml:ns:epp-1.0"/>


   <annotation>
     <documentation>
       Extensible Provisioning Protocol v1.0
       Change Poll Mapping Schema.
     </documentation>
   </annotation>

   <!--
    Change element.
   -->
   <element name="changeData" type="changePoll:changeDataType"/>

   <!--
    Attributes associated with the change.
   -->
   <complexType name="changeDataType">
     <sequence>
       <element name="operation" type="changePoll:operationType"/>
       <element name="date" type="dateTime"/>
       <element name="svTRID" type="epp:trIDStringType"/>
       <element name="who" type="changePoll:whoType"/>
       <element name="caseId" type="changePoll:caseIdType"
         minOccurs="0"/>
       <element name="reason" type="eppcom:reasonType"
         minOccurs="0"/>
     </sequence>
    <attribute name="state" type="changePoll:stateType"
      default="after"/>
   </complexType>

   <!--
    Enumerated list of operations, with extensibility via "custom".
   -->
   <simpleType name="operationEnum">
     <restriction base="token">
       <enumeration value="create"/>
       <enumeration value="delete"/>
       <enumeration value="renew"/>
       <enumeration value="transfer"/>
       <enumeration value="update"/>
       <enumeration value="restore"/>
       <enumeration value="autoRenew"/>
       <enumeration value="autoDelete"/>
       <enumeration value="autoPurge"/>
       <enumeration value="custom"/>
     </restriction>
   </simpleType>

   <!--
    Enumerated state of the object in the poll message.
   -->
   <simpleType name="stateType">
     <restriction base="token">
       <enumeration value="before"/>
       <enumeration value="after"/>
     </restriction>
   </simpleType>

   <!--
    Transform operation type
   -->
  <complexType name="operationType">
    <simpleContent>
      <extension base="changePoll:operationEnum">
        <attribute name="op" type="token"/>
      </extension>
    </simpleContent>
  </complexType>

   <!--
    Case identifier type
   -->
  <complexType name="caseIdType">
    <simpleContent>
      <extension base="token">
        <attribute name="type" type="changePoll:caseTypeEnum"
          use="required"/>
        <attribute name="name" type="token"
          use="optional"/>
      </extension>
    </simpleContent>
  </complexType>

   <!--
    Enumerated list of case identifier types
   -->
   <simpleType name="caseTypeEnum">
     <restriction base="token">
       <enumeration value="udrp"/>
       <enumeration value="urs"/>
       <enumeration value="custom"/>
     </restriction>
   </simpleType>

   <!--
    Who type
   -->
  <simpleType name="whoType">
    <restriction base="normalizedString">
      <minLength value="1"/>
      <maxLength value="255"/>
    </restriction>
  </simpleType>

 <!--
 End of schema.
 -->
 </schema>
END]]></artwork>
      </figure>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">

    	<section anchor="IANA-XML-Namespace" title="XML Namespace">
         <t>
             This document uses URNs to describe XML namespaces and XML schemas
             conforming to a registry mechanism described in <xref target="RFC3688"/>.
             The following URI assignment has been made by IANA:
         </t>

         <t>Registration for the changePoll namespace:</t>
         
         <t><list>
         <t>URI: urn:ietf:params:xml:ns:changePoll-1.0</t>
         
         <t>Registrant Contact: IESG</t>
          
         <t>XML: None. Namespace URIs do not represent an XML specification.</t>
         </list></t>
         
         <t>Registration for the changePoll XML schema:</t>
         
         <t><list>
         <t>URI: urn:ietf:params:xml:ns:changePoll-1.0</t>
         
         <t>Registrant Contact: IESG</t>
          
         <t>XML: See the "Formal Syntax" section of this document.</t>
         
         </list></t>

       </section>

       <section anchor="EPP-Extension-Registry" title="EPP Extension Registry">

       	<t>
   The EPP extension described in this document has been registered by
   the IANA in the Extensions for the "Extensible Provisioning Protocol (EPP)" registry described in <xref target="RFC7451"/>.  The
   details of the registration are as follows:
   </t>

   <t>
   Name of Extension: Change Poll Extension for the Extensible Provisioning Protocol (EPP)
   </t>

   <t>
   Document Status: Standards Track
   </t>

   <t>
   Reference: RFC 8590 
   </t>

   <t>
   Registrant Name and Email Address: IESG &lt;iesg@ietf.org&gt;
   </t>

   <t>
   TLDs: Any
   </t>

   <t>
   IPR Disclosure: None
   </t>

   <t>
   Status: Active
   </t>

   <t>
   Notes: None
   </t>

       </section>

    </section>



    <section anchor="Security" title="Security Considerations">
      <t>The mapping extensions described in this document do not provide any
      security services beyond those described by <xref
      target="RFC5730">EPP</xref> and protocol layers used by EPP. The security
      considerations described in these other specifications apply to this
      specification as well.</t>
    </section>


  </middle>

  <back>
    <references title="Normative References">

      &RFC0020;

      &RFC2119;

      &RFC3688;

      &RFC3915;

      &RFC5730;

      &RFC5731;

      &W3C.REC-xmlschema-2-20041028;

    </references>

    <references title="Informative References">  
    
      &RFC7451; 
      
      &RFC8174;      
      
    </references>


    <section anchor="Acknowledgements" title="Acknowledgments" numbered="no">
      <t>The authors wish to acknowledge the original concept for this document and the
      efforts in the initial versions of this document by Trung Tran and Sharon Wodjenski.</t>

      <t>Special suggestions that have been incorporated into this document
      were provided by Scott Hollenbeck, Michael Holloway, and Patrick Mevzek.</t>
    </section>


  </back>

</rfc>
