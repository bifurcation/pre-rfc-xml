<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='./rfc2629.xslt' ?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 SYSTEM "reference.RFC.2119.xml">
<!ENTITY rfc4106 SYSTEM "reference.RFC.4106.xml">
<!ENTITY rfc4307 SYSTEM "reference.RFC.4307.xml">
<!ENTITY rfc6989 SYSTEM "reference.RFC.6989.xml">
<!ENTITY rfc7296 SYSTEM "reference.RFC.7296.xml">
<!ENTITY rfc7427 SYSTEM "reference.RFC.7427.xml">
<!ENTITY rfc5282 SYSTEM "reference.RFC.5282.xml">
<!ENTITY rfc7815 SYSTEM "reference.RFC.7815.xml">
<!ENTITY rfc5529 SYSTEM "reference.RFC.5529.xml">
<!ENTITY rfc8174 SYSTEM "reference.RFC.8174.xml">
]>

<?rfc toc="yes"?>
<?rfc linkmailto="yes" ?>
<?rfc symrefs="yes"?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc sortrefs="yes" ?>

<rfc number="8247" ipr="trust200902"
     consensus="yes"
     submissionType="IETF"
     obsoletes="4307"
     updates="7296"
     category="std">
  <front>
    <title abbrev="IKEv2 Cryptographic Algorithms">Algorithm
    Implementation Requirements and Usage Guidance for&nbsp;the&nbsp;Internet&nbsp;Key&nbsp;Exchange&nbsp;Protocol&nbsp;Version&nbsp;2&nbsp;(IKEv2)</title>
    <author initials="Y." surname="Nir" fullname="Yoav Nir">
      <organization abbrev="Dell EMC">Dell EMC</organization>
      <address>
        <postal>
          <street>9 Andrei Sakharov Street</street>
          <city>Haifa</city>
          <code>3190500</code>
          <country>Israel</country>
        </postal>
        <email>ynir.ietf@gmail.com</email>
      </address>
    </author>
    <author initials='T.' surname='Kivinen' fullname='Tero Kivinen'>
      <organization></organization>
      <address>
        <postal>
          <street></street>
          <code></code>
          <city></city>
          <country></country>
        </postal>
        <email>kivinen@iki.fi</email>
      </address>
    </author>
    <author fullname="Paul Wouters" initials="P." surname="Wouters">
      <organization>Red Hat</organization>
      <address>
        <postal>
              <street/>
              <city/>
              <region/>
              <code/>
              <country/>
        </postal>
        <email>pwouters@redhat.com</email>
      </address>
    </author>
    <author fullname="Daniel Migault" initials="D." surname="Migault">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>8275 Trans Canada Route</street>
          <city>Saint-Laurent, QC</city>
          <code>H4S 0B6</code>
          <country>Canada</country>
        </postal>
        <phone>+1 514-452-2160</phone>
        <email>daniel.migault@ericsson.com</email>
      </address>
    </author>
    <date month="September" year="2017"/>
    <area>Security</area>

    <abstract>
      <t> The IPsec series of protocols makes use of various
      cryptographic algorithms in order to provide security services.
      The Internet Key Exchange (IKE) protocol is used to negotiate
      the IPsec Security Association (IPsec SA) parameters, such as
      which algorithms should be used. To ensure interoperability
      between different implementations, it is necessary to specify a
      set of algorithm implementation requirements and usage guidance
      to ensure that there is at least one algorithm that all
      implementations support. This document updates RFC 7296 and obsoletes 
      RFC 4307 in defining the current algorithm implementation requirements and 
      usage guidance for IKEv2, and does minor cleaning up of 
      the IKEv2 IANA registry. This document does not update the algorithms 
      used for packet encryption using IPsec Encapsulating Security Payload 
      (ESP).</t>
    </abstract>
  </front>
  <middle>

    <section anchor="introduction" title="Introduction">

      <t> The Internet Key Exchange (IKE) protocol <xref
      target="RFC7296" /> is used to negotiate the parameters of the
      IPsec SA, such as the encryption and authentication algorithms
      and the keys for the protected communications between the two
      endpoints. The IKE protocol itself is also protected by
      cryptographic algorithms, which are negotiated between the two
      endpoints using IKE. Different implementations of IKE may
      negotiate different algorithms based on their individual local
      policy. To ensure interoperability, a set of
      "mandatory-to-implement" IKE cryptographic algorithms is
      defined.</t>

      <t> This document describes the parameters of the IKE protocol
      and updates the IKEv2 specification. It changes the mandatory-to-implement authentication algorithms in Section 4 of <xref
      target="RFC7296" /> by saying that RSA key lengths of less than
      2048 SHOULD NOT be used. It does not describe the cryptographic
      parameters of the Authentication Header (AH) or ESP protocols. </t>

    <section anchor="mustshouldmay" title="Conventions Used in This Document">

  <t> The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
   NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
   "MAY", and "OPTIONAL" in this document are to be interpreted as
   described in BCP&nbsp;14 <xref target="RFC2119" /> <xref target="RFC8174" /> when, and only when, they
   appear in all capitals, as shown here.</t>

      <t> When used in the tables in this document, these terms indicate that
       the listed algorithm MUST, MUST NOT, SHOULD, SHOULD NOT, or MAY be
       implemented as part of an IKEv2 implementation. Additional terms used
       in this document are:</t>


      <texttable anchor="tbl" style="none" suppress-title="true">
        <ttcol align="left" width="12%"/>
        <ttcol align="left" />
        <c>SHOULD+</c><c>This term means the same as SHOULD. &nbsp;However,
        it is likely that an algorithm marked as SHOULD+ will be
        promoted at some future time to be a MUST.</c> 
        <c>SHOULD-</c><c>This term means the same as SHOULD. &nbsp;However,
        an algorithm marked as SHOULD- may be deprecated to a MAY in a
        future version of this document.</c>
        <c>MUST-</c><c>This term means the same as MUST. &nbsp;However, it
        is expected at some point that this algorithm will no longer be a
        MUST in a future document. &nbsp;Although its status will be
        determined at a later time, it is reasonable to expect that if
        a future revision of a document alters the status of a MUST-
        algorithm, it will remain at least a SHOULD or a SHOULD-
        level.</c>
        <c>IoT</c><c>This abbreviation stands for "Internet of Things".</c>
      </texttable>


    </section>
     <section title="Updating Algorithm Implementation Requirements and Usage Guidance">
      <t> The field of cryptography evolves continuously. New, stronger
      algorithms appear and existing algorithms are found to be less
      secure than originally thought. Therefore, algorithm
      implementation requirements and usage guidance need to be
      updated from time to time to reflect the new reality. The
      choices for algorithms must be conservative to minimize the risk
      of algorithm compromise. Algorithms need to be suitable for a
      wide variety of CPU architectures and device deployments ranging
      from high-end bulk encryption devices to small low-power IoT
      devices.</t>

      <t> The algorithm implementation requirements and usage guidance
      may need to change over time to adapt to the changing world. For
      this reason, the selection of mandatory-to-implement algorithms
      was removed from the main IKEv2 specification and placed in this
      separate document. </t>

     </section>

     <section title="Updating Algorithm Requirement Levels">
      <t>The mandatory-to-implement algorithm of tomorrow should
      already be available in most implementations of IKE by the time
      it is made mandatory. This document attempts to identify and
      introduce those algorithms for future mandatory-to-implement
      status. There is no guarantee that the algorithms in use today
      may become mandatory in the future. Published algorithms are
      continuously subjected to cryptographic attack and may become
      too weak or could become completely broken before this document
      is updated.</t>

      <t> This document provides updated recommendations for the
      mandatory-to-implement algorithms. As a result, any
      algorithm listed at the IKEv2 IANA registry not mentioned in
      this document MAY be implemented. For clarification and
      consistency with <xref target="RFC4307"/>, an algorithm will be
      denoted here as MAY only when it has been downgraded.</t>

      <t> Although this document updates the algorithms to keep the
      IKEv2 communication secure over time, it also aims at providing
      recommendations so that IKEv2 implementations remain
      interoperable. IKEv2 interoperability is addressed by an
      incremental introduction or deprecation of algorithms. In
      addition, this document also considers the new use cases for
      IKEv2 deployment, such as Internet of Things (IoT).</t>

      <t> It is expected that deprecation of an algorithm is performed
      gradually. This provides time for various implementations to
      update their implemented algorithms while remaining
      interoperable. Unless there are strong security reasons, an
      algorithm is expected to be downgraded from MUST to MUST- or
      SHOULD, instead of MUST NOT. Similarly, an algorithm that has
      not been mentioned as mandatory-to-implement is expected to be
      introduced with a SHOULD instead of a MUST.</t>

      <t>The current trend toward Internet of Things and its adoption
      of IKEv2 requires this specific use case to be taken into
      account as well. IoT devices are resource-constrained devices
      and their choice of algorithms are motivated by minimizing the
      footprint of the code, the computation effort, and the size of
      the messages to send. This document indicates "(IoT)" when a
      specified algorithm is specifically listed for IoT devices.
      Requirement levels that are marked as "IoT" apply to IoT devices
      and to server-side implementations that might presumably need to
      interoperate with them, including any general-purpose VPN
      gateways.</t>
      
     </section>

     <section title="Document Audience">
      <t>The recommendations of this document mostly target IKEv2
      implementers who need to create implementations that meet both high
      security expectations as well as high interoperability between
      various vendors and with different versions. Interoperability
      requires a smooth move to more secure cipher suites. This may
      differ from a user point of view that may deploy and configure
      IKEv2 with only the safest cipher suite.</t>

      <t>This document does not give any recommendations for the use
      of algorithms, it only gives implementation recommendations
      regarding implementations. 


The use of algorithms by a specific user is dictated by
      their own security policy requirements, which are
      outside the scope of this document.</t>

      <t> IKEv1 is out of scope of this document. IKEv1 is deprecated
      and the recommendations of this document must not be considered
      for IKEv1, as most IKEv1 implementations have been "frozen" and
      will not be able to update the list of mandatory-to-implement
      algorithms.</t>
     </section>
    </section>

    <section anchor="algs" title="Algorithm Selection">

      <section anchor="algs_enc" title="Type 1 - IKEv2 Encryption Algorithm Transforms">

        <t> The algorithms in the table below are negotiated in the Security
	Association (SA)
        payload and used for the Encrypted Payload. References to the
        specification defining these algorithms and the ones in the
        following subsections are in the IANA registry <xref
        target="IKEV2-IANA"/>. Some of these algorithms are
        Authenticated Encryption with Associated Data (AEAD) <xref
        target="RFC5282" />. Algorithms that are not AEAD MUST be
        used in conjunction with one of the integrity algorithms in
        <xref target="algs_integ"/>.</t>

        <texttable anchor="tbl_enc" suppress-title="true">
          <ttcol align="left">Name</ttcol>
          <ttcol align="left">Status</ttcol>
          <ttcol>AEAD?</ttcol>
          <ttcol align="left">Comment</ttcol>
          <c>ENCR_AES_CBC</c><c>MUST</c><c>No</c><c>(*)</c>
          <c>ENCR_CHACHA20_POLY1305</c><c>SHOULD</c><c>Yes</c><c/>
          <c>ENCR_AES_GCM_16</c><c>SHOULD</c><c>Yes</c><c>(*)</c>
          <c>ENCR_AES_CCM_8</c><c>SHOULD</c><c>Yes</c><c>(IoT)</c>
          <c>ENCR_3DES</c><c>MAY</c><c>No</c><c/>
          <c>ENCR_DES</c><c>MUST&nbsp;NOT</c><c>No</c><c/>
<c>ENCR_NULL</c><c>MUST&nbsp;NOT</c><c>No</c><c/>
        </texttable>

<t>
<list style="hanging" hangIndent="7">
  <t hangText="(*)">This requirement level is for 128-bit and 256-bit
  keys. 192-bit keys remain at the MAY level.</t>
<t hangText="(IoT)"> This requirement is for interoperability with IoT. Only
  128-bit keys are at the SHOULD level. 192-bit and 256-bit remain at the MAY level.</t>
</list>
</t>
        <t> ENCR_AES_CBC is raised from SHOULD+ for 128-bit keys and
        MAY for 256-bit keys in <xref
        target="RFC4307"/> to MUST. 192-bit keys remain at the MAY level.
        ENCR_AES_CBC is the only shared mandatory-to-implement algorithm with
        RFC 4307 and as a result, it is necessary for interoperability with IKEv2
        implementation compatible with RFC 4307.</t>

        <t> ENCR_CHACHA20_POLY1305 was not ready to be considered at
        the time of RFC 4307's publication. It has been recommended by the Crypto Forum
        Research Group (CFRG) of the IRTF as an alternative to AES-CBC and
        AES-GCM. It is also being standardized for IPsec for the same reasons.
        At the time of writing, there were not enough IKEv2 implementations
        supporting ENCR_CHACHA20_POLY1305 to be able to introduce it at the
        SHOULD+ level.</t>

        <t> ENCR_AES_GCM_16 was not considered in RFC 4307. At the time
        RFC 4307 was written, AES-GCM was not defined in an IETF
        document. AES-GCM was defined for ESP in <xref
        target="RFC4106"/> and later for IKEv2 in <xref
        target="RFC5282"/>. The main motivation for adopting AES-GCM
        for ESP is encryption performance compared to AES-CBC. This
        resulted in AES-GCM being widely implemented
        for ESP. As the computation load of IKEv2 is relatively small
        compared to ESP, many IKEv2 implementations have not
        implemented AES-GCM. For this reason, AES-GCM is not promoted
        to a greater status than SHOULD. The reason for promotion from
        MAY to SHOULD is to promote the slightly more secure AEAD
        method over the traditional encrypt+auth method. Its status is
        expected to be raised once widely implemented. As the
        advantage of the shorter (and weaker) Integrity Check Values (ICVs) is minimal, the 8-
        and 12-octet ICVs remain at the MAY level.</t>

        <t> ENCR_AES_CCM_8 was not considered in RFC 4307. This
        document considers it as SHOULD be implemented in order to be
        able to interact with IoT devices. As this case
        is not a general use case for non-IoT VPNs, its status is
        expected to remain as SHOULD. The 8-octet size of the ICV is
        expected to be sufficient for most use cases of IKEv2, as far
        less packets are exchanged in those cases, and IoT devices
        want to make packets as small as possible. The SHOULD level
        is for 128-bit keys, 256-bit keys remains at MAY level.</t>

        <t> ENCR_3DES has been downgraded from RFC 4307 MUST- to MAY.
        All IKEv2 implementations already implement ENCR_AES_CBC,
        so there is no need to keep support for the much slower
        ENCR_3DES. In addition, ENCR_CHACHA20_POLY1305 provides a more
        modern alternative to AES.</t>

        <t> ENCR_DES can be brute-forced using off-the-shelf
        hardware. It provides no meaningful security whatsoever and,
        therefore, MUST NOT be implemented.</t>
<t>ENCR_NULL was incorrectly specified as MAY in RFC 4307, even when
 <xref target="RFC7296"/>, Section 5 clearly states that it MUST NOT be
 used. This was fixed and this document now lists ENCR_NULL as
 MUST NOT.</t>

      </section>

      <section anchor="algs_prf" title="Type 2 - IKEv2 Pseudorandom Function Transforms">

        <t> Transform Type 2 algorithms are pseudorandom functions
        used to generate pseudorandom values when needed.</t>

        <texttable anchor="tbl_alg2" suppress-title="true">
          <ttcol align="left">Name</ttcol>
          <ttcol align="left">Status</ttcol>
          <ttcol align="left">Comment</ttcol>
          <c>PRF_HMAC_SHA2_256</c><c>MUST</c><c></c>
          <c>PRF_HMAC_SHA2_512</c><c>SHOULD+</c><c></c>
          <c>PRF_HMAC_SHA1</c><c>MUST-</c><c></c>
          <c>PRF_AES128_XCBC</c><c>SHOULD</c><c>(IoT)</c>
          <c>PRF_HMAC_MD5</c><c>MUST&nbsp;NOT</c><c></c>
          <postamble>
          (IoT) This requirement is for interoperability with IoT.
          </postamble>
        </texttable>

        <t>As no SHA2-based transforms were referenced in RFC 4307,
        PRF_HMAC_SHA2_256 was not mentioned in RFC 4307. PRF_HMAC_SHA2_256
        MUST be implemented in order to replace SHA1 and PRF_HMAC_SHA1.</t>

        <t> PRF_HMAC_SHA2_512 SHOULD be implemented as a future
        replacement for PRF_HMAC_SHA2_256 or when stronger security is
        required. PRF_HMAC_SHA2_512 is preferred over
        PRF_HMAC_SHA2_384 as the additional overhead of
        PRF_HMAC_SHA2_512 is negligible.</t>

        <t> PRF_HMAC_SHA1 has been downgraded from MUST in RFC 4307 to
        MUST-, as cryptographic attacks against SHA1 are increasing,
        resulting in an industry-wide trend to deprecate its usage.</t>

        <t> PRF_AES128_XCBC is only recommended in the scope of IoT,
        as Internet of Things deployments tend to prefer AES-based
        pseudorandom functions in order to avoid implementing SHA2.
        For the non-IoT VPN deployment, it has been downgraded from
        SHOULD in RFC 4307 to MAY as it has not seen wide adoption.</t>

        <t>PRF_HMAC_MD5 has been downgraded from MAY in RFC 4307 to
        MUST NOT. Cryptographic attacks against MD5, such as
        collision attacks mentioned in <xref target="TRANSCRIPTION"/>,
        are resulting in an industry-wide trend to deprecate and
        remove MD5 (and thus HMAC-MD5) from cryptographic libraries.</t>

      </section>

      <section anchor="algs_integ" title="Type 3 - IKEv2 Integrity Algorithm Transforms">

        <t> The algorithms in the table below are negotiated in the SA
        payload and used for the Encrypted Payload. References to the
        specification defining these algorithms are in the IANA
        registry. When an AEAD algorithm (see <xref
        target="algs_enc"/>) is proposed, this algorithm transform
        type is not in use.</t>

        <texttable anchor="tbl_alg3" suppress-title="true">
          <ttcol align="left">Name</ttcol>
          <ttcol align="left">Status</ttcol>
          <ttcol align="left">Comment</ttcol>
          <c>AUTH_HMAC_SHA2_256_128</c><c>MUST</c><c></c>
          <c>AUTH_HMAC_SHA2_512_256</c><c>SHOULD</c><c></c>
          <c>AUTH_HMAC_SHA1_96</c><c>MUST-</c><c></c>
          <c>AUTH_AES_XCBC_96</c><c>SHOULD</c><c>(IoT)</c>
          <c>AUTH_HMAC_MD5_96</c><c>MUST&nbsp;NOT</c><c></c>
          <c>AUTH_DES_MAC</c><c>MUST&nbsp;NOT</c><c></c>
          <c>AUTH_KPDK_MD5</c><c>MUST&nbsp;NOT</c><c></c>

	  <postamble>
          (IoT) This requirement is for interoperability with IoT.
            </postamble>
        </texttable>

        <t> AUTH_HMAC_SHA2_256_128 was not mentioned in RFC 4307, as no
        SHA2-based transforms were mentioned. AUTH_HMAC_SHA2_256_128
        MUST be implemented in order to replace AUTH_HMAC_SHA1_96.</t>

        <t> AUTH_HMAC_SHA2_512_256 SHOULD be implemented as a future
        replacement of AUTH_HMAC_SHA2_256_128 or when stronger
        security is required. This value has been preferred over
        AUTH_HMAC_SHA2_384, as the additional overhead of
        AUTH_HMAC_SHA2_512 is negligible.</t>

        <t> AUTH_HMAC_SHA1_96 has been downgraded from MUST in RFC 4307
        to MUST- as cryptographic attacks against SHA1 are increasing,
        resulting in an industry-wide trend to deprecate its usage.</t>

        <t> AUTH_AES_XCBC_96 is only recommended in the scope of IoT, as
        Internet of Things deployments tend to prefer AES-based
        pseudorandom functions in order to avoid implementing SHA2.
        For the non-IoT VPN deployment, it has been downgraded from
        SHOULD in RFC 4307 to MAY as it has not been widely adopted.
        </t>

<t>AUTH_DES_MAC and AUTH_KPDK_MD5 were not mentioned in RFC 4307, so
  their default statuses were MAY. These have been downgraded to MUST
  NOT. AUTH_HMAC_MD5_96 is also demoted to MUST NOT. This is because
  there is an industry-wide trend to deprecate DES and MD5. Note also
  that MD5 support is being removed from cryptographic libraries in
  general because its non-HMAC use is known to be subject to
  collision attacks, for example, as mentioned in
  <xref target="TRANSCRIPTION"/>.</t>

      </section>

      <section anchor="algs_dh" title="Type 4 - IKEv2 Diffie-Hellman Group Transforms">
        <t> There are several Modular Exponential (MODP) groups and
        several Elliptic Curve Cryptography (ECC) groups that are defined for use
        in IKEv2. These groups are defined in both the base
        document <xref target="RFC7296"/> and in extension documents and are identified by
        group number. Note that it is critical to enforce a secure
        Diffie-Hellman (DH) exchange as this exchange provides keys for the
        session. If an attacker can retrieve one of the private numbers (a
        or b) and the complementary public value (g**b or g**a), then the
        attacker can compute the secret and the keys used and then decrypt
        the exchange and IPsec SA created inside the IKEv2 SA. Such an
        attack can be performed off-line on a previously recorded
        communication, years after the communication happened. This
        differs from attacks that need to be executed during the
        authentication that must be performed online and in near
        real time.</t>

        <texttable anchor="tbl_dh" suppress-title="true">
          <ttcol align="left">Number</ttcol>
          <ttcol align="left">Description</ttcol>
          <ttcol align="left">Status</ttcol>
          <c>14</c><c>2048-bit MODP Group</c><c>MUST</c>
          <c>19</c><c>256-bit random ECP group</c><c>SHOULD</c>
          <c>5</c><c>1536-bit MODP Group</c><c>SHOULD&nbsp;NOT</c>
          <c>2</c><c>1024-bit MODP Group</c><c>SHOULD&nbsp;NOT</c>
          <c>1</c><c>768-bit MODP Group</c><c>MUST&nbsp;NOT</c>
          <c>22</c><c>1024-bit MODP Group with 160-bit Prime Order Subgroup</c><c>MUST&nbsp;NOT</c>
          <c>23</c><c>2048-bit MODP Group with 224-bit Prime Order Subgroup</c><c>SHOULD&nbsp;NOT</c>
          <c>24</c><c>2048-bit MODP Group with 256-bit Prime Order Subgroup</c><c>SHOULD&nbsp;NOT</c>
        </texttable>

        <t> Group 14 or the 2048-bit MODP Group is raised from SHOULD+ in
        RFC&nbsp;4307 to MUST as a replacement for the 1024-bit MODP Group. Group 14 is
        widely implemented and considered secure.</t>

        <t> Group 19 or the 256-bit random ECP group was not specified in
        RFC&nbsp;4307 as this group was not defined at that time. Group
        19 is widely implemented and considered secure and, therefore,
	has been promoted to the SHOULD level.</t>

        <t> Group 5 or the 1536-bit MODP Group has been downgraded from
        MAY in RFC 4307 to SHOULD NOT. It was specified earlier, but is
        now considered to be vulnerable to being broken within the next
        few years by a nation-state-level attack, so its security
        margin is considered too narrow.</t>

        <t> Group 2 or the 1024-bit MODP Group has been downgraded from
        MUST- in RFC 4307 to SHOULD NOT. It is known to be weak against
        sufficiently funded attackers using commercially available
        mass-computing resources, so its security margin is considered
        too narrow. It is expected in the near future to be downgraded
        to MUST NOT.</t>

        <t> Group 1 or the 768-bit MODP Group was not mentioned in RFC 4307
        and so its status was MAY. It can be broken within hours using
        cheap off-the-shelf hardware. It provides no security
        whatsoever. It has, therefore, been downgraded to MUST NOT.</t>

        <t> Groups 22, 23, and 24 are MODP groups with Prime Order
        Subgroups that are not safe primes. The seeds for these
        groups have not been publicly released, resulting in reduced
        trust in these groups. These groups were proposed as alternatives
        for groups 2 and 14 but never saw wide deployment. It has been shown
        that group 22 with 1024-bit MODP is too weak and academia have
        the resources to generate malicious values at this size. This has
        resulted in group 22 to be demoted to MUST NOT. Groups 23 and 24
        have been demoted to SHOULD NOT and are expected to be further
        downgraded in the near future to MUST NOT. Since groups 23 and 24
        have small subgroups, the checks specified in the
first bullet point of Section 2.2 of "Additional Diffie-Hellman Tests for the
Internet Key Exchange Protocol Version 2 (IKEv2)" <xref target="RFC6989"/>
MUST be done when these groups are used.</t>

      </section>
      <section anchor="summ_chang" title="Summary of Changes from RFC 4307">
        <t> The following table summarizes the changes from RFC 4307.</t>

        <texttable anchor="tbl_summ" suppress-title="true">
          <ttcol align="left">Algorithm</ttcol>
          <ttcol align="left">RFC 4307</ttcol>
          <ttcol align="left">RFC 8247</ttcol>
          <c>ENCR_3DES</c><c>MUST-</c><c>MAY</c>
          <c>ENCR_NULL</c><c>MUST NOT (per <xref target="Err1937"/>)</c><c>MUST NOT</c>
	   <c>ENCR_AES_CBC</c><c>SHOULD+</c><c>MUST</c>
	   <c>ENCR_AES_CTR</c><c>SHOULD</c><c>MAY(*)</c>
	   <c>PRF_HMAC_MD5</c><c>MAY</c><c>MUST NOT</c>
	   <c>PRF_HMAC_SHA1</c><c>MUST</c><c>MUST-</c>
	   <c>PRF_AES128_XCBC</c><c>SHOULD+</c><c>SHOULD</c>
	   <c>AUTH_HMAC_MD5_96</c><c>MAY</c><c>MUST NOT</c>
	   <c>AUTH_HMAC_SHA1_96</c><c>MUST</c><c>MUST-</c>
	   <c>AUTH_AES_XCBC_96</c><c>SHOULD+</c><c>SHOULD</c>
	   <c>Group 2 (1024-bit)</c><c>MUST-</c><c>SHOULD NOT</c>
	   <c>Group 14 (2048-bit)</c><c>SHOULD+</c><c>MUST</c>


	 </texttable>
 <t><list style="hanging" hangIndent="5">
 <t hangText="(*)">This algorithm is not mentioned in the above sections, 
    so it defaults to MAY.</t>
  </list></t>

       </section>
     </section>

     <section title="IKEv2 Authentication">

       <t>IKEv2 authentication may involve a signatures verification.
       Signatures may be used to validate a certificate or to check the
       signature of the AUTH value. Cryptographic recommendations
       regarding certificate validation are out of scope of this
       document. What is mandatory to implement is provided by the PKIX
       community. This document is mostly concerned with signature
       verification and generation for the authentication.</t>

       <section anchor="auth" title="IKEv2 Authentication Method">
	 <texttable anchor="tbl_auth" suppress-title="true">
	   <ttcol align="left">Number</ttcol>
	   <ttcol align="left">Description</ttcol>
	   <ttcol align="left">Status</ttcol>
	   <c>1</c><c>RSA Digital Signature</c><c>MUST</c>
	   <c>2</c><c>Shared Key Message Integrity Code</c><c>MUST</c>
	   <c>3</c><c>DSS Digital Signature</c><c>SHOULD&nbsp;NOT</c>
	   <c>9</c><c>ECDSA with SHA-256 on the P-256 curve</c><c>SHOULD</c>
	   <c>10</c><c>ECDSA with SHA-384 on the P-384 curve</c><c>SHOULD</c>
	   <c>11</c><c>ECDSA with SHA-512 on the P-521 curve</c><c>SHOULD</c>
	   <c>14</c><c>Digital Signature</c><c>SHOULD</c>
	 </texttable>

	 <t> RSA Digital Signature is widely deployed and, therefore,
	 kept for interoperability. It is expected to be downgraded in
	 the future as its signatures are based on the older
	 RSASSA-PKCS1-v1.5, which is no longer recommended. RSA
	 authentication, as well as other specific authentication
	 methods, are expected to be replaced with the generic Digital
	 Signature method of <xref target="RFC7427"/>.</t>

	 <t>Shared Key Message Integrity Code is widely deployed and
	 mandatory to implement in the IKEv2 in RFC 7296. The status
	 remains MUST.</t>

	 <t> "DSS Digital Signature" (IANA value 3) signatures are bound to SHA-1 and have the same
	 level of security as 1024-bit RSA. They are currently at SHOULD NOT
	 and are expected to be downgraded to MUST NOT in the future.</t>

	 <t> Authentication methods that are based on the Elliptic Curve Digital Signature Algorithm (ECDSA) are also expected to be
	 downgraded as these do not provide hash function agility.
	 Instead, ECDSA (like RSA) is expected to be performed using
	 the generic Digital Signature method. Its status is SHOULD.</t>


	 <t> Digital Signature <xref target="RFC7427"/> is expected to
	 be promoted as it provides hash function, signature format, and
	 algorithm agility. Its current status is SHOULD.</t>

	 <section anchor="auth_rsa" title="Recommendations for RSA Key Length">
	   <texttable anchor="tbl_auth_keysize" suppress-title="true">
	     <ttcol align="left">Description</ttcol>
	     <ttcol align="left">Status</ttcol>
	     <c>RSA with key length 2048</c><c>MUST</c>
	     <c>RSA with key length 3072 and 4096</c><c>SHOULD</c>
	     <c>RSA with key length between 2049 and 4095</c><c>MAY</c>
	     <c>RSA with key length smaller than 2048</c><c>SHOULD&nbsp;NOT</c>
	   </texttable>

	   <t>IKEv2 <xref target="RFC7296"/> mandates support for the RSA keys of the bit size
	   1024 or 2048, but key sizes less than 2048 are updated to
	   SHOULD NOT as there is an industry-wide trend to deprecate key
	   lengths less than 2048 bits. Since these signatures only have
	   value in real time and need no future protection, smaller keys
	   were kept at SHOULD NOT instead of MUST NOT. </t>
	 </section>
       </section>

       <section title="Digital Signature Recommendations">

	 <t>When a Digital Signature authentication method is
	 implemented, the following recommendations are applied
	 for hash functions:</t>

	 <texttable anchor="tbl_hash" suppress-title="true">
	   <ttcol align="left">Number</ttcol>
	   <ttcol align="left">Description</ttcol>
	   <ttcol align="left">Status</ttcol>
	    <ttcol align="left">Comment</ttcol>
	   <c>1</c><c>SHA1</c><c>MUST&nbsp;NOT</c><c></c>
	   <c>2</c><c>SHA2-256</c><c>MUST</c><c></c>
	   <c>3</c><c>SHA2-384</c><c>MAY</c><c></c>
	   <c>4</c><c>SHA2-512</c><c>SHOULD</c><c></c>
	 </texttable>

	 <t>When the Digital Signature authentication method is used with
	 RSA signature algorithm, RSASSA-PSS MUST be supported and
	 RSASSA-PKCS1-v1.5 MAY be supported.</t>

	 <t>The following table lists recommendations for
	 authentication methods in <xref target="RFC7427"/>
	 notation. These recommendations are applied only if the Digital
	 Signature authentication method is implemented.</t>
       <texttable anchor="tbl_auth_methods_apply" suppress-title="true">
	 <ttcol align="left">Description</ttcol>
	 <ttcol align="left">Status</ttcol>
	  <ttcol align="left">Comment</ttcol>
	 <c>RSASSA-PSS with SHA-256</c><c>MUST</c><c></c>
	 <c>ecdsa-with-sha256</c><c>SHOULD</c><c></c>
	 <c>sha1WithRSAEncryption</c><c>MUST&nbsp;NOT</c><c></c>
	 <c>dsa-with-sha1</c><c>MUST&nbsp;NOT</c><c></c>
	 <c>ecdsa-with-sha1</c><c>MUST&nbsp;NOT</c><c></c>
	 <c>RSASSA-PSS with Empty Parameters</c><c>MUST&nbsp;NOT</c><c>(*)</c>
	 <c>RSASSA-PSS with Default Parameters</c><c>MUST&nbsp;NOT</c><c>(*)</c>

       </texttable>
 <t><list style="hanging" hangIndent="5">
 <t hangText="(*)">Empty or Default parameters means it is using SHA1, which
	     is at the MUST NOT level.</t>
	   </list></t>
       </section>

     </section>

     <section title="Algorithms for Internet of Things">
       <t>Some algorithms in this document are marked for use with the
       Internet of Things (IoT). There are several reasons why IoT
       devices prefer a different set of algorithms from regular IKEv2
       clients. IoT devices are usually very constrained, meaning that the
       memory size and CPU power is so limited that these clients only
       have resources to implement and run one set of algorithms. For
       example, instead of implementing AES and SHA, these devices
       typically use AES_XCBC as an integrity algorithm so SHA does not
       need to be implemented.</t>

       <t>For example, IEEE Std 802.15.4 <xref target="IEEE-802-15-4" />
       devices have a mandatory-to-implement link-level security using
       AES-CCM with 128-bit keys. The "IEEE Recommended Practice for
       Transport of Key Management Protocol (KMP) Datagrams" <xref
       target="IEEE-802-15-9" /> already provides a way to use Minimal
       IKEv2 <xref target="RFC7815" /> over the 802.15.4 layer to provide link
       keys for the 802.15.4 layer.</t>

       <t>These devices might want to use AES-CCM as their IKEv2
       algorithm, so they can reuse the hardware implementing it. They
       cannot use the AES-CBC algorithm, as the hardware quite often does
       not include support for the AES decryption needed to support the CBC
       mode. So despite the AES-CCM algorithm requiring AEAD <xref
       target="RFC5282" /> support, the benefit of reusing the crypto
       hardware makes AES-CCM the preferred algorithm.</t>

       <t>Another important aspect of IoT devices is that their
       transfer rates are usually quite low (in the order of tens of
       kbit/s), and each bit they transmit has an energy consumption
       cost associated with it and shortens their battery life.
       Therefore, shorter packets are preferred. This is the reason for
       recommending the 8-octet ICV over the 16-octet ICV.</t>

       <t>Because different IoT devices will have different
       constraints, this document cannot specify the one mandatory
       profile for IoT. Instead, this document points out commonly used
       algorithms with IoT devices.
       </t>

     </section>

     <section anchor="security" title="Security Considerations">

       <t> The security of cryptographic-based systems depends on both
       the strength of the cryptographic algorithms chosen and the
       strength of the keys used with those algorithms. The security
       also depends on the engineering of the protocol used by the
       system to ensure that there are no non-cryptographic ways to
       bypass the security of the overall system.</t>

       <t> The Diffie-Hellman Group parameter is the most important one
       to choose conservatively. Any party capturing all IKE and ESP
       traffic that (even years later) can break the selected DH group
       in IKE, can gain access to the symmetric keys used to encrypt
       all the ESP traffic. Therefore, these groups must be chosen very
       conservatively. However, specifying an extremely large DH group
       also puts a considerable load on the device, especially when
       this is a large VPN gateway or an IoT-constrained device.</t>

       <t> This document concerns itself with the selection of
       cryptographic algorithms for the use of IKEv2, specifically with
       the selection of "mandatory-to-implement" algorithms. The
       algorithms identified in this document as "MUST implement" or
       "SHOULD implement" are not known to be broken at the current
       time, and cryptographic research so far leads us to believe that
       they will likely remain secure into the foreseeable future.
       However, this isn't necessarily forever and it is expected that
       new revisions of this document will be issued from time to time
       to reflect the current best practice in this area.</t>

     </section>

     <section anchor="iana" title="IANA Considerations">
       <t>This document renames some of the names in the "Transform Type
       1 - Encryption Algorithm Transform IDs" registry of the "Internet
       Key Exchange Version 2 (IKEv2) Parameters". All the other names
       have ENCR_ prefix except 3, and all other entries use names in
       the format of uppercase words separated with underscores except 6.
       This document changes those names to match others.</t>

       <t>Per this document, IANA has renamed the following entries for the 
       AES-GCM cipher <xref target="RFC4106"/> and the Camellia cipher
       <xref target="RFC5529"/>:</t>
       <texttable anchor="iana_rename" suppress-title="true">
	 <ttcol align="left">Old name</ttcol>
	 <ttcol align="left">New name</ttcol>
	 <c>AES-GCM with a 8 octet ICV</c><c>ENCR_AES_GCM_8</c>
	 <c>AES-GCM with a 12 octet ICV</c><c>ENCR_AES_GCM_12</c>
	 <c>AES-GCM with a 16 octet ICV</c><c>ENCR_AES_GCM_16</c>
	 <c>ENCR_CAMELLIA_CCM with an 8-octet
	 ICV</c><c>ENCR_CAMELLIA_CCM_8</c>
	 <c>ENCR_CAMELLIA_CCM with a 12-octet
	 ICV</c><c>ENCR_CAMELLIA_CCM_12</c>
	 <c>ENCR_CAMELLIA_CCM with a 16-octet
	 ICV</c><c>ENCR_CAMELLIA_CCM_16</c>
       </texttable>

       <t>In addition, IANA has added this RFC as a reference to both the ESP
       Reference and IKEv2 Reference columns for ENCR_AES_GCM entries, while
       keeping the existing references there.  Also, IANA has added this RFC
       as a reference to the ESP Reference column for ENCR_CAMELLIA_CCM
       entries, while keeping the existing reference there.</t>

       <t>The registry entries currently are:</t>
       <figure><artwork><![CDATA[
Number Name                  ESP Reference       IKEv2 Reference
...
18     ENCR_AES_GCM_8        [RFC4106][RFC8247]  [RFC5282][RFC8247]
19     ENCR_AES_GCM_12       [RFC4106][RFC8247]  [RFC5282][RFC8247]
20     ENCR_AES_GCM_16       [RFC4106][RFC8247]  [RFC5282][RFC8247]
...
25     ENCR_CAMELLIA_CCM_8   [RFC5529][RFC8247]  -
26     ENCR_CAMELLIA_CCM_12  [RFC5529][RFC8247]  -
27     ENCR_CAMELLIA_CCM_16  [RFC5529][RFC8247]  -
 ]]></artwork></figure>

     </section>
   </middle>

   <back>


     <references title="Normative References">
       &rfc2119;
       &rfc4106;
       &rfc4307;
       &rfc7296;
       &rfc5282;
       &rfc8174;
     </references>
     <references title="Informative References">

<reference anchor="Err1937" quote-title="false" target="https://www.rfc-editor.org/errata/eid1937"> 
<front> 
<title>Erratum ID 1937</title>
<author><organization>RFC Errata</organization></author> 
<date></date>
</front> 
<seriesInfo name="RFC" value="4307"/>
</reference>

      &rfc7427;
      &rfc6989;
      &rfc7815;
      &rfc5529;
      <reference anchor="IKEV2-IANA" target="http://www.iana.org/assignments/ikev2-parameters">
        <front>
          <title>Internet Key Exchange Version 2 (IKEv2) Parameters</title>
          <author>
            <organization>IANA</organization>
          </author>
          <date />
        </front>
      </reference>

      <reference anchor="TRANSCRIPTION" target="https://hal.inria.fr/hal-01244855/">
              <front>
                  <title>Transcript Collision Attacks: Breaking Authentication in TLS, IKE, and SSH</title>
                  <author initials="K." surname="Bhargavan" fullname="Karthikeyan Bhargavan">
                      <organization>INRIA</organization>
                  </author>
                  <author initials="G." surname="Leurent" fullname=" Gaetan Leurent">
                      <organization>INRIA</organization>
                  </author>
                  <date month="Feb" year="2016" />
              </front>
              <seriesInfo name="Network and Distributed System Security Symposium" value="(NDSS)" />
<seriesInfo name="DOI" value="10.14722/ndss.2016.23418" />

          </reference>

          <reference anchor='IEEE-802-15-4' target="http://ieeexplore.ieee.org/document/7460875/">
            <front>
              <title>IEEE Standard for Low-Rate Wireless Personal Area
              Networks (WPANs)</title>
              <author><organization>IEEE</organization></author>
              <date year='2015'/>
            </front>
            <seriesInfo name="IEEE" value="Standard 802.15.4" />
<seriesInfo name="DOI" value="10.1109/IEEESTD.2016.7460875" />
          </reference>

          <reference anchor='IEEE-802-15-9' target="http://ieeexplore.ieee.org/document/7544442/">
            <front>
              <title>IEEE Recommended Practice for Transport of Key
              Management Protocol (KMP) Datagrams</title>
              <author><organization>IEEE</organization></author>
              <date year='2016'/>
            </front>
            <seriesInfo name="IEEE" value="Standard 802.15.9" />
<seriesInfo name="DOI" value="10.1109/IEEESTD.2016.7544442" />
          </reference>

    </references>

    <section anchor="ack" title="Acknowledgements" numbered="no">
      
      <t>RFC 4307 was authored by Jeffrey
      I. Schiller of the Massachusetts Institute of Technology (MIT).
      Much of the original text has been copied verbatim.</t>
      
      <t> We would like to thank Paul Hoffman, Yaron Sheffer, John
      Mattsson, Tommy Pauly, Eric Rescorla, and Pete Resnick for their
      valuable feedback and reviews.</t>
    </section>

  </back>
</rfc>
