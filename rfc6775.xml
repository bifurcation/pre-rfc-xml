<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC5226 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC2460 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2460.xml">
<!ENTITY RFC2491 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2491.xml">
<!ENTITY RFC3315 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3315.xml">
<!ENTITY RFC3633 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3633.xml">
<!ENTITY RFC3971 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3971.xml">
<!ENTITY RFC3972 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3972.xml">
<!ENTITY RFC3756 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3756.xml">
<!ENTITY RFC4191 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4191.xml">
<!ENTITY RFC4193 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4193.xml">
<!ENTITY RFC4291 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4291.xml">
<!ENTITY RFC4429 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4429.xml">
<!ENTITY RFC4443 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4443.xml">
<!ENTITY RFC4861 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4861.xml">
<!ENTITY RFC4862 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4862.xml">
<!ENTITY RFC4919 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4919.xml">
<!ENTITY RFC4941 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4941.xml">
<!ENTITY RFC4944 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4944.xml">
<!ENTITY RFC6106 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6106.xml">
<!ENTITY RFC5889 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5889.xml">
<!ENTITY RFC6059 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6059.xml">
<!ENTITY RFC6282 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6282.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc rfcedstyle="yes"?>

<rfc category="std" ipr="trust200902" updates="4944" number="6775" submissionType="IETF" consensus="yes">

    <front>
        <title abbrev="ND Optimization for 6LoWPANs">
Neighbor Discovery Optimization for IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs)
                </title>

  <author initials="Z" surname="Shelby" fullname="Zach Shelby" role="editor">
    <organization>
         Sensinode
    </organization>
    <address>
        <postal>
         <street>Konekuja 2</street>
         <city>Oulu</city>
         <code>90620</code>
         <country>Finland</country>
        </postal>
        <phone>+358407796297</phone>
        <email>zach@sensinode.com</email>
  </address>
  </author>

<author initials="S" surname="Chakrabarti" fullname="Samita Chakrabarti">
  <organization>Ericsson</organization>
  <address>
    <email>samita.chakrabarti@ericsson.com</email>
  </address>
</author>

<author initials="E" surname="Nordmark" fullname="Erik Nordmark">
  <organization>Cisco Systems</organization>
  <address>
    <email>nordmark@cisco.com</email>
  </address>
</author>

  <author initials="C" surname="Bormann" fullname="Carsten Bormann">
    <organization>Universitaet Bremen TZI</organization>
    <address>
        <postal>
         <street>Postfach 330440</street>
         <city>Bremen</city>
         <code>D-28359</code>
         <country>Germany</country>
        </postal>
     <phone>+49-421-218-63921</phone>
     <email>cabo@tzi.org</email>
    </address>
  </author>

        <date month="November" year="2012"/>

        <area>Internet</area>

        <workgroup>6LoWPAN Working Group</workgroup>

        <abstract>
        
        <t> The IETF work in IPv6 over Low-power Wireless Personal Area Network
        (6LoWPAN) defines 6LoWPANs such as IEEE 802.15.4.
        This and other similar link
        technologies have limited or no usage of multicast signaling due to
        energy conservation.  In addition, the wireless network may not strictly
        follow the traditional concept of IP subnets and IP links. IPv6 Neighbor
        Discovery was not designed for non-transitive wireless links, as its
        reliance on the traditional IPv6 link concept and its heavy use of
        multicast make it inefficient and sometimes impractical in a low-power
        and lossy network. This document describes simple optimizations to IPv6
        Neighbor Discovery, its addressing mechanisms, and duplicate address
        detection for Low-power Wireless Personal Area Networks and similar
        networks. The document thus updates RFC 4944 to specify
        the use of the optimizations defined here. </t>

        </abstract>
    </front>

    <middle>

      <!-- **************************************************************** -->

        <section anchor='introduction' title="Introduction">

          <t> The IPv6-over-IEEE 802.15.4 <xref target="RFC4944"/> document
          specifies how IPv6 is carried over an IEEE 802.15.4 network with
          the help of an adaptation layer that sits between the
          Media Access Control (MAC) layer
          and the IP network layer. A link in a Low-power Wireless Personal
          Area Network (LoWPAN) is characterized as lossy, low-power,
          low-bit-rate, short-range; with many nodes saving energy with long
          sleep periods. Multicast as used in IPv6 Neighbor Discovery (ND)
          <xref target="RFC4861"/> is not desirable in such a
          wireless low-power
          and lossy network. Moreover, LoWPAN links are asymmetric and
          non-transitive in nature. A LoWPAN is potentially composed of a
          large number of overlapping radio ranges. Although a given radio
          range has broadcast capabilities, the aggregation of these is a
          complex Non-Broadcast Multiple Access (NBMA) <xref target="RFC2491"/>
          structure with generally no LoWPAN-wide multicast capabilities.
          Link-local scope is in reality defined by reachability and radio
          strength. Thus, we can consider a LoWPAN to be made up of links
          with undetermined connectivity properties as in <xref
          target="RFC5889"/>, along with the corresponding address model
          assumptions defined therein.</t>

          <t>This specification introduces the following optimizations to
          IPv6 Neighbor Discovery <xref target="RFC4861"/> specifically
          aimed at low-power and lossy networks such as LoWPANs:
          
            <list style="symbols">
                   <t>Host-initiated interactions to allow for sleeping hosts.</t>
                   <t>Elimination of multicast-based address resolution for hosts.</t>
                   <t>A host address registration feature using a new option in
                   unicast Neighbor Solicitation (NS) and Neighbor
                   Advertisement (NA) messages.</t>

                   <t>A new Neighbor Discovery option to distribute 6LoWPAN
                   header compression context to hosts.</t>

                   <t>Multihop distribution of prefix and 6LoWPAN header
                 compression context.
                   </t>

                   <t>Multihop Duplicate Address Detection (DAD), which uses
                   two new ICMPv6 message types.</t>
            </list>
            The two multihop items can be substituted by a
                 routing protocol mechanism if that is desired; see
                 <xref target="subst_features"/>.
          </t>

          <t>The document defines three new ICMPv6 message options: the
          Address Registration Option (ARO), the
          Authoritative Border Router Option (ABRO), and the
          6LoWPAN Context Option (6CO). It also
          defines two new ICMPv6 message types: the Duplicate Address
          Request (DAR) and the Duplicate Address Confirmation (DAC).</t>

          <section anchor='nd_problems'
                   title="The Shortcomings of IPv6 Neighbor Discovery">

          <t>IPv6 Neighbor Discovery <xref target="RFC4861"/> provides
          several important mechanisms used for router discovery, address
          resolution, Duplicate Address Detection, and Redirect messages,
          along with prefix and parameter discovery.</t>

          <t>Following power-on and initialization of the network in IPv6
          Ethernet networks, a node joins the solicited-node multicast
          address on the interface and then performs Duplicate Address
          Detection (DAD) for the
          acquired link-local address by sending a
          solicited-node multicast message to the link. After that, it sends
          multicast messages to the all-routers multicast address to solicit
          Router Advertisements (RAs). If the host receives a valid RA
          with the A&nbsp;(autonomous address configuration) flag,
          it autoconfigures the IPv6 address with the
          advertised prefix in the RA message.
          Besides this, the IPv6 routers usually send RAs
          periodically on the network. RAs are sent to the all-nodes
          multicast address. Nodes send Neighbor Solicitation/Neighbor
          Advertisement messages to resolve the IPv6 address of the
          destination on the link. The Neighbor Solicitation messages used
          for address resolution are multicast. The Duplicate Address
          Detection procedure and the use of periodic Router Advertisement
          messages assume that the nodes are powered on and reachable most
          of the time.</t>

          <t>In Neighbor Discovery, the routers find the hosts by assuming
          that a subnet prefix maps to one broadcast domain, and then they
          multicast Neighbor Solicitation messages to find the host and its
          link-layer address. Furthermore, the DAD use of multicast assumes
          that all hosts that autoconfigure IPv6 addresses from the same
          prefix can be reached using link-local multicast messages.</t>

          <t>Note that the L (on-link) bit in the Prefix Information
          Option (PIO) can be set to zero in Neighbor Discovery, which makes
          the host not use multicast Neighbor Solicitation (NS) messages for
          address resolution of other hosts, but routers still use multicast
          NS messages to find the hosts.</t>

          <t>Due to the lossy nature of wireless communication and a changing
          radio environment, the IPv6-link node-set may change due to
          external physical factors. Thus, the link is often unstable, and the
          nodes appear to be moving without necessarily moving physically.
          </t>

          <t> A LoWPAN can use two types of link-layer addresses: 16-bit
          short addresses and 64-bit unique addresses as defined in <xref
          target="RFC4944"/>.  Moreover, the available link-layer payload
          size is on the order of less than 100 bytes; thus, header
          compression is very useful.</t>

          <t>Considering the above characteristics in a LoWPAN, and the IPv6
          Neighbor Discovery <xref target="RFC4861"/> protocol design,
          some optimizations and extensions to Neighbor Discovery
          are useful for the wide deployment of IPv6 over low-power and
          lossy networks (example: 6LoWPAN and other homogeneous low-power networks). </t>

        </section>

        <section anchor='applicability' title="Applicability">
          
        <t> In its Section 1, <xref target="RFC4861"/> foresees a document that
        covers operating IP over a particular link type and defines an exception to
        the otherwise general applicability of unmodified <xref target="RFC4861"/>. 
        The present specification improves the usage of IPv6 Neighbor Discovery for
        LoWPANs in order to save energy and processing power of such nodes. This
        document thus updates <xref target="RFC4944"/> to specify the use of the
        optimizations defined here. </t>

        <t> The applicability of this specification is limited to LoWPANs
        where all nodes on the subnet implement these optimizations in a
        homogeneous way.  Although it is noted that some of these
        optimizations may be useful outside of 6LoWPANs, for example, in
        general IPv6 low-power and lossy networks and possibly even in
        combination with <xref target="RFC4861"/>, the usage of such
        combinations is out of scope of this document. </t>

        <t> In this document, we specify a set of behaviors between hosts
        and routers in LoWPANs. An implementation that adheres to this
        document MUST implement those behaviors.  The document also
        specifies a set of behaviors (multihop prefix or context
        dissemination and, separately, multihop Duplicate Address Detection) that
        are needed in route-over configurations.  An implementation of 
        this specification MUST support those pieces,
        unless the implementation supports some alternative ("substitute") 
        from some other specification.</t>

        <t> The optimizations described in this document apply to different
        topologies.  They are most useful for route-over and mesh-under
        configurations in Mesh topologies.  However, Star topology
        configurations will also benefit from the optimizations due to
        reduced signaling, robust handling of the non-transitive link, and
        header compression context information. </t> 
          
        </section>

        <section anchor='goals' title="Goals and Assumptions">

        <t>The document has the following main goals and assumptions.</t>

        <t>Goals:
            <list style="symbols">
             <t>Optimize Neighbor Discovery with a mechanism that is minimal
             yet sufficient for the operation in both mesh-under and
             route-over configurations.</t>
             <t>Minimize signaling by avoiding the use of multicast flooding
             and reducing the use of link-scope multicast messages.</t>
                   <t>Optimize the interfaces between hosts and their default routers.</t>
                   <t>Provide support for sleeping hosts.</t>
                   <t>Disseminate context information to hosts as needed by 6LoWPAN
                   header compression <xref target="RFC6282"/>.</t>
                   <t>Disseminate context information and prefix information 
                   from the border to all routers in a LoWPAN.</t>
               <t>Provide a multihop Duplicate Address Detection mechanism suitable for 
               route-over LoWPANs.</t>
            </list>
          </t>

          <t>Assumptions:
            <list style="symbols">
                 <t>64-bit Extended Unique Identifier (EUI-64)
                 <xref target="EUI64"/> addresses
                 are globally unique, and the LoWPAN is homogeneous.</t>

                 <t>All nodes in the network have an EUI-64 Interface ID
                 in order to do address autoconfiguration and detect duplicate
                 addresses.</t>

                 <t>The link-layer technology is assumed to be low-power and
                 lossy, exhibiting undetermined connectivity, such as IEEE
                 802.15.4 <xref target="RFC4944"/>. However, the address
                 registration mechanism might be useful for other link-layer
                 technologies.</t>

                 <t>A 6LoWPAN is configured to share one or more global IPv6
                 address prefixes to enable hosts to move between routers in the
                 LoWPAN without changing their IPv6 addresses.</t> 

         <t>When using the multihop DAD mechanism (<xref
         target="multihop_dad"/>), each 6LoWPAN Router (6LR) registers with all
         the 6LoWPAN Border Routers (6LBRs) available in the LoWPAN.</t>

                 <t>If IEEE 802.15.4 16-bit short addresses are used, then some
                 technique is used to ensure the uniqueness of those link-layer
                 addresses. That could be done using DHCPv6, Address
                 Registration Option-based Duplicate Address Detection
                 (specified in <xref target="multihop_dad"/>), or other
                 techniques outside of the scope of this document. </t>

                 <t>In order to preserve the uniqueness of addresses
                 (see Section 5.4 of <xref target="RFC4862"/>) not derived
                 from an EUI-64, they must be either assigned or checked for
                 duplicates in the same way throughout the LoWPAN. This can be
                 done using DHCPv6 for assignment and/or using the
                 Duplicate Address Detection mechanism specified in <xref
                 target="multihop_dad"/> (or any other protocols developed for
                 that purpose).</t> 
                 
                 <t>In order for 6LoWPAN header compression <xref target="RFC6282"/> to
                 operate correctly, the compression context must match for all
                 the hosts, 6LRs, and 6LBRs that can send, receive, or forward a
                 given packet. If <xref target='multihop_dist'/> is used to
                 distribute context information, this implies that all the 6LBRs
                 must coordinate the context information they distribute within
                 a single LoWPAN.</t> 
                 
                 <t>This specification describes the
                 operation of ND within a single LoWPAN. The participation of a
                 node in multiple LoWPANs simultaneously may be possible but is
                 out of scope of this document.</t>

        <t> Since the LoWPAN shares its prefix(es) throughout the network,
        mobility of nodes within the LoWPAN is transparent.  Inter-LoWPAN
        mobility is out of scope of this document. </t>

                 </list>
          </t>

    </section>

        <section anchor='subst_features' title="Substitutable Features">

        <t> This document defines the optimization of Neighbor Discovery
        messages
        for the host-router interface and introduces two new mechanisms in a
        route-over topology. </t>

        <t> Unless specified otherwise (in a document that defines a routing
        protocol that is used in a 6LoWPAN), this document applies to networks with
        any routing protocol.  However, because the routing protocol may provide
        good alternate mechanisms, this document defines certain features as
        "substitutable", meaning they can be substituted by a routing protocol
        specification that provides mechanisms achieving the same overall effect.
        </t>
    
    <t>
                The features that are substitutable (individually or in a group):
                <list style="symbols">
                 <t>Multihop distribution of prefix and 6LoWPAN header compression 
                 context</t>
                 <t>Multihop Duplicate Address Detection</t>
                </list>
                </t>
                <t> Thus, multihop prefix distribution (the ABRO)
                and the 6LoWPAN Context Option (6CO) for distributing
                header compression contexts go
                hand in hand. If substitution is intended for one of them,
                then both of them MUST be substituted. </t>
                
                <t>Guidelines for feature implementation and deployment are
                provided in <xref target="guidelines-new-features"/>.</t>

        </section>
    </section>

      <!-- **************************************************************** -->

        <section anchor='terminology' title="Terminology">
        
    <t> The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
    NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL"
    in this document are to be interpreted as described in <xref
    target="RFC2119"/>. </t>

    <t> This specification requires readers to be familiar with all the
    terms and concepts that are discussed in <xref
    target="RFC4861">"Neighbor Discovery for IP version&nbsp;6 (IPv6)"</xref>,
    <xref target="RFC4862">"IPv6 Stateless Address Autoconfiguration"</xref>,
    <xref target="RFC4919">"IPv6 over Low-Power Wireless Personal Area
    Networks (6LoWPANs): Overview, Assumptions, Problem Statement, and
    Goals"</xref>, <xref target="RFC4944"> "Transmission of IPv6 Packets
    over IEEE 802.15.4 Networks"</xref>, and <xref target="RFC5889">"IP
    Addressing Model in Ad Hoc Networks"</xref>. </t>

    <t> This specification makes extensive use of the same terminology
    defined in <xref target="RFC4861"/>, unless otherwise defined below.
    </t>

        <t><list style="hanging">

                <t hangText="6LoWPAN link:"><vspace /> A wireless link
                determined by single IP hop reachability of neighboring nodes.
                These are considered links with undetermined connectivity
                properties as in <xref target="RFC5889"/>. </t>

                <t hangText="6LoWPAN Node (6LN):"><vspace /> A 6LoWPAN node is
                any host or router participating in a LoWPAN. This term is used
                when referring to situations in which either a host or router
                can play the role described. </t>

                <t hangText="6LoWPAN Router (6LR):"><vspace /> An intermediate
                router in the LoWPAN that is able to send and receive
                Router Advertisements (RAs) and Router Solicitations (RSs)
                as well as forward and route IPv6 packets. &nbsp;6LoWPAN
                routers are present only in route-over topologies. </t>

                <t hangText="6LoWPAN Border Router (6LBR):"><vspace /> A border
                router located at the junction of separate 6LoWPAN networks or
                between a 6LoWPAN network and another IP network. There may be
                one or more 6LBRs at the 6LoWPAN network boundary. A 6LBR is the
                responsible authority for IPv6 prefix propagation for the
                6LoWPAN network it is serving. An isolated LoWPAN also contains
                a 6LBR in the network, which provides the prefix(es) for the
                isolated network. </t>

                <t hangText="Router:"><vspace/>Either a 6LR or a 6LBR. Note that
                nothing in this document precludes a node being a router on some
                interfaces and a host on other interfaces as allowed by <xref
                target="RFC2460"/>.</t>

                <t hangText="Mesh-under:"><vspace /> A topology where nodes are
                connected to a 6LBR through a mesh using link-layer forwarding.
                Thus, in a mesh-under configuration, all IPv6 hosts in a LoWPAN
                are only one IP hop away from the 6LBR. This topology simulates
                the typical IP-subnet topology with one router with multiple
                nodes in the same subnet. </t>

                <t hangText="Route-over:"><vspace /> A topology where hosts are
                connected to the 6LBR through the use of intermediate layer-3
                (IP) routing. Here, hosts are typically multiple IP hops away
                from a 6LBR. The route-over topology typically consists of a
                6LBR, a set of 6LRs, and hosts. </t>

                <t hangText="Non-transitive link:"><vspace /> A link that
                exhibits asymmetric reachability as defined in Section&nbsp;2.2
                of <xref target="RFC4861"/>. </t>

                <t hangText="IP-over-foo document:"><vspace /> A specification
                that covers operating IP over a particular link type, for
                example, <xref target="RFC4944"/> "Transmission of IPv6 Packets
                over IEEE 802.15.4 Networks". </t>

                <t hangText="Header compression context:"><vspace />
                Address information shared across a LoWPAN and used by 6LoWPAN header
                compression <xref target="RFC6282"/> to enable the elision of
                information that would otherwise be sent repeatedly. In a "context", a
                (potentially partial) address is associated with a Context
Identifier (CID),
                which is then used in header compression as a shortcut for (parts of)
                a source or destination address.</t>

                <t hangText="Registration:"><vspace /> The process during which
                a LoWPAN node sends a Neighbor Solicitation message with an
                Address Registration Option to a router
                creating a Neighbor Cache Entry (NCE) for the LoWPAN node
                with a specific timeout. Thus,
                for 6LoWPAN routers, the Neighbor Cache doesn't behave like a
                cache. Instead, it behaves as a registry of all the host
                addresses that are attached to the router. </t>
                </list>
                </t>

    </section>

      <!-- **************************************************************** -->

        <section anchor='overview' title="Protocol Overview">

        <t>These Neighbor Discovery optimizations are applicable to both
        mesh-under and route-over configurations. In a mesh-under
        configuration, only 6LoWPAN Border Routers and hosts exist; there are
        no 6LoWPAN routers in mesh-under topologies.</t>

        <t>The most important part of the optimizations is the evolved
        host-to-router interaction that allows for sleeping nodes and avoids
        using multicast Neighbor Discovery messages except for the case of a
        host finding an initial set of default routers, and redoing such
        determination when that set of routers have become unreachable. </t>

        <t>The protocol also provides for header compression <xref
        target="RFC6282"/> by carrying header compression information in a
        new option in Router Advertisement messages.</t>

        <t>In addition, there are separate mechanisms that can be used
        between 6LRs and 6LBRs to perform multihop Duplicate Address Detection
        and distribution of the prefix and compression context
        information from the 6LBRs to all the 6LRs, which in turn use normal
        Neighbor Discovery mechanisms to convey this information to the hosts.</t>

        <t>The protocol is designed so that the host-to-router interaction
        is not affected by the configuration of the 6LoWPAN; the
        host-to-router interaction is the same in a mesh-under and
        route-over configuration.</t>

        <section anchor="Optimization" title="Extensions to RFC 4861">
        
        <t>This document specifies the following optimizations and
        extensions to IPv6 Neighbor Discovery <xref target="RFC4861"/>:

        <list style="symbols">

                <t>Host-initiated refresh of Router Advertisement information.
                This removes the need for periodic or unsolicited 
                Router Advertisements from routers to hosts.</t>

                <t>No Duplicate Address Detection (DAD) is performed
                if EUI-64-based IPv6 addresses are used
                (as these addresses are assumed to be globally unique).</t>

                <t>DAD is optional if DHCPv6 is used to assign addresses.</t>

                <t>A new address registration mechanism using a new
                Address Registration Option between hosts and routers.
                This removes the need for routers to use multicast
                Neighbor Solicitations to find
                hosts and supports sleeping hosts. This also enables the same
                IPv6 address prefix(es) to be used across a route-over 6LoWPAN.
                It provides the host-to-router interface for Duplicate Address
                Detection. </t>

                <t>A new Router Advertisement option, the 6LoWPAN Context
                Option, for context information used by 6LoWPAN header
                compression.</t>

                <t>A new mechanism to perform Duplicate Address Detection
                across a route-over 6LoWPAN
                using the new Duplicate Address Request and
                Duplicate Address Confirmation messages.</t>

                <t>New mechanisms to distribute prefixes and context
                information across a route-over network that uses a new
                Authoritative Border Router Option to control the
                flooding of configuration changes.</t>

                <t>A few new default protocol constants are introduced, and
                some existing Neighbor Discovery protocol constants are tuned.</t>
        
        </list></t>

        </section>

        <section anchor="Addr-assign" title="Address Assignment">

        <t>Hosts in a 6LoWPAN configure their IPv6 addresses as specified in
        <xref target="RFC4861"/> and <xref target="RFC4862"/> based on the
        information received in Router Advertisement messages. The use of
        the M&nbsp;(managed address configuration) flag in this
        optimization is, however, more restrictive than in
        <xref target="RFC4861"/>. When the M flag is set, a host is assumed
        to use DHCPv6 to assign any non-EUI-64 addresses. When the M flag is
        not set, the nodes in the LoWPAN support Duplicate Address Detection;
        thus, a host can then safely use the address registration
        mechanism to check non-EUI-64 addresses for uniqueness.</t>

        <t>6LRs MAY use the same mechanisms to configure their IPv6
        addresses.</t>

        <t>The 6LBRs are responsible for managing the prefix(es) assigned to
        the 6LoWPAN, using manual configuration, DHCPv6 Prefix Delegation
        <xref target="RFC3633"/>, or other mechanisms. In an isolated LoWPAN,
        a Unique Local Address (ULA) <xref target="RFC4193"/> prefix
        SHOULD be generated by the 6LBR.</t>

        </section>

        <section anchor='overview_hr' title="Host-to-Router Interaction">

        <t>A host sends Router Solicitation messages at startup and also when the
        Neighbor Unreachability Detection (NUD) of one of its default
        routers fails.
        </t>

        <t>Hosts receive Router Advertisement messages typically containing
        the Authoritative Border Router Option (ABRO) and may optionally
        contain one or more 6LoWPAN Context Options (6COs) in addition to the
        existing Prefix Information Options (PIOs) as described in <xref target="RFC4861"/>.</t>

        <t>When a host has configured a non-link-local IPv6 address, it
        registers that address with one or more of its default routers using
        the Address Registration Option (ARO) in an NS message. The host
        chooses a lifetime of the registration and repeats the ARO
        periodically (before the lifetime runs out) to maintain the
        registration. The lifetime should be chosen in such a way as to
        maintain the registration even while a host is sleeping. Likewise,
        mobile nodes that often change their point of attachment should use
        a suitably short lifetime. See <xref target="host_registration"/> for registration details and 
        <xref target="constants"/> for protocol constants. </t>

        <t>The registration fails when an ARO is returned to the host
        with a non-zero Status. One reason may be that the router determines that the IPv6
        address is already used by another host, i.e., is used by a host
        with a different EUI-64. This can be used to support non-EUI&nbhy;64-based
        addresses such as temporary IPv6 addresses <xref
        target="RFC4941"/> or addresses based on an Interface ID that is an
        IEEE 802.15.4 16-bit short address. Failure can also occur if the
        Neighbor Cache on that router is full.</t>

        <t>The re-registration of an address can be combined with
        Neighbor Unreachability Detection (NUD)
        of the router, since both use unicast Neighbor Solicitation messages.
        This makes things efficient when a
        host wakes up to send a packet and needs to both perform NUD to check
        that the router is still reachable and refresh its registration
        with the router.</t>

        <t>The response to an address registration might not be immediate,
        since in route-over configurations the 6LR might perform Duplicate
        Address Detection
        against the 6LBR. A host retransmits the Address Registration Option
        until it is acknowledged by the receipt of an Address Registration
        Option.</t>

        <t>As part of the optimizations, address resolution is not performed
        by multicasting Neighbor Solicitation messages as in <xref
        target="RFC4861"/>. Instead, the routers maintain
        Neighbor Cache Entries
        for all registered IPv6 addresses. If the address is not in
        the Neighbor Cache in the router, then the address either doesn't
        exist, is assigned to a host attached to some other router in the
        6LoWPAN, or is external to the 6LoWPAN. In a route-over
        configuration, the routing protocol is used to route such packets
        toward the destination.</t>

        </section>

        <section anchor='overview_rr' title="Router-to-Router Interaction">

        <t>The new router-to-router interaction is only for the route-over
        configuration where 6LRs are present.
        See also <xref target='subst_features'/>.</t>

        <t>6LRs MUST act like a host during system startup and prefix
        configuration by sending Router Solicitation messages and
        autoconfiguring their IPv6 addresses, unlike routers in <xref
        target="RFC4861"/>.</t>

        <t>When multihop prefix and context dissemination are used, then the
        6LRs store the ABRO, 6CO, and prefix information received (directly
        or indirectly) from the 6LBRs and redistribute this information in
        the Router Advertisement they send to other 6LRs or send to hosts
        in response to a Router Solicitation. There is a Version Number field
        in the ABRO
        (see <xref target="ABRO"/>), which is used to limit the flooding
        of updated information between the 6LRs.</t>

        <t>A 6LR can perform Duplicate Address Detection
        against one or more 6LBRs using the new Duplicate Address Request
        (DAR) and Duplicate Address Confirmation (DAC) messages,
        which carry the information from the Address Registration Option.
        The DAR and DAC messages will
        be forwarded between the 6LR and 6LBRs; thus, the <xref
        target="RFC4861"/> rule for checking hop limit=255 does not apply to
        the DAR and DAC messages. Those multihop DAD messages MUST NOT
        modify any Neighbor Cache Entries on the routers, since we do not
        have the security benefits provided by the hop limit=255 check.</t>

        </section>

        <section anchor='nce_management' title="Neighbor Cache Management">

        <t>The use of explicit registrations with lifetimes, plus the desire
        to not multicast Neighbor Solicitation messages for hosts, imply that
        we manage the Neighbor Cache Entries (NCEs) slightly differently than
        in <xref target="RFC4861"/>. This results in three different types
        of NCEs, and the types specify how those entries can be removed:
         
         <list style='hanging' hangIndent='22'>
                  <t hangText="Garbage-collectible: "> Entries that are subject
                  to the normal rules in <xref target="RFC4861"/> that allow for
                  garbage collection when low on memory. </t>

                  <t hangText="Registered: "> Entries that have an explicit
                  registered lifetime and are kept until this lifetime expires
                  or they are explicitly unregistered. </t>

                  <t hangText="Tentative: "> Entries that are temporary with a
                  short lifetime, which typically get converted to Registered
                  entries.</t>                
         </list>
         
        Note that the type of the NCE is orthogonal to the states specified
        in <xref target="RFC4861"/>. </t>

        <t>When a host interacts with a router by sending Router Solicitations,
        this results in a Tentative NCE. Once a router has
        successfully had a node register with it, the result is a Registered NCE.
        When routers send RAs to hosts, and when routers receive
        RA messages or receive multicast NS messages from other routers, the
        result is Garbage-collectible NCEs. There can only be one kind of
        NCE for an IP address at a time.</t>

        <t>Neighbor Cache Entries on routers can additionally be added or
        deleted by a routing protocol used in the 6LoWPAN. This is useful if
        the routing protocol carries the link-layer addresses of the
        neighboring routers. Depending on the details of such routing
        protocols, such NCEs could be either Registered or
        Garbage-collectible.</t>

        </section>
        </section>

    <!-- **************************************************************** -->

        <section anchor='message_options'
                 title="New Neighbor Discovery Options and Messages">

        <t>This section defines new Neighbor Discovery message options used by
        this specification. The Address Registration Option is used by hosts,
        whereas the Authoritative Border Router Option and 6LoWPAN Context
        Option are used in the substitutable router-to-router interaction.
        This section also defines the new router-to-router
        Duplicate Address Request and Duplicate Address Confirmation
        messages.</t>

        <section anchor="ARO" title="Address Registration Option">

        <t>The routers need to know the set of host IP addresses that are
        directly reachable and their corresponding link-layer addresses.
        This needs to be maintained as the radio reachability changes. For
        this purpose, an Address Registration Option (ARO) is introduced,
        which can be included in unicast NS messages
        sent by hosts. Thus, it can be included in the unicast NS messages
        that a host sends as part of NUD to
        determine that it can still reach a default router. The ARO is used
        by the receiving router to reliably maintain its Neighbor Cache. The
        same option is included in corresponding NA
        messages with a Status field indicating the success or failure of
        the registration. This option is always host initiated.</t>

        <t>The information contained in the ARO is also included in the
        multihop DAR and DAC messages used between 6LRs and 6LBRs, but the
        option itself is not used in those messages.</t>

        <t>The ARO is required for reliability and power saving. The
        lifetime field provides flexibility to the host to register an
        address that should be usable (continue to be advertised by the 6LR
        in the routing protocol, etc.) during its intended sleep schedule.</t>

        <t>The sender of the NS also includes the EUI-64 <xref
        target="EUI64"/> of the interface from which it is registering an
        address. This is used as a unique ID for the detection of duplicate
        addresses. It is used to tell the difference between the same node
        re-registering its address and a different node (with a different
        EUI-64) registering an address that is already in use by someone
        else. The EUI-64 is also used to deliver an NA carrying an error
        Status code to the EUI-64-based link-local IPv6 address of the host
        (see <xref target="errors"/>).</t>

        <t>When the ARO is used by hosts, an SLLAO (Source Link-Layer Address
        Option) <xref target="RFC4861"/> MUST be included, and the address
        that is to be registered MUST be the IPv6 source address of the
        NS message.</t>

        <figure>
         <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |   Length = 2  |    Status     |   Reserved    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Reserved            |     Registration Lifetime     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
+                            EUI-64                             +
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        ]]></artwork>
        </figure>
        <t>Fields:
         <list style='hanging' hangIndent='24'>
         
          <t hangText="Type:">33</t>
          
          <t hangText="Length:"> 8-bit unsigned integer. The length of the option in 
          units of 8 bytes. Always 2.</t>
          
          <t hangText="Status:"> 8-bit unsigned integer. Indicates the status of a 
          registration in the NA response. MUST be set to 0 in NS messages. See 
          below.</t>
          
          <t hangText="Reserved:"> This field is unused. It MUST be
          initialized to zero by the sender and MUST be ignored by the
          receiver.</t>
        
          <t hangText="Registration Lifetime:"> 16-bit unsigned integer. The
          amount of time in units of 60 seconds that the router should
          retain the NCE for the sender of the NS that
          includes this option. </t>
        
          <t hangText="EUI-64:">64 bits. This field is used to uniquely
          identify the interface of the Registered Address by including the
          EUI-64 identifier <xref target="EUI64"/> assigned to it
          unmodified.</t>
          
         </list>
        </t>
        
         <t>The Status values used in NAs are:</t>
        
        
<texttable anchor='status-codes'> <!--update status-codes-iana in sync-->

<ttcol align='center'> Status </ttcol>
<ttcol align='center'> Description</ttcol>

<c>0</c> <c>Success</c>
<c>1</c> <c>Duplicate Address</c>
<c>2</c> <c>Neighbor Cache Full</c>
<c>3-255</c> <c>Allocated using Standards Action <xref target="RFC5226"/></c>

</texttable>

        </section>


        <section anchor='s6CO' title="6LoWPAN Context Option">

        <t> The 6LoWPAN Context Option (6CO) carries prefix
        information for LoWPAN header compression and is similar to the
        PIO of <xref target="RFC4861"/>. However, the
        prefixes can be remote as well as local to the LoWPAN, since header
        compression potentially applies to all IPv6 addresses. This option
        allows for the dissemination of multiple contexts identified by a
        CID for use as specified in <xref
        target="RFC6282"/>. A context may be a prefix of any length or an
        address (/128), and up to 16 6COs may be carried
        in an RA message. </t>

        <figure anchor='f6co_format' title="6LoWPAN Context Option Format">
        <artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |     Length    |Context Length | Res |C|  CID  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Reserved           |         Valid Lifetime        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.                                                               .
.                       Context Prefix                          .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork>
        </figure>

        <t><list style="hanging" hangIndent="17">
        
        <t hangText="Type:">34</t>
        
        <t hangText="Length:"> 8-bit unsigned integer. The length of the
        option (including the Type and Length fields) in units of 8&nbsp;bytes.
        May be 2 or 3, depending on the length of the Context Prefix
        field.</t>
                 
        <t hangText="Context Length:"> 8-bit unsigned integer.  The number
        of leading bits in the Context Prefix field that are valid.  The
        value ranges from 0 to 128. If it is more than 64, then the Length
        MUST be 3. </t>
                   
        <t hangText="C:"> 1-bit context Compression flag. This flag
        indicates if the context is valid for use in compression.  A context
        that is not valid MUST NOT be used for compression but SHOULD be
        used in decompression in case another compressor has not yet
        received the updated context information. This flag is used to
        manage the context life cycle based on the recommendations in <xref
        target="context_management"/>. </t>
                   
        <t hangText="CID:"> 4-bit Context Identifier for this prefix
        information. The CID is used by context-based header compression as
        specified in <xref target="RFC6282"/>. The list of CIDs for a LoWPAN
        is configured on the 6LBR that originates the context information
        for the 6LoWPAN. </t>
                   
        <t hangText="Res, Reserved:"> This field is unused. It MUST be
        initialized to zero by the sender and MUST be ignored by the
        receiver. </t>
        
        <t hangText="Valid Lifetime:"> 16-bit unsigned integer.  The length
        of time in units of 60 seconds (relative to the time the packet is
        received) that the context is valid for the purpose of header
        compression or decompression. A value of all zero bits (0x0)
        indicates that this context entry MUST be removed immediately. </t>
                   
        <t hangText="Context Prefix:"> The IPv6 prefix or address
        corresponding to the CID field. The valid length of
        this field is included in the Context Length field. This field is
        padded with zeros in order to make the option a multiple of 8 bytes.
        </t>
        </list></t>
        </section>

        <section anchor='ABRO' title="Authoritative Border Router Option">
        
        <t>The Authoritative Border Router Option (ABRO) is needed when
        RA messages are used to disseminate prefixes and
        context information across a route-over topology. In this case, 6LRs
        receive PIOs from other 6LRs. This implies that a
        6LR can't just let the most recently received RA win. In order to be
        able to reliably add and remove prefixes from the 6LoWPAN, we need to
        carry information from the authoritative 6LBR. This is done by
        introducing a version number that the 6LBR sets and that 6LRs propagate
        as they propagate the prefix and context information with this
        ABRO. When there are multiple 6LBRs, they
        would have separate version number spaces. Thus, this option needs to
        carry the IP address of the 6LBR that originated that set of 
        information.</t>
        
        <t>The ABRO MUST be included in all RA
        messages in the case when RAs are used
        to propagate information between routers (as described in <xref
        target="multihop_dad"/>).</t>

        <figure>
         <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |  Length = 3   |          Version Low          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Version High         |        Valid Lifetime         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
+                                                               +
|                                                               |
+                          6LBR Address                         +
|                                                               |
+                                                               +
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        ]]></artwork>
        </figure>
        <t>Fields:
         <list style='hanging' hangIndent='28'>
          
          <t hangText="Type:">35</t>
          
          <t hangText="Length:"> 8-bit unsigned integer.
          The length of the option in units of 8 bytes. Always&nbsp;3.</t>
          
          <t hangText="Version Low, Version High:"> Together, Version
          Low and Version High constitute the Version Number field,
          a 32-bit unsigned integer where Version Low
          is the least significant 16&nbsp;bits and Version High is the
          most significant 16&nbsp;bits. The version number
          corresponding to this
          set of information contained in the RA message. The authoritative
          6LBR originating the prefix increases this version number each time
          its set of prefix or context information changes. </t>
          
          <t hangText="Valid Lifetime:"> 16-bit unsigned integer.  The
          length of time in units of 60 seconds (relative to the time the
          packet is received) that this set of border router information is
          valid. A value of all zero bits (0x0) assumes a default value of
          10,000 (~one&nbsp;week). </t>
          
          <t hangText="Reserved:"> This field is unused. It MUST be
          initialized to zero by the sender and MUST be ignored by the
          receiver.</t>
        
          <t hangText="6LBR Address:"> IPv6 address of the 6LBR that is the
          origin of the included version number.</t>
         </list>
        </t>

        </section>

<!-- **************************************************************** -->

        <section anchor='DARDAC' title="Duplicate Address Messages">

        <t>For the multihop DAD exchanges between a 6LR and 6LBR as
        specified in <xref target="multihop_dad"/>, there are two new ICMPv6
        message types called the Duplicate Address Request (DAR) and the
        Duplicate Address Confirmation (DAC). We avoid reusing the NS
        and NA messages for this purpose,
        since these messages are not subject to the hop limit=255 check as
        they are forwarded by intermediate 6LRs. The information contained
        in the messages is otherwise the same as would be in an NS
        carrying an ARO, with the
        message format inlining the fields that are in the ARO.</t>

        <t>The DAR and DAC use the same message format with different ICMPv6
        type values, and the Status field is only meaningful in the DAC
        message.</t>

        <figure>
         <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |     Code      |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Status     |   Reserved    |     Registration Lifetime     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
+                            EUI-64                             +
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
+                                                               +
|                                                               |
+                       Registered Address                      +
|                                                               |
+                                                               +
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        ]]></artwork>
        </figure>
        
        <t>IP fields:
        <list style='hanging' hangIndent='24'>
          
        <t hangText="IPv6 Source:"> A non-link-local address of the sending
        router.</t>

        <t hangText="IPv6 Destination:"> In a DAR, a non-link-local address of
        a 6LBR. In a DAC, this is just the source from the DAR.</t>

        <t hangText="Hop Limit:"> Set to MULTIHOP_HOPLIMIT on transmit. MUST
        be ignored on receipt.</t>

        </list></t>
        
        <t>ICMP Fields:
        <list style='hanging' hangIndent='24'>
        
        <t hangText="Type:"> 157 for the DAR and 158 for the DAC.</t>
        
        <t hangText="Code:"> Set to zero on transmit. MUST be ignored on 
        receipt.</t>
        
        <t hangText="Checksum:"> The ICMP checksum. See <xref 
        target="RFC4443"/>.</t>
        
        <t hangText="Status:"> 8-bit unsigned integer. Indicates the status
        of a registration in the DAC. MUST be set to 0 in the DAR. See <xref
        target="status-codes"/>.</t>
        
        <t hangText="Reserved:"> This field is unused. It MUST be
        initialized to zero by the sender and MUST be ignored by the
        receiver.</t>
        
        <t hangText="Registration Lifetime:"> 16-bit unsigned integer. The
        amount of time in units of 60 seconds that the 6LBR should retain
        the DAD table entry (<xref target="concept_data_struct"/>)
        for the Registered Address. A value of 0 indicates
        in a DAR that the DAD table entry should be removed.
        </t>
        
        <t hangText="EUI-64:">64 bits. This field is used to uniquely
        identify the interface of the Registered Address by including the
        EUI-64 identifier <xref target="EUI64"/> assigned to it
        unmodified.</t>

        <t hangText="Registered Address:">128-bit field. Carries the host
        address that was contained in the IPv6 Source field in the NS that
        contained the ARO sent by the host.</t>
        
        </list></t>

        </section>
        </section>



      <!-- **************************************************************** -->

        <section anchor='host' title="Host Behavior">

        <t>Hosts in a LoWPAN use the ARO in the
        NS messages they send as a way to maintain the
        Neighbor Cache in the routers, thereby removing the need for
        multicast NSs to do address resolution. Unlike in
        <xref target="RFC4861"/>, the hosts initiate updating the information
        they receive in RAs by sending RSs before the information expires.
        Finally, when NUD indicates that one or all default routers have
        become unreachable, then the host uses RSs to find a new set of
        default routers. </t>

        <section anchor="hFA" title="Forbidden Actions">

        <t>A host MUST NOT multicast an NS message.</t>

        </section>

        <section anchor='host_interface' title="Interface Initialization">

        <t>When the interface on a host is initialized, it follows the
        specification in <xref target="RFC4861"/>. A link-local address is
        formed based on the EUI-64 identifier <xref target="EUI64"/>
        assigned to the interface as per <xref target="RFC4944"/> or the
        appropriate IP-over-foo document for the link, and then the host
        sends RS messages as described in <xref
        target="RFC4861"/> Section&nbsp;6.3.7.</t>


        <t>There is no need to join the solicited-node multicast address,
        since nobody multicasts NSs in this type of
        network. A host MUST join the all-nodes multicast address.</t>

        </section>

        <section anchor='host_sending_rs' title="Sending a Router Solicitation">

        <t>The RS is formatted as specified in <xref
        target="RFC4861"/> and sent to the IPv6 all-routers multicast
        address (see <xref target="RFC4861"/> Section&nbsp;6.3.7 for details). An
        SLLAO MUST be included to enable unicast RAs
        in response. An unspecified source address MUST NOT be used in RS
        messages.</t>

        <t>If the link layer supports a way to send packets to some kind of
        all-routers anycast link-layer address, then that MAY be used to
        convey these packets to a router.</t>

        <t>Since hosts do not depend on multicast RAs to discover
        routers, the hosts need to intelligently retransmit RSs
        whenever the default router list is empty, one of its default routers
        becomes unreachable, or the lifetime of the prefixes and contexts in the
        previous RA is about to expire. The RECOMMENDED rate of retransmissions is to
        initially send up to 3 (MAX_RTR_SOLICITATIONS) RS messages separated by at
        least 10 seconds (RTR_SOLICITATION_INTERVAL) as specified in <xref
        target="RFC4861"/>, and then switch to slower retransmissions. After the
        initial retransmissions, the host SHOULD do truncated binary exponential
        backoff <xref target="ETHERNET"/> of the retransmission timer for each
        subsequent retransmission, truncating the increase of the
        retransmission timer at 60 seconds (MAX_RTR_SOLICITATION_INTERVAL). In all
        cases, the RS retransmissions are terminated when an RA is received. See <xref
        target="constants"/> for protocol constants.</t>

        </section>

        <section anchor="ra_proc" title="Processing a Router Advertisement">

        <t>The processing of RAs is as in <xref
        target="RFC4861"/>, with the addition of handling the 6CO
        and triggering address registration when a new address has
        been configured. Furthermore, the SLLAO MUST be included in
        the RA. Unlike in <xref target="RFC4861"/>, the maximum value of the
        RA Router Lifetime field MAY be up to 0xFFFF (approximately 18
        hours).</t>

        <t>Should the host erroneously receive a PIO with the L (on-link)
        flag set, then that PIO MUST be ignored.</t>

        <section title="Address Configuration">

        <t>Address configuration follows <xref target="RFC4862"/>. For an
        address not derived from an EUI-64, the M flag of the RA determines
        how the address can be configured. If the M flag is set in the RA,
        then DHCPv6 MUST be used to assign the address. If the M flag is not
        set, then the address can be configured by any other means (and
        duplicate detection is performed as part of the registration
        process).</t>

        <t>Once an address has been configured, it will be registered by
        unicasting an NS with an ARO to one or more routers.</t>

        </section>

        <section anchor="storing_contexts" title="Storing Contexts">

        <t>The host maintains a conceptual data structure for the context
        information it receives from the routers.  This structure is called the
        context table.  It includes the CID, the prefix (from the
        Context Prefix field in the 6CO), the Compression bit, and the Valid
        Lifetime. A context table entry that has the Compression bit clear
        is used for decompression when receiving packets but MUST NOT be
        used for compression when sending packets.</t>

        <t>When a 6CO is received in an RA, it is
        used to add or update the information in the context table. If the
        CID field in the 6CO matches an existing context table entry,
        then that entry is updated with the information in the 6CO. If the
        Valid Lifetime field in the 6CO is zero, then the entry is
        immediately deleted.</t>

        <t>If there is no matching entry in the context table, and the Valid
        Lifetime field is non-zero, then a new context is added to the
        context table. The 6CO is used to update the created entry.</t>

        <t>When the 6LBR changes the context information, a host might not
        immediately notice. And in the worst case, a host might have stale
        context information. For this reason, 6LBRs use the recommendations
        in <xref target="context_management"/> for carefully managing the
        context life cycle. Nodes should be careful about using header
        compression in RA messages that include 6COs. </t>

        </section>

        <section title="Maintaining Prefix and Context Information">

        <t>The prefix information is timed out as specified in <xref
        target="RFC4861"/>. When the Valid Lifetime for a context table
        entry expires, the entry is placed in a receive-only mode, which is
        the equivalent of receiving a 6CO for that context with C=0. The
        entry is held in receive-only mode for a period of twice the default
        Router Lifetime, after which the entry is removed. </t>

        <t>A host should inspect the various lifetimes to determine when it
        should next initiate sending an RS to ask for any
        updates to the information. The lifetimes that matter are the
        default Router Lifetime, the Valid Lifetime in the PIOs,
        and the Valid Lifetime in the 6CO. The host
        SHOULD unicast one or more RSs to the router well
        before the shortest of those lifetimes (across all the prefixes and
        all the contexts) expires and then switch to multicast RS messages if
        there is no response to the unicasts. The retransmission behavior
        for the RSs is specified in <xref target='host_sending_rs'/>.</t>

        </section>
        </section>

        <section anchor='host_registration'
                 title="Registration and Neighbor Unreachability Detection">

        <t>Hosts send unicast NS messages to
        register their IPv6 addresses, and also to do NUD to verify that
        their default routers are still reachable. The registration is
        performed by the host including an ARO in the NS
        it sends. Even if the host doesn't have data to send, but is
        expecting others to try to send packets to the host, the host needs
        to maintain its NCEs in the routers. This is done
        by sending NS messages with an ARO to the router well in advance of
        the Registration Lifetime expiring. NS messages are retransmitted up
        to MAX_UNICAST_SOLICIT times using a minimum timeout of
        RETRANS_TIMER until the host receives an NA
        message with an ARO. </t>

        <t>Hosts that receive RA messages from multiple
        default routers SHOULD attempt to register with more than one of
        them in order to increase the robustness of the network.</t>

        <t>Note that NUD probes can be
        suppressed by reachability confirmations from transport protocols or
        applications as specified in <xref target="RFC4861"/>.</t>

        <t>When a host knows it will no longer use a router it is registered
        to, it SHOULD de-register with the router by sending an NS with an
        ARO containing a lifetime of 0. To handle the case when a host loses
        connectivity with the default router involuntarily, the host SHOULD
        use a suitably low Registration Lifetime. </t>


        <section anchor='host_ns' title="Sending a Neighbor Solicitation">

        <t>The host triggers sending NS messages
        containing an ARO when a new address is configured, when it
        discovers a new default router, or well before the Registration
        Lifetime expires. Such an NS MUST include an SLLAO, since the
        router needs to record the
        link-layer address of the host. An unspecified source address MUST
        NOT be used in NS messages.</t>

        </section>

        <section title="Processing a Neighbor Advertisement">

        <t>A host handles NA messages as specified in
        <xref target="RFC4861"/>, with added logic described in this section
        for handling the ARO.</t>

        <t> In addition to the normal validation of an NA
        and its options, the ARO (if present) is verified as
        follows. If the Length field is not two, the option is
        silently ignored. If the EUI-64 field does not match the EUI-64 of
        the interface, the option is silently ignored. </t>

        <t> If the Status field is zero, then the address registration was
        successful. The host saves the Registration Lifetime from the
        ARO for use to trigger a new NS well before
        the lifetime expires. If the Status field is not equal to zero, the
        address registration has failed. </t>

        </section>

        <section title="Recovering from Failures">

        <t>The procedure for maintaining reachability information about a
        neighbor is the same as in <xref target="RFC4861"/> Section 7.3, with
        the exception that address resolution is not performed. </t>

        <t>The address registration procedure may fail for two reasons: no
        response to NSs is received (NUD failure), or an
        ARO with a failure Status (Status > 0) is
        received. In the case of NUD failure, the entry for that router will
        be removed; thus, address registration is no longer of importance.
        When an ARO with a non-zero Status field is
        received, this indicates that registration for that address has
        failed. A failure Status of one indicates that a duplicate address
        was detected, and the procedure described in <xref target="RFC4862"/>
        Section 5.4.5 is followed. The host MUST NOT use the address it
        tried to register. If the host has valid registrations with other
        routers, these MUST be removed by registering with each using a zero
        ARO lifetime. </t>

        <t>A Status code of two indicates that the Neighbor Cache of that
        router is full. In this case, the host SHOULD remove this router from
        its default router list and attempt to register with another router.
        If the host's default router list is empty, it needs to revert to
        sending RSs as specified in <xref target='host_sending_rs'/>.</t>

        <t>Other failure codes may be defined in future documents.</t>

        </section>
        </section>

        <section anchor="host-nexthop" title="Next-Hop Determination">

        <t> The IP address of the next hop for a destination is determined
        as follows. Destinations to the link-local prefix (fe80::) are
        always sent on the link to that destination. It is assumed that
        link-local addresses are formed as specified in <xref
        target="host_interface"/> from the EUI-64, and address resolution is
        not performed. Packets are sent to link-local destinations by reversing the 
        procedure in Appendix A of <xref target="RFC4291"/>. </t>

        <t> Multicast addresses are considered to be on-link and are
        resolved as specified in <xref target="RFC4944"/> or the appropriate
        IP-over-foo document. Note that <xref target="RFC4944"/> only
        defines how to represent a multicast destination address in the
        LoWPAN header. Support for multicast scopes larger than link-local
        needs an appropriate multicast routing algorithm.</t>

        <t>All other prefixes are assumed to be off-link <xref
        target="RFC5889"/>. Anycast addresses are always considered to be
        off-link. They are therefore sent to one of the routers in the
        default router list. </t>

        <t>A LoWPAN node is not required to maintain a minimum of one buffer
        per neighbor as specified in <xref target="RFC4861"/>, since packets
        are never queued while waiting for address resolution. </t>

        </section>

        <section title="Address Resolution">

        <t>The address registration mechanism and the SLLAO in RA
        messages provide sufficient a priori state in routers
        and hosts to resolve an IPv6 address to its associated link-layer
        address. As all prefixes except the link-local prefix and multicast
        addresses are always assumed to be off-link, multicast-based
        address resolution between neighbors is not needed. </t>

        <t> Link-layer addresses for neighbors are stored in NCEs
        <xref target="RFC4861"/>. In order to achieve LoWPAN
        compression, most global addresses are formed using a link-layer
        address. Thus, a host can reduce memory usage by optimizing for
        this case and only storing link-layer address information if it
        differs from the link-layer address corresponding to the Interface
        ID of the IPv6 address (i.e., differs in more than the
        on-link/global bit being inverted). </t>

        </section>

        <section title="Sleeping">

        <t>It is often advantageous for battery-powered hosts in LoWPANs to
        keep a low duty cycle. The optimizations described in this document
        enable hosts to sleep, as further described in this section. Routers
        may want to cache traffic destined to a host that is sleeping, but
        such functionality is out of the scope of this document.</t>

        <section title="Picking an Appropriate Registration Lifetime">

        <t>As all ND messages are initiated by the hosts, this
        allows a host to sleep or otherwise be unreachable between NS/NA message
        exchanges. The ARO attached to NS messages indicates
        to a router to keep the NCE for that address valid for the
        period in the Registration Lifetime field. A host should choose a sleep time
        appropriate for its energy characteristics and set a Registration Lifetime
        larger than the sleep time to ensure that the registration is renewed
        successfully (considering, for example, clock drift and additional time for potential
        retransmissions of the re-registration). External configuration of a host
        should also consider the stability of the network (how quickly the topology
        changes) when choosing its sleep time (and thus Registration Lifetime). A
        dynamic network requires a shorter sleep time so that routers don't keep
        invalid NCEs for nodes longer than necessary.</t>

        </section>

        <section anchor="be_wakeup" title="Behavior on Wakeup">

        <t>When a host wakes up from a sleep period, it SHOULD refresh its
        current address registrations that will time out before the next
        wakeup. This is done by sending NS messages with an ARO
        as described in <xref target="host_ns"/>. The host may also need to
        refresh its prefix and context information by sending a new unicast RS
        (the maximum Router Lifetime is about 18 hours, whereas the maximum
        Registration Lifetime is about 45.5 days). If after wakeup the host
        (using NUD) determines that some or all previous default routers
        have become unreachable, then the host will send multicast RSs
        to discover new default router(s) and restart the
        address registration process.</t>

        </section>
        </section>
        </section>

      <!-- **************************************************************** -->

        <section anchor='router' title="Router Behavior for 6LRs and 6LBRs">

        <t>Both 6LRs and 6LBRs maintain the Neighbor Cache <xref
        target="RFC4861"/> based on the AROs they receive in NA messages
        from hosts, ND packets from other nodes, and, potentially, a routing
        protocol used in the 6LoWPAN as outlined in <xref
        target="nce_management"/>.</t>

        <t>The routers SHOULD NOT garbage-collect Registered NCEs
        (see <xref target="overview_rr"/>), since they need to retain
        them until the Registration Lifetime expires. Similarly, if NUD
        on the router determines that the host is
        UNREACHABLE (based on the logic in <xref target="RFC4861"/>), the
        NCE SHOULD NOT be deleted but rather retained until the
        Registration Lifetime expires. A renewed ARO should mark the cache
        entry as STALE. Thus, for 6LoWPAN routers, the Neighbor Cache doesn't
        behave like a cache. Instead, it behaves as a registry of all the
        host addresses that are attached to the router.</t>

        <t>Routers MAY implement the Default Router Preference (Prf)
        extension <xref target="RFC4191"/> and use that to indicate to the host
        whether the router is a 6LBR or a 6LR. If this is implemented, then
        6LRs with no route to a border router MUST set Prf to (11) for low
        preference, other 6LRs MUST set Prf to (00) for normal preference,
        and 6LBRs MUST set Prf to (01) for high preference.</t>

        <section anchor="router-forbidden" title="Forbidden Actions">

        <t>
          Even if a router in a route-over topology can reach both a
          host and another target, because
        of radio propagation it generally cannot
        know whether the host can directly reach the other target.  Therefore, it cannot
        assume that Redirect will actually work from one host to another. 
        Therefore, it SHOULD NOT send Redirect messages. The only
        potential exception to this "SHOULD NOT" is when the deployment/implementation
        has a way to know how the host can reach the intended target. Hence, it is RECOMMENDED that
        the implementation by default does not send Redirect messages but can be
        configurable when the deployment calls for this.  In contrast,
        for mesh-under topologies, the same considerations about Redirects
        apply as in <xref target="RFC4861"/>.
        </t>

        <t>A router MUST NOT set the L (on-link) flag in the PIOs,
        since that might trigger hosts to send multicast NSs.</t>

        </section>

        <section title="Interface Initialization">

        <t>The 6LBR router interface initialization behavior is the same as
        in <xref target="RFC4861"/>. However, in a dynamic configuration
        scenario (see <xref  target="multihop_dist"/>), a 6LR comes up as a
        non-router and waits to receive the advertisement for configuring
        its own interface address first, before setting its interfaces to be
        advertising interfaces and turning into a router. </t>

        </section>

        <section anchor="rs_proc" title="Processing a Router Solicitation">

        <t>A router processes RS messages as specified in
        <xref target="RFC4861"/>. The differences relate to the inclusion of
        ABROs in the RA
        messages and the exclusive use of unicast RAs. If
        a 6LR has received an ABRO from a 6LBR, then it will include that
        option unmodified in the RA messages it sends. 
        And, if the 6LR has received RAs -- whether with the same prefixes and
        context information or different -- from a different 6LBR, then it
        will need to keep those prefixes and that context information separately
        so that the RAs the 6LR sends will maintain the association between
        the ABRO and the prefixes and context information. The router can
        tell which 6LBR originated the prefixes and context information from
        the 6LBR Address field in the ABRO. When a router has information
        tied to multiple ABROs, a single RS will result in multiple RAs each
        containing a different ABRO.</t>

        <t>When the ABRO Valid Lifetime associated with a 6LBR times out, all
        information related to that 6LBR MUST be removed. As an implementation note,
        it is recommended that RAs are sent sufficiently more frequently than the ABRO
        Valid Lifetime so that missing an RA does not result in removing all
        information related to a 6LBR.</t>

        <t>An RS might be received from a host that has not
        yet registered its address with the router. Thus, the router MUST NOT
        modify an existing NCE based on the SLLAO
        from the RS. However, a router MAY create a
        Tentative NCE based on the SLLAO. Such a
        Tentative NCE SHOULD be timed out in
        TENTATIVE_NCE_LIFETIME seconds, unless a registration converts it
        into a Registered NCE.</t>

        <t>A 6LR or 6LBR MUST include an SLLAO in
        the RAs it sends; this is required so that the
        hosts will know the link-layer address of the router. Unlike in
        <xref target="RFC4861"/>, the maximum value of the RA Router
        Lifetime field MAY be up to 0xFFFF (approximately 18 hours).</t>

        <t>Unlike <xref target="RFC4861"/>, which suggests multicast RAs,
        this specification improves the exchange by always
        unicasting RAs in response to RSs. This is possible, since the RS
        always includes an SLLAO, which is used by the router to
        unicast the RA. </t>

        </section>

        <section title="Periodic Router Advertisements">

        <t>A router does not need to send any periodic RA
        messages, since the hosts will solicit updated information by sending
        RSs before the lifetimes expire.</t>

        <t>However, if the routers use RAs to
        distribute prefix and/or context information across a route-over
        topology, that might require periodic RA messages.
        Such RAs are sent using the configurable MinRtrAdvInterval and
        MaxRtrAdvInterval as per <xref target="RFC4861"/>.</t>

        </section>

        <section anchor='router_ns' title="Processing a Neighbor Solicitation">

        <t>A router handles NS messages as specified in
        <xref target="RFC4861"/>, with added logic described in this section
        for handling the ARO.</t>

        <t>In addition to the normal validation of an NS
        and its options, the ARO is verified as
        follows (if present). If the Length field is not two, or if the
        Status field is not zero, then the NS is silently
        ignored.</t>

        <t>If the source address of the NS is the unspecified address, or if
        no SLLAO is included, then any included ARO is ignored, that
        is, the NS is processed as if it did not contain an ARO.</t>


        <section anchor='duplicate' title="Checking for Duplicates">

        <t>If the NS contains a valid ARO, then the router inspects its
        Neighbor Cache on the arriving interface to see if it is a
        duplicate. It isn't a duplicate if (1) there is no NCE for the IPv6
        source address of the NS or (2) there is such an NCE and the EUI-64
        is the same. Otherwise, it is a duplicate address. Note that if
        multihop DAD (<xref target="multihop_dad"/>) is used, then the checks
        are slightly different, to take into account Tentative NCEs.
        In the case where it is a duplicate address, then the router
        responds with a unicast NA message with the ARO Status field
        set to one (to indicate that the address is a duplicate)
        as described in <xref target="errors"/>. In this case, there is no
        modification to the Neighbor Cache. </t>

        </section>

        <section anchor='errors' title="Returning Address Registration Errors">

        <t>Address registration errors are not sent back to the source
        address of the NS due to a possible risk of L2 address collision.
        Instead, the NA is sent to the link-local IPv6 address with the
        Interface ID part derived from the EUI-64 field of the ARO as per <xref
        target="RFC4944"/>. In particular, this means that the
        universal/local bit needs to be inverted. The NA is formatted with a
        copy of the ARO from the NS, but with the Status field set to
        indicate the appropriate error. </t>

        <t>The error is sent to the link-local address with the Interface ID
        derived from the EUI-64. Thus, if the ARO was from and for a short
        address, the L2 destination address for the NA with the ARO error will
        be the 64-bit unique address.
        </t>

        </section>

        <section anchor='router_cache' title="Updating the Neighbor Cache">

        <t>If the ARO did not result in a duplicate address being detected as
        above, then if the Registration Lifetime is non-zero the router
        creates (if it didn't exist) or updates (otherwise) an NCE
        for the IPv6 source address of the NS. If the Neighbor Cache
        is full and a new entry needs to be created, then the router
        responds with a unicast NA with the ARO Status field set to two (to
        indicate that the router's Neighbor Cache is full) as described in
        <xref target="errors"/>. </t>

        <t> The Registration Lifetime and the EUI-64 are recorded in the
        NCE. A unicast NA is then
        sent in response to the NS. This NA SHOULD include a copy of the
        ARO, with the Status field set to zero. A TLLAO (Target Link-Layer
        Address Option) <xref target="RFC4861"/> is not required in the NA,
        since the host already knows the router's link-layer address from
        RAs.</t>

        <t>If the ARO contains a zero Registration Lifetime, then any
        existing NCE for the IPv6 source address of the NS
        MUST be deleted and an NA sent as above.</t>

        <t>Should the Registration Lifetime in an NCE
        expire, then the router MUST delete the cache entry.</t>

        <t>The addition and removal of Registered NCEs
        would result in notifying the routing protocol. </t>

        <t>Note: If the substitutable multihop DAD (<xref
        target="multihop_dad"/>) is used, then the updating of the Neighbor
        Cache is slightly different due to Tentative NCEs.</t>

        </section>


        <section title="Next-Hop Determination">

        <t> In order to deliver a packet destined for a 6LN registered with
        a router, next-hop determination is slightly different for routers
        than for hosts (see <xref target="host-nexthop"/>). The routing table
        is checked to determine the next-hop IP address. A Registered NCE
        determines if the next-hop IP address is on-link.
        It is the responsibility of the routing protocol of the router to
        maintain on-link information about its registered neighbors.
        Tentative NCEs MUST NOT be used to determine on-link status of the
        registered nodes. </t>

        </section>


        <section anchor='router_resolution'
                 title="Address Resolution between Routers">

        <t>There needs to be a mechanism somewhere for the routers to
        discover each other's link-layer addresses. If the routing protocol
        used between the routers provides this, then there is no need for
        the routers to use the ARO between each
        other. Otherwise, the routers SHOULD use the ARO. When routers use the
        ARO to register with each other and multihop DAD (<xref
        target="multihop_dad"/>) is in use, then care must be taken to
        ensure that there isn't a flood of ARO-carrying messages sent to the
        6LBR as each router hears an ARO from their neighboring routers. The
        details for this scenario are out of scope of this document.</t>

        <t>Routers MAY also use multicast NSs as in
        <xref target="RFC4861"/> to resolve each others link-layer
        addresses. Thus, routers MAY multicast NSs for
        other routers, for example, as a result of receiving some routing
        protocol update. Routers MUST respond to multicast NSs.
        This implies that routers MUST join the
        solicited-node multicast addresses as specified in <xref
        target="RFC4861"/>.</t>
        
        </section>
        </section>
        </section>


      <!-- **************************************************************** -->

        <section anchor='border_router' title="Border Router Behavior">

        <t>A 6LBR handles the sending of RAs and processing of NSs from hosts
        as specified above in <xref target="router"/>. A 6LBR SHOULD always
        include an ABRO in the RAs it
        sends, listing itself as the 6LBR address. This requires that the
        6LBR maintain the version number in stable storage and increase
        the version number when some information in its RAs changes.
        The information whose change affects the version is in the PIOs
        (the prefixes or their lifetimes) and in the 6CO
        (the prefixes, CIDs, or lifetimes).</t>

        <t>In addition, a 6LBR is somehow configured with the prefix or
        prefixes that are assigned to the LoWPAN and advertises those in
        RAs as in <xref target="RFC4861"/>. In the case of route-over,
        those prefixes can be disseminated to all the 6LRs using the
        technique discussed in <xref target="multihop_dist"/>.
        However, there might be mechanisms outside of the scope of this
        document that can be used as a substitute for prefix
        dissemination in the route-over topology (see <xref target="subst_features"/>).</t>

        <t>If the 6LoWPAN uses header compression <xref target="RFC6282"/>
        with context, then the 6LBR needs to manage the CIDs and
        advertise those in RAs by including 6COs in
        its RAs so that directly attached hosts are
        informed about the CIDs. Below, we specify things to consider
        when the 6LBR needs to add, remove, or change the context
        information. In the case of route-over, the context
        information is disseminated to all the 6LRs using the technique
        discussed in <xref target="substitutable"/>, unless a different
        specification provides a substitute for this multihop distribution.</t>

        <section anchor='border_router_prefix' title="Prefix Determination">

        <t>The prefix or prefixes used in a LoWPAN can be manually
        configured or can be acquired using DHCPv6 Prefix Delegation <xref
        target="RFC3633"/>. For a LoWPAN that is isolated from the network
        either permanently or occasionally, the 6LBR can assign a ULA prefix
        using <xref target="RFC4193"/>. The ULA prefix should be stored in
        stable storage so that the same prefix is used after a failure of
        the 6LBR. If the LoWPAN has multiple 6LBRs, then they should be
        configured with the same set of prefixes. The set of prefixes is
        included in the RA messages as specified in <xref target="RFC4861"/>.</t>

        </section>

        <section anchor='context_management'
                 title="Context Configuration and Management">

        <t>If the LoWPAN uses header compression <xref target="RFC6282"/>
        with context, then the 6LBR must be configured with context
        information and related CIDs. If the LoWPAN has multiple
        6LBRs, then they MUST be configured with the same context
        information and CIDs. As noted in <xref target="RFC6282"/>,
        maintaining consistency of context information is crucial for
        ensuring that packets will be decompressed correctly.</t>

        <t>The context information carried in RA
        messages originates at 6LBRs and must be disseminated to all the
        routers and hosts within the LoWPAN. RAs include one 6CO for each
        context. </t>

        <t> For the dissemination of context information using the 6CO, a
        strict life cycle SHOULD be used in order to ensure that the context
        information stays synchronized throughout the LoWPAN.  New context
        information SHOULD be introduced into the LoWPAN with C=0, to ensure
        that it is known by all nodes that may have to perform header
        decompression based on this
        context information. Only when it is reasonable to assume that this
        information was successfully disseminated SHOULD an option with C=1
        be sent, enabling the actual use of the context information for
        compression. </t>
           
        <t> Conversely, to avoid the situation where nodes send packets that
        make use of previous values of contexts -- which would result in
        ambiguity when receiving a packet that uses a recently changed
        context -- old values of a context SHOULD be taken out of use for
        a while before new values are assigned to this specific context.
        That is, in preparation for a change of context information, its
        dissemination SHOULD continue for at least MIN_CONTEXT_CHANGE_DELAY
        with C=0.  Only when it is reasonable to assume that the fact that
        the context is now invalid was successfully disseminated should the
        CID be taken out of dissemination or reused with a different
        Context Prefix field. In the latter case, dissemination of the new
        value again SHOULD start with C=0, as above. </t>
        
        </section>
        </section>


      <!-- **************************************************************** -->

        <section anchor='substitutable' title="Substitutable Feature Behavior">

        <t>Normally, in a 6LoWPAN multihop network, the RA messages are used to
        disseminate prefixes and context information to all the 6LRs in a
        route-over topology. If all routers are configured to use a substitute
        mechanism for such information distribution, any remaining use of the
        6LoWPAN-ND mechanisms is governed by the substitute specification.
         </t>

        <t>There is also the option for a 6LR to perform multihop DAD (for
        IPv6 addresses not derived from an EUI-64) against a 6LBR in a
        route-over topology by using the DAR and DAC messages.
        This is substitutable because
        there might be other ways to either allocate a unique address, such as
        DHCPv6 <xref target="RFC3315"/>, or use other future mechanisms for
        multihop DAD. Again, in this case, any remaining use of the
        6LoWPAN-ND mechanisms is governed by the substitute specification.
        </t>

        <t>To be clear: Implementations MUST support the features
        described in Sections <xref target="multihop_dist" format="counter"/> 
        and <xref target="multihop_dad" format="counter"/>, unless the
        implementation supports some alternative ("substitute") from some
        other specification.</t>

        <section anchor='multihop_dist'
                 title="Multihop Prefix and Context Distribution">

        <t>The multihop distribution relies on RS messages
        and RA messages sent between routers, and
        using the ABRO version number to control the propagation of the
        information (prefixes and context information) that is being sent in
        the RAs.</t>

        <t>This multihop distribution mechanism can handle arbitrary
        information from an arbitrary number of 6LBRs. However, the
        semantics of the context information requires that all the 6LNs use
        the same information whether they send, forward, or receive
        compressed packets. Thus, the manager of the 6LBRs needs to somehow
        ensure that the context information is in synchrony across the
        6LBRs. This can be handled in different ways. One possible way to
        ensure it is to treat the context and prefix information as
        originating from some logical or virtual source, which in essence
        means that it looks like the information is distributed from a
        single source.</t>

        <t>If a set of 6LBRs behave as a single one (using mechanisms out of
        scope of this document) so that the prefixes and contexts and the ABRO
        version number will be the same from all the 6LBRs, then those 6LBRs
        can pick a single IP address to use in the ABRO.</t>

        <section anchor="br_ra" title="6LBRs Sending Router Advertisements">

        <t>6LBRs supporting multihop prefix and context distribution MUST
        include an ABRO in each of their RAs. The ABRO Version Number field is
        used to keep prefix and context information consistent throughout
        the LoWPAN, along with the guidelines in <xref
        target="context_management"/>. Each time any information in the set
        of PIOs or 6COs changes, the ABRO version is increased by one.
        </t>

        <t>This requires that the 6LBR maintain the PIO, 6CO, and ABRO
        Version Number in stable storage, since an old version number will
        be silently ignored by the 6LRs.</t>

        </section>

        <section anchor="r_rs_send" title="Routers Sending Router Solicitations">

        <t>In a 6LoWPAN, unless substituted, multihop distribution is done 
        using RA
        messages. Thus, on interface initialization, a router (6LR) MUST send
        RS messages following the rules specified for hosts in <xref
        target="RFC4861"/>. This in turn will cause the routers to respond with RA messages
        that can then be used to initially seed the prefix and context information.
        </t>

        </section>

        <section anchor="r_ra_proc"
                 title="Routers Processing Router Advertisements">

        <t>If multihop distribution is not done using RA messages, then the
        routers follow <xref target="RFC4861"/>, which states that they
        merely do some consistency checks; in this case, nothing in <xref
        target="multihop_dist"/> applies. Otherwise, the routers will check
        and record the prefix and context information from the received RAs,
        and use that information as follows.</t>

        <t>If a received RA does not contain an ABRO, then the RA MUST be
        silently ignored.</t>

        <t>The router uses the 6LBR Address field in the ABRO to check if it
        has previously received information from the 6LBR. If it finds no
        such information, then it just records the 6LBR address, Version,
        Valid Lifetime, and the associated prefixes and context information.
        If the 6LBR is previously known, then the Version Number field MUST
        be compared against the recorded version number for that 6LBR. If
        the version number received in the packet is less than the stored
        version number, then the information in the RA is silently ignored.
        Otherwise, the recorded information and version number are
        updated.</t>

        </section>

        <section anchor="store_info" title="Storing the Information">

        <t>The router keeps state for each 6LBR that it sees with an ABRO.
        This includes the version number, the Valid Lifetime, and the
        complete set of PIOs and 6COs.
        The prefixes are timed out based on the Valid Lifetime in
        the PIO. The Context Prefix is timed out based
        on the Valid Lifetime in the 6CO.</t>

        <t>While the prefixes and context information are stored in the
        router, their valid and preferred lifetimes are decremented as time
        passes. This ensures that when the router is in turn later
        advertising that information in the RAs it sends,
        the 'expiry time' doesn't accidentally move further into the future.
        For example, if a 6CO with a Valid Lifetime of 10 minutes is
        received at time T, and the router includes this in an RA it sends at
        time T+5 minutes, the Valid Lifetime in the 6CO it sends will be
        only 5 minutes.</t>

        </section>

        <section anchor="mh_ra" title="Sending Router Advertisements">

        <t>When multihop distribution is performed using RA messages, the
        routers MUST ensure that the ABRO always stays together with the
        prefixes and context information received with that ABRO. Thus, if
        the router has received prefix P1 with an ABRO saying it is from one
        6LBR, and prefix P2 from another 6LBR, then the router MUST NOT
        include the two prefixes in the same RA message. Prefix P1 MUST be
        in an RA that includes an ABRO from the first 6LBR, etc. Note that
        multiple 6LBRs might advertise the same prefix and context
        information, but they still need to be associated with the 6LBRs
        that advertised them.</t>

        <t>The routers periodically send RAs as in <xref
        target="RFC4861"/>. This is for the benefit of the other routers
        receiving the prefixes and context information. The routers also
        respond to RSs by unicasting RA messages. In both
        cases, the above constraint of keeping the ABRO together with 'its'
        prefixes and context information applies.</t>

        <t>When a router receives new information from a 6LBR, that is,
        either it hears from a new 6LBR (a new 6LBR address in the ABRO) or
        the ABRO version number of an existing 6LBR has increased, then it
        is useful to send out a few triggered updates. The recommendation is
        to behave the same as when an interface has become an advertising
        interface as described in <xref target="RFC4861"/>, that is, send
        up to three RA
        messages. This ensures rapid propagation of new information to all
        the 6LRs.</t>

        </section>
        </section>

        <section anchor='multihop_dad' title="Multihop Duplicate Address Detection">

        <t>The ARO can be used, in addition to registering an address in a
        6LR, to have the 6LR verify that the address isn't used by some
        other host known to the 6LR. However, that isn't sufficient in a
        route-over topology (or in a LoWPAN with multiple 6LBRs), since some
        host attached to another 6LR could be using the same address. There
        might be different ways for the 6LRs to coordinate such duplicate
        address detection in the future, or addresses could be assigned
        using a DHCPv6 server that verifies uniqueness as part of the
        assignment. </t>

        <t>This specification offers a substitutable simple technique for
        6LRs and 6LBRs to perform DAD that reuses
        the information from the ARO in the DAR and DAC
        messages. This technique is not needed when the Interface ID in the
        address is based on an EUI-64, since those are assumed to be
        globally unique. The technique assumes that either the 6LRs register
        with all the 6LBRs or the network uses some out-of-scope
        mechanism to keep the DAD tables in the 6LBRs synchronized.</t>

        <t>The multihop DAD mechanism is used synchronously the first time
        an address is registered with a particular 6LR. That is, the ARO
        is not returned to the host until multihop DAD has been
        completed against the 6LBRs. For existing registrations in the 6LR,
        multihop DAD needs to be repeated against the 6LBRs to ensure
        that the entry for the address in the 6LBRs does not time out, but
        that can be done asynchronously with the response to the hosts. One
        method to achieve this is to track how much is left of the lifetime
        the 6LR registered with the 6LBRs and to re-register with the 6LBR
        when this lifetime is about to run out.</t>

        <t>For synchronous multihop DAD, the 6LR performs some additional
        checks to ensure that it has an NCE it can use to
        respond to the host when it receives a response from a 6LBR. This
        consists of checking for an already existing (Tentative or
        Registered) NCE for the Registered Address with a
        different EUI-64. If such a Registered NCE exists, then the 6LR
        SHOULD respond that the address is a duplicate. If such a Tentative
        NCE exists, then the 6LR SHOULD silently ignore the ARO, thereby
        relying on the host retransmitting the ARO. This is needed to handle
        the case when multiple hosts try to register the same IPv6 address
        at the same time. If no NCE exists, then the 6LR
        MUST create a Tentative NCE with the EUI-64 and the
        SLLAO. This entry will be used to send the response to the
        host when the 6LBR responds positively.</t>

        <t>When a 6LR receives an NS containing an ARO
        with a non-zero Registration Lifetime and it has
        no existing Registered NCE, then with this
        mechanism the 6LR will invoke synchronous multihop DAD.</t>

        <t>The 6LR will unicast a DAR message to one
        or more 6LBRs, where the DAR contains the host's address in the
        Registered Address field. The DAR will be forwarded by 6LRs until it
        reaches the 6LBR; hence, its IPv6 Hop Limit field will not be 255
        when received by the 6LBR. The 6LBR will respond with a DAC message,
        which will have a hop limit less than 255 when it reaches the 6LR.</t>

        <t>When the 6LR receives the DAC from the 6LBR, it will look for a
        matching (same IP address and EUI-64) (Tentative or Registered)
        NCE. If no such entry is found, then the DAC is
        silently ignored. If an entry is found and the DAC had Status=0, then
        the 6LR will mark the Tentative NCE as Registered.
        In all cases, when an entry is found, then the 6LR will respond to the
        host with an NA, copying the Status and EUI-64 fields from the DAC
        to an ARO in the NA. In case the status is an error, then the
        destination IP address of the NA is derived from the EUI-64 field of
        the DAC.</t>

        <t>A Tentative NCE SHOULD be timed out
        TENTATIVE_NCE_LIFETIME seconds after it was created in order to
        allow for another host to attempt to register the IPv6 address.</t>

        <section anchor='DAR-validation' title="Message Validation for DAR and DAC">

        <t>A node MUST silently discard any received DAR and DAC messages for
        which at least one of the following validity checks is not satisfied: 

        <list style="symbols">
        <t>If the message includes an IP Authentication Header, the message
        authenticates correctly.</t>
        <t>ICMP Checksum is valid.</t>
        <t>ICMP Code is 0.</t>
        <t>ICMP Length (derived from the IP length) is 32 or more bytes.</t>
        <t>The Registered Address is not a multicast address.</t>
        <t>All included options have a length that is greater than zero.</t>
        <t>The IP source address is not the unspecified address, nor is it a
        multicast address.</t>
        </list>
        </t>

        <t>The contents of the Reserved field and of any unrecognized
        options MUST be ignored.  Future backward-compatible changes to
        the protocol may specify the contents of the Reserved field or add
        new options; backward-incompatible changes may use different Code
        values. </t>

        <t>Note that due to the forwarding of the DAR and DAC messages
        between the 6LR and 6LBR, there is no hop-limit check on receipt for
        these ICMPv6 message types. </t>

        </section>

        <section anchor="concept_data_struct" title="Conceptual Data Structures">

        <t>A 6LBR implementing multihop DAD needs to maintain
        some state separate from the Neighbor Cache. We call this conceptual
        data structure the DAD table. It is indexed by the IPv6 address --
        the Registered Address in the DAR -- and contains the EUI-64 and the
        Registration Lifetime of the host that is using that address.</t>

        </section>

        <section title="6LR Sending a Duplicate Address Request">

        <t>When a 6LR that implements multihop DAD receives an
        NS from a host, and subject to the above checks, the 6LR forms and
        sends a DAR to at least one 6LBR. The DAR contains the following
        information:

        <list style="symbols">
        <t>In the IPv6 source address, a global address of the 6LR.</t>
        <t>In the IPv6 destination address, the address of the 6LBR.</t>
        <t>In the IPv6 hop limit, MULTIHOP_HOPLIMIT.</t>
        <t>The Status field MUST be set to zero.</t>
        <t>The EUI-64 and Registration Lifetime are copied from the ARO
        received from the host.</t>
        <t>The Registered Address set to the IPv6 address of the host,
        that is, the sender of the triggering NS.</t>
        </list>
        </t>

        <t>When a 6LR receives an NS from a host with a zero Registration
        Lifetime, then, in addition to removing the NCE for
        the host as specified in <xref target="router"/>, a DAR is sent to
        the 6LBRs as above.</t>

        <t>A router MUST NOT modify the Neighbor Cache as a result of
        receiving a DAR.</t>

        </section>

        <section title="6LBR Receiving a Duplicate Address Request">

        <t>When a 6LBR that implements the substitutable multihop DAD receives
        a DAR from a 6LR, it performs the message validation specified in
        <xref target="DAR-validation"/>. If the DAR is valid, the 6LBR
        proceeds to look for the Registration Address in the DAD table. If
        an entry is found and the recorded EUI-64 is different than the
        EUI-64 in the DAR, then it returns a DAC NA with the Status set to 1
        ('Duplicate Address'). Otherwise, it returns a DAC with Status set to
        zero and updates the lifetime.</t>

        <t>If no entry is found in the DAD table and the Registration
        Lifetime is non-zero, then an entry is created and the EUI-64 and
        Registered Address from the DAR are stored in that entry.</t>

        <t>If an entry is found in the DAD table, the EUI-64 matches, and
        the Registration Lifetime is zero, then the entry is deleted from the
        table.</t>

        <t>In both of the above cases, the 6LBR forms a DAC with the
        information copied from the DAR and the Status field is set to zero.
        The DAC is sent back to the 6LR, i.e., back to the source of the DAR.
        The IPv6 hop limit is set to MULTIHOP_HOPLIMIT.</t>

        </section>

        <section title="Processing a Duplicate Address Confirmation">

        <t>When a 6LR implementing multihop DAD receives a
        DAC message, then it first validates the message per <xref
        target="DAR-validation"/>. For a valid DAC, if there is no Tentative
        NCE matching the Registered Address and EUI-64,
        then the DAC is silently ignored. Otherwise, the information in the
        DAC and in the Tentative NCE is used to form an NA
        to send to the host. The Status code is copied from the DAC to the
        ARO that is sent to the host. In the case where the DAC indicates
        an error (the Status is non-zero), the NA is returned to the host as
        described in <xref target="errors"/>, and the Tentative NCE
        for the Registered Address is removed. Otherwise, it is
        made into a Registered NCE.</t>

        <t>A router MUST NOT modify the Neighbor Cache as a result of
        receiving a DAC, unless there is a Tentative NCE matching the IPv6
        address and EUI-64.</t>

        </section>

        <section title="Recovering from Failures">

        <t>If there is no response from a 6LBR after RETRANS_TIMER <xref
        target="RFC4861"/>, then the 6LR would retransmit the DAR to the 6LBR
        up to MAX_UNICAST_SOLICIT <xref target="RFC4861"/> times. After this,
        the 6LR SHOULD respond to the host with an ARO Status of zero.</t>

        </section>
        </section>
        </section>

      <!-- **************************************************************** -->

        <section anchor='constants' title="Protocol Constants">

        <t> This section defines the relevant protocol constants used in
        this document based on a subset of <xref target="RFC4861"/>
        constants. &nbsp;"*" indicates constants modified from <xref
        target="RFC4861"/>, and "+" indicates new constants. </t>
        
        <t> Additional protocol constants are defined in <xref
        target="message_options"/>. </t>

        <t>6LBR Constants:
               <list style="hanging" hangIndent="40">
                       <t hangText="MIN_CONTEXT_CHANGE_DELAY+">300 seconds</t>
               </list>
        </t>

        <t>6LR Constants:
               <list style="hanging" hangIndent="40">
                       <t hangText="MAX_RTR_ADVERTISEMENTS">3 transmissions</t>
                       <t hangText="MIN_DELAY_BETWEEN_RAS*">10 seconds</t>
                       <t hangText="MAX_RA_DELAY_TIME*">2 seconds</t>
                       <t hangText="TENTATIVE_NCE_LIFETIME+">20 seconds</t>
               </list>
        </t>
        
        <t>Router Constants:
               <list style="hanging" hangIndent="40">
                       <t hangText="MULTIHOP_HOPLIMIT+">64</t>
               </list>
        </t>

        <t>Host Constants:
               <list style="hanging" hangIndent="40">
                       <t hangText="RTR_SOLICITATION_INTERVAL*">10 seconds</t>
                       <t hangText="MAX_RTR_SOLICITATIONS">3 transmissions</t>
                       <t hangText="MAX_RTR_SOLICITATION_INTERVAL+">60 seconds</t>
               </list>
        </t>

        </section>


      <!-- **************************************************************** -->

        <section anchor='examples' title="Examples">

        <section anchor='examples_msg' title="Message Examples">

<figure anchor='figmessrsra'
 title="Basic Router Solicitation/Router Advertisement Exchange between a Node
and a 6LR or 6LBR">
<artwork><![CDATA[
STEP

   6LN                                                        6LR

    |                                                          |

1.  |       ---------- Router Solicitation -------->           |

    |                       [SLLAO]                            |

    |                                                          |

2.  |       <-------- Router Advertisement ---------           |

    |              [PIO + 6CO + ABRO + SLLAO]                  |

]]></artwork>
</figure>

<figure anchor='figmessbasic'
 title="Neighbor Discovery Address Registration">
<artwork><![CDATA[
   6LN                                                        6LR

    |                                                          |

1.  |       ------- NS with Address Registration ------>       |

    |                     [ARO + SLLAO]                        |

    |                                                          |

2.  |       <----- NA with Address Registration --------       |

    |                   [ARO with Status]                      |

 ]]></artwork>
</figure>


<figure anchor='figmessmdad'
 title="Neighbor Discovery Address Registration with Multihop DAD">
<artwork><![CDATA[
   6LN                           6LR                          6LBR

    |                             |                             |

1.  | --- NS with Address Reg --> |                             |

    |      [ARO + SLLAO]          |                             |

    |                             |                             |

2.  |                             | ----------- DAR ----------> |

    |                             |                             |

3.  |                             | <---------- DAC ----------- |

    |                             |                             |

4.  | <-- NA with Address Reg --- |                             |

    |      [ARO with Status]      |

]]></artwork>
</figure>
        </section>

        <section anchor='examples_boot' title="Host Bootstrapping Example">

        <t>The following example describes the address bootstrapping
        scenarios using the improved ND mechanisms specified in this
        document. It is assumed that the 6LN first performs a sequence of
        operations in order to get secure access at the link layer of the
        LoWPAN and obtain a key for link-layer security. The methods of how
        to establish link-layer security are out of scope of this
        document. In this example, an IEEE 802.15.4 6LN forms a 16-bit
        short IPv6 address without using DHCPv6 (i.e., the M flag is not set
        in the RAs).</t>

        <t><list style="numbers">
        <t>After obtaining link-layer security, a 6LN assigns a
        link-local IPv6 address to itself. A link-local IPv6 address is
        configured based on the 6LN's EUI-64 link-layer address formed as
        per <xref target="RFC4944"/>.</t>

        <t>Next, the 6LN determines one or more default routers in the
        network by sending an RS to the all-routers multicast address with
        the SLLAO set to its EUI-64 link-local address. If the 6LN was
        able to obtain the link-layer address of a router through its
        link-layer operations, then the 6LN may form a link-local destination
        IPv6 address for the router and send it a unicast RS. The 6LR
        responds with a unicast RA to the IP source address using the SLLAO
        from the RS (it may have created a Tentative NCE). See <xref
        target="figmessrsra"/>. </t>

        <t>In order to communicate more than one IP hop away, the 6LN
        configures a global IPv6 address. In order to save overhead, this
        6LN wishes to configure its IPv6 address based on a 16-bit short
        address as per <xref target="RFC4944"/>. As the network is unmanaged
        (M&nbsp;flag not set in the RA), the 6LN randomly chooses a 16-bit
        link-layer address and forms a Tentative IPv6 address from it. </t>

        <t>Next, the 6LN registers that address with one or more of its
        default routers by sending a unicast NS message with an ARO
        containing its Tentative global IPv6 address to register, the
        Registration Lifetime, and its EUI-64. An SLLAO is also
        included with the link-layer address corresponding to the address
        being registered. If a successful (Status 0) NA message is received,
        the address can then be used, and the 6LN assumes that it has been
        successfully checked for duplicates. If a duplicate address
        (Status&nbsp;1) NA message is received, the 6LN then removes the
        temporary IPv6
        address and 16-bit link-layer address and goes back to step 3. If a
        Neighbor Cache Full (Status 2) message is received, the 6LN attempts
        to register with another default router or, if none, goes back to
        step 2. See <xref target="figmessbasic"/>. Note that an NA message
        returning an error would be sent back to the link-local EUI-64-based
        IPv6 address of the 6LN instead of the 16-bit (duplicate) address.
        </t>

        <t>The 6LN now performs maintenance by sending a new NS address
        registration before the lifetime expires. </t>
        </list></t>

        <t>If multihop DAD and multihop prefix and context distribution are
        used, the effect of the 6LRs and hosts following the above
        bootstrapping process is a "wavefront" of 6LRs and hosts being
        configured, spreading outward from the 6LBRs:
        First, the hosts and 6LRs that can directly reach a 6LBR would
        receive one or more RAs and then configure and register their IPv6
        addresses. Once that is done, they would enable the routing protocol
        and start sending out RAs.
        That would result in a new set of 6LRs and hosts to receive
        responses to their RSs, form and register their
        addresses, etc. That repeats until all of the 6LRs and hosts have
        been configured.</t>

<section anchor="examples_annotation" title="Host Bootstrapping Messages">

  <t>This section provides specific message examples related to the
  bootstrapping process described above.  When discussing messages, the
  following notation is used:</t>

  <t><list style="hanging">
  <t hangText="LL64:">Link-local address based on the EUI-64,
  which is also the 802.15.4 long address.</t>

  <t hangText="GP16:">Global address based on the 802.15.4 short address.  This
  address may not be unique.</t>

  <t hangText="GP64:">Global addresses derived from the EUI-64 address as
  specified in <xref target="RFC4944"/>.</t>

  <t hangText="MAC64:">EUI-64 address used as the link-layer address.</t>

  <t hangText="MAC16:">IEEE 802.15.4 16-bit short address.</t></list></t>

  <t>Note that some implementations may use LL64 and GP16 style
  addresses instead of LL64 and GP64. In the following, we will
  show an example message flow as to how a node uses LL64 to register a
  GP16 address for multihop DAD verification.</t>

<figure anchor='figmessexamples'
 title="Detailed Message Address Examples">
<artwork><![CDATA[

 6LN-----RS-------->6LR
  Src= LL64 (6LN)
  Dst= all-router-link-scope-multicast
  SLLAO= MAC64 (6LN)

 6LR------RA--------->6LN
  Src= LL64 (6LR)
  Dst= LL64 (6LN)

Note: Source address of RA must be a link-local
address (Section 4.2 of RFC 4861).

 6LN-------NS Reg------>6LR
  Src= GP16 (6LN)
  Dst= LL64 (6LR)
  ARO
  SLLAO= MAC16 (6LN)

 6LR---------DAR----->6LBR
  Src= GP64 or GP16 (6LR)
  Dst= GP64 or GP16 (6LBR)
  Registered Address= GP16 (6LN) and EUI-64 (6LN)

 6LBR-------DAC--------->6LR
  Src= GP64 or GP16 (6LBR)
  Dst= GP64 or GP16 (6LR)
  Copy of information from DAR

 If Status is a success:

 6LR ---------NA-Reg------->6LN
  Src= LL64 (6LR)
  Dst= GP16 (6LN)
  ARO with Status = 0

 If Status is not a success:

 6LR ---------NA-Reg-------->6LN
  Src= LL64 (6LR)
  Dst= LL64 (6LN) --> Derived from the EUI-64 of ARO
  ARO with Status > 0

]]></artwork>
</figure>

</section>
</section>

        <section anchor='examples_router' title="Router Interaction Example">

        <t>In the route-over topology, when a routing protocol is run across
        6LRs, the bootstrapping and Neighbor Cache management are handled a
        little differently. The description in this paragraph provides only
        a guideline for an implementation.</t>

        <t>At the initialization of a 6LR, it may choose to bootstrap as a
        host with the help of a parent 6LR if the substitutable multihop DAD is
        performed with the 6LBR. The Neighbor Cache management of a router
        and address resolution among the neighboring routers are described
        in Sections <xref target="router_cache" format="counter"/> and <xref
        target="router_resolution" format="counter"/>, respectively.
        In this example, we
        assume that the neighboring 6LoWPAN link is secure.</t>

        <section title="Bootstrapping a Router">

        <t>In this scenario, the bootstrapping 6LR, 'R1', is multiple hops
        away from the 6LBR and surrounded by other 6LR neighbors. Initially,
        R1 behaves as a host. It sends a multicast RS and receives an RA from
        one or more neighboring 6LRs. R1 picks one 6LR as its temporary
        default router and performs address resolution via this default
        router. Note that if multihop DAD is not required (e.g., in a managed
        network or using EUI-64-based addresses), then it does not need to
        pick a temporary default router; however, it may still want to send
        the initial RS message if it wants to autoconfigure its address with
        the global prefix disseminated by the 6LBR.</t>

        <t>Based on the information received in the RAs, R1 updates its
        cache with entries for all the neighboring 6LRs. Upon completion of
        the address registration, the bootstrapping router deletes the
        temporary entry of the default router, and the routing protocol is
        started.</t>

        <t>Also note that R1 may refresh its multihop DAD registration
        directly with the 6LBR (using the next-hop neighboring 6LR
        determined by the routing protocol for reaching the 6LBR).</t>

        </section>

        <section title="Updating the Neighbor Cache">

        <t>In this example, there are three 6LRs: R1, R2, and R3.
        Initially, when R2 boots, it sees only R1, and accordingly
        R2 creates an NCE for R1. Now assume that R2 receives a valid
        routing update from router R3. R2 does not have any NCE for R3. If
        the implementation of R2 supports detecting link-layer addresses from
        the routing information packets, then it directly updates its
        Neighbor Cache using that link-layer information. If this is not
        possible, then R2 should perform multicast NS with the source set with
        its link-local or global address, depending on the scope of the
        source IP address received in the routing update packet. The target
        address of the NS message is the source IPv6 address of the received
        routing update packet. The format of the NS message is as described
        in Section 4.3 of <xref target="RFC4861"/>.</t>

        <t>More generally, any 6LR that receives a valid route update from a
        neighboring router for which it does not have any NCE is required
        to update its Neighbor Cache as described above.</t>

        <t>The router (6LR and 6LBR) IP addresses learned via ND
        are not redistributed to the routing protocol.</t>

        </section>
        </section>
        </section>

      <!-- **************************************************************** -->

        <section title="Security Considerations">

        <t> The security considerations of IPv6 ND <xref
        target="RFC4861"/> and address autoconfiguration <xref target="RFC4862"/>
        apply. Additional considerations can be found in <xref target="RFC3756"/>.
        </t>

        <t>There is a slight modification to those considerations, due to the
fact that in this specification the M flag in the RAs disables the use of
stateless address autoconfiguration for addresses not
derived from EUI-64. Thus, a rogue router on the link can force the use
of only DHCP for short addresses, whereas in <xref target="RFC4861"/> and <xref
target="RFC4862"/> the rogue router could only cause the addition of DHCP and
not disable stateless address autoconfiguration for short addresses.</t>

        <t> This specification assumes that the link layer is sufficiently
        protected -- for instance, by using MAC-sublayer cryptography. 
        Thus, its threat model is no different from that of IPv6 ND 
        <xref target="RFC4861"/>. The first trust model listed in Section 3
        of <xref target="RFC3756"/> applies here. However, any future 6LoWPAN
        security protocol that applies to ND for the 6LoWPAN protocol is
        out of scope of this document. </t>

        <t>The multihop DAD mechanisms rely on DAR and DAC messages that are
        forwarded by 6LRs, and as a result the hop_limit=255 check on the
        receiver does not apply to those messages. This implies that any
        node on the Internet could successfully send such messages. We avoid
        any additional security issues due to this by requiring that the
        routers never modify the NCE due to such messages,
        and that they discard them unless they are received on an interface
        that has been explicitly configured to use these optimizations.</t>

        <t>In some future deployments, one might want to use SEcure Neighbor
        Discovery (SEND) <xref target="RFC3971"/> <xref target="RFC3972"/>.
        This is possible with the ARO as sent between hosts
        and routers, since the address that is being registered is the IPv6
        source address of the NS and SEND verifies the
        IPv6 source address of the packet. Applying SEND to the
        router-to-router communication in this document is out of scope.</t>

        </section>

      <!-- **************************************************************** -->

        <section anchor='iana' title="IANA Considerations">
    
    <t> This document registers three new ND option types
    under the subregistry "IPv6 Neighbor Discovery Option Formats":</t>
<?rfc subcompact="yes" ?>
<vspace blankLines="1" />
        <list style="symbols">
                <t>Address Registration Option (33)</t>
                <t>6LoWPAN Context Option (34)</t>
                <t>Authoritative Border Router Option (35)</t>
        </list>
<?rfc subcompact="no" ?>
   

    <t> The document registers two new ICMPv6 "type" numbers under the subregistry
    "ICMPv6 &quot;type&quot; Numbers":</t>

<?rfc subcompact="yes" ?>
<vspace blankLines="1" />
        <list style="symbols">
                <t>Duplicate Address Request (157)</t>
                <t>Duplicate Address Confirmation (158)</t>
        </list>
<?rfc subcompact="no" ?>
   

        <t>IANA has also created a new subregistry for
        the Status values of the Address Registration Option, under the
        ICMPv6 parameters registry.</t>

        <t>Address Registration Option Status Values registry:</t>
<?rfc subcompact="yes" ?>
        <t><list style='symbols'>
                  <t>Possible values are 8-bit unsigned integers (0..255).</t>
                  <t>Registration procedure is "Standards Action" <xref 
                  target="RFC5226"/>.</t>
                  <t>Initial allocation is as indicated in <xref 
                  target="status-codes-iana"/>:</t>
        </list></t>
<?rfc subcompact="no" ?>

<texttable anchor='status-codes-iana'> <!--update status-codes in sync-->

<ttcol align='center'> Status </ttcol>
<ttcol align='center'> Description</ttcol>

<c>0</c> <c>Success</c>
<c>1</c> <c>Duplicate Address</c>
<c>2</c> <c>Neighbor Cache Full</c>
<c>3-255</c> <c>Allocated using Standards Action <xref target="RFC5226"/></c>

</texttable>

        </section>

        <section title="Interaction with Other Neighbor Discovery Extensions">
        
          <t>There are two classes of ND extensions that interact
          with this specification in different ways.</t>

          <t>One class encompasses extensions to the DAD
          mechanisms in <xref target="RFC4861"/> and <xref target="RFC4862"/>. 
          An example of this is Optimistic DAD <xref target="RFC4429"/>. 
          Such extensions do not apply when this specification is being used,
          since it uses ARO for DAD (which is neither optimistic nor
          pessimistic -- always one round trip to the router to check DAD).</t>

          <t>All other (non-DAD) ND extensions, be they path
          selection types like default router preferences <xref target="RFC4191"/>,
          configuration types like DNS configuration <xref target="RFC6106"/>, or 
          other types like Detecting Network Attachment <xref target="RFC6059"/>, are completely orthogonal
          to this specification and will work as is.</t>
        </section>

        <section anchor="guidelines-new-features" title="Guidelines for New Features">

        <t> This section discusses guidelines of new protocol features defined in
        this document. It also sets some expectations for implementation and
        deployment of these features.  This section is informative in nature:
        it does not override the detailed specifications of the previous
        sections but summarizes them and presents them in a compact form,
        to be used as checklists. The checklists act as guidelines to indicate
        the possible importance of a feature in terms of a deployment as per
        information available as of the writing of the document. 
        Note that in some cases the deployment is 'SHOULD' where the
        implementation is a 'MUST'. This is due to the presence of
        substitutable features; the deployment may use alternative methods for
        those. Therefore, implementing a configuration knob is recommended for
        the substitutable features. The lists emphasize conciseness over
        completeness. </t>

<texttable  anchor='guide1' title="Guideline for 6LoWPAN-ND Features for Hosts">
      <ttcol align='left'>Section</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Deploy</ttcol>
      <ttcol align='left'>Implement</ttcol>
      <c><xref target="Optimization" format="counter"/></c><c>Host-initiated RA</c><c>MUST</c><c>MUST</c>
      <c><xref target="Addr-assign" format="counter"/></c><c>EUI-64-based IPv6 address</c><c>MUST</c><c>MUST</c>
      <c>&#160;</c><c>16-bit MAC-based address</c><c>MAY</c><c>SHOULD</c>
      <c>&#160;</c><c>Other non-unique addresses</c><c>MAY</c><c>MAY</c>
      <c><xref target="overview_hr" format="counter"/></c><c>Host-initiated RS</c><c>MUST</c><c>MUST</c>
      <c>&#160;</c><c>ABRO processing</c><c>SHOULD</c><c>MUST</c>
      <c><xref target="ARO" format="counter"/></c><c>Registration with ARO</c><c>MUST</c><c>MUST</c>
      <c>
        <xref target="s6CO" format="counter"/>,
        <xref target="ra_proc" format="counter"/></c><c>6CO</c><c>SHOULD</c><c>SHOULD</c>
      <c><xref target="host_interface" format="counter"/></c><c>Joining solicited-node multicast</c><c>N/A</c><c>N/A</c>
      <c>&#160;</c><c>Joining all-nodes multicast</c><c>MUST</c><c>MUST</c>
      <c>&#160;</c><c>Using link-layer indication for NUD</c><c>MAY</c><c>MAY</c>
      <c><xref target="host_registration" format="counter"/></c><c>6LoWPAN-ND NUD</c><c>MUST</c><c>MUST</c>
      <c><xref target="be_wakeup" format="counter"/></c><c>Behavior on wakeup</c><c>SHOULD</c><c>SHOULD</c>
</texttable>

<texttable  anchor='guide2' title="Guideline for 6LR Features in 6LoWPAN-ND">
      <ttcol align='left'>Section</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Deploy</ttcol>
      <ttcol align='left'>Implement</ttcol>
      <c><xref target="Optimization" format="counter"/></c><c>Periodic RA</c><c>SHOULD&#160;NOT</c><c>SHOULD&#160;NOT</c>
      <c><xref target="Addr-assign" format="counter"/></c><c>Address assignment during startup</c><c>SHOULD</c><c>MUST</c>
      <c><xref target="overview_hr" format="counter"/></c><c>Supporting EUI-64-based MAC hosts</c><c>MUST</c><c>MUST</c>
      <c>&#160;</c><c>Supporting 16-bit MAC hosts</c><c>MAY</c><c>SHOULD</c>
      <c>
        <xref target="overview_rr" format="counter"/>,
        <xref target="ABRO" format="counter"/>,
        <xref target="r_ra_proc" format="counter"/>,
        <xref target="store_info" format="counter"/></c><c>ABRO processing/sending</c><c>SHOULD</c><c>MUST</c>
      <c><xref target="multihop_dist" format="counter"/></c><c>Multihop prefix storing and redistribution</c><c>SHOULD</c><c>MUST</c>
      <c><xref target="nce_management" format="counter"/></c><c>Tentative NCE</c><c>MUST</c><c>MUST</c>
      <c><xref target="multihop_dad" format="counter"/></c><c>Multihop DAD</c><c>SHOULD</c><c>MUST</c>
      <c>
        <xref target="ARO" format="counter"/>,
        <xref target="router_ns" format="counter"/>,
        <xref target="duplicate" format="counter"/> -
        <xref target="router_resolution" format="counter"/></c><c>ARO support</c><c>MUST</c><c>MUST</c>
      <c><xref target="s6CO" format="counter"/></c><c>6CO</c><c>SHOULD</c><c>SHOULD</c>
      <c><xref target="rs_proc" format="counter"/></c><c>Process RS/ABRO</c><c>MUST</c><c>MUST</c>
</texttable>

<texttable anchor='guide3'  title="Guideline for 6LBR Features in 6LoWPAN-ND">
      <ttcol align='left'>Section</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Deploy</ttcol>
      <ttcol align='left'>Implement</ttcol>
      <c><xref target="Optimization" format="counter"/></c><c>Periodic RA</c><c>SHOULD&#160;NOT</c><c>SHOULD&#160;NOT</c>
      <c><xref target="Addr-assign" format="counter"/></c><c>Address autoconf on router interface</c><c>MUST&#160;NOT</c><c>MUST&#160;NOT</c>
      <c><xref target="overview_hr" format="counter"/></c><c>EUI-64 MAC support on 6LoWPAN interface</c><c>MUST</c><c>MUST</c>
      <c>
        <xref target="multihop_dist" format="counter"/> -
        <xref target="br_ra" format="counter"/>,
        <xref target="mh_ra" format="counter"/></c><c>Multihop prefix distribution</c><c>SHOULD</c><c>MUST</c>
      <c><xref target="multihop_dad" format="counter"/></c><c>Multihop DAD</c><c>SHOULD</c><c>MUST</c>
</texttable>

        </section>

<!--==================================================-->
<!--        SECTION: ACKNOWLEDGMENTS                  -->
<!--==================================================-->

        <section title="Acknowledgments">

        <t>The authors thank Pascal Thubert, Jonathan Hui,
        Richard Kelsey, Geoff Mulligan, Julien Abeille, Alexandru Petrescu,
        Peter Siklosi, Pieter De Mil, Fred Baker, Anthony Schoofs, Phil
        Roberts, Daniel Gavelle, Joseph Reddy, Robert Cragie, Mathilde
        Durvy, Colin O'Flynn, Dario Tedeschi, Esko Dijk, and Joakim Eriksson
        for useful discussions and comments that have helped shape and
        improve this document.</t>

        <t> Additionally, the authors would like to recognize Pascal Thubert
        for contributing the original registration idea and for extensive
        contributions to earlier versions of the document, Jonathan Hui for
        original ideas on prefix/context distribution and extensive
        contributions to earlier versions of the document, Colin O'Flynn for
        useful "Error-to" suggestions (<xref target="errors"/>) and for
        contributions to the Examples section, Geoff Mulligan for suggesting
        the use of address registration as part of existing IPv6 ND messages,
        and Mathilde Durvy for helping to clarify router interaction. </t>
        </section>

    </middle>

    <back>

  <?rfc rfcedstyle="no"?>
    <references title='Normative References'>

       &RFC2119;

       &RFC5226;

       &RFC2460;

       &RFC2491;

       &RFC4191;

       &RFC4193;
       
       &RFC4291;

       &RFC4443;

       &RFC4861;

       &RFC4862;

       &RFC4944;

       &RFC6282;

<reference anchor='ETHERNET' target="http://standards.ieee.org/getieee802/download/802.3-2008_section1.pdf">
<front>
<title>IEEE Standard for Information technology - Telecommunications and
information exchange between systems - Local and metropolitan area networks -
Specific requirements - Part 3: Carrier Sense Multiple Access with Collision Detection (CSMA/CD) Access Method and Physical Layer Specifications</title>
<author>
<organization></organization>
</author>
<date month="December" year="2008" />
</front>
<seriesInfo name="IEEE" value="Std 802.3-2008" />
</reference>

    </references>
    <references title='Informative References'>

       <reference anchor="EUI64" target="http://standards.ieee.org/regauth/oui/tutorials/EUI64.html">
                          <front>
                    <title>Guidelines for 64-bit Global Identifier (EUI&nbhy;64(TM)) Registration Authority</title>
<author>
  <organization>IEEE
  </organization>
</author>
<date></date>

                          </front>
                </reference>

       &RFC3315;

       &RFC3633;

       &RFC3756;

       &RFC3971;

       &RFC3972;

       &RFC4429;

       &RFC4919;

       &RFC4941;
       
       &RFC6106;

       &RFC5889;

       &RFC6059;

    </references>

  <?rfc rfcedstyle="yes"?>
    </back>

</rfc>
