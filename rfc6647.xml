<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<rfc
        number="6647"
	category="std"
        submissionType="IETF" 
        consensus="yes"
	ipr="trust200902">


	<?rfc toc="yes"?>
	<?rfc tocdepth="2"?>
	<?rfc tocindent="yes"?>
	<?rfc symrefs="yes"?>
	<?rfc sortrefs="yes" ?>
        <?rfc rfcedstyle="yes"?>
        <?rfc compact="yes"?>  
        <?rfc subcompact="no"?>

	<front>
		<title abbrev="Greylisting">
			Email Greylisting: An Applicability Statement
			for SMTP
		</title>

		<author fullname="Murray S. Kucherawy"
			initials="M. S." surname="Kucherawy">
			<organization>Cloudmark</organization>

			<address>
				<postal>
					<street>128 King St., 2nd Floor</street>
					<city>San Francisco</city>
					<region>CA</region>
					<code>94107</code>
					<country>US</country>
				</postal>
	
				<phone>+1 415 946 3800</phone>
				<email>superuser@gmail.com</email>
			</address>
		</author>



		<author fullname="Dave Crocker"
		        initials="D." surname="Crocker">
			<organization>
				Brandenburg InternetWorking
			</organization>

			<address>
				<postal>
					<street>675 Spruce Dr.</street>
					<city>Sunnyvale</city>
                                        <region>CA</region>	
    				        <country>USA</country>
	 				<code>94086</code>
				</postal>

				<phone>+1.408.246.8253</phone>
				<email>dcrocker@bbiw.net</email>
				<uri>http://bbiw.net</uri>
			</address>
		</author>

		<date month="June" year="2012"></date>

		<area>Applications</area>
		<workgroup>Individual submission</workgroup>
		<keyword>Email</keyword>
		<keyword>Greylisting</keyword>
		<keyword>Spam</keyword>

		<abstract>
			<t> This document describes the art of email
			    greylisting, the practice of providing temporarily
			    degraded service to unknown email clients as an
			    anti-abuse mechanism. </t>

			<t> Greylisting is an established mechanism deemed
			    essential to the repertoire of current
			    anti-abuse email filtering systems. </t>
		</abstract>
	</front>

	<middle>
		<section anchor="intro" title="Introduction">
	<t> Preferred techniques for handling email abuse explicitly
		identify good actors and bad actors, giving each significantly
		different service quality. In some cases, an actor does not have a
		known reputation; this can justify providing degraded service,
		until there is a basis for providing better service. This latter
		approach is known as "greylisting". Broadly, the term refers to any
		degradation of service for an unknown or suspect source, over a
		period of time (typically measured in minutes or a small number
		of hours). The narrow use of the term refers to generation
		of an SMTP temporary failure reply code for traffic from such
		sources. There are diverse implementations of this basic
		concept and predictably, therefore, some blurred terminology. </t>

	<t> Absent a perfect abuse-detection mechanism that incurs no cost,
	    the current requirement is for an array of techniques to be used
	    by each filtering system.  They range in cost, effectiveness,
	    and types of abuse techniques they target. </t>

	<t> Greylisting happens to be a technique that is cheap and early
	    (in terms of its application in the SMTP sequence) and surprisingly
	    remains useful.  Some spamware does indeed route around this
	    technique, but much does not. </t>

	<t> The firehose of spam over the Internet represents a wide range
	    of sophistication.  Greylisting is useful for removing a large
	    amount of simplistic-but-significant traffic. </t>


	<t> This memo documents common greylisting techniques and discusses
		their benefits and costs. It also defines terminology to enable
		clear distinction and discussion of these techniques. </t>

	<t> There is some confusion in the industry that conflates greylisting
		with an SMTP temporary failure for any reason.  The purpose
				of this memo is also to dispel such confusion. </t>
			<section
				anchor="background"
				title="Background">
				<t> For many years, large amounts of spam have been sent through
					purpose-built software, or "spamware", that supports only a
					constrained version of SMTP. In particular, such software
					does not perform retransmission attempts after receiving an
					SMTP temporary failure. That is, if the spamware cannot
					deliver a message, it just goes on to the next address in
					its list since, in spamming, volume counts for far more than
					reliability. Greylisting exploits this by rejecting mail
					from unfamiliar sources with a "transient (soft) fail" (4xx) <xref
						target="SMTP"></xref> error code.
					Another application of greylisting is
					to delay mail from newly seen IP addresses on the theory
					that, if it's a spam source, then by the time it retries, it
					will appear in a list of sources to be filtered, and the
					mail will not be accepted. </t>

				<t> Early references for greylisting descriptions and implementations
					can be found at <xref target="SAUCE"/> and <xref target="PUREMAGIC"/>. </t>
			</section>
			<section
				anchor="definitions"
				title="Definitions">
				<section
					anchor="keywords"
					title="Keywords">
					<t> The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
						"SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",
						"MAY", and "OPTIONAL" in this document are to be
						interpreted as described in <xref
							target="KEYWORDS"></xref>. </t>
				</section>

				<section
					anchor="arch"
					title="Email Architecture Terminology">
					<t> Readers need to be familiar with the material and
						terminology discussed in <xref
							target="MAIL"></xref>, <xref
							target="EMAIL-ARCH"></xref>,
and <xref target="SMTP"/>. </t>
				</section>
			</section>
		</section>

		<section
			title="Types of Greylisting">

			<t>Greylisting is primarily performed at some phase during an SMTP
				session. A set of attributes about the client-side SMTP server
				are used for assessing whether to perform greylisting. At its
				simplest, the attribute is the IP address of the client, and the
				assessment is whether it has previously connected recently.
				More elaborate attribute combinations and more sophisticated
				assessments can be performed. 
The following discussion covers the most common
combinations and relies on knowledge of <xref target="SMTP"/>, its commands, and the
distinction between envelope and content.
</t>

			<section
				anchor="conn_level"
				title="Connection-Level Greylisting">
				<t> Connection-level greylisting decides whether to accept the
					TCP connection from a "new" <xref
						target="SMTP"></xref> client. 


At this point in the
					communication between the client and the server, the only
					information known to the receiving server is the incoming IP
					address. This, of course, is often (but not always)
					translatable into a host name. </t>

				<t> The typical application of greylisting here is to keep a
					record of SMTP client IP addresses and/or host names
					(collectively, "sources") that have been seen. Such a
					database acts as a cache of known senders and might or might not
					expire records after some period. If the source is
					not in the database, or the record of the source has not
					reached some required minimum age (such as 30 minutes
					since the initial connection attempt), the server does one
					of the following, inviting a later retry: <list
						style="symbols">
						<t> returns a 421 SMTP reply and closes the connection, or </t>
						<t> returns a different 4yz SMTP reply to all further
							commands in this SMTP session. </t>
					</list>
				</t>

				<t> A useful variant of the basic known/unknown policy is to
					limit greylisting to those addresses that are on some list of
					IP addresses known to be affiliated with bad actors. Whereas
					the simpler policy affects all new connections, including
					those from good actors, the constrained policy applies
					greylisting actions only to sites that already have a
					negative reputation.</t>
			</section>

			<section
				anchor="smtp_helo"
				title="SMTP HELO/EHLO Greylisting">
				<t> HELO/EHLO greylisting refers to the first
					command verb in an SMTP session.
					It includes a single, required parameter that is supposed to
					contain the client's fully qualified host name or its
					literal IP address. </t>

				<t> Greylisting implemented at this phase retains a record of
					sources coupled with HELO/EHLO parameters. It returns 4yz
					SMTP replies to all commands until the end of the SMTP
					session if that tuple has not previously been recorded or if
					the record exists but has not reached some configured
					minimum age. </t>
			</section>

			<section
				anchor="smtp_mail"
				title="SMTP MAIL Greylisting">
				<t> MAIL command greylisting refers to the
					command verb in an SMTP session
					that initiates a new transaction. It includes at least one
					required parameter that indicates the return email address (RFC5321.MailFrom)
					of the message being relayed from the client to the server. </t>

				<t> Greylisting implemented at this phase retains a record of
					sources coupled with return email addresses. It returns 4yz
					SMTP replies to all commands for the remainder of the SMTP
					session if that tuple has not previously been recorded or if
					the record exists but has not met some configured minimum
					age. </t>
			</section>

			<section
				anchor="smtp_rcpt"
				title="SMTP RCPT Greylisting">


				<t> RCPT greylisting refers to the
				command verb in an SMTP session
					that specifies intended recipients of an email transaction.
					It includes at least one required parameter that indicates
					the email address of an intended recipient of the message
					being relayed from the client to the server. </t>

				<t> Greylisting implemented at this phase retains a record of
					tuples that combines the provided recipient address with any
					combination of the following: <list
						style="symbols">
						<t> the source, as described above; </t>
						<t> the return email address; and</t>
						<t> the other recipient addresses of the message (if any). </t>
					</list>
				</t>

				<t> If the selected tuple is not found in the database, or if
					the record is present but has not reached some configured
					minimum age, the greylisting Mail Transfer Agent (MTA) <xref target="EMAIL-ARCH"/> returns 4yz SMTP replies to
					all commands for the remainder of the SMTP session. </t>

				<t> Note that often a match on a tuple involving the first valid
					RCPT is sufficient to identify a retry correctly, and
					further checks can be omitted. </t>
			</section>

			<section
				anchor="smtp_data"
				title="SMTP DATA Greylisting">
				<t> DATA greylisting refers to the 
					command verb in an SMTP session
					that transmits the actual message content, as opposed to its
					envelope details. </t>

				<t> This type of greylisting can be performed at two places in
					the SMTP sequence: <list
						style="numbers">
						<t> on receipt of the DATA command, because at that
							point the entire envelope has been received (i.e.,
							all MAIL and RCPT
commands have been issued); or</t>

						<t> on completion of the DATA command, i.e., after the
							"." that terminates transmission of the message
							body, since at that point a digest or other analysis
							of the message could be performed. </t>
					</list>
				</t>

				<t> Some implementations do filtering here because there are
					clients that don't bother checking SMTP reply codes to
					commands other than DATA.  Hence, it can be useful to
					add greylisting capability at that point in an
					SMTP session. </t>

				<t> Numerous greylisting policies are possible at this point.
					All of them retain a record of tuples that combine the
					various parts of the SMTP transaction in some combination,
					including: <list
						style="symbols">
						<t> the source, as described above; </t>
						<t> the return email address; </t>
						<t> the recipients of the message, as a set or
							individually; </t>
						<t> identifiers in the message header, such as the contents of
							the RFC5322.From or RFC5322.To fields; </t>
						<t> other prominent parts of the content, such as the
							RFC5322.Subject field; </t>
						<t> a digest of some or all of the message content, as a
							test for uniqueness; and </t>
						<t> analysis of arbitrary portions of the message body. </t>
					</list>
				</t>

				<t> (The last four items in the list above are only possible at the
					end of DATA, not on receipt of the DATA command.) </t>
				<t> If the selected tuple is not found in the database, or if
					the record exists but has not reached some configured
					minimum age, the greylisting MTA returns 4yz SMTP replies to
					all commands for the remainder of the SMTP session. </t>
			</section>

			<section
				anchor="heuristics"
				title="Additional Heuristics">
				<t> Since greylisting seeks to target spam senders, it follows that
					being able to identify spamware within the SMTP context
					beyond the simple notion of "not seen before" would be
					desirable.  A more targeted approach might also include in
					its selection heuristics such as the following:


					<list style="symbols">
						<t> If a DNS blacklist <xref target="DNSBL"/> lists an IP address
							but the implementer wishes to be cautious with
							mitigation actions rather than blocking traffic
							from the IP address outright, then subject it
							to greylisting. </t>
						<t> If the value found in a PTR record follows common
							naming patterns for dynamic IP addresses,
							then subject it to greylisting. </t>
					</list> </t>
			</section>

			<section
				anchor="exceptions"
				title="Exceptions">
				<t> Most greylisting systems provide for an exception mechanism,
					allowing one to specify IP addresses,
IP address Classless Inter-Domain Routing (CIDR) <xref target="CIDR"/>
					blocks, host names, or domain names that are exempt from
					greylisting checks and thus whose SMTP client sessions are
					not subject to such interference. </t>
				<t> Likely candidates to be excepted from greylisting include those
					known not to retry according to a pattern that will be observed
					as legitimate and those that send so rarely that they will age
					out of the database.  In both cases, the excepted source is
					known not to be an abusive one by the site implementing
					greylisting.  Otherwise, typical non-abusive senders will enter
					the exception list on the first proper retry and remain
					there permanently. </t>
				<t> One could also use a <xref target="DNSBL"/> that lists known good
					hosts as a greylisting exception set. </t>
			</section>
		</section>

		<section
			anchor="pro_con"
			title="Benefits and Costs">
			<t> The most obvious benefit with any of the above techniques is
				that spamware generally does not retry and is therefore less likely to
				succeed, absent a record of a previous delivery attempts. </t>

			<t> The most obvious detriment to implementing greylisting is the
				imposition of delay on legitimate mail. Some popular MTAs do not
				retry failed delivery attempts for an hour or more, which can
				cause expensive delays when delivery of mail is
                                time critical. Worse,
				some legitimate MTAs do not retry at all. (Note, however, that non-retrying
				clients are not fully SMTP-capable, per Section
				2.1 of <xref target="SMTP"/>.  A client does not know, nor is it
				entitled to know, the reason for the temporary failure status code
				being returned; greylisting could be in effect, or it could be caused
				by a local resource issue at the server.  A client therefore needs to
				be equipped to retry in order to be considered fully capable.)  </t>
			<t> The counterargument
				to this "false positive" problem is that email has always been a
				"best-effort" mechanism; thus, this cost is ultimately low in
				comparison to the cost of dealing with high volumes of unwanted
				mail. Still, the actual effect of such delays can be
				significant, such as altering the tone or flow of a multi-participant
				discussion to a mailing list.</t>

			<t> When the clients are subjected to any kind of
				reconfiguration, especially network renumbering, 
                                the cache of information stored about SMTP client history does not
				benefit legitimate clients that are already listed for
				acceptance. To the
				greylisting implementation, such clients are once again unknown,
				and they will once again be subjected to the delay. </t>

			<t> Another obvious cost is for the required database.  It has to be
				large enough to keep the necessary history and fast enough to
				avoid excessive inefficiencies in the server's operations. The
				primary consideration is the maximum age of records in the
				database. If records age out too soon, then hosts that do retry
				per <xref
					target="SMTP"></xref> will be periodically subjected to
				greylisting even though they are well-behaved; if records age
				out after too long a period, then eventually spamware that
				launches a new campaign will not be identified as "unknown" in
				this manner and will not be required to retry. </t>

			<t> Presuming that known friendly senders will be manually configured
				as exceptions to the greylisting check, a steady state will
				eventually be reached wherein the only mail that is delayed is
				mail from an IP address that has never sent mail before.
				Experience suggests that the vast majority of mail comes
				from places on a developed exception list, so after a training
				period, only a small proportion of mail is actually affected.
				The training period could be replaced by processing a history
				of email traffic and adding the IP addresses from which most traffic
				arrives to the exception list. </t>
			<t> Applying greylisting based on actual message content (i.e.,
				post-DATA) is substantially more expensive than any of the other
				alternatives both in terms of the resources required to accept
				and temporarily store a complete message body (which can be quite
				substantial) and any processing that is done on that content. 
				As a consequence, such methods incur more cost during the session
				and thus are not typical practice.  </t>
		</section>

		<section
			title="Unintended Consequences">
			<section
				anchor="effects1"
				title="Unintended Mail Delivery Failures">
				<t> There are a few failure modes of greylisting that are worth
					considering. For example, consider an email message intended
					for user@example.com. The example.com domain is served by
					two receiving mail servers, one called mail1.example.com and
					one called mail2.example.com. On the first delivery attempt,
					mail1.example.com greylists the client,
                                        and thus the client 
					places the message in its outgoing queue for later retry.
					Later, when a retry is attempted, mail2.example.com is
					selected for the delivery, either because mail1.example.com
					is unavailable or because a round-robin <xref
						target="DNS"></xref> evaluation produces that result.
					However, the two example.com hosts do not share greylisting
					databases, so the second host again denies the attempt.
					Thus, although example.com has sought to improve its email
					throughput by having two servers, it has, in fact, amplified
					the problem of legitimate mail delay introduced by
					greylisting. </t>

				<t> Similarly, consider a site with multiple outbound MTAs that
					share a common queue. On a first outbound delivery attempt
					to example.com, the attempt is greylisted. On a later
					retry, a different outbound MTA is selected, which means
					example.com sees a different source, and once again
					greylisting occurs on the same message.  The same effect can
					result from the use of <xref target="DHCP"/>, where the IP address of an
					outbound MTA changes between attempts.  </t>

				<t> For systems that do DATA-level greylisting, if any part of
					the message has changed since the first attempt, the tuple
					constructed might be different than the one for the first
					attempt, and the delivery is again greylisted. Some MTAs do
					reformulate portions of the message at submission time, and
					this can produce visible differences for each attempt.</t>

				<t> A host that sends mail to a particular destination
					infrequently might not remain "known" in the receiving
					server's database and will therefore be greylisted for a
					high percentage of mail despite possibly being a legitimate
					sender. </t>

				<t> All of these and other similar cases can cause greylisting
					to be applied improperly to legitimate MTAs multiple times,
					leading to long delays in delivery or ultimately the return
					of the message to its sender. Other side effects include
					out-of-order delivery of related sequenced messages. </t>

				<t> Address translation technologies such as <xref target="NAT"/>
				    cause distinct MTAs to appear to come from a common
				    IP address.  This can cause greylisting to be applied only to
				    the first connection attempt from the shared IP address,
				    meaning future MTAs connecting for the first time will
				    be exempted from the protection greylisting provides. </t>
			</section>

			<section
				anchor="effects2"
				title="Unintended SMTP Client Failures">
				<t> Atypical SMTP client behaviors also need to be considered when
					deploying greylisting. </t>

				<t> Some clients do not retry messages for very long periods.
					Popular open source MTAs implement increasing backoff times
					when messages receive temporary failure messages and/or
					degrade queue priority for very large messages. This means
					greylisting introduces even more delay for MTAs implementing
					such schemes, and the delay can become large enough to
					become a nuisance to users. </t>

				<t> Some clients do not retry messages at all, in violation
					of <xref target="SMTP"/>. This means
					greylisting will cause outright delivery failure right away
					for sources, envelopes, or messages that it has not seen
					before, regardless of the client attempting the delivery,
					essentially treating legitimate mail and spam the same. </t>

				<t> If a greylisting scheme requires a database record to have
					reached a certain age rather than merely testing for the
					presence of the record in the database, and the client has a
					retry schedule that is too aggressive, the client could be
					subjected to rate limiting by the MTA independent of the
					restrictions imposed by greylisting. </t>

				<t> Some SMTP implementations make the error of treating all
					error codes as fatal, contrary to <xref target="SMTP"/>; that is, a 4yz
					response is treated as if it were
					a 5yz response, and the message is returned to the sender as
					undeliverable. This can result in such things as inadvertent
					removal from mailing lists in response to the perceived
					rejections. </t>

				<t> Some clients encode message-specific details in the address
					parameter to the <xref
						target="SMTP"></xref> MAIL command. If doing so causes
					the parameter to change between retry attempts, a
					greylisting implementation could see it as a new delivery
					rather than a retry and disallow the delivery. In such
					cases, the mail will never be delivered and will be
					returned to the sender after the retry timeout expires. </t>

				<t> A client subjected to greylisting might move to
					the next host found in the ordered <xref
						target="DNS"></xref> MX record set for the destination
					domain and re-attempt delivery.  This has several considerations
					of its own:

					<list style="symbols">
						<t> Traffic to those alternate
servers increases merely
						as a result of greylisting. </t>

						<t> Alternate (MX) servers SHOULD share the same greylisting
						database.  When they do not -- as is often true when the servers
						occupy different Administrative Management Domains (ADMDs) --
						SMTP clients can see variable treatment if they try to send to
						different MX hosts. </t>

						<t> When alternate MX servers relay mail back to the
						"primary" MX server, the latter SHOULD be configured to
						permit the other servers to relay mail without being
						subjected to greylisting. </t>
					</list> </t>

				<t> There are some applications that connect to an SMTP server
					and simulate a transaction up to the point of sending the
					RCPT command in an attempt to confirm that an address is
					valid. Some of these are legitimate applications (e.g.,
					mailing list servers), and others are automated programs that
					attempt to ascertain valid addresses to which to send spam
					(a "directory harvesting" attack). Greylisting can interfere
					with both instances, with harmful effects on the former.
				</t>
			</section>

			<section
				anchor="saturation"
				title="Address Space Saturation">
				<t> Greylisting is obviously not a foolproof solution to
					avoiding abusive traffic. Bad actors that send mail with
					just enough frequency to avoid having their records expire
					will never be caught by this mechanism after the first
					instance. </t>

				<t> Where this is a concern, combining greylisting with some
					form of reputation service that
					estimates the likely behavior for IP addresses that are not
					intercepted by the greylisting function would be a good
					choice. </t>
			</section>

		</section>

		<section
			anchor="recommend"
			title="Recommendations">
			<t> The following practices are RECOMMENDED based on collected
				experience: <list
					style="numbers">
					<t> Implement greylisting based on a tuple consisting of (IP address,
						RFC5321.MailFrom, and the first RFC5321.RcptTo).  It is
						sufficient to use only the first RFC5321.RcptTo as legitimate
						MTAs appear not to reorder recipients between retries.  
						Including RFC5321.MailFrom improves accuracy where the IP address
						is being matched in clusters (e.g., CIDR blocks) rather than precisely
						(see below).  After a successful retry, allow
						all further <xref
							target="SMTP"></xref> traffic from the IP address in
						that tuple regardless of envelope information.
					</t>




<t> 
Include a configurable range of time within which a retry from a
greylisted host is considered and outside of which it is
otherwise ignored.
The range
needs to cover typical retry times of
common MTA configurations, thus anticipating that a fully capable
MTA will retry sometime after the beginning of the range and
before the end of it.  The default range SHOULD be from one
minute to 24 hours.  Retries within the range are
permitted and satisfy the greylisting test, and the client
is thus no longer likely to be a sender of spam. Retries after the end
of the range SHOULD be considered to be a new message for the
purposes of greylisting evaluation (i.e., reset the "first seen"
timestamp for that IP address).  Some sites use a higher time
value for the low end of the time range to match common
legitimate MTA retry timeouts, but additional benefit from doing
so appears unlikely.
</t>

	<t> Include a timeout for database entries, after which
		records for IP addresses that have generated no recent traffic are deleted.
		This step is intended to re-enable greylisting for an
		IP address in the event that it has changed "owners" and will subject the client
		to another round of greylisting. The default SHOULD be
		at least one week. </t>

	<t> For an Administrative Management Domain (ADMD), all inbound border
		MTAs listed in the <xref
			target="DNS"></xref> SHOULD share a common
		greylisting database and common greylisting policies.
		This handles sequences in which a client's retry goes to
		a different server after the first 4yz reply, and it
		lets all servers share the list of hosts that did retry
						successfully. </t>

					<t> To accommodate those senders that have clusters of
						outgoing mail servers, greylisting servers MAY track
						CIDR blocks of a size of its own choosing, such as /24,
						rather than the full IPv4 address.  (Note, however, that
						this heuristic will not work for clusters having machines
						on different networks.)  A similar grouping
						capability MAY be established based on the domain name
						of the mail server if one can be determined.
					</t>

					<t> Include a manual override capability for adding specific
						IP addresses or network blocks that always bypass
						checks. There are legitimate senders that simply don't
						respond well to greylisting for a variety of reasons,
						most of which do not conflict with <xref
							target="SMTP"></xref>. There are also some highly
						visible online entities such as email service providers
						that will be certain to retry; thus, those that are
						known SHOULD be allowed to bypass the filter. </t>
					<t> Greylisting SHOULD NOT be applied by an ADMD's submission
						service (see <xref target="SUBMISSION"/>) for authenticated
						client hosts.  It also SHOULD not be applied against any
						authenticated ADMD session.  Authentication can include whatever mechanisms
						are deemed appropriate for the ADMD, such as known internal IP
						addresses, protocol-level client authentication, or the like. </t>
				</list>
			</t>

			<t> There is no specific recommendation as to the specific choice of
				4yz code to be returned as a result of a greylisting delay.  Per
				<xref target="SMTP"/>, however, the only two reasonable choices
				are 421 if the implementation wishes to terminate the connection
				immediately and 450 otherwise.  It
				is possible that some clients treat different 4yz codes
				differently, but no data is available on whether using
				421 versus some other 4yz code is particularly advantageous.  </t>

			<t> There is also no specific recommendation as to the choice
				of text to include in the SMTP reply, if any.  Some implementers
				argue that indicating that greylisting is in effect can give
				spamware a hint as to when to try again for successful delivery,
				while others suspect that it won't matter to spamware and thus the
				more likely audience is legitimate senders seeking to understand why
				their mail is being delayed. </t>
		</section>

		<section
			anchor="eval"
			title="Measuring Effectiveness">
			<t> A few techniques are common when measuring the effectiveness of
				greylisting in a particular installation: <list
					style="symbols">
					<t> Arrange to log the spam versus legitimate determinations of
						messages and what the greylisting decision would have
						been if enabled; then determine whether there is a
						correlation (and, of course, whether too much legitimate
						email would also be affected). </t>

					<t> Continuing from the previous point, query the set of IP
						addresses subjected to greylisting in any popular <xref
							target="DNSBL"></xref> to see if there is a strong
						correlation. </t>
				</list></t>
		</section>

		<section anchor="ipv6" title="IPv6 Applicability">
			<t> The descriptions and recommendations presented in this memo are based
			    on many years of experience with greylisting in the IPv4 Internet
			    environment, so they clearly pertain to IPv4 deployments only. </t>

			<t> The greater size of an IPv6 address seems likely to permit differences
			    in behaviors by bad actors, and this could well mean needing to alter
			    the details for applying greylisting; it might even negate any benefits
			    in using greylisting at all.  At a minimum, it is likely to call for
			    different specific choices for any greylisting algorithm variables. </t>

			<t> In addition, an obvious consideration is that the size of the database
			    required to store records of all of the IP addresses seen will likely
			    be substantially larger in the IPv6 environment. </t>
		</section>


		<section
			anchor="security"
			title="Security Considerations">
			<t> This section discusses potential security issues related to
				greylisting. </t>


			<section
				anchor="sec_trade"
				title="Trade-Offs">
				<t> The discussion above highlights the fact that, although
					greylisting provides some obvious and valuable defenses,
					it can introduce unintentional and detrimental
					consequences for delivery of legitimate mail. Where
					timely delivery of email is essential, especially for
					financial, transactional, or security-related applications, the possible consequences
					of such systems need to be carefully considered.
				</t>

				<t> Specific sources can be exempted from greylisting, but,
					of course, that means they have elevated privilege in
					terms of access to the mailboxes on the greylisting
					system, and malefactors can seek to exploit this. </t>
			</section>

			<section
				anchor="sec_db"
				title="Database">
				<t> The database that has to be maintained as part of any
					greylisting system will grow as the diversity of its
					SMTP clients' hosts grows and, of course, is larger in
					general depending on the nature of the tuple stored
					about each delivery attempt. Even with a record aging
					policy in place, such a database could grow large enough
					to interfere with the system hosting it, or at least to
					a point at which greylisting service is degraded.
					Moreover, an attacker knowing which greylisting scheme
					is in use could rotate parameters of SMTP clients under
					its control, in an attempt to inflate the database to
					the point of denial-of-service. </t>

				<t> Implementers could consider configuring an appropriate
					failure policy so that something locally acceptable
					happens when the database is attacked or otherwise
					unavailable. </t>
				<t> In practice, this has not appeared as a serious concern,
					because any reasonable aging policy successfully moderates
					database growth.
					It is nevertheless identified here as a consideration
					as there may be implementations in some environments
					where this is indeed an issue. </t>
			</section>
		</section>
	</middle>

	<back>
		<references
			title="Normative References">
<reference anchor="EMAIL-ARCH">
<front>
<title>Internet Mail Architecture</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker'>
<organization /></author>
<date year='2009' month='July' />
</front>
<seriesInfo name='RFC' value='5598' />
<format type='TXT' octets='115741' target='http://www.rfc-editor.org/rfc/rfc5598.txt' />
<format type='PDF' octets='342738' target='http://www.rfc-editor.org/rfc/rfc5598.pdf' />
</reference>




<reference anchor="KEYWORDS">
<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year='1997' month='March' />
<area>General</area>
<keyword>keyword</keyword>
</front>
<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='http://www.rfc-editor.org/rfc/rfc2119.txt' />
<format type='HTML' octets='17491' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5777' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>


<reference anchor="SMTP">
<front>
<title>Simple Mail Transfer Protocol</title>
<author initials='J.' surname='Klensin' fullname='J. Klensin'>
<organization /></author>
<date year='2008' month='October' />
</front>
<seriesInfo name='RFC' value='5321' />
<format type='TXT' octets='225929' target='http://www.rfc-editor.org/rfc/rfc5321.txt' />
</reference>


<reference anchor="SUBMISSION">
<front>
<title>Message Submission for Mail</title>
<author initials='R.' surname='Gellens' fullname='R. Gellens'>
<organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'>
<organization /></author>
<date year='2011' month='November' />
</front>
<seriesInfo name='STD' value='72' />
<seriesInfo name='RFC' value='6409' />
<format type='TXT' octets='40153' target='http://www.rfc-editor.org/rfc/rfc6409.txt' />
</reference>

</references>

<references title="Informative References">


<reference anchor='CIDR'>
<front>
<title>Classless Inter-domain Routing (CIDR): The Internet Address Assignment and Aggregation Plan</title>
<author initials='V.' surname='Fuller' fullname='V. Fuller'>
<organization /></author>
<author initials='T.' surname='Li' fullname='T. Li'>
<organization /></author>
<date year='2006' month='August' />
</front>
<seriesInfo name='BCP' value='122' />
<seriesInfo name='RFC' value='4632' />
<format type='TXT' octets='66944' target='http://www.rfc-editor.org/rfc/rfc4632.txt' />
</reference>



<reference anchor='DHCP'>
<front>
<title abbrev='DHCP'>Dynamic Host Configuration Protocol</title>
<author initials='R.' surname='Droms' fullname='Ralph Droms'>
<organization>Computer Science Department</organization>
<address>
<postal>
<street>323 Dana Engineering</street>
<street>Bucknell University</street>
<street>Lewisburg</street>
<street>PA 17837</street></postal>
<phone>(717) 524-1145</phone>
<email>droms@bucknell.edu</email></address></author>
<date year='1997' month='March' />
<area>Internet</area>
<keyword>DHCP</keyword>
<keyword>configuration</keyword>
<keyword>dynamic host configuration protocol</keyword>
<keyword>host</keyword>
</front>
<seriesInfo name='RFC' value='2131' />
<format type='TXT' octets='113738' target='http://www.rfc-editor.org/rfc/rfc2131.txt' />
<format type='HTML' octets='134047' target='http://xml.resource.org/public/rfc/html/rfc2131.html' />
<format type='XML' octets='118050' target='http://xml.resource.org/public/rfc/xml/rfc2131.xml' />
</reference>



<reference anchor="DNS">
<front>
<title abbrev='Domain Implementation and Specification'>Domain names - implementation and specification</title>
<author initials='P.' surname='Mockapetris' fullname='P. Mockapetris'>
<organization>USC/ISI</organization>
<address>
<postal>
<street>4676 Admiralty Way</street>
<city>Marina del Rey</city>
<region>CA</region>
<code>90291</code>
<country>US</country></postal>
<phone>+1 213 822 1511</phone></address></author>
<date year='1987' day='1' month='November' /></front>
<seriesInfo name='STD' value='13' />
<seriesInfo name='RFC' value='1035' />
<format type='TXT' octets='125626' target='http://www.rfc-editor.org/rfc/rfc1035.txt' />
</reference>


<reference anchor="DNSBL">
<front>
<title>DNS Blacklists and Whitelists</title>
<author initials='J.' surname='Levine' fullname='J. Levine'>
<organization /></author>
<date year='2010' month='February' />
</front>
<seriesInfo name='RFC' value='5782' />
<format type='TXT' octets='25296' target='http://www.rfc-editor.org/rfc/rfc5782.txt' />
</reference>


<reference anchor="MAIL">
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='Peter W. 
Resnick' role='editor'>
<organization>Qualcomm Incorporated</organization>
<address>
<postal>
<street>5775 Morehouse Drive</street>
<city>San Diego</city>
<region>CA</region>
<code>92121-1714</code>
<country>US</country></postal>
<phone>+1 858 651 4478</phone>
<email>presnick@qualcomm.com</email>
<uri>http://www.qualcomm.com/~presnick/</uri></address></author>
<date year='2008' month='October' />
</front>
<seriesInfo name='RFC' value='5322' />
<format type='TXT' octets='122322' target='http://www.rfc-editor.org/rfc/rfc5322.txt' />
<format type='HTML' octets='213342' target='http://xml.resource.org/public/rfc/html/rfc5322.html' />
<format type='XML' octets='174183' target='http://xml.resource.org/public/rfc/xml/rfc5322.xml' />
</reference>


<reference anchor="PUREMAGIC"
           target="http://projects.puremagic.com/greylisting/whitepaper.html">
		<front>
			<title>The Next Step in the Spam Control
				War: Greylisting</title>

			<author
				fullname="Evan Harris"
				initials="E."
				surname="Harris">

			</author>

			<date
				month="August"
				year="2003"></date>
		</front>
	</reference>

	<reference anchor="SAUCE"
		target="http://www.gnu.org/software/sauce">
		<front>
			<title>GNU SAUCE</title>

			<author
				fullname="Ian Jackson"
				initials="I."
				surname="Jackson">

			</author>

			<date year="2001"></date>
		</front>
	</reference>



<reference anchor="NAT">
<front>
<title>Traditional IP Network Address Translator (Traditional NAT)</title>
<author initials='P.' surname='Srisuresh' fullname='P. Srisuresh'>
<organization /></author>
<author initials='K.' surname='Egevang' fullname='K. Egevang'>
<organization /></author>
<date year='2001' month='January' />
</front>
<seriesInfo name='RFC' value='3022' />
<format type='TXT' octets='37675' target='http://www.rfc-editor.org/rfc/rfc3022.txt' />
</reference>



		</references>


		<section
			anchor="ack"
			title="Acknowledgments">
			<t> The authors wish to acknowledge Mike Adkins, Steve Atkins,
				Mihai Costea, Derek Diget, Peter J. Holzer, John Levine, Chris
				Lewis, Jose-Marcio Martins da Cruz, John Klensin, S. Moonesamy, Suresh
				Ramasubramanian, Mark Risher, Jordan Rosenwald, Gregory Shapiro,
				Joe Sniderman, Roland Turner, and Michael Wise for their contributions
				to this memo.  The various participants of the MAAWG Open Sessions about
				greylisting were also valued contributors. </t>
		</section>
	</back>

</rfc>
