<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc rfcedstyle="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="std" number="5933" ipr="trust200902">

<front>

  <title abbrev="Use of GOST Signatures in DNSSEC">
Use of GOST Signature Algorithms in DNSKEY and&nbsp;RRSIG&nbsp;Resource&nbsp;Records&nbsp;for&nbsp;DNSSEC</title>

  <author fullname="Vasily Dolmatov" initials="V" role="editor"
            surname="Dolmatov">
      <organization>Cryptocom Ltd.</organization>

      <address>
        <postal>
          <street>14/2, Kedrova St.</street>

          <city>Moscow</city>

          <region></region>

          <code>117218</code>

          <country>Russian Federation</country>
        </postal>

        <phone>+7 499 124 6226</phone>

        <email>dol@cryptocom.ru</email>

      </address>
  </author>

  <author fullname="Artem Chuprina" initials="A"
            surname="Chuprina">
      <organization>Cryptocom Ltd.</organization>

      <address>
        <postal>
          <street>14/2, Kedrova St.</street>

          <city>Moscow</city>

          <region></region>

          <code>117218</code>

          <country>Russian Federation</country>
        </postal>

        <phone>+7 499 124 6226</phone>

        <email>ran@cryptocom.ru</email>

      </address>
  </author>

  <author fullname="Igor Ustinov" initials="I"
            surname="Ustinov">
      <organization>Cryptocom Ltd.</organization>

      <address>
        <postal>
          <street>14/2, Kedrova St.</street>

          <city>Moscow</city>

          <region></region>

          <code>117218</code>

          <country>Russian Federation</country>
        </postal>

        <phone>+7 499 124 6226</phone>

        <email>igus@cryptocom.ru</email>

      </address>
  </author>

  <date month="July" year="2010" />

  <area>Security</area>

  <workgroup>DNS Extensions working group</workgroup>

  <keyword>GOST</keyword>
  <keyword>Digital signature</keyword>
  <keyword>DNSSEC</keyword>
  <keyword>ECC</keyword>

<!-- [rfced] Please insert any keywords (beyond those that appear in the
title) for use on http://www.rfc-editor.org/rfcsearch.html. -->

<!-- [rfced] Please note that after you have approved the document,
post-xml2rfc changes will be made to update the header and boilerplate as
described in RFC 5741. -->

  <abstract>
    <t>This document describes how to produce digital signatures and
    hash functions using the GOST&nbsp;R&nbsp;34.10&nbhy;2001 and
    GOST&nbsp;R&nbsp;34.11&nbhy;94
    algorithms for DNSKEY, RRSIG, and DS resource
    records, for use in the Domain Name System Security Extensions
    (DNSSEC).</t> 
  </abstract>

</front>

<middle>

<section title="Introduction">
<t>   The Domain Name System (DNS) is the global hierarchical distributed
   database for Internet Naming.  The DNS has been extended to use
   cryptographic keys and digital signatures for the verification of the
   authenticity and integrity of its data.  RFC 4033 <xref target="RFC4033" />, RFC 4034
   <xref target="RFC4034" />, and RFC 4035 <xref target="RFC4035" /> describe these DNS Security
   Extensions, called DNSSEC.
</t>

<t>
   RFC 4034 describes how to store DNSKEY and RRSIG resource records,
   and specifies a list of cryptographic algorithms to use.  This
   document extends that list with the signature and hash algorithms
   GOST&nbsp;R&nbsp;34.10&nbhy;2001 (<xref target="GOST3410" />,
   <xref target="RFC5832" />) and GOST&nbsp;R&nbsp;34.11&nbhy;94
   (<xref target="GOST3411" />, <xref target="RFC5831" />), and specifies
   how to store DNSKEY data and how to produce RRSIG resource records
   with these algorithms.
</t>
<t>
   Familiarity with DNSSEC and with GOST signature and hash
   algorithms is assumed in this document.
</t>

<t>
   The term "GOST" is not officially defined, but is usually used to
   refer to the collection of the Russian cryptographic algorithms
   GOST&nbsp;R&nbsp;34.10&nbhy;2001 <xref target="RFC5832" />,
   GOST&nbsp;R&nbsp;34.11&nbhy;94 <xref target="RFC5831" />, and
   GOST&nbsp;28147-89 <xref target="RFC5830" />.
   Since GOST&nbsp;28147-89 is not used in DNSSEC, "GOST" will only refer to
   GOST&nbsp;R&nbsp;34.10&nbhy;2001 and GOST&nbsp;R&nbsp;34.11&nbhy;94 in this document.
</t>

  <section title="Terminology">

  <t>
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
    document are to be interpreted as described in <xref target="RFC2119" />.
  </t>
  </section>
</section>

<section title="DNSKEY Resource Records">

<t>
   The format of the DNSKEY RR can be found in RFC 4034
   <xref target="RFC4034" />.
</t>
<t>
   GOST&nbsp;R&nbsp;34.10&nbhy;2001 public keys are stored with the algorithm
number&nbsp;12.
</t>
<t>
      
   The wire format of the public key is compatible with RFC 4491
   <xref target="RFC4491" />:
</t>
<t>

   According to <xref target="GOST3410" /> and <xref target="RFC5832" />,
   a public key is a point on the elliptic curve Q = (x,y).
</t>
<t>

   The wire representation of a public key MUST contain 64 octets, 
   where the first 32 octets contain the little-endian representation
   of x and the second 32 octets contain the little-endian 
   representation of y. 
</t>
<t>

   Corresponding public key parameters are those identified by
   id&nbhy;GostR3410&nbhy;2001-CryptoPro-A-ParamSet (1.2.643.2.2.35.1) <xref target="RFC4357" />,
   and the digest parameters are those identified by
   id&nbhy;GostR3411&nbhy;94&nbhy;CryptoProParamSet (1.2.643.2.2.30.1) <xref target="RFC4357" />.
</t>

<section title="Using a Public Key with Existing Cryptographic Libraries">

<t>
   At the time of this writing, existing GOST-aware cryptographic libraries
   are capable of reading GOST public keys via a generic
   X509 API if the key is encoded according to RFC 4491 <xref target="RFC4491"
/>, Section&nbsp;2.3.2.
</t>
<t>

   To make this encoding from the wire format of a GOST public key 
   with the parameters used in this document, prepend the 64 octets
   of key data with the following 37-byte sequence:
</t>

     <figure align="center">
        <artwork align="left"><![CDATA[
   0x30 0x63 0x30 0x1c 0x06 0x06 0x2a 0x85 0x03 0x02 0x02 0x13 0x30 
   0x12 0x06 0x07 0x2a 0x85 0x03 0x02 0x02 0x23 0x01 0x06 0x07 0x2a
   0x85 0x03 0x02 0x02 0x1e 0x01 0x03 0x43 0x00 0x04 0x40
            ]]></artwork>
      </figure>

</section>
  
<section title="GOST DNSKEY RR Example">

<t>

   Given a private key with the following value (the value of the GostAsn1
   field is split here into two lines to simplify reading; in the 
   private key file, it must be in one line):
</t>

     <figure align="center">
        <artwork align="left"><![CDATA[
   Private-key-format: v1.2
   Algorithm: 12 (ECC-GOST)
   GostAsn1: MEUCAQAwHAYGKoUDAgITMBIGByqFAwICIwEGByqFAwICHgEEIgQg/9M
             iXtXKg9FDXDN/R9CmVhJDyuzRAIgh4tPwCu4NHIs=
            ]]></artwork>
      </figure>

<t>
   The following DNSKEY RR stores a DNS zone key for example.net:
 
</t>

     <figure align="center">
        <artwork align="left"><![CDATA[
   example.net. 86400 IN DNSKEY 256 3 12 (
                                aRS/DcPWGQj2wVJydT8EcAVoC0kXn5pDVm2I
                                MvDDPXeD32dsSKcmq8KNVzigjL4OXZTV+t/6
                                w4X1gpNrZiC01g==
                                ) ; key id = 59732
            ]]></artwork>
      </figure>

</section>
</section>

<section title="RRSIG Resource Records">

<t>
   The value of the signature field in the RRSIG RR follows RFC 4490
   <xref target="RFC4490" /> and is calculated as follows.  The values for the RDATA 
   fields that precede the signature data are specified 
   in RFC 4034 <xref target="RFC4034" />.
</t>
<t>
   hash = GOSTR3411(data)
</t>
<t>
   where "data" is the wire format data of the resource record set 
   that is signed, as specified in RFC 4034 <xref target="RFC4034" />.
 </t>

<t>  
   The hash MUST be calculated with GOST&nbsp;R&nbsp;34.11&nbhy;94 parameters identified
   by id-GostR3411&nbhy;94-CryptoProParamSet <xref target="RFC4357" />.
</t>

<t>
   The signature is calculated from the hash according to the 
   GOST&nbsp;R&nbsp;34.10&nbhy;2001 standard, and its wire format is
   compatible with RFC 4490 <xref target="RFC4490" />.
</t>
<t>
   Quoting RFC 4490:
</t>
<t>
   "The signature algorithm GOST&nbsp;R&nbsp;34.10&nbhy;2001 generates a digital
   signature in the form of two 256-bit numbers, r and s.  Its octet
   string representation consists of 64 octets, where the first
   32&nbsp;octets contain the big-endian representation of s and the second 32
   octets contain the big-endian representation of r".
</t>

<section title="RRSIG RR Example">

<t>
   With the private key from Section 2.2, sign the following RRSet,
   consisting of one A record:
</t>
<t>
<list style="hanging">
<t>   www.example.net. 3600 IN A 192.0.2.1</t>
</list>
</t>
<t>
   Setting the inception date to 2000-01-01 00:00:00 UTC and the 
   expiration date to 2030-01-01 00:00:00 UTC, the following signature
   RR will be valid: 
</t>

     <figure align="center">
        <artwork align="left"><![CDATA[
   www.example.net. 3600 IN RRSIG A 12 3 3600 20300101000000 (
                                  20000101000000 59732 example.net.
                                  7vzzz6iLOmvtjs5FjVjSHT8XnRKFY15ki6Kp
                                  kNPkUnS8iIns0Kv4APT+D9ibmHhGri6Sfbyy
                                  zi67+wBbbW/jrA== )
            ]]></artwork>
      </figure>

<t>
Note: The ECC-GOST signature algorithm uses random data, so the actual computed
signature value will differ between signature calculations. 
</t>

</section>
</section>

<section title="DS Resource Records">

<t>
   The GOST&nbsp;R&nbsp;34.11&nbhy;94 digest algorithm is denoted in DS RRs by
   the digest type 3.  The wire format of a digest value is compatible
   with RFC&nbsp;4490 <xref target="RFC4490" />, that is, the digest is in
   little-endian representation. 
</t>
<t>

   The digest MUST always be calculated with GOST&nbsp;R&nbsp;34.11&nbhy;94 parameters
   identified by id-GostR3411-94-CryptoProParamSet <xref target="RFC4357" />.
</t>

<section title="DS RR Example">

<!-- [rfced] Should the phrase below be "key-signing key", or are
one or more words missing?  Please clarify. -->

<t>
   For Key Signing Key (KSK):
</t>

     <figure align="center">
        <artwork align="left"><![CDATA[
   example.net. 86400   DNSKEY  257 3 12 (
                                LMgXRHzSbIJGn6i16K+sDjaDf/k1o9DbxScO
                                gEYqYS/rlh2Mf+BRAY3QHPbwoPh2fkDKBroF
                                SRGR7ZYcx+YIQw==
                                ) ; key id = 40692
            ]]></artwork>
      </figure>

<t>
   The DS RR will be
</t>

     <figure align="center">
        <artwork align="left"><![CDATA[
   example.net. 3600 IN DS 40692 12 3 (
             22261A8B0E0D799183E35E24E2AD6BB58533CBA7E3B14D659E9CA09B
             2071398F )
            ]]></artwork>
      </figure>

</section>
</section>

<section title="Deployment Considerations">

<section title="Key Sizes">
<t>

   According to RFC 4357 <xref target="RFC4357" />, the key size of GOST public keys MUST be 512 bits.
</t>
</section>
<section title="Signature Sizes">
<t>

   According to the GOST&nbsp;R&nbsp;34.10&nbhy;2001 digital signature
   algorithm specification (<xref target="GOST3410" />,
   <xref target="RFC5832" />), the size of a GOST signature is 512 bits.
</t>
</section>

<section title="Digest Sizes">
<t>

   According to GOST&nbsp;R&nbsp;34.11&nbhy;94 (<xref target="GOST3411" />,
   <xref target="RFC5831" />), the size of a GOST digest is 256 bits.
</t>
</section>
</section>

<section title="Implementation Considerations">
<section title="Support for GOST Signatures">
<t>
   DNSSEC-aware implementations MAY be able to support RRSIG and
   DNSKEY resource records created with the GOST algorithms as
   defined in this document.
</t>
</section>

<section title="Support for NSEC3 Denial of Existence">
<t>
    Any DNSSEC-GOST implementation MUST support both NSEC
    <xref target="RFC4035" /> and NSEC3 <xref target="RFC5155" />.
</t>
</section>
</section>

<section title="Security Considerations">
<t>

    Currently, the cryptographic resistance of the
    GOST&nbsp;R&nbsp;34.10&nbhy;2001 
    digital signature algorithm is estimated as 2**128 operations
    of multiple elliptic curve point computations on prime modulus
    of order 2**256.
</t>
<t>
    Currently, the cryptographic resistance of the
    GOST&nbsp;R&nbsp;34.11&nbhy;94 hash
    algorithm is estimated as 2**128 operations of computations of a
    step hash function. (There is a known method to reduce this 
    estimate to 2**105 operations, but it demands padding the 
    colliding message with 1024 random bit blocks each of 256-bit
    length; thus, it cannot be used in any practical implementation).
</t>
</section>

<section title="IANA Considerations">

<t>
   This document updates the IANA registry "DNS Security Algorithm 
   Numbers" <xref target="RFC4034" />.
   The following entries have been added to the registry:
</t>

     <figure align="center">
        <artwork align="left"><![CDATA[
                                    Zone    Trans.
  Value  Algorithm         Mnemonic Signing Sec.  References   Status
   12    GOST R 34.10-2001 ECC-GOST     Y   *     RFC 5933    OPTIONAL
            ]]></artwork>
      </figure>

<t>
   This document updates the RFC 4034 Digest Types assignment
   (<xref target="RFC4034" />, Section A.2) by adding the value and status
    for the GOST&nbsp;R&nbsp;34.11&nbhy;94 algorithm:
<!-- [rfced] Does this RFC update RFC 4034?  Should this data be included in 
the header of the document?  -->
</t>

     <figure align="center">
        <artwork align="left"><![CDATA[
   Value   Algorithm        Status
     3    GOST R 34.11-94  OPTIONAL
]]></artwork>
      </figure>

</section>

<section title="Acknowledgments">

<t>
   This document is a minor extension to RFC 4034 <xref target="RFC4034" />.  Also, we
   tried to follow the documents RFC 3110 <xref target="RFC3110" />, RFC 4509 <xref target="RFC4509" />,
   and RFC 4357 <xref target="RFC4357" /> for consistency. The authors of and 
   contributors to these documents are gratefully acknowledged for 
   their hard work.
</t>
<t>
   The following people provided additional feedback, text, and valuable assistance: Dmitry 
   Burkov, Jaap Akkerhuis, Olafur Gundmundsson, Jelte&nbsp;Jansen, and Wouter Wijngaards.
</t>
</section>
</middle>

<back>
<references title="Normative References">

<reference anchor="RFC2119">
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials="S." surname="Bradner">
</author>
<date month="March" year="1997"/>
</front>
<seriesInfo name="BCP" value="14" />
<seriesInfo name="RFC" value="2119" />
</reference>

<reference anchor="RFC3110">
<front>
<title>RSA/SHA-1 SIGs and RSA KEYs in the Domain Name System (DNS)</title>
<author initials="D." surname="Eastlake 3rd">
</author>
<date month="May" year="2001"/>
</front>
<seriesInfo name="RFC" value="3110" />
</reference>

<reference anchor="RFC4033">
<front>
<title>DNS Security Introduction and Requirements</title>
<author initials="R." surname="Arends" />
<author initials="R." surname="Austein" />
<author initials="M." surname="Larson" />
<author initials="D." surname="Massey" />
<author initials="S." surname="Rose" />
<date month="March" year="2005"/>
</front>
<seriesInfo name="RFC" value="4033" />
</reference>

<reference anchor="RFC4034">
<front>
<title>Resource Records for the DNS Security Extensions</title>
<author initials="R." surname="Arends" />
<author initials="R." surname="Austein" />
<author initials="M." surname="Larson" />
<author initials="D." surname="Massey" />
<author initials="S." surname="Rose" />
<date month="March" year="2005"/>
</front>
<seriesInfo name="RFC" value="4034" />
</reference>

<reference anchor="RFC4035">
<front>
<title>Protocol Modifications for the DNS Security Extensions</title>
<author initials="R." surname="Arends" />
<author initials="R." surname="Austein" />
<author initials="M." surname="Larson" />
<author initials="D." surname="Massey" />
<author initials="S." surname="Rose" />
<date month="March" year="2005"/>
</front>
<seriesInfo name="RFC" value="4035" />
</reference>

<reference anchor="RFC4357">
<front>
<title>Additional Cryptographic Algorithms for Use with GOST&nbsp;28147-89, GOST&nbsp;R&nbsp;34.10-94, GOST&nbsp;R&nbsp;34.10&nbhy;2001, and GOST&nbsp;R&nbsp;34.11-94 Algorithms</title>
<author initials="V." surname="Popov" />
<author initials="I." surname="Kurepkin" />
<author initials="S." surname="Leontiev" />
<date month="January" year="2006"/>
</front>
<seriesInfo name="RFC" value="4357" />
</reference>

<reference anchor="RFC4490">
<front>
<title>Using the GOST&nbsp;28147-89, GOST&nbsp;R&nbsp;34.11-94, GOST&nbsp;R&nbsp;34.10-94, and GOST&nbsp;R&nbsp;34.10&nbhy;2001 Algorithms with Cryptographic Message Syntax (CMS)</title>
<author initials="S." surname="Leontiev" role="editor" />
<author initials="G." surname="Chudov" role="editor" />
<date month="May" year="2006"/>
</front>
<seriesInfo name="RFC" value="4490" />
</reference>

<reference anchor="RFC4491">
<front>
<title>Using the GOST&nbsp;R&nbsp;34.10-94, GOST&nbsp;R&nbsp;34.10&nbhy;2001, and GOST&nbsp;R&nbsp;34.11-94 Algorithms with the Internet X.509 Public Key Infrastructure Certificate and CRL Profile</title>
<author initials="S." surname="Leontiev" role="editor" />
<author initials="D." surname="Shefanovski" role="editor"/>
<date month="May" year="2006"/>
</front>
<seriesInfo name="RFC" value="4491" />
</reference>

<reference anchor="RFC5155">
<front>
<title>DNS Security (DNSSEC) Hashed Authenticated Denial of Existence</title>
<author initials="B." surname="Laurie" />
<author initials="G." surname="Sisson" />
<author initials="R." surname="Arends" />
<author initials="D." surname="Blacka" />
<date month="March" year="2008"/>
</front>
<seriesInfo name="RFC" value="5155" />
</reference>

<!-- [rfced] We have changed the Reference listings for [GOST3410] and
[GOST3411] to more closely resemble those of RFC 5832.  Please let us
know any objections. -->

<reference anchor="GOST3410">
<front>
<title>Information technology.  Cryptographic data security. Signature and verification processes of [electronic] digital signature.</title>
</front>
<seriesInfo name="GOST" value="R 34.10-2001" />
<seriesInfo name="Gosudarstvennyi Standard" value="of Russian Federation" />
<seriesInfo name="Government Committee of Russia" value="for Standards" />
<seriesInfo name="2001." value="(In Russian)" />
</reference>

<!-- [rfced] The Reference listings in these documents list 
GOST R 34.10-94, but the year listed is 2001 (as opposed to 1994); it is not
clear whether that is an error.  Please verify whether the year should be 1994
or 2001. --> 

<reference anchor="GOST3411">
<front>
<title>Information technology.  Cryptographic data security.  Hashing
function.</title>
</front>
<seriesInfo name="GOST" value="R 34.11-94" />
<seriesInfo name="Gosudarstvennyi Standard" value="of Russian Federation"
/>
<seriesInfo name="Government Committee of Russia" value="for Standards" />
<seriesInfo name="1994." value="(In Russian)" />
</reference>

</references>

<references title="Informative References">

<reference anchor="RFC4509">
<front>
<title>Use of SHA-256 in DNSSEC Delegation Signer (DS) Resource Records (RRs)</title>
<author initials="W." surname="Hardaker" />
<date month="May" year="2006"/>
</front>
<seriesInfo name="RFC" value="4509" />
</reference>

<reference anchor="RFC5830">
<front>
<title>GOST&nbsp;28147&nbhy;89: Encryption, Decryption, and Message
Authentication Code (MAC) Algorithms</title>
<author initials="V." surname="Dolmatov" role="editor"/>
<date month="March" year="2010"/>
</front>
<seriesInfo name="RFC" value="5830" />
</reference>

<reference anchor="RFC5831">
<front>
<title>GOST&nbsp;R&nbsp;34.11&nbhy;94: Hash Function Algorithm</title>
<author initials="V." surname="Dolmatov" role="editor"/>
<date month="March" year="2010"/>
</front>
<seriesInfo name="RFC" value="5831" />
</reference>
<reference anchor="RFC5832">
<front>
<title>GOST&nbsp;R&nbsp;34.10&nbhy;2001: Digital Signature Algorithm</title>
<author initials="V." surname="Dolmatov" role="editor"/>
<date month="March" year="2010"/>
</front>
<seriesInfo name="RFC" value="5832" />
</reference>

</references>
</back>
</rfc>

