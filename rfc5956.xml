<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY __reference.RFC.2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY __reference.RFC.4566 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4566.xml">
<!ENTITY __reference.RFC.5888 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5888.xml">
<!ENTITY __reference.RFC.3550 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3550.xml">
<!ENTITY __reference.RFC.3264 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3264.xml">
<!ENTITY __reference.RFC.4756 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4756.xml">
<!ENTITY __reference.RFC.3388 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3388.xml">
<!ENTITY __reference.RFC.5576 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5576.xml">
<!ENTITY __reference.RFC.5234 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc iprnotified="yes" ?>
<?rfc rfcedstyle="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc sortrefs="yes" ?>
<?rfc colonspace='yes' ?>
<?rfc tocindent='yes' ?>
<rfc category="std" number="5956"
     ipr="trust200902" obsoletes="4756">
  <front>
    <title abbrev="FEC Grouping Semantics in SDP">Forward Error Correction
    Grouping Semantics in&nbsp;the&nbsp;Session&nbsp;Description&nbsp;Protocol</title>

    <author fullname="Ali Begen" initials="A." surname="Begen">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street>181 Bay Street</street>

          <city>Toronto</city>

          <region>ON</region>

          <code>M5J 2T3</code>

          <country>Canada</country>
        </postal>

        <email>abegen@cisco.com</email>
      </address>
    </author>

    <date month="September" year="2010" />

    <workgroup>MMUSIC</workgroup>

    <abstract>
      <t>This document defines the semantics for grouping the associated
      source and FEC-based (Forward Error Correction) repair flows in the
      Session Description Protocol (SDP).  The semantics defined in this
      document are to be used with the SDP Grouping Framework
      (RFC&nbsp;5888). These semantics allow the description of grouping relationships between
      the source and repair flows when one or more source and/or repair flows
      are associated in the same group, and they provide support for additive
      repair flows.  SSRC-level (Synchronization Source) grouping semantics are
      also defined in this document for Real-time Transport Protocol (RTP)
      streams using SSRC multiplexing.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>Any application that needs a reliable transmission over an unreliable
      packet network has to cope with packet losses.  Forward Error Correction
      (FEC) is an effective approach that improves the reliability of the
      transmission, particularly in multicast and broadcast applications where
      the feedback from the receiver(s) is potentially limited.</t>

      <t>In a nutshell, FEC groups source packets into blocks and applies
      protection to generate a desired number of repair packets.  These repair
      packets may be sent on demand or independently of any receiver feedback.
      The choice depends on the FEC scheme, the packet loss characteristics of
      the underlying network, the transport scheme (e.g., unicast, multicast,
      and broadcast), and the application.  At the receiver side, lost packets
      can be recovered by erasure decoding, provided that a sufficient number
      of source and repair packets have been received.</t>

      <t>For example, one of the most basic FEC schemes is the parity codes,
      where an exclusive OR (XOR) operation is applied to a group of packets
      (i.e., source block) to generate a single repair packet.  At the receiver
      side, this scheme provides a full recovery if only one packet is lost
      within the source block and the repair packet is received.  There are
      various other ways of generating repair packets, possibly with different
      loss-recovery capabilities.</t>

      <t>The FEC Framework <xref target="FEC-FRAMEWK"></xref>
      outlines a general framework for using FEC codes in multimedia
      applications that stream audio, video, or other types of multimedia
      content.  The FEC Framework specification states that source and repair
      packets must be carried in different streams, which are referred to as
      the source and repair flows, respectively.  At the receiver side, the
      receivers should know which flows are the source flows and which ones
      are the repair flows.  The receivers should also know the exact
      association of the source and repair flows so that they can use the
      correct data to repair the original content in case there is a packet
      loss.  SDP <xref target="RFC4566"></xref> uses <xref
      target="RFC5888"></xref> and this RFC for this
      purpose.</t>

      <t>In order to provide applications more flexibility, the FEC Framework
      <xref target="FEC-FRAMEWK"></xref> allows a source flow
      to be protected by multiple FEC schemes, each of which requires an
      instance of the FEC Framework.  Thus, multiple instances of the FEC
      Framework may exist at the sender and the receiver(s).  Furthermore,
      within a single FEC Framework instance, multiple source flows may be
      grouped and protected by one or more repair flows.</t>

      <t>The FEC Framework requires the source and repair packets to be
      carried in different streams.  When the Real-time Transport Protocol
      (RTP)
      <xref target="RFC3550"></xref> is used to carry the source and repair
      streams, the FEC Framework recommends that each stream be carried in its
      own RTP session.  This provides flexibility in using FEC in a
      backward-compatible manner.  However, in some scenarios, it may be desirable for a single RTP
      session to carry multiple RTP streams via Synchronization
      Source (SSRC) multiplexing in order to reduce the port usage.  For such
      scenarios, appropriate grouping semantics are also required.</t>

      <t>A basic example scenario is shown in <xref
      target="fig_relationship1"></xref>.  Here, the source flow S1 is
      protected by the repair flow R1.  Also, the source flows S1 and S2 are
      grouped and protected together by the repair flow R2.</t>

      <t><figure anchor="fig_relationship1"
          title="Example scenario with two FEC Framework instances where R1 protects S1 and R2 protects the group of S1 and S2">
          <preamble></preamble>

          <artwork align="center"><![CDATA[      SOURCE FLOWS             | FEC FRAMEWORK INSTANCE #1
    | S1: Source Flow |--------| R1: Repair Flow
+---|                 
|   | S2: Source Flow 
|
+______________________________| FEC FRAMEWORK INSTANCE #2
                               | R2: Repair Flow
]]></artwork>
        </figure></t>

      <t>Grouping source flows before applying FEC protection may allow us to
      achieve a better coding performance.  As a typical scenario, suppose that
      source flows S1 and S2 in <xref target="fig_relationship1"></xref>
      correspond to the base and enhancement layers in a layered video
      content, respectively.  The repair flow R2 protects the combination of
      the base and enhancement layers for the receivers that receive both
      layers, whereas the repair flow R1 protects the base layer only, for the
      receivers that want the base layer only or that receive both layers but
      prefer FEC protection for the base layer only due to a bandwidth or any
      other limitation.</t>

      <t>The grouping semantics defined in this document offer the flexibility
      to determine how source streams are grouped together prior to applying
      FEC protection.  However, not all FEC schemes may support the full range
      of the possible scenarios (e.g., when the source streams carry different
      top-level media types such as audio and video).</t>

      <t>Using multiple FEC Framework instances for a single source flow
      provides flexibility to the receivers.  An example scenario is sketched
      in <xref target="fig_relationship2"></xref>.  Different instances may
      offer repair flows that are generated by different FEC schemes, and
      receivers choose to receive the appropriate repair flow(s) that they can
      support and decode.  Alternatively, different instances (whether or not they use
      the same FEC scheme) may use larger and smaller source block
      sizes, which accommodate the receivers that have looser and tighter
      latency requirements, respectively.  In addition, different instances may
      also provide FEC protection at different redundancy levels.  This is
      particularly useful in multicast scenarios where different receivers may
      experience different packet loss rates and each receiver can choose the
      repair flow that is tailored to its needs.</t>

      <t><figure anchor="fig_relationship2"
          title="Example scenario with two FEC Framework instances, each with a single repair flow protecting the same source flow S3">
          <preamble></preamble>

          <artwork align="center"><![CDATA[SOURCE FLOWS              | FEC FRAMEWORK INSTANCE #1
S3: Source Flow |---------| R3: Repair Flow 
                |
                |---------| FEC FRAMEWORK INSTANCE #2
                          | R4: Repair Flow]]></artwork>
        </figure></t>
    </section>

    <section title="Requirements Notation">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"></xref>.</t>
    </section>

    <section anchor="sec_issues"
             title="Requirements and Changes from RFC 4756">
      <t></t>

      <section anchor="fec_req" title="FEC Grouping Requirements">
        <t>As illustrated in the introduction and based on the FEC Framework
        <xref target="FEC-FRAMEWK"></xref>, the SDP grouping
        semantics for FEC must support the ability to indicate that:</t>

        <t><list style="numbers">
            <t>A given source flow is protected by multiple different FEC
            schemes.</t>

            <t>Multiple repair flows are associated with a given FEC
            scheme.</t>

            <t>Multiple source flows are grouped prior to applying FEC
            protection.</t>

            <t>One or more repair flows protect a group of source flows.</t>
          </list></t>
      </section>

      <section anchor="sec_assoc" title="Source and Repair Flow Associations">
        <t>The FEC grouping semantics defined in this document and the SDP
        "group" attribute defined in <xref
        target="RFC5888"></xref> are used to associate
        source and repair flows.  This document also specifies how the "group"
        attribute is used to group multiple repair flows with one or more
        source flows.</t>

        <t>Note that <xref target="RFC5888"></xref>
        obsoleted <xref target="RFC3388"></xref> to allow an "m" line
        identified by its "mid" attribute to appear in more than one "a=group"
        line using the same semantics.  With this change and the definitions
        contained in this document of the FEC grouping semantics, a sender can
        indicate the specific associations between the source and repair
        flows, and a receiver can determine which repair flow(s) protect which
        source flow(s).</t>

        <t>This document defines the FEC grouping semantics and obsoletes
        <xref target="RFC4756"></xref>.  Implementations compliant with this
        document MUST use the semantics introduced in Sections <xref
        target="sec_fecfr" format="counter"></xref> and <xref target="sec_rtp" format="counter"></xref>.  In
        addition to complying with the requirements defined in Sections <xref
        target="sec_fecfr" format="counter"></xref> and <xref target="sec_rtp" format="counter"></xref>,
        implementations are RECOMMENDED to support the "FEC" semantics
        specified in <xref target="sec_oldfec"></xref> for
        backward-compatibility reasons in scenarios described in <xref
        target="sec_oa_model"></xref>.</t>
      </section>

      <section title="Support for Additivity">
        <t>The FEC Framework <xref
        target="FEC-FRAMEWK"></xref> describes support for
        additive repair flows.  Additivity among the repair flows means that
        multiple repair flows may be decoded jointly to improve the recovery
        chances of the missing packets in a single or the same set of source
        flows.  Additive repair flows can be generated by the same FEC scheme
        or different FEC schemes.</t>

        <t>For example, in <xref target="fig_relationship3"></xref>, the
        repair flows R5 and R6 may be additive within the FEC Framework
        instance #1.  Alternatively, all three repair flows R5, R6, and R7
        could be additive, too.</t>

        <t><figure anchor="fig_relationship3"
            title="Example scenario with two FEC Framework instances where two repair flows in the first instance and a single repair flow in the second instance protect the same source flow S4">
            <preamble></preamble>

            <artwork align="center"><![CDATA[SOURCE FLOWS              | FEC FRAMEWORK INSTANCE #1
S4: Source Flow |---------| R5: Repair Flow 
                |         | R6: Repair Flow
                |
                |---------| FEC FRAMEWORK INSTANCE #2
                          | R7: Repair Flow
]]></artwork>
          </figure></t>

        <t>This document defines the mechanisms to support additive repair
        flows that were not included in <xref target="RFC4756"></xref>.</t>
      </section>
    </section>

    <section title="FEC Grouping">
      <section anchor="sec_fecfr"
               title="&quot;FEC-FR&quot; Grouping Semantics">
        <t>Each "a=group" line is used to indicate an association relationship
        between the source and repair flows.  The flows included in one
        "a=group" line are called an FEC group.  If there is more than one
        repair flow included in an FEC group, these repair flows MUST be considered to be
        additive.  Repair flows that are not additive MUST be indicated in
        separate FEC groups.  However, if two (or more) repair flows are
        additive in an FEC group, it does not necessarily mean that these
        repair flows will also be additive in any other FEC group.  Generally,
        in order to express multiple relations between the source and repair
        flows, each source and repair flow MAY appear in more than one FEC
        group.</t>

        <t>Using the framework in <xref
        target="RFC5888"></xref>, this document defines
        "FEC-FR" as the grouping semantics to indicate support for the FEC
        Framework features.</t>

        <t>The "a=group:FEC-FR" semantics MUST be used to associate the source
        and repair flows except when the source and repair flows are specified
        in the same media description, i.e., in the same "m" line (see <xref
        target="sec_rtp"></xref>).  Note that additivity is not necessarily a
        transitive relationship.  Thus, each set of additive repair flows MUST
        be stated explicitly in SDP, as illustrated in the example below.</t>
      </section>

      <section anchor="sec_sdp" title="SDP Example">
        <t>For the scenario sketched in <xref
        target="fig_relationship1"></xref>, we need to write the following
        SDP:</t>

        <t><figure>
            <preamble></preamble>

            <artwork><![CDATA[     v=0
     o=ali 1122334455 1122334466 IN IP4 fec.example.com
     s=FEC Grouping Semantics
     t=0 0
     a=group:FEC-FR S1 R1
     a=group:FEC-FR S1 S2 R2
     m=video 30000 RTP/AVP 100
     c=IN IP4 233.252.0.1/127
     a=rtpmap:100 MP2T/90000
     a=mid:S1
     m=video 30000 RTP/AVP 101
     c=IN IP4 233.252.0.2/127
     a=rtpmap:101 MP2T/90000
     a=mid:S2 
     m=application 30000 RTP/AVP 110
     c=IN IP4 233.252.0.3/127
     a=rtpmap:110 1d-interleaved-parityfec/90000
     a=fmtp:110 L=5; D=10; repair-window=200000
     a=mid:R1
     m=application 30000 RTP/AVP 111
     c=IN IP4 233.252.0.4/127
     a=rtpmap:111 1d-interleaved-parityfec/90000
     a=fmtp:111 L=10; D=10; repair-window=400000
     a=mid:R2
]]></artwork>
          </figure></t>

        <t>In this example, the source and repair flows are carried in their
        own RTP sessions, and the grouping is achieved through the
        <vspace />"a=group:FEC-FR" lines.</t>

        <t>For the additivity example, let us consider the scenario sketched
        in <xref target="fig_relationship3"></xref>.  Suppose that repair flows
        R5 and R6 are additive but repair flow R7 is not additive with any of
        the other repair flows.  In this case, we must write</t>

        <t><figure>
            <artwork><![CDATA[     a=group:FEC-FR S4 R5 R6
     a=group:FEC-FR S4 R7
]]></artwork>
          </figure></t>

        <t>If none of the repair flows is additive, we must write</t>

        <t><figure>
            <artwork><![CDATA[     a=group:FEC-FR S4 R5
     a=group:FEC-FR S4 R6
     a=group:FEC-FR S4 R7
]]></artwork>
          </figure></t>

        <t></t>
      </section>

      <section anchor="sec_rtp"
               title="FEC Grouping for SSRC-Multiplexed RTP Streams">
        <t><xref target="RFC5576"></xref> defines an SDP media-level
        attribute, called "ssrc-group", for grouping the RTP streams that are
        SSRC multiplexed and carried in the same RTP session.  The grouping is
        based on the Synchronization Source (SSRC) identifiers.  Since
        SSRC-multiplexed RTP streams are defined in the same "m" line, the
        "group" attribute cannot be used.</t>

        <t>This section specifies how FEC is applied to source and repair
        flows for SSRC-multiplexed streams using the "ssrc-group" attribute
        <xref target="RFC5576"></xref>.  This section also specifies how the
        additivity of the repair flows is expressed for the SSRC-multiplexed
        streams.</t>

        <t>The semantics of "FEC-FR" for the "ssrc-group" attribute are the
        same as those defined for the "group" attribute, except that the SSRC
        identifiers are used to designate the FEC grouping associations:
        a=ssrc-group:FEC-FR *(SP ssrc-id) <xref target="RFC5576"></xref>.</t>

        <t>The SSRC identifiers for the RTP streams that are carried in the
        same RTP session MUST be unique per <xref target="RFC3550"></xref>.
        However, the SSRC identifiers are not guaranteed to be unique among
        different RTP sessions.  Thus, the "ssrc-group" attribute MUST only be
        used at the media level <xref target="RFC5576"></xref>.</t>

        <t>Let us consider the following scenario where there are two source
        flows (e.g., one video and one audio) and a single repair flow that
        protects only one of the source flows (e.g., video).  Suppose that all
        these flows are separate RTP streams that are SSRC multiplexed in the
        same RTP session.</t>

        <t><figure anchor="fig_relationship4"
            title="Example scenario with one FEC Framework instance where a single repair flow protects only one of the source flows">
            <preamble></preamble>

            <artwork align="center"><![CDATA[      SOURCE FLOWS             | FEC FRAMEWORK INSTANCE #1
      S5: Source Flow |--------| R8: Repair Flow           
      S6: Source Flow ]]></artwork>
          </figure></t>

        <t>The following SDP describes the scenario sketched in <xref
        target="fig_relationship4"></xref>.</t>

        <t><figure>
            <preamble></preamble>

            <artwork><![CDATA[     v=0
     o=ali 1122334455 1122334466 IN IP4 fec.example.com
     s=FEC Grouping Semantics for SSRC Multiplexing
     t=0 0
     m=video 30000 RTP/AVP 100 101 110
     c=IN IP4 233.252.0.1/127
     a=rtpmap:100 JPEG/90000
     a=rtpmap:101 L16/32000/2
     a=rtpmap:110 1d-interleaved-parityfec/90000
     a=fmtp:110 L=5; D=10; repair-window=200000
     a=ssrc:1000 cname:fec@example.com
     a=ssrc:1010 cname:fec@example.com
     a=ssrc:2110 cname:fec@example.com
     a=ssrc-group:FEC-FR 1000 2110
     a=mid:Group1
]]></artwork>
          </figure></t>

        <t>Note that in actual use, SSRC values, which are random 32-bit
        numbers, may be much larger than the ones shown in this example.  Also,
        note that before receiving an RTP packet for each stream, the receiver
        cannot know which SSRC identifier is associated with which payload
        type.</t>

        <t>The additivity of the repair flows is handled in the same way as
        described in <xref target="sec_sdp"></xref>.  In other words, the
        repair flows that are included in an "a=ssrc-group" line MUST be
        additive.  Repair flows that are not additive MUST be indicated in
        separate "a=ssrc-group" lines.</t>
      </section>

      <section anchor="sec_oldfec" title="&quot;FEC&quot; Grouping Semantics">
        <t>This document deprecates the usage of the "FEC" semantics.  Sessions
        negotiated between two endpoints implementing this specification MUST
        use the "FEC-FR" semantics and not the "FEC" semantics.  <xref
        target="sec_oa_model"></xref> details how an implementation supporting
        this specification detects peers that do not support this
        specification (based on their SDP answer to the initial offer).  When
        this occurs, the offering implementation SHOULD initiate a new offer
        using the "FEC" semantics as defined in this section.</t>

        <t>The "FEC" grouping semantics had been originally introduced in
        <xref target="RFC4756"></xref>.  The "FEC" semantics used the "a=group"
        line from <xref target="RFC3388"></xref> to form an FEC group to
        indicate the association relationship between the source and repair
        flows.</t>

        <t>In the "FEC" semantics, a source or repair flow can only appear in
        a single "a=group:FEC" line.  Thus, all the source and repair flows
        that are somehow related to each other have to be listed in the same
        "a=group:FEC" line.  For example, for the scenario sketched in <xref
        target="fig_relationship1"></xref>, we have to write "a=group:FEC S1
        S2 R1 R2" regardless of which repair flows protect which particular
        source flows.  Similarly, for the scenario sketched in <xref
        target="fig_relationship3"></xref>, we have to write "a=group:FEC S4
        R5 R6 R7" regardless of which repair flows are additive.  However, the
        interpretation of these lines would be ambiguous.</t>

        <t>In certain simple scenarios, such as where there is one source flow
        and one repair flow, these limitations may not be a concern.  In
        Offer/Answer model scenarios, when the "FEC-FR" semantics are not
        understood by the answerer, the "FEC" semantics can be offered,
        as long as the "FEC" semantics provide an exact association among
        the source and repair flows and do not create any ambiguity.  See <xref
        target="sec_oa_model"></xref> for details.</t>
      </section>

      <section anchor="sec_oa_model"
               title="SDP Offer/Answer Model and RFC 4756 Backward-Compatibility Considerations">
        <t>When offering FEC grouping using SDP in an Offer/Answer model <xref
        target="RFC3264"></xref>, the following considerations apply.</t>

        <t>A node that is receiving an offer from a sender may or may not
        understand line grouping.  It is also possible that the node
        understands line grouping but it does not understand the "FEC-FR"
        semantics.  From the viewpoint of the sender of the offer, these cases
        are indistinguishable.</t>

        <t>Implementations are RECOMMENDED to support the "FEC" semantics
        specified in <xref target="sec_oldfec"></xref> for
        backward-compatibility reasons.  If the sender of the offer
        supports the "FEC"
        semantics, it SHOULD fall back to using the "FEC" semantics when the
        "FEC-FR" semantics are not understood by the node.</t>

        <t>When a node is offered a session with the "FEC-FR" grouping
        semantics, but it does not support line grouping or the FEC grouping
        semantics, as per <xref target="RFC5888"></xref>,
        the node responds to the offer with one of the following:</t>

        <t><list style="symbols">
            <t>An answer that ignores the grouping attribute.<vspace
            blankLines="1" />In this case, if the original sender of the offer
            <list style="symbols">
                <t>supports the "FEC" semantics described in <xref
                target="sec_oldfec"></xref>, it MUST first check whether or not using
                the "FEC" semantics will create any ambiguity.  If using
                the "FEC" semantics still provides an exact association among
                the source and repair flows, the sender SHOULD send a new
                offer using the "FEC" semantics.  However, if an exact
                association cannot be described, it MUST send a new offer
                without FEC.</t>

                <t>does not support the "FEC" semantics described in <xref
                target="sec_oldfec"></xref>, it MUST send a new offer without
                FEC.</t>
              </list></t>

            <t>A refusal to the request (e.g., 488 Not Acceptable Here or
            606 Not Acceptable in SIP).<vspace blankLines="1" />In this case,
            if the original sender of the offer<list style="symbols">
                <t>supports the "FEC" semantics and still wishes to
                establish the session, it MUST first check whether or not using the
                "FEC" semantics will create any ambiguity.  If using the
                "FEC" semantics still provides an exact association among the
                source and repair flows, the sender SHOULD send a new offer
                using the "FEC" semantics.  However, if an exact association
                cannot be described, it SHOULD send a new offer without
                FEC.</t>

                <t>does not support the "FEC" semantics described in <xref
                target="sec_oldfec"></xref>, it SHOULD send a new offer
                without FEC.</t>
              </list></t>
          </list></t>

        <t>In both cases described above, when the sender of the offer sends a
        new offer with the "FEC" semantics, and the node understands it, the
        session will be established, and the rules pertaining to the "FEC"
        semantics will apply.</t>

        <t>As specified in <xref target="RFC5888"></xref>,
        if the node does not understand the "FEC" semantics, it responds to
        the offer with either (1) an answer that ignores the grouping
        attribute or (2) a refusal to the request.  In the first case,
        the sender must send a new offer without FEC.  In the second case, if
        the sender still wishes to establish the session, it should retry the
        request with an offer without FEC.</t>
      </section>
    </section>

    <section anchor="sec_security_considerations"
             title="Security Considerations">
      <t>There is a weak threat for the receiver that the FEC grouping can be
      modified to indicate FEC relationships that do not exist.  Such attacks
      may result in failure of FEC to protect, and/or to mishandle, other media
      payload streams.  The receiver SHOULD do an integrity check on SDP and
      follow the security considerations of SDP <xref target="RFC4566"></xref>
      to trust only SDP from trusted sources.</t>
    </section>

    <section title="IANA Considerations">
      <t>This document registers the following semantics with IANA in
      the "Semantics for the "group" SDP Attribute" registry under
      SDP Parameters:</t>

      <t><figure>
          <preamble></preamble>

          <artwork><![CDATA[
Semantics                              Token   Reference 
-------------------------------------  ------  ---------
Forward Error Correction (Deprecated)  FEC     [RFC5956]
Forward Error Correction FR            FEC-FR  [RFC5956]
]]></artwork>
        </figure></t>

      <t>This document also registers the following semantics with IANA in
      the "Semantics for the "ssrc-group" SDP Attribute" registry
      under SDP Parameters:</t>

      <t><figure>
          <preamble></preamble>

          <artwork><![CDATA[
Token    Semantics                      Reference
-------  -----------------------------  ---------
FEC-FR   Forward Error Correction FR    [RFC5956]

]]></artwork>
        </figure></t>
    </section>

    <section title="Acknowledgments">
      <t>Some parts of this document are based on <xref
      target="RFC4756"></xref>.  Thus, the author would like to thank those who
      contributed to <xref target="RFC4756"></xref>.  Also, thanks to Jonathan
      Lennox, who has contributed to <xref target="sec_rtp"></xref>; and
      Jean&nbhy;Francois Mule, who has reviewed this document in great detail
      and suggested text edits.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      &__reference.RFC.2119;

      &__reference.RFC.4566;

      &__reference.RFC.5888;

      &__reference.RFC.3264;

      &__reference.RFC.3550;

      &__reference.RFC.5576;
    </references>

    <references title="Informative References">

   <reference anchor='FEC-FRAMEWK'>
   <front>
   <title>Forward Error Correction (FEC) Framework</title>

   <author initials='M' surname='Watson' fullname='Mark Watson'>
       <organization />
   </author>

   <date month='September' year='2010' />

   </front>

   <seriesInfo name='Work in' value='Progress' />
   </reference>

      &__reference.RFC.3388;

      &__reference.RFC.4756;
    </references>
  </back>
</rfc>
