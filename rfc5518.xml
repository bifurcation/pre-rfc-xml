<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 PUBLIC ''   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml'>
<!ENTITY RFC2119 PUBLIC ''   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
<!ENTITY RFC2308 PUBLIC ''   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2308.xml'>
<!ENTITY RFC3864 PUBLIC ''   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3864.xml'>
<!ENTITY RFC4406 PUBLIC ''   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4406.xml'>
<!ENTITY RFC4407 PUBLIC ''   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4407.xml'>
<!ENTITY RFC4408 PUBLIC ''   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4408.xml'>
<!ENTITY RFC4870 PUBLIC ''   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4870.xml'>
<!ENTITY RFC4871 PUBLIC ''   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4871.xml'>
<!ENTITY RFC5322 PUBLIC ''   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5322.xml'>
<!ENTITY RFC5234 PUBLIC ''   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml'>
]>

<rfc number="5518" 
	category="std">

<?rfc strict='no'?>
<?rfc toc='yes'?>
<?rfc linkmailto='no'?>
<?rfc rfcedstyle='yes'?>
<?rfc subcompact='no'?>
<?rfc symrefs='yes'?>

<front>
<title abbrev='VBR'>Vouch By Reference</title>
	<author initials='P.' surname='Hoffman' fullname='Paul Hoffman'>
		<organization>Domain Assurance Council</organization>
		<address>
			<email>paul.hoffman@domain-assurance.org</email>
		</address>
	</author>
	<author initials='J.' surname='Levine' fullname='John Levine'>
		<organization>Domain Assurance Council</organization>
		<address>
			<email>john.levine@domain-assurance.org</email>
		</address>
	</author>
	<author initials='A.' surname='Hathcock' fullname='Arvel Hathcock'>
		<organization>Alt-N Technologies</organization>
		<address>
			<email>arvel.hathcock@altn.com</email>
		</address>
	</author>
	<date month='April' year='2009'/>


<keyword>VBR</keyword>
<keyword>DKIM</keyword>
<keyword>SenderID</keyword>
<keyword>DK</keyword>
<keyword>reputation</keyword>

<note title="">
<t>
This document may contain material from IETF Documents or IETF
Contributions published or made publicly available before November 10,
2008.  The person(s) controlling the copyright in some of this material
may not have granted the IETF Trust the right to allow modifications
of such material outside the IETF Standards Process.  Without
obtaining an adequate license from the person(s) controlling the
copyright in such materials, this document may not be modified outside
the IETF Standards Process, and derivative works of it may not be
created outside the IETF Standards Process, except to format it for
publication as an RFC or to translate it into languages other than
English.
</t>
</note>
	<abstract>
		<t>This document describes the Vouch By Reference (VBR)
		protocol. VBR is a protocol for adding third-party certification
		to email. It permits independent third parties to certify the
		owner of a domain name that is associated with received
		mail.</t>
	</abstract>
</front>

<middle>

<section title='Introduction'>

<t>Vouch By Reference, or VBR, is a protocol for adding third-party
certification to email. Specifically, VBR permits independent third parties to certify the owner
of a domain name that is associated with received mail. VBR may be
performed anywhere along the email transit path, by any capable
receiving module, either within the handling service or by end-user
software.</t>

<t>VBR accomplishes this with a two-part protocol:</t>

<t><list style='symbols'>

<t>In the first part, a sender affixes VBR information to email
messages. The VBR information says which domain certification services
the sender believes will vouch for email traffic associated with that
sender.</t>

<t>In the second part, the receiver queries one or more certification
services to obtain information about the identity that has been
associated with a received message. This latter protocol uses the DNS to
distribute the certification information.</t>

</list></t>

<t>A sender provides certification attestations through the use of a
new RFC 5322 (<xref target='RFC5322'/>) mail header field, "VBR-Info:".
This header field contains the names of services that the sender claims
will vouch for it, and the particular type of content of the
message. A
queried, third-party, DNS-based certification service can respond with a
list of the types of message content it will vouch for, such as
"transactional mail from somebank.example" and/or "all mail from
anotherbank.example".</t>

<t>A prerequisite for successful VBR operation is validation of the
identity associated with the message. VBR is based on the use of domain
names as identifiers, and permits multiple methods of obtaining and
validating domain names. The validation methods are described in the
"Obtaining a Useful Domain Name" section below.</t>

<t>The sender performs two steps:</t>

<t><list style='numbers'>

<t>Adds a VBR-Info header field to its message</t>

<t>Protects the message, as appropriate</t>

</list></t>

<t>If a recipient uses the results of vouching to adjust spam scores
on incoming email, that recipient is placing a great deal of
operational trust and power in the vouching service.  Therefore,
recipients need to select such services with care.  Further, such
recipients may want to select more than one vouching service in order
to avoid a single point of failure for setting spam scores.</t>

<section title='Definitions'>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
"OPTIONAL" in this document are to be interpreted as described in
<xref target='RFC2119'/>.</t>

</section>

</section>

<section title='Use of the VBR-Info Header Field'>

<t>A sender uses VBR to indicate which domain certification services the sender
believes will vouch for a particular piece of mail. The certification
service uses VBR to state for which signatures it will vouch. This
protocol uses the DNS to distribute the certification information.</t>

<t>A message may have multiple VBR-Info header fields. This means that, in
the terminology of RFC 5322, VBR-Info is a "trace header field" and SHOULD be added
at the top of the header fields.</t>

<t>The content of the VBR-Info header field is a list of three elements:</t>

<t><list style='symbols'>

<t>The accountable domain</t>

<t>The type of content in the message</t>

<t>A list of domain names of services that the sender expects to vouch
for that kind of content</t>

</list></t>

<t>The accountable domain is given as md= followed by a domain name. The
content type is given as mc= followed by a string; the defined values of
that string are found below. The list of services is given as mv=
followed by a colon-separated list of domain names.</t>

<t>The formal syntax of the header field is defined in <xref target="VBR-Info"/>.</t>

</section>

<section title='Validation Process'>

<t>A message receiver uses VBR to determine certification status by
following these steps:</t>

<t><list style='numbers'>

<t>Extracts the domain to certify and the type of message content</t>

<t>Verifies legitimate use of that domain using one or more authentication
mechanisms as described herein</t>

<t>Obtains the name of a vouching service that it trusts, either from among
the set supplied by the sender or from a locally defined set of preferred vouching services</t>

<t>Queries the vouching service to determine whether the vouching service actually
vouches for that type of content for that domain.</t>

</list></t>

</section>

<section anchor="VBR-Info" title='The VBR-Info Header Field'>

<t>The VBR-Info header field has the following format:</t>

<figure><artwork><![CDATA[
   VBR-Info: md=<domain>; mc=<type-string>; mv=<certifier-list>;
]]></artwork></figure>

<t>where &lt;domain&gt; is the domain for which vouching is offered,
&lt;type-string&gt; is the content type of the message, and
&lt;certifier-list&gt; is a list of domain names of certification
providers that the sender asserts will vouch for this particular
message. The structure of the &lt;certifier-list&gt; is one or more
domain names with a colon (":") between each. The elements
in the &lt;domain&gt;, &lt;type-string&gt;,
and &lt;certifier-list&gt; must not have any white space in them.</t>

<t>For example, assume that the signer has two companies that are willing
to vouch for its transactional notices: certifier-a.example and
certifier-b.example. The signer would add the following to the header of its
outgoing message.</t>

<figure><artwork><![CDATA[
   VBR-Info: md=somebank.example; mc=transaction;
       mv=certifier-a.example:certifier-b.example;
]]></artwork></figure>

<t>All three header parameters in the VBR-Info header are mandatory. In particular,
there is no default for the md= domain.</t>

<t>Upper and lowercase characters in a VBR-Info header field are equivalent,
although conventionally the contents are all in lower case. For upward
compatibility, verifiers MUST accept the fields in any order and
SHOULD ignore any fields other than the three defined here.</t>

<t>If a message has more than one VBR-Info header field, verifiers SHOULD
check each in turn or in parallel until either a satisfactory certifier
is found or all the header fields have been checked. All of the VBR-Info
header fields in a single message MUST have identical mc= values.</t>

<section title="Syntax of VBR-Info Header Fields">

<t>In the ABNF below, the ALPHA and DIGIT tokens are
imported from <xref target="RFC5234" />, and the FWS and domain-name
tokens are imported from <xref target="RFC4871" />.</t>

<figure><artwork><![CDATA[
vbr-info-header =  "VBR-Info:" 1*([FWS] element [FWS] ";")
element = md-element / mc-element / mv-element

md-element = "md=" [FWS] domain-name

mc-element = "mc=" [FWS] type-string
type-string = "all" / "list" / "transaction"

mv-element = "mv=" [FWS] certifier-list
certifier-list = domain-name *(":" domain-name)
]]></artwork></figure>

</section>

</section>

<section title='DNS Query'>

<t>When a recipient wants to check whether a certification claim is valid, it
compares the list in the message to the list of services it trusts. For
each service that is on the intersection of the two lists, it marshals a
domain name to look up that consists of the following DNS labels (from
left to right):</t>

<t><list style='symbols'>

<t>the domain name that asserts it can be certified</t>

<t>_vouch (a string literal)</t>

<t>the host name of the vouching service</t>

</list></t>

<t>This domain name is queried for a DNS TXT record. The recipient
looks up the domain name in the DNS in the exact same manner it looks
up all other domain names.</t>

<t>For example, if a message signed by somebank.example contained the
VBR-Info header field above, the receiver might look up either or both of the
following names, depending on which vouching service it trusts:</t>

<figure><artwork><![CDATA[
   somebank.example._vouch.certifier-b.example
   somebank.example._vouch.certifier-a.example
]]></artwork></figure>

<t>If the DNS TXT record exists, it contains a space-delimited list of all
the types that the service certifies, given as lowercase ASCII.
For example, the contents of
the TXT record might be:</t>

<figure><artwork><![CDATA[
   transaction list
]]></artwork></figure>

<t>In the example above, the receiver checks whether or not either
certifier vouches for "transaction" mail. That would be indicated by
either of the following types: "all" or "transaction" ("all"
indicates that the certifier vouches for all message types sent by the
domain in question). If either of those types appear in either TXT
record, the certifier has vouched for the validity of the message. Of course, the recipient needs to ignore
services that it does not trust; otherwise, a bad actor could just add
an authority that it has set up so that it can vouch for itself.</t>

<t>The name for the label _vouch was chosen because any domain name that
includes it as one of its labels cannot be a valid host name. There will
never be any accidental overlap with a valid host name. Further, it is
safe to create a rule that says that a TXT DNS record that comes from a
domain name that includes a _vouch label will always have the structure
defined in this document.</t>

<t>If the RDATA in the TXT record contains multiple
character-strings (as defined in Section 3.3 of <xref target="RFC1035"/>), the code
handling that reply from DNS MUST assemble all of these marshaled
text blocks into a single one before any syntactical verification
takes place.</t>

<t>Verifiers MUST then check that the TXT record consists of strings of
lowercase letters separated by spaces, and discard any records not in
that format.  This defends against misconfigured
records and irrelevant records synthesized from DNS wildcards.</t>

<t>The VBR record MUST have only one TXT record.</t>

<t>This query method relies on the considerable advantages of existing DNS
efficiencies, reliability, and experience. The lookup is very efficient,
and certifiers can add and delete client records as quickly as they
want. The lookup also leverages the DNS's negative caching
(<xref target='RFC2308'/>).</t>

</section>

<section title='Types of Message Content'>

<t>This section describes the types of content for which a
certifier can vouch.
While the rest of the VBR specification is mostly technical and precise,
describing the types of contents in mail messages is inherently open to
interpretation. Thus, this section makes distinctions as specifically
as possible, but the reader needs to understand that these semantic
definitions can be interpreted in very different ways by different
people.</t>

<t>
Note that the value in the mc= element is self-asserted. The purpose of
this element is for auditing. There will likely be cases where a
certifier will vouch for one type of a sender's mail (such as
transactional mail) but not another type (such as advertising). A sender
who cannot get anyone to certify its advertising mail, but has a
certifier for its transactional mail, might be tempted to cheat and
mislabel it as transactional. The mc= element creates an the audit trail
to help their certifiers catch such cheating and allow the removal of
the certification for the transactional mail.
</t>

<t>Three types of content are defined.</t>

<section title='All'>

<t>"all" means all mail from the sender.</t>

</section>

<section title='List'>

<t>"list" is the category for email sent to multiple recipients where
each piece of mail is identical or is very similar to the others.</t>

</section>

<section title='Transaction'>

<t>"transaction" is the category for transactional messages. This is a
response to a specific action of the user, or a notice about an event
in the user's account at the sender.</t>

</section>

</section>

<section title='Obtaining a Useful Domain Name'>

<t>VBR relies on having a domain name that specifies a party that is
accountable for the message. This requires obtaining the domain name
and possessing a strong basis for believing that the use of the domain
name is valid, that is, that it has not been spoofed.</t>

<t>There are different ways to achieve this and this section discusses the
allowed mechanisms.
Senders SHOULD use Domain Keys Identified Mail (DKIM) (and MAY use DomainKeys, Sender Policy Framework (SPF), or SenderID) to give an
accountable identity for the sender.
</t>

<section title='DKIM'>

<t>DomainKeys Identified Mail (DKIM), <xref target='RFC4871'/>,
defines an accountable identity by associating a domain name with the
message. It provides
assurance that the association is valid through a public-key-based
authentication mechanism.</t>

<t><list style='symbols'>

<t>When DKIM is the validation mechanism, VBR's md= MUST match the
domain name taken from one of the DKIM-Signature header fields.  If the
DKIM signature contains an i= field, the domain name from that field is
used; otherwise, the domain name from the DKIM signature d= field is
used.</t>


<t>The VBR-Info header field SHOULD be included in the set of header
fields protected by DKIM to prevent a malicious party from changing
the contents of the VBR-Info header field or adding bogus VBR-Info header fields.</t>

<t>The VBR-Info header field SHOULD be added in the header
immediately below the corresponding DKIM-Signature header field.</t>

</list></t>

<t>If the DKIM signature validates, the domain name taken from that
signature is valid for use with VBR.</t>

</section>

<section title='DomainKeys'>

<t>DomainKeys (DK), <xref target='RFC4870'/>,
defines an accountable identity by associating a domain
name with the message in the d= tag of the DomainKey-Signature
header field. It provides assurance that the association is
valid through a public-key-based authentication mechanism.</t>

<t><list style='symbols'>

<t>When DomainKeys is the validation mechanism, VBR's md= MUST be the
same value as the domain name found in the DomainKey-Signature d=
parameter.</t>

<t>The VBR-Info header field SHOULD be included in the set of header
fields protected by DK to prevent a malicious party from changing
the contents of the VBR-Info header field or adding bogus VBR-Info
header fields.</t>

<t>The VBR-Info header field SHOULD be added immediately below
the corresponding DomainKey-Signature header field.</t>

</list></t>

<t>If the DomainKeys signature validates, the domain in the d= tag
is valid for use with VBR.</t>

</section>

<section title='SPF'>

<t>Sender Policy Framework (SPF), <xref target='RFC4408'/>, defines an
accountable identity by using an existing message address and querying
the DNS to discover whether it is valid for SPF use.</t>

<t>When SPF is the validation mechanism, VBR's md= MUST be the same value
as the domain name in the &lt;reverse-path&gt; address that is the first
parameter to the SMTP MAIL command.</t>

<t>A domain is valid for use with VBR only when the SPF process produces a "pass" result.</t>

</section>

<section title='Sender ID'>

<t>Sender ID, <xref target='RFC4406'/>, defines an accountable identity
by using an existing message address known as the Purported Responsible
Address (<xref target='RFC4407'/>) and querying the DNS to discover whether it is valid for Sender
ID use.</t>

<t>When Sender ID is the validation mechanism, VBR's md= MUST be the same
value as the domain name in the Purported Responsible Address in the
message.</t>

<t>A domain is valid for use with VBR only when the Sender ID process produces a "pass" result.</t>

</section>

</section>

<section title='Security Considerations'>

<t>VBR is used to allow users to trust independent third parties to
certify the owner of a domain name that is associated with received
mail. The party validating the mail might use that trust relationship to
perform actions that affect the security of their system.</t>

<t>The receiver of a message with a VBR-Info header field MUST ignore
certifiers that it does not trust; otherwise, a bad actor could just add
an authority that it has set up so that it can vouch for itself.</t>

<t>Implementations SHOULD limit the number of VBR-Info header fields they
process in a single message in order to protect themselves from a
make-work or denial-of-service attack.</t>

</section>

<section title='IANA Considerations'>

<t>IANA registered the VBR-Info header field in the Message
Header Fields Registry (<xref target='RFC3864'/>) as follows:</t>

<t>Header field name: VBR-Info</t>

<t>Applicable protocol: mail</t>

<t>Status: standard</t>

<t>Author/Change controller: IETF</t>

<t>Specification document(s): RFC 5518</t>

<t>Related information: none</t>

</section>

</middle>

<back>

<references title='Normative References'>

&RFC2119;
&RFC5322;
&RFC5234;

</references>

<references title='Informative References'>

&RFC1035;
&RFC2308;
&RFC3864;
&RFC4406;
&RFC4407;
&RFC4408;
&RFC4870;
&RFC4871;

</references>

<section title='Acknowledgements'>

<t>Many members of the Domain Assurance Council contributed to the
design of the protocol and the wording of this document. In addition,
constructive suggestions were received from Jim Fenton and
Murray Kucherawy.</t>

</section>
</back>
</rfc>
