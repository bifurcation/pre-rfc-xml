<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>


<rfc number="7588"
     category="info" 
     submissionType="IETF"
     consensus="yes"
     ipr="trust200902"
     >

  <front>
    <title abbrev="GRE Fragmentation">A Widely Deployed Solution to the
    Generic Routing Encapsulation (GRE) Fragmentation Problem</title>

    <author fullname="Ron Bonica" initials="R." surname="Bonica">
      <organization>Juniper Networks</organization>

      <address>
        <postal>
          <street>2251 Corporate Park Drive</street>

          <city>Herndon</city>

          <code>20170</code>

          <region>Virginia</region>

          <country>United States</country>
        </postal>

        <email>rbonica@juniper.net</email>
      </address>
    </author>

    <author fullname="Carlos Pignataro" initials="C." surname="Pignataro">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>7200-12 Kit Creek Road</street>

          <city>Research Triangle Park</city>

          <region>North Carolina</region>

          <code>27709</code>

          <country>United States</country>
        </postal>

        <email>cpignata@cisco.com</email>
      </address>
    </author>

    <author fullname="Joe Touch" initials="J." surname="Touch">
      <organization>USC/ISI</organization>

      <address>
        <postal>
          <street>4676 Admiralty Way</street>

          <city>Marina del Rey</city>

          <region>California</region>

          <code>90292-6695</code>

          <country>United States</country>
        </postal>

        <phone>+1 (310) 448-9151</phone>

        <email>touch@isi.edu</email>

        <uri>http://www.isi.edu/touch</uri>
      </address>
    </author>

    <date month="July" year="2015"/>

    <area>Internet Area</area>

    <workgroup>Intarea Working Group</workgroup>

    <keyword>GRE</keyword>

    <keyword>MTU</keyword>

    <keyword>Fragmentation</keyword>

    <abstract>
      <t>This memo describes how many vendors have solved the Generic Routing
      Encapsulation (GRE) fragmentation problem. The solution described herein
      is configurable. It is widely deployed on the Internet in its default
      configuration.</t>
    </abstract>
  </front>

  <middle>

    <section anchor="Problem" title="Introduction">
      <t>Generic Routing Encapsulation (GRE) <xref target="RFC2784"/> <xref
      target="RFC2890"/> can be used to carry any network-layer protocol over
      any network-layer protocol. GRE has been implemented by many vendors and
      is widely deployed in the Internet.</t>

      <t>The GRE specification does not describe fragmentation procedures.
      Lacking guidance from the specification, vendors have developed
      implementation-specific fragmentation solutions. A GRE tunnel will
      operate correctly only if its ingress and egress nodes support
      compatible fragmentation solutions. <xref target="RFC4459"/> describes
      several fragmentation solutions and evaluates their relative merits.</t>

      <t>This memo reviews the fragmentation solutions presented in <xref
      target="RFC4459"/>. It also describes how many vendors have solved the
      GRE fragmentation problem. The solution described herein is
      configurable and has been widely deployed in its default
      configuration.</t>

      <t>This memo addresses point-to-point unicast GRE tunnels that carry
      IPv4, IPv6, or MPLS payloads over IPv4 or IPv6. All other tunnel types
      are beyond the scope of this document.</t>

      <section anchor="Terminology" title="Terminology">
        <t>The following terms are specific to GRE:<list style="symbols">

            <t>GRE delivery header - an IPv4 or IPv6 header whose source
            address represents the GRE ingress node and whose destination
            address represents the GRE egress node. The GRE delivery header
            encapsulates a GRE header.</t>

            <t>GRE header - the GRE protocol header. The GRE header is
            encapsulated in the GRE delivery header and encapsulates the GRE
            payload.</t>

            <t>GRE payload - a network-layer packet that is encapsulated by
            the GRE header. The GRE payload can be IPv4, IPv6, or MPLS.
            Procedures for encapsulating IPv4 in GRE are described in <xref
            target="RFC2784"/> and <xref target="RFC2890"/>. Procedures for
            encapsulating IPv6 in GRE are described in <xref
            target="IPv6-GRE"/>. Procedures for
            encapsulating MPLS in GRE are described in <xref
            target="RFC4023"/>. While other protocols may be delivered over
            GRE, they are beyond the scope of this document.</t>

            <t>GRE delivery packet - a packet containing a GRE delivery
            header, a GRE header, and the GRE payload.</t>

            <t>GRE payload header - the IPv4, IPv6, or MPLS header of the GRE
            payload.</t>

            <t>GRE overhead - the combined size of the GRE delivery header and
            the GRE header, measured in octets.</t>
          </list>The following terms are specific to MTU discovery:</t>

        <t><list style="symbols">
            <t>Link MTU (LMTU) - the maximum transmission unit, i.e., maximum
            packet size in octets, that can be conveyed over a link. LMTU is a
            unidirectional metric. A bidirectional link may be characterized
            by one LMTU in the forward direction and another LMTU in the
            reverse direction.</t>

            <t>Path MTU (PMTU) - the minimum LMTU of all the links in a path
            between a source node and a destination node. If the source and
            destination nodes are connected through an Equal-Cost Multipath
            (ECMP), the PMTU is equal to the minimum LMTU of all links
            contributing to the multipath.</t>

            <t>GRE MTU (GMTU) - the maximum transmission unit, i.e., maximum
            packet size in octets, that can be conveyed over a GRE tunnel
            without fragmentation of any kind. The GMTU is equal to the PMTU
            associated with the path between the GRE ingress and the GRE
            egress nodes minus the GRE overhead.</t>

            <t>Path MTU Discovery (PMTUD) - a procedure for dynamically
            discovering the PMTU between two nodes on the Internet. PMTUD
            procedures for IPv4 are defined in <xref target="RFC1191"/>. PMTUD
            procedures for IPv6 are defined in <xref target="RFC1981"/>.</t>
          </list>The following terms are introduced by this memo:</t>

        <t><list style="symbols">
            <t>Fragmentable Packet - a packet that can be fragmented by the
            GRE ingress node before being transported over a GRE tunnel. That is,
            an IPv4 packet with the Don't Fragment (DF) bit equal to 0 and whose payload is larger
            than 64 bytes. IPv6 packets are not fragmentable.</t>

            <t>ICMP Packet Too Big (PTB) message - an <xref
            target="RFC0792">ICMPv4</xref> Destination Unreachable message
            (Type = 3) with code equal to 4 (fragmentation needed and DF set)
            or an <xref target="RFC4443">ICMPv6</xref> Packet Too Big message
            (Type = 2).</t>
          </list></t>
      </section>

<section title="Requirements Language" anchor="sec_intro_req">
  <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",        
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this          
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
</section>



    </section>

    <section anchor="DesignGoals" title="Solutions">
      <section title="RFC 4459 Solutions">
        <t><xref target="RFC4459">Section 3 of</xref> identifies several
        tunnel fragmentation solutions. These solutions define procedures to
        be invoked when the tunnel ingress router receives a packet so large
        that it cannot be forwarded through the tunnel without fragmentation of
        any kind. When applied to GRE, these procedures are:</t>

        <t><list style="numbers">
            <t>Discard the incoming packet and send an ICMP PTB message to the
            incoming packet's source.</t>

            <t>Fragment the incoming packet and encapsulate each fragment
            within a complete GRE header and GRE delivery header.</t>

            <t>Encapsulate the incoming packet in a single GRE header and GRE
            delivery header. Perform source fragmentation on the resulting GRE
            delivery packet.</t>
          </list></t>

        <t>As per RFC 4459, Strategy 2 is applicable only when the incoming
        packet is fragmentable. Also as per RFC 4459, each strategy has its
        relative merits and costs.</t>
      </section>

      <section anchor="sover" title="A Widely Deployed Solution">
        <t>Many vendors have implemented a configurable GRE fragmentation
        solution. In its default configuration, the solution behaves as
        follows:</t>

        <t><list style="symbols">
            <t>When the GRE ingress node receives a fragmentable packet with
            length greater than the GMTU, it fragments the incoming packet and
            encapsulates each fragment within a complete GRE header and GRE
            delivery header. Fragmentation logic is as specified by the
            payload protocol.</t>

            <t>When the GRE ingress node receives a non-fragmentable packet
            with length greater than the GMTU, it discards the packet and sends
            an ICMP PTB message to the packet's source.</t>

            <t>When the GRE egress node receives a GRE delivery packet
            fragment, it silently discards the fragment without attempting to
            reassemble the GRE delivery packet to which the fragment
            belongs.</t>
          </list></t>

        <t>In non-default configurations, the GRE ingress node can execute any
        of the procedures defined in RFC 4459.</t>

        <t>The solution described above is widely deployed on the Internet in
        its default configuration. However, the default configuration is not
        always appropriate for GRE tunnels that carry IPv6.</t>

        <t>IPv6 requires that every link in the Internet have an MTU of 1280
        octets or greater. On any link that cannot convey a 1280-octet packet
        in one piece, link-specific fragmentation and reassembly must be
        provided at a layer below IPv6.</t>

        <t>Therefore, the default configuration is appropriate for tunnels
        that carry IPv6 only if the network is engineered so that the GMTU is
        guaranteed to be 1280 bytes or greater. In all other scenarios, a
        non-default configuration is required.</t>

        <t>In the non-default configuration, when the GRE ingress router
        receives a packet lager than the GMTU, the GRE ingress router
        encapsulates the entire packet in a single GRE and delivery header. It
        then fragments the delivery header and sends the resulting fragments
        to the GRE egress node, where they are reassembled.</t>
      </section>
    </section>

    <section anchor="Common" title="Implementation Details">
      <t>This section describes how many vendors have implemented the solution
      described in <xref target="sover"/>.</t>

      <section title="General">
        <t>The GRE ingress nodes satisfy all of the requirements stated in
        <xref target="RFC2784"/>.</t>
      </section>

      <section title="GRE MTU (GMTU) Estimation and Discovery">
        <t>GRE ingress nodes support a configuration option that associates a
        GMTU with a GRE tunnel. By default, GMTU is equal to the MTU
        associated with the next hop toward the GRE egress node minus the GRE
        overhead.</t>

        <t>Typically, GRE ingress nodes further refine their GMTU estimate by
        executing PMTUD procedures. However, if an implementation supports
        PMTUD for GRE tunnels, it also includes a configuration option that
        disables PMTUD. This configuration option is required to mitigate
        certain denial-of-service attacks (see <xref target="Security"/>).</t>

        <t>
The GRE ingress node's estimate of the GMTU will not always be accurate.  It
is only an estimate.  When the GMTU changes, the GRE ingress node will not
discover that change immediately. Likewise, if the GRE ingress node performs
PMTUD procedures and interior nodes cannot deliver ICMP feedback to the GRE
ingress node, GMTU estimates may be inaccurate.
</t>
      </section>

      <section title="GRE Ingress Node Procedures">
        <t>This section defines procedures that GRE ingress nodes execute when
        they receive a packet whose size is greater than the relevant
        GMTU.</t>

        <section anchor="payload" title="Procedures Affecting the GRE Payload">
          <t/>

          <section anchor="payload-ipv4" title="IPv4 Payloads">
            <t>By default, if the payload is fragmentable, the GRE ingress
            node fragments the incoming packet and encapsulates each fragment
            within a complete GRE header and GRE delivery header. Therefore,
            the GRE egress node receives several complete, non-fragmented
            delivery packets. Each delivery packet contains a fragment of the
            GRE payload. The GRE egress node forwards the payload fragments to
            their ultimate destination where they are reassembled.</t>

            <t>Also by default, if the payload is not fragmentable, the GRE
            ingress node discards the packet and sends an ICMPv4 Destination
            Unreachable message to the packet's source. The ICMPv4 Destination
            Unreachable message code equals 4 (fragmentation needed and DF
            set). The ICMPv4 Destination Unreachable message also contains a
            next-hop MTU (as specified by <xref target="RFC1191"/>), and the
            next-hop MTU is equal to the GMTU associated with the tunnel.</t>

            <t>The GRE ingress node supports a non-default configuration
            option that invokes an alternative behavior. If that option is
            configured, the GRE ingress node fragments the delivery packet.
            See <xref target="delivery"/> for details.</t>
          </section>

          <section anchor="payload-ipv6" title="IPv6 Payloads">
            <t>By default, the GRE ingress node discards the packet and sends
            an ICMPv6 <xref target="RFC4443"/> Packet Too Big message to the
            payload source. The MTU specified in the Packet Too Big message is
            equal to the GMTU associated with the tunnel.</t>

            <t>The GRE ingress node supports a non-default configuration
            option that invokes an alternative behavior. If that option is
            configured, the GRE ingress node fragments the delivery packet.
            See <xref target="delivery"/> for details.</t>
          </section>

          <section anchor="payload-mpls" title="MPLS Payloads">
            <t>By default, the GRE ingress node discards the packet. As it is
            impossible to reliably identify the payload source, the GRE
            ingress node does not attempt to send an ICMP PTB message to the
            payload source.</t>

            <t>The GRE ingress node supports a non-default configuration
            option that invokes an alternative behavior. If that option is
            configured, the GRE ingress node fragments the delivery packet.
            See <xref target="delivery"/> for details.</t>
          </section>
        </section>

        <section anchor="delivery"
                 title="Procedures Affecting the GRE Deliver Header">
          <t/>

          <section anchor="delivery-ipv4" title="Tunneling GRE over IPv4">
            <t>By default, the GRE ingress node does not fragment delivery
            packets. However, the GRE ingress node includes a configuration
            option that allows delivery packet fragmentation.</t>

            <t>By default, the GRE ingress node sets the DF bit in the
            delivery header to 1 (Don't Fragment). However, the GRE ingress
            node also supports a configuration option that invokes the
            following behavior:</t>

            <t><list style="symbols">
                <t>When the GRE payload is IPv6, the DF bit on the delivery
                header is set to 0 (Fragments Allowed).</t>

                <t>When the GRE payload is IPv4, the DF bit is copied from the
                payload header to the delivery header.</t>
              </list>When the DF bit on an IPv4 delivery header is set to 0,
            the GRE delivery packet can be fragmented by any router between the
            GRE ingress and egress nodes.</t>

            <t>If the GRE egress node is configured to support reassembly, it
            will reassemble fragmented delivery packets. Otherwise, the GRE
            egress node will discard delivery packet fragments.</t>
          </section>

          <section anchor="delivery-ipv6" title="Tunneling GRE over IPv6">
            <t anchor="non">By default, the GRE ingress node does not fragment
            delivery packets. However, the GRE ingress node includes a
            configuration option that allows this.</t>

            <t>If the GRE egress node is configured to support reassembly, it
            will reassemble fragmented delivery packets. Otherwise, the GRE
            egress node will discard delivery packet fragments.</t>
          </section>
        </section>
      </section>

      <section title="GRE Egress Node Procedures">
        <t>By default, the GRE egress node silently discards GRE delivery
        packet fragments without attempting to reassemble the GRE delivery
        packets to which the fragments belongs.</t>

        <t>However, the GRE egress node supports a configuration option that
        allows it to reassemble GRE delivery packets.</t>
      </section>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>In the GRE fragmentation solution described above, either the GRE
      payload or the GRE delivery packet can be fragmented. If the GRE payload
      is fragmented, it is typically reassembled at its ultimate destination.
      If the GRE delivery packet is fragmented, it is typically reassembled at
      the GRE egress node.</t>

      <t>The packet reassembly process is resource intensive and vulnerable to
      several denial-of-service attacks. In the simplest attack, the attacker
      sends fragmented packets more quickly than the victim can reassemble
      them. In a variation on that attack, the first fragment of each packet
      is missing so that no packet can ever be reassembled.</t>

      <t>Given that the packet reassembly process is resource intensive and
      vulnerable to denial-of-service attacks, operators should decide where
      the reassembly process is best performed. Having made that decision, they
      should decide whether to fragment the GRE payload or GRE delivery
      packet accordingly.</t>



      <t>Some IP implementations are vulnerable to the <xref
      target="RFC1858">Overlapping Fragment Attack</xref>. This vulnerability
      is not specific to GRE and needs to be considered in all environments
      where IP fragmentation is present. <xref target="RFC3128"/> describes a
      procedure by which IPv4 implementations can partially mitigate the
      vulnerability. <xref target="RFC5722"/> mandates a procedure by which
      IPv6-compliant implementations are required to mitigate the
      vulnerability. The procedure described in RFC 5722 completely mitigates
      the vulnerability. Operators SHOULD ensure that the vulnerability is
      mitigated to their satisfaction on equipment that they deploy.</t>


      <t>PMTUD is vulnerable to two denial-of-service attacks (see
      Section 8 of <xref target="RFC1191"/> for details). Both attacks are
      based upon on a malicious party sending forged ICMPv4 Destination
      Unreachable or ICMPv6 Packet Too Big messages to a host. In the first
      attack, the forged message indicates an inordinately small PMTU. In the
      second attack, the forged message indicates an inordinately large MTU.
      In both cases, throughput is adversely affected. In order to mitigate
      such attacks, GRE implementations include a configuration option to
      disable PMTUD on GRE tunnels. Also, they can include a
      configuration option that conditions the behavior of PMTUD to establish
      a minimum PMTU.</t>
    </section>

  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.2784"?>

      <?rfc include="reference.RFC.0792"?>

      <?rfc include="reference.RFC.2890"?>

      <?rfc include="reference.RFC.4023"?>

      <?rfc include="reference.RFC.1191"?>

      <?rfc include="reference.RFC.4443"?>

      <?rfc include='reference.RFC.1858'?>

      <?rfc include='reference.RFC.5722'?>

      <?rfc include='reference.RFC.3128'?>

      <?rfc include="reference.RFC.1981"?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.RFC.4459"?>


<!--[rfced] FYI: draft-pignataro-intarea-gre-ipv6 was replaced by
draft-ietf-intarea-gre-ipv6. We have updated the following reference entry
accordingly. Please let us know any objections.

Original
   [I-D.pignataro-intarea-gre-ipv6]
              Pignataro, C., Bonica, R., and S. Krishnan, "IPv6 Support
              for Generic Routing Encapsulation (GRE)", draft-pignataro-
              intarea-gre-ipv6-01 (work in progress), October 2014.

Updated
   [IPv6-GRE] Pignataro, C., Bonica, R., and S. Krishnan, "IPv6 Support
              for Generic Routing Encapsulation (GRE)", Work in
              Progress, draft-ietf-intarea-gre-ipv6-10, June 2015.
-->

<!--draft-pignataro-intarea-gre-ipv6-01: Replaced with
    draft-ietf-intarea-gre-ipv6 in LAST CALL -->

<reference anchor='IPv6-GRE'>
<front>
<title>IPv6 Support for Generic Routing Encapsulation (GRE)</title>
<author initials='C' surname='Pignataro' fullname='Carlos Pignataro'>
    <organization />
</author>
<author initials='R' surname='Bonica' fullname='Ron Bonica'>
    <organization />
</author>
<author initials='S' surname='Krishnan' fullname='Suresh Krishnan'>
    <organization />
</author>
<date month='June' year='2015' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-intarea-gre-ipv6-10' />

</reference>

    </references>
<section title="Acknowledgements" numbered="no">
<t>   The authors would like to thank Fred Baker, Fred Detienne, Jagadish
   Grandhi, Jeff Haas, Brian Haberman, Vanitha Neelamegam, Masataka
   Ohta, John Scudder, Mike Sullenberger, Tom Taylor, and Wen Zhang for
   their constructive comments.  The authors also express their
   gratitude to Vanessa Ameen, without whom this memo could not have
   been written.</t>
</section>
  </back>
</rfc>
