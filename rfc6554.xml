<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2460 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2460.xml">
<!ENTITY RFC2473 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2473.xml">
<!ENTITY RFC4443 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4443.xml">
<!ENTITY RFC5095 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5095.xml">
<!ENTITY I-D.ietf-roll-rpl SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-roll-rpl.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="no" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc rfcedstyle="yes"?>
<rfc submissionType="IETF" category="std" consensus="yes" number="6554" ipr="trust200902">


  <!-- ***** FRONT MATTER ***** -->

  <front>    
    <title abbrev="RPL Source Route Header">An IPv6 Routing Header for Source
Routes with&nbsp;the&nbsp;Routing&nbsp;Protocol&nbsp;for&nbsp;Low-Power&nbsp;and&nbsp;Lossy&nbsp;Networks&nbsp;(RPL)</title>

    <author fullname="Jonathan W. Hui" initials="J.H." surname="Hui">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 West Tasman Drive</street>
          <city>San Jose</city>
          <region>California</region>
          <code>95134</code>
          <country>USA</country>
        </postal>
        <phone>+408 424 1547</phone>
        <email>jonhui@cisco.com</email>
      </address>
    </author>
    
    <author fullname="JP. Vasseur" initials="JP" surname="Vasseur">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>11, Rue Camille Desmoulins</street>
          <city>Issy Les Moulineaux</city>
          <code>92782</code>
          <country>France</country>
        </postal>
        <email>jpv@cisco.com</email>
      </address>
    </author>
    
    <author fullname="David E. Culler" initials="D.C." surname="Culler">
      <organization>UC Berkeley</organization>
      <address>
        <postal>
          <street>465 Soda Hall</street>
          <city>Berkeley</city>
          <region>California</region>
          <code>94720</code>
          <country>USA</country>
        </postal>
        <phone>+510 643 7572</phone>
        <email>culler@cs.berkeley.edu</email>
      </address>
    </author>

    <author fullname="Vishwas Manral" initials="V.M." surname="Manral">
      <organization>Hewlett Packard Co.</organization>
      <address>
        <postal>
          <street>19111 Pruneridge Ave.</street>
          <city>Cupertino</city>
          <region>California</region>
          <code>95014</code>
          <country>USA</country>
        </postal>
        <email>vishwas.manral@hp.com</email>
      </address>
    </author>
    
    <date month="March" year="2012" />

    <area>Routing Area</area>

    <workgroup>6MAN</workgroup>

    <keyword>LLN, LLNs</keyword>

    <abstract>
      <t>In Low-Power and Lossy Networks (LLNs), memory constraints on
      routers may limit them to maintaining, at most, a few routes.  In
      some configurations, it is necessary to use these memory-constrained routers to deliver datagrams to nodes within the
      LLN.  The Routing Protocol for Low-Power and Lossy Networks (RPL)
      can be used in some deployments to store most, if not
      all, routes on one (e.g., the Directed Acyclic Graph (DAG) root)
      or a few routers and forward the IPv6 datagram using a source
      routing technique to avoid large routing tables on memory-constrained routers.  This document specifies a new IPv6 Routing
      header type for delivering datagrams within a RPL routing domain.</t>
    </abstract>
  </front>
  
  <middle>
    
    <section title="Introduction">
      
      <t>The Routing Protocol for Low-Power and Lossy Networks (RPL) is a distance
      vector IPv6 routing protocol designed for Low-Power and Lossy
      Networks (LLNs) <xref target="RFC6550"/>.  Such
      networks are typically constrained in resources (limited
      communication data rate, processing power, energy capacity,
      memory).  In particular, some LLN configurations may utilize LLN
      routers where memory constraints limit nodes to maintaining only
      a small number of default routes and no other destinations.
      However, it may be necessary to utilize such memory-constrained
      routers to forward datagrams and maintain reachability to
      destinations within the LLN.</t>
      
      <t>To utilize paths that include memory-constrained routers, RPL
      relies on source routing.  In one deployment model of RPL, more-capable routers collect routing information and form paths to
      arbitrary destinations within a RPL routing domain.  However, a source
      routing mechanism supported by IPv6 is needed to deliver
      datagrams.</t>
      
      <t>This document specifies the Source Routing Header (SRH) for
      use strictly between RPL routers in the same RPL routing domain.
      A RPL routing domain is a collection of RPL routers under the
      control of a single administration. The boundaries of routing
      domains are defined by network management by setting some links
      to be exterior, or inter-domain, links.</t>
      
      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
        "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
        "OPTIONAL" in this document are to be interpreted as described
        in <xref target="RFC2119"/>.</t>
      </section>
      
    </section>
    
    <section title="Overview">
      
      <t>The format of the SRH draws from that of the Type 0 Routing
      header (RH0) <xref target="RFC2460"/>.  However, the SRH introduces
      mechanisms to compact the source route entries when all entries
      share the same prefix with the IPv6 Destination Address of a
      packet carrying an SRH, a typical scenario in LLNs using source
      routing.  The compaction mechanism reduces consumption of scarce
      resources such as channel capacity.</t>
      
      <t>The SRH also differs from RH0 in the processing rules to
      alleviate security concerns that led to the deprecation of RH0
      <xref target="RFC5095"/>.  First, RPL routers implement a strict
      source route policy where each and every IPv6 hop between the
      source and destination of the source route is specified within
      the SRH.  Note that the source route may be a subset of the path
      between the actual source and destination and is discussed
      further below.  Second, an SRH is only used between RPL routers
      within a RPL routing domain.  RPL Border Routers, responsible for
      connecting other RPL routing domains and IP domains that use other
      routing protocols, do not allow datagrams already carrying an SRH
      header to enter or exit a RPL routing domain.  Third, a RPL router
      drops datagrams that include multiple addresses assigned to any
      interfaces on that router to avoid forwarding loops.</t>
      
      <t>There are two cases that determine how to include an SRH when
      a RPL router requires the use of an SRH to deliver a datagram to
      its destination.
        <list style="numbers">
          <t>If the SRH specifies the complete path from source to
          destination, the router places the SRH directly in the
          datagram itself.</t>
          <t>If the SRH only specifies a subset of the path from
          source to destination, the router uses IPv6-in-IPv6
          tunneling <xref target="RFC2473"/> and places the SRH in the
          outer IPv6 header.  Use of tunneling ensures that the
          datagram is delivered unmodified and that ICMP errors return
          to the source of the SRH rather than the source of the
          original datagram.</t>
        </list>
      </t>
      
      <t>In a RPL network, Case 1 occurs when both source and
      destination are within a RPL routing domain and a single SRH is used
      to specify the entire path from source to destination, as shown
      in the following figure:
        <figure align="center">
          <artwork align="center">
	          <![CDATA[
+--------------------+
|                    |
|  (S) -------> (D)  |
|                    |
+--------------------+
  RPL Routing Domain
]]>
          </artwork>
        </figure>
	    In the above scenario, datagrams traveling from source, S, to
	    destination, D, have the following packet structure:
	      <figure align="center">
          <artwork align="center">
	          <![CDATA[
+--------+---------+-------------//-+
| IPv6   | Source  | IPv6           |
| Header | Routing | Payload        |
|        | Header  |                |
+--------+---------+-------------//-+
]]>
	        </artwork>
	      </figure>
	    S's address is carried in the IPv6 header's Source Address
	    field.  D's address is carried in the last entry of the SRH for all
	    but the last hop, when D's address is carried in the IPv6
	    header's Destination Address field of the packet carrying the
	    SRH.</t>
      
      <t>In a RPL network, Case 2 occurs for all datagrams that have
      a source and/or destination outside the RPL routing domain, as shown in
      the following diagram:
	      <figure align="center">
          <artwork align="center">
	          <![CDATA[
               +-----------------+
               |                 |
               |  (S) --------> (R) --------> (D)
               |                 |
               +-----------------+
               RPL Routing Domain

               +-----------------+
               |                 |
(S) --------> (R) --------> (D)  |
               |                 |
               +-----------------+
               RPL Routing Domain

               +-----------------+
               |                 |
(S) --------> (R) ------------> (R) --------> (D)
               |                 |
               +-----------------+
               RPL Routing Domain
]]>
	        </artwork>
	      </figure>
      In the scenarios above, R may indicate a RPL Border Router (when
      connecting to other routing domains) or a RPL Router (when
      connecting to hosts).  The datagrams have the following
      structure when traveling within the RPL routing domain:
	      <figure align="center">
          <artwork align="center">
	          <![CDATA[
+--------+---------+--------+-------------//-+
| Outer  | Source  | Inner  | IPv6           |
| IPv6   | Routing | IPv6   | Payload        |
| Header | Header  | Header |                |
+--------+---------+--------+-------------//-+
                    <--- Original Packet --->
 <---          Tunneled Packet           --->
]]>
	        </artwork>
	      </figure>
	    Note that the outer header (including the SRH) is added and
	    removed by the RPL router.</t>

      <t>Case 2 also occurs whenever a RPL router needs to insert a
      source route when forwarding a datagram.  One such use case with
      RPL is to have all RPL traffic flow through a Border Router and
      have the Border Router use source routes to deliver datagrams to
      their final destination.  When including the SRH using tunneled
      mode, the Border Router would encapsulate the received datagram
      unmodified using IPv6-in-IPv6 and include an SRH in the outer
      IPv6 header.
	      <figure align="center">
          <artwork align="center">
	          <![CDATA[
+-----------------+
|                 |
|  (S) -------\   |
|              \  |
|               (LBR)
|              /  |
|  (D) <------/   |
|                 |
+-----------------+
RPL Routing Domain
]]>
	        </artwork>
	      </figure>
	    In the above scenario, datagrams travel from S to D through the Low-Power and Lossy Network Border Router (LBR).
	    Between S and the LBR, the datagrams are routed using the DAG built
	    by the RPL and do not contain an SRH.  The LBR encapsulates received
	    datagrams unmodified using IPv6-in-IPv6 and the SRH is included
	    in the outer IPv6 header.</t>
      
    </section>
    
    <section title="Format of the RPL Routing Header">
      
      <t>The Source Routing Header has the following format:
	      <figure align="center">
          <artwork align="center">
	          <![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Next Header  |  Hdr Ext Len  | Routing Type  | Segments Left |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| CmprI | CmprE |  Pad  |               Reserved                |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
.                                                               .
.                        Addresses[1..n]                        .
.                                                               .
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]>
	        </artwork>
	      </figure>
	      
	      <list style="hanging" hangIndent="20">
	        <t hangText="Next Header">8-bit selector.  Identifies the
          type of header immediately following the Routing header.
          Uses the same values as the IPv6 Next Header field
          <xref target="RFC2460"/>.</t>
	        
	        <t hangText="Hdr Ext Len">8-bit unsigned integer.  Length of
          the Routing header in 8-octet units, not including the first
          8 octets.  Note that when Addresses[1..n] are compressed
          (i.e., value of CmprI or CmprE is not 0), Hdr Ext Len does
          not equal twice the number of Addresses.</t>
	        
	        <t hangText="Routing Type">8-bit selector.  Identifies the
	        particular Routing header variant.  An SRH should set the
	        Routing Type to 3.</t>

	        <t hangText="Segments Left">8-bit unsigned integer.  Number
          of route segments remaining, i.e., number of explicitly
          listed intermediate nodes still to be visited before
          reaching the final destination.  The originator of an SRH
          sets this field to n, the number of addresses contained in
          Addresses[1..n].</t>
	        
	        <t hangText="CmprI">4-bit unsigned integer.  Number of
	        prefix octets from each segment, except than the last
	        segment, (i.e., segments 1 through n-1) that are elided.  For
	        example, an SRH carrying full IPv6 addresses in
	        Addresses[1..n-1] sets CmprI to 0.</t>
	        
	        <t hangText="CmprE">4-bit unsigned integer.  Number of
	        prefix octets from the last segment (i.e., segment n) that
	        are elided.  For example, an SRH carrying a full IPv6 address
	        in Addresses[n] sets CmprE to 0.</t>
	        
	        <t hangText="Pad">4-bit unsigned integer.  Number of octets
	        that are used for padding after Address[n] at the end of the
	        SRH.</t>
	        
          <t hangText="Reserved">This field is unused.  It MUST be
          initialized to zero by the sender and MUST be ignored by the
          receiver.</t>
          
	        <t hangText="Address[1..n]">Vector of addresses, numbered 1
	        to n.  Each vector element in [1..n-1] has size (16 - CmprI)
	        and element [n] has size (16-CmprE).  The originator of an
	        SRH places the next (first) hop's IPv6 address in the IPv6
	        header's IPv6 Destination Address and the second hop's IPv6
	        address as the first address in Address[1..n] (i.e.,
	        Address[1]).</t>
	      </list>
      </t>
      
      <t>The SRH shares the same basic format as the Type 0 Routing
      header <xref target="RFC2460"/>.  When carrying full IPv6
      addresses, the CmprI, CmprE, and Pad fields are set to 0 and the
      only difference between the SRH and Type 0 encodings is the
      value of the Routing Type field.</t>
      
      <t>A common network configuration for a RPL routing domain is
      that all routers within a RPL routing domain share a common
      prefix.  The SRH introduces the CmprI, CmprE, and Pad fields to
      allow compaction of the Address[1..n] vector when all entries
      share the same prefix as the IPv6 Destination Address field of
      the packet carrying the SRH.  The CmprI and CmprE fields
      indicate the number of prefix octets that are shared with the
      IPv6 Destination Address of the packet carrying the SRH.  The
      shared prefix octets are not carried within the Routing header
      and each entry in Address[1..n-1] has size (16 - CmprI) octets
      and Address[n] has size (16 - CmprE) octets.  When CmprI or
      CmprE is non-zero, there may exist unused octets between the
      last entry, Address[n], and the end of the Routing header.  The
      Pad field indicates the number of unused octets that are used
      for padding.  Note that when CmprI and CmprE are both 0, Pad
      MUST carry a value of 0.</t>
      
      <t>The SRH MUST NOT specify a path that visits a node more than
      once.  When generating an SRH, the source may not know the
      mapping between IPv6 addresses and nodes.  Minimally, the source
      MUST ensure that IPv6 addresses do not appear more than once and
      the IPv6 Source and Destination addresses of the encapsulating
      datagram do not appear in the SRH.</t>
      
      <t>Multicast addresses MUST NOT appear in an SRH or in the IPv6
      Destination Address field of a datagram carrying an SRH.</t>
      
    </section>
    
    <section title="RPL Router Behavior">
      
      <section title="Generating Source Routing Headers">
	      
	      <t>To deliver an IPv6 datagram to its destination, a router
	      may need to generate a new SRH and specify a strict source
	      route.  When the router is the source of the original packet
	      and the destination is known to be within the same RPL routing
	      domain, the router SHOULD include the SRH directly within the
	      original packet.  Otherwise, the router MUST use IPv6-in-IPv6
	      tunneling <xref target="RFC2473"/> and place the SRH in the
	      tunnel header.  Using IPv6-in-IPv6 tunneling ensures that the
	      delivered datagram remains unmodified and that ICMPv6 errors
	      generated by an SRH are sent back to the router that generated
	      the SRH.</t>
	      
        <t>When using IPv6-in-IPv6 tunneling, in order to respect the
        IPv6 Hop Limit value of the original datagram, a RPL router
        generating an SRH MUST set the Segments Left to less than the
        original datagram's IPv6 Hop Limit value upon forwarding.  In
        the case that the source route is longer than the original
        datagram's IPv6 Hop Limit, only the initial hops (determined
        by the original datagram's IPv6 Hop Limit) should be included
        in the SRH.  If the RPL router is not the source of the
        original datagram, the original datagram's IPv6 Hop Limit
        field is decremented before generating the SRH.  After
        generating the SRH, the RPL router decrements the original
        datagram's IPv6 Hop Limit value by the SRH Segments Left
        value.  Processing the SRH Segments Left and original
        datagram's IPv6 Hop Limit fields in this way ensures that
        ICMPv6 Time Exceeded errors occur as would be expected on more
        traditional IPv6 networks that forward datagrams without
        tunneling.</t>
        
	      <t>To avoid fragmentation, it is desirable to employ MTU sizes
	      that allow for the header expansion (i.e., at least 1280 + 40
	      (outer IP header) + SRH_MAX_SIZE), where SRH_MAX_SIZE is the
	      maximum path length for a given RPL network.  To take
	      advantage of this, however, the communicating endpoints need
	      to be aware of the MTU along the path (i.e., through Path MTU
	      Discovery).  Unfortunately, the larger MTU size may not be
	      available on all links (e.g., 1280 octets on IPv6 Low-Power Wireless
   Personal Area Network (6LoWPAN) links).
	      However, it is expected that much of the traffic on these
	      types of networks consists of much smaller messages than the
	      MTU, so performance degradation through fragmentation would be
	      limited.</t>
	      
      </section>
      
      <section title="Processing Source Routing Headers">
	      
	      <t>As specified in <xref target="RFC2460"/>, a routing header
	      is not examined or processed until it reaches the node
	      identified in the Destination Address field of the IPv6
	      header.  In that node, dispatching on the Next Header field of
	      the immediately preceding header causes the Routing header
	      module to be invoked.</t>
	      
	      <t>The function of the SRH is intended to be very similar to
        the Type 0 Routing header defined in <xref target="RFC2460"/>.
        After the routing header has been processed and the IPv6
        datagram resubmitted to the IPv6 module for processing, the
        IPv6 Destination Address contains the next hop's address.
        When forwarding an IPv6 datagram that contains an SRH with a
        non-zero Segments Left value, if the IPv6 Destination Address
        is not on-link, a router MUST drop the datagram and SHOULD
        send an ICMP Destination Unreachable (ICMPv6 Type 1) message
        with ICMPv6 Code set to 7 to the packet's Source Address.
        This ICMPv6 Code indicates that the IPv6 Destination Address
        is not on-link and the router cannot satisfy the strict source
        route requirement.  When generating ICMPv6 error messages, the
        rules in Section 2.4 of <xref target="RFC4443"/> MUST be
        observed.</t>
	      
	      <t>To detect loops in the SRH, a router MUST determine if the
	      SRH includes multiple addresses assigned to any interface on
	      that router.  If such addresses appear more than once and are
	      separated by at least one address not assigned to that router,
	      the router MUST drop the packet and SHOULD send an ICMP
	      Parameter Problem, Code 0, to the Source Address.  While this
	      loop check does add significant per-packet processing
	      overhead, it is required to mitigate bandwidth exhaustion
	      attacks that led to the deprecation of RH0
	      <xref target="RFC5095"/>.</t>
	      
	      <t>The following describes the algorithm performed when
	      processing an SRH:
	        
	        <figure align="left">
            <artwork align="left">
	            <![CDATA[
if Segments Left = 0 {
   proceed to process the next header in the packet, whose type is
   identified by the Next Header field in the Routing header
}
else {
   compute n, the number of addresses in the Routing header, by
   n = (((Hdr Ext Len * 8) - Pad - (16 - CmprE)) / (16 - CmprI)) + 1

   if Segments Left is greater than n {
      send an ICMP Parameter Problem, Code 0, message to the Source
      Address, pointing to the Segments Left field, and discard the
      packet
   }
   else {
      decrement Segments Left by 1

      compute i, the index of the next address to be visited in
      the address vector, by subtracting Segments Left from n

      if Address[i] or the IPv6 Destination Address is multicast {
         discard the packet
      }
      else if 2 or more entries in Address[1..n] are assigned to 
              local interface and are separated by at least one 
              address not assigned to local interface {
         send an ICMP Parameter Problem (Code 0) and discard the
         packet
      }
      else {
         swap the IPv6 Destination Address and Address[i]

         if the IPv6 Hop Limit is less than or equal to 1 {
            send an ICMP Time Exceeded -- Hop Limit Exceeded in
            Transit message to the Source Address and discard the
            packet
         }
         else {
            decrement the Hop Limit by 1

            resubmit the packet to the IPv6 module for transmission
            to the new destination
         }
      }
   }
}
]]>
	          </artwork>
	        </figure>
	      </t>
	      
        <t>RPL routers are responsible for ensuring that an SRH is only
        used between RPL routers:
          <list style="numbers">
            <t>For datagrams destined to a RPL router, the router
            processes the packet in the usual way.  For instance, if
            the SRH was included using tunneled mode and the RPL
            router serves as the tunnel endpoint, the router removes
            the outer IPv6 header, at the same time removing the SRH
            as well.</t>
            <t>Datagrams destined elsewhere within the same RPL
            routing domain are forwarded to the correct interface.</t>
            <t>Datagrams destined to nodes outside the RPL routing
            domain are dropped if the outermost IPv6 header contains
            an SRH not generated by the RPL router forwarding the
            datagram.</t>
        </list>
      </t>


      </section>
      
    </section>
    
    <section title="Security Considerations" anchor="Security">
      
      <section title="Source Routing Attacks">
	      
        <t>The RPL message security mechanisms defined in
        <xref target="RFC6550"/> do not apply to the RPL
        Source Route Header.  This specification does not provide any
        confidentiality, integrity, or authenticity mechanisms to
        protect the SRH.</t>
        
	      <t><xref target="RFC5095"/> deprecates the Type 0 Routing
	      header due to a number of significant attacks that are
	      referenced in that document.  Such attacks include bypassing
	      filtering devices, reaching otherwise unreachable Internet
	      systems, network topology discovery, bandwidth exhaustion, and
	      defeating anycast.</t>
        
	      <t>Because this document specifies that the SRH is only for
	      use within a RPL routing domain, such attacks cannot be
	      mounted from outside a RPL routing domain.  As specified in
	      this document, RPL routers MUST drop datagrams entering or
	      exiting a RPL routing domain that contain an SRH in the IPv6
	      Extension headers.</t>
        
        <t>Such attacks, however, can be mounted from within a RPL
	      routing domain.  To mitigate bandwidth exhaustion attacks,
	      this specification requires RPL routers to check for loops in
	      the SRH and drop datagrams that contain such loops.  Attacks
	      that include bypassing filtering devices and reaching
	      otherwise unreachable Internet systems are not as relevant in
	      mesh networks since the topologies are, by their very nature,
	      highly dynamic.  The RPL routing protocol is designed to
	      provide reachability to all devices within a RPL routing
	      domain and may utilize routes that traverse any number of
	      devices in any order.  Even so, these attacks and others
	      (e.g., defeating anycast and routing topology discovery) can
	      occur within a RPL routing domain when using this
	      specification.</t>
        
      </section>
      
      <section title="ICMPv6 Attacks">
	      
	      <t>The generation of ICMPv6 error messages may be used to
	      attempt denial-of-service attacks by sending an error-causing SRH
	      in back-to-back datagrams.  An implementation that correctly
	      follows Section 2.4 of <xref target="RFC4443"/> would be
	      protected by the ICMPv6 rate-limiting mechanism.</t>
	
      </section>
      
    </section>
    
    <section title="IANA Considerations" anchor="IANA">
      
      <t>This document defines a new IPv6 Routing Type, the "RPL
      Source Route Header", and has been assigned number 3
      by IANA.</t>
      
      <t>This document defines a new ICMPv6 Destination Unreachable
      Code, "Error in Source Routing Header", and has been
      assigned number 7 by IANA.</t>
      
    </section>
    
    <section title="Acknowledgements" anchor="Acknowledgements">
      <t>The authors thank Jari Arkko, Ralph Droms, Adrian Farrel,
      Stephen Farrell, Richard Kelsey, Suresh Krishnan, Erik Nordmark,
      Pascal Thubert, Sean Turner, and Tim Winter for their comments
      and suggestions that helped shape this document.</t>
    </section>
    
  
    
  </middle>
  
  <!--  *****BACK MATTER ***** -->
  
  <back>

    <references title="Normative References">

      &RFC2119;
      &RFC2460;
      &RFC2473;
      &RFC4443;
      &RFC5095;
    </references>
    
    <references title="Informative References">

<!--      &I-D.ietf-roll-rpl; -->
<reference anchor='RFC6550'>
<front>
<title>RPL: IPv6 Routing Protocol for Low-Power and Lossy Networks</title>

<author initials='T' surname='Winter' fullname='Tim Winter' role='editor'>
    <organization />
</author>

<author initials='P' surname='Thubert' fullname='Pascal Thubert' role='editor'>
    <organization />
</author>

<author initials='A' surname='Brandt' fullname='Anders Brandt'>
    <organization />
</author>

<author initials='J' surname='Hui' fullname='Jonathan Hui'>
    <organization />
</author>

<author initials='R' surname='Kelsey' fullname='Richard Kelsey'>
    <organization />
</author>

<author initials='P' surname='Levis' fullname='P Levis'>
    <organization />
</author>

<author initials='K' surname='Pister' fullname='Kris Pister'>
    <organization />
</author>

<author initials='R' surname='Struik' fullname='Rene Struik'>
    <organization />
</author>

<author initials='JP' surname='Vasseur' fullname='JP. Vasseur'>
    <organization />
</author>

<author initials='R' surname='Alexander' fullname='Roger Alexander'>
    <organization />
</author>


<date month='March'  year='2012' />

<abstract><t>Low power and Lossy Networks (LLNs) are a class of network in which both the routers and their interconnect are constrained.  LLN routers typically operate with constraints on processing power, memory, and energy (battery power).  Their interconnects are characterized by high loss rates, low data rates, and instability.  LLNs are comprised of anything from a few dozen and up to thousands of routers. Supported traffic flows include point-to-point (between devices inside the LLN), point-to-multipoint (from a central control point to a subset of devices inside the LLN), and multipoint-to-point (from devices inside the LLN towards a central control point).  This document specifies the IPv6 Routing Protocol for LLNs (RPL), which provides a mechanism whereby multipoint-to-point traffic from devices inside the LLN towards a central control point, as well as point-to- multipoint traffic from the central control point to the devices inside the LLN, is supported.  Support for point-to-point traffic is also available.</t></abstract>

</front>

<seriesInfo name='RFC' value='6550' />

</reference>

    </references>
    
  </back>
</rfc>
