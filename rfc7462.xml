<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" >
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="4"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc rfcedstyle="yes"?>

<rfc submissionType="IETF" consensus="yes" category="std" number="7462" updates="3261" ipr="pre5378Trust200902">
	<front>
		<title abbrev="Alert URNs">URNs for the Alert-Info Header Field of the Session&nbsp;Initiation&nbsp;Protocol&nbsp;(SIP)</title>
		<author fullname="Laura Liess" initials="L." role="editor" surname="Liess">
			<organization>Deutsche Telekom AG</organization>
			<address>
				<postal>
					<street>Heinrich-Hertz Str 3-7</street>
					<city>Darmstadt</city>
					<code>64295</code>
					<region>Hessen</region>
					<country>Germany</country>
				</postal>
				<phone>+49 6151 5812761</phone>
				<email>laura.liess.dt@gmail.com</email>
               </address>
		</author>
		<author fullname="Roland  Jesske" initials="R." surname="Jesske">
			<organization>Deutsche Telekom AG</organization>
			<address>
				<postal>
					<street>Heinrich-Hertz Str. 3-7</street>
					<city>Darmstadt</city>
					<code>64295</code>
					<region>Hessen</region>
					<country>Germany</country>
				</postal>
				<phone>+49 6151 5812766</phone>
				<email>r.jesske@telekom.de</email>
			</address>
		</author>
		<author fullname="Alan Johnston" initials="A." surname="Johnston">
			<organization abbrev="Avaya">
      Avaya, Inc.</organization>
			<address>
				<postal>
					<street></street>
					<city>St. Louis</city>
					<region>MO</region>
					<country>United States</country>
				</postal>
				<phone></phone>
				<email>alan.b.johnston@gmail.com</email>
			</address>
		</author>
		<author initials="D. R." surname="Worley" fullname="Dale R. Worley">
			<organization abbrev="Ariadne">
      Ariadne Internet Services, Inc.
      </organization>
			<address>
				<postal>
					<street>738 Main St.</street>
					<city>Waltham</city>
					<region>MA  </region>
					<code>02451</code>
					<country>United States</country>
				</postal>
				<phone>+1 781 647 9199</phone>
				<email>worley@ariadne.com</email>
				</address>
		</author>
		<author fullname="Paul Kyzivat" initials="P." surname="Kyzivat">
<organization>Huawei</organization>
			<address>
				<postal>
					<street></street>
					<city></city>
					<country>United States</country>
				</postal>
				<email>pkyzivat@alum.mit.edu</email>
			</address>
		</author>
		<date month="March" year="2015"/>
		<area>Real-time Applications and Infrastructure Area</area>
		<workgroup>SALUD</workgroup>

		<keyword>SIP</keyword>
		<keyword>Alert-Info</keyword>
		<keyword>URN</keyword>
		
		

<!-- ABSTRACT
-->				
		<abstract>
			<t>The Session Initiation Protocol (SIP) supports the capability to
   provide a reference to a specific rendering to be used by the User Agent (UA) 
   as an alerting signal (e.g., a ring tone or ringback tone) when
   the user is alerted.  This is done using the Alert-Info header field.
   However, the reference (typically a URL) addresses only a
   specific network resource with specific rendering properties.
   There is currently no support for standard identifiers for
   describing the semantics of the alerting situation or the
   characteristics of the alerting signal, without being tied to a
   particular rendering.  To overcome these limitations and support new
   applications, a new family of URNs for use in Alert-Info header
   fields (and situations with similar requirements) is defined in
   this specification.
</t>
<t>This document normatively updates RFC 3261, which defines the Session
Initiation Protocol (SIP).  It changes the usage of the Alert-Info header
field defined in RFC 3261 by additionally allowing its use in any non-100
provisional response to INVITE. This document also permits proxies to add or remove an Alert-Info  header field and to add or remove Alert-Info header field values.</t>
			<t></t>
		</abstract>
		
	</front>
	<middle>
	
	
	
<!-- INTRODUCTION
-->			
		<section title="Introduction">

				<t>The Session Initiation Protocol (SIP) <xref target="RFC3261"></xref> includes a
        means to suggest to a User Agent
        (UA) a particular ringback tone or ring tone to be used during session
        establishment. In <xref target="RFC3261"></xref>, this is done by
        including a URI, in the Alert-Info header field, that specifies a reference to
        the tone. The URI is most commonly the HTTP URL to an audio file. On the
        receipt of the Alert-Info header field, the UA may fetch the
        referenced ringback tone or ring tone and play it to the user.</t>
				<t>This mechanism hinders interoperability when there is no common
        understanding of the meaning of the referenced tone, which might be
        country- or vendor-specific. It can lead to problems for the user
        trying to interpret the tone and for the UA wanting to substitute its
        own tone (e.g., in accordance with user preferences) or provide an
        alternative alerting mode (e.g., for deaf and hard-of-hearing users). If
        the caller and the callee are from different countries, their understanding of
        the tones may differ significantly. Deaf or hard-of-hearing users may not sense
        the specific tone if it is provided as an audio file. The tone, per se,
        is also not useful for automata.</t>
        
<t>  Another limitation of using URLs of audio files is that the
   referenced tones are tied to particular renderings.
   There is no method to signal the semantic intention of the alert
   while enabling the recipient UA to choose the specific alert
   indication (such as a particular tone, vibration, or visual display)
   to use to signal the intention.  Similarly, there is no method to
   signal particular rendering features (such as short duration, delay,
   or country-specific conventions).</t>        
        
				<t>The issues with URLs that reference audio files can be avoided by
   using fixed URLs with specific meanings.  However, this approach has
   its own interoperability issues. For
        example, consider the Private Branch Exchange (PBX) special ring tone for an external (to the
        PBX) caller. Different vendors use different approaches such as:
	<list style="empty">
	  <t>Alert-Info: &lt;file://ring.pcm&gt;;alert=external</t>
	  </list>
	  where ring.pcm is a dummy file name, or:
	  <list style="empty">
	    <t>Alert-Info: &lt;file://external.ring.pcm&gt;</t>
	    <t>Alert-Info: &lt;sip:external-ringtone@example.com&gt;</t>
	    </list>
	    As a result, the 
        Alert-Info header field currently only works when the same vendor provides a PBX
        and UA, and only then if the same artificial proprietary URI convention is
        used.</t>
				
				<t>To solve the described issues, this specification defines the new
        URN namespace "alert" for the SIP Alert-Info header field that allows for
        programmatic user interface adaptation and for conversion of
        equivalent alerting tones in the Public Switched Telephone Network
        (PSTN) when the client is a gateway. The work to standardize an
        "alert" URN will increase SIP interoperability for this header
        field by replacing proprietary conventions used today.</t>
				<t>The "alert" namespace provides a syntax for several different
        application spaces, for example:</t>
        <t><list style="symbols">
						<t>Names for service
						indications, such as call waiting or
            automatic callback, not tied to any particular rendering.</t>
						<t>Names for common ring tones generated by PBX phones for cases
            such as an internal enterprise caller, external caller, ringback
            tone after a transfer failure or expiration of a hold timer,
            etc.</t>
						<t>Names for country-specific ringback tones.</t>
						<t>Names for things with specific renderings that aren't purely
            audio. They might be static icons, video sequences, text, etc.</t>
					</list></t>
				<t>Some advantages of a URN rather than a URL of a downloadable
        resource:</t>
				<t><list style="symbols">
						<t>There is no need to download it or deal with security issues
            associated with dereferencing.</t>
						<t>There are no formatting or compatibility issues.</t>
						<t>There is no security risk of rendering something unexpected and
            undesirable.</t>
						<t>The tone can be stored locally in whatever format and at
            whatever quality level is appropriate, because it is specified "by
            name" rather than "by value".</t>
						<t>It is easier to make policy decisions about whether or not to use it.</t>
						<t>It facilitates translation for the deaf and hard of hearing.</t>
					</list></t>
				<t>	 The downside is that if the recipient does not understand
        the URN, then it will only be able to render a default ringback tone or
        ring tone.</t>
				<t>This document creates a new URN namespace and registry for alert
        indications and registers some initial values.</t>
       
       <t>In practice, this specification extends the usage of the Alert-Info header field in that it will
        cause the use of a new class of URIs and the use of multiple URIs.
        Backward compatibility issues are not expected, as devices that do not
        understand an "alert" URN should ignore it, and devices should not
        malfunction upon receiving multiple Alert-Info header field values (&lt;alert-param&gt;s in <xref target="RFC3261"/>) (which was
        syntactically permitted before, but rarely used).</t> 
        
			</section>
			
				<section title="Requirements Language">
			<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref target="RFC2119"></xref>.</t>
		</section>
		
			
			<section title="Terminology">
				<t>This specification uses a number of terms to refer to the roles
        involved in the use of alerting indications in SIP. A "specifier"
        sends an "alerting indication" (one or more URNs in an Alert-Info
        header field) to a "renderer", which then "renders" a "signal" or "rendering"
        based on the indication to a human user. A "category" is a
        characteristic whose "values" can be used to classify indications.</t>
				<t>This specification uses the terms "ring tone" and "ringback tone".
        A "ring tone" or "calling signal" (terminology used in 
      <xref target="E182"></xref>) is a signal generated by the callee's
        end device, advising the callee about an incoming call. A "ringback
        tone" or "ringing tone" (terminology used in <xref target="E182"></xref>)
         is a signal advising the caller that a
        connection has been made and that a ring tone is being rendered to the
        callee.</t>
			</section>
			
			
			<section title="Updates to RFC 3261">
			<section title="Allow Alert-Info in Provisional Responses">
	<t>   This specification changes the usage of the Alert-Info header field defined in  <xref target="RFC3261"></xref> by additionally allowing its use in any non-100 provisional response to INVITE.</t>
				<t>
Previously, the Alert-Info header field was only permitted in 180
  (Ringing) responses.  But in telephony, other situations indicated
   by SIP provisional responses, such as 181 (Call Is Being Forwarded)
   and 182 (Call Is Being Queued), are often indicated by tones.
   Extending the applicability of the Alert-Info header field allows the telephony
   practice to be implemented in SIP.</t>
				
   <t>To support this change, the following paragraph replaces the
   the first paragraph of Section 20.4 of <xref target="RFC3261"/>:
   <list style="empty">
     <t>When present in an INVITE request, the Alert-Info header field
   specifies an alternative ring tone to the User Agent Server (UAS).  When present in a non-100 provisional
   response, the Alert-Info header field specifies an alternative ringback tone to
   the UAC.  A typical usage is for a proxy to insert this header field to provide a
   distinctive ring feature.</t>
   </list></t>
			</section>
			<section title="Proxies May Alter Alert-Info Header Fields">
			<t>A SIP proxy MAY add or remove an Alert-Info header field, and it MAY add or remove Alert-Info header field values, in a SIP request or a non-100 provisional response.</t>
			</section>
			</section>	


<!-- REQUIREMENTS
-->					
	
		<section title="Requirements">
			<t>This section discusses the requirements for an alerting indication to
      transport the semantics of the alerting situation or the characteristics
      of the rendering.
<list style="format REQ-%d:" counter="my_count">

			<t>The mechanism will allow UAs and proxies to
      provide in the Alert-Info header field an alerting indication that
      describes the semantics of the signaling situation or the
      characteristics of the rendering and allows the recipient to decide how
      to render the received information to the user.</t>
			<t>The mechanism will allow the alerting indication to be
      specified "by name" rather than "by value", to enable local policy
      decisions whether or not to use it.</t>
			<t>The mechanism will enable alerting indications to represent a
      wide variety of signals, which have many largely orthogonal
      characteristics.</t>
			<t>The mechanism will enable the set of alerting indications to
      support extensibility by a wide variety of organizations that
      are not coordinated with each other. Extensions will be able to:</t></list></t>

<t>
      
	  <list style="hanging" hangIndent="12">
					<t>add further values to any existing category</t>
					<t>add further categories that are orthogonal to existing categories</t>
					<t>semantically subdivide the meaning provided by any existing indication</t>
				</list>
			</t>	
			<t><list style="format REQ-%d:" counter="my_count">
        <t>The mechanism will be flexible, so new alerting
      indications can be defined in the future, when SIP-applications evolve.
      For example, "alert" URNs could identify specific media by name, such as
      "Beethoven's Fifth", and the end device could render some small part of
      it as a ring tone.</t>
			<t>The mechanism will provide only an indication capability, not
      a negotiation capability. </t>
			<t>The mechanism will not require an alerting
      indication to depend on context provided by a previous alerting
      indication in either direction.</t>
			<t>The mechanism will allow transmission in the Alert-Info header
      field of SIP INVITE requests and provisional 1xx responses excepting the
      100 responses.</t>
			<t>The mechanism will be able to accommodate both renderers that are
      customized with a limited or uncommon set of signals that they can render and
      renderers that are provided with a set of signals that have uncommon
      semantics. (The canonical example is a UA for the deaf and hard of hearing,
      customized with an alternative set of signals, video or text instead of
      audio. By REQ-6, the renderer has no way of transmitting this fact to
      the specifier.)</t>
			<t>The mechanism will allow an alerting indication to reliably
      carry all extensions if the specifier and the renderer have designs that
      are properly coordinated.</t>
			<t>The mechanism will allow a renderer to select a tone that
      approximates to that intended by the specifier if the renderer is unable
      to provide the precise tone indicated.</t>
			<t>The mechanism will support alerting indications relating to
      services such as call waiting, call forwarding, transfer recall, auto callback,
      and hold recall.</t>
			<t>The mechanism will allow rendering common PBX ring tone
      types.</t>
			<t>The mechanism will allow rendering specific country ringback
      tones.</t>


			<t>The mechanism will allow rendering tones for emergency
      alerts. (Use cases and definitions of URN values for emergency calls are not a subject of this specification.)</t>
			<t>The mechanism will allow rendering using other means than
      tones, e.g., text or images.</t>
			<t>The mechanism will allow PSTN gateways to map ring/ringback
      tones from legacy protocols to SIP at the edge of a network, e.g.,
      national ring tones as defined in TIA/EIA-41-D and 3GPP2 A.S0014. (Use
      cases and values definition for this situation are not a subject of this specification.)</t>
			<t>The mechanism will ensure that if an UA receives "alert"
      URNs or portions of an "alert" URN it does not understand, it can
      ignore them.</t>
			<t>The mechanism will allow storage of the actual encoding of
      the rendering locally rather than fetching it.</t>
			<t>The mechanism must provide a simple way to combine two 
			or more
      alerting indications to produce an alerting indication that requests a
      combination of the intentions of the two alerting indications, where any
      contradictions or conflicts between the two alerting indications are
      resolved in favor of the intention of the first alerting indication.</t></list></t>
		</section>
		

<!-- USE CASES
-->		
		<section anchor="UseCases" title="Use Cases">
			<t>This section describes some use cases for which the "alert" URN
      mechanism is needed today.</t>
			<section anchor="PBX_Tones" title="PBX Ring Tones">
				<t>This section defines some commonly encountered ring tones on PBX or
        business phones. They are as listed in the following subsections.</t>
				<section title="Normal">
					<t>This tone indicates that the default or normal ring tone should
          be rendered. This is essentially a no-operation "alert" URN and
          should be treated by the UA as if no "alert" URN is present. This
          is most useful when Alert-Info header field parameters are being
          used. For example, in <xref target="RFC7463"></xref>, an Alert-Info
          header field needs to be present containing the "appearance"
          parameter, but no special ring tone needs to be specified.</t>

          
				</section>
				<section title="External">
					<t>This tone is used to indicate that the caller is external to the
          enterprise or PBX system. This could be a call from the PSTN or from
          a SIP trunk.</t>
				</section>
				<section title="Internal">
					<t>This tone is used to indicate that the caller is internal to the
          enterprise or PBX system. The call could have been originated from
          another user on this PBX or on another PBX within the
          enterprise.</t>
				</section>
				<section title="Priority">
					<t>A PBX tone needs to indicate that a priority level alert should
          be applied for the type of alerting specified (e.g., internal
          alerting).</t>
				</section>
				<section title="Short ">
					<t>In this case, the alerting type specified (e.g., internal alerting)
          should be rendered shorter than normal. In contact centers, this is
          sometimes referred to as "abbreviated ringing" or a "zip tone".</t>
				</section>
				<section anchor="DelayDescription" title="Delayed">
					<t>In this case, the alerting type specified should be rendered after
          a short delay. In some bridged-line/shared-line-appearance
          implementations, this is used so that the bridged line does not ring
          at exactly the same time as the main line but is delayed a few
          seconds.</t>
				</section>
			</section>
			<section anchor="ServiceTones" title="Service Tones">
				<t>These tones are used to indicate specific PBX and public network
        telephony services.</t>
				<section anchor="CallWaiting" title="Call Waiting">
					<t>The call-waiting service <xref target="TS24.615"></xref> permits
          a callee to be notified of an incoming call while the callee is
          engaged in an active or held call. Subsequently, the callee can
          either accept, reject, or ignore the incoming call. There is an
          interest on the caller side to be informed about the call-waiting
          situation on the callee side. Having this information the caller can
          decide whether to continue waiting for callee to pickup or better to
          call some time later when it is estimated that the callee could have
          finished the ongoing conversation. To provide this information, a callee's UA (or proxy) that is aware of
  the call-waiting condition can add the call-waiting indication  to the Alert-Info header field in the
          180 (Ringing) response.</t>
				</section>
				<section anchor="Forward" title="Forward">
					<t>This feature is used in a 180 (Ringing) response when a call
          forwarding feature has been initiated on an INVITE. Many PBX system
          implement a forwarding "beep" followed by normal ringing to indicate
          this. Note that a 181 response can be used in place of this URN.</t>
				</section>
				<section title="Transfer Recall">
					<t>This feature is used when a blind transfer 
       <xref target="RFC5589"></xref> has been performed by a server on behalf of
          the transferor and fails. Instead of failing the call, the server
          calls back the transferor, giving them another chance to transfer or
          otherwise deal with the call. This service tone is used to
          distinguish this INVITE from a normal incoming call.</t>
				</section>
				<section title="Auto Callback">
					<t>This feature is used when a user has utilized a server to
          implement an automatic callback service 
     <xref target="RFC6910"></xref>. When the user is available,
          the server calls back the user and utilizes this service tone to
          distinguish this INVITE from a normal incoming call.</t>
				</section>
				<section title="Hold Recall">
					<t>This feature is used when a server implements a call hold timer
          on behalf of an endpoint. After a certain period of time of being on
          hold, the user who placed the call on hold is alerted to either
          retrieve the call or otherwise dispose of the call. This service
          tone is used to distinguish this case from a normal incoming
          call.</t>
				</section>
			</section>
			<section anchor="CountryTones" 
           title="Country-Specific Ringback Tone Indications for the Public Switched Telephone Network">
				<t>In the PSTN, different tones are used in different countries. End
        users are accustomed to hear the callee's country ringback tone and
        would like to have this feature for SIP.</t>
			</section>
		</section>
		
	
<!-- URN SPECIFICATION
-->		

<!-- IANA Flag; Section 7 contains the template with actions for IANA updates 
-->			
		<section anchor="URNSpecification" title="URN Specification for the &quot;alert&quot; Namespace Identifier">
			<t>This section provides the registration template for the "alert" URN
   namespace identifier (NID) according to <xref target="RFC2141"> 
				</xref> and <xref target="RFC3406">
				</xref>.</t>



			    <t><list style="hanging">
					<t hangText="Namespace ID:">      alert</t>
				      
					
					<t hangText="Registration Information:">

						<list style="hanging">

							<t hangText="Registration version:">1</t>


							<t hangText="Registration date:">  2014-12-10</t>
						</list>
					</t><t></t>
				
					<t hangText="Declared registrant of the namespace:">
						<list style="hanging">
							<t hangText="Registering organization:">Real-time Applications and Infrastructure Area,
	  IETF</t>
							<t hangText="Designated contact:">RAI Area Director</t>
							<t hangText="Designated contact email:">rai-ads@ietf.org</t>
						</list>
					</t>
					
					<t hangText="Declaration of syntactic structure:"/>
					<t>The Namespace Specific String (NSS) for the "alert" URNs is
          called an &lt;alert-identifier&gt; and has a hierarchical structure. The
      first colon-separated part after "alert" is called the &lt;alert-category&gt;; the parts to the right of that are
      &lt;alert-ind-part&gt;s, and together form 
      the &lt;alert-indication&gt;.  The general form is
      urn:alert:&lt;alert-category&gt;:&lt;alert-indication&gt;.</t>
	
					<t>The following
					&lt;alert-category&gt; identifiers are
					defined in this document:
		"service" , "priority" , "source" , "duration", "delay",
      and "locale".  The &lt;alert-category&gt; set can be extended in the
      future, either by standardization or by private action. 
      The &lt;alert-category&gt;s describe distinct features of alerting
      signals.</t>
        
      
					<t> Any "alert" URN defined in this
          specification is syntactically valid for ring and ringback tones and
          can be used in SIP INVITE requests or in provisional 1xx responses
          excepting the 100 response.</t>
          
					
			
					<t>The ABNF <xref target="RFC5234"/> for the "alert" URNs is
          shown below:</t>
					<t>
						<figure>
							<artwork><![CDATA[
      alert-URN         = "urn:alert:" alert-identifier
      alert-identifier  = alert-category ":" alert-indication
      alert-category    = alert-name
      alert-indication  = alert-ind-part *(":" alert-ind-part)
      alert-ind-part    = alert-name
      alert-name        = alert-label / private-name
      private-name      = alert-label "@" provider
      provider          = alert-label
      alert-label       = let-dig [ *let-dig-hyp let-dig ]
      let-dig-hyp       = let-dig / "-"
      let-dig           = ALPHA / DIGIT
      ALPHA             = %x41-5A / %x61-7A   ; A-Z / a-z
      DIGIT             = %x30-39 ; 0-9
]]></artwork>
						</figure>

					</t>
					
<t> &lt;alert-label&gt;s MUST comply with the
      syntax for Non-Reserved LDH labels <xref target="RFC5890"/>.  Registered
      URNs and components thereof MUST be transmitted as registered (including case). 
</t>						

					<t hangText="Relevant ancillary documentation:">RFC 7462</t>

   
   				
			<t hangText="Namespace considerations:">			
 This specification defines a URN namespace "alert" for URNs
      representing signals or renderings that are presented to users
      to inform them of events and actions.  The initial usage is to
      specify ring tones and ringback tones when dialogs are
      established in SIP, but they can also be used for other
      communication-initiation protocols (e.g., H.323), and more
      generally, in any situation (e.g., web pages or endpoint device
      software configurations) to describe how a user should be
      signaled.</t>

<t>  An "alert" URN does not describe a complete signal, but rather it
      describes a particular characteristic of the event it is
      signaling or a feature of the signal to be presented.  The
      complete specification of the signal is a sequence of "alert"
      URNs specifying the desired characteristics/significance of the
      signal in priority order, with the most important aspects specified by
      the earlier URNs.  This allows the sender of a sequence of URNs
      to compose very detailed specifications from a restricted set of
      URNs, and to clearly specify which aspects of the specification
      it considers most important.
</t>

<t>
      The initial scope of usage is in the Alert-Info header field, in
      initial INVITE requests (to indicate how the called user should
      be alerted regarding the call) and non-100 provisional (1xx)
      responses to those INVITE requests (to indicate the ringback,
      how the calling user should be alerted regarding the progress of
      the call).
</t>

<t>
      In order to ensure widespread adoption of these URNs for
      indicating ring tones and ringback tones, the scheme must allow
      replication of the current diversity of these tones.  Currently,
      these tones vary between the PSTNs of different nations and
      between equipment supplied by different vendors.  Thus, the
      scheme must accommodate national variations and proprietary
      extensions in a way that minimizes the information that is lost
      during interoperation between systems that follow different
      national variations or that are supplied by different vendors.
</t>

<t>
      The scheme allows definition of private extension URNs that refine
      and extend the information provided by standard URNs.  Private
      extension URNs can also refine and extend the information
      provided by other private extension URNs.  Private extensions can also
      define entirely new categories of information about calls.  We
      expect these extensions to be used extensively when existing PBX
      products are converted to support SIP operation.
</t>

<t>
      The device that receives an Alert-Info header field containing a
      sequence of "alert" URNs provides to the user a rendering 
      that represents the semantic content of the URNs.  The device is
      given great leeway in choosing the rendering, but it is
      constrained by rules that maximize interoperability
      between systems that support different sets of private
      extensions.  In particular, earlier URNs in the sequence
      have priority of expression over later URNs in the sequence,
      and URNs that are not usable in their entirety (because they
      contain unknown extensions or are incompatible with previous
      URNs) are successively truncated in attempt to construct a URN
      that retains some information and is renderable in the context.
</t>

<t>
      Due to the practical importance of private extensions for the
      adoption of URNs for alerting calls and the very specific rules
      for private extensions and the corresponding processing rules
      that allow quality interoperation in the face of private
      extensions, the requirements of the "alert" URN scheme cannot be
      met by a fixed enumeration of URNs and corresponding meanings.
      In particular, the existing namespace "urn:ietf:params" does not
      suffice (unless the private extension apparatus is applied to
      that namespace).
</t>



<t>
      There do not appear to be other URN namespaces that
      uniquely identify the semantic of a signal or rendering feature.
      Unlike most other currently registered URN namespaces, the
      "alert" URN does not identify documents and protocol objects
      (e.g., <xref target="RFC3044"/>, <xref target="RFC3120"/>, <xref target="RFC3187"/>, <xref target="RFC3188"/>, <xref target="RFC4179"/>,
      <xref target="RFC4195"/>, <xref target="RFC4198"/>), types of telecommunications equipment
      <xref target="RFC4152"/>, people, or organizations <xref target="RFC3043"/>.
</t>

<t>
      The &lt;alert-URN&gt;s are hierarchical identifiers.  An &lt;alert-URN&gt;
      asserts some fact or feature of the offered SIP dialog, or some
      fact or feature of how it should be presented to a user, or of
      how it is being presented to a user.  Removing an &lt;alert-ind-part&gt;
      from the end of an &lt;alert-URN&gt; (which has more than one
      &lt;alert-ind-part&gt;) creates a shorter &lt;alert-URN&gt; with a less specific
      meaning; the set of dialogs to which the longer &lt;alert-URN&gt;
      applies is necessarily a subset of the set of dialogs to which
      the shorter &lt;alert-URN&gt; applies.  (If the starting &lt;alert-URN&gt;
      contains only one &lt;alert-ind-part&gt;, and thus the &lt;alert-ind-part&gt; cannot
      be removed to make a shorter &lt;alert-URN&gt;, we can consider the
      set of dialogs to which the &lt;alert-URN&gt; applies to be a subset
      of the set of all dialogs.)
</t>

<t>
      The specific criteria defining the subset to which the longer
      &lt;alert-URN&gt; applies, within the larger set of dialogs, is
      considered to be the meaning of the final &lt;alert-ind-part&gt;.  This
      meaning is relative to and depends upon the preceding
      &lt;alert-category&gt; and &lt;alert-ind-part&gt;s (if any).  The meanings of
      two &lt;alert-ind-part&gt;s that are textually the same but are preceded
      by different &lt;alert-category&gt;s or &lt;alert-ind-part&gt;s have no
      necessary connection.  (An &lt;alert-category&gt; considered alone
      has no meaning in this sense.)
</t>

<t>
      The organization owning the &lt;provider&gt; within a &lt;private-name&gt;
      specifies the meaning of that &lt;private-name&gt; when it is used as
      an &lt;alert-ind-part&gt;.  (The organization owning a &lt;provider&gt; is
      specified by the registry described in <xref target="Provider-Registry"/>.)
</t>

<t>
      The organization owning the &lt;provider&gt; within a &lt;private-name&gt; (in
      either an &lt;alert-category&gt; or an &lt;alert-ind-part&gt;) specifies the
      meaning of each &lt;alert-ind-part&gt;, which is an &lt;alert-label&gt; that
      follows that &lt;private-name&gt; and that precedes the next
      &lt;alert-ind-part&gt; which is a &lt;private-name&gt; (if any).
</t>

<t>
      The meaning of all other &lt;alert-ind-part&gt;s (i.e., those that are not
      &lt;private-name&gt;s and do not follow a &lt;private-name&gt;) is defined
      by standardization.
</t>

<t hangText="Community considerations:">The "alert" URNs are relevant to a large
      cross-section of Internet users, namely those that initiate and
      receive communication connections via the Session Initiation
      Protocol.  These users include both technical and non-technical
      users, on a variety of devices and with a variety of perception
      capabilities.  The "alert" URNs will allow Internet users to
      receive more information about offered calls and enable them to
      better make decisions about accepting an offered call, and to get
      better feedback on the progress of a call they have made.</t>

      <t> User interfaces that utilize alternative sensory modes can better render
      the ring and ringback tones based on the "alert" URNs because
      the URNs provide more detailed information regarding the
      intention of communications than is provided by current SIP
      mechanisms.</t>
      

<t hangText="Process of identifier assignment:"> </t><t> 

      Assignment of standardized "alert" URNs is by insertion into the
      IANA registry described in  <xref target="Alert-Registry"></xref>.  This
      process defines the meanings of &lt;alert-ind-part&gt;s that have
      standardized meanings, as described in "Namespace Considerations".
</t>

<t>A new URN MUST NOT be
      registered if it is equal by the comparison rules to an
      already registered URN.
  </t>    

<t> 
      Private extensions are "alert" URNs that include
      &lt;alert-ind-part&gt;s that are &lt;private-name&gt;s and &lt;alert-label&gt;s
      that appear after a &lt;private-name&gt; (either as an
      &lt;alert-category&gt; or an &lt;alert-indication&gt;).  If such an
      &lt;alert-ind-part&gt; is a &lt;private-name&gt;, its meaning is defined by
      the organization that owns the &lt;provider&gt; that appears in the
      &lt;private-name&gt;.  If the &lt;alert-ind-part&gt; is an &lt;alert-label&gt;,
      its meaning is defined by the organization that owns the &lt;provider&gt;
      that appears in the closest &lt;private-name&gt; preceding the
      &lt;alert-label&gt;.
      The organization owning a &lt;provider&gt; is
      specified by the registry described in <xref target="Provider-Registry"/>.
	</t>
			
					<t hangText="Identifier uniqueness and persistence considerations:"> 
An "alert" URN identifies a semantic feature of a
      call or a sensory feature of how the call alerting should be a 
      rendered at the caller's or callee's end device.</t>
      
      <t> 
      For standardized &lt;alert-ind-part&gt;s in URNs, uniqueness and
      persistence of their meanings is guaranteed by the fact that
      they are registered with IANA in accordance with the procedures
      of  <xref target="Alert-Registry"></xref>; the feature identified by a
      particular "alert" URN is distinct from the feature identified
      by any other standardized "alert" URN.
</t>

<t> 
      Assuring uniqueness and persistence of the meanings of private
      extensions is delegated to the organizations  that define private
      extension &lt;alert-ind-part&gt;s.  The organization responsible for a
      particular &lt;alert-ind-part&gt; in a particular "alert" URN is the
      owner of a syntactically determined &lt;provider&gt; part within the
      URN.
</t>

<t>    An organization SHOULD use only one &lt;provider&gt; value for all of the
   &lt;private-name&gt;s it defines.     
</t>
		
					<t hangText="Process for identifier resolution:">
The process of identifier resolution is the process by which a
      rendering device chooses a rendering to represent a sequence of
      "alert" URNs.  The device is allowed great leeway in making this
      choice, but the process MUST obey the rules of 
<xref target="PriorityRules"></xref>.  The device is expected to provide renderings that
      users associate with the meanings assigned to the URNs within
      their cultural context.  A non-normative example resolution
      algorithm is given in  <xref target="AlgorithmDescription"></xref>.</t>
      
					<t hangText="Rules for lexical equivalence:"> "alert" URNs are compared
      according to case-insensitive string equality.</t>
      


					<t hangText="Conformance with URN syntax:">All "alert" URNs must conform to the
      ABNF in the "Declaration of Syntactic Structure" in <xref target="URNSpecification" />.  That ABNF is a subset of the generic URN syntax <xref target="RFC2141"/>.
      &lt;alert-label&gt;s are
      constrained to be Non-Reserved LDH labels <xref target="RFC5890"/>, that is, "ordinary
      ASCII labels".  Future standardization may allow &lt;alert-label&gt;s
      that are A-labels <xref target="RFC5890"/>, and so interpreters of "alert" URNs MUST
      operate correctly (per <xref target="PriorityRules"></xref>)
      when given such URNs as input.
</t>

					<t hangText="Validation mechanism:"> 
An "alert" URN containing no private extensions can be validated
      based on the IANA registry of standardized "alert" URNs.

      Validating an "alert" URN containing private extensions requires
      obtaining information regarding the private extensions defined
      by the organization that owns the &lt;provider&gt; in the relevant
      &lt;private-name&gt;.  The identity of the organization can be determined
      from the IANA registry described in <xref target="Alert-Registry"/>.

      However, if an "alert" URN contains at least one
      &lt;alert-identifier&gt; that precedes the first &lt;private-name&gt;, the
      portion of the "alert" URN that precedes the first
      &lt;private-name&gt; must itself be a valid standardized "alert" URN,
      which may be validated as above.</t>
      
					<t hangText="Scope:">The scope for this URN is public and
          global.</t>
		</list>	</t>	
		</section>
		

<!-- URN VALUES DEFINITIONS
-->			
		
		<section anchor="Values" title="&quot;alert&quot; URN Values">
			<section anchor="CategoryValues" title="&lt;alert-category&gt; Values">
				<t>The following &lt;alert-category&gt;  values are defined in this document:</t>
<?rfc subcompact="yes"?>
				<t><list style="hanging">
						<t hangText="- service"></t>
						<t hangText="- source"></t>
						<t hangText="- priority"></t>
						<t hangText="- duration"></t>
						<t hangText="- delay"></t>
						<t hangText="- locale"></t>
					</list></t>
<?rfc subcompact="no"?>
			</section>


			<section anchor="IndicationValues" title="&lt;alert-indication&gt; Values">
				<t>This section describes the "alert" URN indication values for the
        &lt;alert-category&gt;s defined in this document.</t>
				<t>For each &lt;alert-category&gt;, a default &lt;alert-indication&gt; is defined, which is
        essentially a no-operation "alert" URN and should be treated by the
        UA as if no "alert" URN for the respective category is present.
       "alert" URN default indications are most useful when Alert-Info
        header field parameters are being used. For example, in 
    <xref target="RFC7463"></xref>, an Alert-Info
        header field needs to be present containing the "appearance"
        parameter, but no special ringtone need be specified.</t>
       
        

				<t>The &lt;private-name&gt; syntax is used for extensions
       defined by independent organizations, as described in 
       <xref target="PrivateExtensionRules"></xref>. </t>
				<section anchor="ServiceIndications" 
      title="&lt;alert-indication&gt; Values for the &lt;alert-category&gt; &quot;service&quot; ">
<?rfc subcompact="yes"?>
					<t><list style="hanging">
							<t hangText="- normal (default)"></t>
							<t hangText="- call-waiting"></t>
							<t hangText="- forward"></t>
							<t hangText="- recall:callback"></t>
							<t hangText="- recall:hold"></t>
							<t hangText="- recall:transfer"></t>
							<t hangText="- &lt;private-name&gt;"></t>
						</list></t>
<?rfc subcompact="no"?>
					<t>Examples: &lt;urn:alert:service:call-waiting&gt; or
          &lt;urn:alert:service:recall:transfer&gt;.</t>
				</section>
				<section anchor="SourceIndications" 
    title="&lt;alert-indication&gt; Values for the &lt;alert-category&gt; &quot;source&quot; ">
<?rfc subcompact="yes"?>
					<t><list style="hanging">
							<t hangText="- unclassified (default)"></t>
							<t hangText="- internal"></t>
							<t hangText="- external"></t>
							<t hangText="- friend"></t>
							<t hangText="- family"></t>
							<t hangText="- &lt;private-name&gt;"></t>
						</list></t>
<?rfc subcompact="no"?>
					<t>(These &lt;alert-indication&gt;s
					will rarely be provided by the
					sending UA; rather they will
					usually be inserted by a proxy
					acting on behalf of the
					recipient UA to inform the recipient UA
					about the origins of a
					call.)</t>
					<t>Examples: &lt;urn:alert:source:external&gt;.</t>
				</section>
				<section anchor="PriorityIndications" 
     title="&lt;alert-indication&gt; Values for the &lt;alert-category&gt; &quot;priority&quot; ">
<?rfc subcompact="yes"?>
					<t><list style="hanging">
							<t hangText="- normal (default)"></t>
							<t hangText="- low"></t>
							<t hangText="- high"></t>
							<t hangText="- &lt;private-name&gt;"></t>
<?rfc subcompact="no"?>
						</list></t>
					<t>Examples: &lt;urn:alert:priority:high&gt;.</t>
				</section>
				<section anchor="DurationIndications" 
    title="&lt;alert-Indication&gt;  Values for the &lt;alert-category&gt; &quot;duration&quot; ">
<?rfc subcompact="yes"?>
					<t><list style="hanging">
							<t hangText="- normal (default)"></t>
							<t hangText="- short"></t>
							<t hangText="- long"></t>
							<t hangText="- &lt;private-name&gt;"></t>
						</list></t>
<?rfc subcompact="no"?>
					<t>Examples: &lt;urn:alert:duration:short&gt;.</t>
				</section>
				<section anchor="DelayIndications" title="&lt;alert-indication&gt; Values for the &lt;alert-category&gt; &quot;delay&quot; ">
<?rfc subcompact="yes"?>
					<t><list style="hanging">
							<t hangText="- none (default)"></t>
							<t hangText="- yes"></t>
							<t hangText="- &lt;private-name&gt;"></t>
						</list></t>
<?rfc subcompact="no"?>
					<t>Examples: &lt;urn:alert:delay:yes&gt;.</t>
				</section>
				<section anchor="LocaleIndications" title="&lt;alert-indication&gt; Values for the &lt;alert-category&gt; &quot;locale&quot; ">
<?rfc subcompact="yes"?>
					<t><list style="hanging">
							<t hangText="- default (default)"></t>
							<t hangText="- country:&lt;ISO 3166-1 country code&gt;"></t>
							<t hangText="- &lt;private-name&gt;"></t>
						</list></t>
<?rfc subcompact="no"?>
					<t>The ISO 3166-1 country code <xref target="ISO3166-1"></xref> is
          used to inform the renderer on the other side of the call that a
          country-specific rendering should be used. For example, to indicate
          ringback tones from South Africa, the following URN would be used:
          &lt;urn:alert:locale:country:za&gt;.</t>
				</section>
			</section>
		</section>
		
		
		
	<!-- IANA CONSIDERATIONS -->		
	<section anchor="IANA" title="IANA Considerations">
	  
	  <section title="URN Namespace Identifier &quot;alert&quot;" anchor="Alert-NID">
	    <t>This section registers a new URN namespace identifier (NID), "alert", in
	    accordance with <xref target="RFC3406"/> with the registration template provided in
	    <xref target="URNSpecification"></xref>.</t></section>

	    <section title="'Alert URN Identifiers' Registry" anchor="Alert-Registry">
	      <t>  Standard "alert" URNs are recorded as
   &lt;alert-identifier&gt;s in a new registry called "Alert URN
   Identifiers".  
   Thus, creating a new standard "alert" URN requires IANA action.
   IANA manages the "Alert URN Identifiers" registry under the policy
   'Specification Required' <xref target="RFC5226"/> following
   the guidelines in <xref target="GeneralExtensionRules"/>.</t>

<t> 
   The registry contains entries in the following formats:</t>
				<t><figure>
						<artwork><![CDATA[
   <alert-category>/      Reference    Description
   <alert-identifier>
   ---------------------------------------------------------------
   foo                    [RFCxyz]     Description of the 'foo'
                                       <alert-category>;                                                        
   foo:bar                [RFCabc]     Description of the 'foo:bar' 
                                       <alert-identifier>
                                                       
   foo:<range>            [RFCdef]     Description of the
   'foo:<category>'                    <alert-identifer>s (which will 
                                       reference the <range> value)
]]></artwork>
					</figure></t>
   <t>The first value in each row is the value that is registered,
   which is either:  (1) an &lt;alert-category&gt; value, (2) an
   &lt;alert-identifier&gt; value, composed of an &lt;alert-category&gt; followed
   by an &lt;alert-indication&gt;, in turn composed of one or more
   &lt;alert-label&gt;s, or (3) a pattern for &lt;alert-identifier&gt; values
   (e.g., for the "locale" &lt;alert-category&gt; in
   <xref target="LocaleRegistrations"></xref>). </t>
   <t>The second value in each row is the reference to the required
   specification for the value.</t>
   <t>The third value in each row is a short description of the
   semantics of the value.</t>
 <t> 
 A new URN MUST NOT be registered if it is equal by the comparison
   rules (that is, case-insensitive string comparison) to an already
   registered URN. 
   </t>
   	<t> &lt;alert-category&gt; and &lt;alert-identifier&gt; values that 
   	contain &lt;private-name&gt;s are not managed by IANA. The process of assigning these
values is described in  <xref target="PrivateExtensionRules"></xref>.  
</t>

	
	
	

	
			<section anchor="InitialIANARegistration" title="Initial IANA Registration">

<t> This document defines the &lt;alert-category&gt;s 'service', 'source',
'priority', 'duration', 'delay' and 'locale'.
The entries to be added to the 'Alert URN Identifiers' registry table for each
&lt;alert-category&gt; are given in the respective sections below.
</t>
				
		
				<section anchor="ServiceRegistrations" title=" The &quot;service&quot; &lt;alert-category&gt; and &lt;alert-identifier&gt;s ">
					<t>The following table contains the initial IANA registration for
          the "service" &lt;alert-category&gt; and &lt;alert-identifier&gt;s. The value of
          this indicator is set to a value different from "normal" if the
          caller or callee is informed that a specific telephony service 
         has been initiated.</t>
					<figure>
						<artwork><![CDATA[
<alert-category>/              Reference  Description
<alert-identifier>
-----------------------------------------------------------
service                        RFC 7462   Specific telephony 
                                          service used in this  
                                          call

service:normal                 RFC 7462   Normal ring/ringback 
                                          rendering (default value)

service:call-waiting           RFC 7462   Call waiting was 
                                          initiated at the other side 
                                          of the call

service:forward                RFC 7462   Call has been forwarded

service:recall:callback        RFC 7462   Recall due to callback

service:recall:hold            RFC 7462   Recall due to call hold

service:recall:transfer        RFC 7462   Recall due to transfer
    
     ]]></artwork>
					</figure>
					
	    			
				</section>
				<section anchor="SourceRegistrations" title="The &quot;source&quot; &lt;alert-category&gt; and &lt;alert-identifier&gt;s">
					<t>The following table contains the initial IANA registration for
          the "source" &lt;alert-category&gt; and &lt;alert-identifier&gt;. The value of this
          indicator provides information about the user at the other side of
          the call.</t>
					<figure>
						<artwork><![CDATA[
<alert-category>/             Reference  Description
<alert-identifier>
-----------------------------------------------------------
source                        RFC 7462   Classification 
                                         of the other party
                                         to the call

source:unclassified           RFC 7462   Unclassified ring/ringback 
                                         rendering (default value)

source:internal               RFC 7462   User at the other side of 
                                         the call is internal to the
                                         enterprise or PBX system 

source:external               RFC 7462   User at the other side of
                                         the call is external to the
                                         enterprise or PBX system 

source:friend                 RFC 7462   User at the other side of 
                                         the call is a friend 

source:family                 RFC 7462   User at the other side of 
                                         the call is a family member
     ]]></artwork>
					</figure>
					
 				
					
				</section>
				<section anchor="PriorityRegistrations" title=" The &quot;priority&quot; &lt;alert-category&gt; and &lt;alert-identifier&gt;s">
					<t>The following table contains the initial IANA registration for
          the "priority" &lt;alert-category&gt; and &lt;alert-identifier&gt;s. The value of
          this indicator provides information about the priority the alerted
          user should give to the call.</t>
					<figure>
						<artwork><![CDATA[
<alert-category>/               Reference  Description
<alert-identifier>
-----------------------------------------------------------
priority                        RFC 7462   Priority of the 
                                           call

priority:normal                 RFC 7462   Normal ring/ringback 
                                           rendering (default value)

priority:low                    RFC 7462   Low priority call

priority:high                   RFC 7462   High priority call  

     ]]></artwork>
					</figure>
					
 				
					
				</section>
				<section anchor="DurationRegistrations" title="The &quot;duration&quot; &lt;alert-category&gt; and &lt;alert-identifier&gt;s ">
					<t>The following table contains the initial IANA registration for
          the "duration" &lt;alert-category&gt; and &lt;alert-identifier&gt;s. The value of
          this indicator provides information about the duration of the
   alerting signals compared to the default alerting signals.</t>
					<figure>
						<artwork><![CDATA[
<alert-category>/               Reference  Description
<alert-identifier>
-----------------------------------------------------------
duration                        RFC 7462   Duration of alerting signal 

duration:normal                 RFC 7462   Normal ring/ringback 
                                           rendering (default value)

duration:short                  RFC 7462   Shorter than normal

duration:long                   RFC 7462   Longer than normal
        
     ]]></artwork>
					</figure>
					
 						
					
				</section>
				<section anchor="DelayRegistrations" title="The &quot;delay&quot;  &lt;alert-category&gt; and &lt;alert-identifier&gt;s">
					<t>The following table contains the initial IANA registration for
          the "delay" &lt;alert-category&gt; and &lt;alert-identifier&gt;s. The value of this
          indicator provides information about whether the presentation of the 
   alerting signal should be delayed compared to the default
   presentation process. For more details see <xref target="DelayDescription"></xref>.</t>
					<figure>
						<artwork><![CDATA[
<alert-category>/            Reference  Description
<alert-identifier>
-----------------------------------------------------------
delay                        RFC 7462   Delay of rendering
                                        of alerting signal

delay:none                   RFC 7462   Immediate alerting 
                                        (default value)

delay:yes                    RFC 7462   Delayed alerting

     ]]></artwork>
					</figure>
				</section>
				<section anchor="LocaleRegistrations" title="The &quot;locale&quot;  &lt;alert-category&gt; and &lt;alert-identifier&gt;s ">
					<t>The following table contains the initial IANA registration for
          the "locale" &lt;alert-category&gt; and &lt;alert-identifier&gt;s. The value of this
   indicator provides information about whether the alerting signals
   characteristic of the specified location should be used.</t>
					<figure>
						<artwork><![CDATA[
<alert-category>/             Reference  Description
<alert-identifier>
-----------------------------------------------------------
locale                        RFC 7462   Location-specific 
                                         alerting signals

locale:default                RFC 7462   Alerting not location 
                                         specific  
                                         (default value)

locale:country:<ISO 3166-1 country code>
                              RFC 7462   Alerting according to the
                                         conventions of the specified
                                         country
 
     ]]></artwork>
					</figure>
				</section>
			      </section>
			      </section>
			
		

		<section title="'Alert URN Providers' Registry" anchor="Provider-Registry">

		  <t>Values of &lt;provider&gt;, which are used to
		  create &lt;private-name&gt;s, are recorded in a
		  new registry called "Alert URN Providers".
		  (Private extension "alert" URNs that are defined are
		  not recorded by IANA.)
		  The registry is managed by IANA under the policy
		  'First Come First Served' <xref target="RFC5226"/>.</t>

		  <t>The registry contains entries in the following format:</t>
		  <t><figure>
		    <artwork><![CDATA[
   <provider>             Registrant       Contact URI
   ---------------------------------------------------------------------
   example                IETF             rai-ads@ietf.org
]]></artwork>


		  </figure></t>
   <t>The first value in each row is the &lt;provider&gt; value that
   is registered.  This value is case-insensitive and MUST comply with the
   syntax for Non-Reserved LDH labels <xref target="RFC5890"/>.</t>
   <t>The second value in each row is the name of the registrant of the value.</t>
   <t>The third value is a contact URI for the registrant.</t>

   <t>The registry initially contains the one entry shown above, which
   can be used for constructing examples of private extension URNs.</t>
		</section>
	
	      </section>
	
<!-- EXTENSION RULES
-->		
		
		<section anchor="ExtensionRules" title="Extension Rules">
			<section anchor="GeneralExtensionRules" title="General Extension Rules">
				<t>  The set of  "alert" URNs is extensible.  An extension "at the top
   level" creates a new &lt;alert-category&gt; (which represents a new
   alerting characteristic), an extension "at the second level"
   creates a new &lt;alert-indication&gt; value for an existing
   &lt;alert-category&gt;, an extension "at the third level" creates a
   subdivision of an existing &lt;alert-indication&gt; (that has one
   &lt;alert-ind-part&gt;), etc.  URNs allow (in principle) indefinite
   subdivision of existing &lt;alert-indication&gt; values, although most of
   the standard "alert" URNs have only one level of subdivision and
   a few have two levels of subdivision.</t>
   <t>Extensions, either standard or private, MUST conform to the
   following principles:</t>
   <t>A new &lt;alert-category&gt; is independent of all previously existing
   &lt;alert-category&gt;s:  For any combination of one &lt;alert-identifier&gt;
   in the new &lt;alert-category&gt; with any one &lt;alert-identifier&gt; in any of
   the previously existing &lt;alert-category&gt;s, there are potential
   calls to which the combination can be meaningfully applied.</t>
   <t>A new &lt;alert-identifier&gt; that has more than one &lt;alert-ind-part&gt; is a
   semantic refinement of a parent &lt;alert-identifier&gt;, the parent being
   obtained by deleting the final &lt;alert-ind-part&gt;.  The new
   &lt;alert-identifier&gt; has as parent the most specific previously existing
   &lt;alert-identifier&gt; whose meaning includes all potential calls to which
   the new &lt;alert-identifier&gt; could be meaningfully applied.</t>
   <t>A new &lt;alert-identifier&gt; has no semantic overlap with any sibling
   &lt;alert-identifier&gt; (&lt;alert-identifier&gt;s that differ only in the final
   &lt;alert-ind-part&gt;).  That is, there could be no call to which both
   &lt;alert-identifier&gt;s could be meaningfully applied.</t>
   <t>The process for defining new standard "alert" URNs is described
   in <xref target="Alert-Registry"/>; all such definitions require
   registering a publicly available specification.  The
   process for defining new "alert" URNs via the private extension
   mechanism is described in
   <xref target="PrivateExtensionRules"></xref>.</t>
			</section>
			<section anchor="PrivateExtensionRules" title="Private Extension Rules">
				
<t>The &lt;private-name&gt; syntax is used to create private extensions,
   extensions that are not registered with IANA. The &lt;private-name&gt; has the form
    of an &lt;alert-label&gt;
    followed by "@" and then a &lt;provider&gt; that
   designates the organization defining the extension.
   Both &lt;alert-label&gt; and &lt;provider&gt; have the same syntax
   as an ordinary ASCII DNS label.
   A private
   extension URN is created by using a &lt;private-name&gt; as either an
   &lt;alert-category&gt; or an &lt;alert-ind-part&gt;.</t>

<t> If the &lt;private-name&gt; is used as an &lt;alert-category&gt;, the
   characteristic of the alerting signal that the &lt;alert-category&gt;
   describes is defined by the organization.  If the &lt;private-name&gt; is
   used as the first &lt;alert-ind-part&gt;, the organization defines an
   alternative value for the standardized &lt;alert-category&gt; of the URN.  If the
   &lt;private-name&gt; is used as the second or later &lt;alert-ind-part&gt;, the
   organization defines the meaning of the URN as a subset of the
   meaning of the shorter URN resulting when the &lt;private-name&gt; (and
   any subsequent &lt;alert-ind-part&gt;s) are removed.</t>

<t>Within a URN, all &lt;alert-label> components that follow a
   &lt;private-name&gt; but are before any following &lt;private-name&gt;s are
   additional private extensions whose meaning is defined by the
   organization defining the nearest preceding &lt;private-name&gt;.</t>

   <t>A URN that contains a private extension can be further subdivided
   by the private extension of a different organization:  the second
   organization appends an &lt;alert-ind-part&gt; that is a
   &lt;private-name&gt; containing a
   the &lt;provider&gt; value for the second organization.</t>

<t>The meaning of a &lt;private-name&gt; or an &lt;alert-label&gt; that is defined
   privately (because of a preceding &lt;private-name&gt;) is only fixed within
   the context provided by the sequence of preceding &lt;alert-name&gt;s; these components
   have no meaning in isolation and there is no necessary relationship
   between the meaning of textually identical &lt;alert-name&gt;s that are preceded
     by different sequences of &lt;alert-name&gt;s.
</t>

  <t> Creating private extension "alert" URNs is not a Standards Action
   and they are not registered with IANA.</t>

   <t>The organization defining a private extension is responsible for
   ensuring persistence of the meaning of the private extension.</t>

   <t>Private extensions MUST conform to the principles of
   <xref target="GeneralExtensionRules"/>, both in regard to
   previously existing standard
   &lt;alert-URN&gt;s and in regard to any previously existing private
   extensions using the same &lt;provider&gt; value, and any other private
   extensions that the organization is aware of.  In particular, a
   private extension MUST NOT duplicate any standard URN or any
   private extension that the organization is aware of.  (In either of
   those cases, the organization MUST use the existing URN for its
   purposes.)</t>

   <t>An organization obtains a &lt;provider&gt; value for
   constructing &lt;private-name&gt;s by registering the value with
   IANA as provided in <xref target="Provider-Registry"/>.</t>
</section>

<section anchor="ExamplesExtenssion" title="Examples">
<section anchor="SubsettingAnExistingURN" title="Subsetting an Existing URN">
<t> 
The organization registering the &lt;provider&gt; "example" can
   define distinctive versions of &lt;urn:alert:service:call-waiting&gt;:
</t><t>
   <list>				
			<t>urn:alert:service:call-waiting:abc@example</t>
           <t>urn:alert:service:call-waiting:def@example</t>
   </list>
</t><t>
   It can create a more specialized URN that applies to a subset of
   the situations to which the first URN above applies:
</t><t>
   <list>
         <t>urn:alert:service:call-waiting:abc@example:xyz</t>
         </list>
</t><t>
   Because "xyz" follows "abc@example" (and there is
   no intervening &lt;private-name&gt;), its meaning is defined by the owner
   of the &lt;provider&gt; "example".</t>
</section>
<section anchor="ANewValueWithinAnAlertCategory" title="A New Value within an &lt;alert-category&gt;">
<t> 
  The organization registering the &lt;provider&gt; "example" can
   define URNs in the "service" category to express a new service that
   is not covered by any of the standardized URNs:
</t><t>
  <list>				
			<t> urn:alert:service:ghi@example</t>
   </list>
</t><t>
   However, before defining such a URN, the organization should verify
   that the set of calls to which the URN applies is not a subset of
   the set of calls for some existing URN.  If it is a subset, the
   extension URN should be a subdivision of the existing URN.
</t>
</section>
<section anchor="ANewAlertCategory" title="A New &lt;alert-category&gt;">
<t> 
  The organization registering the &lt;provider&gt; "example" can
  define an extension &lt;alert-category&gt; named "jkl@example"
   with two &lt;alert-indication&gt;s "a1" and "a2":
</t><t>
  <list>				
			<t> urn:alert:jkl@example:a1</t>
			<t>   urn:alert:jkl@example:a2</t>
   </list>

</t>
</section>
<section anchor="SubsettingAPrivateExtensionURN" title="Subsetting a Private Extension URN">

    <t> 
      The organization registering the &lt;provider&gt; "foo" wants to define a
    set of URNs that specify the different ring patterns used by a
    "distinctive ring" service to alert for incoming calls that are
    directed to different directory numbers.  These ring patterns are
    composed of groups of ring sounds that have particular patterns of
    lengths.
</t><t>
    The company can create a private &lt;alert-category&gt;
    "distinctive@foo", and within it assign three 'alert'
    URNs that indicate the three different ring patterns used by the
    company's service:
</t><t>
<list>
	<t>
urn:alert:distinctive@foo:long-long
</t><t>
   urn:alert:distinctive@foo:short-long-short
</t><t>
   urn:alert:distinctive@foo:short-short-long
</t>
</list>
</t>
<t> 
Later, the company registering the &lt;provider&gt; "bar" wants to
    define an additional 'alert' URN for the ring pattern "short short",
    which it uses to support a fourth directory number for a phone
    instrument.  The company can create a &lt;private-name&gt; to be used with
    the "distinctive@foo" &lt;alert-category&gt;:
</t><t>
<list>
	<t>
urn:alert:distinctive@foo:short-short@bar
</t>
</list>
</t>
</section>

</section>

</section>

<!-- COMBINATIONS OF URNs
-->		
		
		<section anchor="Combinations" title="Combinations of &quot;alert&quot; URNs ">
			<section anchor="PriorityRules" title="Priority Rules ">
				<t>This section describes combination rules for the case when all
      the
Alert-Info header fields only contain "alert" URNs.  Other combinations
 of URIs in the Alert-Info header fields of the same SIP
    message are not defined in this specification.</t>
	<t>In many cases, more than one URN will be needed to fully define a
      particular tone. This is done by including multiple "alert" URNs, in
      one or more Alert-Info header fields in a request or a response. 

For example, an internal, priority call could be indicated by
 Alert-Info: &lt;urn:alert:source:internal&gt;, &lt;urn:alert:priority:high&gt;.
A priority call-waiting tone could be indicated by
Alert-Info: &lt;urn:alert:service:call-waiting&gt;, &lt;urn:alert:priority:high&gt;.
</t>
				<t>
The sender of the Alert-Info header field may include an
arbitrary list of "alert" URNs, even if they are redundant or
contradictory.  An earlier URN has priority over any later
contradictory URN.  This allows any element to modify a list of URNs
to require a feature value (by adding a URN at the beginning of the
list) or to suggest a feature value (by adding a URN at the end of the
list).</t>
				<t>The receiving UA matches the received "alert" URN
combination with the signal(s) it is able to render. </t>
				<t>The implementation is free to ignore an "alert" URN if it does
   not recognize the URN, or if it is incapable of rendering its
   effect in the context.  Similarly, it can remove a final series of
   one or more &lt;alert-ind-part&gt;s of an "alert" URN to create a
   "more generic" URN that it recognizes and whose meaning it can
render in the context.</t>

   <t>The exact way in which a UA renders a received
 combination of "alert" URNs is 
      left as an implementation issue.  However, the implementation  MUST comply to following rules:</t>
				<t><list style="format (%c)">
						<t>Each "alert" URN has precedence over all URNs that follow it, and
  its interpretation is subordinate to all URNs that precede it.</t>

						<t> If the UA cannot implement the effect of a URN (because it does
  not recognize the URN or the URN's effect is precluded by 
preceding URNs), the UA repeatedly removes the final
 &lt;alert-ind-part&gt; of the URN until either:
					<list style="format (%d)">
								<t>the resulting URN is recognized and can be given effect by
      some signal (without reducing the degree of expression of
      any preceding URN), or </t>
								<t>the resulting URN is reduced to having no &lt;alert-ind-part&gt;
       in which case, that URN in the series cannot be given effect, and
       so is ignored.</t>
							</list></t>
						
						<t>In case that after processing all the received URNs, the UA can generate more
  than one signal that are equally effective at expressing the URNs
  (under the preceding rules), one of those signals is selected.  
   When selecting from the set of equally effective signals, the
   least specific signal in the set should be chosen: a signal
   should not be chosen if a less-specific signal is also in the set.
   (Specificity is to be judged based on the defined meanings of the
   signals to the user.)  (For example, if each signal is considered to
   express certain &lt;alert-indication&gt;s of certain &lt;alert-category&gt;s, one
   signal is less-specific than a second signal if the first signal's
   &lt;alert-indication&gt;s are a subset or are prefixes of the second signal's
   &lt;alert-indication&gt;s.)  However, a more-specific signal may be chosen if the choice is
   based on information derived from the containing SIP message.
   For example, a signal implying &lt;urn:alert:priority:high&gt; may be chosen
   if the SIP message contains the header  field "Priority: urgent".</t>
					</list></t>
				<t>In all situations, the set of signals that can be rendered and
   their significances may change based on user preferences and local
   policy. </t>
 <t>In addition, the chosen signal may change based on the status of
   the UA.  For example, if a call is active on the UA, all audible signals
   may become unavailable, or audible signals may be available only if

   &lt;urn:alert:priority:high&gt; is specified.</t>
			</section>
			<section anchor="MultiModeSignals" title="Multi-mode Signals ">
				<t>There are cases when the device can render two signal modes (e.g.,
  audio and visual, or video and text) at the same time.</t>
				<t>Formally, the device must be considered to be making its choice from
 the 
set of all combined signals that it can render (pairs of one signal
  from the first mode and one signal from the second mode), and that choice must
conform to the above rules.  However, it can be proven that if
 the device makes its rendering choice for each of the two modes
 independently, with each choice separately conforming to the above
 rules, its combined choice also conforms to the above rules, when it is
 regarded as a choice from among all possible combinations.</t>
				<t>In such a situation, it may simplify implementation to make each
 choice separately.  It is an implementation decision whether to chose
 from among combined signals or to combine choices made from each
 signal mode. </t>
			</section>
		</section>
		
		


<!-- ALGORITHM
-->		
		<section anchor="Algorithm" title="Non-normative Algorithm for Handling Combinations of URNs">
			<t>The following text is a non-normative example of an algorithm for
   handling combinations of URNs that complies with the rules 
   in  Sections <xref target="ExtensionRules" format="counter"></xref> and <xref target="Combinations" format="counter"></xref>.  
   Thus, it demonstrates that the rules 
      are consistent and implementable.  (Of course, a device may use any
   other algorithm that complies with Sections <xref target="ExtensionRules" format="counter"></xref> and <xref target="Combinations" format="counter"></xref>.)</t>
			<section anchor="AlgorithmDescription" title=" Algorithm Description">
				<t>   For each &lt;alert-category&gt; (feature) known by the implementation,
   there is a "feature tree" of the known &lt;alert-indication&gt;s for that
   &lt;alert-category&gt;, with the sequence of &lt;alert-ind-part&gt;s in an
   &lt;alert-indication&gt; specifying the path in the tree from the root to
   the node representing the &lt;alert-indication&gt;.  For this
   description, we will name each tree and its root node by the
   &lt;alert-category&gt; name, and name each non-root node by the
   &lt;alert-identifier&gt;.  Each URN thus corresponds to one non-root node
   in one feature tree.
For example, there is a tree
   named "source", whose root node is also named "source", and which has
   the children source:internal, source:external, source:friend, and
   source:family.  The URN &lt;urn:alert:source:external&gt; is placed at
   the node "source:external" in the "source" tree.  If the
   implementation understands &lt;urn:alert:source:foo@example&gt;, there
   is a node source:foo@example that is a child of node "source".
   If the implementation understands
   &lt;urn:alert:source:external:bar@example&gt;, there is a node
   source:external:bar@example that is a child of node
   source:external.
   (Of course, there
   are an infinite number of potential additional nodes in the tree for
   private values, but we don't have to represent those nodes explicitly
   unless the device has a signal representing the private value.)</t>
				<t>We assign similar locations to signals, but each signal has a
   position in *every* tree, describing the specific combination of
   meanings that it carries.  If a signal has a simple meaning, such
   as "external source", its place in the "source" tree is
   source:external, showing that it carries the "external source"
   meaning, but its place in every other feature tree is at the root
   node, meaning that it has no particular meaning for those features.</t>
				<t> A signal that has a complex meaning may have non-root positions in
   more than one feature tree.  For example, an "external, high
   priority" signal would be placed at source:external and priority:high
   in those trees, but be at the root in all other feature trees.</t>

				<t> In order to assure that the algorithm always selects at least one
   signal, we require that there is a "default" signal, whose position in
   every feature tree is at the root.  This default signal
   will never be excluded from the set of acceptable signals for
   any set of URNs, but will be the lowest priority signal for any
   set of URNs.</t>
				<t>The algorithm proceeds by considering each URN in the received Alert-
   Info header fields from left to right, while revising a set of signals.  The
   set of signals starts as the entire set of signals available to the
   device.  Each URN excludes some signals from the set, and "sorts" the
   signals that remain in the set according to how well they represent
   the URN.  (The details of these operations are described below.)  The
   first URN is the "major sort", and has the most influence on the
   position of a signal in the set.  The second URN is a "minor sort",
   in that it arranges the orders of the signals that are tied within
   the first sort, the third URN arranges the orders of the signals that
   are tied within the first two sorts, etc.</t>
				<t>At the end of the algorithm, a final, "most minor" sort is done,
   which orders the signals that remain tied under all the sorts
   driven by the URNs.  This final sort places the least specific
   signals (within their tied groups) "first".  (If one signal's position in
   each feature tree is ancestral or the same as a second signal's
   position in that tree, the first signal is "less specific" than the
   second signal.  Other cases are left to the implementation to
   decide.)</t>
				<t>Once all the URNs are processed and the sorting of the signals that
   have not been excluded is done, the device
   selects the first signal in the set.</t>
				<t>Here is how a single sort step proceeds, examining a single URN to
   modify the set of signals (by excluding some signals and further
   sorting the signals that remain):</t>
				<t><list style="symbols">
						<t>The URN specifies a specific node in a specific feature tree.</t>
	
						<t>All signals in the set that are, within that feature tree,
      positioned at the URN's node, or at an ancestor node of the
      URN's node, are kept.  All other signals are removed from the
      set (because they have meanings that are incompatible with the
      URN's meaning).</t>

						<t>Each group of signals that are tied under the previous sorts are
      further sorted into groups based on how much of the URN's
      meaning they represent: those which are positioned at the node of the URN
      are tied for first position, those which are positioned at the parent node
      of the URN are tied for second position, etc., and those which
      are positioned at the root node of the feature tree are tied for last
      position.</t>
					</list>
				</t>
			</section>
			<section anchor="Examples" title="Examples of How the Algorithm Works">
				<t>The following examples show how the algorithm described in the previous section works: </t>
				
				<section anchor="Example_1" title="Example 1">
					<t>The device has a set of four alerting signals. We list their primary meanings, and the
locations that they are placed in the feature trees:</t>
<?rfc subcompact="yes"?>
					<t>Signal 1 </t>
					<t><list>
							<t>Meaning: external</t><t></t>
							<t>Locations:</t>
							<t>- source:external</t>
							<t>-	priority (that is, the root node of the priority tree)</t>
						</list>
					</t>
					<t>
					</t>
					<t>Signal 2 </t>
					<t><list>
							<t>Meaning: internal</t><t></t>
							<t>Locations:</t>
							<t>- source:internal</t>
							<t>-	priority</t>
						</list>
					</t>
					
					<t>Signal 3 </t>
					<t><list>
							<t>	Meaning: low</t><t></t>
							<t>	Locations:</t>
							<t>-	source</t>
							<t>-	priority:low</t>
						</list>
					</t>
					
					<t>Signal 4 </t>
					<t><list>
							<t>	Meaning: high</t><t></t>
							<t>	Locations:</t>
							<t>-	source</t>
							<t>-	priority:high</t>
						</list>
					</t>
					
					<t>	To which we add:</t>
					<t>Signal 5 </t>
					<t><list>
							<t>	Meaning: default</t><t></t>
							<t>	Locations:</t>
							<t>-	source</t>
							<t>-	priority</t>
						</list>
					</t>
					
<?rfc subcompact="no"?>
					<t>If the device receives &lt;urn:alert:source:internal&gt;, then the sort is:</t>
					<t>Signals at source:internal: (this is, first place)</t>
					<t><list>
							<t>	Signal 2: internal</t>
						</list>
					</t>
					<t>Signals at source: (tied for second place)</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>Signal 3: low</t>
							<t>Signal 4: high</t>
							<t>Signal 5: default</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					
					<t>And these signals are excluded from the set:</t>
					<t><list>	<t>Signal 1: external</t></list></t>
					<t>So, in this example, the sorting algorithm properly gives first place
to Signal 2 "internal". </t>
				</section>
				<section anchor="Example_2" title="Example 2">
					<t>Let us add to the set of signals in Example 1 ones that express combinations like
"internal, high priority", but let us specifically exclude the
combination "internal, low priority" so as to set up some tricky
examples.  This enlarges our set of signals:</t>
					<t>Signal 1 </t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>Meaning: default</t><t></t>
							<t>Locations:</t>
							<t>- source</t>
							<t>- priority</t>
						</list>
					</t>
					
					<t>Signal 2 </t>
					<t><list>
							<t>Meaning: external</t><t></t>
							<t>Locations:</t>
							<t>-	source:external</t>
							<t>-	priority</t>
						</list>
					</t>
					<t>Signal 3 </t>
					<t><list>
							<t>Meaning: internal</t><t></t>
							<t>Locations:</t>
							<t>-	source:internal</t>
							<t>-	priority</t>
						</list>
					</t>
					<t>Signal 4 </t>
					<t><list>
							<t>Meaning: low</t><t></t>
							<t>Locations:</t>
							<t>-	source</t>
							<t>-	priority:low</t>
						</list>
					</t>
					<t>Signal 5 </t>
					<t><list>
							<t>Meaning: high</t><t></t>
							<t>Locations:</t>
							<t>-	source</t>
							<t>-	priority:high</t>
						</list>
					</t>
					<t>Signal 6 </t>
					<t><list>
							<t>Meaning: external high</t><t></t>
							<t>Locations:</t>
							<t>-	source:external</t>
							<t>-	priority:high</t>
						</list>
					</t>
					<t>Signal 7 </t>
					<t><list>
							<t>Meaning: external low</t><t></t>
							<t>Locations:</t>
							<t>-	source:external</t>
							<t>-	priority:low</t>
						</list>
					</t>
					<t>Signal 8 </t>
					<t><list>
							<t>Meaning: internal high</t><t></t>
							<t>Locations:</t>
							<t>-	source:internal</t>
							<t>-	priority:high</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>	If the device receives &lt;urn:alert:source:internal&gt;, then the sort is:</t>
					<t>	Signals at source:internal: (that is, tied for first place)</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>-	Signal 3: internal</t>
							<t>-  Signal 8: internal high </t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>	Signals at source: (tied for second place)</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>-	Signal 4: low</t>
							<t>-	Signal 5: high</t>
							<t>-	Signal 1: default</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>	Signals excluded from the set:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>-	Signal 2: external</t>
							<t>-	Signal 7: external low</t>
							<t>-	Signal 6: external high</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>	Two signals are tied for the first place, but the final sort orders
them:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>-	Signal 3: internal</t>
							<t>-	Signal 8: internal high</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>	because it puts the least-specific signal first.  So, the 
Signal 3  "internal" is chosen.</t>
				</section>
				<section anchor="Example_3" title="Example 3">
					<t>The same device receives &lt;urn:alert:source:external&gt;,
&lt;urn:alert:priority:low&gt;.  The first sort (due to
&lt;urn:alert:source:external&gt;) is:</t>
					<t>Signals at source:external:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>- Signal 2: external</t>
							<t>- Signal 7: external low</t>
							<t>- Signal 6: external high</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>Signals at source:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>- Signal 4: low</t>
							<t>-	Signal 5: high</t>
							<t>-	Signal 1: default</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>Signals excluded:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>- Signal 3: internal </t>
							<t>- Signal 8: internal high</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>The second sort (due to &lt;urn:alert:priority:low&gt;) puts signals at
priority:low before signals at priority, and excludes signal at
priority:high:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>- Signal 7: external low</t>
							<t>-	Signal 2: external</t>
							<t>-	Signal 4: low</t>
							<t>-	Signal 1: default</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>Excluded:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>-	Signal 6: external high</t>
							<t>-	Signal 5: high</t>
							<t>-	Signal 3: internal</t>
							<t>-	Signal 8: internal high</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>So, we choose Signal 7 "external low".</t>
				</section>
				<section anchor="Example_4" title="Example 4">
					<t>Suppose the same device receives &lt;urn:alert:source:internal&gt;,
&lt;urn:alert:priority:low&gt;.  Note that there is no signal that
corresponds to this combination.</t>
					<t>The first sort is based on source:internal, and results in this order:</t>
					<t>
<?rfc subcompact="yes"?><list>
							<t>- Signal 3: internal</t>
							<t>- Signal 8: internal high</t>
							<t>- Signal 4: low</t>
							<t>- Signal 5: high</t>
							<t>- Signal 1: default</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>Excluded:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>- Signal 2: external</t>
							<t>- Signal 7: external low</t>
							<t>- Signal 6: external high</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>The second sort is based on priority:low, and results in this order:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>- Signal 3: internal</t>
							<t>-	Signal 4: low</t>
							<t>- Signal 1: default</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>Excluded:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>- Signal 8: internal high</t>
							<t>- Signal 5: high</t>
							<t>- Signal 7: external low</t>
							<t>- Signal 2: external</t>
							<t>- Signal 6: external high</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>So, we choose the Signal 3 "internal".  </t>
					
					<t>Note that &lt;urn:alert:priority:low&gt; could
   not be given effect because it followed &lt;urn:alert:source:internal&gt;.
   If the two URNs had appeared in the reverse order, the Signal 2 "external" would
   have been chosen, because &lt;urn:alert:priority:low&gt; would have been
   given precedence.
					</t>
				</section>
				<section anchor="Example_5" title="Example 5">
					<t>Let us set up a simple set of signals, with three signals giving
priority:</t>
					<t>Signal 1 </t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>Meaning: default</t><t></t>
							<t>Locations:</t>
							<t>- priority</t>
						</list>
					</t>
					<t>Signal 2 </t>
					<t><list>
							<t>Meaning: low</t><t></t>
							<t>Locations:</t>
							<t>- priority:low</t>
						</list>
					</t>
					<t>Signal 3 </t>
					<t><list>
							<t>Meaning: high</t><t></t>
							<t>Locations:</t>
							<t>-	priority:high</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>Notice that we've used the "default" signal to cover "normal
priority".  That is so the signal will cover situations where no
priority URN is present, as well as the ones with
&lt;urn:alert:priority:normal&gt;.  So, we're deliberately failing to
distinguish "priority:normal" from the default priority.</t>
					<t>If the device receives &lt;urn:alert:priority:low&gt;, the sort is:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>- Signal 2: low</t>
							<t>- Signal 1: default</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>Excluded:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>- Signal 3: high</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>and Signal 2 "low" is chosen.</t>
					<t>Similarly, if the device receives &lt;urn:alert:priority:high&gt;, 
Signal 3 is chosen.</t>
					<t>If the device receives &lt;urn:alert:priority:normal&gt;, the sort is:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>-Signal 1 :default</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>Excluded:</t>
<?rfc subcompact="yes"?>
					<t><list>
							<t>-	Signal 2: low</t>
							<t>-	Signal 3: high</t>
						</list>
<?rfc subcompact="no"?>
					</t>
					<t>and  Signal 1 "default" is chosen.</t>
					<t>If no "priority" URN is received, Signal 1 "default" will be put before Signal 2 "low"
and Signal 3 "high" by the final sort, and so it will be chosen.</t>
				</section>
			</section>
		</section>
		
		
		
<!-- USER AGENT BEHAVIOUR
-->		
		
		<section anchor="UserAgentBehaviour" title="User Agent Behaviour">
			<t>A SIP UA MAY add a URN or multiple URNs to the Alert-Info header
      field in a SIP request or a provisional 1xx response (excepting a 100
      response) when it needs to provide additional
      information about the call or about the provided service.</t>
			<t>Upon receiving a SIP INVITE request or a SIP provisional response
      with an Alert-Info header field that contains a combination of Alert-
      Info URNs, the UA attempts to match the received Alert-
      Info URNs combination with a signal it can render.  The process
      the UA uses MUST conform to the rules described in     <xref target="Combinations"></xref>.  (A non-normative algorithm example for the process is described
      in <xref target="Algorithm"></xref>.)
       </t>
			<t>The UA must produce a
			reasonable rendering regardless of the
			combination of URIs (of any schemes) in the
			Alert-Info header field: it MUST produce a
			rendering based on the URIs that it can
			understand and act on (if any), interpreted as
			prescribed by local policy, and ignore the
			other URIs. In particular, unless the
			containing message is a request and is
			immediately rejected, the UA SHOULD provide
			some alert unless it is instructed not to (for
			example, by Alert-Info URIs that it
			understands, the presence of a Replaces or
			Joins header field, local policy, or direction
			of the user).</t>
			
			<t>Subsequent provisional responses, even within the same dialog, may    contain different Alert-Info header field values.  The Alert-Info header    field values received within different provisional responses are treated  independently.  If subsequent provisional responses containing  different Alert-Info header field values were received within the same dialog, the UA SHOULD render, at any time, the last received Alert-Info header field value. The handling of provisional responses containing  different Alert-Info header field values that were not received within the same dialog is left as an implementation issue.
			</t>
			
		</section>
		
		


<!-- PROXY BEHAVIOUR
-->		
		
		<section anchor="ProxyBehaviour" title="Proxy Behaviour">
			
			<t>A SIP proxy MAY add or remove an Alert-Info header field, and MAY add or remove Alert-Info header field values, in a SIP request or a  non-100 provisional response when it needs to modify the  information about the call or about the provided services.
</t>
<t>There are many reasons a proxy may choose do this, for example, 
(1) to add indications based on information that the proxy can
determine about the call, such as that it is coming from an external
source, or that the INVITE contains a "Priority: urgent" header field;
(2) to add indication that a particular service is being invoked at this end
of the call; (3) to remove undesirable indications, such as possibly
deceptive indications from untrusted sources; and (4) to remove indications
that contain information that should be suppressed for privacy
reasons.</t>
			<t>The following example shows a typical example of a 180 (Ringing)
   provisional response that has been modified by a proxy.  The
   response sent by the UAS to the proxy was very similar, but had no
   Alert-Info header field.  The proxy has added Alert-Info header
   field values specifying both a network audio resource referenced by the
   HTTP URI and the URN indication for the call-waiting service.  This
   allows the UAC to render the network audio resource, to choose a
   rendering based on the URN, or to perform some combination of these
   actions.  Due to <xref target="ExtensionRules"/>, the UAC must produce some reasonable
   rendering in this situation.
</t>
			<t><figure>
					<artwork><![CDATA[ 
SIP/2.0 180 Ringing
Alert-Info: <http://www.example.com/sound/moo.wav>,
             <urn:alert:service:call-waiting>
To: Bob <sip:bob@biloxi.example.com>;tag=a6c85cf
From: Alice <sip:alice@atlanta.example.com>;tag=1928301774
Call-ID: a84b4c76e66710
Contact: <sip:bob@192.0.2.4>
CSeq: 314159 INVITE
Via: SIP/2.0/UDP server10.biloxi.example.com;
            branch=z9hG4bK4b43c2ff8.1
Content-Length: 0
]]></artwork>
				</figure></t>
			
		</section>
		
		

<!-- INTERNATIONALIZATION
-->			
		<section anchor="Internationalization" title="Internationalization Considerations ">
			<t>The &lt;alert-identifier&gt; labels are protocol elements 
    <xref target="RFC6365"></xref> and are not normally seen by users. Thus, the
      character set for these elements is restricted, as described in <xref target="URNSpecification"></xref>.</t>
      <t>Allowance has been made for the possibility of
      internationalizing &lt;alert-identifier&gt;s by allowing them to
      be A-labels:  a processor that does not understand such
      &lt;alert-identifier&gt;s is required to ignore them as
      specified in Sections <xref target="URNSpecification" format="counter"/> and
      <xref target="PriorityRules" format="counter"/>.</t>
      <t>The URNs &lt;urn:alert:locale:country:&lt;ISO 3166-1 country code&gt;&gt;
   select renderings that are conventional in the specified country.</t>
		</section>
		
<!-- SECURITY
-->				
		<section anchor="Security" title="Security Considerations">
			<t>As an identifier, the "alert" URN does not appear to raise any
      particular security issues. The indications described by the "alert" URN
      are meant to be well-known.</t>
			<t>However, the provision of specific
			indications may raise privacy issues by
			revealing information about the source UA,
			e.g., its nature, its dialog state, or services
			initiated at its end of the call. For example,
			call-waiting (<xref target="CallWaiting"></xref>) and
			call-forwarding (<xref target="Forward"></xref>)
			services can
			reveal the dialog state of the UA. Such
			a provision SHALL always require authorization
			on behalf of the user of the source UA
			(usually through accessing configured policy).
			Authorization SHALL NOT assume that there is
			any limitation of the potential recipients of
			the indications without obtaining specific
			information about the SIP transaction.</t>
			<t>Based on local policy, a UA MAY choose to
			ignore undesirable indications (e.g., possibly
			deceptive indications from untrusted sources),
			and it MAY choose not to send indications that
			are otherwise valid in the context (e.g., for
			privacy reasons).  A proxy acting on behalf of
			a UA MAY add or delete indications going to or
			from the UA for the same reasons.</t>
			<t>Since the alert indications can be
			sensitive, end-to-end SIP encryption
			mechanisms using S/MIME MAY be used to protect
			it.  UAs that implement alert
			indications SHOULD also implement SIP over TLS
			<xref target="RFC5246"></xref> and the sips:
			scheme <xref target="RFC5630"></xref>.</t>
		</section>
		
		
	</middle>
	
	
<!-- REFERENCES
-->				
	<back>
		<references title="Normative References">




<reference anchor='RFC2119' target='http://www.rfc-editor.org/info/rfc2119'>

<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year='1997' month='March' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>

<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='http://www.rfc-editor.org/rfc/rfc2119.txt' />
<format type='HTML' octets='17970' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5777' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>


<reference anchor='RFC2141' target='http://www.rfc-editor.org/info/rfc2141'>

<front>
<title>URN Syntax</title>
<author initials='R.' surname='Moats' fullname='Ryan Moats'>
<organization>AT&amp;T</organization>
<address>
<postal>
<street>15621 Drexel Circle</street>
<street>Omaha</street>
<street>NE 68135-2358</street>
<country>USA</country></postal>
<phone>+1 402 894-9456</phone>
<email>jayhawk@ds.internic.net</email></address></author>
<date year='1997' month='May' />
<area>Applications</area>
<keyword>URN</keyword>
<keyword>uniform resource</keyword>
<abstract>
<t>
   Uniform Resource Names (URNs) are intended to serve as persistent,
   location-independent, resource identifiers. This document sets
   forward the canonical syntax for URNs.  A discussion of both existing
   legacy and new namespaces and requirements for URN presentation and
   transmission are presented.  Finally, there is a discussion of URN
   equivalence and how to determine it.
</t></abstract></front>

<seriesInfo name='RFC' value='2141' />
<format type='TXT' octets='14077' target='http://www.rfc-editor.org/rfc/rfc2141.txt' />
<format type='XML' octets='17687' target='http://xml.resource.org/public/rfc/xml/rfc2141.xml' />
</reference>



<reference anchor='RFC5246' target='http://www.rfc-editor.org/info/rfc5246'>

<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'>
<organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'>
<organization /></author>
<date year='2008' month='August' />
<abstract>
<t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5246' />
<format type='TXT' octets='222395' target='http://www.rfc-editor.org/rfc/rfc5246.txt' />
</reference>



<reference anchor='RFC3261' target='http://www.rfc-editor.org/info/rfc3261'>

<front>
<title>SIP: Session Initiation Protocol</title>
<author initials='J.' surname='Rosenberg' fullname='J. Rosenberg'>
<organization /></author>
<author initials='H.' surname='Schulzrinne' fullname='H. Schulzrinne'>
<organization /></author>
<author initials='G.' surname='Camarillo' fullname='G. Camarillo'>
<organization /></author>
<author initials='A.' surname='Johnston' fullname='A. Johnston'>
<organization /></author>
<author initials='J.' surname='Peterson' fullname='J. Peterson'>
<organization /></author>
<author initials='R.' surname='Sparks' fullname='R. Sparks'>
<organization /></author>
<author initials='M.' surname='Handley' fullname='M. Handley'>
<organization /></author>
<author initials='E.' surname='Schooler' fullname='E. Schooler'>
<organization /></author>
<date year='2002' month='June' />
<abstract>
<t>This document describes Session Initiation Protocol (SIP), an application-layer control (signaling) protocol for creating, modifying, and terminating sessions with one or more participants.  These sessions include Internet telephone calls, multimedia distribution, and multimedia conferences. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='3261' />
<format type='TXT' octets='647976' target='http://www.rfc-editor.org/rfc/rfc3261.txt' />
</reference>


<reference anchor='RFC3406' target='http://www.rfc-editor.org/info/rfc3406'>

<front>
<title>Uniform Resource Names (URN) Namespace Definition Mechanisms</title>
<author initials='L.' surname='Daigle' fullname='L. Daigle'>
<organization /></author>
<author initials='D.' surname='van Gulik' fullname='D. van Gulik'>
<organization /></author>
<author initials='R.' surname='Iannella' fullname='R. Iannella'>
<organization /></author>
<author initials='P.' surname='Faltstrom' fullname='P. Faltstrom'>
<organization /></author>
<date year='2002' month='October' />
<abstract>
<t>This document lays out general definitions of and mechanisms for establishing Uniform Resource Names (URN) "namespaces".  The URN WG has defined a syntax for URNs in RFC 2141, as well as some proposed mechanisms for their resolution and use in Internet applications in RFC 3401 and RFC 3405.  The whole rests on the concept of individual "namespaces" within the URN structure.  Apart from proof-of-concept namespaces, the use of existing identifiers in URNs has been discussed in RFC 2288.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract></front>

<seriesInfo name='BCP' value='66' />
<seriesInfo name='RFC' value='3406' />
<format type='TXT' octets='43707' target='http://www.rfc-editor.org/rfc/rfc3406.txt' />
</reference>


<reference anchor='RFC5226' target='http://www.rfc-editor.org/info/rfc5226'>

<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'>
<organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'>
<organization /></author>
<date year='2008' month='May' />
<abstract>
<t>Many protocols make use of identifiers consisting of constants and other well-known values. Even after a protocol has been defined and deployment has begun, new values may need to be assigned (e.g., for a new option type in DHCP, or a new encryption or authentication transform for IPsec). To ensure that such quantities have consistent values and interpretations across all implementations, their assignment must be administered by a central authority. For IETF protocols, that role is provided by the Internet Assigned Numbers Authority (IANA).&lt;/t>&lt;t> In order for IANA to manage a given namespace prudently, it needs guidelines describing the conditions under which new values can be assigned or when modifications to existing values can be made. If IANA is expected to play a role in the management of a namespace, IANA must be given clear and concise instructions describing that role. This document discusses issues that should be considered in formulating a policy for assigning values to a namespace and provides guidelines for authors on the specific text that must be included in documents that place demands on IANA.&lt;/t>&lt;t> This document obsoletes RFC 2434. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract></front>

<seriesInfo name='BCP' value='26' />
<seriesInfo name='RFC' value='5226' />
<format type='TXT' octets='66160' target='http://www.rfc-editor.org/rfc/rfc5226.txt' />
</reference>


<reference anchor='RFC5234' target='http://www.rfc-editor.org/info/rfc5234'>

<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker'>
<organization /></author>
<author initials='P.' surname='Overell' fullname='P. Overell'>
<organization /></author>
<date year='2008' month='January' />
<abstract>
<t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF.  It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='STD' value='68' />
<seriesInfo name='RFC' value='5234' />
<format type='TXT' octets='26359' target='http://www.rfc-editor.org/rfc/rfc5234.txt' />
</reference>


<reference anchor='RFC5630' target='http://www.rfc-editor.org/info/rfc5630'>

<front>
<title>The Use of the SIPS URI Scheme in the Session Initiation Protocol (SIP)</title>
<author initials='F.' surname='Audet' fullname='F. Audet'>
<organization /></author>
<date year='2009' month='October' />
<abstract>
<t>This document provides clarifications and guidelines concerning the use of the SIPS URI scheme in the Session Initiation Protocol (SIP).  It also makes normative changes to SIP. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5630' />
<format type='TXT' octets='114513' target='http://www.rfc-editor.org/rfc/rfc5630.txt' />
</reference>

		</references>
		<references title="Informative References">


<!--			<?rfc include="reference.I-D.ietf-bliss-shared-appearances" ?>; Companion Document -->




<reference anchor='RFC7463' target='http://www.rfc-editor.org/info/rfc7463'>
<front>
<title>Shared Appearances of a Session Initiation Protocol (SIP) Address of Record (AOR)</title>

<author initials='A' surname='Johnston' fullname='Alan Johnston' role="editor">
    <organization />
</author>

<author initials='M' surname='Soroushnejad' fullname='Mohsen Soroushnejad' role="editor">
    <organization />
</author>

<author initials='V' surname='Venkataramanan' fullname='Venkatesh Venkataramanan'>
    <organization />
</author>

<date month='March' year='2015' />

<abstract><t>This document describes the requirements and implementation of a group telephony feature commonly known as Bridged Line Appearance (BLA) or Multiple Line Appearance (MLA), or Shared Call/Line Appearance (SCA).  When implemented using the Session Initiation Protocol (SIP), it is referred to as shared appearances of an Address of Record (AOR) since SIP does not have the concept of lines.  This feature is commonly offered in IP Centrex services and IP-PBX offerings and is likely to be implemented on SIP IP telephones and SIP feature servers used in a business environment.  This feature allows several user agents (UAs) to share a common AOR, learn about calls placed and received by other UAs in the group, and pick up or join calls within the group.  This document discusses use cases, lists requirements and defines extensions to implement this feature. This specification updates RFC3261 and RFC4235.</t></abstract>

</front>

<seriesInfo name='RFC' value='7463' />

</reference>



<reference anchor='RFC6910' target='http://www.rfc-editor.org/info/rfc6910'>

<front>
<title>Completion of Calls for the Session Initiation Protocol (SIP)</title>
<author initials='D.' surname='Worley' fullname='D. Worley'>
<organization /></author>
<author initials='M.' surname='Huelsemann' fullname='M. Huelsemann'>
<organization /></author>
<author initials='R.' surname='Jesske' fullname='R. Jesske'>
<organization /></author>
<author initials='D.' surname='Alexeitsev' fullname='D. Alexeitsev'>
<organization /></author>
<date year='2013' month='April' />
<abstract>
<t>The "completion of calls" feature defined in this specification allows the caller of a failed call to be notified when the callee becomes available to receive a call.&lt;/t>&lt;t> For the realization of a basic solution without queuing, this document references the usage of the dialog event package (RFC 4235) that is described as 'Automatic Redial' in "Session Initiation Protocol Service Examples" (RFC 5359).&lt;/t>&lt;t> For the realization of a more comprehensive solution with queuing, this document introduces an architecture for implementing these features in the Session Initiation Protocol where "completion of calls" implementations associated with the caller's and callee's endpoints cooperate to place the caller's request for completion of calls into a queue at the callee's endpoint; when a caller's request is ready to be serviced, re-attempt of the original, failed call is then made.&lt;/t>&lt;t> The architecture is designed to interoperate well with existing completion of calls solutions in other networks.</t></abstract></front>

<seriesInfo name='RFC' value='6910' />
<format type='TXT' octets='86166' target='http://www.rfc-editor.org/rfc/rfc6910.txt' />
</reference>


<reference anchor='RFC5589' target='http://www.rfc-editor.org/info/rfc5589'>

<front>
<title>Session Initiation Protocol (SIP) Call Control - Transfer</title>
<author initials='R.' surname='Sparks' fullname='R. Sparks'>
<organization /></author>
<author initials='A.' surname='Johnston' fullname='A. Johnston'>
<organization /></author>
<author initials='D.' surname='Petrie' fullname='D. Petrie'>
<organization /></author>
<date year='2009' month='June' />
<abstract>
<t>This document describes providing Call Transfer capabilities in the Session Initiation Protocol (SIP).  SIP extensions such as REFER and Replaces are used to provide a number of transfer services including blind transfer, consultative transfer, and attended transfer.  This work is part of the SIP multiparty call control framework.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract></front>

<seriesInfo name='BCP' value='149' />
<seriesInfo name='RFC' value='5589' />
<format type='TXT' octets='119434' target='http://www.rfc-editor.org/rfc/rfc5589.txt' />
</reference>



<reference anchor='RFC6365' target='http://www.rfc-editor.org/info/rfc6365'>

<front>
<title>Terminology Used in Internationalization in the IETF</title>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'>
<organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'>
<organization /></author>
<date year='2011' month='September' />
<abstract>
<t>This document provides a list of terms used in the IETF when discussing internationalization.  The purpose is to help frame discussions of internationalization in the various areas of the IETF and to help introduce the main concepts to IETF participants.  This memo documents an Internet Best Current Practice.</t></abstract></front>

<seriesInfo name='BCP' value='166' />
<seriesInfo name='RFC' value='6365' />
<format type='TXT' octets='103155' target='http://www.rfc-editor.org/rfc/rfc6365.txt' />
</reference>



<reference anchor='RFC3120' target='http://www.rfc-editor.org/info/rfc3120'>

<front>
<title>A URN Namespace for XML.org</title>
<author initials='K.' surname='Best' fullname='K. Best'>
<organization /></author>
<author initials='N.' surname='Walsh' fullname='N. Walsh'>
<organization /></author>
<date year='2001' month='June' />
<abstract>
<t>This document describes a URN (Uniform Resource Name) namespace that is engineered by the Organization for the Advancement of Structured Information Standards (OASIS) for naming persistent resources stored in the XML.org repository (such as XML (Extensible Markup Language) Document Type Definitions, XML Schemas, Namespaces, Stylesheets, and other documents).  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='3120' />
<format type='TXT' octets='8068' target='http://www.rfc-editor.org/rfc/rfc3120.txt' />
</reference>


<reference anchor='RFC3044' target='http://www.rfc-editor.org/info/rfc3044'>

<front>
<title>Using The ISSN (International Serial Standard Number) as URN (Uniform Resource Names) within an ISSN-URN Namespace</title>
<author initials='S.' surname='Rozenfeld' fullname='S. Rozenfeld'>
<organization /></author>
<date year='2001' month='January' />
<abstract>
<t>This document presents how the ISSN - International Standard Serial Number - which is a persistent number for unique identification of serials widely recognised and used in the bibliographic world, can be supported within the Uniform Resource Name (URN) framework as a specific URN namespace identifier.  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='3044' />
<format type='TXT' octets='28094' target='http://www.rfc-editor.org/rfc/rfc3044.txt' />
</reference>



<reference anchor='RFC3187' target='http://www.rfc-editor.org/info/rfc3187'>

<front>
<title>Using International Standard Book Numbers as Uniform Resource Names</title>
<author initials='J.' surname='Hakala' fullname='J. Hakala'>
<organization /></author>
<author initials='H.' surname='Walravens' fullname='H. Walravens'>
<organization /></author>
<date year='2001' month='October' />
<abstract>
<t>This document discusses how International Standard Book Numbers (ISBN) can be supported within the URN (Uniform Resource Names) framework and the syntax for URNs defined in RFC 2141.  Much of the discussion below is based on the ideas expressed in RFC 2288.  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='3187' />
<format type='TXT' octets='22620' target='http://www.rfc-editor.org/rfc/rfc3187.txt' />
</reference>


<reference anchor='RFC3188' target='http://www.rfc-editor.org/info/rfc3188'>

<front>
<title>Using National Bibliography Numbers as Uniform Resource Names</title>
<author initials='J.' surname='Hakala' fullname='J. Hakala'>
<organization /></author>
<date year='2001' month='October' />
<abstract>
<t>This document discusses how national bibliography numbers (persistent and unique identifiers assigned by the national libraries) can be supported within the URN (Uniform Resource Names) framework and the syntax for URNs defined in RFC 2141.  Much of the discussion is based on the ideas expressed in RFC 2288.  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='3188' />
<format type='TXT' octets='27923' target='http://www.rfc-editor.org/rfc/rfc3188.txt' />
</reference>



<reference anchor='RFC4179' target='http://www.rfc-editor.org/info/rfc4179'>

<front>
<title>Using Universal Content Identifier (UCI) as Uniform Resource Names (URN)</title>
<author initials='S.' surname='Kang' fullname='S. Kang'>
<organization /></author>
<date year='2005' month='October' />
<abstract>
<t>This document describes a Uniform Resource Name (URN) namespace for the National Computerization Agency (NCA) for naming persistent digital resources such as music, videos, texts, images, e-books, and other types of digital resources produced or managed by NCA.  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='4179' />
<format type='TXT' octets='12935' target='http://www.rfc-editor.org/rfc/rfc4179.txt' />
</reference>



<reference anchor='RFC4195' target='http://www.rfc-editor.org/info/rfc4195'>

<front>
<title>A Uniform Resource Name (URN) Namespace for the TV-Anytime Forum</title>
<author initials='W.' surname='Kameyama' fullname='W. Kameyama'>
<organization /></author>
<date year='2005' month='October' />
<abstract>
<t>This document describes a Uniform Resource Name (URN) namespace that is engineered by the TV-Anytime Forum for naming persistent resources published by the TV-Anytime Forum including the TV-Anytime Forum Standards, XML (Extensible Markup Language) Document Type Definitions, XML Schemas, Namespaces, and other documents.  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='4195' />
<format type='TXT' octets='10066' target='http://www.rfc-editor.org/rfc/rfc4195.txt' />
</reference>



<reference anchor='RFC4198' target='http://www.rfc-editor.org/info/rfc4198'>

<front>
<title>A Uniform Resource Name (URN) Namespace for Federated Content</title>
<author initials='D.' surname='Tessman' fullname='D. Tessman'>
<organization /></author>
<date year='2005' month='November' />
<abstract>
<t>This document describes a URN (Uniform Resource Name) namespace for identifying content resources within federated content collections.  A federated content collection often does not have a strong centralized authority but relies upon shared naming, metadata, and access conventions to provide interoperability among its members.  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='4198' />
<format type='TXT' octets='12134' target='http://www.rfc-editor.org/rfc/rfc4198.txt' />
</reference>



<reference anchor='RFC4152' target='http://www.rfc-editor.org/info/rfc4152'>

<front>
<title>A Uniform Resource Name (URN) Namespace for the Common Language Equipment Identifier (CLEI) Code</title>
<author initials='K.' surname='Tesink' fullname='K. Tesink'>
<organization /></author>
<author initials='R.' surname='Fox' fullname='R. Fox'>
<organization /></author>
<date year='2005' month='August' />
<abstract>
<t>This document describes a Uniform Resource Name (URN) namespace (RFC 3406) for the assignment of the Common Language Equipment Identifier (CLEI) code, which is used in messages standardized by ANSI.  The URN namespace is managed by Telcordia Technologies, Inc., as the maintenance agent for ANSI T1.213.  The CLEI code is a globally unique, ten-character alphanumeric intelligent code assigned by Telcordia Technologies at the request of equipment suppliers.  The CLEI code identifies communications equipment by specifying product type and features.  There is a one-to-one relationship between a CLEI code and supplier's product ID (the manufacturer's name and the part number along with its version number).  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='4152' />
<format type='TXT' octets='12228' target='http://www.rfc-editor.org/rfc/rfc4152.txt' />
</reference>



<reference anchor='RFC3043' target='http://www.rfc-editor.org/info/rfc3043'>

<front>
<title>The Network Solutions Personal Internet Name (PIN): A URN Namespace for People and Organizations</title>
<author initials='M.' surname='Mealling' fullname='M. Mealling'>
<organization /></author>
<date year='2001' month='January' />
<abstract>
<t>This document describes a Uniform Resource Name (URN) namespace that is engineered by Network Solutions, Inc.  for naming people and organizations.  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='3043' />
<format type='TXT' octets='8136' target='http://www.rfc-editor.org/rfc/rfc3043.txt' />
</reference>



<reference anchor='RFC5890' target='http://www.rfc-editor.org/info/rfc5890'>

<front>
<title>Internationalized Domain Names for Applications (IDNA): Definitions and Document Framework</title>
<author initials='J.' surname='Klensin' fullname='J. Klensin'>
<organization /></author>
<date year='2010' month='August' />
<abstract>
<t>This document is one of a collection that, together, describe the protocol and usage context for a revision of Internationalized Domain Names for Applications (IDNA), superseding the earlier version.  It describes the document collection and provides definitions and other material that are common to the set. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5890' />
<format type='TXT' octets='54245' target='http://www.rfc-editor.org/rfc/rfc5890.txt' />
</reference>




			<reference anchor="TS24.615">
				<front>
					<title>Communication Waiting (CW) using IP Multimedia
          (IM) Core Network (CN) subsystem; Protocol Specification</title>
					<author>
<organization>3GPP</organization>
</author>

  <date month="September" year="2015" />
				
				</front>
      <seriesInfo name="3GPP TS" value="24.615" />

			</reference>

			<reference anchor="ISO3166-1" target="http://www.iso.org/iso/english_country_names_and_code_elements">
				<front>
					<title>English country names and code elements</title>
					<author> <organization>ISO</organization></author>
					<date></date>
				</front>
	                     <seriesInfo name="ISO" value="3166-1" />
			</reference>
			<reference anchor="E182" target="http://www.itu.int/rec/T-REC-E.182-199803-I/en">
				<front>
					<title>Application of tones and recorded announcements in telephone services</title>
					<author>
<organization>ITU-T</organization>
</author>
					<date year="1998" />
				</front>
                                 <seriesInfo name="ITU-T Recommendation" value="E.182"/>
				<format type="HTML" target="http://www.itu.int/rec/T-REC-E.182-199803-I/en"/>
			</reference>
		</references>

<!-- ACKNOWLEDGEMENTS
-->

		
				<section anchor="Acknowledgements" title="Acknowledgements" numbered="no">
			<t>The authors wish to thank Denis Alexeitsev, the editor of the initial version in BLISS,  
   Anwar Siddiqui for his contributions to the document, 
   Christer Holmberg for his careful review of the document,
   Adam Roach,
      Dean Willis, Martin Huelsemann, Shida Schubert, John Elwell, and Tom
      Taylor for their comments and suggestions and Alfred Hoenes for his 
      extensive comments and proposals related to new namespace identifiers for URNs.</t>
		</section>
	</back>
</rfc>
