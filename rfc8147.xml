<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119   PUBLIC "" "reference.RFC.2119.xml">
<!ENTITY RFC5012   PUBLIC "" "reference.RFC.5012.xml">
<!ENTITY RFC6881   PUBLIC "" "reference.RFC.6881.xml">
<!ENTITY RFC5069   PUBLIC "" "reference.RFC.5069.xml">
<!ENTITY RFC5031   PUBLIC "" "reference.RFC.5031.xml">
<!ENTITY RFC7303   PUBLIC "" "reference.RFC.7303.xml">
<!ENTITY RFC6838   PUBLIC "" "reference.RFC.6838.xml">
<!ENTITY RFC6086   PUBLIC "" "reference.RFC.6086.xml">
<!ENTITY RFC6443   PUBLIC "" "reference.RFC.6443.xml">
<!ENTITY RFC7378   PUBLIC "" "reference.RFC.7378.xml">
<!ENTITY RFC7852   PUBLIC "" "reference.RFC.7852.xml">
<!ENTITY RFC7090   PUBLIC "" "reference.RFC.7090.xml">
<!ENTITY RFC3688   PUBLIC "" "reference.RFC.3688.xml">
<!ENTITY RFC5226   PUBLIC "" "reference.RFC.5226.xml">

]>

<?rfc toc="yes" ?>
<?rfc tocdepth="4" ?> 
<?rfc symrefs="yes" ?>
<?rfc subcompact="no" ?>
<?rfc compact="yes" ?>
<?rfc sortrefs="yes" ?>


<rfc number="8147" category="std" submissionType="IETF" consensus="yes"
  ipr="trust200902">

<front>

    <title abbrev="Next-Generation eCall">Next-Generation Pan-European eCall</title>

    <author initials="R." surname="Gellens" fullname="Randall Gellens">
      <organization>Core Technology Consulting</organization>
      <address>
        <email>rg+ietf@coretechnologyconsulting.com</email>
        <uri>http://www.coretechnologyconsulting.com</uri>
      </address>
    </author>

    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
            <organization>Individual</organization>
            <address>
                <email>Hannes.Tschofenig@gmx.net</email>
                <uri>http://www.tschofenig.priv.at</uri>
            </address>
    </author>

    <date month="May" year="2017"/>
    <area>Applications and Real-Time (ART)</area>
    <workgroup>ECRIT</workgroup>

    <abstract>
      <t>This document describes how to use IP-based emergency services
      mechanisms to support the next generation of the Pan-European
      in&nbhy;vehicle emergency call service defined under the eSafety
      initiative of the European Commission (generally referred to as
      "eCall"). eCall is a standardized and mandated system for a special form
      of emergency calls placed by vehicles, providing real-time
      communications and an integrated set of related data.</t> 

      <t>This document also registers MIME media types and an Emergency Call
      Data Type for the eCall vehicle data and metadata/control
      data, and an INFO package to enable carrying this data in SIP INFO
      requests.</t> 
      
      <t>Although this specification is designed to meet the requirements of
      next-generation Pan-European eCall (NG-eCall), it is specified
      generically such that the technology can be reused or extended to suit
      requirements across jurisdictions.</t> 
    </abstract>
</front>

<middle>

<section anchor="intro" title="Introduction">

      <t>Emergency calls made from vehicles (e.g., in the event of a crash) assist in significantly reducing road deaths and injuries by allowing emergency services to be aware of the incident, the state (condition) of the vehicle, and the location of the vehicle and to have a voice communications channel with the vehicle occupants.  This enables a quick and appropriate response.</t>

        <t>The European Commission initiative of eCall was conceived in the late 1990s and has evolved to a European Parliament decision requiring the implementation of a compliant in-vehicle system (IVS) in new vehicles and the deployment of eCall in the European Member States in the very near future.  Other regions are developing eCall-compatible systems.</t>
        
        <t>The Pan-European eCall system is a standardized and mandated
	mechanism for emergency calls by vehicles, providing a voice channel
	and transmission of data.  eCall establishes procedures for such calls
	to be placed by in-vehicle systems, recognized and processed by the
	mobile network, and routed to a specialized Public Safety Answering
	Point (PSAP) where the vehicle data is available to assist the call
	taker in assessing and responding to the situation.  eCall provides a
	standard set of vehicle, sensor (e.g., crash-related), and location data.</t>

      <t>An eCall can be either user initiated or automatically triggered.  Automatically triggered eCalls indicate a car crash or some other serious incident.  Manually triggered eCalls might be reports of witnessed crashes or serious hazards, a request for medical assistance, etc.  PSAPs might apply specific operational handling to manual and automatic eCalls.</t>

    <t>Legacy eCall is standardized (by 3GPP <xref target="SDO-3GPP" /> and
    the European Committee for Standardization (CEN) <xref target="CEN" />) as
    a 3GPP circuit-switched call over Global System for Mobile communications (GSM) (2G) or Universal Mobile Telecommunications System (UMTS) (3G).  Flags in the call setup mark the call as an eCall and further indicate if the call was automatically or manually triggered.  The call is routed to an eCall-capable PSAP, a voice
    channel is established between the vehicle and the PSAP, and an eCall
    in-band modem is used to carry a defined set of vehicle, sensor (e.g.,
    crash-related), and location data (the Minimum Set of Data or MSD) within
    the voice channel.  The same in-band mechanism is used for the PSAP to
    acknowledge successful receipt of the MSD and to request the vehicle to
    send a new MSD (e.g., to check if the state of or location of the vehicle
    or its occupants has changed).  NG-eCall moves from circuit switched to
    all&nbhy;IP and carries the vehicle data and eCall signaling as additional data
    carried with the call.  This document describes how IETF mechanisms for
    IP-based emergency calls (including <xref target="RFC6443"/> and <xref
    target="RFC7852"/>) are used to provide the signaling and data exchange of
    the next generation of Pan-European eCall.</t> 
    
    <t>The European Telecommunications Standards Institute (ETSI) <xref
    target="SDO-ETSI" /> has published a Technical Report titled "Mobile
    Standards Group (MSG); eCall for VoIP" <xref target="MSG_TR" /> that
    presents findings and recommendations regarding support for eCall in an
    all-IP environment.  The recommendations include the use of 3GPP Internet
    Multimedia System (IMS) emergency calling with additional elements
    identifying the call as an eCall and as carrying eCall data and mechanisms
    for carrying the data and eCall signaling.  3GPP IMS emergency services
    support multimedia, providing the ability to carry voice, text, and video.
    This capability is referred to within 3GPP as Multimedia Emergency
    Services (MMES).</t> 

    <t>A transition period will exist during which time the various entities
    involved in initiating and handling an eCall might support NG-eCall,
    legacy eCall, or both.  The issues of migration and co-existence during
    the transition period are outside the scope of this document.</t> 

      <t>This document indicates how to use IP-based emergency services
      mechanisms to support NG-eCall.</t> 

      <t>This document also registers MIME media types and Emergency Call
      Data Types for the eCall vehicle data (MSD) and
      metadata/control data, and an INFO package to enable carrying this data
      in SIP INFO requests.</t>   
    
    <t>The MSD is carried in the MIME type
    application/EmergencyCallData.eCall.MSD and the metadata/control block
    is carried in the MIME type application/EmergencyCallData.Control+xml
    (both of which are registered in <xref target="iana"/>).  An INFO package
    is defined (in <xref target="info"/>) to enable these MIME types to be
    carried in SIP INFO requests, per <xref target="RFC6086"/>.</t> 
    
</section>

<section anchor="terminology" title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT",
        "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in
          <xref target="RFC2119"/>. </t>
      <t>This document reuses terminology defined in Section 3 of <xref
          target="RFC5012"/>.</t>
      <t>Additionally, we use the following abbreviations:
<list style="empty">
<t>
<list style="hanging" hangIndent="9">

<t hangText="3GPP:">3rd Generation Partnership Project</t>
<t hangText="CEN:">European Committee for Standardization</t>
<t hangText="EENA:">European Emergency Number Association</t>
<t hangText="ESInet:">Emergency Services IP network</t>
<t hangText="IMS:">IP Multimedia Subsystem</t>
<t hangText="IVS:">In-Vehicle System</t>
<t hangText="MNO:">Mobile Network Operator</t>
<t hangText="MSD:">Minimum Set of Data</t>
<t hangText="PSAP:">Public Safety Answering Point</t>
</list>
</t></list></t>

</section>


<section anchor="scope" title="Document Scope">
        <t>This document is focused on the signaling, data exchange, and
	protocol needs of NG-eCall (also referred to as packet-switched eCall
	or all-IP eCall) within the SIP framework for emergency calls (as
	described in <xref target="RFC6443"/> and <xref target="RFC6881"/>).
	eCall itself is specified by 3GPP and CEN, and these specifications
	include far greater scope than is covered here.</t> 

        <t>The eCall service operates over cellular wireless communication,
	but this document does not address cellular-specific details, nor
	client domain selection (e.g., circuit-switched versus
	packet-switched).  All such aspects are the purview of their
	respective standards bodies.  The scope of this document is limited to
	eCall operating within a SIP-based environment (e.g., 3GPP IMS
	Emergency Calling <xref target="TS23.167"/>).</t> 
        
        <t>Although this specification is designed to meet the requirements of
	Pan-European NG-eCall, it is specified generically such that the
	technology can be reused or extended to suit requirements across
	jurisdictions (see, e.g., <xref target="RFC8148"/>), and extension
	points are provided to facilitate this.</t>  

    <t>Note that vehicles designed for multiple regions might need to support
    eCall and other Advanced Automatic Crash Notification (AACN) systems (such
    as described in <xref target="RFC8148"/>), but this is out of scope of
    this document.</t> 
</section> 


<section anchor="requirements" title="eCall Requirements">

    
    <t>eCall requirements are specified by CEN in <xref target="EN_16072" />
    and by 3GPP in <xref target="TS22.101" />, Section 10.7 and Annex A.27,
    and <xref target="TS24.229"/>, Section 4.7.6.  Requirements specific to
    vehicle data are contained in EN 15722 <xref target="MSD"/>.</t> 
</section> 

<section anchor="data" title="Vehicle Data">

<t>Pan-European eCall provides a standardized and mandated set of
vehicle-related data (including VIN, vehicle type, propulsion type, current
and optionally previous location coordinates, and the number of occupants)
known as the Minimum Set of Data (MSD). CEN has specified this data in EN 15722 <xref target="MSD"/>,
along with both ASN.1 and XML encodings.  Both circuit-switched eCall and this
document use the ASN.1 PER encoding, which is specified in Annex A of EN 15722
<xref target="MSD"/> (the XML encoding specified in Annex C is not used in
this document, per 3GPP <xref target="SDO-3GPP"/>).</t> 

<t>This document registers the application/EmergencyCallData.eCall.MSD MIME
media type to enable the MSD to be carried in SIP.  As an ASN.1 PER-encoded
object, the data is binary and transported using binary content transfer
encoding within SIP messages.  This document also adds "eCall.MSD" 
to the "Emergency Call Data Types" registry to enable the MSD to be recognized
as such in a SIP-based eCall emergency call.  (See <xref target="RFC7852"/>
for more information about the registry and how it is used.)</t> 

<t>See <xref target="transport"/> for a discussion of how the MSD vehicle data
is conveyed in an NG-eCall.</t> 

</section>

<section anchor="transport" title="Data Transport">

<t><xref target="RFC7852"/> establishes a general mechanism for conveying
blocks of data within a SIP emergency call.  This document makes use of that
mechanism to include vehicle data (the MSD; see <xref target="data"/>) and
metadata/control information (see <xref target="metadata"/>) within SIP
messages.  This document also registers an INFO package (in <xref
target="info"/>) to enable eCall-related data blocks to be carried in SIP INFO
requests (per <xref target="RFC6086"/>, new INFO usages require the definition
of an INFO package).</t> 

<t>Note that if other data sets need to be transmitted in the future, the
appropriate signaling mechanism for such data needs to be evaluated, including
factors such as the size and frequency of such data.</t> 

<t>An IVS transmits an MSD (see <xref target="data"/>) by encoding it per
Annex A of EN 15722 <xref target="MSD"/> and including it as a MIME body part
within a SIP message per <xref target="RFC7852"/>. The body part is identified
by its MIME media type (application/EmergencyCallData.eCall.MSD) in the
Content-Type header field of the body part.  The body part is assigned a
unique identifier that is listed in a Content-ID header field in the body
part.  The SIP message is marked as containing the MSD by adding (or appending
to) a Call-Info header field at the top level of the SIP message.  This
Call-Info header field contains a Content Identifier (CID) URL referencing
the body part's unique identifier and a "purpose" parameter identifying the
data as the eCall MSD per the entry in the "Emergency Call Data Types" registry; the
"purpose" parameter's value is "EmergencyCallData.eCall.MSD".  Per <xref
target="RFC6086"/>, an MSD is carried in a SIP INFO request by using the INFO
package defined in <xref target="info"/>.</t> 

<t>A PSAP or IVS transmits a metadata/control object (see <xref
target="metadata"/>) by encoding it per the description in this document and
including it within a SIP message as a MIME body part per <xref
target="RFC7852"/>. The body part is identified by its MIME media type
(application/EmergencyCallData.Control+xml) in the Content-Type header field
of the body part.  The body part is assigned a unique identifier, which is
listed in a Content-ID header field in the body part.  The SIP message is
marked as containing the metadata/control object by adding (or appending to) a
Call-Info header field at the top level of the SIP message.  This Call-Info
header field contains a CID URL referencing the body part's unique identifier
and a "purpose" parameter identifying the data as an eCall metadata/control
block per the entry in the "Emergency Call Data Types" registry; the "purpose"
parameter's value is "EmergencyCallData.Control".  Per <xref
target="RFC6086"/>, a metadata/control object is carried in a SIP INFO request
by using the INFO package defined in <xref target="info"/>.</t> 

<t>An MSD or a metadata/control block is always enclosed in a multipart body
part (even if it would otherwise be the only body part in the SIP
message).</t> 

<t>A body part containing an MSD or metadata/control object has a
Content-Disposition header field value containing "By-Reference".</t> 

<t>An IVS initiating an NG-eCall includes an MSD as a body part within the
initial INVITE and optionally also includes a metadata/control object
informing the PSAP of its capabilities as another body part.  The MSD body
part (and metadata/control and Presence Information Data Format Location
Object (PIDF-LO) body parts, if included) have a Content-Disposition header
field with the value "By-Reference; handling=optional".  Specifying
"handling=optional" prevents the SIP INVITE request from being rejected if it
is processed by a legacy element (e.g., a gateway between SIP and
circuit-switched environments) that does not understand the MSD (or
metadata/control object or PIDF-LO).</t>

<t>The PSAP creates a metadata/control
object acknowledging receipt of the MSD and includes it as a body part within
the SIP final response to the SIP INVITE request per <xref target="RFC7852"/>.
A metadata/control object is not included in provisional (e.g., 180)
responses.</t> 

<t>A PSAP is able to reject a call while indicating that it is aware of the
situation by including a metadata/control object acknowledging the MSD and
containing "received=true" within a final response using SIP response code 600
(Busy Everywhere), 486 (Busy Here), or 603 (Decline), per <xref
target="RFC7852"/>.</t> 

<t>If the IVS receives an acknowledgment for an MSD containing
"received=false", this indicates that the PSAP was unable to properly decode
or process the MSD. The IVS action is not defined (e.g., it might only log an
error).  Since the PSAP is able to request an updated MSD during the call, if
an initial MSD is unsatisfactory in any way, the PSAP can choose to request
another one. </t> 

<t>A PSAP can request that the vehicle send an updated MSD during a call
(e.g., upon manual request of the PSAP call taker who suspects the vehicle
state may have changed).  To do so, the PSAP creates a metadata/control object
requesting an MSD and includes it within a SIP INFO request sent within the
dialog.  The IVS then includes an updated MSD within a SIP INFO request and
sends it within the dialog.  If the IVS is unable to send an MSD, it instead
sends a metadata/control object acknowledging the request, containing an &lt;actionResult&gt; element with a "success" parameter set to "false" and a "reason" parameter (and optionally a "details" parameter) indicating why the request could not be accomplished.  Per <xref
target="RFC6086"/>, metadata/control objects and MSDs are sent using the INFO
package defined in <xref target="info"/>.  In addition, to align with how an
MSD or metadata/control block is transmitted in a SIP message other than an
INFO request, a Call-Info header field is included in the SIP INFO request to
reference the MSD or metadata/control block per <xref target="RFC7852"/>.  See
<xref target="info"/> for information about the use of SIP INFO requests to
carry data within an eCall.</t> 

<t>The IVS is not expected to send an unsolicited MSD after the initial
INVITE.</t> 

<t>This document does not mandate support for the data blocks defined in <xref
target="RFC7852"/>.</t> 


</section> 

<section anchor="setup" title="Call Setup">

<t>In a circuit-switched eCall, the IVS places a special form of a 112
emergency call, which carries an eCall flag (indicating that the call is an
eCall and also if the call was manually or automatically triggered); the
mobile network operator (MNO) recognizes the eCall flag and routes the call to
an eCall-capable PSAP, and vehicle data is transmitted to the PSAP via the
eCall in-band modem (in the voice channel).</t> 
<t>
        <figure anchor="cs-ecall" title="Circuit-Switched eCall">
          <artwork><![CDATA[
   ///-----\\\     112 voice call with eCall flag      +------+
   ||| IVS |||---------------------------------------->+ PSAP |
   \\\-----///  vehicle data via eCall in-band modem   +------+
]]></artwork>
        </figure>
      </t>

<t>For NG-eCall, the IVS establishes an emergency call using a Request-URI
indicating a manual or automatic eCall; the MNO (or ESInet) recognizes the
eCall URN and routes the call to an NG-eCall-capable PSAP; and the PSAP
interprets the vehicle data sent with the call and makes it available to the
call taker.</t> 
<t>
        <figure anchor="ng-ecall" title="NG-eCall">
          <artwork><![CDATA[
   ///-----\\\    IMS emergency call with eCall URN    +------+
   ||| IVS |||---------------------------------------->+ PSAP |
   \\\-----///  vehicle data included in call setup    +------+
]]></artwork>
        </figure>
      </t>

<t>See <xref target="transport"/> for information on how the MSD is
transported within an NG-eCall.</t> 

   <t>This document adds new service URN children within the "sos" subservice.
   These URNs provide the mechanism by which an eCall is identified and
   differentiate between manually and automatically triggered eCalls (which
   might be subject to different treatment, depending on policy). The two
   service URNs are: urn:service:sos.ecall.automatic and
   urn:service:sos.ecall.manual, which request resources associated with an
   emergency call placed by an in-vehicle system, carrying a standardized set
   of data related to the vehicle and incident.  These are registered in <xref
   target="service-urn"/>.</t> 
   
   <t>Call routing is outside the scope of this document.</t>

</section> 


<section anchor="test-calls" title="Test Calls">

   <t>eCall requires the ability to place test calls (see <xref
   target="TS22.101"/>, clause 10.7 and <xref target="EN_16062"/>, clause
   7.2.2).  These are calls that are recognized and treated to some extent as
   eCalls but are not given emergency call treatment and are not handled by
   call takers.  The specific handling of test eCalls is outside the scope of
   this document; typically, the test call facility allows the IVS or user to
   verify that an eCall can be successfully established with voice
   communication.  The IVS might also be able to verify that the MSD was
   successfully received.</t> 
   
   <t>A service URN starting with "test." indicates a test call.  For eCall, 
   "urn:service:test.sos.ecall" indicates such a test feature. The "test"
   service URN is defined in <xref target="RFC6881"/>.</t> 
   
   <t>This document specifies "urn:service:test.sos.ecall" for eCall test
   calls.  This is registered in <xref target="service-urn"/>.</t> 
   
   <t>The circuit-switched eCall test call facility is a non-emergency number,
   so it does not get treated as an emergency call.  For NG&nbhy;eCall, MNOs,
   emergency authorities, and PSAPs can determine how to treat a vehicle call
   requesting the "test" service URN so that the desired functionality is
   tested, but this is outside the scope of this document.</t> 

</section> 


<section anchor="metadata" title="The Metadata/Control Object">
    
    <t>eCall requires the ability for the PSAP to acknowledge successful
    receipt of an MSD sent by the IVS and for the PSAP to request that the IVS
    send an MSD (e.g., the call taker can initiate a request for a new MSD to
    see if there have been changes in the vehicle's state, such as location,
    direction, or number of fastened seat belts).</t> 

    <t>This document defines a block of metadata/control data as an XML
    structure containing elements used for eCall and other related emergency
    call systems and extension points.  (This metadata/control block is in
    effect a high-level protocol between the PSAP and IVS.)</t>

    <t>This document registers the application/EmergencyCallData.Control+xml MIME media type to enable the metadata/control data to be carried in SIP.  This document also adds "Control" to the "Emergency Call Data Types" registry to enable the metadata/control block to be recognized as such in a SIP-based eCall emergency call.  (See <xref target="RFC7852"/> for more information about the registry and how it is used.)</t> 

    <t>See <xref target="transport"/> for a discussion of how the metadata/control data is conveyed in an NG-eCall.</t> 

    <t>When the PSAP
    sends a metadata/control block in response to data sent by the IVS in a
    SIP request other than INFO (e.g., the MSD in the initial INVITE), the
    metadata/control block is sent in the SIP response to that request (e.g.,
    the response to the INVITE request).  When the PSAP sends a control block
    in other circumstances (e.g., mid call), the control block is transmitted
    from the PSAP to the IVS in a SIP INFO request within the established
    dialog.  The IVS sends the requested data (the MSD) in a new SIP INFO
    request (per <xref target="RFC6086"/>). This mechanism flexibly allows the
    PSAP to send eCall-specific data to the IVS and the IVS to respond.  SIP
    INFO requests are sent using an appropriate INFO package.  See <xref
    target="transport"/> for more information on sending a metadata/control
    block within a SIP message.  See <xref target="info"/> for information
    about the use of SIP INFO requests to carry data within an eCall.</t> 

    <t>When the IVS includes an unsolicited MSD in a SIP request (e.g., the
    initial INVITE), the PSAP sends a metadata/control block indicating
    successful/unsuccessful receipt of the MSD in the SIP response to the
    request.  This also informs the IVS that an NG-eCall is in operation.  If
    the IVS receives a SIP final response without the  metadata/control block,
    it indicates that the SIP dialog is not an NG-eCall (e.g., some part of
    the call is being handled as a legacy call).  When the IVS sends a
    solicited MSD (e.g., in a SIP INFO request sent following receipt of a SIP
    INFO request containing a metadata/control block requesting an MSD), the
    PSAP does not send a metadata/control block indicating successful or
    unsuccessful receipt of the MSD.  (Normal SIP retransmission handles
    non-receipt of requested data; note that, per <xref target="RFC6086"/>, a
    200 OK response to a SIP INFO request indicates only that the receiver has
    successfully received and accepted the SIP INFO request, and it says
    nothing about the acceptability of the payload.)  If the IVS receives a
    request to send an MSD but it is unable to do so for any reason, the IVS
    instead sends a metadata/control object acknowledging the request, containing an &lt;actionResult&gt;
    element with a "succes" parameter set to "false" and a "reason" parameter (and
    optionally a "details" parameter) indicating why the request could not be
    accomplished.</t> 

    <t>This provides flexibility to handle various circumstances.  For
    example, if a PSAP is unable to accept an eCall (e.g., due to overload or
    too many calls from the same location), it can reject the INVITE.  Since a
    metadata/control object is also included in the SIP response that rejects
    the call, the IVS knows if the PSAP received the MSD and can inform the
    vehicle occupants that the PSAP successfully received the vehicle location
    and information but can't talk to the occupants at that time.  Especially
    for SIP response codes that indicate an inability to conduct a call (as
    opposed to a technical inability to process the request), the IVS can also
    determine that the call was successful on a technical level (e.g., not
    helpful to retry as circuit switched). (Note that there could be edge
    cases where the PSAP response is not received by the IVS, e.g., if an
    intermediary sends a CANCEL, and an error response is forwarded towards
    the IVS before the error response from the PSAP is received, the response
    will be dropped, but these are unlikely to occur here.)</t> 

    <t>The metadata/control block is carried in the MIME type
    application/EmergencyCallData.Control+xml.</t> 
    
    <t>The metadata/control block is designed for use with Pan-European eCall
    and also eCall-like systems (i.e., in other regions), and it has extension
    points.  Note that eCall-like systems might define their own vehicle data
    blocks and might need to register a new INFO package to accommodate the
    new data MIME media type and the metadata/control object.</t> 


    <section anchor="control_block" title="The Control Block">
    
        <t>The control block is an XML data structure allowing for
	acknowledgments, requests, and capabilities information.  It is
	carried in a body part with a specific MIME media type. Three elements
	are defined for use within a control block:</t> 
    
    <t>
    <list style="hanging" hangIndent="14">

    <t hangText="ack">Acknowledges receipt of data or a request.</t>

    <t hangText="capabilities">Used in a control block sent from the IVS to
    the PSAP (e.g., in the initial INVITE) to inform the PSAP of the vehicle
    capabilities.  Child elements contain all actions and data types supported
    by the vehicle.  It is OPTIONAL for the IVS to send this block.  Omitting
    the block indicates that the IVS supports only the mandatory functionality
    defined in this document.</t> 

    <t hangText="request">Used in a control block sent by the PSAP to the IVS
    to request the vehicle to perform an action.</t> 

    </list>
    </t>

    <t>
    The &lt;ack&gt; element indicates the object being acknowledged and
    reports success or failure. 
    </t>

    <t>
    The &lt;request&gt; element contains attributes to indicate the request
    and to supply related information.  The "action" attribute is mandatory
    and indicates the specific action.  An IANA registry is created in <xref
    target="eCall-action-registry" /> to contain the allowed values. 
    </t>
    
    <t>
    The &lt;capabilities&gt; element has child &lt;request&gt; elements to
    indicate the actions supported by the IVS. 
    </t>

        <section anchor="ack_element" title="The &lt;ack&gt; Element">

        <t>The &lt;ack&gt; element acknowledges receipt of an eCall data
	object or request.  An &lt;ack&gt; element references the Content-ID
	of the object being acknowledged.  The PSAP MUST send an &lt;ack&gt;
	element acknowledging receipt of an unsolicited MSD (e.g., sent by the
	IVS in the INVITE); this &lt;ack&gt; element indicates if the PSAP
	considers the MSD successfully received or not.  An &lt;ack&gt;
	element is not sent for a &lt;capabilities&gt; element.</t> 

        <section title="Attributes of the &lt;ack&gt; Element">

        <t>
        The &lt;ack&gt; element has the following attributes:
        </t>

        <t>
        <?rfc compact="yes"?>
        <?rfc subcompact="yes"?>
        <list style="hanging" hangIndent="14">

            <t hangText="Name:       ">ref</t>
            <t hangText="Usage:      ">Mandatory</t>
            <t hangText="Type:       ">anyURI</t>
            <t hangText="Direction:  ">Sent in either direction</t>
            <t hangText="Description:">References the Content-ID of the body part being acknowledged.</t>
            <t hangText="Example:    ">&lt;ack received="true" ref="1234567890@atlanta.example.com"/&gt;</t>


            <t></t>
            <t hangText="Name:       ">received</t>
            <t hangText="Usage:      ">Conditional: mandatory in an &lt;ack&gt; element sent by a PSAP</t>
            <t hangText="Type:       ">boolean</t>
            <t hangText="Direction:  ">In this document, sent from the PSAP to the IVS</t>
            <t hangText="Description:">Indicates if the referenced object was considered successfully received or not.</t>
            <t hangText="Example:    ">&lt;ack received="true" ref="1234567890@atlanta.example.com"/&gt;</t>

        </list>
        <?rfc subcompact="no"?>
        <?rfc compact="no"?>
        </t>

        </section> 

        <section title="Child Element of the &lt;ack&gt; Element">

        <t>
        For extensibility, the &lt;ack&gt; element has the following child element:
        </t>

        <t>
        <?rfc compact="yes"?>
        <?rfc subcompact="yes"?>
        <list style="hanging">

            <t hangText="Name:       ">actionResult</t>
            <t hangText="Usage:      ">Optional</t>
            <t hangText="Direction:  ">Sent from the IVS to the PSAP</t>
            <t hangText="Description:">An &lt;actionResult&gt; element indicates the result of an action (other than a successfully executed "send-data" action).  The &lt;ack&gt; element contains an &lt;actionResult&gt; element for each &lt;request&gt; element that is not a successfully executed "send-data" action.  The &lt;actionResult&gt; element has the following attributes:</t>

                <t>
                <list style="hanging">

                <t hangText="Name:       ">action</t>
                <t hangText="Usage:      ">Mandatory</t>
                <t hangText="Type:       ">token</t>
                <t hangText="Description:">Contains the value of the "action" attribute of the &lt;request&gt; element</t>

                <t></t>
                <t hangText="Name:       ">success</t>
                <t hangText="Usage:      ">Mandatory</t>
                <t hangText="Type:       ">boolean</t>
                <t hangText="Description:">Indicates if the action was successfully accomplished</t>

                <t></t>
                <t hangText="Name:       ">reason</t>
                <t hangText="Usage:      ">Conditional</t>
                <t hangText="Type:       ">token</t>
                <t hangText="Description:">Used when "success" is "false",
		this attribute contains a reason code for a failure.  A
		registry for reason codes is defined in <xref
		target="eCall-reason-registry"/>.  The initial values are:
		damaged (required components are damaged), data-unsupported
		(the data item referenced in a "send-data" request is not
		supported), security-failure (the authenticity of the request
		or the authority of the requestor could not be verified),
		unable (a generic error for use when no other code is
		appropriate), and unsupported (the "action" value is not
		supported).</t> 

                <t></t>
                <t hangText="Name:       ">details</t>
                <t hangText="Usage:      ">optional</t>
                <t hangText="Type:       ">string</t>
                <t hangText="Description:">Contains further explanation of the circumstances of a success or failure.  The contents are implementation specific and human readable.  This is intended for internal use and troubleshooting, not for display to vehicle occupants.</t>

                </list>
                <?rfc subcompact="no"?>
                <?rfc compact="no"?>
                </t>

        </list>
        </t>

        </section> 
        <section anchor="ack_example" title="Example of the &lt;ack&gt; Element">

        <figure anchor="ack-example-psap" title=" &lt;ack&gt; Example from PSAP to IVS">
            <artwork>
                <![CDATA[
    <?xml version="1.0" encoding="UTF-8"?>
    <EmergencyCallData.Control
        xmlns="urn:ietf:params:xml:ns:EmergencyCallData:control"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <ack received="true" ref="1234567890@atlanta.example.com"/>

    </EmergencyCallData.Control>
                ]]>
            </artwork>
        </figure>

        </section> 

        </section> 

        <section anchor="capabilities_element" title="The &lt;capabilities&gt; Element">

        <t>
        The &lt;capabilities&gt; element is transmitted by the IVS to indicate its capabilities to the PSAP. No attributes for this element are currently defined.  There is one child element defined.
        </t>

        <section title="Child Element of the &lt;capabilities&gt; Element">

        <t>
        The &lt;capabilities&gt; element has the following child element:
        </t>

        <t>
        <?rfc compact="yes"?>
        <?rfc subcompact="yes"?>
        <list style="hanging">

            <t hangText="Name:       ">request</t>
            <t hangText="Usage:      ">Mandatory</t>
            <t hangText="Description:">The &lt;capabilities&gt; element contains a &lt;request&gt; child element per action supported by the vehicle.</t>

           <t></t>
            <t hangText="Example:">
            
                    <list style="empty">
                    <t>&lt;capabilities&gt;
                        <list style="empty">
                            <t>&lt;request action="send-data"                  supported-values="eCall.MSD" /&gt;</t>
                        </list>
                    &lt;/capabilities&gt;</t>
                </list>
             
            </t>

        </list>
        <?rfc subcompact="no"?>
        <?rfc compact="no"?>
        </t>
        
        <t>It is OPTIONAL for the IVS to support the &lt;capabilities&gt; element.  If the IVS does not send a &lt;capabilities&gt; element, this indicates that the only &lt;request&gt; action supported by the IVS is "send-data" with "datatype" set to "eCall.MSD".</t>

        </section> 

        <section anchor="capabilities_example" title="Example of the &lt;capabilities&gt; Element">
        <figure anchor="capabilities-example" title=" &lt;capabilities&gt; Element Example">
            <artwork>
                <![CDATA[
    <?xml version="1.0" encoding="UTF-8"?>
    <EmergencyCallData.Control
        xmlns="urn:ietf:params:xml:ns:EmergencyCallData:control">

    <capabilities>
        <request action="send-data" supported-values="eCall.MSD"/>
    </capabilities>

    </EmergencyCallData.Control>
                ]]>
            </artwork>
        </figure>
        </section>

        </section> 

        <section anchor="request_element" title="The &lt;request&gt; Element">

        <t>
        A &lt;request&gt; element appears one or more times on its own or as a child of a &lt;capabilities&gt; element.  It allows the PSAP to request that the IVS perform an action.  The only action that MUST be supported is to send an MSD.  The attributes and child elements are defined as follows.
        </t>

        <section anchor="request_attributes" title="Attributes of the &lt;request&gt; Element">

        <t>
        The &lt;request&gt; element has the following attributes:
        </t>

        <t>
        <?rfc compact="yes"?>
        <?rfc subcompact="yes"?>
        <list style="hanging">

            <t hangText="Name:       ">action</t>
            <t hangText="Usage:      ">Mandatory</t>
            <t hangText="Type:       ">token</t>
            <t hangText="Direction:  ">Sent in either direction</t>
            <t hangText="Description:">Identifies the action that the vehicle is requested to perform (in a &lt;request&gt; element within a &lt;capabilities&gt; element; indicates an action that the vehicle is capable of performing).  An IANA registry is established in <xref target="eCall-action-registry" /> to contain the allowed values.</t>
            <t hangText="Example:    ">action="send-data"</t>

            <t></t>
            <t hangText="Name:       ">int-id</t>
            <t hangText="Usage:      ">Conditional</t>
            <t hangText="Type:       ">unsignedInt</t>
            <t hangText="Direction:  ">Sent in either direction</t>
            <t hangText="Description:">Defined for extensibility.  Documents that make use of it are expected to explain when it is required and how it is used.</t>
            <t hangText="Example:    ">int-id="3"</t>

            <t></t>
            <t hangText="Name:       ">persistence</t>
            <t hangText="Usage:      ">Optional</t>
            <t hangText="Type:       ">duration</t>
            <t hangText="Direction:  ">Sent in either direction</t>
            <t hangText="Description:">Defined for extensibility.  Specifies how long to carry on the specified action.  If absent, the default is for the duration of the call.</t>
            <t hangText="Example:    ">persistence="PT1H"</t>

            <t></t>
            <t hangText="Name:       ">datatype</t>
            <t hangText="Usage:      ">Conditional</t>
            <t hangText="Type:       ">token</t>
            <t hangText="Direction:  ">Sent in either direction</t>
            <t hangText="Description:">Mandatory with a "send-data" action
	    within a &lt;request&gt; element that is not within a
	    &lt;capabilities&gt; element.  Specifies the data block that the
	    IVS is requested to transmit, using the same identifier as in the
	    "purpose" attribute set in a Call-Info header field to point to
	    the data block.  Permitted values are contained in IANA's
	    "Emergency Call Data Types" registry established in <xref target="RFC7852"/>.  Only the "eCall.MSD" value is mandatory to support.</t>
            <t hangText="Example:    ">datatype="eCall.MSD"</t>

            <t></t>
            <t hangText="Name:       ">supported-values</t>
            <t hangText="Usage:      ">Conditional</t>
            <t hangText="Type:       ">string</t>
            <t hangText="Direction:  ">Sent from the IVS to the PSAP</t>
            <t hangText="Description:">Defined for extensibility.  Used in a
	    &lt;request&gt; element that is a child of a &lt;capability&gt;
	    element, this attribute lists all supported values of the action
	    type.  Permitted values depend on the action value.  Multiple
	    values are separated with a semicolon.  White space is ignored.
	    Documents that make use of it are expected to explain when it is
	    required, the permitted values, and how it is used.</t> 

            <t></t>
            <t hangText="Name:       ">requested-state</t>
            <t hangText="Usage:      ">Conditional</t>
            <t hangText="Type:       ">token</t>
            <t hangText="Direction:  ">Sent from the PSAP to the IVS</t>
            <t hangText="Description:">Defined for extension.  Indicates the
	    requested state of an element associated with the request type.
	    Permitted values depend on the request type.  Documents that make
	    use of it are expected to explain when it is required, the
	    permitted values, and how it is used.</t> 

            <t></t>
            <t hangText="Name:       ">element-id</t>
            <t hangText="Usage:      ">Conditional</t>
            <t hangText="Type:       ">token</t>
            <t hangText="Direction:  ">Sent from the PSAP to the IVS</t>
            <t hangText="Description:">Defined for extension.  Identifies the
	    element to be acted on.  Permitted values depend on the request
	    type.  Documents that make use of it are expected to explain when
	    it is required, the permitted values, and how it is used.</t> 

        </list>
        <?rfc subcompact="no"?>
        <?rfc compact="no"?>
        </t>

        </section>  


    <section title="Child Element of the &lt;request&gt; Element">
 
         <t>
         For extensibility, the &lt;request&gt; element has the following child element:
         </t>
 
         <t>
         <?rfc compact="yes"?>
         <?rfc subcompact="yes"?>
         <list style="hanging">
 
             <t hangText="Name:       ">text</t>
             <t hangText="Usage:      ">Optional</t>
             <t hangText="Type:       ">string</t>
             <t hangText="Direction:  ">Sent from the PSAP to the IVS</t>
             <t hangText="Description:">Defined for extension.</t>
         </list>
         </t>
   
    </section>
 <section anchor="request_example" title="Request Example">
        <figure anchor="request-example" title="&lt;request&gt; Element Example">
            <artwork>
                <![CDATA[
    <?xml version="1.0" encoding="UTF-8"?>
    <EmergencyCallData.Control
        xmlns="urn:ietf:params:xml:ns:EmergencyCallData:control">

    <request action="send-data" datatype="eCall.MSD"/>

    </EmergencyCallData.Control>
                ]]>
            </artwork>
        </figure>
        </section> 

        </section> 

    </section> 
   </section> 

<section anchor="example" title="Examples">
    <t>
        <xref target="eCall-picture"/> illustrates an eCall. The call uses the request URI urn:service:sos.ecall.automatic service URN and is recognized as an eCall, and further as one that was invoked automatically by the IVS due to a crash or other serious incident.  In this example, the originating network routes the call to an ESInet, which routes the call to the appropriate NG-eCall-capable PSAP.  The emergency call is received by the ESInet's Emergency Services Routing Proxy (ESRP), as the entry point into the ESInet. The ESRP routes the call to a PSAP, where it is received by a call taker.
        In deployments where there is no ESInet, the originating network routes the call directly to the appropriate NG-eCall-capable PSAP, an illustration of which would be identical to the one below except without an ESInet or ESRP.
    </t>
    <t>
        <figure anchor="eCall-picture" title="Example of NG-eCall Message Flow">
          <artwork><![CDATA[

            +-----------+  +----------------------------------------+
            |           |  |                  +-------+             |
            |           |  |                  | PSAP2 |             |
            |           |  |                  +-------+             |
            |           |  |                                        |
            |           |  |   +------+   +----------------------+  |
  Vehicle-->|           |--+-->| ESRP |-->| PSAP1 --> Call Taker |  |
            |           |  |   +------+   +----------------------+  |
            |           |  |                                        |
            |           |  |                  +-------+             |
            |           |  |                  | PSAP3 |             |
            |Originating|  |                  +-------+             |
            |  Mobile   |  |                                        |
            |  Network  |  |                ESInet                  |
            +-----------+  +----------------------------------------+
            ]]></artwork>
        </figure>
    </t>

    <t>
        <xref target="call-flow"/> illustrates an eCall call flow with a mid-call PSAP request for an updated MSD. The call flow shows the IVS initiating an emergency call, including the MSD in the INVITE.  The PSAP includes in the 200 OK response a metadata/control object acknowledging receipt of the MSD.  During the call, the PSAP sends a request for an MSD in an INFO request.  The IVS sends the requested MSD in a new INFO request.
    </t>
    <t>
        <figure anchor="call-flow" title="NG-eCall Call Flow Illustration">
          <artwork><![CDATA[
         IVS                                         PSAP
          |(1) INVITE (eCall MSD)                      |
          |------------------------------------------->|
          |                                            |
          |(2) 200 OK (eCall metadata [ack MSD])       |
          |<-------------------------------------------|
          |                                            |
          |(3) start media stream(s)                   |
          |............................................|
          |                                            |
          |(4) INFO (eCall metadata [request MSD])     |
          |<-------------------------------------------|
          |                                            |
          |(5) 200 OK                                  |
          |------------------------------------------->|
          |                                            |
          |(6) INFO (eCall MSD)                        |
          |------------------------------------------->|
          |                                            |
          |(7) 200 OK                                  |
          |<-------------------------------------------|
          |                                            |
          |(8) BYE                                     |
          |<-------------------------------------------|
          |                                            |
          |(9) end media streams                       |
          |............................................|
          |                                            |
          |(10) 200 OK                                 |
          |------------------------------------------->|
            ]]></artwork>
        </figure>
    </t>

    <t><xref target="eCall-invite"/> illustrates a SIP eCall INVITE request containing an MSD.  For simplicity, the example does not show all SIP headers, nor the Session Description Protocol (SDP) contents, nor does it show any additional data blocks added by the IVS or the originating mobile network.  Because the MSD is encoded in ASN.1 PER, which is a binary encoding, its contents cannot be included in a text document.
    </t>
    <t>
        <figure anchor="eCall-invite" title="SIP NG-eCall INVITE">
          <artwork><![CDATA[
   INVITE urn:service:sos.ecall.automatic SIP/2.0
   To: urn:service:sos.ecall.automatic 
   From: <sip:+13145551111@example.com>;tag=9fxced76sl
   Call-ID: 3848276298220188511@atlanta.example.com
   Geolocation: <cid:target123@example.com>
   Geolocation-Routing: no
   Call-Info: <cid:1234567890@atlanta.example.com>;
              purpose=EmergencyCallData.eCall.MSD
   Accept: application/sdp, application/pidf+xml,
           application/EmergencyCallData.Control+xml
   CSeq: 31862 INVITE
   Recv-Info: EmergencyCallData.eCall.MSD
   Allow: INVITE, ACK, PRACK, INFO, OPTIONS, CANCEL, REFER, BYE,
          SUBSCRIBE, NOTIFY, UPDATE
   Content-Type: multipart/mixed; boundary=boundary1
   Content-Length: ...

   --boundary1
   Content-Type: application/sdp

        ...Session Description Protocol (SDP) goes here...

   --boundary1
   Content-Type: application/pidf+xml
   Content-ID: <target123@example.com>
   Content-Disposition: by-reference;handling=optional

         ...PIDF-LO goes here...

   --boundary1
   Content-Type: application/EmergencyCallData.eCall.MSD
   Content-ID: <1234567890@atlanta.example.com>
   Content-Disposition: by-reference;handling=optional

        ...MSD in ASN.1 PER encoding goes here...

    --boundary1--
]]></artwork>
        </figure>
    </t>


    <t>Continuing the example, <xref target="eCall-ok"/> illustrates a SIP 200 OK response to the INVITE request of <xref target="eCall-invite"/>, containing a metadata/control block acknowledging successful receipt of the eCall MSD.  (For simplicity, the example does not show all SIP headers.)
    </t>

    <t>
        <figure anchor="eCall-ok" title="200 OK Response to INVITE">
          <artwork><![CDATA[
   SIP/2.0 200 OK
   To: urn:service:sos.ecall.automatic;tag=8gydfe65t0
   From: <sip:+13145551111@example.com>;tag=9fxced76sl
   Call-ID: 3848276298220188511@atlanta.example.com
   Call-Info: <cid:2345678901@atlanta.example.com>;
              purpose=EmergencyCallData.Control
   Accept: application/sdp, application/pidf+xml,
           application/EmergencyCallData.Control+xml,
           application/EmergencyCallData.eCall.MSD
   CSeq: 31862 INVITE
   Recv-Info: EmergencyCallData.eCall.MSD
   Allow: INVITE, ACK, PRACK, INFO, OPTIONS, CANCEL, REFER, BYE,
          SUBSCRIBE, NOTIFY, UPDATE
   Content-Type: multipart/mixed; boundary=boundaryX
   Content-Length: ...

   --boundaryX
   Content-Type: application/sdp

        ...Session Description Protocol (SDP) goes here...

   --boundaryX
   Content-Type: application/EmergencyCallData.Control+xml
   Content-ID: <2345678901@atlanta.example.com>
   Content-Disposition: by-reference

   <?xml version="1.0" encoding="UTF-8"?>
   <EmergencyCallData.Control
       xmlns="urn:ietf:params:xml:ns:EmergencyCallData:control">

   <ack received="true" ref="1234567890@atlanta.example.com"/>
   </EmergencyCallData.Control>

   --boundaryX--
]]></artwork>
        </figure>
    </t>


    <t><xref target="eCall-info-req"/> illustrates a SIP INFO request containing a metadata/control block requesting an eCall MSD.  (For simplicity, the example does not show all SIP headers.)
    </t>
    <t>
        <figure anchor="eCall-info-req" title="INFO Requesting MSD">
          <artwork><![CDATA[
   INFO sip:+13145551111@example.com SIP/2.0
   To: <sip:+13145551111@example.com>;tag=9fxced76sl
   From: Exemplar PSAP <urn:service:sos.ecall.automatic>;tag=8gydfe65t0
   Call-ID: 3848276298220188511@atlanta.example.com
   Call-Info: <cid:3456789012@atlanta.example.com>;
              purpose=EmergencyCallData.Control
   CSeq: 41862 INFO
   Info-Package: EmergencyCallData.eCall.MSD
   Allow: INVITE, ACK, PRACK, INFO, OPTIONS, CANCEL, REFER, BYE,
          SUBSCRIBE, NOTIFY, UPDATE
   Content-Type: multipart/mixed; boundary=boundaryZZZ
   Content-Disposition: Info-Package
   Content-Length: ...

   --boundaryZZZ
   Content-Disposition: by-reference
   Content-Type: application/EmergencyCallData.Control+xml
   Content-ID: <3456789012@atlanta.example.com>

   <?xml version="1.0" encoding="UTF-8"?>
   <EmergencyCallData.Control
       xmlns="urn:ietf:params:xml:ns:EmergencyCallData:control">

   <request action="send-data" datatype="eCall.MSD"/>

   </EmergencyCallData.Control>
    --boundaryZZZ--
]]></artwork>
        </figure>
    </t>

    <t><xref target="eCall-info-MSD"/> illustrates a SIP INFO request containing an MSD.  For simplicity, the example does not show all SIP headers.  Because the MSD is encoded in ASN.1 PER, which is a binary encoding, its contents cannot be included in a text document.
    </t>
    <t>
        <figure anchor="eCall-info-MSD" title="INFO Containing MSD">
          <artwork><![CDATA[
   INFO urn:service:sos.ecall.automatic SIP/2.0
   To: urn:service:sos.ecall.automatic;tag=8gydfe65t0
   From: <sip:+13145551111@example.com>;tag=9fxced76sl
   Call-ID: 3848276298220188511@atlanta.example.com
   Call-Info: <cid:4567890123@atlanta.example.com>;
              purpose=EmergencyCallData.eCall.MSD
   CSeq: 51862 INFO
   Info-Package: EmergencyCallData.eCall.MSD
   Allow: INVITE, ACK, PRACK, INFO, OPTIONS, CANCEL, REFER, BYE,
          SUBSCRIBE, NOTIFY, UPDATE
   Content-Type: multipart/mixed; boundary=boundaryLine
   Content-Disposition: Info-Package
   Content-Length: ...

   --boundaryLine
   Content-Type: application/EmergencyCallData.eCall.MSD
   Content-ID: <4567890123@atlanta.example.com>
   Content-Disposition: by-reference

        ...MSD in ASN.1 PER encoding goes here...

   --boundaryLine--
]]></artwork>
        </figure>
    </t>

</section>

<section anchor="security" title="Security Considerations">
      <t>The security considerations described in <xref target="RFC5069"/> (on marking and routing emergency calls) apply here.</t>
       
      <t>In addition to any network-provided location (which might be determined solely by the network or in cooperation with or possibly entirely by the originating device), an eCall carries an IVS-supplied location within the MSD.  This is likely to be useful to the PSAP, especially when no network-provided location is included, or when the two locations are independently determined.  Even in situations where the network-supplied location is limited to the cell site, this can be useful as a sanity check on the device-supplied location contained in the MSD.</t>
      
      <t>The document <xref target="RFC7378"/> discusses trust issues regarding location provided by or determined in cooperation with end devices.</t>
      
      <t>Security considerations specific to the mechanism by which the PSAP sends acknowledgments and requests to the vehicle are discussed in the "Security Considerations" block of <xref target="control.MIME"/>.  Note that an attacker that has access to and is capable of generating a response to the initial INVITE request could generate a 600 (Busy Everywhere), 486 (Busy Here), or 603 (Decline) response that includes a metadata/control object containing a reference to the MSD in the initial INVITE and a "received=true" field, which could result in the IVS perceiving the PSAP to be overloaded and hence not attempting to reinitiate the call.  The risk can be mitigated as discussed in the "Security Considerations" block of <xref target="control.MIME"/>.</t>

    <t>Data received from external sources inherently carries implementation risks.  For example, depending on the platform, buffer overflows can introduce remote code execution vulnerabilities, null characters can corrupt strings, numeric values used for internal calculations can result in underflow/overflow errors, malformed XML objects can expose parsing bugs, etc.  Implementations need to be cognizant of the potential risks, observe best practices (which might include sufficiently capable static code analysis, fuzz testing, component isolation, avoiding use of unsafe coding techniques, third-party attack tests, signed software, over-the-air updates, etc.), and have multiple levels of protection.  Implementors need to be aware that, potentially, the data objects described here and elsewhere (including the MSD and metadata/control objects) might be malformed, contain unexpected characters, have excessively long attribute values and elements, etc.</t>
    
    <t>The security considerations discussed in <xref target="RFC7852"/> apply here (see especially the discussion of Transport Layer Security (TLS), TLS versions, cipher suites, and PKI).</t>

    <t>When vehicle data or control/metadata is contained in a signed or encrypted body part, the enclosing multipart (e.g., multipart/signed or multipart/encrypted) has the same Content-ID as the enclosed data part.  This allows an entity to identify and access the data blocks it is interested in without having to dive deeply into the message structure or decrypt parts it is not interested in.  (The "purpose" parameter in a Call-Info header field identifies the data and contains a CID URL pointing to the data block in the body, which has a matching Content-ID body part header field.)
				</t>

</section> 

<section anchor="privacy" title="Privacy Considerations">
    <t>The privacy considerations discussed in <xref target="RFC7852"/> apply
    here.  The MSD carries some identifying and personal information (mostly
    about the vehicle and less about the owner), as well as location
    information, so it needs to be protected against unauthorized disclosure.
    Local regulations may impose additional privacy protection
    requirements.</t> 
    
    <t>Privacy considerations specific to the data structure containing vehicle information are discussed in the "Security Considerations" block of <xref target="MSD.MIME"/>.</t>

    <t>Privacy considerations specific to the mechanism by which the PSAP sends acknowledgments and requests to the vehicle are discussed in the "Security Considerations" block of <xref target="control.MIME"/>.</t>
</section>


<section title="XML Schema">

    <t>
    This section defines an XML schema for the control block.  The text description of the control block in <xref target="control_block" /> is normative and supersedes any conflicting aspect of this schema.
    </t>

    <t>
    <figure anchor="control-block-scheme" title="Control Block Schema">
        <artwork>
        <![CDATA[
    <?xml version="1.0"?>
    <xs:schema
      targetNamespace="urn:ietf:params:xml:ns:EmergencyCallData:control"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:pi="urn:ietf:params:xml:ns:EmergencyCallData:control"
      xmlns:xml="http://www.w3.org/XML/1998/namespace"
      elementFormDefault="qualified"
      attributeFormDefault="unqualified">

        <xs:import namespace="http://www.w3.org/XML/1998/namespace"/>

        <xs:element name="EmergencyCallData.Control"
                    type="pi:controlType"/>

        <xs:complexType name="controlType">
           <xs:complexContent>
              <xs:restriction base="xs:anyType">
                 <xs:choice>
                    <xs:element name="capabilities" 
                                type="pi:capabilitiesType"/>
                    <xs:element name="request" type="pi:requestType"/>
                    <xs:element name="ack" type="pi:ackType"/>
                    <xs:any namespace="##any" processContents="lax"
                            minOccurs="0"
                            maxOccurs="unbounded"/>
                 </xs:choice>
                 <xs:anyAttribute/>
              </xs:restriction>
           </xs:complexContent>
        </xs:complexType>

        <xs:complexType name="ackType">
            <xs:complexContent>
                <xs:restriction base="xs:anyType">
                    <xs:sequence minOccurs="1" maxOccurs="unbounded">
                        <xs:element name="actionResult" minOccurs="0"
                                    maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:attribute name="action"
                                              type="xs:token"
                                              use="required"/>
                                <xs:attribute name="success"
                                              type="xs:boolean"
                                              use="required"/>
                                <xs:attribute name="reason"
                                              type="xs:token">
                                    <xs:annotation>
                                        <xs:documentation>
                                            conditionally mandatory
                                            when @success="false"
                                            to indicate reason code
                                            for a failure
                                        </xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                                <xs:attribute name="details"
                                              type="xs:string"/>
                                <xs:anyAttribute
                                    processContents="skip"/>
                            </xs:complexType>
                        </xs:element>
                        <xs:any namespace="##any" processContents="lax"
                                minOccurs="0"
                                maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="ref"
                                  type="xs:anyURI"
                                  use="required"/>
                    <xs:attribute name="received"
                                  type="xs:boolean"/>
                    <xs:anyAttribute/>
                </xs:restriction>
            </xs:complexContent>
        </xs:complexType>

        <xs:complexType name="capabilitiesType">
            <xs:complexContent>
                <xs:restriction base="xs:anyType">
                    <xs:sequence minOccurs="1" maxOccurs="unbounded">
                        <xs:element name="request"
                                    type="pi:requestType" 
                                    minOccurs="1"
                            maxOccurs="unbounded"/>
                        <xs:any namespace="##any" processContents="lax"
                                 minOccurs="0"
                            maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:anyAttribute/>
                </xs:restriction>
            </xs:complexContent>
        </xs:complexType>

        <xs:complexType name="requestType">
           <xs:complexContent>
                <xs:restriction base="xs:anyType">
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element name="text" minOccurs="0"
                                    maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:simpleContent>
                                    <xs:extension base="xs:string">
                                        <xs:anyAttribute
                                            namespace="##any"
                                            processContents="skip"/>
                                    </xs:extension>
                                </xs:simpleContent>
                            </xs:complexType>
                        </xs:element>
                        <xs:any namespace="##any" processContents="lax"
                                minOccurs="0"
                                maxOccurs="unbounded"/>
                    </xs:choice>
                    <xs:attribute name="action" type="xs:token"
                                  use="required"/>
                    <xs:attribute name="int-id" type="xs:unsignedInt"/>
                    <xs:attribute name="persistence"
                                  type="xs:duration"/>
                    <xs:attribute name="datatype" type="xs:token"/>
                    <xs:attribute name="supported-values"
                                  type="xs:string"/>
                    <xs:attribute name="element-id" type="xs:token"/>
                    <xs:attribute name="requested-state"
                                  type="xs:token"/>
                    <xs:anyAttribute/>
                </xs:restriction>
            </xs:complexContent>
        </xs:complexType>

    </xs:schema>
        ]]>
        </artwork>

    </figure>
    </t>

</section>  


<section anchor="iana" title="IANA Considerations">

    <section title="The EmergencyCallData Media Subtree">

    <t>This document establishes the "EmergencyCallData" media (MIME) subtype
    tree, a new media subtree rooted at "application/EmergencyCallData".  This
    subtree is used only for content associated with emergency communications.
    New subtypes in this subtree follow the rules specified in Section 3.1 of
    <xref target="RFC6838"/>, with the additional restriction that the
    standards-related organization MUST be responsible for some aspect of
    emergency communications.</t> 
    
    <t>This subtree initially contains the following subtypes (defined here or
    in <xref target="RFC7852"/>): 
    <?rfc compact="yes" ?>
    <?rfc subcompact="yes"?>
    <list style="bullets">
    <t>EmergencyCallData.Comment+xml</t>
    <t>EmergencyCallData.Control+xml</t>
    <t>EmergencyCallData.DeviceInfo+xml</t>
    <t>EmergencyCallData.eCall.MSD</t>
    <t>EmergencyCallData.ProviderInfo+xml</t>
    <t>EmergencyCallData.ServiceInfo+xml</t>
    <t>EmergencyCallData.SubscriberInfo+xml</t>
    </list>
    </t>
    <?rfc subcompact="no"?>
    <?rfc compact="no"?>

    </section>
    
    <section anchor="service-urn" title="Service URN Registrations"> 
    
      <t>IANA has registered the URN urn:service:sos.ecall under the
      "'sos' Sub-Services" registry defined in Section 4.2 of <xref
      target="RFC5031"/>. </t> 
      
      <t>This service requests resources associated with an emergency call
      placed by an in-vehicle system, carrying a standardized set of data
      related to the vehicle and incident. The "Description" registry field is
      "Vehicle-initiated emergency calls".  Two sub-services are registered as
      well:  
        
        <list style='hanging'>

        <t hangText="urn:service:sos.ecall.automatic"><vspace blankLines="1"/>
    Used with an eCall invoked automatically, for example, due to a crash
    or other serious incident.  The "Description" registry field is
    "Automatic vehicle-initiated emergency calls".</t> 

        <t hangText="urn:service:sos.ecall.manual"><vspace blankLines="1"/>
    Used with an eCall invoked due to manual interaction by a vehicle
    occupant.  The "Description" registry field is "Manual
    vehicle-initiated emergency calls".</t> 

        </list> 
        </t>

        <t>IANA has also registered the URN
    urn:service:test.sos.ecall under the "'test' Sub-Services" registry
    defined in Section 17.2 of <xref target="RFC6881"/>.  This service
    requests resources associated with a test (non-emergency) call placed
    by an in-vehicle system.  See <xref target="test-calls"/> for more
    information on the test eCall request URN. </t> 
    </section>
    

    <section anchor="MSD.MIME" title="MIME Media Type Registration for application/EmergencyCallData.eCall.MSD">
    
    <t>IANA has added application/EmergencyCallData.eCall.MSD as
    a MIME media type, with a reference to this document, in accordance with
    the procedures of RFC 6838 <xref target="RFC6838"/> and guidelines in
    RFC 7303 <xref target="RFC7303"/>.</t>
        <t>
            <list style="empty">
                <t>
                    <list style="hanging"> 
                        <t hangText="MIME media type name:">application</t>

                        <t hangText="MIME subtype name:">EmergencyCallData.eCall.MSD</t>

                        <t hangText="Mandatory parameters:">none</t>

                        <t hangText="Optional parameters:">none</t>

                        <t hangText="Encoding scheme:">binary</t>
                        
                        <t hangText="Encoding considerations: ">
<vspace />
Uses ASN.1 PER, which is a binary encoding; when transported in SIP, binary content transfer encoding is used.</t>

                        <t hangText="Security considerations: ">
<vspace />
This media type is designed to carry vehicle and incident-related data during an emergency call.

  This data contains personal information including vehicle VIN,
  location, direction, etc.  Appropriate
  precautions need to be taken to limit unauthorized access,
  inappropriate disclosure to third parties, and eavesdropping of
  this information. Sections 9 and 10 of
  <xref target="RFC7852"/> contain more discussion.</t>

                        <t hangText="Interoperability considerations: ">None</t>

                        <t hangText="Published specification: ">
  Annex A of EN 15722 <xref target="MSD"/></t>

                        <t hangText="Applications which use this media type: ">
<vspace />
Pan-European eCall compliant systems
                        </t>

                        <t hangText="Additional information: ">None</t>

                        <t hangText="Magic Number: ">None</t>

                        <t hangText="File Extension: ">None</t>

                        <t hangText="Macintosh file type code: ">BINA</t>

                        <t hangText="Person and email address for further information: "><vspace/>
                        Randall Gellens, rg+ietf@randy.pensive.org
                        </t>

                        <t hangText="Intended usage: ">LIMITED USE</t>

                        <t hangText="Author: ">
  The MSD specification was produced by the European Committee For Standardization (CEN).  For contact information, please see &lt;http://www.cen.eu/cen/Pages/contactus.aspx&gt;.
                        </t>

                        <t hangText="Change controller: ">The European Committee For Standardization (CEN)
                        </t>

                    </list>
                </t>
            </list>
        </t>

    </section>  

    <section anchor="control.MIME" title="MIME Media Type Registration for
                      application/EmergencyCallData.Control+xml"> 
    
     <t>IANA has added application/EmergencyCallData.Control+xml as
     a MIME media type, with a reference to this document, in accordance to
     the procedures of RFC 6838 <xref target="RFC6838"/> and guidelines in RFC 
     7303 <xref target="RFC7303"/>.</t>
        <t>
            <list style="empty">
                <t>
                    <list style="hanging">
                        <t hangText="MIME media type name:">application</t>

                        <t hangText="MIME subtype name:">EmergencyCallData.Control+xml</t>

                        <t hangText="Mandatory parameters:">none</t>

                        <t hangText="Optional parameters:">charset</t>
                        <t>Indicates the character encoding of the XML content.</t>

                        <t hangText="Encoding considerations: "><vspace />Uses XML, which can employ 8-bit characters, depending on the character encoding used.  See Section 3.2 of RFC 7303 <xref target="RFC7303"/>.
                        </t>

                        <t hangText="Security considerations:">
<vspace />

            This media type carries metadata and control information and requests, such as from a Public Safety Answering Point (PSAP) to an In-Vehicle System (IVS) during an emergency call.</t>

            <t>Metadata (such as an acknowledgment that data sent by the IVS to the PSAP was successfully received) has limited privacy and security implications.  Control information (such as requests from the PSAP that the vehicle perform an action) has some privacy and security implications.  The privacy concern arises from the ability to request the vehicle to transmit a data set, which as described in <xref target="MSD.MIME" /> can contain personal information.  The security concern is the ability to request the vehicle to perform an action.  Control information needs to originate only from a PSAP or other emergency services providers and not be modified en route.  The level of integrity of the cellular network over which the emergency call is placed is a consideration: when the IVS initiates an eCall over a cellular network, in most cases it relies on the MNO to route the call to a PSAP.  (Calls placed using other means, such as Wi-Fi or over-the-top services, generally incur somewhat higher levels of risk than calls placed "natively" using cellular networks.)  A callback from a PSAP merits additional consideration, since current mechanisms are not ideal for verifying that such a call is indeed a callback from a PSAP in response to an emergency call placed by the IVS.  See the discussion in <xref target="security" /> and the PSAP Callback document <xref target="RFC7090"/>.  </t>

            <t>Sections 7 and 8 of <xref target="RFC7852"/> contain more discussion.</t>



                        <t hangText="Interoperability considerations: ">None</t>

                        <t hangText="Published specification: ">This document</t>

                        <t hangText="Applications which use this media type: ">
<vspace />  Pan-European eCall compliant systems
                        </t>

                        <t hangText="Additional information: ">None</t>

                        <t hangText=" Magic Number: ">None</t>

                        <t hangText="  File Extension: ">.xml</t>

                        <t hangText="  Macintosh file type code: ">TEXT</t>

                        <t hangText="Person and email address for further information: "><vspace/>Randall Gellens, rg+ietf@randy.pensive.org
                        </t>

                        <t hangText="Intended usage: ">LIMITED USE</t>

                        <t hangText="Author: ">The IETF ECRIT working group</t>

                        <t hangText="Change controller: ">The IETF ECRIT working group</t>

                        </list>
                    </t>
                </list>
            </t>


    </section> 

    <section title="Registration of the &quot;eCall.MSD&quot; Entry in the Emergency Call Data Types Registry">

    <t>IANA has added the "eCall.MSD" entry to the "Emergency Call Data Types" registry, with a reference to this document; the "Data About" value is "The Call".</t>
    
    </section>  
    
    <section title="Registration of the &quot;Control&quot; Entry in the Emergency Call Data Types Registry">

    <t>IANA has added the "Control" entry to the "Emergency Call Data Types" registry, with a reference to this document; the "Data About" value is "The Call".</t>
    </section> 


        <section title="Registration for urn:ietf:params:xml:ns:EmergencyCallData:control">
        <t> This section registers a new XML namespace, as per the guidelines in RFC 3688 <xref target="RFC3688"/>. </t>
        <t>
            <list style="hanging">
            <t hangText="URI:">urn:ietf:params:xml:ns:EmergencyCallData:control</t>
            <t hangText="Registrant Contact:"> IETF, ECRIT working group,
              &lt;ecrit@ietf.org&gt;, as delegated by the IESG
              &lt;iesg@ietf.org&gt;. </t>
            <t hangText="XML:">
            <figure>
            <artwork>
            <![CDATA[
   BEGIN
   <?xml version="1.0"?>
   <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.0//EN"
        "http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd">
   <html xmlns="http://www.w3.org/1999/xhtml">
   <head>
        <meta http-equiv="content-type"
              content="text/html;charset=iso-8859-1"/>
        <title>Namespace for Emergency Call Data Control Block</title>
   </head>
   <body>
        <h1>Namespace for Emergency Call Data Control Block</h1>
   <p>See RFC 8147</p>
   </body>
   </html>
   END
   ]]>
            </artwork>
            </figure>
            </t>
            </list>
        </t>
        </section> 


    <section anchor="RegCreate" title="Registry Creation">
    <t>This document creates a new registry called "Emergency Call Metadata/Control Data".  The following sub-registries are created for this registry.
    </t>

        <section anchor="eCall-action-registry" title="Emergency Call Actions Registry">
        <t>This document creates a new sub-registry called "Emergency Call Actions".  As defined in <xref target="RFC5226"/>, this registry
   operates under "Expert Review" rules.  The expert should determine that the proposed action is within the purview of a vehicle, is sufficiently distinguishable from other actions, and is clearly and fully described.  In most cases, a published and stable document is referenced for the description of the action.</t>

        <t>The content of this registry includes:

            <list style="hanging">
            <t hangText="Name:"> The identifier to be used in the "action" attribute of a control &lt;request&gt; element.</t>
            <t hangText="Description:">A description of the action.  In most cases, this will be a reference to a published and stable document.  The description MUST specify if any attributes or child elements are optional or mandatory and describe the action to be taken by the vehicle.</t>
            </list> 
        </t> 

        <t>The initial set of values is listed in <xref target="eCall-action-registry-values"/>.</t>

        <texttable anchor="eCall-action-registry-values" title="Emergency Call Actions Registry Initial Values">
    <ttcol align='center'>Name</ttcol>
    <ttcol align='center'>Description</ttcol>
    <c>send-data</c>    <c>See <xref target="request_attributes"/> of this document</c>
        </texttable>

        </section>  

                <section anchor="eCall-reason-registry" title="Emergency Call Action Failure Reasons Registry">

        <t>This document creates a new sub-registry called "Emergency Call Action Failure Reasons", which contains values for the "reason" attribute of the &lt;actionResult&gt; element.  As defined in <xref target="RFC5226"/>, this registry operates under "Expert Review" rules.  The expert should determine that the proposed reason is sufficiently distinguishable from other reasons and that the proposed description is understandable and correctly worded.</t>

        <t>The content of this registry includes:

            <list style="hanging">
            <t hangText="ID:"> A short string identifying the reason, for use in the "reason" attribute of an &lt;actionResult&gt; element.</t>
            <t hangText="Description:">A description of the reason.</t>
            </list> 
        </t>

        <t>The initial set of values is listed in <xref target="eCall-reason-registry-values"/>.</t>

        <texttable anchor="eCall-reason-registry-values" title="Emergency Call Action Failure Reasons Registry Initial Values">
        <ttcol align='left'>ID</ttcol>
        <ttcol align='left'>Description</ttcol>

        <c>damaged</c>
        <c>Required components are damaged.</c>

        <c>data-unsupported</c>
        <c>The data item referenced in a "send-data" request is not supported.</c>

        <c>security-failure</c>
        <c>The authenticity of the request or the authority of the requestor could not be verified.</c>

        <c>unable</c>
        <c>The action could not be accomplished (a generic error for use when no other code is appropriate).</c>

        <c>unsupported</c>
        <c>The "action" value is not supported.</c>

        </texttable>

        </section>  

    </section> 
    
    <section anchor="info" title="The EmergencyCallData.eCall.MSD INFO Package">
    <t>
    This document registers the EmergencyCallData.eCall.MSD INFO package in
    the "Info Packages Registry".</t>
    
    <t>Both endpoints (the IVS and the PSAP equipment) include
    EmergencyCallData.eCall.MSD in a Recv-Info header field per <xref
    target="RFC6086"/> to indicate the ability to receive INFO requests
    carrying data as described here. 
    </t>
    
    <t>
    Support for the EmergencyCallData.eCall.MSD INFO package indicates the
    ability to receive eCall related body parts as specified in this document.
    </t>
    
    <t>An INFO request message carrying body parts related to an emergency
    call as described in this document has an Info-Package header
    field set to "EmergencyCallData.eCall.MSD" per <xref target="RFC6086"/>. 
    </t>
        
    <t>The requirements of Section 10 of <xref target="RFC6086"/> are
    addressed in the following sections.</t> 
    
        <section title="Overall Description">
        
        <t>This section describes what type of information is carried in INFO
	requests associated with the INFO package and for what types of
	applications and functionalities User Agents (UAs) can use the INFO
	package.</t> 
        
        <t>INFO requests associated with the EmergencyCallData.eCall.MSD INFO
	package carry data associated with emergency calls as defined in this
	document.  The application is vehicle-initiated emergency calls
	established using SIP.  The functionality is to carry vehicle data and
	metadata/control information between vehicles and PSAPs.</t> 
        </section> 

        <section title="Applicability">
        
        <t>This section describes why the INFO package mechanism, rather than some other mechanism, has been chosen for the specific use case.</t>
        
        <t>The use of the SIP INFO method is based on an analysis of the
	requirements against the intent and effects of the INFO method versus
	other approaches (which included the SIP MESSAGE method, the SIP
	OPTIONS method, the SIP re-INVITE method, media-plane transport, and
	non-SIP protocols).  In particular, the transport of emergency call
	data blocks occurs within a SIP emergency dialog, per <xref
	target="transport"/>, and is normally carried in the initial INVITE
	request and response; the use of the SIP INFO method only occurs when
	emergency-call-related data needs to be sent mid call.  While the SIP
	MESSAGE method could be used, it is not tied to a SIP dialog as is the
	SIP INFO method and thus might not be associated with the dialog.
	Either SIP OPTIONS or re-INVITE methods could also be used, but they
	are seen as less clean than the SIP INFO method.  The SIP
	SUBSCRIBE/NOTIFY method could be coerced into service, but the
	semantics are not a good fit, e.g., the subscribe/notify mechanism
	provides one-way communication consisting of (often multiple)
	notifications from notifier to subscriber indicating that certain
	events in notifier have occurred, whereas what's needed here is
	two-way communication of data related to the emergency dialog.  Use of
	media-plane mechanisms was discounted because the number of messages
	needing to be exchanged in a dialog is normally zero or very few, and
	the size of the data is likewise very small.  The overhead caused by
	user-plane setup (e.g., to use the Message Session Relay Protocol
	(MSRP) as transport) would be disproportionately large.</t> 

    <t>Based on the analyses, the SIP INFO method was chosen to provide for mid-call data transport.</t>
    
    </section> 

    <section title="INFO Package Name">

    <t>The INFO package name is EmergencyCallData.eCall.MSD</t>
    
    </section> 

    <section title="INFO Package Parameters">
    
    <t>None</t>
    
    </section> 
    
    <section title="SIP Option-Tags">
    
    <t>None</t>
    
    </section> 

    <section title="INFO Request Body Parts">
    
    <t>The body for an EmergencyCallData.eCall.MSD INFO package is a multipart (normally multipart/mixed) body containing zero or one application/EmergencyCallData.eCall.MSD parts (containing an MSD) and zero or more application/EmergencyCallData.Control+xml (containing a metadata/control object) parts.  At least one MSD or metadata/control body part is expected; the behavior upon receiving an INFO request with neither is undefined.</t>

    <t>The body parts are sent per <xref target="RFC6086"/>, and in addition, to align with how these body parts are sent in SIP messages other than INFO requests, each associated body part is referenced by a Call-Info header field at the top level of the SIP message.  The body part has a Content-Disposition header field set to "By-Reference".</t>

    <t>An MSD or metadata/control block is always enclosed in a multipart body part (even if it would otherwise be the only body part in the SIP message).  The outermost multipart that contains only body parts associated with the INFO package has a Content-Disposition value of "Info-Package".</t>

    </section> 



    <section title="INFO Package Usage Restrictions">
    
    <t>Usage is limited to vehicle-initiated emergency calls as defined in this document.</t>
    
    </section> 

    <section title="Rate of INFO Requests">
    
    <t>The SIP INFO request is used within an established emergency call dialog for the PSAP to request the IVS to send an updated MSD and for the IVS to send a requested MSD.  Because this is normally done only on manual request of the PSAP call taker (who suspects some aspect of the vehicle state has changed), the rate of SIP INFO requests associated with the EmergencyCallData.eCall.MSD INFO package is normally quite low (most dialogs are likely to contain zero INFO requests, while others might carry an occasional request).</t>
    
    </section> 

    <section title="INFO Package Security Considerations">
    
    <t>The MIME media type registrations specified for use with this INFO
    package (Sections <xref target="MSD.MIME" format="counter"/> and <xref
    target="control.MIME" format="counter"/>) contain a discussion of the
    security and/or privacy considerations specific to that data block.  See
    Sections <xref target="security" format="counter"/> and <xref
    target="privacy" format="counter"/> for a
    discussion of the security and privacy considerations of the data carried
    in eCalls.</t>  
    
    </section> 

    <section title="Implementation Details">
    
    <t>See Sections <xref target="transport" format="counter"/> and <xref
    target="setup" format="counter"/> for protocol details.</t>
    
    </section> 


    <section title="Examples">
    
    <t>See <xref target="example"/> for protocol examples.</t>
    
    </section>
 
    </section>

</section> 

</middle>

<back>

<references title="Normative References">
        &RFC2119;
        &RFC6881;
        &RFC7303;
        &RFC6838; 
        &RFC5031;
        &RFC7852;
        &RFC3688;
        &RFC5226;
        &RFC6086;

    <reference anchor="MSD">
      <front>
       <title>Intelligent transport systems - eSafety - eCall minimum set of data (MSD)</title>
       <author><organization>European Committee for Standardization</organization> </author>
       <date year="2015" month="April"/>
      </front>
    <seriesInfo name="Standard:" value="CEN - EN 15722" />
    </reference>

</references>


<references title="Informative references">
      &RFC5012;
      &RFC5069;
      &RFC7378;
      &RFC7090;
      &RFC6443;

<reference anchor='RFC8148' target='http://www.rfc-editor.org/info/rfc8148'>
<front>
<title>Next-Generation Vehicle-Initiated Emergency Calls</title>
<author initials='R' surname='Gellens' fullname='Randall Gellens'>
    <organization />
</author>
<author initials='B' surname='Rosen' fullname='Brian Rosen'>
    <organization />
</author>
<author initials='H' surname='Tschofenig' fullname='Hannes Tschofenig'>
    <organization />
</author>
<date month='May' year='2017' />
</front>
<seriesInfo name='RFC' value='8148' />
<seriesInfo name='DOI' value='10.17487/RFC8148' />
</reference>

    <reference anchor="CEN" target="http://www.cen.eu">
        <front>
            <title>European Committee for Standardization (CEN)</title>
            <author/>
            <date/>
        </front>
    </reference>

    <reference anchor="SDO-ETSI" target="http://www.etsi.org">
        <front>
            <title>European Telecommunications Standards Institute (ETSI)</title>
            <author/>
            <date/>
        </front>
    </reference>

    <reference anchor="MSG_TR">
      <front>
        <title>Mobile Standards Group (MSG); eCall for VoIP</title>
        <author><organization>ETSI</organization> </author>
        <date year="2014" month="April"/>
      </front>
      <seriesInfo name="ETSI" value="TR 103 140 V1.1.1" />
    </reference>
    
    <reference anchor="SDO-3GPP" target="http://www.3gpp.org/">
        <front>
            <title>3rd Generation Partnership Project (3GPP)</title>
            <author/>
            <date/>
        </front>
    </reference>

    <reference anchor="TS23.167">
      <front>
        <title>IP Multimedia Subsystem (IMS) emergency sessions</title>
        <author><organization>3GPP</organization> </author>
        <date year="2011" month="March"/>
      </front>
     <seriesInfo name="3GPP TS 23.167," value="version 9.6.0, Release 9" />
    </reference>

    <reference anchor="TS24.229">
      <front>
        <title>IP multimedia call control protocol based on Session Initiation Protocol (SIP) and Session Description Protocol (SDP); Stage 3</title>
        <author><organization>3GPP</organization> </author>
        <date year="2014" month="October" />
      </front>
     <seriesInfo name="3GPP TS 24.229," value="version 12.6.0, Release 12" />
    </reference>

    <reference anchor="TS22.101">
      <front>
        <title>Universal Mobile Telecommunications System (UMTS); Service aspects; Service principles</title>
        <author><organization>3GPP</organization> </author>
        <date  year="2008" month="January" />
      </front>
     <seriesInfo name="3GPP TS 22.101," value="version 8.7.0, Release 8" />
    </reference>

    <reference anchor="EN_16072">
      <front>
        <title>Intelligent transport systems - eSafety - Pan-European eCall operating requirements</title>
        <author><organization>European Committee for Standardization</organization>  </author>
        <date year="2015" month="April"/>
      </front>
 <seriesInfo name="Standard:" value="CEN - EN 16072" />
    </reference>
    
    <reference anchor="EN_16062">
      <front>
        <title>Intelligent transport systems - eSafety - eCall High Level Application Requirements (HLAP) Using GSM/UMTS Circuit Switched Networks</title>
        <author><organization>European Committee for Standardization</organization>  </author>
        <date year="2015" month="April"/>
      </front>
  <seriesInfo name="Standard:" value="CEN - EN 16062" />
    </reference>
  </references>


<section title="Acknowledgments" numbered="no">
      <t>We would like to thank Bob Williams and Ban Al-Bakri for their feedback and suggestions; Rex Buddenberg, Lena Chaponniere, Alissa Cooper, Keith Drage, Stephen Edge, Wes George, Mirja Kuehlewind, Allison Mankin, Alexey Melnikov, Ivo Sedlacek, and James Winterbottom for their review and comments; Robert Sparks and Paul Kyzivat for their help with the SIP mechanisms; and Mark Baker and Ned Freed for their help with the media subtype registration issue.  We would like to thank Michael Montag, Arnoud van Wijk, Gunnar Hellstrom, and Ulrich Dietz for their help with the original document upon which this document is based.  Christer Holmberg deserves special mention for his many detailed reviews.</t>
</section>

<section title="Contributors" numbered="no">
      <t>Brian Rosen was a co-author of the original document upon which this document is based.</t>
</section>



  </back>
</rfc>
