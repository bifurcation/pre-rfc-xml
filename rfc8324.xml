<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY rfc0236 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0236.xml">
<!ENTITY rfc0247 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0247.xml">
<!ENTITY rfc0799 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0799.xml">
<!ENTITY rfc0810 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0810.xml">
<!ENTITY rfc0881 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0881.xml">
<!ENTITY rfc0882 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0882.xml">
<!ENTITY rfc0883 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0883.xml">
<!ENTITY rfc0952 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0952.xml">
<!ENTITY rfc0953 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0953.xml">
<!ENTITY rfc0974 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0974.xml">
<!ENTITY rfc1034 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY rfc1035 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY rfc1123 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1123.xml">
<!ENTITY rfc1464 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1464.xml">
<!ENTITY rfc1518 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1518.xml">
<!ENTITY rfc1591 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1591.xml">
<!ENTITY rfc1996 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1996.xml">
<!ENTITY rfc2671 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2671.xml">
<!ENTITY rfc2672 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2672.xml">
<!ENTITY rfc2673 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2673.xml">
<!ENTITY rfc3490 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3490.xml">
<!ENTITY rfc3491 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3491.xml">
<!ENTITY rfc3596 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3596.xml">
<!ENTITY rfc3743 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3743.xml">
<!ENTITY rfc3986 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY rfc4033 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY rfc4034 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4034.xml">
<!ENTITY rfc4343 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4343.xml">
<!ENTITY rfc5890 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5890.xml">
<!ENTITY rfc5891 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5891.xml">
<!ENTITY rfc6672 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6672.xml">
<!ENTITY rfc6761 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6761.xml">
<!ENTITY rfc6891 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY rfc6895 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6895.xml">
<!ENTITY rfc6912 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6912.xml">
<!ENTITY rfc7094 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7094.xml">
<!ENTITY rfc7706 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7706.xml">
<!ENTITY rfc7719 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7719.xml">
<!ENTITY rfc7816 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7816.xml">
<!ENTITY rfc7858 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY rfc7872 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7872.xml">
<!ENTITY rfc8244 PUBLIC '' "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8244.xml">
<!ENTITY nbsp "&#160;">

]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc comments="no" ?>
<?rfc inline="no" ?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc  number="8324" ipr="trust200902" category="info" submissionType="independent">


  <front>

    <title abbrev="DNS Revisions"> DNS Privacy, Authorization, Special Uses, Encoding, Characters, Matching, and Root Structure: Time for Another Look? </title>

    <author fullname="John C. Klensin" initials="J.C." surname="Klensin">
      <organization/>
      <address>
        <postal>
          <street>1770 Massachusetts Ave, Ste 322</street>
          <city>Cambridge</city> <region>MA</region>
          <code>02140</code>
          <country>United States of America</country>
        </postal>
        <phone>+1 617 245 1457</phone>
        <email>john-ietf@jck.com</email>
      </address>
    </author>

    <date month="February" year="2018" />

    <keyword>domain name</keyword>
	<keyword>functions</keyword>
	<keyword>extensions</keyword>

<!-- JcK - RFC Editor: only 11 lines, but feels long.  Suggestions as to how
	     to shorten welcome. -->

<!--[rfced_response] Acknowledged. We think the Abstract is okay as is; no changes made.  -->

    <abstract>
      <t>The basic design of the Domain Name System was completed
         almost 30 years ago.  The last half of that period has been
         characterized by significant changes in requirements and
         expectations, some of which either require changes to how the DNS
         is used or can be accommodated only poorly or not at
         all.  This document asks the question of whether it is time
         to either redesign and replace the DNS to match contemporary
         requirements and expectations (rather than continuing to try
         to design and implement incremental patches that are not
         fully satisfactory) or draw some clear lines about
         functionality that is not really needed or that should be
         performed in some other way.</t>
    </abstract>

  </front>

  <middle>
     <section title="Introduction">
      <t>This document explores contemporary expectations of the
         Internet's domain system (DNS) and compares them to the
         assumptions and properties of the DNS design, including both
         those documented in the RFC Series, an important early paper by the
         principal author of the
         original RFCs <xref target="Mockapetris-1988"/>, and a
         certain amount of oral tradition.  It is primarily
         intended to ask the question of whether the differences are
         causing enough stresses on the system, stresses that cannot
         be resolved satisfactorily by further patching, that the
         Internet community should be
         considering designing a new system, one that is better adapted to
         current needs and expectations, and developing a deployment
         and transition strategy for it.  For those (perhaps the
         majority of us) for whom actually replacing the DNS is too
         radical to be realistic, the document may be useful
         in two other ways.  It may provide a foundation for
         discussing what functions the DNS should not be expected to
         support and how those functions can be supported in other
         ways, perhaps via an intermediate system that then calls on
         the DNS or by using some other type of database technology
         for some set of functions while leaving the basic DNS
         functions intact.  Or it may provide a basis for "better just get
         used to that and the way it works" discussions to replace
         fantasies about what the DNS might do in some alternate
         reality. </t>

      <t>There is a key design or philosophical question associated with the
         analysis in this document that the document does not
         address.  It is whether changes to perceived requirements to
         DNS functionality as described here are, in most respects, evolutionary
         or whether many of them are instances of trying to utilize
         the DNS for new requirements because it exists and is already
         deployed independent of whether the DNS is really appropriate
         or not.  The latter might be an instance of a problem often
         described in the IETF as "when all you have is a hammer,
         everything looks like a nail".</t>

      <t>Other recent work, including a short article
         by Vint Cerf  <xref target="Cerf2017"/>, has discussed an
         overlapping set of considerations from a different
         perspective, reinforcing the view that it may be time to ask
         fundamental questions about the evolution and future of the
         DNS.</t>

      <t> While this document does not assume deep technical or
         operational knowledge of the DNS, it does assume some
         knowledge and at least general familiarity with the concepts
         of <xref target="RFC1034">RFC 1034</xref> and
         <xref target="RFC1035">RFC 1035</xref> and the terminology
         discussed in <xref target="RFC7719">RFC 7719</xref> and
         elsewhere.  Although some of the comments it contains might
         be taken as hints or examples of different ways to think
         about the design issues, it makes no attempt to explore, much less
         offer a tutorial on, alternate naming systems or database
         technologies.</t>

      <t> It is perhaps worth noting that, while the perspective is
         different and more than a dozen years have passed, many of
         the issues discussed in this document were analyzed and
         described (most of them with more extensive explanations) in
         a 2005 US National Research
         Council report <xref target="NRC-Signposts"/>.</t>

      <t> Readers should note that several references are to obsolete
         documents.  That was done because they are intended to show
         the documents and dates that introduced particular features
         or concepts.  When current versions are intended, they are
         referenced.

<!-- [rfced] Regarding this comment about obsolete documents:

     JcK - RFC Editor: while the reference to the earlier                    
     versions are correct, would it be useful to include                  
     pointers to current versions in reference annotations?

We do not recommend adding pointers to RFCs as annotations.
The text in Section 1 ("Readers should note that several 
references...") is sufficient notice to the reader. However,
there is one question below regarding the mention of RFC 2671.
-->
<!-- [JcK 20180130]: Ack, see email -->

<!--[rfced_response] We will address your comments about annotations with Heather. -->

      </t>
    </section>

     <section title="Background and Hypothesis" anchor="background">
        <t>The Domain Name System (DNS) <xref target="RFC1034"/> was
<!-- [JcK 20180130]: To be strictly correct, "Domain Name System" is a title-->

<!--[rfced_response] Update acknowledged. -->

           designed starting in the
           early 1980s <xref target="RFC0799" />
           <xref target="RFC0881"/> <xref target="RFC0882"/>
           <xref target="RFC0883"/>
           with the main goal of replacing the flat,
           centrally administered, host table
           system <xref target="RFC0810"/> <xref target="RFC0952"/>
           <xref target="RFC0953"/> with a hierarchical,
           administratively distributed, system.  


           The DNS design
           included some features that, after initial implementation
           and deployment, were judged to be unworkable
           and either replaced (e.g., the mail destination (MD) and
           mail forwarder (MF) approach <xref target="RFC0882"/> that
           were replaced by the MX approach <xref target="RFC0974"/>),
           abandoned (e.g., the mechanism for using email local parts
           as labels described in RFC 1034, Section 3.3), or deprecated
           (e.g., the WKS RR TYPE <xref target="RFC1123"/>). Newer
           ideas and requirements have identified a number of other
           features, some of which were
           less developed than others.   Of course the original
           designers could not anticipate everything that has come
           to be expected of the DNS in the last 30 years.</t>

        <t> In recent years, demand for new and extended services and
           uses of the DNS have, in turn, led to proposals for
           DNS extensions or changes of various sorts. 

<!--[rfced] The text cites RFC 2672 for a model that was "adopted", 
which could be read as not obsolete. Because RFC 2671 was obsoleted 
by RFC 6891 (STD 75), we suggest citing the latter in addition to 
RFC 2671. Please let us know if this change is acceptable.

Original:
    Some have been adopted, including a model for
    negotiating extended functionality [RFC2671], others were found to be
    impracticable, and still others continue to be under consideration.

Perhaps:
   Some have been adopted, including a model for
   negotiating extended functionality [RFC2671] (which was obsoleted 
   by [RFC6891]), others were found to be impracticable, and still 
   others continue to be under consideration.
-->
<!-- [JcK 20180130]: Sorry, but "adopted" does not imply "not obsolete" in any
  dictionary I can find.  The point was in part show how
  early this type of tweaking had occurred.  However, if you makes you feel
  better, try the revised version below --> 

<!--[rfced_response] The rewrite is agreeable; thank you. -->

<!-- [JcK 20180219]:  Unfortunately, I had to read the revised version
   four times and count parentheses to understand what was going on.  no longer
   parses in any way that I can understand.  I have conflicting
   feelings about what to do about it.  If we move the whole
   parenthesized citation to after the end of the sentence, the
   "Section 4.2" part is no longer associated with the anchor to
   which it refers.  Suggestions welcome.  The best thing I can
   up with would be to say
		   A framework was adopted for negotiating extended DNS
           functionality, called EDNS(0), in 1999 <xref target="RFC2671"/>.
		   The DNS was extended to support to support IPv6 <xref target="RFC3596"/>,
		   and then the EDNS(0) specification was replaced <xref target="RFC2671"/>,
		   with slight variations from the original.  
		   Other extension proposals were found to be
           impracticable, and still others continue to be under
           consideration.
	I'm not very happy with that, but it is better than what appears below.
	Other suggestions welcome.
		   -->		   

           Some have been
           adopted, including a model for negotiating extended
           functionality <xref target="RFC2671"/> (commonly known as EDNS(0)) and to support IPv6 <xref target="RFC3596"/>, others were found to be
           impracticable, and still others continue to be under
           consideration.
		   Some examples of the latter two categories
		   are discussed below.  A few features of the original DNS
           specification, such as the CLASS property and label types,
           have also been suggested to be so badly specified that they
           should be deprecated
		   <xref target="Sullivan-Class"/>.</t>
<!-- [JcK 20180130]: This is another example of the reference problem.
   The above really should contain a reference to the section of
   RFC 6891 that discusses label types, but there does not appear
   to be any way to do that.  Suggestions welcome.  -->

<!--[rfced_response] To reference a specific section within an RFC,
normal practice would be "Section 4.2 of RFC 6891" or "(Section
4.2 of [RFC6891])".  However, we understand that you do not like
the latter, and the former doesn't work here because this is the first
time RFC 6891 is mentioned.  If you want to point to Section 4.2,
perhaps the following would work instead.

     Suggested:
     Some have been adopted, including a model for
     negotiating extended functionality (Section 4.2 of EDNS(0) 
     extensions [RFC6891]; the original version,
     with slight variations, appeared in 1999 [RFC2671]).

Please let us know if you would like to make this update or if you
prefer to leave the text as is.  Note that we will discuss future
handling of section mentions with Heather.
-->
<!--[rfced_response_2] The suggested change has been implemented. -->


        <t> Unlike earlier changes such as the Internationalized
		   Domain Names for Applications (IDNA) mechanisms for better
<!-- [JcK 20180130]: Ok, but "IDNA" is widely enough used, inside and outside
	the IETF that it belongs on your approved abbreviations
	list (the expansion is almost never used and is likely to
	 confuse readers) -->

<!--[rfced_response] We will discuss adding 'IDNA' to the Abbreviations List. -->

<!-- [JcK 20180219] In thinking more about our conversation abut "MTU', this is the same
	issue at the other end of the stack.   Just as it is likely that applications folks
    may not know what an MTU is, it is possible that someone whose sold involvement is with
	transport or routing might not know what as IDNA is.  Interesting problem. -->

           incorporating non-ASCII labels without modifying the DNS
           structure itself <xref target="RFC3490"/>
           <xref target="RFC5890"/>, some recent proposals require or
           strongly suggest changes to APIs, formats, or interfaces by
           programs that need to retrieve information from the DNS or
           interpret that information.  Differences between the DNS
           architecture and the requirements that imply those
           proposals suggest that it may be time to stop patching the
           DNS or trying to extend it in small increments.  Instead,
		   we should be
<!-- [JcK 20180219] "current or proposed" added to the next sentence to improve clarity -->		   
           considering moving some current or proposed functionality elsewhere or
           developing a new system that better meets today's
           needs and a transition strategy to it.</t>

        <t>The next section of this document discusses a number of
           issues with the current DNS design that could
           appropriately be addressed by a different and newer design
           model.  In at least some cases, changing the model and
           protocols could bring significant benefits to the Internet
           and/or its administration.</t>

        <t>This document is not a proposal for a new protocol.  It is
           intended to stimulate thought about how far we want to try
           to push the existing DNS, to examine whether expectations
           of it are
           already exceeding its plausible capabilities, and to start
           discussion of a redesign or alternatives to one if the time
           for that decision has come. </t>
    </section>

    <section title="Warts and Tensions with the Current DNS"
            anchor="ExampleList">
       <t>As suggested above, there are many signs that the DNS is
          incapable of meeting contemporary expectations of how it
          should work and functionality it should support.   Some of
          those expectations are unrealistic under any imaginable
          circumstances; others are impossible (or merely
          problematic) in the current DNS structure but could be
          accommodated in a redesign.   These are examples, rather
          than a comprehensive list, and do not appear in any
          particular order.</t>

       <section title="Multi-type Queries">
           <t>The DNS does not gracefully support multi-type queries.  The
             current case where this problem rears its head involves attempts
             at solutions that return both TYPE A (IPv4) and type AAA (IPv6) addresses
             collectively.  The problem was originally seen with
             "QTYPE=MAILA" <xref target="RFC0882"/> for the original MA and
             MD RRTYPEs, an experience that strongly suggests that
             some very careful thinking about cache effects (and
             possibly additional DNS changes) would be needed.
             Other solutions might seem equally or more plausible.
             What they, including "two types of addresses", probably have
             in common is that they illustrate stresses on the system
             and that changing the DNS to deal with those stresses
             is not straightforward or likely to be problem-free.
             </t>
       </section>

       <section title="Matching Part I: Case Sensitivity in Labels and Other Anomalies"
               anchor="Matching-Case">
          <t> The DNS specifications assume that labels are octet
             strings and octets with the high bit zero have seven-bit
             ASCII codes in the remaining bits.  They require that,
             when a domain name used in a query is matched to one
             stored in the database, those
             ASCII characters be interpreted in a case-independent way,
             i.e., upper- and lower-case letters are treated as
             equivalent (digits and symbols are not affected)
             <xref target="RFC4343"/>.  For non-ASCII octets, i.e.,
             octets in labels with the first
             bit turned on, there are no assumptions about the
             character coding used, much less any rules about
             character case equivalence -- strings must be compared by
             matching bits in sequence.
             Even though the current model for handling
             non-ASCII (i.e., "internationalized") domain name labels (IDNs)
             <xref target="RFC5890"/> (see
             <xref target="IDN-Case"/> below) encodes information so
             the DNS is  not directly affected, the notion that some
             characters in labels
             are handled in a case-insensitive way and that others are
             case sensitive (or that upper case must be prohibited
             entirely as IDNA does)
             has caused a good deal of confusion and resentment.
             Those concerns and complaints about inconsistent behavior and
             mishandling (or suboptimal handling) of case
             relationships for some languages
             have not been mitigated by repeated explanations
             that the relationships between "decorated" lower-case
             characters and their upper-case equivalents are often
             sensitive to language and locality and therefore not
             deterministic with information available to DNS
             servers.</t>
       </section>

       <section title='Matching Part II: Non-ASCII ("Internationalized") Domain Name Labels'
               anchor="IDN-Case">
          <t>Quite independent of the case-sensitivity problem, one of
             the fundamental properties of
             Unicode <xref target="Unicode"/> is that some abstract
             characters can be represented in multiple ways, such as
             by a single, precomposed, code point or by a base code
             point followed by one or more code points that specify combining
             characters. 

             While Unicode Normalization can be used to
             eliminate many (but not all) of those distinctions for
             comparison (matching) purposes, it is best applied during
             matching rather than by changing one string into
             another.  The first version of IDNA ("IDNA2003") made the choice to
             change strings during processing for either storage or
             retrieval <xref target="RFC3490"/> <xref target="RFC3491"/>;
             the second ("IDNA2008") required that all strings be
             normalized and that upper-case characters are not allowed
             at all <xref target="RFC5891"/>.  Neither is optimal,
             if only because, independent of where they are changed if
             they are changed at all, transforming the strings
             themselves implies that
             the input string in an application may not be the same
             as the string used in processing and perhaps later
             display.</t>
          <t> It would almost certainly be preferable, and more consistent
             with Unicode recommendations, to use normalization (and
             perhaps other techniques if they are appropriate) at
             matching time rather than
             altering the strings at all, even if there were still
             only a single matching algorithm, i.e., normalization
             were added to the existing ASCII-only case folding.
             However, even Unicode's discussion of
             normalization <xref target="Unicode-UAX15"/> indicates
             that there are special, language-dependent, cases (the
             most commonly cited example is the dotless "i" (U+0131)).
             Not only does the DNS lack any information about languages
             that could be used in a mapping algorithm, but, as long
             as there is a requirement that there be only one mapping
             algorithm for the entire system, that information could
             not be used even if it were available.  One could imagine
             a successor system that would use information stored at
             nodes in the hierarchy to specify different matching
             rules for subsidiary nodes (or equivalent arrangements
             for non-hierarchical systems).  It is not clear whether that
             would be a good idea, but it certainly is not possible
             with the DNS as we know it.</t>
       </section>

       <section title="Matching Part III: Label Synonyms, Equivalent Names, and Variants"
               anchor="Variant-Case">
          <t> As the initial phases of work on IDNs started to
             conclude, it became obvious that the nature and evolution
             of human language and writing systems required treating
             some names as "the same as" others.  The first important
             example of this involved the relatively recent effort to
             simplify the Chinese writing system, thereby creating a
             distinction between "Simplified" and "Traditional"
             Chinese even though the meaning of the characters
             remained the same in almost all cases (in so-called
             ideographic character sets, characters have meaning
             rather than exclusively representing sounds).  A joint effort
             among the relevant Country Code Top-Level Domain (ccTLD) registries
             and some other interested parties produced a set of
             recommendations for dealing with the issues with that
             script <xref target="RFC3743"/> and introduced the
             concept of "variant" characters and domain names.</t>

          <t>However, when names are seen as having meanings, rather
             than merely being mnemonics,  especially when they
             represent brands or the equivalent, or when spelling for
             a particular written language is not completely
             standardized, demands to treat
             different strings as exact equivalents are obvious and
             inevitable.  As a trivial
             English-language example, it is widely understood that
             "colour" and "color" represent the same word, so does
             that imply that, if they are used as DNS labels in domain
             names all of whose other labels are identical,
             the two domain names should be treated as identical?  Examples for
             other languages or writing systems, especially ones in
             which some or all markings that distinguish characters or
             words by sound or tone or that change the pronunciation
             of words are
             optional, are often more numerous and more problematic
             than national spelling differences in English,
             but they are harder to explain to those unfamiliar with
             those other languages or writing systems (and hard to
             illustrate in ASCII-only Internet-Drafts and RFCs).
             Although approximations are possible, the DNS cannot handle that
             requirement: not only do its aliasing mechanisms (CNAME,
             DNAME, and various proposals for newer and different
             types of aliasing <xref target="DNS-Aliases"/>
             <xref target="DNS-BNAME"/>) not provide a strong enough
             binding, but the ability to use those aliases from a
             subtree controlled by one administrative entity to that
             of another one implies that there is little or no
             possibility of the owner (in either the DNS sense or the
             registrar-registrant one) of a particular name to control
             the synonyms for it.  Some of that issue can be dealt with
             at the application level, e.g., by redirects in web
             protocols, but taking that approach, which is the
             essential characteristic of "if both names belong to the
             same owner, everything is OK" approaches, results in
             names being handled in inconsistent ways in different
             protocols.</t>

          <t> A different way of looking at part of this issue (and,
             to some degree, of the one
             discussed above in <xref target="IDN-Case"/>) is that
             these perceived equivalences and desired transformations
             are context-dependent, but the DNS resolution process is
             not <xref target="RFC6912"/>.</t>

          <t> Similar problems arise as people notice that some
             characters are easily mistaken for others and
             that might be an opportunity for user confusion and
             attacks.  Commonly cited examples include the Latin and
             Cyrillic script "a" characters, which are
             identical <xref target="CACM-Homograph"/>, the characters
             in many scripts that look like open circles or vertical
             or horizontal lines, and even the Latin script letter
             "l" and the European digit "1", but examples abound in
             other scripts and combinations of scripts as well.
             The most common
             proposed solution within the DNS context has been to
             treat these cases, as well as those involving
             orthographic variations, as "variants" (but variants
             different from the system for Chinese characters
             mentioned above) and either ban all
             but one (or a few) of the possible labels from the DNS
             (possibly on a first come, first served basis) or
             ensure that any collection of such strings that are
             delegated as assigned to the same ownership (see above).
             Neither solution is completely satisfactory: if all but
             one string is excluded, users who guess at a different
             form, perhaps in trying to transcribe characters from
             written or printed form, don't find what they are looking
             for and, as pointed out above, "same ownership" is
             sufficient only with carefully designed and administered
             applications protocol support, and sometimes not then.</t>

          <t>Some of these issues are discussed at more length in an
             ICANN report <xref target="ICANN-VIP"/>.</t>
       </section>

       <section title="Query Privacy">
          <t>There has been growing concern in recent years that DNS
             queries occur in cleartext on the public Internet and
             that, if those queries can be intercepted, they can
             expose a good deal of information about interests and
             contacts that could compromise individual privacy.
             While a number of proposals, including query name
             minimization <xref target="RFC7816"/> and running DNS
             over an encrypted tunnel <xref target="RFC7858"/>,
             have been made to mitigate that problem, they all appear
             to share
             the common properties of security patches rather than
             designed-in security or privacy mechanisms.  While
             experience may prove otherwise once (and if) they are
             widely deployed, it does not appear that any of them are as
             satisfactory as a system with query privacy designed in
             might be.  More general tutorials on this issue have
             appeared recently <xref target="Huston2017a"/>.</t>
       </section>

       <section title="Alternate Namespaces for Public Use in the DNS Framework: The CLASS Problem"
               anchor="Example-Class">

<!--[rfced] FYI, we have slightly altered the quoted text here
to exactly match the text in RFC 1034, Section 3.6. Please let 
us know if you prefer otherwise.

Original:
   The DNS standards include specification of a CLASS value to "identify
   a protocol family or instance of a protocol" [RFC 1034, Section 3.6
   and elsewhere].

Current:
   The DNS standards include specification of a CLASS value, which
   "identifies a protocol family or instance of a protocol" (RFC 1034,
   Section 3.6, and elsewhere).
[JcK 20180130]: Ack.  Ok.		  

Also, regarding this comment:
   JcK - RFC Editor: I have no clue as to how to make            
   the above come out in a reasonable way from XML2RFC

We have simply used parentheses; however, please let us know if you 
prefer "(as per [RFC1034], Section 3.6, and elsewhere)" or otherwise.
-->
<!-- [JcK 20180130]: I am _never_ going to consider use of a citation anchor as
   the object of a sentence or preposition appropriate.  I've left it
   alone in documents of which I'm junior author, but I believe it is
   a sign of illiteracy and do not believe suggesting it reflects well
   on the RFC Editor.  The difficulty is that this really is a
   citation and the parenthetical form does not reflect that (and
   would not work at all had citations of 1034 not appeared earlier in
   the document.  As I have said in other contexts, this is exactly
   the case for going back to numbered references and the use of
   _ibid_ and _op. cit._ as needed. -->

<!--[rfced_response] Understood. We will avoid using citation anchors
as objects in this document, and we will share your comments with
Heather. -->
		  
          <t> The DNS standards include specification of a CLASS value,
             which "identifies a protocol family or instance of a protocol"
             (RFC 1034, Section 3.6, and elsewhere).
             While CLASS was used effectively in
             the early days of the DNS to manage different protocol
             families within the same administrative environment,
             recent attempts to use it to either partition the DNS
             namespace in other ways such as for non&nbhy;ASCII names
             (partially to address the issues in Sections
             <xref target="Matching-Case" format="counter"/> and
             <xref target="IDN-Case" format="counter"/>) or use DNS mechanisms for
             entirely different namespaces have exposed fundamental
             problems with the
             mechanism <xref target="Sullivan-Class"/>. Perhaps the
             most fundamental of those problems is disagreement about
             whether multiple CLASSes were intended to exist within a
             given zone (with records within RRSETs) or whether
             different CLASSes implied different zones.   Different
             implementations make different
             assumptions <xref target="Faltstrom-2004"/>
             <xref target="Vixie-20170704"/>.  These problems have led
             to recommendations that it be dropped
             entirely <xref target="Sullivan-Class"/>, but discussions
             on the IETF list and in WGs in mid-2017 made it clear
             that there is no clear consensus on that matter.</t>
       </section>

       <section title="Loose Synchronization" anchor="Example-Synch">
          <t>The DNS model of master and slave servers, with the
             latter initiating updates based on expiration interval
             values, and local caches with updates based on TTL
             values, depends heavily on an approach that has come to
             be called "loose synchronization", i.e., that there can
             be no expectation that all of the servers that might
             reasonably answer a query will have exactly the same
             data unless those data have been unchanged for a rather
             long period. Put differently, if some or all of the
             records associated with a particular node in the DNS
             (informally, a fully qualified domain name (FQDN))
             change, one cannot expect those changes to be propagated
             immediately.</t>

          <t> That model has worked rather well since the DNS was
             first deployed, protecting the system from requirements
             for mechanisms
             that are typical where a simultaneous update of multiple
             systems is needed. Such mechanisms include elaborate
             locking, complex update procedures and handshaking, or
             journaling. As has often been pointed out
             with the Internet, implementation and operational
             complexity are often the enemy of stability, security,
             and robustness.  Loose synchronization has helped keep
             the DNS as simple and robust as possible.</t>

          <t> A number of recent ideas about using the DNS to store
             data for which important changes occur very rapidly are,
             however, largely incompatible with loose
             synchronization.   Efforts to use very short (or zero)
             refresh times (in SOA records for slave updates from
             masters) and TTLs (for caches) to simulate
             nearly simultaneous updating may work up
             to a point but appear to impose very heavy loads on
             servers and distribution mechanisms that were not
             designed to accommodate that style of working.  Similar
             observations can be made about attempts to use the NOTIFY
             extension <xref target="RFC1996"/> or dynamic,
             "server-push", updating rather than the traditional DNS
             mechanisms.  While the NOTIFY and push mechanisms
             normally provide refresh times and update mechanisms
             faster than those specified in RFCs 1034 and 1035, they
             imply that a "master" server must know the identities of
             (and have good connectivity to all of) its slaves.  That
             defeats at least some of the advantages associated
             with stealth slaves, particularly those associated with
             reduction of query traffic across the Internet.
             Those mechanisms do nothing for cache updates: unless
             servers keep track of the source of every query for
             names associated
             with a specific zone and then somehow notify the query source
             systems, the only alternative to having information that
             might be obsolete stored in caches is to use very short
             or zero TTLs so
             the cached data time out almost immediately after being
             stored (or are not stored at all), requiring a new query to an
             authoritative server each time a resolver attempts to
             look up a name.</t>
       </section>

       <section title="Private Namespaces and Special Names">
          <t> Almost since the DNS was first deployed, there have
             been situations in which it is desirable to use DNS-like
             names, and often DNS resolution mechanisms or
             modifications of them, with
             namespaces for which globally available and consistent
             resolution using the public DNS is either unfeasible or
             undesirable (and for which the use of CLASS is not an
             appropriate mechanism).  The need to isolate names and
             addresses on LANs from the public Internet, typically
             via "split horizon" approaches, is one example of this requirement
             although often not recognized as such.  Another example
             that has generated a good deal of controversy involves
             "special names" -- labels or pseudo-labels, often in TLD
             positions, that signal that the full name should not be
             subject to normal DNS resolution or
             other processing <xref target="RFC6761"/>
             <xref target="RFC8244"/>. </t>

          <t> Independent of troublesome policy questions about who
             should allocate such names and the procedures to be used,
             they almost inherently require either a syntax convention
             to identify them (there actually was such a convention,
             but it was abandoned many years ago and there is no
             plausible way to reinstitute it) or tables of such names
             that are known to, and kept updated on, every resolver on
             the Internet, at least if spurious queries to the root
             servers are to be avoided.</t>

          <t>If the DNS were to be redesigned and replaced, we could
             recognize this requirement as part of the design and
             handle it much better than it is possible to handle it
             today. </t>
       </section>

       <section title="Alternate Query or Response Encodings">
          <t>The DNS specifies formats for queries and data responses,
             based on the state of the art and best practices at the
             time it was designed.  Recent work has suggested that
             there would be significant advantages to supporting at
             least a description of the DNS messages in one or more
             alternate formats,
             such as JSON <xref target="Hoffman-DNS-JSON"/>
             <xref target="Hoffman-SimpleDNS-JSON"/>.  While
             that work has been carefully done to avoid requiring
             changes to the DNS, much of the argument for having such
             a JSON-based description format could easily be turned
             into an argument that, if the DNS were being revised,
             that format might be preferable as a more direct
             alternative to having DNS queries and responses in the
             original form. </t>
       </section>

       <section title="Distribution and Management of Root Servers">
          <t> The DNS model requires a collection of root servers that
             hold, at minimum, information about top-level domains.
             Over the years, that requirement has evolved from a
             technically fairly minor function, normally carried out
             as a service to the broader Internet community and its
             users and systems, to a subject that is intensely
             controversial with regard to control of those servers,
             including how they should be distributed and where they
             should be located.  While a number of mechanisms, most
			 recently including making the information more local
			 <xref target="RFC7706"/>, have
             been proposed and one (anycast <xref target="RFC7094"/>)
             is in very active use to mitigate some of the real and
             perceived problems, it seems obvious that a DNS
             successor, designed for today's global Internet and
             perceived requirements, could handle these problems in a
             technically more appropriate and less controversial way.
			 Some additional discussion of the issues involved appears
			 in a recent paper <xref target="Huston2017b"/>.</t>
	   </section>
	   
       <section title="Identifiers versus Brands and Other Convenience Names">
          <t>  A key design element of the original network object
             naming systems for the ARPANET, largely inherited by the
             DNS, was that the names, while expected to be mnemonic,
             were identifiers and their being
             highly distinguishable and not prone to ambiguity was
             important.  That led to restrictive rules about what
             could appear in a name.  Those restrictions originated
             with the host table and even
             earlier <xref target="RFC0236"/> <xref target="RFC0247"/>
             and came to the DNS (largely via SMTP)
             as the "preferred syntax" (RFC 1034, Section 3.5)
             or what we now often call the letter-digit-hyphen (LDH)
             rule.  Similar rules to make identifiers easier to use,
             less prone to ambiguity, or less likely to interfere with
             syntax occur frequently in more formal languages.  For
             example, almost every programming language has
             restrictions on what can appear in an identifier, and
             Unicode provides general recommendations about identifier
             composition <xref target="Unicode-USA31"/>. Both are quite
             restrictive as compared to the number of characters and
             total number of strings that can be written using that
             character coding system.</t>

<!-- [rfced] May "COM TLD" be changed to ".com TLD" in 
this text? The latter is how it often appears on www.icann.org.

Current:
  ... 3Com wanted to use its corporate anme as a label within 
  the COM TLD, ...

Perhaps:
  ... 3Com wanted to use its corporate anme as a label within 
  the .com TLD, ...
-->
<!-- [JcK 20180130]:   Do not change this.  ICANN does not set standards, IETF
   does, and 1034 (and 1591] both contain text suggesting that the
   name of a TLD is written either "FOO" or "FOO.".   This actually
   read "COM. TLD" in earlier versions of the I-D, but I was persuaded
   to remove the period because it made the sentence hard to read,
   especially after XML2RFC added two spaces after the period.  For
   more discussion of this subject, see
   draft-klensin-dotless-terminology-harmful-00.  That document went
   nowhere (at least IMO) not because it was wrong but because it was
   very late to try to change current usage and no one wanted to
   engage with the subject. -->

<!--[rfced_response] Acknowledged; no changes made. -->

          <t>That model, which originally prohibited labels starting
             with digits in order to avoid any possible confusion with
             IP addresses, began to break down in 1987 or 1988 when a
             company named 3Com wanted to use its corporate name as a
             label within the COM TLD, and the rule was
             relaxed <xref target="RFC1123"/>.</t>

          <t> In the last decade or two, the perspective that company
             names should be supported if possible has expanded and
             done so largely without its limits, if any, being explicitly
             understood or acknowledged.   In the current form, the
             DNS is really (and primarily) a system for expressing thoughts and
             concepts.  Those include free expression of ideas in
             as close to natural language as possible as well as
             representation of product names and brands.  That view
             requires letter-like characters that might
             not be reasonable in identifiers along with a variety of
             symbols and punctuation.  It may also require indicators of
             preferred type styles to provide information in a form
             that exactly matches personal or legal preferences.
             At least if carried to an extreme, that perspective
             would argue for standardizing word and sentence
             separators,
             removing the limit of 63 octets per label and probably the
             limit of 255 octets on the total length of a domain
             name, and perhaps even eliminating the hierarchy or
             allowing separators for labels in presentation
             form (now fixed at "." for the DNS) to be different
             according to context.  It suggests that, at least, the
             original design
             was defective in not prioritizing those uses over the
             more restrictive approach associated with prioritizing
             unique and unambiguous identifiers.</t>

          <t> So we have two or, depending on how one counts, three
             very different use cases.  The historical one is support
             for unique identifiers.  The other is expression of
             ideas and, if one considers them separate, presentation of
             brand and product names.  Because they inherently
             involve different constraints, priorities, and success
             criteria, these perspectives are, at best, only loosely
             compatible.</t>

          <t>We cannot simultaneously optimize both the identifier
             perspective and either or both of the others in the same
             system.
             At best, there are some complex trade-offs involved.
             Even then, it is not clear that the same DNS (or other
             system) can accommodate all of them.  Until we come to
             terms with
             that, the differences manifest themselves with friction
             among communities, most often with tension between "we
             want to do (or use or sell) these types of labels" and
             "not good for the operational Internet or the DNS".</t>
       </section>

       <section title="A Single Hierarchy with a Centrally Controlled Root">
          <t> A good many Internet policy discussions in the last two
             decades have revolved around such questions of how many
             top-level domains there should be, what they should
             be, who should control
             them and how, how (or if) their individual operations and
             policy decisions should be accountable to others, and
             what processes should be used (and by what entities or
             organizational structures) to make those decisions.
             Several people have pointed out that, if we were
             designing a next-generation DNS using today's
             technology, it should be possible to remove the technical
             requirement for a central authority over the root (some
             people have suggested that blockchain approaches would be
             helpful for this purpose; others believe they just would
             not scale adequately, at least at acceptable cost, but
             that other options are possible).
             Whether elimination of a single, centrally controlled,
             root would be desirable or not is fairly obviously a
             question of perspective and priorities. </t>
       </section>


    <section title="Newer Application Protocols, New Requirements, and DNS Evolution"
            anchor="Example-NewRR">
       <t>New work done in other areas has led to demands for new
          DNS features, many of them involving data values that
          require recursively referencing the DNS.  Early record types that
          did that were accompanied by restrictions that reduced
          the risk of looping references or other difficulties.
          For example, while the MX RRTYPE has a fully qualified
          domain name as its data, SMTP imposes "primary name"
          restrictions that prevent the name used from being, e.g.,
          a CNAME.  While loops with CNAMEs are possible, Section
		  3.6 of RFC 1034 includes a discussion about ways to
          avoid problems and how they should be handled.  Some
          newer protocols and conventions can cause more stress.
          There are separate issues with additions and with how the
          DNS has been extended to try to deal with them.</t>

          <section title="The Extensions">
             <t> Some examples of DNS extensions for new protocol
                demands that illustrate, or have led to, increased
                stress include:
             <list style="hanging">
                <t hangText="NAPTR:"> Requires far more complex data
                   in the DNS for ENUM (e.g., Voice over IP (VoIP), specifically
                   SIP) support, including URI
                   information and hence recursive or repeated
                   lookups, than any of the  RRTYPEs originally
                   supported.  The RRSET associated with these
                   records can become quite large because the
                   separator between the various records is part
                   of the RDATA, and not the {owner, class, type}
                   triple (a problem slightly related to the
                   problem with overloading of TXT RRTYPE discussed
                   in <xref target="TXT-Overloading"/>).

<!--[rfced] Are there any changes needed based on the following
comment, or can this be considered resolved?
(The preceding sentence is included for context.)

Original:
   The RRSET associated with these records can
   become quite large because the separator between the various
   records is part of the RDATA, and not the {owner, class, type}
   triple (a problem slightly related to the problem with overloading
   of TXT RTYPE discussed in Section 3.13.2).
   [[CREF1: I'm told this issue was brought up by IAB in RFCXXXX ???,
   but have not yet tracked down the reference -JcK]]
-->
<!-- [JcK 20180130]: CREF dropped; see email -->

<!--[rfced_response] Acknowledged; thank you for the update. -->

                   This problem, and similar ones for some of the
                   cases below. may suggest that any future design
                   is in need of a different TYPE model such as
                   systematic arrangements for subtypes or some
                   explicit hierarchy in the TYPEs.</t>

                <t hangText="URI:"> Has a URI as its data, typically
                   also requiring recursive or repeated
                   lookups.</t>

                <t hangText="Service location (SRV) and credential information (including Sender Policy Framework (SPF) and DomainKeys Identified Mail (DKIM)):">
                   Require structured data and, especially for the
                   latter two, significantly more data than most
                   original RRTYPEs.</t>

                <t hangText="URI/URL:"> The early design decision for
                   the World Wide Web that its mechanism for
                   identifying digital web content (now known as
                   Uniform Resource Identifiers <xref target="RFC3986"/>)
                   did so by using domain names and hence the
                   network location of
                   the information or other material.  That, in
                   turn, has required systems intended to improve
                   web performance by locating and retrieving a
                   "nearest copy" (rather than the single copy
                   designated by the URL) to intercept DNS queries
                   and respond with values that are not precisely
                   those stored for the designated domain name in
                   the DNS or to otherwise access information in a
                   way not supported by the DNS itself.</t>
              </list></t>
           </section>


           <section title="Extensions and Deployment Pressures -- The TXT RRTYPE"
                   anchor="TXT-Overloading">
              <t>Unfortunately (but unsurprisingly), and despite IETF
                 efforts to make things
                 easier <xref target="RFC6895"/>, DNS support
                 libraries have often been slow to add full support
                 for new RRTYPEs.  This has impeded deployment of applications
                 that depend on those types and that must ask (query)
				 explicitly for them.  Both to get faster
                 deployment and, at least until recently, to avoid
                 burdensome IETF approval procedures, many
                 application designers have chosen to push
                 protocol-critical information into records with
                 TXT RRTYPE, a record type that was originally
                 intended to include only information equivalent to
                 comments.</t>

              <t>This causes two problems.  First, TXT records used
                 this way tend
                 to get long and complex, which is a problem in
                 itself if one is trying to minimize TCP
                 connections.  Second, applications that are
                 attempting to obtain data cannot merely ask for
                 the relevant QTYPE; they must obtain all of the
                 records with QTYPE TXT and parse them to determine
                 which ones are of interest.  That would be easier
                 if there was some standard for how to do that
                 parsing, but, at least in part because the clear
                 preference in the DNS design is for distinct
                 RRTYPEs for different kinds of information, there
                 is no such standard. (There was a proposal in 1993
                 to structure the TXT DATA in a way that would have
                 addressed the issue <xref target="RFC1464"/>, but
                 it apparently never went anywhere.)</t>

              <t> On the other hand, this issue is somewhat
                 different from most of the others described in
                 this document because (as the IETF has recommended
                 several times) the problem is easily solved within
                 the current DNS design by allocating and
                 supporting new RRTYPEs when needed rather than
                 using TXT as a workaround (that does not mean that
                 other solutions are impossible, either with the
                 current DNS or with some other design).  The problem then lies
                 in the implementations and/or mechanisms that
                 deter or impede rapid deployment of support for
                 new RRTYPEs.</t>
            </section>

            <section title="Periods and Zone Cut Issues">
               <t> One of the DNS characteristics that is poorly
                  understood by non-experts is that the period
                  (".", U+002E) character can be used in four
                  different ways:
                  <list style="symbols">
                     <t> As a label separator in the presentation
                        form that also designates a "zone break"
                        (delegation boundary).  For example,
                        foo.bar.example.com indicates the owner,
                        "foo", of records in the "bar.example.com"
                        zone.</t>

                     <t> As a label separator in the presentation
                        form that does not designate a zone
                        break.  For example, foo.bar.example.com
                        indicates the owner, "foo.bar", of records
                        in the "example.com" zone.</t>

                     <t> As a character within a label, including
                        as a substitute for an at-sign ("@") when
                        an email address appears in an SOA record
                        or in a label that denotes such an address
                        (see <xref target="background"/> above).  The
						ability to embed periods in labels in this way
						has also led to attacks in which, e.g., a
						domain name consisting of the labels "example"
						followed by "com" is deliberately confused with
						the single label "example.com" with an
						embedded period.</t>

<!-- [JcK 20180130]: Next paragraph is new (see email).  If you don't like the
	 punctuation, we should talk, perhaps about a different way to
	 organize the sentence, because dropping the final one would make
	 the example ambiguous -->

<!--[rfced_response] Acknowledged; the update is agreeable. 
Fyi, the new text will require ISE approval. -->
					 <t> At the end of a fully qualified domain name
						to designate the root zone, e.g.,
						"example.com."&nbsp;(RFC 1034, Section 3.1). </t>
                   </list>
                   In general, these cases cannot be distinguished
                   by looking at them. 


<!--[rfced] Please clarify: Does "and so on" apply to 
the phrase "as a notation for A or B" or to the phrase
"interpreted as an X or a Y"?

Original:
   The third is problematic for non-DNS reasons, e.g.,
   "john.doe.example.net" is ambiguous as to whether it should be
   interpreted as a simple FQDN, as a notation for john.doe@example.net,
   for john@doe.example.net, and so on.

Perhaps A (if the former):
   The third is problematic for non-DNS reasons, e.g.,
   "john.doe.example.net" is ambiguous as to whether it should be
   interpreted as a simple FQDN or as a notation for john.doe@example.net,
   john@doe.example.net, or similar.

Or B (if the latter):
   The third is problematic for non-DNS reasons, e.g.,
   "john.doe.example.net" is ambiguous as to whether it should be
   interpreted as a simple FQDN, as a notation for john.doe@example.net 
   or john@doe.example.net, or otherwise.
-->
<!-- [JcK 20180130]:  See email.  That sentence and part of the next paragraph rewritten. -->

<!--[rfced_response] Acknowledged; the updates are agreeable. -->

                   The third is problematic for non-DNS reasons, e.g.,
                   "john.doe.example.net" can be interpreted as either
				   a simple FQDN or as a notation for
				   john@doe.example.net, john.doe@example.net, or 
                   even (at least in principle) john.doe.example@net.</t>

                <t> The distinction between the FQDN interpretation
				   and the first email-like one was
                   probably not important as the DNS was originally
                   intended to be used.  However, as soon as
                   RRTYPEs (other than NS records that define the
                   zone cut) are used that are sensitive to the
                   boundaries between zones, the distinctions
                   become important to people other than the
                   relevant zone administrators.
				   DNSSEC <xref target="RFC4033"/> involves one such
				   set of relationships.  It increases the importance of
                   questions about what should go in a parent zone
                   and what should go in child zones and how much
                   difference it makes if NS
                   records in a parent zone for a child zone are
                   consistent with the records and data in the
                   child zone.  This also causes
                   application issues and may raise questions about
                   relationships between registrars and one or more
                   registries or, if they are separate, DNS
                   operators. 
                </t>
            </section>
       </section>

       <section title="Scaling of Reputation and Other Ancillary Information">
          <t> The original design for DNS administration, reflected in
             <xref target="RFC1591">RFC 1591</xref> and elsewhere,
             assumed that all domains would exhibit a very high level
             of responsibility toward and for the community and that
             level of responsibility would be enforced if necessary.</t>

          <t> More recent decisions, many of them associated with
             commercialization of the DNS, have eroded those very
             strong assumptions of registry responsibility and
             accountability to the point that many consider decisions
             about delegation of names, identification of registrants,
             and relationships among names to be matters of
             "registrant beware" and even "user and applications
             beware".  While some recent protocols and proposals at
             least partially reflect that original model of a high
             level of responsibility
             (see, e.g., IDNA <xref target="RFC5890"/> and a more
			 recent discussion <xref target="Klensin-5891bis"/>),
<!-- [JcK 20180130]: See email about the use of "specification" above;
			 sentence rewritten -->	

<!--[rfced_response] Acknowledged; the update is agreeable. -->
		 
             other decisions and actions tend to shift responsibility
             to the registrant or try to avoid accountability entirely.
             One possible approach to the problems,
             especially security problems, that are enabled by those
             new trends and the associated
             environment is to establish reputation systems associated
             with clearly defined administrative boundaries and with
             warnings to users, even if those reputation systems are
             managed by parties not directly associated with the DNS.</t>

          <t>The IETF DBOUND WG <xref target="IETF-DBOUND"/>
             addressed ways to establish and document boundaries more
             precise than simple dependencies on TLDs, but it was not
             successful in producing a standard.</t>

          <t> A TLD reputation-based approach was adopted by some web
             browsers after IDNs and a growing number of Generic Top-Level Domains (gTLDs) were
             introduced; that approach was based on a simple list and
             does not scale to the current size of the DNS or even the
             DNS root.</t>
       </section>

       <section title="Tensions among Transport, Scaling, and Content"
               anchor="Example-transport">
          <t>The original design for the DNS envisaged a simple query and response
            protocol where both the command and the response could be readily mapped
            into a single IP packet.
            The host requirements specification <xref target="RFC1123"/>
            required all DNS applications to accept a UDP query or response over UDP
            with up to 512 octets of DNS payload. TCP was seen as a fallback when the
            response was greater than this 512-octet limit, and this fallback to use
            TCP as the transport protocol was considered to be the exception rather
            than the rule.</t>

          <t>Over the intervening years, we have seen the rise of a common assumption of an
            Internet-wide Maximum Transmission Unit (MTU) size of 1,500 octets, accompanied
            with an assumption that UDP fragmentation is generally
            viable. This underpins the adoption of the Extension Mechanisms
 <!-- [JcK 20180130]: See email for discussion of insertion -->

<!--[rfced_response] Acknowledged; the update is agreeable. -->

			for DNS (EDNS(0)) <xref target="RFC6891"/> to,
      		among other things, specify a
            UDP buffer size larger than 512 octets and a suggestion within that
            specification to use 4,096 as a suitable compromise for the UDP payload size.
            This has proved to be fortuitous for the DNSSEC security extensions where
            the addition of DNSSEC security credentials in DNS
            responses <xref target="RFC4034"/> can
            lead to the use of large DNS responses. However, this exposes some
            tensions over the handling of fragmentation in IP, where UDP fragments
            have been observed to be filtered by various firewalls. Additionally for
            IPv6, there are the factors of filtering the ICMPv6 Packet Too Big
            diagnostic messages and discarding the IPv6 packets that
            contain extension headers <xref target="RFC7872"/>.
            More generally, fragmented UDP packets appear to have a lower level of
            reliability than unfragmented TCP packets.</t>

            <t>Behind this observation about relative reliability of delivery is the
            tension between the lightweight load of UDP and the downside of elevated
            probability of discarding of packet fragments as compared to TCP, which
            offers increased levels of assurance of content delivery, but with the
            associated imposition of TCP session state and the
            downside of reduced DNS scalability and increased
            operational cost.</t>
       </section>

    </section>


    <section title="The Inverse Lookup Requirement" anchor="InverseLookup">
       <t>The requirement for an inverse lookup capability, i.e., the
          ability to find a domain name given an address and, in
          principle, to find the owner of a record by any of its data
          elements, was recognized in RFC 882.  The feature was
          identified as optional but carried forward into RFCs 1034 and
          1035 but was explicitly deprecated by RFC 1034 for address-to-hostname
          lookup (although RFC 1035 uses exactly that
          type of lookup in an example).   Despite the discussion of
          inverted forms of the database in RFC 1035, inverse lookup
          has rarely, if ever, been implemented, at least in its
          general form.

<!-- [rfced] This term appears as follows in this document. Should 
the first instance be all caps for consistency? (We assume the
quotation marks are intentional for the first mention.)

"in-addr.arpa" approach
IN-ADDR.ARPA zone
IN-ADDR.ARPA approach 
-->
<!-- [JcK 20180130] Yeech, sorry.   Have converted the second instance of
  "approach" to lower case and quotes.  It is conventional to refer
  to zone names of LDH domains in upper case -->

<!--[rfced_response] Update acknowledged; thank you.-->

          The fundamental difficulties with inverse
          lookup in either the form described in RFC 882 or the "in-addr.arpa"
          approach mentioned below are consistent with the problems described in
          fundamental papers on database management
          <xref target="Codd1970"/> but were not described in
          RFC 1035 or related contemporary IETF documents.</t>

       <t> It is interesting to speculate on how many of the current
          requirements to treat aliases as an integrated set of
          synonyms (e.g., for variant handling) would have been
          addressed if inverse lookups could reliably produce the
          owners of CNAME records.</t>

       <t>At the same time, it was obviously important to have some
          mechanism for address-to-name resolution.  It was provided by PTR
          RRTYPE entries in the IN-ADDR.ARPA zone, with delegations on
          octet boundaries. 
          However, that
          approach required that information be maintained in
          parallel, in separate zones, for the name-to-address and
          address-to-name mappings.
<!-- [JcK 20180130] "to" substituted for the arrow notation, which felt a
	little too informal -->

<!--[rfced_response] Acknowledged. Note the addition of hyphens
("name-to-address" and "address-to-name mappings").  Please let us
know any objections.

Current:
     However, that approach required that information be
     maintained in parallel, in separate zones, for the 
     name-to-address and address-to-name mappings.
 -->

		  That synchronization requirement
          for two copies of essentially the same data was another
          popular topic in the database management literature a decade
          or more before the DNS and, predictably, led to many
          inconsistencies and other failures.</t>

       <t> The introduction of Classless Inter-Domain Routing (CIDR) <xref target="RFC1518"/> and
          Provider-Dependent addresses made the situation even more
          difficult, because it was no longer possible to delegate the
          administration of reverse mapping records for small networks
          to the actual operators of those networks.  ISPs and other
          aggregators often had no incentive to maintain reverse
          mapping records consistent with network operator assignment
          of domain names.  A proposal to use binary labels to work
          around that issue <xref target="RFC2673"/> was abandoned
          somewhat over three years later <xref target="RFC6891"/>.</t>

        <t>Independent of how much or little harm the absence of a
           general inverse lookup facility has caused and how
           effective the "in-addr.arpa" approach has been, inverse lookup
           remains a facility that was anticipated and known to be
           useful in the original DNS design but that has never been fully
           realized.</t>
    </section>

    <section title="Internet Scale, Function Support, and Incremental Deployment"
        anchor="incrementalDeploy">
          <t> In addition to the stresses caused by the new functions,
             including those
             described in <xref target="Example-NewRR"/>,
              incremental deployment of systems that utilize
              them means that some functions will work in some
              environments and not others.  This has been
              especially problematic with complex, multi-record,
              capabilities like DNSSEC
			  that provide or require special validation mechanisms
			  and with some 
              EDNS(0) extensions <xref target="RFC6891"/> that require
              both the client and server to accept particular
              extensions.  When DNS functionality is required in
              embedded devices, deployment of new features across the
              entire Internet in a reasonable period of time is
              nearly impossible.</t>

         <t> If one were redesigning the DNS, one could imagine ways
            to address these issues that would make them slightly more
            tractable, and, of course, the features that are known to
            be necessary today could become part of the baseline,
            "mandatory to implement", specification.</t>
    </section>

    <section title="Searching and the DNS -- An Historical Note">
       <t> Some of the issues identified above might reasonably be
          addressed, not by changing the DNS itself but by changing
          our model of what it is about and how it is used.
          Specifically, one key assumption when the DNS (and the host
          table system before it) was designed was that it was a
          naming system for network resources, not, e.g., digital
          content.  As such, exact matching was important, it was
          reasonable to have labels treated as mnemonics that did not
          necessarily have linguistic or semantic meaning except to
          those using them, and so on.  A return to that model,
          presumably by having user-facing applications call on an
          intermediate layer to disambiguate user-friendly names and
          map them to DNS names (or network object locators more
          generally), would
          significantly reduce stress on the DNS and would also allow
          dealing with types of matching and similar or synonymous
          strings that cannot be handled algorithmically no matter how
          much DNS matching rules were altered.</t>

       <t> In some respects, search engines based on free-text
          analysis and linkages among information have come to serve
          many of the functions of such an intermediate layer.  Many
          studies and sources have pointed out that few users actually
          understand, much less care about, the distinction between a
          DNS name and a search term.  Recent versions of some
          web browsers have both recognized the failure of that
          distinction and reinforced it by eliminating the separation
          between "URL" and "search bar".</t>

       <t>It is worth noting that, while that "search" approach, or
          some other approach that abstracted and separated several of
          the issues identified in <xref target="ExampleList"/> from
          the DNS protocol and database themselves, it
          does not address all of them.   At least some elements of
          several of those issues, such as the synchronization ones
          described in <xref target="Example-Synch"/> and the
          transport ones described in
          <xref target="Example-transport"/>, are inherent
          in the DNS design, and, if we are not going to replace the
          DNS, we had best get used to them.</t>

       <t> In the early part of the last decade, the IETF engaged in
          some preliminary exploration of the intermediate-layer
          approach in the context of IDNs and what were then called
          "Internet keywords" <xref target="DNS-search"/>.
		  While that exploratory effort met several times informally,
		  it never became an organized IETF activity, largely because
		  of the choice of what became the IDNA approach but also in
		  part by signs that the "Internet keywords" efforts were
		  beginning to fall apart. </t>

<!-- [rfced] For readability, may this sentence be updated as follows or
otherwise? We suggest "developments since the time of that earlier work"
could be "subsequent developments". Also, perhaps "use of X might be used
to address Y" could be "use of X might address Y".

Original:
   It may be time to examine that approach again and to
   do so more deeply in the context of developments since the time of
   that earlier work and the degree to which use of an intermediate
   layer by appropriate user-facing applications might be used to
   address some of the issues identified above.

Perhaps:
   It may be time to examine that approach again and to
   do so more deeply in the context of subsequent developments 
   and the degree to which use of an intermediate layer by 
   appropriate user-facing applications might address some 
   of the issues identified above.

Or (to avoid "in the context of ... the degree to which"):
   It may be time to examine that approach again and to 
   do so more deeply, with consideration of subsequent developments 
   and how effective the use of an intermediate layer by appropriate 
   user-facing applications might be for addressing the issues 
   identified above.
-->
<!-- [JcK 20180130]: I disagree that the rewritten form improves readability
	and think it weakens the point of the original text.  See comment
    above about patching.  I've rewritten the sentence somewhat; see
    if you like it better --> 

<!--[rfced_response] Regarding the rewriten text:

A) For clarity, we added "that" after "applications".
Please let us know if this is not agreeable.

Current:
   If so, the effort should examine use of those approaches by 
   appropriate user-facing applications that might be used to 
   address some of the issues identified above.

B) For clarity, may we update the text as follows: 1) replace the
comma following 'document' with a semicolon, 2) delete the comma 
that follows [RFC2672], and 3) add a comma after [IANA-TLD-registry]. 
(Note that this newly added text will require ISE approval.)

Suggested:
   Several of those changes are discussed 
   elsewhere in this document; others, including repurposing of the
   DNAME RRTYPE from support for transitions [RFC2672] to a general-
   purpose mechanism for aliases of subtrees [RFC6672] and the addition
   of over a thousand new TLDs [IANA-TLD-registry], are not but
   nonetheless are part of the context for intermediate-layer work that
   did not exist in 2003.
 -->
<!--[rfced_response_2] The suggested changes have been implemented. --> 


      <t> It may be time to reexamine intermediate-layer approaches.
		  If so, the effort should examine use of those approaches by
		  appropriate user-facing applications that might be used to
		  address some of the issues identified above.  The Internet
		  and the DNS have changed considerably since the 2000-2003
		  period.  Several of those changes are discussed elsewhere in
		  this document; others, including repurposing of the DNAME
		  RRTYPE from support for transitions <xref target="RFC2672"/> 
                  to a general-purpose mechanism for aliases of
		  subtrees <xref target="RFC6672"/> and the addition of over a
		  thousand new TLDs <xref target="IANA-TLD-registry"/>, are not
		  but nonetheless are part of the context for
		  intermediate-layer work that did not exist in 2003.</t>
    </section>

<!-- [JcK 20180130]: The comment that you removed said "remove".  This is an
  informational document that does not specify IANA actions, so, until
  and unless there are requirements that apply to the Independent
  Stream, it should be dropped on publication.   
    <section anchor="IANA" title="IANA Considerations">
      <t>This document has no IANA actions.</t>
    </section>  -->

<!--[rfced_response] Update acknowledged. Per guidance in RFC 8126,
normal practice is to keep this section even if no IANA actions
are needed; however, IANA has advised that this section may be
deleted upon request. -->

    <section anchor="Security" title="Security Considerations">
       <t>A wide range of security issues related to both securing
            the DNS and also to abilities to use namespaces for
            nefarious purposes have arisen. Issues of securing the
            DNS would obviously be essential to a replacement of the
            DNS. Issues of preventing nefarious use of the namespace
            (e.g. use of the name that appears or disappears as a signal to
            bots) would appear to be harder to solve within the naming
            system.</t>
 
<!--[rfced] Are there any additional references needed per the
following comment in the Security Considerations?

Original:
   [[CREF3: References needed ]]
-->
 <!-- [JcK 20180130]: Several people in the DNS security community were asked
		 to supply references that they thought appropriate and did
		 not.  Just drop the CREF (done above). -->

<!--[rfced_response] Update acknowledged.-->

    </section>
  </middle>

  <back>

    <references title="Normative References">

       &rfc1034;
       &rfc1035;

    </references>

    <references title="Informative References">

        &rfc0236;   
        &rfc0247;  
        &rfc0799;  
        &rfc0810;  
        &rfc0881; 
        &rfc0882;  
        &rfc0883;
        &rfc0952;
        &rfc0953; 
        &rfc0974;  
        &rfc1123;  
        &rfc1464;   
        &rfc1518;  
        &rfc1591;  
        &rfc1996;  
        &rfc2671;  
	&rfc2672;
        &rfc2673;
        &rfc3490;  
        &rfc3491;   
 <!-- [rfced] The following reference is not cited in the text.  Please let
us know where it should be cited or if this reference should be removed.

   [RFC3596]  Thomson, S., Huitema, C., Ksinant, V., and M. Souissi,
              "DNS Extensions to Support IP Version 6", STD 88,
              RFC 3596, DOI 10.17487/RFC3596, October 2003,
              <https://www.rfc-editor.org/info/rfc3596>.
-->
 <!-- [JcK 20180130]: Citation inserted -->

<!--[rfced_response] Update acknowledged. -->

        &rfc3596;   
        &rfc3986;  
        &rfc3743;   
        &rfc4033;   
        &rfc4034;  
        &rfc4343;  
        &rfc5890;   
        &rfc5891;
        &rfc6672;
	&rfc6761;  
        &rfc6891;   
        &rfc6912;  
        &rfc6895;   
        &rfc7094;   
    	&rfc7706;   
        &rfc7719;   
        &rfc7816;  
        &rfc7858;   
        &rfc7872;  
    	&rfc8244;

  <reference anchor="Cerf2017">
     <front>
        <title>Desirable Properties of Internet Identifiers</title>
        <author initials="V.G." surname="Cerf"/>
        <date month="November/December" year="2017"/>
     </front>
     <seriesInfo name="IEEE Internet Computing,"
                value="Volume 21, Issue 6, pp. 63-64"/>
     <seriesInfo name="DOI" value="10.1109/MIC.2017.4180839"/>
  </reference>

  <reference anchor="Codd1970" target="https://dl.acm.org/citation.cfm?id=362685">
     <front>
        <title> A Relational Model of Data for Large Shared Data
           Banks</title>
        <author initials="E.F" surname="Codd"/>
        <date year="1970" month="June"/>
     </front>
     <seriesInfo name="Communications of the ACM," value="Volume 13, Issue 6, pp. 377-387"/> 
     <seriesInfo name="DOI" value="10.1145/362384.362685"/>
  </reference>

  <reference anchor="Huston2017b"
			 target="http://ipj.dreamhosters.com/wp-content/uploads/2017/08/ipj20-2.pdf">
	 <front>
		<title>The Root of the Domain Name System</title>
		<author initials="G." surname="Huston"/>
		<date month="June" year="2017"/>
	 </front>
	 <seriesInfo name="The Internet Protocol Journal," value="Vol. 20, No. 2, pp. 15-25"/>
  </reference>

  <reference anchor="IANA-TLD-registry"
			 target="https://www.iana.org/domains/root/db">
	 <front>
		<title>Root Zone Database</title>
        <author>
           <organization>Internet Assigned Numbers Authority (IANA)
			  </organization>
	    </author>
	    <date month="January" day="30" year="2018"/>
	  </front>
  </reference>
			 
  <reference anchor="Mockapetris-1988"
             target="http://dl.acm.org/citation.cfm?id=52338">
     <front>
        <title> Development of the Domain Name System</title>
        <author initials="P.V." surname="Mockapetris"/>
        <author initials="K.J." surname="Dunlap"/>
        <date year="1988" month="August"/>
     </front>
     <seriesInfo name="SIGCOMM '88 Symposium," value="pp. 123-133"/>

<!-- [JcK 20180130]: type in next line corrected. --> 	 

<!--[rfced_response] Update acknowledged. -->


     <seriesInfo name="available from ISI Reprint Series," value="ISI/RS-88-219 &lt;ftp://ftp.isi.edu/isi-pubs/rs-88-219.pdf&gt;"/>
     <seriesInfo name="DOI" value="10.1145/52324.52338"/>
  </reference>

<!--draft-ymbk-dns-choices-00; Expired-->
  <reference anchor="Faltstrom-2004">
     <front>
        <title>Design Choices When Expanding DNS</title>
        <author initials="P." surname="Faltstrom"/>
        <author initials="R." surname="Austein"/>
        <date year="2004" month="May"/>
     </front>
    <seriesInfo name="Work in Progress," value="draft-ymbk-dns-choices-00"/>
  </reference>

  <reference anchor="Vixie-20170704"
             target="https://www.ietf.org/mail-archive/web/ietf/current/msg103486.html">
     <front>
        <title>Subject: Re: new DNS classes</title>
        <author initials="P." surname="Vixie"/>
        <date year="2017" month="4 July"/>
     </front>
     <seriesInfo name="message to the" value="IETF dnsop mailing list"/>
  </reference>

  <reference anchor="NRC-Signposts"
             target="https://www.nap.edu/catalog/11258/signposts-in-cyberspace-the-domain-name-system-and-internet-navigation" quote-title="false">
     <front>
        <title>Signposts in Cyberspace: The Domain Name System and
           Internet Navigation</title>
        <author>
           <organization> National Research Council</organization>
        </author>
        <date year="2005"/>
     </front>
    <seriesInfo name="ISBN" value="0-309-54979-5"/>
  </reference>

<!--draft-ietf-dnsext-aliasing-requirements-01; Expired-->
<reference anchor='DNS-Aliases'>
<front>
<title>Problem Statement: DNS Resolution of Aliased Names</title>
<author initials='S' surname='Woolf' fullname='Suzanne Woolf'>
    <organization />
</author>
<author initials='X' surname='Lee' fullname='XiaoDong Lee'>
    <organization />
</author>
<author initials='J' surname='Yao' fullname='Jiankang Yao'>
    <organization />
</author>
<date month='March' year='2011' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-dnsext-aliasing-requirements-01' />
</reference>

<!--draft-yao-dnsext-bname-06; Expired-->
<reference anchor='DNS-BNAME'>
<front>
<title>Bundled DNS Name Redirection</title>
<author initials='J' surname='Yao' fullname='Jiankang Yao'>
    <organization />
</author>
<author initials='X' surname='Lee' fullname='XiaoDong Lee'>
    <organization />
</author>
<author initials='P' surname='Vixie' fullname='Paul Vixie'>
    <organization />
</author>
<date month='May' year='2016' />
</front>
<seriesInfo name='Work in Progress,' value='draft-yao-dnsext-bname-06' />
</reference>


<!--[rfced] We removed the following text from the References section
(from [DNS-search]), as annotations are not typically used in RFCs. 
Would you like to move this text elsewhere in the document (perhaps
after [DNS-search] is cited)?

Original:
   While it met several times informally and as one or
   more BOFs, this effort never really got off the ground.  That
   was due in part to the IETF decision to go forward with the
   IDNA approach and in part by signs that the "keyword" efforts
   were beginning to fall apart.
-->
<!-- [JcK 20180130]: Moved and rewritten.  See email. -->

<!--[rfced_response] Acknowledged; the update is agreeable. -->


  <reference anchor="DNS-search"
             target="https://datatracker.ietf.org/wg/irnss/about/">
     <front>
<!-- [JcK 20180130]: IRNSS capitalized. See email -->	

<!--[rfced_response] Acknowledged; the update is agreeable. -->
	
        <title>Internet Resource Name Search Service (IRNSS)</title>
        <author><organization>IETF</organization>
        </author>
        <date year="2003"/>
     </front>
  </reference>

  <reference anchor="IETF-DBOUND"
             target="https://datatracker.ietf.org/wg/dbound/about/">
     <front>
        <title> Domain Boundaries (dbound) </title>
        <author><organization>IETF</organization>
        </author>
        <date year="2017"/>
     </front>
  </reference>

  <reference anchor="ICANN-VIP"
             target="https://www.icann.org/news/announcement-2012-02-20-en">
     <front>
        <title>IDN Variant Issues Project: Final Integrated Issues
           Report Published and Proposed Project Plan for Next Steps
           is Now Open for Public Comment</title>
        <author>
              <organization>ICANN</organization>
        </author>
        <date year="2012" month="February"/>
      </front>
  </reference>

  <reference anchor="Unicode-UAX15"
             target="http://unicode.org/reports/tr15/">
     <front>
        <title>Unicode Standard Annex #15: Unicode Normalization Forms</title>
        <author fullname="Mark Davis" initials="M." surname="Davis">
           <organization>Unicode Consortium</organization>
        </author>
        <author fullname=" Ken Whistler" initials="K." surname="Whistler">
           <organization> Unicode Consortium </organization>
        </author>
        <date year="2016" month="February"/>
     </front>
  </reference>

  <reference anchor="Unicode-USA31"
             target="http://unicode.org/reports/tr31/">
     <front>
        <title>Unicode Standard Annex #31: Unicode Identifier and Pattern Syntax</title>
        <author fullname="Mark Davis" initials="M." surname="Davis">
           <organization> Unicode Consortium </organization>
        </author>
        <date year="2016" month="May"/>
     </front>
  </reference>

<!--draft-sullivan-dns-class-useless-03; Expired-->
<reference anchor='Sullivan-Class'>
<front>
<title>The DNS Is Not Classy: DNS Classes Considered Useless</title>
<author initials='A' surname='Sullivan' fullname='Andrew Sullivan'>
    <organization />
</author>
<date month='July' year='2016' />
</front>
<seriesInfo name='Work in Progress,' value='draft-sullivan-dns-class-useless-03' />
</reference>

<!--draft-hoffman-dns-in-json-13; Active - AD Evaluation -->
<reference anchor='Hoffman-DNS-JSON'>
<front>
<title>Representing DNS Messages in JSON</title>
<author initials='P' surname='Hoffman' fullname='Paul Hoffman'>
    <organization />
</author>
<date month='October' year='2017' />
</front>
<seriesInfo name='Work in Progress,' value='draft-hoffman-dns-in-json-13' />
</reference>

<!--draft-hoffman-simplednsjson-01; Active - I-D exists-->
<reference anchor='Hoffman-SimpleDNS-JSON'>
<front>
<title>Simple DNS Queries and Responses in JSON</title>
<author initials='P' surname='Hoffman' fullname='Paul Hoffman'>
    <organization />
</author>
<date month='November' year='2017' />
</front>
<seriesInfo name='Work in Progress,' value='draft-hoffman-simplednsjson-01' />
</reference>

<!--draft-klensin-idna-rfc5891bis-01; Active - AD is watching -->
<reference anchor='Klensin-5891bis'>
<front>
<title>Internationalized Domain Names in Applications (IDNA): Registry Restrictions and Recommendations</title>
<author initials='J' surname='Klensin' fullname='John Klensin'>
    <organization />
</author>
<author initials='A' surname='Freytag' fullname='Asmus Freytag'>
    <organization />
</author>
<date month='September' year='2017' />
</front>
<seriesInfo name='Work in Progress,' value='draft-klensin-idna-rfc5891bis-01' />
</reference>

  <reference anchor="Unicode"
             target="http://www.unicode.org/versions/Unicode9.0.0/" quote-title="false">
        <front>
          <title>The Unicode Standard, Version 9.0.0</title>
          <author>
              <organization>The Unicode Consortium</organization>
          </author>
          <date/>
        </front>
   <seriesInfo name="(Mountain View, CA: The Unicode Consortium, 2016."
               value="ISBN 978-1-936213-13-9)"/>
  </reference>

      <reference anchor="CACM-Homograph"
                 target="http://www.cs.technion.ac.il/~gabr/papers/homograph_full.pdf">
        <front>
          <title>The Homograph Attack</title>
          <author fullname="Evgeniy Gabrilovich" initials="E." surname="Gabrilovich">
            <organization/>
          </author>
          <author fullname="Alex Gontmakher" initials="A." surname="Gontmakher">
            <organization/>
          </author>
          <date year="2002" month="February" />
        </front>
        <seriesInfo name="Communications of the ACM," value="Volume 45, Issue 2, pp. 128"/>
        <seriesInfo name="DOI" value="10.1145/503124.503156"/>
      </reference>

      <reference anchor="Huston2017a"
                 target="http://ipj.dreamhosters.com/wp-content/uploads/issues/2017/ipj20-1.pdf">
         <front>
            <title>DNS Privacy</title>
            <author fullname="Geoff Huston" initials="G." surname="Huston"/>
            <author fullname="Joao Luis Silva Dama" initials="J.L." surname="Silva Dama"/>
            <date year="2017" month="March"/>
         </front>
         <seriesInfo name="The Internet Protocol Journal," value="Vol. 20, No. 1" />
      </reference>
	</references>

<!-- [JcK 20180130]: Up to you, but I consider putting Acknowledgments in an
	Appendix, even if not labeled as one, obnoxious.  At least you
	appear to have also moved the 
	closely-related "Contributors" and "Author's Addresses"
	sections.  Doing so with the existing format also makes the
	References sections harder to find, especially given that the
	normal ordering of a book or article (especially in typescript)
	is Content, References, Index (rarely, but not never, used in
	RFCs), End.  Remember too that Acknowledgments are critically
	required for conformance to IETF/ IETF Trust IPR rules, they are
	not surplus or discretionary in any way. --> 

<!--[rfced_response] We will address this comment with Heather. -->


 <section anchor="Acknowledgments" title="Acknowledgements" numbered='no'>
      <t> Many of the concerns and ideas described in this document
         reflect conversations over a period of many years, some
         rooted in DNS "keyword" and "search" discussions that
         paralleled the development of 
         IDNs.  Conversations with, or writings of, Rob Austein,
         Christine Borgman, Carolina Carvalho,
         Vint Cerf, Lyman Chapin, Nazli Choucri, Patrik Faltstrom,
         Geoff Huston, Xiaodong Lee, Karen Liu,
         Gervase Markham, Yaqub Mueller,
         Andrew Sullivan, Paul Twomey, Nico Williams, Suzanne Woolf,
         Jiankang Yao,
         other participants in the circa 2003 "DNS Search" effort and
         in the ICANN SSAC Working Party on IDNs,
         and some others whose names were sadly forgotten, were particularly
         important to either the content of this document or the
         motivation for writing it even though they may not agree
         with the conclusions
         I have reached and bear no responsibility for them.</t>

      <t>Many of the subsections
         of <xref target="ExampleList"/> were extracted from
         comments first made in conjunction with recent email
         discussions.  Comments from Suzanne Woolf about an earlier
         draft version were particularly important as was material developed
         with suggestions from Patrik
         Faltstrom, especially <xref target="Example-NewRR"/>.
         Feedback and suggestions from several of the above and from
         Stephane Bortzmeyer, Tony Finch, Bob Harold, Warren Kumari,
		 Craig Partridge, and George Sadowsky
         were extremely helpful for improving the clarity and accuracy
         of parts of the document, especially so for a broader
         audience. Craig Partridge also contributed much of the
		 material about queries for multiple types.
		 Geoff Huston made several useful comments and
         contributed most of <xref target="Example-transport"/>, and
         Bill Manning pointed out some broader requirements about
         integrity of information and DNS management and operations.</t>

<t>
Special thanks are due to Karen Moore of the RFC Production
Center for her efforts, patience, and persistence in preparing
this document for publication, a process that raised far more
issues that required careful discussion than usual.
</t>
    </section>


  </back>
</rfc>
