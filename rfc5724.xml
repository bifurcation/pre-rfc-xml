<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc toc="yes" ?>
<?rfc tocdepth="2" ?>
<?rfc sortrefs="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc rfcedstyle="yes" ?>

<rfc category="std" ipr="trust200811" number="5724">
	<front>
	<title abbrev='"sms" URI Scheme'>URI Scheme for Global System for Mobile Communications (GSM) Short Message Service (SMS)</title>
	<author initials="E." surname="Wilde" fullname="Erik Wilde">
		<organization>UC Berkeley</organization>
		<address>
			<postal>
				<street>School of Information</street>
				<city>Berkeley, CA 94720-4600</city>
				<country>U.S.A.</country>
			</postal>
			<phone>+1-510-6432253</phone>
			<email>dret@berkeley.edu</email>
			<uri>http://dret.net/netdret/</uri>
		</address>
	</author>
	<author initials="A." surname="Vaha-Sipila" fullname="Antti Vaha-Sipila">
		<organization>Nokia</organization>
		<address>
			<email>antti.vaha-sipila@nokia.com</email>
			<uri>http://www.iki.fi/avs/</uri>
		</address>
	</author>
	<date  month="December" year="2009"/>
	<keyword>GSM</keyword>
	<keyword>SMS</keyword>
	<keyword>URI scheme</keyword>
	<abstract>
	<t>This memo specifies the Uniform Resource Identifier (URI)
	scheme "sms" for specifying one or more recipients for an SMS
	message. SMS messages are two-way paging messages that can be
	sent from and received by a mobile phone or a suitably
	equipped networked device.</t>
		</abstract>
	</front>
	<middle>
<section title="Introduction" anchor="intro">


			<section title="What is GSM?">
	<t>GSM (Global System for Mobile Communications) is a digital
	mobile phone standard that is used extensively in many parts
	of the world. First named after its frequency band around 900
	MHz, GSM-900 has provided the basis for several other networks
	utilizing GSM technology, in particular, GSM networks operating
	in the frequency bands around 1800 MHz and 1900 MHz. When
	referring to "GSM" in this document, we mean any of these
	GSM-based networks that operate a short message service.</t>

			</section>


	<section title="What is SMS?" anchor="sms-descr">
	<t>The Short Message Service (SMS) <xref target="SMS"/> is an
	integral part of the GSM network technology. It has been very
	successful and currently is a major source of revenue for many
	GSM operators. SMS as a service is so successful that other
	Global Switched Telephone Network (GSTN) technologies have
	adopted it as well, in particular, the Integrated Services
	Digital Network (ISDN). Because of this development, this memo
	uses the term "SMS client" to refer to user agents that are
	able to send and/or receive SMS messages.</t>

	<section title="SMS Content">
	<t>GSM SMS messages are alphanumeric paging messages that can
	be sent to and from SMS clients. SMS messages have a maximum
	length of 160 characters (7-bit characters from the GSM
	character set <xref target="SMS-CHAR"/>), or 140 octets. Other
	character sets (such as UCS-2 16-bit characters, resulting in
	70-character messages) MAY also be supported
	<xref target="SMS-CHAR"/>, but are defined as being optional
	by the SMS specification. Consequently, applications handling
	SMS messages as part of a chain of character-processing
	applications MUST make sure that character sets are correctly
	mapped to and from the character set used for SMS
	messages.</t>

	<t>While the 160-character content type for SMS messages is by far
	the one most widely used, there are numerous other content
	types for SMS messages, such as small bitmaps ("operator
	logos") and simple formats for musical notes ("ring
	tones"). However, these formats are proprietary and are not
	considered in this memo.</t>

	<t>SMS messages are limited in length (140 octets), and the
	first versions of the SMS specification did not specify any
	standardized methods for concatenating SMS messages. As a
	consequence, several proprietary methods were invented, but
	the current SMS specification does specify message
	concatenation. In order to deal with this situation, SMS
	clients composing messages SHOULD use the standard
	concatenation method based on the header in the TP-User Data
	field as specified in the SMS specification
	<xref target="SMS"/>. When sending a message to an SMS
	recipient whose support for concatenated messages is unknown,
	the SMS client MAY opt to use the backwards-compatible
	(text-based) concatenation method defined in the SMS
	specification <xref target="SMS"/>. Proprietary concatenation
	methods SHOULD NOT be used except in closed systems, where the
	capabilities of the recipient(s) are always known.</t>

				</section>
	<section title="SMS Infrastructure">
	<t>SMS messages can be transmitted over an SMS client's
	network interface using the signaling channels of the
	underlying GSTN infrastructure, so there is no delay for call
	setup. Alternatively, SMS messages may be submitted through
	other front-ends (for example, Web-based services), which makes
	it possible for SMS clients to run on computers that are not
	directly connected to a GSTN network supporting SMS.</t>

	<t>SMS messages sent with the GSTN SMS service MUST be sent as
	class 1 SMS messages, if the client is able to specify the
	message class.</t>

	<section title="SMS Centers" anchor="smscenter">
	<t>For delivery within GSTN networks, SMS messages are stored
	by an entity called SMS Center (SMSC) and sent to the
	recipient when the subscriber connects to the network. The
	number of a cooperative SMSC must be known to the SMS sender
	(i.e., the entity submitting the SMS message to a GSTN
	infrastructure) when sending the message (usually the SMSC's
	number is configured in the SMS client and specific for the
	network operator to which the sender has subscribed). In most
	situations, the SMSC number is part of the sending SMS
	client's configuration. However, in some special cases (such
	as when the SMS recipient only accepts messages from a certain
	SMSC), it may be necessary to send the SMS message over a
	specific SMSC. The scheme specified in this memo does not
	support the specification of SMSC numbers, so in case of
	scenarios where messages have to be sent through a certain
	SMSC, there must be some other context establishing this
	requirement or message delivery may fail.</t>

					</section>
				</section>
	<section title="Uniform Resource Identifiers">
	<t>One of the core specifications for identifying resources on
	the Internet is <xref target="RFC3986"/>, specifying
	the syntax and semantics of a Uniform Resource Identifier
	(URI). The most important notion of URIs are "schemes", which
	define a framework within which resources can be uniquely
	identified and addressed. URIs enable users to access
	resources and are used for very diverse schemes, such as
	access protocols (HTTP, FTP), broadcast media (TV channels
	<xref target="RFC2838"/>), messaging (email
	<xref target="RFC2368"/>), and even telephone numbers (voice
	<xref target="RFC3966"/>).</t>

	<t>URIs often are mentioned together with Uniform Resource
	Names (URNs) and/or Uniform Resource Locators (URLs), and it
	often is unclear how to separate these concepts. For the
	purpose of this memo, only the term URI will be used,
	referring to the most fundamental concept. The World Wide Web
	Consortium (W3C) has issued a note
	<xref target="uri-clarification"/> discussing the topic of
	URIs, URNs, and URLs in detail.</t>

				</section>
	<section title="SMS Messages and the Internet">
	
	<t>One of the important reasons for the universal access of
	the Web is the ability to access all information through a
	unique interface. This kind of integration makes it easy to
	provide information as well as to consume it. One aspect of
	this integration is the support of user agents (in the case of
	the Web, commonly referred to as browsers) for multiple
	content formats (such as HTML, GIF, JPEG) and access schemes
	(such as HTTP, HTTPS, FTP).</t>

	<t>The "mailto" scheme has proven to be very useful and
	popular because most user agents support it by providing an
	email composition facility when the user selects (e.g., clicks
	on) the URI. Similarly, the "sms" scheme can be supported by
	user agents by providing an SMS message composition facility
	when the user selects the URI. In cases where the user agent
	does not provide a built-in SMS message composition facility,
	the scheme could still be supported by opening a Web page
	that provides such a service. The specific Web page to be
	used could be configured by the user, so that each user could
	use the SMS message composition service of his choice.</t>

	<t>The goal of this memo is to specify the "sms" URI scheme
	so that user agents (such as Web browsers and email clients)
	can start to support it. The "sms" URI scheme identifies SMS
	message endpoints as resources. When "sms" URIs are
	dereferenced, implementations MAY create a message and present
	it to be edited before being sent, or they MAY invoke
	additional services to provide the functionality necessary for
	composing a message and sending it to the SMS message
	endpoint. In either case, simply activating a link with an
	"sms" URI SHOULD NOT cause a message to be sent without prior
	user confirmation.</t>

	<section title="SMS Messages and the Web">
	<t>SMS messages can provide an alternative to "mailto" URIs
	<xref target="RFC2368"/>, or "tel" or "fax" URIs
	<xref target="RFC3966"/>. When an "sms" URI is activated, the
	user agent MAY start a program for sending an SMS message,
	just as "mailto" may open a mail client. Unfortunately, most
	browsers do not support the external handling of internally
	unsupported URI schemes in the same generalized way as most of
	them support external handling of content for media types
	that they do not support internally. Ideally, user agents
	should implement generic URI parsers and provide a way to
	associate unsupported schemes with external applications (or
	Web-based services).</t>

	<t>The recipient of an SMS message need not be a mobile
	phone. It can be a server that can process SMS messages,
	either by gatewaying them to another messaging system (such as
	regular electronic mail), or by parsing them for supplementary
	services.</t>

	<t>SMS messages can be used to transport almost any kind of
	data (even though there is a very tight size limit), but the
	only standardized data formats are character-based messages in
	different character encodings. SMS messages have a maximum
	length of 160 characters (when using 7-bit characters from the
	SMS character set), or 140 octets. However, SMS messages can
	be concatenated to form longer messages. It is up to the user
	agent to decide whether to limit the length of the message,
	and how to indicate this limit in its user interface if
	necessary. There is one exception to this; see
	<xref target="htmlforms"/>.</t>

					</section>
	<section title="SMS Messages and Forms">
	<t>The Hypertext Markup Language (HTML)
	<xref target="HTML401"/> provides a way to collect information
	from a user and pass it to a server for processing. This
	functionality is known as "HTML forms". A filled-in form is
	usually sent to the destination using the Hypertext Transfer
	Protocol (HTTP) or email. However, SMS messages can also be
	used as the transport mechanism for these forms. Depending on
	the network configuration, the sender's telephone number may
	be included in the SMS message, thus providing a weak form of
	authentication.</t>

					</section>
				</section>
			</section>

<section title="Requirements Language">
  	<t>The capitalized key words "MUST", "MUST NOT", "REQUIRED",
	"SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",
	"MAY", and "OPTIONAL" in this document are to be interpreted
	as described in <xref target="RFC2119"/>.</t></section>


		</section>
	<section title='The "sms" URI Scheme' anchor="uri-syntax">
	<t>Syntax definitions are given using the Augmented BNF (ABNF)
	for syntax specifications <xref target="RFC5234"/>.</t>

	<section title="Applicability">
	<t>This URI scheme provides information that can be used for
	sending SMS message(s) to specified recipient(s). The
	functionality is comparable to that of the "mailto" URI, which
	(as per <xref target="RFC2368"/>) can also be used
	with a comma-separated list of email addresses.</t>

	<t>The notation for phone numbers is taken from
	<xref target="RFC3966"/> and its Erratum
	203 <xref target="Err203"/>. <xref target="telephone-subscriber-syntax"/> provides a
	corrected syntax of the telephone number. Refer to that
	document for information on why this particular format was
	chosen.</t>

	<t>How SMS messages are sent to the SMSC or other
	intermediaries is outside the scope of this specification. SMS
	messages can be sent over the GSM air interface by using a
	modem and a suitable protocol or by accessing services over
	other protocols, such as a Web-based service for sending SMS
	messages. Also, SMS message service options like deferred
	delivery and delivery notification requests are not within the
	scope of this document. Such services MAY be requested from
	the network by the user agent if necessary.</t>

	<t>SMS messages sent as a result of this URI MUST be sent as
	class 1 SMS messages, if the user agent is able to specify the
	message class.</t>

			</section>
<section title="Formal Definition" anchor="syntaxdef">
	<t>The URI scheme's keywords specified in the following syntax
	description are case-insensitive. The syntax of an "sms" URI
	is formally described as follows, where the URI base syntax is
	taken from <xref target="RFC3986"/>:</t>

				<t>
					<figure>
						<artwork type="ABNF">
sms-uri        = scheme ":" sms-hier-part [ "?" sms-fields ]
scheme         = "sms"
sms-hier-part  = sms-recipient *( "," sms-recipient )
sms-recipient  = telephone-subscriber ; defined in RFC 3966
sms-fields     = sms-field *( "&amp;" sms-field )
sms-field      = sms-field-name "=" escaped-value
sms-field-name = "body" / sms-field-ext ; "body" MUST only appear once
sms-field-ext  = 1*( unreserved ) 
escaped-value  = *( unreserved / pct-encoded ) ; defined in RFC 3986</artwork>
					</figure>
				</t>
	<t>Some illustrative examples using this syntax are given in
	<xref target="uri-examples"/>.</t>

	<t>The syntax definition for &lt;telephone-subscriber> is
	taken from Section 5.1 of <xref target="RFC3966"/>.
	Please consider Erratum 203 <xref target="Err203"/> in that specification. For
	the reader's convenience,
	<xref target="telephone-subscriber-syntax"/> contains a fixed
	syntax of the telephone number URI scheme, including Erratum
	203, but RFC 3966 (plus all applicable errata) is the
	normative reference. The description of phone numbers in RFC
	3966 (Section 5.1) states: "The
	'telephone-subscriber' part of the URI indicates the
	number. The phone number can be represented in either global
	(E.164) or local notation. All phone numbers MUST use the
	global form unless they cannot be represented as such. Numbers
	from private numbering plans, emergency ("911", "112"), and
	some directory-assistance numbers (e.g., "411") and other
	"service codes" (numbers of the form N11 in the United States)
	cannot be represented in global (E.164) form and need to be
	represented as a local number with a context. Local numbers
	MUST be tagged with a 'phone-context'."</t>

	<t> This specification defines a single &lt;sms-field>:
	"body". Extensions to this specification MAY define additional
	fields. Extensions MUST NOT change the semantics of the
	specifications they are extending. Unknown fields encountered
	in "sms" URIs MUST be ignored by implementations.</t>

	<t>The "body" &lt;sms-field> is used to define the body of the
	SMS message to be composed. It MUST not appear more than once
	in an "sms" URI. It consists of percent-encoded UTF-8
	characters. Implementations MUST make sure that the "body"
	&lt;sms-field> characters are converted to a suitable
	character encoding before sending, the most popular being the
	7-bit SMS character encoding, another variant (though not as
	universally supported as 7-bit SMS) is the UCS-2 character
	encoding  (both specified in
	<xref target="SMS-CHAR"/>). Implementations MAY choose to
	discard (or convert) characters in the &lt;sms-body> that are
	not supported by the SMS character set they are using to send
	the SMS message. If they do discard or convert characters,
	they MUST notify the user.</t>

				
	<t>The syntax definition for &lt;escaped-value> refers to the
	text of an SMS where all &lt;reserved> (as per 
	<xref target="RFC3986"/>) characters in the SMS text are
	percent-encoded, please refer to 
	<xref target="RFC3986"/> for the definitions of &lt;unreserved>
	and &lt;pct-encoded> and for details about
	percent-encoding.</t>

	<t>User agents SHOULD support multiple recipients and SHOULD
	make it clear to users what the entire list of recipients is
	before committing the user to sending all the messages.</t>

			</section>

<section title='Processing an "sms" URI' anchor="processing">
	<t>The following list describes the steps for processing an "sms" URI:</t>

	<t><list style="numbers">
	<t>The phone number of the first &lt;sms-recipient> is
	extracted. It is the phone number of the final recipient and
	it MUST be written in international form with country code,
	unless the number only works from inside a certain
	geographical area or a network. Note that some numbers may
	work from several networks but not from the whole world --
	these SHOULD be written in international form. According to
	 <xref target="RFC3966"/>, all international numbers
	MUST begin with a "+" character. Hyphens, dots, and
	parentheses (referred to as "visual separators" in RFC 3966)
	are used only to improve readability and MUST NOT convey any
	other meaning.</t>

	<t>The "body" &lt;sms-field> is extracted, if present.</t>
	
	<t>The user agent SHOULD provide some means for message
	composition, either by implementing this itself or by
	accessing a service that provides it. Message composition SHOULD
	start with the body extracted from the "body" &lt;sms-field>,
	if present.</t>

						<t>After message composition, a user agent SHOULD try to send the message first using the default delivery method employed by that user agent. If that fails, the user agent MAY try another delivery method.</t>
						<t>If the URI contains a comma-separated list of recipients (i.e., it contains multiple &lt;sms-recipient> parts), all of them are processed in this manner. Exactly the same message SHOULD be sent to all of the listed recipients, which means that the message resulting from the message composition step for the first recipient is used unaltered for all other recipients as well.</t>
					</list>
				</t>
			</section>
	<section title='Comparing "sms" URIs' anchor="uri-comparison">
	<t>Two "sms" URIs are equivalent according to the following
	rules. Since the definition of the &lt;telephone-subscriber>
	is taken from <xref target="RFC3966"/>, equivalence
	of individual values of &lt;telephone-subscriber> is based on
	the rules defined in Section 4 of 
	<xref target="RFC3966"/>, repeated here for convenience:</t>

		<t><list style="symbols">
	<t>Both must be either a &lt;local-number> or a
	&lt;global-number&lt;, i.e., start with a "+".</t>

	<t>The &lt;global-number-digits> and the
	&lt;local-number-digits> must be equal, after removing all
	visual separators.</t>

	<t>For mandatory additional parameters and the
	&lt;phone-context> and &lt;extension> parameters defined in
	 <xref target="RFC3966"/>, the &lt;phone-context>
	parameter value is compared either as a host name if it is a
	&lt;domainname> or digit-by-digit if it is
	&lt;global-number-digits>. The latter is compared after
	removing all &lt;visual-separator> characters.</t>

	<t>Parameters are compared according to &lt;pname>, regardless
	of the order they appeared in the URI. If one URI has a
	parameter name not found in the other, the two URIs are not
	equal.</t>

	<t>URI comparisons are case-insensitive.</t>
					</list></t>

	<t>Since "sms" URIs can contain multiple
	&lt;telephone-subscriber>s as well as &lt;sms-fields>, in
	addition to adopting the rules defined for comparing
	&lt;telephone-subscriber>s as defined by 
	<xref target="RFC3966"/>, two "sms" URIs are only equivalent
	if their &lt;sms-fields> are identical, and if all
	&lt;telephone-subscriber>s, compared pairwise as a set (i.e.,
	without taking sequence into consideration), are
	equivalent.</t>

			</section>
	<section title="Examples of Use" anchor="uri-examples">
		<t>
		<figure>
		<artwork>sms:+15105550101</artwork>
		</figure>
				</t>
	<t>This indicates an SMS-message-capable recipient at the
	given telephone number. The message is sent using the user
	agent's default SMS delivery method.</t>

				<t>
					<figure>
				<artwork>sms:+15105550101,+15105550102</artwork>
					</figure>
				</t>
	<t>This indicates SMS-message-capable recipients at the given
	telephone numbers. The identical message should be sent to
	both recipients using the user agent's default SMS delivery
	method.</t>

				<t>
					<figure>
				<artwork>sms:+15105550101?body=hello%20there</artwork>
					</figure>
				</t>
	<t>In this case, a message (initially being set to "hello
	there", which may be modified by the user before sending) will
	be sent via SMS using the user agent's default SMS delivery
	method.</t>

			</section>
<section title='Using "sms" URIs in HTML Forms' anchor="htmlforms">
	<t>When using an "sms" type URI as an action URI for HTML form
	submission <xref target="HTML401"/>, the form contents MUST be
	packaged in the SMS message just as they are packaged when
	using a "mailto" URI <xref target="RFC2368"/>, using the
	"application/x-www-form-urlencoded" media type (as defined by
	HTML <xref target="HTML401"/>), effectively packaging all form
	data into URI-compliant syntax <xref target="RFC3986"/>. The
	SMS message MUST NOT contain any HTTP header fields, only the
	form data. The media type is implicit. It MUST NOT be
	transferred in the SMS message. Since the SMS message contains
	the form field values, the body &lt;sms-field> of an
	"sms" type URI used for an HTML form will be ignored.</t>

	<t>The character encoding used for form submissions MUST be
	UTF-8 <xref target="RFC3629"/>. It should be noted, however,
	that user agents MUST percent-encode form submissions before
	sending them (this encoding is specified by the URI syntax
	<xref target="RFC3986"/>).</t>

	<t>The user agent SHOULD inform the user about the possible
	security hazards involved when submitting the form (it is
	probably being sent as plain text over an air interface).</t>

	<t>If the form submission is longer than the maximum SMS
	message size, the user agent MAY either concatenate SMS
	messages, if it is able to do so, or it MAY refuse to send the
	message. The user agent MUST NOT send out partial form
	submissions.</t>

			</section>
		</section>
		<section title="URI Scheme Registration" anchor="registration">
	<t>This memo requests the registration of the Uniform Resource
	Identifier (URI) scheme "sms" for specifying one or more
	recipients for an SMS message. The registration request
	complies with <xref target="RFC4395"/>.</t>

	<section title="URI Scheme Name">
		<t>sms</t>
	</section>
	<section title="Status">
		<t>Permanent</t>
	</section>
	<section title="URI Scheme Syntax">
		<t>See <xref target="uri-syntax"/>.</t>
	</section>
	<section title="URI Scheme Semantics">
		<t>The "sms" URI scheme defines a way for a message
		to be composed and then transmitted using the
		SMS message transmission method. This scheme can thus
		be compared to be "mailto" URI scheme
		<xref target="RFC2368"/>. See
		<xref target="processing"/> for the details of
		operation.</t>

			</section>
<section title="Encoding Considerations">
	<t>The optional body field of "sms" URIs may contain a message
	text, but this text uses percent-encoded UTF-8 characters and
	thus can always be represented using URI characters. See
	<xref target="uri-syntax"/> for the details of encoding.</t>

			</section>
<section title="Applications/Protocols That Use This URI Scheme Name">
	<t>The "sms" URI scheme is intended to be used in a similar
	way as the "mailto" URI scheme <xref target="RFC2368"/>. By
	using "sms" URIs, authors can embed information into documents
	that can be used as a starting point for initiating message
	composition. Whether the client is sending the message itself
	(for example, over a GSM air interface) or redirecting the user
	to a third party for message composition (such as a Web
	service for sending SMS messages) is outside of the scope of
	the URI scheme definition.</t>

</section>
<section title="Interoperability Considerations">
	<t>No interoperability issues have been identified.</t>
</section>
<section title="Security Considerations">
	<t>See <xref target="security"/>.</t>
</section>
<section title="Contact">
	<figure>
		<artwork>
Erik Wilde
School of Information
UC Berkeley
Berkeley, CA 94720-4600
U.S.A.
tel:+1-510-6432252
mailto:dret@berkeley.edu
						</artwork>
				</figure>
			</section>

		</section>
<section title="Security Considerations" anchor="security">
	<t>SMS messages are transported without any provisions for
	privacy or integrity, so SMS users should be aware of these
	inherent security problems of SMS messages. Unlike electronic
	mail, where additional mechanisms exist to layer security
	features on top of the basic infrastructure, there currently
	is no such framework for SMS messages.</t>

	<t>SMS messages very often are delivered almost
	instantaneously (if the receiving SMS client is online), but
	there is no guarantee for when SMS messages will be
	delivered. In particular, SMS messages between different
	network operators sometimes take a long time to be delivered
	(hours or even days) or are not delivered at all, so
	applications SHOULD NOT make any assumptions about the
	reliability and performance of SMS message transmission.</t>

	<t>In most networks, sending SMS messages is not a free
	service. Therefore, SMS clients MUST make sure that any action
	that incurs costs is acknowledged by the end user, unless
	explicitly instructed otherwise by the end user. If an SMS
	client has different ways of submitting an SMS message (such
	as a Web service and a phone line), then the end user MUST
	have a way to control which way is chosen.</t>

	<t>SMS clients often are limited devices (typically mobile
	phones), and the sending SMS client SHOULD NOT make any
	assumptions about the receiving SMS client supporting any
	non-standard services, such as proprietary message
	concatenation or proprietary content types. However, if the
	sending SMS client has prior knowledge about the receiving SMS
	client, then he MAY use this knowledge to compose non-standard
	SMS messages.</t>

	<t>There are certain special SMS messages defined in the SMS
	specification <xref target="SMS"/> that can be used, for
	example, to turn on indicators on the phone display or to
	send data to certain communication ports (comparable to UDP
	ports) on the device. Certain proprietary systems (for
	example, the Wireless Application Protocol
	<xref target="WAP"/>) define configuration messages that may
	be used to reconfigure the devices remotely. Any SMS client
	SHOULD make sure that malicious use of such messages is not
	possible, for example, by filtering out certain SMS User Data
	header fields. Gateways that accept SMS messages (e.g., in
	email messages or Web forms) and pass them on to an SMSC
	SHOULD implement this kind of "firewalling" approach as
	well.</t>

	<t>Because of the narrow bandwidth of the SMS communications
	channel, there should also be checks in place for excessively
	long concatenated messages. As an example, it may take two
	minutes to transfer thirty concatenated text messages.</t>

	<t>Unchecked input from a user MUST NOT be used to populate
	any other fields in an SMS message other than the User Data
	field (not including the User Data header field). All other
	parts, including the User Data header, of the short message
	should only be generated by trusted means.</t>

	<t>By including "sms" URIs in unsolicited messages
	(a.k.a. "spam") or other types of advertising, the originator
	of the "sms" URIs may attempt to reveal an individual's phone
	number and/or to link the identity (i.e., email address) used
	for messaging with the identity (i.e., phone number) used for
	the mobile phone. This attempt to collect information may be a
	privacy issue, and user agents may make users aware of that
	risk before composing or sending SMS messages. Users agents
	that do not provide any feedback about this privacy issue
	make users more vulnerable to this kind of attack.</t>

	<t>A user agent SHOULD NOT send out SMS messages without the
	knowledge of the user because of associated risks, which
	include sending masses of SMS messages to a subscriber without
	his consent, and the costs involved in sending an SMS
	message.</t>

	<t>As suggested functionality, the user agent MAY offer a
	possibility for the user to filter out those phone numbers
	that are expressed in local format, as most premium-rate
	numbers are expressed in local format, and because determining
	the correct local context (and hence the validity of the
	number to this specific user) may be very difficult.</t>

	<t>When using "sms" URIs as targets of forms (as described in
	<xref target="htmlforms"/>), the user agent SHOULD inform the
	user about the possible security hazards involved when
	submitting the form (it is probably being sent as plain text
	over an air interface).</t>

		</section>
		<section title="IANA Considerations" anchor="iana">
	<t>IANA has 
	registered the "sms" URI scheme, using the template in
	<xref target="registration"/>, in accordance with
	<xref target="RFC4395"/>.</t>

		</section>

		<section title="Acknowledgements">
			<t>This document has been prepared using the
			IETF document DTD described in
			<xref target="RFC2629"/>.</t>

	<t>Thanks to (listed alphabetically) Claudio Allocchio, Derek
	Atkins, Nevil Brownlee, John Cowan, Leslie Daigle, Lisa
	Dusseault, Miguel Garcia, Vijay Gurbani, Alfred Hoenes, Cullen
	Jennings, Graham Klyne, Larry Masinter, Alexey Melnikov,
	Michael Patton, Robert Sparks, and Magnus Westerlund for their
	comments.</t>

		</section>
	</middle>
	<back>

<?rfc rfcedstyle="no" ?> <!-- for the text output. in order to make the reference entry start on 
			   a new line for uri-clarification. -->

		<references title="Normative References" anchor="normative-references">

			<reference anchor="SMS" target="http://www.3gpp.org/ftp/Specs/archive/23_series/23.040/23040-701.zip">
				<front>
					<title>3GPP TS 23.040 V7.0.1 (2007-03): 3rd Generation Partnership Project; Technical Specification Group Core Network and Terminals; Technical realization of the Short Message Service (SMS) (Release 7)</title>
					<author>
						<organization abbrev="ETSI">European Telecommunications Standards Institute</organization>
					</author>
					<date month="March" year="2007"/>
				</front>
			</reference>
			<reference anchor="SMS-CHAR" target="http://www.3gpp.org/ftp/Specs/archive/03_series/03.38/0338-720.zip">
				<front>
					<title>TS 100 900 (GSM 03.38 version 7.2.0 Release 1998): Digital Cellular Telecommunications System (Phase 2+); Alphabets and language-specific information</title>
					<author>
						<organization abbrev="ETSI">European Telecommunications Standards Institute</organization>
					</author>
					<date month="July" year="1999"/>
				</front>
			</reference>
			<reference anchor="HTML401" target="http://www.w3.org/TR/html401/">
				<front>
					<title>HTML 4.01 Specification</title>
					<author initials="D." surname="Raggett" fullname="Dave Raggett">
						<organization abbrev="W3C">World Wide Web Consortium</organization>
					</author>
					<author initials="A." surname="Le Hors" fullname="Arnaud Le Hors">
						<organization abbrev="W3C">World Wide Web Consortium</organization>
					</author>
					<author initials="I." surname="Jacobs" fullname="Ian Jacobs">
						<organization abbrev="W3C">World Wide Web Consortium</organization>
					</author>
					<date month="December" year="1999"/>
				</front>
				<seriesInfo name="W3C" value="REC-html401"/>
			</reference>
			<reference anchor="RFC5234">
				<front>
					<title abbrev="ABNF">Augmented BNF for Syntax Specifications: ABNF</title>
					<author fullname="Dave Crocker" initials="D." role="editor" surname="Crocker">
						<organization>Brandenburg InternetWorking</organization>
						<address>
							<postal>
								<street>675 Spruce Dr.</street>
								<city>Sunnyvale</city>
								<region>CA</region>
								<code>94086</code>
								<country>US</country>
							</postal>
							<phone>+1.408.246.8253</phone>
							<email>dcrocker@bbiw.net</email>
						</address>
					</author>
					<author fullname="Paul Overell" initials="P." surname="Overell">
						<organization>THUS plc.</organization>
						<address>
							<postal>
								<street>1/2 Berkeley Square, </street>
								<street>99 Berkeley Street</street>
								<city>Glasgow</city>
								<code>G3 7HR</code>
								<country>UK</country>
							</postal>
							<email>paul.overell@thus.net</email>
						</address>
					</author>
					<date year="2008" month="January"/>

					<keyword>ABNF</keyword>
					<keyword>Augmented</keyword>
					<keyword>Backus-Naur</keyword>
					<keyword>Form</keyword>
					<keyword>electronic</keyword>
					<keyword>mail</keyword>
					<abstract>
						<t>Internet technical specifications often need to define a formal syntax. Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications. The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power. The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges. This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.</t>
					</abstract>
				</front>
				<seriesInfo name="STD" value="68" />
                                <seriesInfo name="RFC" value="5234"/>
			</reference>
			<reference anchor="RFC4395">
				<front>
					<title>Guidelines and Registration Procedures for New URI Schemes</title>
					<author initials="T." surname="Hansen" fullname="T. Hansen">
						<organization/>
					</author>
					<author initials="T." surname="Hardie" fullname="T. Hardie">
						<organization/>
					</author>
					<author initials="L." surname="Masinter" fullname="L. Masinter">
						<organization/>
					</author>
					<date year="2006" month="February"/>
					<abstract>
						<t>This document provides guidelines and recommendations for the definition of Uniform Resource Identifier (URI) schemes. It also updates the process and IANA registry for URI schemes. It obsoletes both RFC 2717 and RFC 2718. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
					</abstract>
				</front>
				<seriesInfo name="BCP" value="35"/>
				<seriesInfo name="RFC" value="4395"/>
				<format type="TXT" octets="31933" target="http://www.rfc-editor.org/rfc/rfc4395.txt"/>
			</reference>
			<reference anchor="RFC3986">
				<front>
					<title abbrev="URI Generic Syntax">Uniform Resource Identifier (URI): Generic Syntax</title>
					<author initials="T." surname="Berners-Lee" fullname="Tim Berners-Lee">
						<organization abbrev="W3C/MIT">World Wide Web Consortium</organization>
						<address>
							<postal>
								<street>Massachusetts Institute of Technology</street>
								<street>77 Massachusetts Avenue</street>
								<city>Cambridge</city>
								<region>MA</region>
								<code>02139</code>
								<country>USA</country>
							</postal>
							<phone>+1-617-253-5702</phone>
							<facsimile>+1-617-258-5999</facsimile>
							<email>timbl@w3.org</email>
							<uri>http://www.w3.org/People/Berners-Lee/</uri>
						</address>
					</author>
					<author initials="R." surname="Fielding" fullname="Roy T. Fielding">
						<organization abbrev="Day Software">Day Software</organization>
						<address>
							<postal>
								<street>5251 California Ave., Suite 110</street>
								<city>Irvine</city>
								<region>CA</region>
								<code>92617</code>
								<country>USA</country>
							</postal>
							<phone>+1-949-679-2960</phone>
							<facsimile>+1-949-679-2972</facsimile>
							<email>fielding@gbiv.com</email>
							<uri>http://roy.gbiv.com/</uri>
						</address>
					</author>
					<author initials="L." surname="Masinter" fullname="Larry Masinter">
						<organization abbrev="Adobe Systems">Adobe Systems Incorporated</organization>
						<address>
							<postal>
								<street>345 Park Ave</street>
								<city>San Jose</city>
								<region>CA</region>
								<code>95110</code>
								<country>USA</country>
							</postal>
							<phone>+1-408-536-3024</phone>
							<email>LMM@acm.org</email>
							<uri>http://larry.masinter.net/</uri>
						</address>
					</author>
					<date year="2005" month="January"/>
					<area>Applications</area>
					<keyword>uniform resource identifier</keyword>
					<keyword>URI</keyword>
					<keyword>URL</keyword>
					<keyword>URN</keyword>
					<keyword>WWW</keyword>
					<keyword>resource</keyword>
					<abstract>
						<t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource. This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet. The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every
			possible identifier. This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.</t>
					</abstract>
				</front>
				<seriesInfo name="STD" value="66"/>
				<seriesInfo name="RFC" value="3986"/>
				<format type="TXT" octets="141811" target="http://www.rfc-editor.org/rfc/rfc3986.txt"/>
				<format type="HTML" octets="213584" target="http://xml.resource.org/public/rfc/html/rfc3986.html"/>
				<format type="XML" octets="163534" target="http://xml.resource.org/public/rfc/xml/rfc3986.xml"/>
			</reference>
			<reference anchor="RFC2119">
				<front>
					<title abbrev="RFC Key Words">Key words for use in RFCs to Indicate Requirement Levels</title>
					<author initials="S." surname="Bradner" fullname="Scott Bradner">
						<organization>Harvard University</organization>
						<address>
							<postal>
								<street>1350 Mass. Ave.</street>
								<street>Cambridge</street>
								<street>MA 02138</street>
							</postal>
							<phone>- +1 617 495 3864</phone>
							<email>sob@harvard.edu</email>
						</address>
					</author>
					<date year="1997" month="March"/>
					<area>General</area>
					<keyword>keyword</keyword>
					<abstract>
						<t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. Authors who follow these guidelines should incorporate this phrase near the beginning of their document:</t>
						<t><list>
							<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119.</t>
						</list></t>
						<t>Note that the force of these words is modified by the requirement level of the document in which they are used.</t>
					</abstract>
				</front>
				<seriesInfo name="BCP" value="14"/>
				<seriesInfo name="RFC" value="2119"/>
				<format type="TXT" octets="4723" target="http://www.rfc-editor.org/rfc/rfc2119.txt"/>
				<format type="HTML" octets="17491" target="http://xml.resource.org/public/rfc/html/rfc2119.html"/>
				<format type="XML" octets="5777" target="http://xml.resource.org/public/rfc/xml/rfc2119.xml"/>
			</reference>
			<reference anchor="RFC3966">
				<front>
					<title>The tel URI for Telephone Numbers</title>
					<author initials="H." surname="Schulzrinne" fullname="H. Schulzrinne">
						<organization/>
					</author>
					<date year="2004" month="December"/>
					<abstract>
						<t>This document specifies the URI (Uniform Resource Identifier) scheme "tel". The "tel" URI describes resources identified by telephone numbers. This document obsoletes RFC 2806. [STANDARDS TRACK] </t>
					</abstract>
				</front>
				<seriesInfo name="RFC" value="3966"/>
				<format type="TXT" octets="40783" target="http://www.rfc-editor.org/rfc/rfc3966.txt"/>
			</reference>
			<reference anchor="Err203" target="http://www.rfc-editor.org">
				<front>
					<title>Errata ID 203</title>
					<author>
						<organization>RFC Errata</organization>
					</author>
				</front>
				<seriesInfo name="RFC" value="3629"/>
			</reference>
			<reference anchor="RFC3629">
				<front>
					<title>UTF-8, a transformation format of ISO 10646</title>
					<author initials="F." surname="Yergeau" fullname="F. Yergeau">
						<organization/>
					</author>
					<date year="2003" month="November"/>
					<abstract>
						<t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279. </t>
					</abstract>
				</front>
				<seriesInfo name="STD" value="63"/>
				<seriesInfo name="RFC" value="3629"/>
				<format type="TXT" octets="33856" target="http://www.rfc-editor.org/rfc/rfc3629.txt"/>
			</reference>

		</references>

		<references title="Informative References" anchor="informative-references">

			<reference anchor="uri-clarification" target="http://www.w3.org/TR/uri-clarification/">
				<front>
					<title>URIs, URLs, and URNs: Clarifications and Recommendations 1.0</title>
					<author>
						<organization abbrev="W3C">World Wide Web Consortium</organization>
					</author>
					<date month="September" year="2001"/>
				</front>
				<seriesInfo name="W3C" value="uri-clarification "/>
			</reference>
			<reference anchor="RFC2368">
				<front>
					<title>The mailto URL scheme</title>
					<author initials="P. E." surname="Hoffmann" fullname="Paul E. Hoffmann">
						<organization/>
					</author>
					<author initials="L." surname="Masinter" fullname="Larry Masinter">
						<organization/>
					</author>
					<author initials="J." surname="Zawinski" fullname="Jamie Zawinski">
						<organization/>
					</author>
					<date month="June" year="1998"/>
				</front>
				<seriesInfo name="RFC" value="2368"/>
			</reference>
			<reference anchor="RFC2838">
				<front>
					<title>Uniform Resource Identifiers for Television Broadcasts</title>
					<author initials="D." surname="Zigmond" fullname="D. Zigmond">
						<organization/>
					</author>
					<author initials="M." surname="Vickers" fullname="M. Vickers">
						<organization/>
					</author>
					<date year="2000" month="May"/>
					<abstract>
						<t>This document describes a widely-implemented URI scheme, as World-Wide Web browsers are starting to appear on a variety of consumer electronic devices, such as television sets and television set-top boxes, which are capable of receiving television programming from either terrestrial broadcast, satellite broadcast, or cable. In this context there is a need to reference television broadcasts using the URI format described in RFC 2396. This memo provides information for the Internet community. </t>
					</abstract>
				</front>
				<seriesInfo name="RFC" value="2838"/>
				<format type="TXT" octets="11405" target="http://www.rfc-editor.org/rfc/rfc2838.txt"/>
			</reference>
			<reference anchor="RFC2629">
				<front>
					<title>Writing I-Ds and RFCs using XML</title>
					<author initials="M.T." surname="Rose" fullname="Marshall T. Rose">
						<organization>Invisible Worlds, Inc.</organization>
						<address>
							<postal>
								<street>660 York Street</street>
								<city>San Francisco</city>
								<region>CA</region>
								<code>94110</code>
								<country>US</country>
							</postal>
							<phone>+1 415 695 3975</phone>
							<email>mrose@not.invisible.net</email>
							<uri>http://invisible.net/</uri>
						</address>
					</author>
					<date year="1999" month="June"/>
					<area>General</area>
					<keyword>RFC</keyword>
					<keyword>Request for Comments</keyword>
					<keyword>I-D</keyword>
					<keyword>Internet-Draft</keyword>
					<keyword>XML</keyword>
					<keyword>Extensible Markup Language</keyword>
					<abstract>
						<t>This memo presents a technique for using XML (Extensible Markup Language) as a source format for documents in the Internet-Drafts (I-Ds) and Request for Comments (RFC) series.</t>
					</abstract>
				</front>
				<seriesInfo name="RFC" value="2629"/>
				<format type="TXT" octets="48677" target="http://www.rfc-editor.org/rfc/rfc2629.txt"/>
				<format type="HTML" octets="0" target="http://xml.resource.org/public/rfc/html/rfc2629.html"/>
				<format type="XML" octets="53464" target="http://xml.resource.org/public/rfc/xml/rfc2629.xml"/>
			</reference>
			<reference anchor="WAP">
				<front>
					<title>Wireless Application Protocol - Architecture Specification (WAP-210-WAPArch-20010712)</title>
					<author>
						<organization>WAP Forum</organization>
					</author>
					<date month="July" year="2001"/>
				</front>
			</reference>
		</references>

<?rfc rfcedstyle="yes" ?>

		<section title="Syntax of 'telephone-subscriber'" anchor="telephone-subscriber-syntax">
			<t>The following syntax is reproduced from Section 3 of <xref target="RFC3966"/>. It defines the &lt;telephone-subscriber> part used in the "sms" URI scheme syntax. Please note that it includes Erratum 203 <xref target="Err203"/> for RFC 3966, which changes the definition of &lt;isdn-subaddress>.</t>

			<t>
				<figure>
					<artwork type="ABNF">
telephone-subscriber = global-number / local-number
global-number        = global-number-digits *par
local-number         = local-number-digits *par context *par
par                  = parameter / extension / isdn-subaddress
isdn-subaddress      = ";isub=" 1*paramchar
extension            = ";ext=" 1*phonedigit
context              = ";phone-context=" descriptor
descriptor           = domainname / global-number-digits
global-number-digits = "+" *phonedigit DIGIT *phonedigit
local-number-digits  =
   *phonedigit-hex (HEXDIG / "*" / "#")*phonedigit-hex
domainname           = *( domainlabel "." ) toplabel [ "." ]
domainlabel          = alphanum
                       / alphanum *( alphanum / "-" ) alphanum
toplabel             = ALPHA / ALPHA *( alphanum / "-" ) alphanum
parameter            = ";" pname ["=" pvalue ]
pname                = 1*( alphanum / "-" )
pvalue               = 1*paramchar
paramchar            = param-unreserved / unreserved / pct-encoded
unreserved           = alphanum / mark
mark                 = "-" / "_" / "." / "!" / "~" / "*" /
                       "'" / "(" / ")"
pct-encoded          = "%" HEXDIG HEXDIG
param-unreserved     = "[" / "]" / "/" / ":" / "&amp;" / "+" / "$"
phonedigit           = DIGIT / [ visual-separator ]
phonedigit-hex       = HEXDIG / "*" / "#" / [ visual-separator ]
visual-separator     = "-" / "." / "(" / ")"
alphanum             = ALPHA / DIGIT</artwork>
				</figure>
			</t>			
		</section>
	</back>
</rfc>
