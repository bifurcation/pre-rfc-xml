<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc='yes'?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc rfcedstyle="yes"?>
<?rfc strict="yes"?>
<?rfc sortrefs="yes"?>
<rfc category="info" number="5442">
  <front>
    <title abbrev="LEMONADE Architecture">LEMONADE Architecture - Supporting
    Open Mobile Alliance (OMA) Mobile Email (MEM) Using Internet Mail</title>

    <author fullname="Eric W. Burger" initials="E.W." surname="Burger">
      <organization>Consultant</organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <region>New Hampshire</region>

          <code></code>

          <country>USA</country>
        </postal>

        <phone></phone>

        <facsimile>+1 530-267-7447</facsimile>

        <email>eburger@standardstrack.com</email>

        <uri>http://www.standardstrack.com</uri>
      </address>
    </author>

    <author fullname="Glenn Parsons" initials="G.W." surname="Parsons">
      <organization>Nortel Networks</organization>

      <address>
        <postal>
          <street>3500 Carling Avenue</street>

          <city>Ottawa</city>

          <region>ON</region>

          <code>K2H 8E9</code>

          <country>Canada</country>
        </postal>

        <phone>+1 613 763 7582</phone>

        <email>gparsons@nortel.com</email>
      </address>
    </author>

    <date month="February" year="2009" />

    <area>Applications</area>

    <workgroup>LEMONADE Working Group</workgroup>

    <keyword>Phone</keyword>

    <!-- [rfced] Please insert any keywords (beyond those that appear in
    the title) for use on http://www.rfc-editor.org/rfcsearch.html. -->

    <abstract>
      <t>This document specifies the architecture for mobile email, as
      described by the Open Mobile Alliance (OMA), using Internet Mail
      protocols. This architecture was an important consideration for much of
      the work of the LEMONADE (Enhancements to Internet email to Support
      Diverse Service Environments) working group in the IETF. This document
      also describes how the LEMONADE architecture meets OMA's requirements
      for their Mobile Email (MEM) service.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>This document describes the architecture of OMA Mobile Email (MEM)
      using Internet Mail protocols defined by the IETF. The LEMONADE working
      group has enhanced many of these protocols for use in the mobile
      environment. The <xref target="PROFILE">LEMONADE profile </xref> and its
      revision, <xref target="PROFILE-bis"></xref>, summarize such protocols
      and protocol use. This document shows how the <xref target="MEM-req">OMA
      MEM Requirements document </xref>, <xref target="MEM-arch">OMA MEM
      Architecture </xref>, and <xref target="MEM-ts">OMA MEM Technical
      Specification </xref> relate to the work of LEMONADE in the IETF.</t>
    </section>

    <section title="OMA Mobile Email (MEM)">
      <t>The OMA Mobile Email (MEM) sub-working group has spent some time
      studying the requirements and architecture of mobile email. IETF
      LEMONADE has been liaising with them and has based much of its Internet
      Mail enhancements on their input. This section summarizes the output of
      the OMA.</t>

      <section title="OMA MEM Requirements">
        <t>The OMA MEM activity collected a set of use cases and derived
        requirements for a Mobile Email (MEM) enabler. The <xref
        target="MEM-req">OMA MEM Requirements document </xref> summarizes this
        work. Some requirements relate to email protocols, some involve other
        OMA technologies outside the scope of the IETF, and some relate to
        implementations and normative interoperability statements for clients
        and servers.</t>
      </section>

      <section title="OMA MEM Architecture">
        <t>This section introduces the OMA MEM Architecture.</t>

        <section title="OMA MEM Logical Architecture">
          <t>The OMA MEM activity has derived a logical architecture from the
          requirements and use cases described in <xref
          target="MEM-req"></xref>. A simplification for illustrative purposes
          is shown in <xref target="MEM_logical_architecture"></xref>, where
          arrows indicate content flows.</t>

          <figure anchor="MEM_logical_architecture"
                  title="Basic OMA MEM Logical Architecture">
            <artwork><![CDATA[                    __________ 
                   | Other    |
               +---| Mobile   |<--+
               |   | Enablers |   |
               |   |__________|   |
               |ME-4              |ME-3
              _v____           ___v____        ________ 
             |      |ME-1     |        |      |        |
             | MEM  |-------->|  MEM   |  I2  |  Email |
             |Client|     ME-2| Server |<---->| Server |
             |______|<--------|________|      |________|
                                  ^
                                  |ME-5
                                  |

]]></artwork>
          </figure>

          <t><xref target="MEM_logical_architecture"></xref> identifies the
          following elements: <list style="symbols">
              <t>The MEM client that implements the client-side functionality
              of the OMA Mobile Email enabler. It is also responsible for
              providing the mobile email user experience and interface to the
              user and storing the email and data to be sent to the MEM server
              when not connected.</t>

              <t>The MEM server that implements the server-side functionality
              of the OMA Mobile Email (MEM) enabler.</t>

              <t>The MEM protocol between the MEM client and MEM server. It is
              responsible for all the in-band data exchanges that take place
              between the MEM client and server in order to update the MEM
              client with email server changes and the email server with
              changes in the MEM client, and in order to send new email from
              the email server.</t>

              <t>Other OMA enablers that are needed to directly support the
              Mobile Email enabler. They are out of the scope of the IETF but
              may include support for: <list style="symbols">
                  <t>Client provisioning and management for over-the-air
                  installation of the MEM client on the device, provisioning
                  of the client settings, and revocation of client
                  privileges.</t>

                  <t>Messaging enablers for out-of-band notification, where
                  out-of-band notifications that are server-to-client event
                  exchanges are not transported by the MEM protocol but via
                  other channels.</t>

                  <t>Billing, charging, and so on.</t>
                </list></t>
            </list></t>

          <t>OMA identifies different interfaces: <list style="symbols">
              <t>ME-1: MEM client interface to interact via the MEM protocol
              with the MEM server.</t>

              <t>ME-2: Corresponding interface of the MEM server.</t>

              <t>ME-3: Out-of-band MEM server interfaces; for example, to
              support generation of server-to-client notifications.</t>

              <t>ME-4: Out-of-band MEM client interfaces (e.g., to receive
              server-to-client notifications).</t>

              <t>ME-5: Interface for management of MEM enabler server
              settings, user preferences, and filters, globally and per
              account.</t>
            </list></t>

          <t>The MEM server enables an email server. In a particular
          implementation, the email server may be packaged with (internal to
          it) the MEM server or be a separate component. In such cases,
          interfaces to the email server are out of scope of the OMA MEM
          specifications. In the present document, we focus on the case where
          the backend consists of IETF IMAP and SUBMIT servers. However, we
          also discuss the relationship to other cases. The I2 interface is an
          OMA notation to designate protocol / interfaces that are not
          specified by the MEM enabler but may be standardized elsewhere.</t>
        </section>

        <section title="OMA MEM Deployment Issues">
          <t>The <xref target="MEM-arch"> OMA MEM Architecture document
          </xref> further identifies deployment models.</t>

          <section title="OMA MEM Proxy">
            <t>The <xref target="MEM-arch"> OMA MEM Architecture document
            </xref> identifies OMA MEM server proxies as server components
            that may be deployed ahead of firewalls to facilitate firewall
            traversal.</t>
          </section>

          <section title="OMA MEM Deployment Cases">
            <t>OMA MEM identifies that each component (MEM client, MEM
            servers, other enablers, and the email server) may be deployed in
            different domains, possibly separated by firewalls and other
            network intermediaries. MEM proxies may be involved in front of a
            firewall that protects the MEM server domain.</t>

            <t>OMA MEM targets support of configurations where: <list
                style="symbols">
                <t>All components are within the same domain, such as in a
                mobile operator.</t>

                <t>The MEM client and other enablers are in the mobile
                operator domain, there is a MEM proxy, and the MEM server and
                email server are in the domain of the email service
                provider.</t>

                <t>The MEM client and other enablers as well as a MEM proxy
                are in the mobile operator domain, and the MEM server and
                email server are in the domain of the email service
                provider.</t>

                <t>The MEM client and other enablers are in the mobile
                operator domain, a MEM proxy is in a third-party service
                provider domain, and the MEM server and email server are in
                the domain of the email service provider.</t>

                <t>The MEM client, other enabler, and MEM server are in the
                mobile operator domain, and the email server is in the domain
                of the email service provider.</t>

                <t>The MEM client and other enablers are in the mobile
                operator domain, the MEM server is in a third-party service
                provider domain, and the email server is in the domain of the
                email service provider.</t>
              </list></t>

            <t>The email service provider can be a third-party service
            provider, a network service provider, or an enterprise email
            service.</t>
          </section>
        </section>
      </section>

      <section title="OMA MEM Technical Specification">
        <t>The OMA MEM activity will conclude with a specification for a
        Mobile Email (MEM) enabler. The ongoing work is in the <xref
        target="MEM-ts"> OMA MEM Technical Specification </xref>. LEMONADE is
        a basis for the mechanism. However, some additional details that are
        outside the scope of the IETF will also be included.</t>

        <t>OMA provides ways to perform provisioning via OMA client
        provisioning and device management. Other provisioning specifications
        are available (e.g., SMS based).</t>

        <t>OMA provides enablers to support out-of-band notification
        mechanisms, filter specifications (such as XDM), and remote deactivate
        devices, and to perform other non-Internet activities.</t>
      </section>
    </section>

    <section anchor="S.Architecture" title="IETF LEMONADE Architecture">
      <t>This section introduces the LEMONADE Architecture.</t>

      <t>The IETF LEMONADE activity has derived a <xref
      target="PROFILE-bis">LEMONADE profile </xref> with the logical
      architecture represented in <xref
      target="LEMONADE_logical_architecture"></xref>, where arrows indicate
      content flows.</t>

      <figure anchor="LEMONADE_logical_architecture"
              title="LEMONADE logical architecture">
        <artwork><![CDATA[                         ______________                
                        |              |
               _________| Notification |
              |         | Mechanism    |
              |         |______________|
              |Notif.              ^
              |Protocol            |
              |                 ___|______                                         
              |                |          |                 _____  
            __v__    IMAP      | LEMONADE |      ESMTP     |     |
           |     |<----------->| IMAP     |<---------------| MTA |
           | MUA |-            | Store    |                |_____|
           |_____| \           |__________|
                    \               |       
                     \              |URLAUTH 
                      \SUBMIT       |
                       \        ____v_____ 
                        \      |          |                 _____ 
                         \     | LEMONADE |      ESMTP     |     |
                          ---->| Submit   |--------------->| MTA |
                               | Server   |                |_____|
                               |__________|

]]></artwork>
      </figure>

      <t>The <xref target="PROFILE">LEMONADE profile </xref> assumes: <list
          style="symbols">
          <t><xref target="RFC3501">IMAP protocol</xref>, including <xref
          target="PROFILE">LEMONADE profile extensions</xref>.</t>

          <t><xref target="RFC4409">SUBMIT protocol</xref>, including LEMONADE
          profile extensions.</t>

          <t>LEMONADE profile compliant IMAP store connected to an MTA (Mail
          Transfer Agent) via the <xref target="EMAIL">ESMTP</xref>.</t>

          <t>LEMONADE profile compliant submit server connected to an MTA,
          often via the ESMTP.</t>

          <t>Out-of-band server-to-client notifications relying on external
          notification mechanisms (and notification protocols) that may be out
          of the scope of the LEMONADE profile.</t>

          <t>LEMONADE-aware MUA (Mail User Agent). While use of out-of-band
          notification is described in the LEMONADE profile, support for the
          underlying notifications mechanisms/protocols is out of the scope of
          the LEMONADE specifications.</t>
        </list></t>

      <t>Further details on the IETF email protocol stack and architecture can
      be found in <xref target="MAIL"></xref>.</t>

      <section title="Relationship between the OMA MEM and LEMONADE Logical Architectures">
        <t><xref target="LEMONADE_map_MEM_logical_architecture"></xref>
        illustrates the mapping of the IETF LEMONADE logical architecture on
        the OMA MEM logical architecture.</t>

        <figure anchor="LEMONADE_map_MEM_logical_architecture"
                title="Mapping of LEMONADE Logical Architecture                 onto the OMA MEM Logical Architecture">
          <artwork><![CDATA[                       _____________________                             
                      | Other_Mob. Enablers |
                      | |--------------|    |
               _________| Notification |    |
              |       | | Mechanism    |    |
              |       | |______________|    |
              |Notif. |____________^________|
              |Protocol      ______|__________ 
         ME-4 |             |   ___|_ME-3_    |
           ___|____         |  |          |   |         _____ 
          | __v__ |  IMAP   |  | LEMONADE |   |  ESMTP |     |
          ||     |<----------->| IMAP     |<-----------| MTA |
          || MUA ||   ME-2a |  | Store    |   |        |_____|
          ||_____||\ME-1    |  |__________|   |
          | MEM   | \       |       |         |
          | Client|  \      |       |URLAUTH  |
          |_______|   \SUBMIT       |         |
                       \    |   ____v_____    |                                    
                        \   |  |          |   |         _____ 
                         \  |  | LEMONADE |   |  ESMTP |     |
                          ---->| Submit   |----------->| MTA |
                      ME-2b |  | Server   |   |        |_____|
                            |  |__________|   |
                            |MEM        Email |
                            |Server     Server|
                            |_________________|
                                     ^
                                     |ME-5
                                     |

]]></artwork>
        </figure>

        <t>As described in <xref target="S.Architecture"></xref>, the LEMONADE
        profile assumes LEMONADE profile compliant IMAP stores and SUBMIT
        servers. Because the LEMONADE profile extends the IMAP store and the
        SUBMIT server, the mobile enablement of email provided by the LEMONADE
        profile is directly provided in these servers. Mapping to the OMA MEM
        logical architecture for the case considered and specified by the
        LEMONADE profile, we logically combine the MEM server and email
        server. However, in LEMONADE we split them logically into a distinct
        LEMONADE message store and a LEMONADE SUBMIT server. ME-2 consists of
        two interfaces. ME-2a is IMAP extended according to the LEMONADE
        profile. ME-2b is SUBMIT extended according to the LEMONADE
        profile.</t>

        <t>The MUA is part of the MEM client.</t>

        <t>The external notifications mechanism is part of the OMA enablers
        specified by the OMA.</t>
      </section>

      <section title="LEMONADE Realization of OMA MEM with non-LEMONADE-Compliant Servers">
        <t>The OMA MEM activity is not limited to enabling LEMONADE-compliant
        servers. It explicitly identifies the need to support other backends.
        This is, of course, outside the scope of the IETF LEMONADE
        activity.</t>

        <section anchor="S.rIMAP"
                 title="LEMONADE Realization of OMA MEM with non-LEMONADE IMAP Servers">
          <t><xref target="LEMONADE_logical_imap_non_lem_architecture"></xref>
          illustrates the case of IMAP servers that are not
          LEMONADE-compliant. In such case, the I2 interface between the MEM
          server components and the IMAP store and SUBMIT server are IMAP and
          SUBMIT without LEMONADE extensions.</t>

          <t>It is important to note the realizations are of a schematic
          nature and do not dictate actual implementation. For example, one
          could envision collocating the LEMONADE MEM enabler server and the
          submit server shown in <xref
          target="LEMONADE_logical_imap_non_lem_architecture"></xref> in a
          single instantiation of the implementation. Likewise, we consciously
          label the LEMONADE MEM enabler as neither an IMAP proxy nor an IMAP
          back-to-back user agent. LEMONADE leaves the actual implementation
          to the developer.</t>

          <figure anchor="LEMONADE_logical_imap_non_lem_architecture"
                  title="Architecture to Support Non-LEMONADE IMAP                   Servers with a LEMONADE Realization of an OMA MEM                   Enabler">
            <artwork><![CDATA[              ______________ 
             |              |
    _________| Notification |
   |         | Mechanism    |
   |         |______________|
   |Notif.            ^
   |Protocol          |
   |               ___|______          _____________ 
   |              | LEMONADE |        |             |        _____ 
 __v__    IMAP    | MEM      |  IMAP  |NON-LEMONADE | ESMTP |     |
|     |<--------->|Enabler   |<------>|IMAP         |<----->| MTA |
| MUA |\   ME-2a  | Server   |        |Store        |       |_____|
|_____| \         |__________|        |_____________|
         \             |
          \            |URLAUTH
           \SUBMIT     |
            \      ____v_____          _____________ 
             \    |          |        |             |        _____ 
              \   | LEMONADE | SUBMIT |NON-LEMONADE | ESMTP |     |
               -->|  MEM     |        |Submit       |       |     |
                  | Enabler  |------->|Server       |------>| MTA |
           ME-2b  | Server   |        |             |       |_____|
                  |__________|        |_____________|

]]></artwork>
          </figure>
        </section>

        <section title="LEMONADE Realization of OMA MEM with non-IMAP Servers">
          <t><xref target="LEMONADE_logical_prop_architecture"></xref>
          illustrates the cases where the message store and submit servers are
          not IMAP store or submit servers. They may be Post Office Protocol
          (POP3) servers or other proprietary message stores.</t>

          <figure anchor="LEMONADE_logical_prop_architecture"
                  title="Architecture to Support Non-IMAP Servers with a LEMONADE Realization of OMA MEM Enabler">
            <artwork><![CDATA[              ______________ 
             |              |
    _________| Notification |
   |         | Mechanism    |
   |         |______________|
   |Notif.            ^
   |Protocol          |
   |               ___|______          _____________ 
   |              | LEMONADE |        |             |        _____ 
 __v__    IMAP    | MEM      |    I2  |Proprietary  | ESMTP |     |
|     |<--------->|Enabler   |<------>|Message      |<----->| MTA |
| MUA |\   ME-2a  | Server   |        |Store        |       |_____|
|_____| \         |__________|        |_____________|
         \             |             
          \            |URLAUTH
           \SUBMIT     |
            \      ____v_____          _____________ 
             \    |          |        |             |        _____ 
              \   | LEMONADE |    I2  |Proprietary  | ESMTP |     |
               -->| MEM      |        |Submit       |       |     |
                  | Enabler  |------->|Server       |------>| MTA |
           ME-2b  | Server   |        |             |       |_____|
                  |__________|        |_____________|

]]></artwork>
          </figure>

          <t>I2 designates proprietary adapters to the backends.</t>
        </section>
      </section>
    </section>

    <section title="Filters and Server-to-Client Notifications and LEMONADE">
      <t>OMA MEM <xref target="MEM-req">Requirements</xref> and <xref
      target="MEM-arch">Architecture</xref> emphasize the need to provide
      mechanisms for server-to-client notifications of email events and
      filtering. <xref target="LEMONADE_logical_notif_architecture"></xref>
      illustrates how notification and filtering works in the <xref
      target="PROFILE">LEMONADE profile</xref>.</t>

      <figure anchor="LEMONADE_logical_notif_architecture"
              title="Filtering Mechanism Defined in LEMONADE Architecture">
        <artwork><![CDATA[                ______________ 
               |              |
      _________| Notification |
     |         | Mechanism    |
     |         |______________|
     |Notif.              ^
     |Protocol -------\  _|__
     |   ______|    ___\>|NF|____ 
     |  |          |     ----    |                 _____ 
   __v__|   IMAP   |__  LEMONADE |___   ESMTP   __|     |
  |     |<-------->|VF| IMAP     |DF |<--------|AF| MTA |
  | MUA |\   ME-2a |--  Store    |---           --|_____|
  |_____| \        |_____________| ^                     
         \_\_______________|_______|
            \              |URLAUTH
             \SUBMIT       |
              \        ____v_____
               \      |          |                 _____ 
                \     | LEMONADE |      ESMTP     |     |
                 ---->| Submit   |--------------->| MTA |
             ME-2b    | Server   |                |_____|
                      |__________|

]]></artwork>
      </figure>

      <t>In <xref target="LEMONADE_logical_notif_architecture"></xref>, we
      define four categories of filters: <list style="symbols">
          <t>AF: Administrative Filters - The email service provider usually
          sets administrative filters. The user typically does not configure
          AF. AF applies policies covering content filtering, virus
          protection, spam filtering, etc.</t>

          <t>DF: Deposit Filters - Filters that are executed on deposit of new
          emails. They can be defined as <xref target="SIEVE">SIEVE
          filters</xref>. They can include <xref target="RFC5230">vacation
          notices</xref>. As SIEVE filters, one can administer them using the
          <xref target="MANAGESIEVE">SIEVE management protocol</xref>.</t>

          <t>VF: View Filters - Filters that define which emails are visible
          to the MUA. View filters can be performed via IMAP using the
          facilities described in <xref target="NOTIFICATIONS"></xref>.</t>

          <t>NF: Notification Filters - Filters that define for what email
          server event an out-of-band notification is sent to the client, as
          described in <xref target="NOTIFICATIONS"></xref>.</t>
        </list></t>

      <t>Refer to the aforementioned references for implementation and
      management of the respective filters.</t>
    </section>

    <section title="Security Considerations">
      <t>We note there are security risks associated with:<list
          style="symbols">
          <t>Out-of-band notifications</t>

          <t>Server configuration by client</t>

          <t>Client configuration by server</t>

          <t>Presence of MEM proxy servers</t>

          <t>Presence of MEM servers as intermediaries</t>

          <t>Measures to address the need to traverse firewalls</t>
        </list></t>

      <t>We refer the reader to the relevant Internet Mail, IMAP, SUBMIT, and
      Lemonade documents for how we address these issues.</t>
    </section>

    <section title="Acknowledgements">
      <t>The authors acknowledge and appreciate the work and comments of the
      IETF LEMONADE working group and the OMA MEM working group. We extracted
      the contents of this document from sections of <xref
      target="PROFILE-bis"></xref> by Stephane Maes, Alexey Melnikov, and Dave
      Cridland, as well as sections of <xref target="NOTIFICATIONS"></xref> by
      Stephane Maes and Ray Cromwell.</t>
    </section>
  </middle>

  <back>
    <references title="Informative References">
      <reference anchor="MEM-arch">
        <front>
          <title>Mobile Email Architecture Document</title>

          <author>
            <organization>Open Mobile Alliance</organization>
          </author>

          <date month="June" year="2007" />
        </front>

        <seriesInfo name="OMA,"
                    value="http://member.openmobilealliance.org/ftp/public_documents/mwg/MEM/Permanent_documents/OMA-AD-Mobile_Email-V1_0_0-20070614-D.zip" />
      </reference>

      <reference anchor="MEM-req">
        <front>
          <title>Mobile Email Requirements Document</title>

          <author>
            <organization>Open Mobile Alliance</organization>
          </author>

          <date month="Oct" year="2005" />
        </front>

        <seriesInfo name="OMA," value="http://www.openmobilealliance.org/" />

        <format target="http://www.openmobilealliance.org/release_program/docs/RD/OMA-RD-MobileEmail-V1_0_20051018-C.pdf"
                type="PDF" />
      </reference>

      <reference anchor="MEM-ts">
        <front>
          <title>Mobile Email Technical Specification</title>

          <author>
            <organization>Open Mobile Alliance</organization>
          </author>

          <date month="Oct" year="2007" />
        </front>

        <seriesInfo name="OMA,"
                    value="Work in Progress, http://www.openmobilealliance.org/" />

        <format target="http://www.openmobilealliance.org/ftp/Public_documents/MWG/MEM/Permanent_documents/OMA-TS-Mobile_Email-V1_0-20071019-D.zip"
                type="ZIP" />
      </reference>

      <reference anchor="PROFILE">
        <front>
          <title>Internet Email to Support Diverse Service Environments
          (Lemonade) Profile</title>

          <author fullname="S. Maes" initials="S." surname="Maes">
            <organization></organization>
          </author>

          <author fullname="A. Melnikov" initials="A." surname="Melnikov">
            <organization></organization>
          </author>

          <date month="June" year="2006" />

          <abstract>
            <t>This document describes a profile (a set of required
            extensions, restrictions, and usage modes) of the IMAP and mail
            submission protocols. This profile allows clients (especially
            those that are constrained in memory, bandwidth, processing power,
            or other areas) to efficiently use IMAP and Submission to access
            and submit mail. This includes the ability to forward received
            mail without needing to download and upload the mail, to optimize
            submission, and to efficiently resynchronize in case of loss of
            connectivity with the server.&lt;/t&gt;&lt;t&gt; The Internet
            Email to Support Diverse Service Environments (Lemonade) profile
            relies upon extensions to IMAP and Mail Submission protocols;
            specifically, the URLAUTH and CATENATE IMAP protocol (RFC 3501)
            extensions and the BURL extension to the SUBMIT protocol (RFC
            4409). [STANDARDS TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="4550" />

        <format octets="48790" target="ftp://ftp.isi.edu/in-notes/rfc4550.txt"
                type="TXT" />
      </reference>

      <reference anchor="PROFILE-bis">
        <front>
          <title>The Lemonade Profile</title>

          <author fullname="Dave Cridland" initials="D" surname="Cridland">
            <organization></organization>
          </author>

          <author fullname="Alexey Melnikov" initials="A" surname="Melnikov">
            <organization></organization>
          </author>

          <author fullname="Stephane Maes" initials="S" surname="Maes">
            <organization></organization>
          </author>

          <date day="30" month="September" year="2008" />

          <abstract>
            <t>This document describes a profile (a set of required
            extensions, restrictions and usage modes) of the IMAP and mail
            submission protocols. This profile allows clients (especially
            those that are constrained in memory, bandwidth, processing power,
            or other areas) to efficiently use IMAP and Submission to access
            and submit mail. This includes the ability to forward received
            mail without needing to download and upload the mail, to optimize
            submission and to efficiently resynchronize in case of loss of
            connectivity with the server. The Lemonade profile relies upon
            several extensions to IMAP and Mail Submission protocols.</t>
          </abstract>
        </front>

        <seriesInfo name="Work in" value="Progress" />

        <format target="http://www.ietf.org/internet-drafts/draft-ietf-lemonade-profile-bis-11.txt"
                type="TXT" />
      </reference>

      <reference anchor="RFC3501">
        <front>
          <title>INTERNET MESSAGE ACCESS PROTOCOL - VERSION 4rev1</title>

          <author fullname="M. Crispin" initials="M." surname="Crispin">
            <organization></organization>
          </author>

          <date month="March" year="2003" />

          <abstract>
            <t>The Internet Message Access Protocol, Version 4rev1 (IMAP4rev1)
            allows a client to access and manipulate electronic mail messages
            on a server. IMAP4rev1 permits manipulation of mailboxes (remote
            message folders) in a way that is functionally equivalent to local
            folders. IMAP4rev1 also provides the capability for an offline
            client to resynchronize with the server. IMAP4rev1 includes
            operations for creating, deleting, and renaming mailboxes,
            checking for new messages, permanently removing messages, setting
            and clearing flags, RFC 2822 and RFC 2045 parsing, searching, and
            selective fetching of message attributes, texts, and portions
            thereof. Messages in IMAP4rev1 are accessed by the use of numbers.
            These numbers are either message sequence numbers or unique
            identifiers. IMAP4rev1 supports a single server. A mechanism for
            accessing configuration information to support multiple IMAP4rev1
            servers is discussed in RFC 2244. IMAP4rev1 does not specify a
            means of posting mail; this function is handled by a mail transfer
            protocol such as RFC 2821. [STANDARDS TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="3501" />

        <format octets="227640"
                target="ftp://ftp.isi.edu/in-notes/rfc3501.txt" type="TXT" />
      </reference>

      <reference anchor="EMAIL">
        <front>
          <title>Simple Mail Transfer Protocol</title>

          <author fullname="J. Klensin" initials="J." surname="Klensin">
            <organization></organization>
          </author>

          <date month="October" year="2008" />

          <abstract>
            <t>This document is a specification of the basic protocol for
            Internet electronic mail transport. It consolidates, updates, and
            clarifies several previous documents, making all or parts of most
            of them obsolete. It covers the SMTP extension mechanisms and best
            practices for the contemporary Internet, but does not provide
            details about particular extensions. Although SMTP was designed as
            a mail transport and delivery protocol, this specification also
            contains information that is important to its use as a "mail
            submission" protocol for "split-UA" (User Agent) mail reading
            systems and mobile environments. [STANDARDS TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="5321" />

        <format octets="225929"
                target="ftp://ftp.isi.edu/in-notes/rfc5321.txt" type="TXT" />
      </reference>

      <reference anchor="RFC4409">
        <front>
          <title>Message Submission for Mail</title>

          <author fullname="R. Gellens" initials="R." surname="Gellens">
            <organization></organization>
          </author>

          <author fullname="J. Klensin" initials="J." surname="Klensin">
            <organization></organization>
          </author>

          <date month="April" year="2006" />

          <abstract>
            <t>This memo splits message submission from message relay,
            allowing each service to operate according to its own rules (for
            security, policy, etc.), and specifies what actions are to be
            taken by a submission server.&lt;/t&gt;&lt;t&gt; Message relay and
            final delivery are unaffected, and continue to use SMTP over port
            25.&lt;/t&gt;&lt;t&gt; When conforming to this document, message
            submission uses the protocol specified here, normally over port
            587.&lt;/t&gt;&lt;t&gt; This separation of function offers a
            number of benefits, including the ability to apply specific
            security or policy requirements. [STANDARDS TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="4409" />

        <format octets="34911" target="ftp://ftp.isi.edu/in-notes/rfc4409.txt"
                type="TXT" />
      </reference>

      <reference anchor="RFC5230">
        <front>
          <title>Sieve Email Filtering: Vacation Extension</title>

          <author fullname="T. Showalter" initials="T." surname="Showalter">
            <organization></organization>
          </author>

          <author fullname="N. Freed" initials="N." surname="Freed">
            <organization></organization>
          </author>

          <date month="January" year="2008" />

          <abstract>
            <t>This document describes an extension to the Sieve email
            filtering language for an autoresponder similar to that of the
            Unix "vacation" command for replying to messages. Various safety
            features are included to prevent problems such as message loops.
            [STANDARDS TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="5230" />

        <format octets="29822" target="ftp://ftp.isi.edu/in-notes/rfc5230.txt"
                type="TXT" />
      </reference>

      <reference anchor="SIEVE">
        <front>
          <title>Seive: An Email Filtering Language</title>

          <author fullname="Philip Guenther" initials="P." surname="Guenther">
            <organization></organization>
          </author>

          <author fullname="Tim Showalter" initials="T." surname="Showalter">
            <organization></organization>
          </author>

          <date month="January" year="2008" />
        </front>

        <seriesInfo name="RFC" value="5228" />

        <format target="ftp://ftp.isi.edu/in-notes/rfc5228.txt" type="TXT" />
      </reference>

      <reference anchor="NOTIFICATIONS">
        <front>
          <title>Lemonade Notifications Architecture</title>

          <author fullname="Randall Gellens" initials="R" surname="Gellens">
            <organization></organization>
          </author>

          <author fullname="Stephane Maes" initials="S" surname="Maes">
            <organization></organization>
          </author>

          <date day="8" month="July" year="2008" />
        </front>

        <seriesInfo name="Work in" value="Progress" />

        <format target="http://www.ietf.org/internet-drafts/draft-ietf-lemonade-notifications-10.txt"
                type="TXT" />
      </reference>

      <reference anchor="MAIL">
        <front>
          <title>Internet Mail Architecture</title>

          <author fullname="Dave Crocker" initials="D" surname="Crocker">
            <organization></organization>
          </author>

          <date day="31" month="October" year="2008" />
        </front>

        <seriesInfo name="Work in" value="Progress" />

        <format target="http://www.ietf.org/internet-drafts/draft-crocker-email-arch-11.txt"
                type="TXT" />
      </reference>

      <reference anchor="MANAGESIEVE">
        <front>
          <title>A Protocol for Remotely Managing Sieve Scripts</title>

          <author fullname="Alexey Melnikov" initials="A" surname="Melnikov">
            <organization></organization>
          </author>

          <author fullname="Tim  Martin" initials="T" surname="Martin">
            <organization></organization>
          </author>

          <date day="1" month="January" year="2009" />
        </front>

        <seriesInfo name="Work in" value="Progress" />

        <format target="http://www.ietf.org/internet-drafts/draft-ietf-sieve-managesieve-01.txt"
                type="TXT" />
      </reference>
    </references>
  </back>
</rfc>
