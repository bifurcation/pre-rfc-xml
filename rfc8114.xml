<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc number="8114"
     category="std" 
     submissionType="IETF"
     consensus="yes"
     ipr="trust200902">

  <front>
    <title abbrev="IPv4 over IPv6 Multicast">Delivery of IPv4 Multicast
    Services to IPv4 Clients over an IPv6 Multicast Network</title>

    <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
      <organization>Orange</organization>

      <address>
        <postal>
          <street></street>

          <city>Rennes</city>

          <region></region>

          <code>35000</code>

          <country>France</country>
        </postal>

        <phone></phone>

        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <author fullname="Chao Qin" initials="C." surname="Qin">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street></street>

          <city>Shanghai</city>

          <region></region>

          <code></code>

          <country>China</country>
        </postal>

        <phone></phone>

        <email>jacni@jacni.com</email>
      </address>
    </author>

    <author fullname="Christian Jacquenet" initials="C." surname="Jacquenet">
      <organization>Orange</organization>

      <address>
        <postal>
          <street></street>

          <city>Rennes</city>

          <region></region>

          <code>35000</code>

          <country>France</country>
        </postal>

        <phone></phone>

        <email>christian.jacquenet@orange.com</email>
      </address>
    </author>

    <author fullname="Yiu L. Lee" initials="Y." surname="Lee">
      <organization>Comcast</organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <region></region>

          <code></code>

          <country>United States of America</country>
        </postal>

        <phone></phone>

        <email>yiu_lee@cable.comcast.com</email>

        <uri>http://www.comcast.com</uri>
      </address>
    </author>

    <author fullname="Qian Wang" initials="Q." surname="Wang">
      <organization>China Telecom</organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <region></region>

          <code></code>

          <country>China</country>
        </postal>

        <phone>+86 10 58502462</phone>

        <email>13301168516@189.cn</email>
      </address>
    </author>

    <date month="March" year="2017" />

    <area>Internet</area>

    <workgroup>Softwire WG</workgroup>

    <keyword>Multicast</keyword>
    <keyword>DS-Lite</keyword> 
    <keyword>IPv4-IPv6 Interconnection</keyword>
    <keyword>PREFIX64</keyword> 
    <keyword>SSM</keyword>
    <keyword>ASM</keyword>
    <keyword>IPv4 service continuity</keyword>
    <keyword>Multicast service continuity</keyword>
    <keyword>IPv6-only</keyword>
    <keyword>IPv6-only multicast</keyword>
    <keyword>PIM</keyword>
    <keyword>MLD</keyword>
    <keyword>IGMP</keyword>
    <keyword>A+P</keyword>
    <keyword>MAP</keyword> 
    <keyword>MAP-E</keyword>
    <keyword>address-sharing</keyword>
    <keyword>CGN</keyword>
    <keyword>NAT64</keyword> 
    <keyword>IPv4 over IPv6</keyword>
    <keyword>IPv6 Address Synthesis</keyword>
    <keyword>Any-Source Multicast</keyword>
    <keyword>Source-Specific Multicast</keyword>

    <abstract>
      <t>This document specifies a solution for the delivery of IPv4 multicast
      services to IPv4 clients over an IPv6 multicast network. The solution
      relies upon a stateless IPv4-in-IPv6 encapsulation scheme and uses an
      IPv6 multicast distribution tree to deliver IPv4 multicast traffic. The
      solution is particularly useful for the delivery of multicast service
      offerings to customers serviced by Dual-Stack Lite (DS-Lite).</t>
    </abstract>
  </front>

  <!-- ***** MIDDLE MATTER ***** -->

  <middle>
    <section title="Introduction">
      <t>DS-Lite <xref target="RFC6333"></xref> is an IPv4 address-sharing
      technique that enables operators to multiplex public IPv4 addresses
      while provisioning only IPv6 to users. A typical DS-Lite scenario is the
      delivery of an IPv4 service to an IPv4 user over an IPv6 network
      (denoted as a 4-6-4 scenario). <xref target="RFC6333"></xref> covers
      unicast services exclusively.</t>

      <t>This document specifies a generic solution for the delivery of IPv4
      multicast services to IPv4 clients over an IPv6 multicast network. The
      solution was developed with DS-Lite in mind (see more discussion below).
      However, the solution is not limited to DS-Lite; it can also be applied in
      other deployment contexts, such as the ones described in <xref
      target="RFC7596"></xref> and <xref
      target="RFC7597"></xref>.</t>

      <t>If customers have to access IPv4 multicast-based services through a
      DS-Lite environment, Address Family Transition Router (AFTR) devices
      will have to process all the Internet Group Management Protocol (IGMP)
      Report messages <xref target="RFC2236"></xref> <xref
      target="RFC3376"></xref> that have been forwarded by the Customer
      Premises Equipment (CPE) into the IPv4-in-IPv6 tunnels. From that
      standpoint, AFTR devices are likely to behave as a replication point for
      downstream multicast traffic, and the multicast packets will be
      replicated for each tunnel endpoint that IPv4 receivers are connected
      to.</t>

      <t>This kind of DS-Lite environment raises two major issues: <list
          style="numbers">
          <t>The IPv6 network loses the benefits of efficient multicast traffic
          forwarding because it is unable to deterministically
          replicate the data as close to the receivers as possible. As a
          consequence, the downstream bandwidth in the IPv6 network will be
          vastly consumed by sending multicast data over a unicast
          infrastructure.</t>

          <t>The AFTR is responsible for replicating multicast traffic and
          forwarding it into each tunnel endpoint connecting IPv4 receivers
          that have explicitly asked for the corresponding content. This
          process may significantly consume the AFTR's resources and
          overload the AFTR.</t>
        </list></t>

      <t>This document specifies an extension to the DS-Lite model to deliver
      IPv4 multicast services to IPv4 clients over an IPv6 multicast-enabled
      network.</t>

      <t>This document describes a stateless translation mechanism that
      supports either Source-Specific Multicast (SSM) or Any-Source Multicast
      (ASM) operation. The recommendation in Section 1 of <xref
      target="RFC4607"></xref> is that multicast services use SSM where
      possible; the operation of the translation mechanism is also simplified
      when SSM is used, e.g., considerations for placement of the IPv6 
      Rendezvous Point (RP) are no longer relevant.</t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

    <section title="Terminology">
      <t>This document makes use of the following terms:</t>

      <t><list style="hanging">
          <t hangText="IPv4-embedded IPv6 address:">an IPv6 address that
          embeds a 32-bit-encoded IPv4 address. An IPv4-embedded IPv6 address
          can be unicast or multicast.</t>

          <t hangText="mPrefix64:">a dedicated multicast IPv6 prefix for
          constructing IPv4-embedded IPv6 multicast addresses. mPrefix64 can
          be of two types: ASM_mPrefix64 used in Any-Source Multicast (ASM)
          mode or SSM_mPrefix64 used in Source-Specific Multicast (SSM) mode
          <xref target="RFC4607"></xref>. The size of this prefix is /96.
          <list style="empty">
              <t>Note: "64" is used as an abbreviation for IPv6-IPv4
              interconnection.</t>
            </list></t>

          <t hangText="uPrefix64:">a dedicated IPv6 unicast prefix for
          constructing IPv4-embedded IPv6 unicast addresses <xref
          target="RFC6052"></xref>. This prefix may be either the Well-Known
          Prefix (i.e., 64:ff9b::/96) or a Network-Specific Prefix (NSP).</t>

          <t hangText="Multicast AFTR (mAFTR):">a functional entity that
          supports an IPv4-IPv6 multicast interworking function (refer to
          <xref target="pim_interworking"></xref>). It receives and
          encapsulates the IPv4 multicast packets into IPv4-in-IPv6 packets.
          Also, it behaves as the corresponding IPv6 multicast source for the
          encapsulated IPv4-in-IPv6 packets.</t>

          <t hangText="Multicast Basic Bridging BroadBand (mB4):">a functional
          entity that supports an IGMP-MLD Interworking function (refer to
          <xref target="igmp_mld_interworking"></xref>) that translates the
          IGMP messages into the corresponding Multicast Listener Discovery
          (MLD) messages and sends the MLD messages to the IPv6 network. In
          addition, the mB4 decapsulates IPv4-in-IPv6 multicast packets.</t>

          <t hangText="PIMv4:">refers to Protocol Independent Multicast (PIM)
          when deployed in an IPv4 infrastructure (i.e., IPv4 transport
          capabilities are used to exchange PIM messages).</t>

          <t hangText="PIMv6:">refers to PIM when deployed in an IPv6
          infrastructure (i.e., IPv6 transport capabilities are used to
          exchange PIM messages).</t>

          <t hangText="Host portion of the MLD protocol:">refers to the part
          of MLD that applies to all multicast address listeners (Section 6 of
          <xref target="RFC3810"></xref>). As a reminder, MLD specifies
          separate behaviors for multicast address listeners (i.e., hosts or
          routers that listen to multicast packets) and multicast routers.</t>

          <t hangText="Router portion of IGMP:">refers to the
          part of IGMP that is performed by multicast routers (Section 6 of
          <xref target="RFC3376"></xref>).</t>

          <t hangText="DR:">refers to the Designated Router as defined in
          <xref target="RFC7761"></xref>.</t>
        </list></t>
    </section>

    <section title="Scope">
      <t>This document focuses only on the subscription to IPv4 multicast
      groups and the delivery of IPv4-formatted content to IPv4 receivers over
      an IPv6-only network. In particular, only the following case is
      covered:</t>

      <t><list style="empty">
          <t>IPv4 receivers access IPv4 multicast content over IPv6-only
          multicast-enabled networks.</t>
        </list></t>

      <t>This document does not cover the source/receiver heuristics, where
      IPv4 receivers can also behave as IPv4 multicast sources. This document
      assumes that hosts behind the mB4 are IPv4 multicast receivers only.
      Also, the document covers the host built-in mB4 function.</t>
    </section>

    <section title="Solution Overview">
      <t>In the DS-Lite specification <xref target="RFC6333"></xref>, an
      IPv4-in-IPv6 tunnel is used to carry bidirectional IPv4 unicast traffic
      between a B4 and an AFTR. The solution specified in this document
      provides an IPv4-in-IPv6 encapsulation scheme to deliver unidirectional
      IPv4 multicast traffic from an mAFTR to an mB4.</t>

      <t>An overview of the solution is provided in this section; it is
      intended as an introduction to how it works but is not normative. For
      the normative specifications of the two new functional elements, mB4 and
      mAFTR (<xref target="functional_architecture"></xref>), refer to
      Sections <xref format="counter" target="mb4"></xref> and <xref
      format="counter" target="maftr"></xref>.</t>

      <figure align="center" anchor="functional_architecture"
              title="Functional Architecture">
        <artwork align="center"><![CDATA[
               ------------
             /              \
            |  IPv4 network  |
             \              /
               ------------
 IPv4 multicast  :   |   ^  PIMv4 Join
                 v   |   :
              +-------------+
              |    mAFTR    |
              +-------------+
IPv6 multicast  |:|  |   ^  PIMv6 Join (PIMv6
(IPv4 embedded) |:|  |   :   routers in between)
               ------------
             /              \
            |  IPv6 network  |
             \              /
               ------------
                |:|  |   ^  MLD Report
                |v|  |   :
               +-----------+
               |    mB4    |
               +-----------+
 IPv4 multicast  :   |   ^  IGMP Report
                 v   |   :
               +-----------+
               |   IPv4    |
               | receiver  |
               +-----------+
        ]]></artwork>
      </figure>

      <section title="IPv4-Embedded IPv6 Prefixes">
        <t>In order to map the addresses of IPv4 multicast traffic with IPv6
        multicast addresses, an IPv6 multicast prefix (mPrefix64) and an IPv6
        unicast prefix (uPrefix64) are provided to the mAFTR and the mB4
        elements, both of which contribute to the computation and the
        maintenance of the IPv6 multicast distribution tree that extends the
        IPv4 multicast distribution tree into the IPv6 multicast network. The
        IPv4/IPv6 address mapping is stateless.</t>

        <t>The mAFTR and the mB4 use mPrefix64 to convert an IPv4 multicast
        address (G4) into an IPv4-embedded IPv6 multicast address (G6). The
        mAFTR and the mB4 use uPrefix64 to convert an IPv4 source address (S4)
        into an IPv4-embedded IPv6 address (S6). The mAFTR and the mB4 must
        use the same mPrefix64 and uPrefix64; they also run the same algorithm
        for building IPv4-embedded IPv6 addresses. Refer to <xref
        target="maddress"></xref> for more details about the address
        mapping.</t>
      </section>

      <section anchor="mcast_tree"
               title="Multicast Distribution Tree Computation">
        <t>When an IPv4 receiver connected to the device that embeds the mB4
        capability wants to subscribe to an IPv4 multicast group, it sends an
        IGMP Report message towards the mB4. The mB4 creates the IPv6
        multicast group (G6) address using mPrefix64 and the original IPv4
        multicast group address. If the receiver sends a source-specific
        IGMPv3 Report message, the mB4 will create the IPv6 source address
        (S6) using uPrefix64 and the original IPv4 source address.</t>

        <t>The mB4 uses the G6 (and both S6 and G6 in SSM) to create the
        corresponding MLD Report message. The mB4 sends the Report message
        towards the IPv6 network. The PIMv6 DR receives the MLD
        Report message and sends the PIMv6 Join message to join the IPv6
        multicast distribution tree. It can send either PIMv6 Join (*,G6) in
        ASM or PIMv6 Join (S6,G6) in SSM to the mAFTR.</t>

        <t>The mAFTR acts as the IPv6 DR to which the uPrefix64-derived S6 is
        connected. The mAFTR will receive the source-specific PIMv6 Join
        message (S6,G6) from the IPv6 multicast network. If the mAFTR is the
        Rendezvous Point (RP) of G6, it will receive the any-source PIMv6 Join
        message (*,G6) from the IPv6 multicast network. If the mAFTR is not
        the RP of G6, it will send the PIM Register message to the RP of G6
        located in the IPv6 multicast network. For the sake of simplicity, it
        is recommended to configure the mAFTR as the RP for the IPv4-embedded
        IPv6 multicast groups it manages; no registration procedure is
        required under this configuration.</t>

        <t>When the mAFTR receives the PIMv6 Join message (*,G6), it will
        extract the IPv4 multicast group address (G4). If the mAFTR is the RP
        of G4 in the IPv4 multicast network, it will create a (*,G4) entry (if
        such entry does not already exist) in its own IPv4 multicast routing
        table. If the mAFTR is not the RP of G4, it will send the
        corresponding PIMv4 Join message (*,G4) towards the RP of G4 in the
        IPv4 multicast network.</t>

        <t>When the mAFTR receives the PIMv6 Join message (S6,G6), it will
        extract the IPv4 multicast group address (G4) and IPv4 source address
        (S4) and send the corresponding (S4,G4) PIMv4 Join message directly to
        the IPv4 source.</t>

        <t>A branch of the multicast distribution tree is thus constructed,
        comprising both an IPv4 part (from the mAFTR upstream) and an IPv6
        part (from mAFTR downstream towards the mB4).</t>

        <t>The mAFTR advertises the route of uPrefix64 with an IPv6 Interior
        Gateway Protocol (IGP), so as to represent the IPv4-embedded IPv6
        source in the IPv6 multicast network and to allow IPv6 routers to run
        the Reverse Path Forwarding (RPF) check procedure on incoming
        multicast traffic. Injecting internal /96 routes is not problematic
        given the recommendation in <xref target="RFC7608"></xref> that
        requires that forwarding processes must be designed to process
        prefixes of any length up to /128.</t>
      </section>

      <section anchor="mcast_forwarding" title="Multicast Data Forwarding">
        <t>When the mAFTR receives an IPv4 multicast packet, it will
        encapsulate the packet into an IPv6 multicast packet using the
        IPv4-embedded IPv6 multicast address as the destination address and an
        IPv4-embedded IPv6 unicast address as the source address. The
        encapsulated IPv6 multicast packet will be forwarded down the IPv6
        multicast distribution tree, and the mB4 will eventually receive the
        packet.</t>

        <t>The IPv6 multicast network treats the IPv4-in-IPv6 encapsulated
        multicast packets as native IPv6 multicast packets. The IPv6 multicast
        routers use the outer IPv6 header to make their forwarding
        decisions.</t>

        <t>When the mB4 receives the IPv6 multicast packet (to G6) derived by
        mPrefix64, it decapsulates it and forwards the original IPv4 multicast
        packet towards the receivers subscribing to G4.</t>

        <t>Note: At this point, only IPv4-in-IPv6 encapsulation is defined;
        however, other types of encapsulation could be defined in the
        future.</t>
      </section>
    </section>

    <section anchor="maddress" title="IPv4/IPv6 Address Mapping">
      <section title="Prefix Assignment">
        <t>A dedicated IPv6 multicast prefix (mPrefix64) is provisioned to the
        mAFTR and the mB4. The mAFTR and the mB4 use the mPrefix64 to form an
        IPv6 multicast group address from an IPv4 multicast group address. The
        mPrefix64 can be of two types: ASM_mPrefix64 (an mPrefix64 used in ASM
        mode) or SSM_mPrefix64 (an mPrefix64 used in SSM mode). The mPrefix64
        MUST be derived from the corresponding IPv6 multicast address space
        (e.g., the SSM_mPrefix64 must be in the range of the multicast address
        space specified in <xref target="RFC4607"></xref>).</t>

        <t>The IPv6 part of the multicast distribution tree can be seen as an
        extension of the IPv4 part of the multicast distribution tree. The
        IPv4 source address MUST be mapped to an IPv6 source address. An IPv6
        unicast prefix (uPrefix64) is provisioned to the mAFTR and the mB4.
        The mAFTR and the mB4 use the uPrefix64 to form an IPv6 source address
        from an IPv4 source address as specified in <xref
        target="RFC6052"></xref>. The uPrefix-formed IPv6 source address will
        represent the original IPv4 source in the IPv6 multicast network. The
        uPrefix64 MUST be derived from the IPv6 unicast address space.</t>

        <t>The multicast address translation MUST follow the algorithm defined
        in <xref target="algo"></xref>.</t>

        <t>The mPrefix64 and uPrefix64 can be configured in the mB4 using a
        variety of methods, including an out-of-band mechanism, manual
        configuration, or a dedicated provisioning protocol (e.g., using
        DHCPv6 <xref
        target="RFC8115"></xref>).</t>

        <t>The stateless translation mechanism described in <xref
        target="maddress"></xref> does not preclude use of Embedded-RP <xref
        target="RFC3956"></xref> <xref target="RFC7371"></xref>.</t>
      </section>

      <section anchor="algo" title="Multicast Address Translation Algorithm">
        <t>IPv4-embedded IPv6 multicast addresses are composed according to
        the following algorithm:<list style="symbols">
	<t>Concatenate the 96 bits of the mPrefix64 and the 32 bits of the IPv4
      address to obtain a 128-bit address.</t>
          </list></t>

        <t>The IPv4 multicast addresses are extracted from the IPv4-embedded
        IPv6 multicast addresses according to the following algorithm:<list
            style="symbols">
            <t>If the multicast address has a pre-configured mPrefix64,
            extract the last 32 bits of the IPv6 multicast address.</t>
          </list></t>

        <t>An IPv4 source is represented in the IPv6 realm with its
        IPv4-converted IPv6 address <xref target="RFC6052"></xref>.</t>
      </section>

      <section title="Textual Representation">
        <t>The embedded IPv4 address in an IPv6 multicast address is included
        in the last 32 bits; therefore, dotted decimal notation can be
        used.</t>
      </section>

      <section title="Examples">
        <figure align="center">
          <artwork align="center"><![CDATA[
Group address mapping example:

+---------------------+--------------+----------------------------+
|      mPrefix64      | IPv4 address | IPv4-Embedded IPv6 address |
+---------------------+--------------+----------------------------+
|  ff0x::db8:0:0/96   |  233.252.0.1 |   ff0x::db8:233.252.0.1    |
+---------------------+--------------+----------------------------+

Source address mapping example when a /96 is used:

+---------------------+--------------+----------------------------+
|      uPrefix64      | IPv4 address | IPv4-Embedded IPv6 address |
+---------------------+--------------+----------------------------+
|    2001:db8::/96    |  192.0.2.33  |     2001:db8::192.0.2.33   |
+---------------------+--------------+----------------------------+
          ]]></artwork>
        </figure>

        <t>IPv4 and IPv6 addresses used in this example are derived from the
        IPv4 and IPv6 blocks reserved for documentation, as per <xref
        target="RFC6676"></xref>. The unicast IPv4 address of the above
        example is derived from the documentation address block defined in
        <xref target="RFC6890"></xref>.</t>
      </section>
    </section>

    <section anchor="mb4" title="Multicast B4 (mB4)">
      <section anchor="igmp_mld_interworking"
               title="IGMP-MLD Interworking Function">
        <t>The IGMP-MLD Interworking function combines the IGMP/MLD Proxying
        function and the address-synthesizing operations. The IGMP/MLD
        Proxying function is specified in <xref target="RFC4605"></xref>. The
        address translation is stateless and MUST follow the address mapping
        specified in <xref target="maddress"></xref>.</t>

        <t>The mB4 performs the host portion of the MLD protocol on the
        upstream interface. The composition of IPv6 membership in this context
        is constructed through address-synthesizing operations and MUST
        synchronize with the membership database maintained in the IGMP
        domain. MLD messages are sent natively to the direct-connected
	IPv6 multicast routers (they will be processed by the PIM DR).
	The mB4 also performs the router portion of IGMP on the downstream
        interface(s). Refer to <xref target="RFC4605"></xref> for more
        details.</t>

        <figure align="center" anchor="IGMP_MLD_Interworking"
                title="IGMP-MLD Interworking">
          <artwork align="center"><![CDATA[
+----------+   IGMP  +-------+   MLD   +---------+
|   IPv4   |---------|  mB4  |---------|   PIM   |
| Receiver |         |       |         |    DR   |
+----------+         +-------+         +---------+
          ]]></artwork>
        </figure>

        <t></t>

        <t>If SSM is deployed, the mB4 MUST construct the IPv6 source address
        (or retrieve the IPv4 source address) using the uPrefix64. The mB4 MAY
        create a membership database that associates the IPv4-IPv6 multicast
        groups with the interfaces (e.g., WLAN and Wired Ethernet) facing IPv4
        multicast receivers.</t>
      </section>

      <section anchor="forwarding" title="Multicast Data Forwarding">
        <t>When the mB4 receives an IPv6 multicast packet, it MUST check the
        group address and the source address. If the IPv6 multicast group
        prefix is mPrefix64 and the IPv6 source prefix is uPrefix64, the mB4
        MUST decapsulate the IPv6 header <xref target="RFC2473"></xref>; the
        decapsulated IPv4 multicast packet will be forwarded through each
        relevant interface following standard IPv4 multicast forwarding
        procedures. Otherwise, the mB4 MUST silently drop the packet.</t>

        <t>As an illustration, if a packet is received from source
        2001:db8::192.0.2.33 and needs to be forwarded to group
        ff3x:20:2001:db8::233.252.0.1, the mB4 decapsulates it into an IPv4
        multicast packet using 192.0.2.33 as the IPv4 source address and using
        233.252.0.1 as the IPv4 destination multicast group. This example
        assumes that the mB4 is provisioned with uPrefix64 (2001:db8::/96) and
        mPrefix64 (ff3x:20:2001:db8::/96).</t>
      </section>

      <section anchor="frag" title="Fragmentation">
        <t>Encapsulating IPv4 multicast packets into IPv6 multicast packets
        that will be forwarded by the mAFTR towards the mB4 along the IPv6
        multicast distribution tree reduces the effective MTU size by the size
        of an IPv6 header. In this specification, the data flow is
        unidirectional from the mAFTR to the mB4. The mAFTR MUST fragment the
        oversized IPv6 packet after the encapsulation into two IPv6 packets.
        The mB4 MUST reassemble the IPv6 packets, decapsulate the IPv6 header,
        and forward the IPv4 packet to the hosts that have subscribed to the
        corresponding multicast group. Further considerations about
        fragmentation issues are documented in Sections 5.3 and 6.3 of <xref
        target="RFC6333"></xref>.</t>
      </section>

      <section title="Host Built-In mB4 Function">
        <t>If the mB4 function is implemented in the host that is directly
        connected to an IPv6-only network, the host MUST implement the
        behaviors specified in Sections <xref format="counter"
        target="igmp_mld_interworking"></xref>, <xref format="counter"
        target="forwarding"></xref>, and <xref format="counter"
        target="frag"></xref>. The host MAY optimize the implementation to
        provide an Application Programming Interface (API) or kernel module to
        skip the IGMP-MLD Interworking function. Optimization considerations
        are out of scope of this specification.</t>
      </section>

      <section anchor="scopemb4" title="Preserve the Scope">
        <t>When several mPrefix64s are available, if each enclosed
        IPv4-embedded IPv6 multicast prefix has a distinct scope, the mB4 MUST
        select the appropriate IPv4-embedded IPv6 multicast prefix whose scope
        matches the IPv4 multicast address used to synthesize an IPv4-embedded
        IPv6 multicast address (specific mappings are listed in Section 8 of
        <xref target="RFC2365"></xref>). Mapping is achieved such that the
        scope of the selected IPv6 multicast prefix does not exceed the
        original IPv4 multicast scope. If the mB4 is instructed to preserve
        the scope but no IPv6 multicast prefix that matches the IPv4 multicast
        scope is found, IPv6 multicast address mapping SHOULD fail.</t>

        <t>The mB4 MAY be configured to not preserve the scope when enforcing
        the address translation algorithm. </t>

        <t>Consider that an mB4 is configured with two mPrefix64s,
        ff0e::db8:0:0/96 (global scope) and ff08::db8:0:0/96 (organization
        scope). If the mB4 receives an IGMP Report message from an IPv4 receiver to
        subscribe to 233.252.0.1, it checks which mPrefix64 to use in order to
        preserve the scope of the requested IPv4 multicast group. In this
        example, given that 233.252.0.1 is intended for global use, the mB4
        creates the IPv6 multicast group (G6) address using ff0e::db8:0:0/96
        and the original IPv4 multicast group address (233.252.0.1):
        ff0e::db8:233.252.0.1.</t>
      </section>
    </section>

    <section anchor="maftr" title="Multicast AFTR (mAFTR)">
      <section anchor="rpf" title="Routing Considerations">
        <t>The mAFTR is responsible for interconnecting the IPv4 multicast
        distribution tree with the corresponding IPv6 multicast distribution
        tree. The mAFTR MUST use the uPrefix64 to build the IPv6 source
        addresses of the multicast group address derived from mPrefix64. In
        other words, the mAFTR MUST be the multicast source whose address is
        derived from uPrefix64.</t>

        <t>The mAFTR MUST advertise the route towards uPrefix64 with the IPv6
        IGP. This is needed by the IPv6 multicast routers so that they acquire
        the routing information to discover the source.</t>
      </section>

      <section title="Processing PIM Messages">
        <t>The mAFTR MUST interwork PIM Join/Prune messages for (*,G6) and
        (S6,G6) on their corresponding (*,G4) and (S4,G4). The following text
        specifies the expected behavior of the mAFTR for PIM Join
        messages.</t>

        <t><figure align="center" anchor="pim_interworking"
            title="PIMv6-PIMv4 Interworking Function">
            <artwork align="center"><![CDATA[
         +---------+   
---------|  mAFTR  |---------
  PIMv6  |uPrefix64|  PIMv4
         |mPrefix64|       
         +---------+      
            ]]></artwork>
          </figure></t>

        <t>The mAFTR contains two separate Tree Information Bases (TIBs): the
        IPv4 Tree Information Base (TIB4) and the IPv6 Tree Information Base
        (TIB6), which are bridged by one IPv4-in-IPv6 virtual interface. It
        should be noted that TIB implementations may vary (e.g., some may rely
        upon a single integrated TIB without any virtual interface), but they
        should follow this specification for the sake of global and functional
        consistency.</t>

        <t>When an mAFTR receives a PIMv6 Join message (*,G6) with an IPv6
        multicast group address (G6) that is derived from the mPrefix64, it
        MUST check its IPv6 Tree Information Base (TIB6). If there is an entry
        for this G6 address, it MUST check whether the interface through which
        the PIMv6 Join message has been received is in the outgoing interface
        (oif) list. If not, the mAFTR MUST add the interface to the oif list.
        If there is no entry in the TIB6, the mAFTR MUST create a new entry
        (*,G6) for the multicast group. Whether or not the IPv4-in-IPv6
        virtual interface is set as the incoming interface of the newly
        created entry is up to the implementation, but it should comply with
        the mAFTR's multicast data forwarding behavior (see <xref
        target="multicast_forwarding"></xref>).</t>

        <t>The mAFTR MUST extract the IPv4 multicast group address (G4) from
        the IPv4-embedded IPv6 multicast address (G6) contained in the PIMv6
        Join message. The mAFTR MUST check its IPv4 Tree Information Base
        (TIB4). If there is an entry for G4, it MUST check whether the
        IPv4-in-IPv6 virtual interface is in the outgoing interface list. If
        not, the mAFTR MUST add the interface to the oif list. If there is no
        entry for G4, the mAFTR MUST create a new (*,G4) entry in its TIB4 and
        initiate the procedure for building the shared tree in the IPv4
        multicast network without any additional requirement.</t>

        <t>If the mAFTR receives a source-specific Join message, the (S6,G6)
        is processed rather than (*,G6). The procedures of processing (S6,G6)
        and (*,G6) are almost the same. Differences have been detailed in
        <xref target="RFC7761"></xref>.</t>
      </section>

      <section title="Switching from Shared Tree to Shortest Path Tree">
        <t>When the mAFTR receives the first IPv4 multicast packet, it may
        extract the source address (S4) from the packet and send an Explicit
        PIMv4 (S4,G4) Join message directly to S4. The mAFTR switches from the
        shared Rendezvous Point Tree (RPT) to the Shortest Path Tree (SPT) for
        G4.</t>

        <t>For IPv6 multicast routers to switch to the SPT, there is no new
        requirement. IPv6 multicast routers may send an Explicit PIMv6 Join to
        the mAFTR once the first (S6,G6) multicast packet arrives from
        upstream multicast routers.</t>
      </section>

      <section anchor="multicast_forwarding" title="Multicast Data Forwarding">
        <t>When the mAFTR receives an IPv4 multicast packet, it checks its
        TIB4 to find a matching entry and then forwards the packet to the
        interface(s) listed in the outgoing interface list. If the
        IPv4-in-IPv6 virtual interface also belongs to this list, the packet
        is encapsulated with the mPrefix64-derived and uPrefix64-derived
        IPv4-embedded IPv6 addresses to form an IPv6 multicast packet <xref
        target="RFC2473"></xref>. Then another lookup is made by the mAFTR to
        find a matching entry in the TIB6. Whether or not the RPF check for the
        second lookup is performed is up to the implementation and is
        out of the scope of this document. The IPv6 multicast packet is then
        forwarded along the IPv6 multicast distribution tree, based upon the
        outgoing interface list of the matching entry in the TIB6.</t>

        <t>As an illustration, if a packet is received from source 192.0.2.33
        and needs to be forwarded to group 233.252.0.1, the mAFTR encapsulates
        it into an IPv6 multicast packet using ff3x:20:2001:db8::233.252.0.1
        as the IPv6 destination multicast group and using 2001:db8::192.0.2.33
        as the IPv6 source address.</t>
      </section>

      <section anchor="scopemaftr" title="Scope">
        <t>The Scope field of IPv4-in-IPv6 multicast addresses should be
        valued accordingly (e.g., to &ldquo;E&rdquo; for global scope) in the
        deployment environment. This specification does not discuss the scope
        value that should be used.</t>

        <t>The considerations in <xref target="scopemb4"></xref> are to be
        followed by the mAFTR.</t>
      </section>
    </section>

    <section title="Deployment Considerations">
      <section title="Other Operational Modes">
        <section anchor="mld_maftr"
                 title="The IPv6 DR is Co-located with the mAFTR">
          <t>The mAFTR can embed the MLD Querier function (as well as the
          PIMv6 DR) for optimization purposes. When the mB4 sends an MLD Report
          message to this mAFTR, the mAFTR should process the MLD Report
          message that contains the IPv4-embedded IPv6 multicast group address
          and then send the corresponding PIMv4 Join message (<xref
          target="mld_pimv4_interworking"></xref>).</t>

          <t><figure align="center" anchor="mld_pimv4_interworking"
              title="MLD-PIMv4 Interworking Function">
              <artwork align="center"><![CDATA[
         +---------+   
---------|  mAFTR  |---------
   MLD   |uPrefix64|  PIMv4
         |mPrefix64|       
         +---------+      
            ]]></artwork>
            </figure></t>

          <t>Discussions about the location of the mAFTR capability and
          related ASM or SSM multicast design considerations are out of the
          scope of this document.</t>
        </section>

        <section anchor="dr_maftr"
                 title="The IPv4 DR is Co-located with the mAFTR">
          <t>If the mAFTR is co-located with the IPv4 DR connected to the
          original IPv4 source, it may simply use the uPrefix64 and mPrefix64
          prefixes to build the IPv4-embedded IPv6 multicast packets, and the
          sending of PIMv4 Join messages becomes unnecessary.</t>
        </section>
      </section>

      <section title="Load Balancing">
        <t>For robustness and load distribution purposes, several nodes in the
        network can embed the mAFTR function. In such case, the same IPv6
        prefixes (i.e., mPrefix64 and uPrefix64) and algorithm to build
        IPv4-embedded IPv6 addresses must be configured on those nodes.</t>
      </section>

      <section title="mAFTR Policy Configuration">
        <t>The mAFTR may be configured with a list of IPv4 multicast groups
        and sources. Only multicast flows bound to the configured addresses
        should be handled by the mAFTR. Otherwise, packets are silently
        dropped.</t>
      </section>

      <section title="Static vs. Dynamic PIM Triggering">
        <t>To optimize the usage of network resources in current deployments,
        all multicast streams are conveyed in the core network while only the
        most popular ones are forwarded in the aggregation/access networks
        (static mode). Less popular streams are forwarded in the access
        network upon request (dynamic mode). Depending on the location of the
        mAFTR in the network, two modes can be envisaged: static and dynamic.
        <list style="hanging">
            <t hangText="Static Mode:">The mAFTR is configured to instantiate
            permanent (S6,G6) and (*,G6) entries in its TIB6 using a
            pre-configured (S4,G4) list.</t>

            <t hangText="Dynamic Mode:">The instantiation or withdrawal of
            (S6,G6) or (*,G6) entries is triggered by the receipt of PIMv6
            messages.</t>
          </list></t>
      </section>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Besides multicast scoping considerations (see Sections <xref
       target="scopemb4" format="counter"></xref> and <xref
       target="scopemaftr" format="counter"></xref>), this
      document does not introduce any new security concerns in addition to those
      discussed in Section 5 of <xref target="RFC6052"></xref>, Section 10
      of <xref target="RFC3810"></xref>, and Section 6 of <xref
      target="RFC7761"></xref>.</t>

      <t>Unlike solutions that map IPv4 multicast flows to IPv6 unicast flows,
      this document does not exacerbate Denial-of-Service (DoS) attacks.</t>

      <t>An mB4 SHOULD be provided with appropriate configuration information
      to preserve the scope of a multicast message when mapping an IPv4
      multicast address into an IPv4-embedded IPv6 multicast address and vice
      versa.</t>

      <section title="Firewall Configuration">

   <t>The CPE that embeds the mB4 function SHOULD be configured to accept
   incoming MLD messages and traffic forwarded to multicast groups
   subscribed to by receivers located in the customer premises.</t>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document does not require any IANA actions.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      <?rfc include='reference.RFC.6333'?>

      <?rfc include='reference.RFC.2119'?>

      <?rfc include='reference.RFC.4605'?>

      <?rfc include='reference.RFC.6052'?>

      <?rfc include='reference.RFC.4607'?>

      <?rfc include='reference.RFC.7761'?>

      <?rfc include='reference.RFC.3376'?>

      <?rfc include='reference.RFC.3810'?>

      <?rfc include='reference.RFC.7608'?>

      <?rfc include='reference.RFC.2365'?>

      <?rfc include='reference.RFC.2473'?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.2236'?>

      <?rfc include='reference.RFC.7597'?>

      <?rfc include='reference.RFC.7596'?>

      <?rfc include='reference.RFC.3956'?>

      <?rfc include='reference.RFC.6676'?>

      <?rfc include='reference.RFC.6890'?>

      <?rfc include='reference.RFC.7371'?>

<!--draft-ietf-softwire-multicast-prefix-option-15: I-D Exists-->

<reference anchor="RFC8115" target="http://www.rfc-editor.org/info/rfc8115">
<front>
<title>DHCPv6 Option for IPv4-Embedded Multicast and Unicast IPv6 Prefixes</title>
<author initials='M' surname='Boucadair' fullname='Mohamed Boucadair'>
    <organization />
</author>
<author initials='J' surname='Qin' fullname='Jacni Qin'>
    <organization />
</author>
<author initials='T' surname='Tsou' fullname='Tina Tsou'>
    <organization />
</author>
<author initials='X' surname='Deng' fullname='Xiaohong Deng'>
    <organization />
</author>
<date month='March' year='2017'/>
</front>
<seriesInfo name="RFC" value="8115"/>
<seriesInfo name="DOI" value="10.17487/RFC8115"/>
</reference>
    </references>

    <section title="Use Case: IPTV">
      <t>IPTV generally includes two categories of service offerings:</t>

      <t><list style="symbols">
          <t>Video on Demand (VoD) that streams unicast video content to receivers.</t>

          <t>Multicast live TV broadcast services.</t>
        </list></t>

      <t>Two types of provider are involved in the delivery of this
      service:</t>

      <t><list style="symbols">
          <t>Content Providers, who usually own the content that is multicast
          to receivers. Content providers may contractually define an
          agreement with network providers to deliver content to
          receivers.</t>

          <t>Network Providers, who provide network connectivity services
          (e.g., network providers are responsible for carrying multicast
          flows from head-ends to receivers).</t>
        </list></t>

      <t>Note that some contract agreements prevent a network provider from
      altering the content as sent by the content provider for various
      reasons. Depending on these contract agreements, multicast streams
      should be delivered unaltered to the requesting users.</t>

      <t>Most current IPTV content is likely to remain IPv4-formatted and
      out of the control of network providers. Additionally, there are
      numerous legacy receivers (e.g., IPv4-only Set-Top Boxes (STBs)) that
      can't be upgraded or easily replaced to support IPv6. As a
      consequence, IPv4 service continuity must be guaranteed during the
      transition period, including the delivery of multicast services such as
      Live TV Broadcasting to users.</t>
    </section>

    <section title="Older Versions of Group Membership Management Protocols">
      <t>Given the multiple versions of group membership management protocols,
      mismatch issues may arise at the mB4 (refer to <xref
      target="igmp_mld_interworking"></xref>).</t>

      <t>If IGMPv2 operates on the IPv4 receivers while MLDv2 operates on the
      MLD Querier, or if IGMPv3 operates on the IPv4 receivers while MLDv1
      operates on the MLD Querier, a version mismatch issue will be
      encountered. 
   To solve this problem, the mB4 should perform the
   router portion of IGMP, which is similar to the corresponding MLD
   version (IGMPv2 for MLDv1 or IGMPv3 for MLDv2) operating in the
   IPv6 domain. Then, the protocol interaction approach specified in Section 7
      of <xref target="RFC3376"></xref> can be applied to exchange signaling
      messages with the IPv4 receivers on which the different version of IGMP
      is operating.</t>

      <t>Note that the support of IPv4 SSM requires MLDv2 to be enabled in the
      IPv6 network.</t>
    </section>
    <section anchor="Acknowledgements" title="Acknowledgements" numbered="no">
      <t>The authors would like to thank Dan Wing for his guidance in the
      early discussions that initiated this work. We also thank Peng Sun, 
      Jie Hu, Qiong Sun, Lizhong Jin, Alain Durand, Dean Cheng, Behcet
      Sarikaya, Tina Tsou, Rajiv Asati, Xiaohong Deng, and Stig Venaas for their valuable comments.</t>

      <t>Many thanks to Ian Farrer for the review.</t>

      <t>Thanks to Zhen Cao, Tim Chown, Francis Dupont, Jouni Korhonen, and Stig Venaas for the directorates review.</t>
    </section>


<!-- [rfced]  Terminology

e) Please review the placement of "(G6)" in these sentences and let
us know if any updates are needed. In other instances in the document,
"(G6)" appears after "address" rather than before, i.e., "multicast group
address (G6)".

Original
   The mB4 creates the IPv6
   multicast group (G6) address using mPrefix64 and the original IPv4
   multicast group address. 
...
   In this
   example, given that 233.252.0.1 is intended for global use, the mB4
   creates the IPv6 multicast group (G6) address using ff0e::db8:0:0/96
   and the original IPv4 multicast group address (233.252.0.1):
   ff0e::db8:233.252.0.1.
-->

  </back>
</rfc>
