<?xml version='1.0' encoding="US-ASCII"?>   

    <!DOCTYPE rfc SYSTEM 'rfc2629.dtd' [ 
    	<!ENTITY rfc2629 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml'> 
		]>

<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc number="8384" category="std" consensus="yes" submissionType="IETF" ipr="trust200902">
  <!-- ***** FRONT MATTER ***** -->
  <front>
    <title abbrev="TRILL Smart Endnodes">Transparent Interconnection of Lots of Links (TRILL) Smart Endnodes</title>
	
	<author fullname="Radia Perlman" initials="R" surname="Perlman">
      <organization>Dell EMC</organization>

      <address>
        <postal>
          <street>176 South Street</street>
          
          <city>Hopkinton</city>
          
          <region>MA</region>
  
          <code>01748</code>

          <country>United States of America</country>
        </postal>

        <phone>+1-206-291-367</phone>

        <email>radiaperlman@gmail.com</email>
      </address>
    </author>
	
	 <author fullname="Fangwei Hu" initials="F" surname="Hu">
      <organization>ZTE Corporation</organization>

      <address>
        <postal>
          <street>No.889 Bibo Rd</street>
          
          <city>Shanghai</city>
          
          <region></region>
  
          <code>201203</code>

          <country>China</country>
        </postal>

        <phone>+86 21 68896273</phone>

        <email>hu.fangwei@zte.com.cn</email>
      </address>
    </author>
	
	<author initials="D" surname="Eastlake 3rd" 
	fullname="Donald Eastlake">
      <organization>Huawei Technologies</organization>
    
      <address>
	   <postal>
	     <street>1424 Pro Shop Court</street>
		 
        <region>Davenport, FL 33896</region>
	    
		<country>United States of America</country>
	   </postal>
	   
	   <phone>+1-508-333-2270</phone>
	   <email>d3e3e3@gmail.com</email>
      </address>
    </author>
		  
	 <author fullname="Ting Liao" initials="T" surname="Liao">
      <organization>Huawei Technologies</organization>

      <address>
        <postal>
          <street></street>
          
          <city>Nanjing</city>
          
          <region>Jiangsu</region>
  
          <code>210012</code>

          <country>China</country>
        </postal>

        <phone></phone>

        <email>liaoting1@huawei.com</email>
      </address>
    </author>

    <date month="July" year="2018"/>
    
    <area>Routing</area>
    <workgroup>TRILL WG</workgroup>
    <keyword>TRILL, Smart Endnode</keyword>
    <abstract>
     <t>This document addresses the problem of the size and freshness of the
      endnode learning table in edge Routing Bridges (RBridges), by allowing endnodes to
      volunteer for endnode learning and encapsulation/decapsulation. Such
      an endnode is known as a "Smart Endnode". Only the attached edge RBridge
      can distinguish a "Smart Endnode" from a "normal endnode". The Smart
      Endnode uses the nickname of the attached edge RBridge, so this solution
      does not consume extra nicknames. The solution also enables endnodes that are Fine-Grained Label (FGL) aware.
     </t>
    </abstract>
  </front>

  <!-- ***** MIDDLE MATTER ***** -->

  <middle>
    <section title="Introduction">
      <t>The IETF TRILL (Transparent Interconnection of Lots of Links) protocol
      <xref target="RFC6325"></xref> <xref target="RFC7780"></xref> provides optimal pair-wise data frame
      forwarding without configuration, safe forwarding even during periods of
      temporary loops, and support for multipathing of both unicast and
      multicast traffic. TRILL accomplishes this by using IS-IS <xref
      target="IS-IS"></xref> <xref target="RFC7176"></xref> link state routing and 
	  encapsulating traffic using a header that includes a hop count. 
	  Devices that implement TRILL are called "RBridges" 
	 (Routing Bridges) or "TRILL Switches".</t> 

      <t>An RBridge that attaches to endnodes is called an "edge RBridge" or "edge TRILL Switch",
      whereas one that exclusively forwards encapsulated frames is known as
      a "transit RBridge" or "transit TRILL Switch". An edge RBridge traditionally is the one that
      encapsulates a native Ethernet frame with a TRILL header or that
      receives a TRILL-encapsulated packet and decapsulates the TRILL header. To
      encapsulate efficiently, the edge RBridge must keep an "endnode table" consisting
      of (Media Access Control (MAC), Data Label, TRILL egress switch nickname) sets, for those remote MAC addresses
      in Data Labels currently communicating with endnodes to which the edge RBridge is
      attached.
	  </t>
      
	  <t>These table entries might be configured, received from End Station Address Distribution Information (ESADI)
	  <xref target="RFC7357"></xref>, looked up in a 
	  directory <xref target="RFC7067"></xref>, 
	  or learned from decapsulating received traffic. If the edge
      RBridge has attached endnodes communicating with many remote 
	  endnodes, this table could become very large.
      Also, if a MAC address / Data Label pair in the table have moved to a
      different remote TRILL switch, it might be difficult for the edge RBridge to
      notice this quickly; and because the edge RBridge is encapsulating to the
      incorrect egress RBridge, the traffic will get lost.
	  </t>
	 </section>
 
    <section title=" Conventions Used in This Document">	
      <section title="Terminology">
	<t>BUM: Broadcast, Unknown unicast, and Multicast.</t>
	 <t>Edge RBridge: An RBridge providing endnode service on at least one of its ports.
      It is also called an edge TRILL Switch.</t>
	 <t>Data Label: VLAN or FGL.</t>
     <t>DRB: Designated RBridge <xref target="RFC6325"/>.</t>
     <t>ESADI: End Station Address Distribution Information <xref target="RFC7357"></xref>.</t>
     <t>FGL: Fine-Grained Label <xref target="RFC7172"></xref>.</t>
     <t>IS-IS: Intermediate System to Intermediate System <xref
     target="IS-IS"></xref>.</t>
     <t>LSP: Link State PDU.</t>
	 <t>PDU: Protocol Data Unit.</t>
     <t>RBridge: Routing Bridge, an alternative name for a TRILL switch.</t>
     <t>Smart Endnode: An endnode that has the capability specified in 
	 this document including learning and maintaining (MAC, Data Label, nickname) entries
	 and encapsulating/decapsulating TRILL frame.</t>
     <t>Transit RBridge: An RBridge that exclusively forwards encapsulated frames. It is also called
	 a transit TRILL Switch.</t>
     <t>TRILL: Transparent Interconnection of Lots of Links <xref target="RFC6325"></xref><xref target="RFC7780"></xref>.</t>
	 <t>TRILL ES-IS: TRILL End System to Intermediate System, is a variation of TRILL IS-IS designed to operate on a TRILL link among and between one or more TRILL switches and end stations on that link <xref target="RFC8171"></xref>.</t>
     <t>TRILL Switch: a device that implements the TRILL protocol;
    	an alternative term for an RBridge.</t>
	</section>   
    
    <section title="Requirements Language">
        <t>
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
    NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
    "MAY", and "OPTIONAL" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
    </section>
	</section>
	
     <section title= "Solution Overview"> 
      <t>The Smart Endnode solution defined in this document addresses the problem of 
      the size and freshness of the endnode learning table in edge RBridges. An endnode E,
      attached to an edge RBridge R, tells R that E would like to be a "Smart Endnode",
      which means that E will encapsulate and decapsulate the TRILL frame, 
      using R's nickname. Because E uses R's nickname, this solution 
      does not consume extra nicknames.</t>    
      
     <t>Take <xref target="Figure1"/> as the example Smart Endnode 
     scenario: RB1, RB2, and RB3 are the RBridges in the TRILL domain
     and SE1 and SE2 are the Smart Endnodes that can encapsulate 
     and decapsulate the TRILL packets. RB1 is the edge RB to which SE1
	 and SE2 have attached. RB1 assigns one of its nicknames 
	 to be used by SE1 and SE2.</t>   

     <t>Each Smart Endnode, SE1 and SE2, uses RB1's nickname when 
     encapsulating and maintains an endnode table of 
     (MAC, Data Label, TRILL egress switch nickname) for remote endnodes
     that it (SE1 or SE2) is corresponding with. RB1 does not 
     decapsulate packets destined for SE1 or SE2 and does
     not learn (MAC, Data Label, TRILL egress switch nickname) 
     for endnodes corresponding with SE1 or SE2, but RB1 
     does decapsulate and does learn 
     (MAC, Data Label, TRILL egress switch nickname) for any 
     endnodes attached to RB1 that have not declared 
     themselves to be Smart Endnodes.</t>
     
     <t>Just as an RBridge learns and times out
     (MAC, Data Label, TRILL egress switch nickname),
     Smart Endnodes SE1 and SE2 also learn and time 
     out endnode entries.  However, SE1 and SE2 might
     also determine, through ICMP messages or other 
     techniques that an endnode entry is not 
     successfully reaching the destination endnode, 
     and it can be deleted, even if the entry has not 
     timed out.</t>
     
     <t>If SE1 wishes to correspond with destination MAC D,
     and no endnode entry exists, SE1 will encapsulate 
     the packet as an unknown destination,
     or consult a directory <xref target="RFC7067"></xref> 
     (just as an RBridge would do if there was no endnode entry).</t>
      
<figure title="Smart Endnode Scenario" anchor="Figure1">
            <artwork align="center"><![CDATA[
+----------+
|SE1(Smart |
|Endnode1) |  \      +------------------------------+
+----------+   \    /                                \
                \  /+------+   +------+    +-----+    \   +-----------+
                /-+-| RB 1 |---|  RB2 |----| RB3 |-----+--|Endnode3   |
               /  | +------+   +------+    +-----+     |  |MAC=D      |
+----------+ /     \                                  /   +-----------+
|SE2(Smart |        \                                /
| Endnode2)|         +------------------------------+
+----------+ 
]]></artwork></figure>	      
	  
  <t>The mechanism in this document is that the Smart Endnode SE1
  issues a Smart-Hello, indicating SE1's desire to act as a Smart
  Endnode, together with the set of MAC addresses and Data Labels that
  SE1 owns. The Smart-Hello is used to announce the Smart Endnode
  capability and parameters (such as MAC address, Data Label, etc.).
  The Smart-Hello is a type of TRILL ES-IS PDU, which is specified in
  Section 5 of <xref target="RFC8171"></xref>. The detailed content
  for a Smart Endnode's Smart-Hello is defined in <xref target="Sect4"/>.</t>
  
      <t>If RB1 supports having a Smart Endnode neighbor, it also sends
      Smart-Hellos.  The Smart Endnode learns from RB1's Smart-Hellos
      what RB1's nickname is and which trees RB1 can use when RB1
      ingresses multi-destination frames.  Although Smart Endnode SE1
      transmits Smart-Hellos, it does not transmit or receive Link State PDUs (LSPs) or
      Extended Level 1 Flooding Scope (E-L1FS) FS LSPs <xref target="RFC7780"></xref>.</t>

	  <t>Since a Smart Endnode can encapsulate TRILL Data packets,
	  it can cause the Inner.Label to be a Fine-Grained Label
	  <xref target="RFC7172"></xref>; thus, this method supports
	  FGL-aware endnodes. When and how a Smart Endnode decides to
	  use the FGL instead of VLANs to encapsulate the TRILL Data
	  packet is out of scope in this document.</t>
     </section>
	
	<section title="Smart-Hello Mechanism between Smart Endnode and RBridge" anchor="Sect4">
    <t>The subsections below describe Smart-Hello messages.</t>
	<section title="Smart-Hello Encapsulation">
    <t> Although a Smart Endnode is not an RBridge, does not send LSPs or 
    maintain a copy of the link state database, and
    does not perform routing calculations, it is required to have a 
    "Hello" mechanism (1) to announce to edge RBridges that it
    is a Smart Endnode and (2) to tell them what MAC addresses 
    it is handling in what Data Labels. Similarly, an edge RBridge
    that supports Smart Endnodes needs a message (1) to announce
    that support, (2) to inform Smart Endnodes what nickname to use 
    for ingress and what nickname(s) can be used as egress nickname 
    in a multi-destination
    TRILL Data packet, and (3) the list of Smart Endnodes it knows
    about on that link.</t>
    
    <t> The messages sent by Smart Endnodes and by edge RBridges 
    that support Smart Endnodes are called "Smart-Hellos". 
	The Smart-Hello is a type of TRILL ES-IS PDU, which is 
	specified in <xref target="RFC8171"></xref>.</t>
     
    <t>The Smart-Hello Payload, both for Smart-Hellos sent 
    by Smart Endnodes and for Smart-Hellos sent by edge
    RBridges, consists of TRILL IS-IS TLVs as described
    in the following two subsections. The non-extended
    format is used so TLVs, sub-TLVs, and APPsub-TLVs 
    have an 8-bit size and type field. Both types of 
    Smart-Hellos MUST include a Smart-Parameters 
    APPsub-TLV as follows inside a TRILL GENINFO TLV:</t>
    
    <figure title="Smart-Parameters APPsub-TLV" anchor="fig2">
         <artwork align="center"><![CDATA[
    +-+-+-+-+-+-+-+-+-
    |Smart-Parameters|                 (1 byte)
    +-+-+-+-+-+-+-+-+-
    |    Length      |                 (1 byte)
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |        Holding Time           |  (2 bytes)
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |             Flags             |  (2 bytes)
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

            ]]></artwork>
       <postamble></postamble>
      </figure>

      <t><list style="symbols">

     <t>Type: APPsub-TLV type Smart-Parameters, value is 22.</t>
    <t>Length: 4.</t>
    <t>Holding Time: A time in seconds as an unsigned integer. It has the same
    meaning as the Holding Time field in IS-IS Hellos <xref
      target="IS-IS"></xref>. A Smart Endnode and an
      edge RBridge supporting Smart Endnodes MUST send a Smart-Hello at 
      least three times during their Holding Time. If no Smart-Hellos are received 
      from a Smart Endnode or edge RBridge within the most recent Holding Time it sent,
      it is assumed that it is no longer available.</t>
    <t>Flags: At this time, all of the Flags are reserved and MUST be sent
    as zero and ignored on receipt.</t>     
    <t>If more than one Smart-Parameters APPsub-TLV appears in a Smart-Hello, 
    the first one is used and any following ones are ignored. If no Smart-Parameters APPsub-TLVs appear in a Smart-Hello, that Smart-Hello is ignored.</t>   </list></t> 
    </section>
    
	<section title="Edge RBridge's Smart-Hello">
	<t>The edge RBridge's Smart-Hello contains the following 
	information in addition to the Smart-Parameters APPsub-TLV:<list style="symbols">
	<t>RBridge's nickname. The nickname sub-TLV, specified in Section 
	2.3.2 in <xref target="RFC7176"></xref>, is reused here carried inside a
	TLV 242 (IS-IS router capability) in a Smart-Hello frame. 
    If more than one nickname appears in the Smart-Hello, 
    the first one is used and the following ones are ignored. </t>
	
	<t>Trees that RB1 can use when ingressing multi-destination frames. The Tree
	Identifiers sub-TLV, specified in Section 2.3.4 in
	<xref target="RFC7176"></xref>, is reused here.</t>
	
	<t>Smart Endnode neighbor list. The TRILL Neighbor 
	TLV, specified in section 2.5 in <xref target="RFC7176"></xref>, is reused for this purpose.</t>
    <t>An Authentication TLV MAY also be included.</t></list></t>

	</section>
    
	<section title="Smart Endnode's Smart-Hello">

	  
	<t>A new APPsub-TLV (Smart-MAC TLV) for use by Smart Endnodes is as defined below.
    In addition, there will be a Smart-Parameters APPsub-TLV and there MAY be an
    Authentication TLV in a Smart Endnode Smart-Hello.</t> 
	<t> If there are several VLANs/FGL Data Labels for that Smart Endnode,
    the Smart-MAC APPsub-TLV is included several times in the Smart Endnode's Smart-Hello.
    This APPsub-TLV appears inside a TRILL GENINFO TLV.</t>
	
 <figure title="Smart-MAC APPsub-TLV" anchor="fig3">
            <artwork align="center"><![CDATA[
 +-+-+-+-+-+-+-+-+
 |Type=Smart-MAC |                          (1 byte)
 +-+-+-+-+-+-+-+-+
 |   Length      |                          (1 byte)
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |F|M|   RSV     |  VLAN/FGL Data Label  |  (4 bytes)
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                          MAC (1)       (6 bytes)                 |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                      .................                           |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                          MAC (N)       (6 bytes)                 |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
            ]]></artwork>
       <postamble></postamble>
      </figure>	 <t><list style="symbols">
     <t>Type: TRILL APPsub-TLV Type Smart-MAC, value is 23.</t>
     <t>Length: Total number of bytes contained in the value field of
	 the TLV, that is, the sum of the length of the F/M/RSV/FGL Data 
	 Label fields and six times the number of MAC addresses present.
	 So, if there are n MAC addresses, this is 4+6*n.</t> 
	 <t>F: 1 bit. If it is set to 1, it indicates that the endnode supports
	 FGL Data Labels <xref target="RFC7172"></xref>, and that 
     this Smart-MAC APPsub-TLV has an FGL in the following VLAN/FGL field. Otherwise,
	 the VLAN/FGL Data Label field is a VLAN ID.  (See below for the format of 
	 the VLAN/FGL Data Label field).</t>	 
	 <t>M: 1 bit. If it is set to 1, it indicates multihoming (see <xref target="Sect6"/>). 
	 If it is set to 0, it indicates that the Smart Endnodes are not using multihoming. </t>	 
     <t>RSV: 6 bits; reserved for the future use. </t>
     <t>VLAN/FGL Data Label: 24 bits. If F is 1, this field is a 24-bit FGL Data Label for all subsequent
	 MAC addresses in this APPsub-TLV. Otherwise, if F is 0, the lower 12 bits are the VLAN of all subsequent
	 MAC addresses in this APPsub-TLV, and the upper 12 bits are not used (sent as zero and ignored on receipt). If there is no VLAN/FGL Data Label
	 specified, the VLAN/FGL Data Label is zero. </t>
     <t>MAC(i): This is a 48-bit MAC address reachable in the Data Label sent by the Smart Endnode that
      is announcing this APPsub-TLV.</t></list></t>
	 </section>
    </section>
   
    <section title="Processing Data Packets">
      
    <t>The subsections below specify the processing of Smart Endnode
    data packets. All TRILL Data packets sent to or from Smart
    Endnodes are sent in the Designated VLAN <xref
    target="RFC6325"></xref> of the local link but do not necessarily
    have to be VLAN tagged.</t>
	<section title="Data-Packet Processing for Smart Endnodes">
	<t>A Smart Endnode does not issue or receive LSPs or E-L1FS
	FS LSPs or calculate topology. It does the following:
	 <list style="symbols">	
     <t>A Smart Endnode maintains an endnode table of (the MAC address
     of remote endnode, Data Label, the nickname of the edge RBridge's
     attached) entries of end nodes with which the Smart Endnode is
     communicating. Entries in this table are populated the same way
     that an edge RBridge populates the entries in its table:
	  <list style="symbols">
	   <t>learning from (source MAC address ingress nickname) on
	   packets it decapsulates.</t>
       <t>by querying a directory <xref target="RFC7067"></xref>. </t>
	   <t>by having some entries configured.</t>
     </list>
	 </t>
	 <t>When Smart Endnode SE1 wishes to send unicast frame to remote node D, 
     if the (MAC address of remote endnode D, Data Label, nickname) entry is in SE1's endnode table,
     SE1 encapsulates the ingress nickname as the nickname of the RBridge (RB1),
     egress nickname as indicated in D's table entry. If D is unknown,
     SE1 either queries a directory or encapsulates the packet as a 
     multi-destination frame, using one of the trees that RB1 has specified
     in RB1's Smart-Hello. The mechanism for querying a directory is given in <xref target="RFC8171"></xref>.</t>
	  
	  <t>When SE1 wishes to send a Broadcast, Unknown Unicast, and Multicast (BUM) packet to the TRILL campus, SE1 encapsulates
	  the packet using one of the trees that RB1 has
      specified.</t>
	  </list>
	  </t>
      
	  <t>If the Smart Endnode SE1 sends a multi-destination TRILL Data packet, the destination
	  MAC of the outer Ethernet is the All-RBridges multicast address.</t>
      
	  <t>The Smart Endnode SE1 need not send Smart-Hellos as frequently as normal
      RBridges. These Smart-Hellos could be periodically unicast to the
      Appointed Forwarder RB1. In case 
      RB1 crashes and restarts, or the DRB changes and SE1 receives the 
      Smart-Hello without mentioning SE1, SE1 SHOULD
      send a Smart-Hello immediately. If RB1 is Appointed Forwarder for any of the VLANs that SE1
      claims, RB1 MUST list SE1 in its Smart-Hellos as a Smart Endnode neighbor.
	  </t>
	 </section>
	 
	 <section title="Data-Packet Processing for Edge RBridge">
	  <t>The attached edge RBridge processes and forwards TRILL
	  Data packets based on the endnode property rather than for
	  encapsulation and forwarding the native frames the same way
	  as the traditional RBridges. There are several situations
	  for the edge RBridges as follows:<list style="symbols">
	  
	    <t>If receiving an encapsulated unicast TRILL Data
	    packet from a port with a Smart Endnode, with RB1's
	    nickname as ingress, the edge RBridge RB1 forwards the
	    frame to the specified egress nickname, as with any
	    encapsulated frame.  However, RB1 SHOULD filter the
	    encapsulation frame based on the inner source MAC and Data
	    Label as specified for the Smart Endnode.  If the MAC (or
	    Data Label) is not among the expected entries of the
	    Smart Endnode, the frame would be dropped by the edge
	    RBridge. If the edge RBridge does not perform this check,
	    it makes it easier for a rogue end station to inject bogus
	    TRILL Data packets into the TRILL campus.</t>
	    
        <t>If receiving a unicast TRILL Data packet with RB1's
        nickname as egress from the TRILL campus, and the destination
        MAC address in the enclosed packet is a MAC address that has
        been listed by a Smart Endnode, RB1 leaves the packet
        encapsulated to that Smart Endnode. The outer Ethernet
        destination MAC is the destination Smart Endnode's MAC
        address, the inner destination MAC address is either the Smart
        Endnode's MAC address or some other MAC address that the Smart
        Endnode advertised in its Smart Hello, and the outer Ethernet
        source MAC address is the RB1's port MAC address. The edge
        RBridge still decreases the Hop count value by 1, for there is
        one hop between the RB1 and Smart Endnode.</t>
	  
	    <t>If receiving a multi-destination TRILL Data packet from
	    a port with a Smart Endnode, RBridge RB1 forwards the
	    TRILL encapsulation to the TRILL campus based on the
	    distribution tree indicated by the egress nickname. If the
	    egress nickname does not correspond to a distribution
	    tree, the packet is discarded. If there are any normal
	    endnodes (i.e., endnodes that are not Smart Endnodes) attached to the edge
	    RBridge RB1, RB1 decapsulates the frame and sends the
	    native frame to these ports possibly pruned based on
	    multicast listeners, in addition to forwarding the
	    multi-destination TRILL frame to the rest of the campus.
        </t>
		
	   <t>If RB1 receives a native multi-destination data frame, which is sent by an endnode that is not a Smart
	   Endnode, from a port, including hybrid endnodes (Smart Endnodes and endnodes that are not Smart Endnodes), 
	   RB1 will encapsulate it as multi-destination TRILL Data packet, and send the
	   encapsulated multi-destination TRILL Data packet out that same port to the Smart
	   Endnodes attached to the port, and also send the encapsulated multi-destination 
	   TRILL Data packet to the TRILL campus through other ports.</t>
	   
	    <t>If RB1 receives a multi-destination TRILL Data packet from a remote RBridge, and the
      exit port includes hybrid endnodes (Smart Endnodes and endnodes that are not Smart Endnodes),
      it sends two copies of multicast frames out the port, one as native and the other as a TRILL-encapsulated frame. When a Smart Endnode receives a multi-destination TRILL Data packet, it
      learns the remote (MAC address, Data Label, nickname) entry. A
      Smart Endnode ignores native data frames. A normal (non-Smart) endnode
      receives the native frame and learns the remote MAC address and
      ignores the TRILL Data packet. This transit solution may bring some
      complexity for the edge RBridge and waste network bandwidth resource, 
      so avoiding the hybrid endnodes scenario by attaching the endnodes that are Smart
      and non-Smart to different ports is
      RECOMMENDED.</t></list></t>
	  </section>
	 </section>
	 
	<section title="Multihoming Scenario" anchor="Sect6">	
     <t>Multihoming is a common scenario for the Smart Endnode. The Smart Endnode 
     is on a link attached to the TRILL domain in two places: edge RBridges RB1 
     and RB2. Take <xref target="Mfigure"/> as an example. The Smart Endnode 
     SE1 is attached to the TRILL domain by RB1 and RB2 separately. Both RB1 and RB2 
     could announce their nicknames to SE1.</t>
 
<figure title="Multihoming Scenario" anchor="Mfigure">
           <artwork align="center"><![CDATA[
             . .....................    
             .  +------+           . 
             .  | RB1  |           .
             . /+------+           .
+----------+ ./            +-----+ .    +----------+
|SE1(Smart |/.             | RB3 |......| Smart    |
| Endnode1)| .\            +-----+ .    | Endnode2 |
+----------+ . \                   .    +----------+
             .  +-----+            .
             .  | RB2 |   TRILL    .
             .  +-----+   Domain   .
             .......................             
             ]]></artwork>
       <postamble></postamble>
      </figure>
                 
	   <t>Smart Endnode SE1 can choose either the nickname of RB1 or RB2 when
        encapsulating and forwarding a TRILL Data packet. If the active-active
		load balance is considered for the multihoming scenario,
		the Smart Endnode SE1 could use both the nickname of RB1 and RB2 to 
		encapsulate and forward TRILL Data packet. SE1 uses RB1's nickname when
        forwarding through RB1 and RB2's nickname when forwarding
        through RB2. This will cause MAC flip-flopping (see <xref target="RFC7379"></xref>)
		of the endnode table entry in the remote
        RBridges (or Smart Endnodes). The solution for the MAC flip-flopping issue
		is to set a multihoming bit in the
        RSV field of the TRILL Data packet.  When remote RBridge RB3 or
        Smart Endnodes receive a data packet with the multihomed bit
        set, the endnode entries (SE1's MAC address, label, RB1's
        nickname) and (SE1's MAC address, label, RB2's nickname) will
        coexist as endnode entries in the remote RBridge. (An alternative 
        solution would be to use the ESADI protocol to distribute multiple
        attachments of a MAC address of a multihoming group. The ESADI
		is deployed among the edge RBridges
		(see Section 5.3 of <xref target="RFC7357"></xref>).</t>
	 </section>
	  	
	 <section anchor="Security" title="Security Considerations">
	   
      <t>Smart-Hellos can be secured by using Authentication TLVs
      based on <xref target="RFC5310"> </xref>.  If they are not
      secured, then it is easier for a rogue end station that does not
      posses the required keying material to be falsely recognized as
      a valid Smart Endnode.</t>
      
    <t>For general TRILL Security Considerations, see <xref
    target="RFC6325"></xref>.  As stated there, since end stations
    are connected to edge RBridge ports by Ethernet, those ports MAY
    require end stations to authenticate themselves using <xref
    target="IEEE802.1X"></xref> and authenticate and encrypt traffic
    to/from the RBridge port with <xref target="IEEE802.1AE"></xref>.</t>
    
    <t>If they misbehave, Smart Endnodes can forge arbitrary ingress and
   egress nicknames in the TRILL headers of the TRILL Data packets they
   construct. Decapsulating at egress RBridges or remote Smart Endnodes
   that believe such a forged ingress nickname would send future traffic
   destined for the inner-source MAC address of the TRILL data frame to
   the wrong edge RBridge if data-plane learning is in use.  Because of
   this, an RBridge port should not be configured to support Smart
   Endnodes unless the end stations on that link are trusted or can be
    adequately authenticated.</t>
    
    <t>As with any end station, Smart Endnodes can forge the outer MAC
    addresses of packets they send (see Section 6 of <xref
    target="RFC6325"> </xref>.) Because they encapsulate TRILL Data
    packets, they can also forge inner MAC addresses. The
    encapsulation performed by Smart Endnodes also means they can send
    data in any Data Label, which means they must be trusted in order
    to enforce a security policy based on Data Labels.</t>
    
      <t>The TRILL-Hello is a type of TRILL ES-IS and is defined in
      <xref target="RFC8171"></xref>.  Receiving and processing
      TRILL-Hello for RBridges and Smart Endnodes would not bring more
      security and vulnerability issues than the TRILL ES-IS security
      defined in <xref target="RFC8171"></xref>.</t>
      
	  <t>For added security against the compromise of data due to
	  its misdelivery for any reason, including the above,
	  end-to-end encryption and authentication should be
	  considered; that is, encryption and authentication from
	  source end station to destination end station.</t>
	  
   <t>The mechanism described in this document requires Smart Endnodes
   to be aware of the MAC address(es) of the TRILL edge RBridge(s) to
   which they are attached and the egress RBridge nickname from which
   the destination of the packets is reachable. With that information,
   Smart Endnodes can learn a substantial amount about the topology of
   the TRILL domain. Therefore, there could be a potential security
   risk when the Smart Endnodes are not trusted or are
   compromised.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">    
      <t>IANA has allocated APPsub-TLV type numbers for the Smart-MAC and Smart-Parameters 
      APPsub-TLVs. The
      "TRILL APPsub-TLV Types under IS-IS TLV 251 Application Identifier 1" 
      registry has been updated as follows.</t>
      
    <texttable anchor="table2">
     <ttcol align = 'center'> Protocol </ttcol>
     <ttcol align = 'center'> Description </ttcol>
     <ttcol align = 'center'> Reference </ttcol>
     <c>22</c>
     <c>Smart-Parameters </c>
     <c>RFC 8384 </c>  
     <c>23</c>
     <c>Smart-MAC </c>
     <c>RFC 8384 </c> 
     </texttable>
     
     </section>
 

    
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>

    
    <references title="Normative References">
	
	   <reference anchor="IS-IS">
	    <front>	
		  <title>Information technology -- Telecommunications and information exchange between
systems -- Intermediate System to Intermediate System intra-domain routeing
information exchange protocol for use in conjunction with the protocol for
providing the connectionless-mode network service (ISO 8473)</title>
		  <author>
            <organization>International Organization for Standardization</organization>
          </author>	  
          <date year="2002"/>
	    </front>
          <seriesInfo name='ISO/IEC' value='10589:2002, Second Edition' />
	  </reference>
	        
	  <?rfc include='reference.RFC.2119'?>
			
      <?rfc include='reference.RFC.5310'?>
      
	  <?rfc include='reference.RFC.6325'?>
 	  
	  <?rfc include='reference.RFC.7176'?>
	  
	  <?rfc include='reference.RFC.7357'?>
	  
	  <?rfc include='reference.RFC.7172'?>
	  	  	  
	  <?rfc include='reference.RFC.7780'?>
	  	  
	  <?rfc include='reference.RFC.8171'?>
	  
	  <?rfc include='reference.RFC.8174'?>
	  	    
    </references>

    <references title="Informative References">
			  
	  <?rfc include='reference.RFC.7067'?>
	  
	  <?rfc include='reference.RFC.7379'?>
	  
	   <reference anchor="IEEE802.1X">
	    <front>	
		  <title>IEEE Standard for Local and metropolitan area networks
-- Port-Based Network Access Control </title>
		  <author>
            <organization>IEEE</organization>
          </author>	  
          <date />
	    </front>
<seriesInfo name='IEEE' value='802.1X' />
	  </reference>

	   <reference anchor="IEEE802.1AE">
	    <front>	
		  <title>IEEE Standard for Local and metropolitan area networks
-- Media Access Control (MAC) Security</title>
		  <author>
            <organization>IEEE</organization>
          </author>	  
          <date />
	    </front>
          <seriesInfo name='IEEE' value='802.1AE' />
	  </reference>	  
	      
    </references>    
        <section anchor="Acknowledgements" title="Acknowledgements" numbered="no">
      <t>The contributions of the following persons are gratefully
   acknowledged:
      Mingui Zhang, Weiguo Hao, Linda Dunbar, Kesava Vijaya Krupakaran, and Andrew Qu.</t>
    </section>

  </back>
</rfc>
