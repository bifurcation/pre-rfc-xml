<?xml version="1.0" encoding="US-ASCII"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc ipr="trust200902" number="8226" category="std" submissionType="IETF" consensus="yes">

  <front>
    <title abbrev="STIR Certs">Secure Telephone Identity Credentials: Certificates</title>

    <author initials="J." surname="Peterson" fullname="Jon Peterson">
      <organization abbrev="Neustar">Neustar, Inc.</organization>
      <address>
        <email>jon.peterson@neustar.biz</email>
      </address>
    </author>

    <author initials="S." surname="Turner" fullname="Sean Turner">
      <organization>sn3rd</organization>
      <address>
        <email>sean@sn3rd.com</email>
      </address>
    </author>

    <date month="February" year="2018"/>

    <abstract>

<t>In order to prevent the impersonation of telephone numbers on the
Internet, some kind of credential system needs to exist that
cryptographically asserts authority over telephone numbers.  This
document describes the use of certificates in establishing authority
over telephone numbers, as a component of a broader architecture for
managing telephone numbers as identities in protocols like SIP.</t>

    </abstract>

  </front>

  <middle>

<section anchor="introduction" title="Introduction">

<t>The Secure Telephone Identity Revisited (STIR) problem statement
<xref target="RFC7340"/> identifies the primary enabler of robocalling,
vishing (voicemail hacking), swatting, and related attacks as the
capability to impersonate a calling party number.  The starkest
examples of these attacks are cases where automated callees on the
Public Switched Telephone Network (PSTN) rely on the calling number as a
security measure -- for example, to access a voicemail system.  Robocallers
use impersonation as a means of obscuring identity. While robocallers can,
in the ordinary PSTN, block (that is, withhold) their caller identity,
callees are less likely to pick up calls from blocked identities;
therefore, appearing to call from some number, any number, is preferable.
Robocallers, however, prefer not to call from a number that can trace
back to the robocaller, and therefore they impersonate numbers that
are not assigned to them.</t>

<t>One of the most important components of a system to prevent
impersonation is the implementation of credentials that identify the
parties who control telephone numbers.  With these credentials,
parties can assert that they are in fact authorized to use
telephony numbers (TNs), and thus they distinguish themselves from
impersonators unable to present such credentials.  For that reason, the
STIR threat model <xref target="RFC7375"/> stipulates that "The design of the
credential system envisioned as a solution to these threats must, for example,
limit the scope of the credentials issued to carriers or national authorities
to those numbers that fall under their purview."  This document describes
credential systems for telephone numbers based on <xref target="X.509"/>
version 3 certificates in accordance with <xref target="RFC5280"/>.  While
telephone numbers have long been part of the X.509 standard (X.509 supports
arbitrary naming attributes to be included in a certificate; the
telephoneNumber attribute was defined in the 1988 <xref target="X.520"/>
specification), this document provides ways to determine authority
more aligned with telephone network requirements, including extending
X.509 with a Telephony Number Authorization List certificate extension,
which binds certificates to asserted authority for particular
telephone numbers or, potentially, telephone number blocks or ranges.</t>

<t>In the STIR in-band architecture specified in
<xref target="RFC8224"/>, two basic types of entities need access
to these credentials: authentication services and verification
services (or verifiers).  An authentication service must be operated
by an entity enrolled with the certification authority (CA) (see
<xref target="enrollment"/>), whereas a verifier need only trust the trust
anchor of the authority and also have a means to access and validate the
public keys associated with these certificates.  Although the guidance in
this document is written with the STIR in&nbhy;band architecture in mind,
the credential system described in this document could be useful for
other protocols that want to make use of certificates to assert
authority over telephone numbers on the Internet.</t>

<t>This document specifies only the credential syntax and semantics
necessary to support this architecture.  It does not assume any
particular CA or deployment environment.  We anticipate that some
deployment experience will be necessary to determine optimal
operational models.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
"SHALL&nbsp;NOT", "SHOULD", "SHOULD&nbsp;NOT", "RECOMMENDED",
"NOT&nbsp;RECOMMENDED", "MAY", and "OPTIONAL" in this document
are to be interpreted as described in BCP&nbsp;14
<xref format="default" pageno="false" target="RFC2119"/>
<xref format="default" pageno="false" target="RFC8174"/> when,
and only when, they appear in all capitals, as shown here.</t>

</section>

<section anchor="authority-for-telephone-numbers-in-certificates" title="Authority for Telephone Numbers in Certificates">

<t>At a high level, this specification details two non-exclusive
approaches that can be employed to determine authority over telephone
numbers with certificates.</t>

<t>The first approach is to leverage the existing subject of the
certificate to ascertain that the holder of the certificate is
authorized to claim authority over a telephone number.  The subject
might be represented as a domain name in the subjectAltName, such as
an "example.net" where that domain is known to relying parties as a
carrier, or represented with other identifiers related to the
operation of the telephone network, including Service Provider Codes
(SPCs) such as Operating Company Numbers (OCNs) or
Service Provider Identifiers (SPIDs) via the TN Authorization List specified
in this document.  A relying party could then employ an external data
set or service that determines whether or not a specific telephone
number is under the authority of the carrier identified as the
subject of the certificate and use that to ascertain whether or not
the carrier should have authority over a telephone number.
Potentially, a certificate extension to convey the URI of such an
information service trusted by the issuer of the certificate could be
developed (though this specification does not propose one).
Alternatively, some relying parties could form bilateral or
multilateral trust relationships with peer carriers, trusting one
another's assertions just as telephone carriers in the
Signaling System 7 (SS7) network today rely on transitive trust when
displaying the calling party telephone number received through SS7
signaling.</t>

<t>The second approach is to extend the syntax of certificates to
include a new attribute, defined here as the TN Authorization List, which
contains a list of telephone numbers defining the scope of authority
of the certificate.  Relying parties, if they trust the issuer of the
certificate as a source of authoritative information on telephone
numbers, could therefore use the TN Authorization List instead of the
subject of the certificate to make a decision about whether or not
the signer has authority over a particular telephone number.  The
TN Authorization List could be provided in one of two ways: as a literal
value in the certificate or as a network service that allows relying
parties to query in real time to determine that a telephone number is
in the scope of a certificate.  Using the TN Authorization List
rather than the certificate subject makes sense when, for example,
for privacy reasons the certificate owner would prefer not to be
identified, or in cases where the holder of the certificate does not
participate in the sort of traditional carrier infrastructure that
the first approach assumes.</t>

<t>The first approach requires little change to existing Public Key
Infrastructure (PKI) certificates; for the second approach, we must
define an appropriate enrollment and authorization process.  For the
purposes of STIR, the over-the-wire format specified in
<xref target="RFC8224"/> accommodates either of these approaches:
the methods for canonicalizing, for signing, for identifying and
accessing the certificate, and so on remain the same; it is only the
verifier behavior and authorization decision that will change,
depending on the approach to telephone number authority taken by the
certificate.  For that reason, the two approaches are not mutually
exclusive, and in fact a certificate issued to a traditional
telephone network service provider could contain a TN Authorization List
or not, were it supported by the CA issuing the credential.
Regardless of which approach is used, certificates that assert
authority over telephone numbers are subject to the ordinary
operational procedures that govern certificate use per <xref
target="RFC5280"/>. This means that verification services must be mindful of
the need to ensure that they trust the trust anchor that issued the
certificate and that they have some means to determine the freshness of
the certificate (see <xref target="cert-fresh"/>).</t>

</section>
<section anchor="certificate-usage-with-stir" title="Certificate Usage with STIR">

<t><xref target="RFC8224"/>, Section&nbsp;7.4 requires that all credential
systems used by STIR explain how they address the requirements
enumerated below.  Certificates as described in this document address
the STIR requirements as follows:</t>

<t><list style="numbers">
  <t>The URI <xref target="RFC3986"/> schemes permitted in the SIP Identity
header "info" parameter, as well as any special procedures required to
dereference the URIs: while normative text is given below in
<xref target="cert-acquire"/>, this mechanism permits the HTTP <xref
target="RFC7230"/>, CID (Content-ID) <xref target="RFC2392"/>, and
SIP URI schemes to appear in the "info" parameter.
</t>

  <t>Procedures required to extract keying material from the resources
designated by the URI: implementations perform no special
procedures beyond dereferencing the "info" URI.
See <xref target="cert-acquire"/>.</t>

  <t>Procedures used by the verification service to determine the
scope of the credential: this specification effectively proposes
two methods, as outlined
in <xref target="authority-for-telephone-numbers-in-certificates"/>:
one where the subject (or, more properly, subjectAltName) of the
certificate indicates the scope of authority through a domain name,
and relying parties either trust the subject entirely or have some direct
means of determining whether or not a number falls under a subject's
authority; and another where an extension to the certificate as
described in <xref target="tn-authz-list"/> identifies the scope of
authority of the certificate.</t>
  <t>The cryptographic algorithms required to validate the
credentials: for this specification, that means the signature
algorithms used to sign certificates.  This specification
REQUIRES that implementations support both the
Elliptic Curve Digital Signature Algorithm (ECDSA) with the P-256
curve (see <xref target="DSS"/>) and RSA PKCS&nbsp;#1 v1.5
("PKCS" stands for "Public-Key Cryptography Standards")
(see <xref target="RFC8017"/>, Section&nbsp;8.2) for certificate signatures.
Implementers are advised that the latter algorithm is mandated only as a
transitional mechanism, due to its widespread use in existing PKIs, but we
anticipate that this mechanism will eventually be deprecated.
</t>

  <t>Finally, note that all certificates compliant with this
specification:
  <list style="symbols">
      <t>MUST provide cryptographic keying material sufficient to
generate the ECDSA using P-256 and SHA-256 signatures
necessary to support the ES256 hashed signatures required by
PASSporT <xref target="RFC8225"/>, which in turn follows the
JSON Web Token (JWT) <xref target="RFC7519"/>.</t>
      <t>MUST support both ECDSA with P-256 and RSA PKCS&nbsp;#1 v1.5 for
certificate signature verification.</t>
    </list></t>
</list></t>

<t>This document also includes additional certificate-related
requirements:</t>

<t><list style="symbols">
  <t>See <xref target="constraints-on-signing-passports"/> for
requirements related to the JWT Claim Constraints certificate extension.

</t>
  <t>See <xref target="cert-acquire"/> for requirements related to
relying parties acquiring credentials.</t>
  <t>See Sections&nbsp;<xref target="cert-fresh" format="counter"/> and
<xref target="acquire" format="counter"/> for requirements related to
certificate freshness and the Authority Information Access (AIA)
certificate extension.</t>
</list></t>

</section>
<section anchor="enrollment" title="Enrollment and Authorization Using the TN Authorization List">

<t>This document covers three models for enrollment when using the
TN Authorization List extension.</t>

<t>The first enrollment model is one where the CA acts in concert with
national numbering authorities to issue credentials to those parties
to whom numbers are assigned.  In the United States, for example,
telephone number blocks are assigned to Local Exchange Carriers
(LECs) by the North American Numbering Plan Administration (NANPA),
who is in turn directed by the national regulator.  LECs may also
receive numbers in smaller allocations, through number pooling, or
via an individual assignment through number portability.  LECs assign
numbers to customers, who may be private individuals or organizations --
and organizations take responsibility for assigning numbers within
their own enterprise.  This model requires top-down adoption of the
model from regulators through to carriers.  Assignees of E.164
numbering resources participating in this enrollment model should
take appropriate steps to establish trust anchors.</t>

<t>The second enrollment model is a bottom-up approach where a CA
requires that an entity prove control by means of some sort of test
that, as with certification authorities for web PKI, might either be
(1)&nbsp;automated or (2)&nbsp;a manual administrative process.  As an
example of an automated process, an authority might send a text message
to a telephone number containing a URL (which might be dereferenced by
the recipient) as a means of verifying that a user has control of a
terminal corresponding to that number.  Checks of this form are
frequently used in commercial systems today to validate telephone
numbers provided by users.  This is comparable to existing enrollment
systems used by some certificate authorities for issuing S/MIME
credentials for email by verifying that the party applying for a
credential receives mail at the email address in question.</t>

<t>The third enrollment model is delegation: that is, the holder of a
certificate (assigned by either of the two methods above) might
delegate some or all of their authority to another party.  In some
cases, multiple levels of delegation could occur: a LEC, for example,
might delegate authority to a customer organization for a block of
100 numbers used by an IP PBX, and the organization might in turn
delegate authority for a particular number to an individual employee.
This is analogous to delegation of organizational identities in
traditional hierarchical PKIs who use the name constraints extension
<xref target="RFC5280"/>; the root CA delegates names in sales to the sales
department CA, names in development to the development CA, etc.  As
lengthy certificate delegation chains are brittle, however, and can
cause delays in the verification process, this document considers
optimizations to reduce the complexity of verification.</t>

<t>Future work might explore methods of partial delegation, where
certificate holders delegate only part of their authority.  For
example, individual assignees may want to delegate to a service
authority for text messages associated with their telephone number
but not for other functions.</t>

<section anchor="constraints-on-signing-passports" title="Constraints on Signing PASSporTs">

<t>The public key in the certificate is used to validate the signature
on a JWT <xref target="RFC7519"/> that conforms to the conventions
specified in PASSporT <xref target="RFC8225"/>.  This specification supports
constraints on the JWT claims, thereby allowing the CA to grant different
permissions to certificate holders -- for example, those enrolled from
proof&nbhy;of&nbhy;possession versus delegation.  A
Certificate Policy (CP) and a Certification Practice Statement (CPS) <xref
target="RFC3647"/> are produced as part of the normal PKI bootstrapping
process (i.e., the CP is written first, and then the CA says how it conforms
to the CP in the CPS).  A CA that wishes to place constraints on the JWT
claims MUST include the JWT Claim Constraints certificate extension in issued
certificates. See <xref target="jwt-claim-constraints-syntax"/> for
information about the certificate extension.</t>

</section>

<section anchor="certificate-extension-scope-and-structure" title="Certificate Extension Scope and Structure">

<t>This specification places no limits on the number of telephone
numbers that can be associated with any given certificate.  Some
service providers may be assigned millions of numbers and may wish
to have a single certificate that can be applied to signing for any
one of those numbers.  Others may wish to compartmentalize authority
over subsets of the numbers they control.</t>

<t>Moreover, service providers may wish to have multiple certificates
with the same scope of authority.  For example, a service provider
with several regional gateway systems may want each system to be
capable of signing for each of their numbers but not want to have
each system share the same private key.</t>

<t>The set of telephone numbers for which a particular certificate is
valid is expressed in the certificate through a certificate
extension; the certificate's extensibility mechanism is defined in
<xref target="RFC5280"/>, but the TN Authorization List extension
is specified in this document.</t>

<t>The subjects of certificates containing the TN Authorization List
extension are typically the administrative entities to whom numbers
are assigned or delegated.  For example, a LEC might hold a
certificate for a range of telephone numbers.  In some cases, the
organization or individual issued such a certificate may not want to
associate themselves with a certificate; for example, a private
individual with a certificate for a single telephone number might not
want to distribute that certificate publicly if every verifier
immediately knew their name.  The certification authorities issuing
certificates with the TN Authorization List extensions may, in
accordance with their policies, obscure the identity of the subject,
though mechanisms for doing so are outside the scope of this
document.</t>

</section>
</section>
<section anchor="provisioning-private-keying-material" title="Provisioning Private Keying Material">

<t>In order for authentication services to sign calls via the procedures
described in <xref target="RFC8224"/>, they must hold a private key
corresponding to a certificate with authority over the calling
number.  <xref target="RFC8224"/> does&nbsp;not require that any
particular entity in a SIP deployment architecture sign requests,
only that it be an entity with an appropriate private key; the
authentication service role may be instantiated by any entity in a
SIP network.  For a certificate granting authority only over a
particular number that has been issued to an end user, for example,
an end&nbhy;user device might hold the private key and generate the
signature.  In the case of a service provider with authority over
large blocks of numbers, an intermediary might hold the private key
and sign calls.</t>

<t>The specification RECOMMENDS distribution of private keys through
PKCS&nbsp;#8 objects signed by a trusted entity -- for example,
through the Cryptographic Message Syntax (CMS) package specified
in <xref target="RFC5958"/>.</t>

</section>
<section anchor="cert-acquire" title="Acquiring Credentials to Verify Signatures">

<t>This specification documents multiple ways that a verifier can gain
access to the credentials needed to verify a request.  As the
validity of certificates does not depend on the method of their
acquisition, there is no need to standardize any single mechanism for
this purpose.  All entities that comply with <xref target="RFC8224"/>
necessarily support SIP, and consequently SIP itself can serve as a way to
deliver certificates. <xref target="RFC8224"/> provides an "info" parameter of
the Identity header; this parameter contains a URI for the credential used to
generate the Identity header. <xref target="RFC8224"/> also requires that
documents that define credential systems list the URI schemes that may be
present in the "info" parameter.  For implementations compliant with this
specification, three URI schemes are REQUIRED: the CID URI, the SIP URI, and
the HTTP URI.</t>

<t>The simplest way for a verifier to acquire the certificate needed to
verify a signature is for the certificate to be conveyed in a
SIP&nbsp;request along with the signature itself.  In SIP, for example, a
certificate could be carried in a multipart MIME body <xref
target="RFC2046"/>, and the URI in the Identity header "info" parameter could
specify that body with a CID URI <xref target="RFC2392"/>.  However, in many
environments this is&nbsp;not feasible due to message size restrictions or
lack of necessary support for multipart MIME.</t>

<t>The Identity header "info" parameter in a SIP request may contain a
URI that the verifier dereferences.  Implementations of this
specification are REQUIRED to support the use of SIP for this
function (via the SUBSCRIBE/NOTIFY mechanism) as well as HTTP and
HTTPS.</t>

<t>Note well that as an optimization, a verifier may have access to a
service, a cache, or other local store that grants access to
certificates for a particular telephone number.  However, there may
be multiple valid certificates that can sign a call setup request for
a telephone number, and as a consequence, there needs to be some
discriminator that the signer uses to identify their credentials.
The Identity header "info" parameter itself can serve as such a
discriminator, provided implementations use that parameter as a key
when accessing certificates from caches or other sources.</t>

</section>
<section anchor="jwt-claim-constraints-syntax" title="JWT Claim Constraints Syntax">

<t>Certificate subjects are limited to specific values for PASSporT claims
with the JWT Claim Constraints certificate extension; issuers permit
all claims by omitting the JWT Claim Constraints certificate extension
from the certificate's extension field <xref target="RFC5280"/>.  The
extension is non&nbhy;critical, applicable only to end-entity certificates,
and defined with ASN.1 <xref target="X.680"/> <xref target="X.681"/>
<xref target="X.682"/> <xref target="X.683"/> later in this section.
The syntax of the claims is given in PASSporT; specifying new claims
follows the procedures in <xref target="RFC8225"/>, Section&nbsp;8.3.</t>

<t>This certificate extension is optional, but if present, it constrains
the claims that authentication services may include in the PASSporT
objects they sign.  Constraints are applied by issuers and enforced by
verifiers when validating PASSporT claims as follows:</t>

<t><list style="numbers">
  <t>mustInclude indicates claims that MUST appear in the PASSporT in
addition to iat, orig, and dest.  The baseline claims of PASSporT
("iat", "orig", and "dest") are considered to be permitted by default
and SHOULD NOT be included.  If mustInclude is absent, iat, orig, and
dest MUST appear in the PASSporT.</t>
  <t>permittedValues indicates that if the claim name is present, the
claim MUST contain one of the listed values.</t>
</list></t>

<t>Consider two examples with a PASSporT claim called "confidence" with
values "low", "medium", and  "high":</t>

<t><list style="symbols">
  <t>If a CA issues to an authentication service a certificate that
contains the mustInclude JWTClaimName "confidence", then an
authentication service MUST include the "confidence" claim in all
PASSporTs it generates; a verification service will treat as invalid
any PASSporT it receives with a PASSporT claim that does&nbsp;not include
the "confidence" claim.</t>
  <t>If a CA issues to an authentication service a certificate that
contains the permittedValues JWTClaimName "confidence" and a permitted
"high" value, then an authentication service will treat as invalid any
PASSporT it receives with  a PASSporT claim that does not include the
"confidence" claim with a "high" value.</t>
</list></t>

<t>The JWT Claim Constraints certificate extension is identified by the
following object identifier (OID), which is defined under the id-pe
OID arc defined in <xref target="RFC5280"/> and managed by IANA
(see <xref target="iana"/>):</t>

<figure><artwork><![CDATA[
  id-pe-JWTClaimConstraints OBJECT IDENTIFIER ::= { id-pe 27 }
]]></artwork></figure>

<t>The JWT Claim Constraints certificate extension has the following
syntax:</t>

<figure><artwork><![CDATA[
  JWTClaimConstraints ::= SEQUENCE {
    mustInclude [0] JWTClaimNames OPTIONAL,
      -- The listed claim names MUST appear in the PASSporT
      -- in addition to iat, orig, and dest.  If absent, iat, orig,
      -- and dest MUST appear in the PASSporT.
    permittedValues [1] JWTClaimPermittedValuesList OPTIONAL }
      -- If the claim name is present, the claim MUST contain one of
      -- the listed values.
  ( WITH COMPONENTS { ..., mustInclude PRESENT } |
    WITH COMPONENTS { ..., permittedValues PRESENT } )

  JWTClaimPermittedValuesList ::= SEQUENCE SIZE (1..MAX) OF
                                    JWTClaimPermittedValues

  JWTClaimPermittedValues ::= SEQUENCE {
    claim  JWTClaimName,
    permitted  SEQUENCE SIZE (1..MAX) OF UTF8String }

  JWTClaimNames ::= SEQUENCE SIZE (1..MAX) OF JWTClaimName

  JWTClaimName ::= IA5String
]]></artwork></figure>

</section>
<section anchor="tn-authz-list" title="TN Authorization List Syntax">

<t>The subjects of certificates containing the TN Authorization List
extension are the administrative entities to whom numbers are
assigned or delegated.  When a verifier is validating a caller's
identity, local policy always determines the circumstances under
which any particular subject may be trusted, but the purpose of the
TN Authorization List extension in particular is to allow a verifier
to ascertain when the CA has designated that the subject has
authority over a particular telephone number or number range.  The
non&nbhy;critical TN Authorization List certificate extension is
included in the certificate's extension field <xref target="RFC5280"/>.
The extension is defined with ASN.1 <xref target="X.680"/>
<xref target="X.681"/> <xref target="X.682"/> <xref target="X.683"/>.
The syntax and semantics of the extension are as follows.</t>

<t>The subjects of certificates containing the TN Authorization List
extension are the administrative entities to whom numbers are
assigned or delegated.  In an end-entity certificate, the
TN Authorization List indicates the TNs that it has authorized. In a
CA certificate, the TN Authorization List limits the set of TNs for
certification paths that include this certificate.</t>

<t>The TN Authorization List certificate extension is identified by the
following object identifier (OID), which is defined under the id-pe OID arc
defined in <xref target="RFC5280"/> and managed by IANA (see <xref
target="iana"/>):</t>

<figure><artwork><![CDATA[
  id-pe-TNAuthList OBJECT IDENTIFIER ::= { id-pe 26 }
]]></artwork></figure>

<t>The TN Authorization List certificate extension has the following
syntax:</t>

<figure><artwork><![CDATA[
 TNAuthorizationList ::= SEQUENCE SIZE (1..MAX) OF TNEntry

 TNEntry ::= CHOICE {
   spc   [0] ServiceProviderCode,
   range [1] TelephoneNumberRange,
   one   [2] TelephoneNumber
   }

 ServiceProviderCode ::= IA5String

 -- SPCs may be OCNs, various SPIDs, or other SP identifiers
 -- from the telephone network.

 TelephoneNumberRange ::= SEQUENCE {
   start TelephoneNumber,
   count INTEGER (2..MAX),
   ...
   }

 TelephoneNumber ::= IA5String (SIZE (1..15)) (FROM ("0123456789#*"))
]]></artwork></figure>

<t>The TN Authorization List certificate extension indicates the
authorized phone numbers for the call setup signer.  It indicates one
or more blocks of telephone number entries that have been authorized
for use by the call setup signer.  There are three ways to identify
the block:</t>

<t><list style="numbers">
  <t>SPCs as described in this document are a generic term for the
identifiers used to designate service providers in telephone networks
today.  In North American context, these would include OCNs as specified in
<xref target="ATIS-0300251"/>, related SPIDs, or other similar identifiers
for service providers. SPCs can be used to indirectly name all of the
telephone numbers associated with that identifier for a service provider.</t> 
  <t>Telephone numbers can be listed in a range (in the TelephoneNumberRange
  format), which consists of a starting telephone number and then an integer
  count of numbers within the range, where the valid boundaries of ranges may
  vary according to national policies. The count field is only applicable to
  start fields whose values do not include "*" or "#" (i.e., a TelephoneNumber
  that does not include "*" or "#").  count MUST&nbsp;NOT make the number
  increase in length (i.e., a TelephoneNumberRange with TelephoneNumber=10 and
  count=91 is invalid); formally, given the inputs count and TelephoneNumber
  of length D, TelephoneNumber + count MUST be less than 10^D.
</t>
  <t>A single telephone number can be listed (as a TelephoneNumber).</t>
</list></t>

<t>Note that because large-scale service providers may want to associate
many numbers, possibly millions of numbers, with a particular
certificate, optimizations are required for those cases to prevent the
certificate size from becoming unmanageable.  In these cases, the
TN Authorization List may be given by reference rather than by value,
through the presence of a separate certificate extension that permits
verifiers to either (1)&nbsp;securely download the list of numbers
associated with a certificate or (2)&nbsp;verify that a single number is under
the authority of this certificate.  For more on this optimization, see
<xref target="acquire"/>.</t>

</section>
<section anchor="cert-fresh" title="Certificate Freshness and Revocation">

<t>Regardless of which of the approaches in
<xref target="authority-for-telephone-numbers-in-certificates"/> is
followed for using certificates, a certificate verification mechanism is
required. However, the traditional problem of certificate freshness gains
a new wrinkle when using the TN Authorization List extension with telephone
numbers or number ranges (as opposed to SPCs), because verifiers must
establish not only that a certificate remains valid but also that
the certificate's scope contains the telephone number that the
verifier is validating.  Dynamic changes to number assignments can
occur due to number portability, for example.  So, even if a verifier
has a valid cached certificate for a telephone number (or a range
containing the number), the verifier must determine that the entity
that created the PASSporT, which includes a digital signature, is still a
proper authority for that number.
</t>

<t>To verify the status of such a certificate, the verifier needs to
acquire the certificate if necessary (via the methods described in
<xref target="cert-acquire"/>) and then would need to either:

<list style="format %c.">
<t>Rely on short-lived certificates and not check the certificate's
status, or</t>

<t>Rely on status information from the authority (e.g., the
Online Certificate Status Protocol (OCSP)).
</t>
</list></t>

<t>The trade-off between short-lived certificates and using status
information is that the former's burden is on the front end (i.e.,
enrollment) and the latter's burden is on the back end (i.e.,
verification).  Both impact call setup time, but some approaches to
generating a short-lived certificate, like requiring one for each
call, would incur a greater operational cost than acquiring status
information.  This document makes no particular recommendation for a
means of determining certificate freshness for STIR, as this requires
further study and implementation experience.  Acquiring online status
information for certificates has the potential to disclose private
information <xref target="RFC7258"/> if proper precautions are not taken.  Future
specifications that define certificate freshness mechanisms for STIR
MUST note any such risks and provide countermeasures where possible.</t>

<section anchor="acquire" title="Acquiring the TN List by Reference">

<t>One alternative to checking certificate status for a particular
telephone number is simply acquiring the TN Authorization List by
reference, that is, through dereferencing a URL in the certificate,
rather than including the value of the TN Authorization List in the
certificate itself.</t>

<t>Acquiring a list of the telephone numbers associated with a
certificate or its subject lends itself to an application-layer
query/response interaction outside of certificate status, one that
could be initiated through a separate URI included in the
certificate.  The AIA extension (see <xref target="RFC5280"/>) supports
such a mechanism: it designates an OID to identify the accessMethod and an
accessLocation, which would most likely be a URI.  A verifier would
then follow the URI to ascertain whether the TNs in the list are authorized
for use by the caller. As with the certificate extension defined in
<xref target="tn-authz-list"/>, a URI dereferenced from an end&nbhy;entity
certificate will indicate the TNs that the caller has been authorized.
Verifiers MUST support the AIA extension, and the dereferenced URI from a CA
certificate limits the set of TNs for certification paths that include this
certificate.</t>

<t>HTTPS is the most obvious candidate for a protocol to be used for
fetching the list of telephone numbers associated with a particular
certificate.  This document defines a new AIA accessMethod, called
"id-ad-stirTNList", which uses the following AIA OID:</t>

<figure><artwork><![CDATA[
  id-ad-stirTNList  OBJECT IDENTIFIER ::= { id-ad 14 }
]]></artwork></figure>

<t>When the "id-ad-stirTNList" accessMethod is used, the accessLocation
MUST be an HTTPS URI.  Dereferencing the URI will return the complete
DER&nbhy;encoded TN Authorization List (see <xref target="tn-authz-list"/>)
for the certificate with a Content-Type of application/tnauthlist
(see <xref target="mediatype"/>).</t>

<t>Delivering the entire list of telephone numbers associated with a
particular certificate will divulge to STIR verifiers information
about telephone numbers other than the one associated with the
particular call that the verifier is checking.  In some environments,
where STIR verifiers handle a high volume of calls, maintaining an
up-to-date and complete cache for the numbers associated with crucial
certificate holders could give an important boost to performance.</t>

</section>
</section>

<section anchor="iana" title="IANA Considerations">

<section anchor="asn" title="ASN.1 Registrations">

<t>This document makes use of object identifiers for the TN
certificate extension defined in <xref target="tn-authz-list"/>, the
"TN List by reference" AIA access descriptor defined in <xref
target="acquire"/>, and the ASN.1 module identifier defined in <xref
target="asn1-module"/>.  Therefore, per this document, IANA has made the
following assignments, as shown on &lt;https://www.iana.org/assignments/smi-numbers&gt;:</t>

<t><list style="symbols">
  <t>TN Authorization List certificate extension in the "SMI Security for
PKIX Certificate Extension" (1.3.6.1.5.5.7.1) registry:
<vspace blankLines="1"/>
26 &nbsp;id-pe-TNAuthList
  </t>

  <t>JWT Claim Constraints certificate extension in the "SMI Security for
PKIX Certificate Extension" (1.3.6.1.5.5.7.1) registry:
<vspace blankLines="1"/>
27 &nbsp;id-pe-JWTClaimConstraints
  </t>

  <t>TN List by reference access descriptor in the "SMI Security for
PKIX Access Descriptor" (1.3.6.1.5.5.7.48) registry:
<vspace blankLines="1"/>
14 &nbsp;id-ad-stirTNList
  </t>

  <t>The TN ASN.1 module in the "SMI Security for PKIX Module Identifier"
(1.3.6.1.5.5.7.0) registry:
<vspace blankLines="1"/>
89 &nbsp;id-mod-tn-module
  </t>
</list></t>

</section>

<section anchor="mediatype" title="Media Type Registrations">

<figure><artwork><![CDATA[
Type name: application
 Subtype name: tnauthlist
 Required parameters: None
 Optional parameters: None
 Encoding considerations: Binary
 Security considerations:  See Section 12 of RFC 8226
 Interoperability considerations:
    The TN Authorization List inside this media type MUST be
    DER-encoded TNAuthorizationList.
 Published specification: RFC 8226
 Applications that use this media type:
    Issuers and relying parties of secure telephone identity
    certificates, to limit the subject's authority to a
    particular telephone number or telephone number range.
 Fragment identifier considerations: None
 Additional information:
    Deprecated alias names for this type: None
    Magic number(s): None
    File extension(s): None
    Macintosh File Type Code(s): None
 Person & email address to contact for further information:
    Jon Peterson <jon.peterson@team.neustar>
 Intended usage: COMMON
 Restrictions on usage: None
 Author: Sean Turner <sean@sn3rd.com>
 Change controller: The IESG <iesg@ietf.org>
]]></artwork></figure>

</section>

</section>

<section anchor="security-considerations" title="Security Considerations">

<t>This document is entirely about security.  For further information on
certificate security and practices, see <xref target="RFC5280"/>, in
particular its Security Considerations section.</t>

<t>If a certification authority issues a certificate attesting authority
over many telephone numbers, the TNAuthList element can divulge to relying
parties extraneous telephone numbers associated with the certificate that
have no bearing on any given call in progress. The potential privacy risk
can be exacerbated by the use of AIA, as described in
<xref target="acquire"/>, to link many thousands of numbers to a single
certificate. Even an SPC in a certificate can be used to link a certificate to
a particular carrier and, with access to industry databases, potentially the
set of numbers associated with that SPC. While these practices may not cause
concern in some environments, in other scenarios alternative approaches could
minimize the data revealed to relying parties. For example, a service provider
with authority over a large block of numbers could generate short-lived
certificates for individual TNs that are not so easily linked to the service
provider or any other numbers that the service provider controls.
Optimizations to facilitate acquiring short-lived certificates are a
potential area of future work for STIR.</t>

<t>The TN Authorization List returned through a dereferenced URI is served
over HTTPS; the TN Authorization List is therefore protected in transit. But,
the TN Authorization List served is not a signed object and therefore the
server is trusted to faithfully return the TN Authorization List provided
to it by the list generator.</t>

</section>

  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="ATIS-0300251" >
  <front>
    <title>Codes for Identification of Service Providers for Information Exchange</title>
    <author >
      <organization>ATIS Recommendation 0300251</organization>
    </author>
    <date year="2007"/>
  </front>
</reference>

<reference anchor="DSS" target="http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf">
  <front>
    <title>Digital Signature Standard (DSS)</title>
    <author >
      <organization>National Institute of Standards and Technology, U.S. Department of Commerce</organization>
    </author>
    <date month="July" year="2013"/>
  </front>
  <seriesInfo name="NIST" value="FIPS PUB 186-4"/>
  <seriesInfo name="DOI" value="10.6028/NIST.FIPS.186-4"/>
</reference>

<?rfc include="reference.RFC.2119"?>
<?rfc include="reference.RFC.2392"?>
<?rfc include="reference.RFC.8017"?>
<?rfc include="reference.RFC.3986"?>
<?rfc include="reference.RFC.5280"?>
<?rfc include="reference.RFC.5912"?>
<?rfc include="reference.RFC.5958"?>
<?rfc include="reference.RFC.7230"?>
<?rfc include="reference.RFC.7258"?>
<?rfc include="reference.RFC.7519"?>
<?rfc include="reference.RFC.8174"?>

<!-- draft-ietf-stir-rfc4474bis (RFC 8224) -->
<reference anchor="RFC8224" target="https://www.rfc-editor.org/info/rfc8224">
<front>
<title>Authenticated Identity Management in the Session Initiation Protocol
(SIP)</title>
<author initials='J' surname='Peterson' fullname='Jon Peterson'>
    <organization />
</author>
<author initials='C' surname='Jennings' fullname='Cullen Jennings'>
    <organization />
</author>
<author initials='E' surname='Rescorla' fullname='Eric Rescorla'>
    <organization />
</author>
<author initials='C' surname='Wendt' fullname='Chris Wendt'>
    <organization />
</author>
<date month='February' year='2018' />
</front>
<seriesInfo name="RFC" value="8224"/>
<seriesInfo name="DOI" value="10.17487/RFC8224"/>
</reference>

<!-- draft-ietf-stir-passport (RFC 8225) -->
<reference anchor="RFC8225" target="https://www.rfc-editor.org/info/rfc8225">
<front>
<title>PASSporT: Personal Assertion Token</title>
<author initials='C' surname='Wendt' fullname='Chris Wendt'>
    <organization />
</author>
<author initials='J' surname='Peterson' fullname='Jon Peterson'>
    <organization />
</author>
<date month='February' year='2018' />
</front>
<seriesInfo name="RFC" value="8225"/>
<seriesInfo name="DOI" value="10.17487/RFC8225"/>
</reference>

<reference anchor="X.509" target="https://www.itu.int/rec/T-REC-X.509">
  <front>
    <title>Information technology - Open Systems Interconnection - The Directory: Public-key and attribute certificate frameworks</title>
    <author><organization>International Telecommunication Union</organization></author>
    <date month="October" year="2016"/>
  </front>
 <seriesInfo name="ITU-T Recommendation X.509," value="ISO/IEC 9594-8"/>
</reference>

<reference anchor="X.680" target="https://www.itu.int/rec/T-REC-X.680">
  <front>
    <title>Information Technology - Abstract Syntax Notation One (ASN.1): Specification of basic notation</title>
<author><organization>International Telecommunication Union</organization></author>
    <date month="August" year="2015"/>
  </front>
 <seriesInfo name="ITU-T Recommendation X.680," value="ISO/IEC 8824-1"/>
</reference>

<reference anchor="X.681" target="https://www.itu.int/rec/T-REC-X.681">
  <front>
    <title>Information Technology - Abstract Syntax Notation One (ASN.1): Information object specification</title>
<author><organization>International Telecommunication Union</organization></author>
    <date month="August" year="2015"/>
  </front>
 <seriesInfo name="ITU-T Recommendation X.681," value="ISO/IEC 8824-2"/>
</reference>

<reference anchor="X.682" target="https://www.itu.int/rec/T-REC-X.682">
  <front>
    <title>Information Technology - Abstract Syntax Notation One (ASN.1): Constraint specification</title>
<author><organization>International Telecommunication Union</organization></author>
    <date month="August" year="2015"/>
  </front>
 <seriesInfo name="ITU-T Recommendation X.682," value="ISO/IEC 8824-3"/>
</reference>

<reference anchor="X.683" target="https://www.itu.int/rec/T-REC-X.683">
  <front>
    <title>Information Technology - Abstract Syntax Notation One (ASN.1): Parameterization of ASN.1 specifications</title>
<author><organization>International Telecommunication Union</organization></author>
    <date month="August" year="2015"/>
  </front>
 <seriesInfo name="ITU-T Recommendation X.683," value="ISO/IEC 8824-4"/>
</reference>

    </references>

    <references title='Informative References'>

<?rfc include="reference.RFC.2046"?>
<?rfc include="reference.RFC.3647"?>
<?rfc include="reference.RFC.7340"?>
<?rfc include="reference.RFC.7375"?>

<reference anchor="X.520" target="https://www.itu.int/rec/T-REC-X.520">
  <front>
    <title>Information technology - Open Systems Interconnection - The Directory: Selected attribute types</title>
<author><organization>International Telecommunication Union</organization></author>
  <date month="October" year="2016"/>
  </front>
 <seriesInfo name="ITU-T Recommendation X.520," value="ISO/IEC 9594-6"/>
</reference>

    </references>


<section anchor="asn1-module" title="ASN.1 Module">

<t>This appendix provides the normative ASN.1 <xref target="X.680"/>
definitions for the structures described in this specification using ASN.1,
as defined in <xref target="X.680"/>, <xref target="X.681"/>,
<xref target="X.682"/>, and <xref target="X.683"/>.</t>

<t>The modules defined in this document are compatible with the most
current ASN.1 specifications published in 2015 (see <xref target="X.680"/>,
<xref target="X.681"/>, <xref target="X.682"/>, and <xref target="X.683"/>).
None of the newly defined tokens in the 2008 ASN.1 (DATE, DATE-TIME, DURATION,
NOT-A-NUMBER, OID-IRI, RELATIVE&nbhy;OID&nbhy;IRI, TIME,
TIME&nbhy;OF&nbhy;DAY) are currently used in any of the
ASN.1 specifications referred to here.</t>

<t>This ASN.1 module imports ASN.1 from <xref target="RFC5912"/>.</t>

<figure><artwork><![CDATA[
 TN-Module-2016
   { iso(1) identified-organization(3) dod(6) internet(1) security(5)
     mechanisms(5) pkix(7) id-mod(0) id-mod-tn-module(89) }

 DEFINITIONS EXPLICIT TAGS ::= BEGIN

 IMPORTS

 id-ad, id-pe
 FROM PKIX1Explicit-2009  -- From RFC 5912
   { iso(1) identified-organization(3) dod(6) internet(1) security(5)
     mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51) }

 EXTENSION
 FROM PKIX-CommonTypes-2009  -- From RFC 5912
   { iso(1) identified-organization(3) dod(6) internet(1) security(5)
     mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57) }

 ;

 --
 -- JWT Claim Constraints Certificate Extension
 --

 ext-jwtClaimConstraints EXTENSION  ::= {
   SYNTAX JWTClaimConstraints IDENTIFIED BY id-pe-JWTClaimConstraints
   } 

 id-pe-JWTClaimConstraints OBJECT IDENTIFIER ::= { id-pe 27 }

 JWTClaimConstraints ::= SEQUENCE {
   mustInclude [0] JWTClaimNames OPTIONAL,
     -- The listed claim names MUST appear in the PASSporT
     -- in addition to iat, orig, and dest.  If absent, iat, orig,
     -- and dest MUST appear in the PASSporT.
   permittedValues [1] JWTClaimPermittedValuesList OPTIONAL }
     -- If the claim name is present, the claim MUST contain one of
     -- the listed values.
 ( WITH COMPONENTS { ..., mustInclude PRESENT } |
   WITH COMPONENTS { ..., permittedValues PRESENT } )

 JWTClaimPermittedValuesList ::= SEQUENCE SIZE (1..MAX) Of
                                   JWTClaimPermittedValues

 JWTClaimPermittedValues ::= SEQUENCE {
   claim  JWTClaimName,
   permitted  SEQUENCE SIZE (1..MAX) OF UTF8String }

 JWTClaimNames ::= SEQUENCE SIZE (1..MAX) OF JWTClaimName

 JWTClaimName ::= IA5String

 --
 -- Telephony Number Authorization List Certificate Extension
 --

 ext-tnAuthList  EXTENSION  ::= {
   SYNTAX TNAuthorizationList IDENTIFIED BY id-pe-TNAuthList
   }

 id-pe-TNAuthList OBJECT IDENTIFIER ::= { id-pe 26 }

 TNAuthorizationList ::= SEQUENCE SIZE (1..MAX) OF TNEntry

 TNEntry ::= CHOICE {
   spc    [0] ServiceProviderCode,
   range  [1] TelephoneNumberRange,
   one    [2] TelephoneNumber
   }

 ServiceProviderCode ::= IA5String

 -- SPCs may be OCNs, various SPIDs, or other SP identifiers
 -- from the telephone network.

 TelephoneNumberRange ::= SEQUENCE {
   start TelephoneNumber,
   count INTEGER (2..MAX),
   ...
   }

 TelephoneNumber ::= IA5String (SIZE (1..15)) (FROM ("0123456789#*"))

 -- TN Access Descriptor

 id-ad-stirTNList OBJECT IDENTIFIER ::= { id-ad 14 }

 END
]]></artwork></figure>

</section>

<section anchor="acknowledgments" title="Acknowledgments" numbered="no">

<t>Anders Kristensen, Russ Housley, Brian Rosen, Cullen Jennings, Dave
Crocker, Tony Rutkowski, John Braunberger, Eric Rescorla, and Martin
Thomson provided key input to the discussions leading to this document.  Russ
Housley provided some direct assistance and text surrounding the ASN.1
module.</t>

</section>

  </back>
</rfc>
