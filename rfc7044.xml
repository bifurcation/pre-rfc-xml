<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "http://xml.resource.org/authoring/rfc2629.dtd" [
<!ENTITY rfc3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY rfc3326 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3326.xml">
<!ENTITY rfc3323 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3323.xml">
<!ENTITY rfc2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4458 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">
<!ENTITY rfc3665 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3665.xml">
<!ENTITY rfc5627 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5627.xml">
<!ENTITY rfc5630 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5630.xml">
<!ENTITY rfc3087 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3087.xml">
<!ENTITY rfc4240 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4240.xml">
<!ENTITY rfc5039 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5039.xml">
<!ENTITY rfc4244 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4244.xml">
<!ENTITY rfc4458 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4458.xml">
<!ENTITY rfc3761 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3761.xml">
<!ENTITY rfc4769 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4769.xml">
<!ENTITY rfc3968 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3968.xml">
<!ENTITY rfc3966 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3966.xml">
<!ENTITY rfc5234 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml">
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes" ?>
<?rfc rfcedstyle="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no"?>
<?rfc sortrefs="no" ?>

<!-- used v2 -->

<rfc number="7044" category="std"
     ipr="pre5378Trust200902" obsoletes="4244" submissionType="IETF" consensus="yes">

  <front>
    <title abbrev="History-Info">An Extension to the Session Initiation
    Protocol (SIP) for Request&nbsp;History&nbsp;Information</title>

    <author fullname="Mary Barnes" initials="M." surname="Barnes">
      <organization>Polycom</organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <code></code>
          <region>TX</region>
          <country>US</country>
        </postal>

        <email>mary.ietf.barnes@gmail.com</email>
      </address>
    </author>

    <author fullname="Francois Audet" initials="F." surname="Audet">
      <organization>Skype</organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <region></region>

          <code></code>

          <country></country>
        </postal>

        <email>francois.audet@skype.net</email>
      </address>
    </author>

    <author fullname="Shida Schubert" initials="S.S." surname="Schubert">
      <organization>NTT</organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <region></region>

          <country></country>
        </postal>

        <email>shida@ntt-at.com</email>
      </address>
    </author>

    <author fullname="Hans Erik van Elburg" initials="J.F.J."
            surname="van Elburg">
      <organization>
        Detecon International Gmbh
        
      </organization>

      <address>
        <postal>
          <street>
            Sternengasse 14-16
          </street>

          <city>
            Cologne          
          </city>

          <country>
            Germany
          </country>
        </postal>

        <email>ietf.hanserik@gmail.com</email>
      </address>
    </author>

    <author fullname="Christer Holmberg" initials="C.H." surname="Holmberg">
      <organization>Ericsson</organization>

      <address>
        <postal>
          <street></street>

          <city>Hirsalantie 11</city>

          <region>Jorvas</region>

          <country>Finland</country>
        </postal>

        <email>christer.holmberg@ericsson.com</email>
      </address>
    </author>
    
    
    <date month="January" year="2014"/>

<!-- [rfced] FYI, we have used xml2rfc v2 (available from 
http://xml.resource.org) to convert this document to text. -->

<!-- [rfced] Please insert any keywords (beyond those that appear in 
the title) for use on http://www.rfc-editor.org/search/rfc_search.php. -->

<keyword>example</keyword>

    <abstract>
      <t>This document defines a standard mechanism for capturing the history
      information associated with a Session Initiation Protocol (SIP) request.
      This capability enables many enhanced services by providing the
      information as to how and why a SIP request arrives at a specific application
      or user. This document defines an optional SIP header field, History-Info, for
      capturing the history information in requests. The document also 
      defines SIP header field parameters
      for the History-Info and Contact header fields
      to tag the method by which the target of a request is determined. 
      In addition, this specification defines a value for the Privacy header field 
      that 
      directs the anonymization of values in the History-Info header field.
      This document obsoletes RFC 4244.	
      </t>
    </abstract>
  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t>Many services that SIP is anticipated to support require the ability
      to determine why and how a SIP request arrived at a specific application.
      Examples of such services include (but are not limited to) sessions
      initiated to call centers via "click to talk" SIP Uniform Resource
      Locators (URLs) on a web page, "call history/logging"-style services
      within intelligent "call management" software for SIP user agents (UAs),
      and calls to voicemail servers. Although SIP implicitly provides the
      retarget capabilities that enable SIP requests to be routed to chosen
      applications, there is a need for a standard mechanism within SIP for
      communicating the retargeting history of the requests. This request
      history information allows the receiving application to obtain information 
      about how and why the SIP request arrived at the application/user.</t>

      <t>
        This document defines a SIP header field, History-Info, to provide a
        standard mechanism for capturing the request history information to
        enable a wide variety of services for networks and end-users.
        SIP header field parameters
        are defined for the History-Info and Contact header fields
        to tag the method by which the target of a request is determined.      
        This specification also 
        defines a value, "history", for the Privacy header field. In addition,
        a SIP option tag, "histinfo", is defined.</t>

      <t>
        The
        History-Info header field provides a building block for development of 
        SIP-based applications and services.  The requirements for the solution described 
        in this specification are included in <xref
        target="requirements"></xref>. &nbsp;Example scenarios using
        the History-Info header field are available in 
        <xref target="CALLFLOWS"/>.  </t>
    </section>

    <section title="Conventions and Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"></xref>.</t>

      <t>The term "retarget" is used in this specification to refer to the
      process of a SIP entity changing the Request-URI (Section 
      7.1 of <xref target="RFC3261"/>) in a request based on the rules for
      determining request targets as described in Section 16.5 of <xref
      target="RFC3261"></xref> and of the subsequent forwarding of that request
      as described in step 2 in Section 16.6 of <xref target="RFC3261"></xref>.
      This includes changing the Request-URI due to a location service lookup and 
      redirect processing.  This also includes internal (to a proxy/SIP intermediary) changes
      of the URI prior to the forwarding of the request.      
      </t>

      <t>The terms "location service", "forward", "redirect", and "AOR"
(address-of-record) are used consistently with
      the terminology in <xref target="RFC3261"></xref>. </t>
      
      <t>The term "target user" is used in this specification as the human user
      associated with one or more particular AORs (in case the human user has
multiple aliases). </t>
      
      <t> The references to "domain for which the
      SIP entity/proxy/intermediary is responsible" are consistent with and intended to
      convey the same context as the usage of that terminology in <xref target="RFC3261"></xref>.
      The applicability of History-Info to architectures or models outside the context of 
      <xref target="RFC3261"></xref> is outside the scope of this specification.</t>
    </section>

    <section anchor="Background" title="Background">
      <t>SIP implicitly provides retargeting capabilities that enable SIP requests to
      be routed to specific applications as defined in <xref
      target="RFC3261"></xref>. The motivation for capturing the request
      history is that in the process of retargeting a request, old routing
      information can be forever lost. This lost information may be important
      history that allows elements to which the request is retargeted to process
      the request in a locally defined, application-specific manner. This
      document defines a mechanism for transporting the request history.
      Application-specific behavior is outside the scope of this
      specification.</t>

      <t>Current network applications for other protocols provide the ability for elements
      involved with the request to obtain additional information relating to
      how and why the request was routed to a particular destination. The
      following are examples of such applications:</t>

      <t><list style="numbers">
          <t>Web "referral" applications, whereby an application residing
          within a web server determines that a visitor to a website has
          arrived at the site via an "associate" site that will receive some
          "referral" commission for generating this traffic.</t>

          <t>Email relaying whereby the recipient obtains a detailed "trace 
          of the path" of the message from originator to receiver, including 
          the time of each relay.</t>

          <t>Traditional telephony services such as voicemail, call-center
          "automatic call distribution", and "follow me"-style services.</t>
        </list></t>

      <t>Several of the aforementioned applications currently define
      application-specific mechanisms through which it is possible to obtain
      the necessary history information.</t>

      <t>In addition, request history information could be used to enhance
      basic SIP functionality by providing the following: <list
          style="symbols">
          <t>Some diagnostic information for debugging SIP requests. </t>

          <t>Capturing aliases and Globally Routable User Agent URIs (GRUUs)
          <xref target="RFC5627"></xref>, which can be overwritten by a registrar or a "home proxy" (a proxy serving as the terminal point for routing an address-of-record) upon receipt of the initial request.</t>

          <t>Facilitating the use of limited use addresses (minted on demand)
          and sub-addressing.</t>

          <t>Preserving service-specific URIs that can be overwritten by a
          downstream proxy, such as those defined in <xref
          target="RFC3087"></xref>, and control of network announcements and
          Interactive Voice Response (IVR) with a SIP URI <xref target="RFC4240"></xref>.</t>

        </list></t>
        
   </section>  
   <!--end background-->   
        
   <section anchor="overview" title="Overview">
      <t>The fundamental functionality provided by the request history
      information is the ability to inform proxies and user agents (UAs) involved in
      processing a request about the history or progress of that request. 
      The solution
      is to capture the Request-URIs, as a request is retargeted, in a 
      SIP header field: History-Info. This allows for the capturing of the
      history of a request that would be lost with the normal SIP processing
      involved in the subsequent retargeting of the request. </t>
      
      <t> The History-Info header field is added to a request when a new request is
      created by a User Agent Client (UAC) or forwarded by a proxy, or when the target of a
      request is changed.  It
      is possible for the target of a request to be changed by the same
      proxy/SIP intermediary multiple times (referred to as 'internal retargeting'). 
      A SIP entity
      changing the target of a request in response to a redirect
      also propagates any History-Info header field from the initial
      request in the new request. The ABNF and detailed description of the History-Info
      header field parameters, along with examples, are provided in 
      <xref target="definitionhi"/>.  Sections <xref target="ua"
      format="counter"/>, <xref target="proxy" format="counter"/>, and
      <xref target="redirect" format="counter"/> provide the 
      detailed handling of the History-Info 
      header field by SIP user agents, proxies, and redirect servers, respectively.</t>
            
      <t> This specification also defines three new SIP header field parameters, "rc", 
      "mp", and "np", for the History-Info and Contact header fields
      to tag the method by which the target of a request is determined.
      Further detail on the use of these header field parameters is provided in
      <xref target="definitionhi"/>. </t> 
      
      <t> 
   This specification also defines a priv-value for the Privacy header,
   "history"; it requires anonymization of all the History-Info header
   field entries in a request or to a specific History-Info header field value
   (hi-entry) as described below.

 Further detail is provided in 
      <xref target="privacyhi"></xref>. 
      </t>
      <t>In addition, a SIP option tag, "histinfo", is defined.  The use of this option
      tag is described in <xref target="uac"></xref>.</t>    
      
   </section>
   <!--end overview-->   
           
          
      <section anchor="definitionhi" title="History-Info Header Field Protocol Structure">
       
        <t>The History-Info header field defined in this specification defines the usage in out-of-dialog requests or initial requests for a dialog (e.g., INVITE, REGISTER, MESSAGE, REFER and OPTIONS, PUBLISH and SUBSCRIBE, etc.) and any non-100 provisional or final responses to these requests.</t>
      
       <t>The following 
        provides details for the information that is captured in the 
        History-Info header field
        entries for each target used for forwarding a request.</t>

        <t><list style="symbols">
            <t>hi-targeted-to-uri: A mandatory parameter for
            capturing the Request-URI for the specific request as it is
            forwarded.</t>

            <t>hi-index: A mandatory parameter for History-Info
            reflecting the chronological order of the information, indexed to
            reflect the forking and retargeting of requests. The format for
            this parameter is a sequence of nonnegative integers, separated by dots to
            indicate the number of forward hops and retargets. This results in
            a tree representation of the history of the request, with the
            lowest-level index reflecting a leaf. By adding the
            new entries in chronological order (i.e., following existing entries per the
            details in <xref target="indexhi"></xref>), including the index and
            sending the messages using a secure transport, the ordering of the 
            History-Info header fields in
            the request is assured. In addition, applications may extract a
            variety of metrics (total number of retargets, total number of
            retargets from a specific branch, etc.) based upon the index
            values.  </t>
            
            <t>hi-target-param: An optional parameter reflecting the mechanism by which the Request-URI 
            captured in the hi-targeted-to-uri in the History-Info header field value (hi-entry)
            was determined.             
            This parameter is either an "rc", "mp",
            or "np" header field parameter, which is interpreted as follows:
                     
             <list style="hanging">
                <t>"rc": The hi-targeted-to-URI represents a change in 
                Request&nbhy;URI, while the target user remains the same. This
occurs, for example, when the user has multiple AORs as an alias. 
                The "rc" header field parameter contains the value of the hi-index 
                in the hi-entry with an hi&nbhy;targeted&nbhy;to&nbhy;uri that reflects the 
                Request-URI that was retargeted.</t>

                <t> "mp": The hi-targeted-to-URI represents a user other
                than the target user associated with the Request-URI in the incoming 
                request that was retargeted.
                This occurs when a request is statically or dynamically
                retargeted to another user represented by an AOR unassociated with 
                the AOR of the original target user.  The "mp" header field parameter 
                contains the value of the hi-index 
                in the hi-entry with an hi&nbhy;targeted&nbhy;to&nbhy;uri that reflects the 
                Request-URI that was retargeted, thus identifying the "mapped from"
                target.
                </t>
                
                <t> "np": The hi-targeted-to-URI represents that there was no change 
                in the Request-URI. This would apply, for example, when a proxy merely 
                forwards a request to a next-hop proxy and loose routing is used.
				The "np" header field parameter contains the	 	         	
         		value of the hi-index in the hi-entry with an hi&nbhy;targeted&nbhy;to&nbhy;uri that reflects the Request-URI that was copied unchanged	 		
         		into the request represented by this hi&nbhy;entry.  That value will	 		
         		usually be the hi-index of the parent hi-entry of this hi&nbhy;entry.
                </t>
              </list>
           </t>
              
            <t>Extension (hi-extension): A parameter to allow for future
            optional extensions. As per <xref target="RFC3261"></xref>, any
            implementation not understanding an extension MUST ignore
            it.</t>
          </list></t>
          
      
      <t>The ABNF syntax 
        <xref target="RFC5234"></xref>
        for the History-Info header field and header field parameters is as follows:</t>

        <figure>
          <artwork><![CDATA[
History-Info = "History-Info" HCOLON hi-entry *(COMMA hi-entry)

hi-entry = hi-targeted-to-uri *(SEMI hi-param) 

hi-targeted-to-uri = name-addr

hi-param = hi-index / hi-target-param / hi-extension

hi-index = "index" EQUAL index-val

index-val =  number *("." number)

number =  [ %x31-39 *DIGIT ] DIGIT

hi-target-param = rc-param / mp-param / np-param

rc-param = "rc" EQUAL index-val

mp-param = "mp" EQUAL index-val 

np-param = "np" EQUAL index-val 

hi-extension = generic-param
]]></artwork>

        </figure>
         <t>The ABNF  definitions for "generic-param", "name-addr", "HCOLON", "COMMA", 
            "SEMI", and "EQUAL" are from <xref target="RFC3261"></xref>.</t>
         
        <t> This document also extends the "contact-params" for the Contact header field as 
        defined in <xref target="RFC3261"/> with the "rc", "mp", and "np" header field parameters defined above.</t>                    
              
       
        <t> In addition to the parameters defined by the ABNF, an hi-entry may also 
        include a Reason header field and/or a Privacy header field, which are both 
        included in the "headers" component of the hi&nbhy;targeted-to-uri
        as described below:</t>
        
        <t>
        <list style="symbols">
          <t>Reason: An optional parameter for History-Info, reflected in
            the History-Info header field by including the Reason header field <xref
            target="RFC3326"></xref> included in the hi-targeted-to-uri. A reason is 
            included in the hi-targeted-to-uri of an hi-entry to reflect information 
            received in a response to the request sent to that URI.</t>

            <t>Privacy: An optional parameter for History-Info, reflected in the
      History-Info header field values by including the Privacy header 
      <xref target="RFC3323"></xref> with a priv-value of "history", as defined in this document, 
      included in the hi-targeted-to-uri or by adding the
      Privacy header field with a priv-value of "history" to the request.  The latter case indicates
      that the History-Info entries for all History-Info entries whose
      hi-targeted-to-uri has the same domain as the domain for which the
      SIP entity processing the message is responsible MUST be
      anonymized prior to forwarding, whereas the use of the Privacy
      header field included in the hi&nbhy;targeted-to-uri means that a
      specific hi-entry MUST be anonymized.      
</t>

<!-- [rfced] Does the "whereas" portion refer to the former case?
If so, we suggest providing the meaning with each case when it is
introduced.

Original:
   o  Privacy: An optional parameter for History-Info, reflected in the
      History-Info header field values by including the Privacy Header
      [RFC3323] with a priv-value of "history", as defined in this
      document, included in the hi- targeted-to-uri or by adding the
      Privacy header field with a priv-value of "history" to the
      request.  The latter case indicates that the History-Info entries
      for all History-Info entries whose hi-targeted-to-uri has the same
      domain as the domain for which the SIP entity processing the
      message is responsible MUST be anonymized prior to forwarding,
      whereas the use of the Privacy header field included in the hi-
      targeted-to-uri means that a specific hi-entry MUST be anonymized. 

Perhaps:

   o  Privacy: An optional parameter for History-Info, reflected in the
      History-Info header field values by including the Privacy header
      [RFC3323] with a priv-value of "history", as defined in this
      document.  It can be included in the hi-targeted-to-uri, which
      means that a specific hi-entry MUST be anonymized.  Or, it can be
      added with a priv-value of "history" to the request; this
      indicates that the History-Info entries for all History-Info
      entries whose hi-targeted-to-uri has the same domain as the
      domain for which the SIP entity processing the message is
      responsible MUST be anonymized prior to forwarding.
-->

      </list>
      </t>
                    
      <t> Note that since both the Reason and Privacy parameters 
          are included in the hi-targeted-to-uri, these
          fields will not be available in the case that the hi-targeted-to-uri is a Tel-URI 
          <xref target="RFC3966"></xref>.</t> 

     
        <t>The following provides examples of the format for the History-Info
   header field.  Note that the backslash, CRLF, and whitespace between
   the lines in the examples below are inserted for readability purposes
   only.  Note, however, that History-Info can be broken into multiple lines due to the
   SWS (sep whitespace) that is part of HCOLON, COMMA, and SEMI, and there can be multiple
   History-Info header fields due to the rule of Section 7.3 of <xref target="RFC3261"/>.  
   Additional detailed examples are available in <xref target="CALLFLOWS"/>.  
</t>

        <t>
        <figure><artwork><![CDATA[
History-Info: <sip:UserA@ims.example.com>;index=1;foo=bar

History-Info: <sip:UserA@ims.example.com?Reason=SIP%3B\
              cause%3D302>;index=1.1,\
              <sip:UserB@example.com?Privacy=history&Reason=SIP%3B\
              cause%3D486>;index=1.2;mp=1.1,\
              <sip:45432@192.168.0.3>;index=1.3;rc=1.2 ]]></artwork>
        </figure>
        </t>
    
 <section anchor="example" title="History-Info Header Field Example Scenario">
         <t>The following is an illustrative example of usage of
      History-Info. </t>

      <t>In this example, Alice (sip:alice@atlanta.example.com) calls Bob
      (sip:bob@biloxi.example.com). Alice's proxy in her home domain
      (sip:atlanta.example.com) forwards the request to Bob's proxy
      (sip:biloxi.example.com). When the request arrives at
      sip:biloxi.example.com, it does a location service lookup for
      bob@biloxi.example.com and changes the target of the request to Bob's
      Contact URIs that were provided as part of normal SIP registration. In this
      example, Bob is simultaneously contacted on a PC client and on a phone,
      and Bob answers on the PC client.</t>

      <t>
        One important thing illustrated by this call flow is that without
   History-Info, Bob would "lose" the original target information or the
   initial Request-URI, including any parameters in the Request-URI.
   Bob can recover that information by locating the last hi-entry with
   an "rc" header field parameter.  This "rc" header field parameter
   contains the index of the hi-entry containing the lost target
   information, i.e., the sip:bob@biloxi.example.com hi-entry with
   index=1.1.  Note that in the 200 response to Alice, an hi-entry is
not included for the fork to sip:bob@192.0.2.7 (index 1.1.1) since
   biloxi.example.com had not received a response from that fork at the
   time it sent the 200 OK that ultimately reached Alice.</t>
   
   <t> Additional detailed examples are available in 
   <xref target="CALLFLOWS"/>.</t> 

      <t><list style="empty">
          <t>Note: This example uses loose routing procedures.</t>
        </list></t>

      <figure anchor="basicFlow" title="Basic Call">
        <artwork><![CDATA[
Alice   atlanta.example.com  biloxi.example.com   Bob@pc  Bob@phone
|                |                |                |          |
|   INVITE sip:bob@biloxi.example.com;p=x          |          |
|--------------->|                |                |          |
| Supported: histinfo             |                |          |
| History-Info: <sip:bob@biloxi.example.com;p=x>;index=1      |
|                |                |                |          |
|                |   INVITE sip:bob@biloxi.example.com;p=x    |
|                |--------------->|                |          |
| History-Info: <sip:bob@biloxi.example.com;p=x>;index=1      |
| History-Info: <sip:bob@biloxi.example.com;p=x>;np=1;index=1.1
|                |                |                |          |
|                |                |   INVITE sip:bob@192.0.2.3|
|                |                |--------------->|          |
| History-Info: <sip:bob@biloxi.example.com;p=x>;index=1      
| History-Info: <sip:bob@biloxi.example.com;p=x>;np=1;index=1.1    
| History-Info: <sip:bob@192.0.2.3>;index=1.1.1;rc=1.1           
|                |                |                |          |
|                |                |   INVITE sip:bob@192.0.2.7|
|                |                |-------------------------->|
| History-Info: <sip:bob@biloxi.example.com;p=x>;index=1      
| History-Info: <sip:bob@biloxi.example.com;p=x>;np=1;index=1.1    
| History-Info: <sip:bob@192.0.2.7>;index=1.1.2;rc=1.1            
|                |                |     200        |          |
|                |                |<---------------|          |
| History-Info: <sip:bob@biloxi.example.com;p=x>;index=1      
| History-Info: <sip:bob@biloxi.example.com;p=x>;np=1;index=1.1    
| History-Info: <sip:bob@192.0.2.3>;index=1.1.1;rc=1.1            
|                |                |                |          |
|                |     200        |                |          |
|                |<---------------|                |          |
| History-Info: <sip:bob@biloxi.example.com;p=x>;index=1      
| History-Info: <sip:bob@biloxi.example.com;p=x>;np=1;index=1.1    
| History-Info: <sip:bob@192.0.2.3>;index=1.1.1;rc=1.1              
|                |                |                |          |
|                |                | Proxy Cancels INVITE      |
|                |                |<=========================>|
|                |                |                |          |
|     200        |                |                |          |         
|<---------------|                |                |          |
| History-Info: <sip:bob@biloxi.example.com;p=x>;index=1
| History-Info: <sip:bob@biloxi.example.com;p=x>;np=1;index=1.1
| History-Info: <sip:bob@192.0.2.3>;index=1.1.1;rc=1.1
|                |                |                |          |
|     ACK        |                |                |          |
|--------------->|    ACK         |                |          |
|                |--------------->|     ACK        |          |
|                |                |--------------->|          |

]]></artwork>
      </figure>
      
    </section>
    <!--end example-->
      
      </section>  
      
   <!--end hidefinition-->    
    
    

    <section anchor="ua" title="User Agent Handling of the History-Info Header Field">
				<t> This section describes the
				processing specific to UAs -- User Agent Clients (UACs),
				User Agent Servers (UASs), and
				Back-to-Back User Agents (B2BUAs) --
				for the History-Info header.</t>

      <section anchor="uac" title="User Agent Client (UAC) Behavior">
        <t>The UAC MUST include the "histinfo" option tag in the Supported
        header field in any out-of-dialog requests or initial requests for a dialog for
        which the UAC would like the History-Info header field in the response. When 
        issuing a request, the UAC MUST follow the procedures in <xref target="sendReq"/>. 
        In the case of an initial request, except where the UAC is part of a B2BUA, there is no cache of hi-entries with which to populate the History-Info header field, and the hi&nbhy;index is set to 1 per 
        <xref target="indexhi"/>. 
        When receiving a response, the UAC MUST follow the procedures in <xref target="receiveResponse"/>. 
        </t>     
		<t>
 If the UAC generates further forks of the initial request (either due	 		
   to acting on a 3xx response or internally directed forking to	 		
   multiple destinations), the successive requests will add hi-entries	 		
   with hi-indexes of 2, 3, etc.</t> 
        
      </section>
      <!--end uac-->

      <section anchor="uas" title="User Agent Server (UAS) Behavior">      
        <t> When receiving a request, a UAS MUST follow the procedures defined in 
        <xref target="sendReq"/>.  When sending a response other than a 3xx response, a
        UAS MUST follows the procedures defined in <xref target="hiresponse"/>.  
        When sending a 3xx response, the UAS MUST follow the procedures defined for a 
        redirect server per <xref target="redirect"/>.  An application at the UAS can make
        use of the cached hi-entries as described in   
        <xref target="application"/>.        
        </t> 
       </section>
      <!--end uas-->
      <section anchor="b2bua" title="Back-to-Back User Agent (B2BUA) Behavior">        
	      <t>A B2BUA MAY 
	      follow the behavior of a SIP intermediary, per <xref target="proxy"/>, as an alternative to
	      following the behavior of a UAS per <xref target="uas"/>
	      or a UAC per 
	      <xref target="uac"/>. In behaving as an intermediary, a B2BUA carries forward
	      hi-entries received in requests at the UAS to requests being forwarded 
	      by the UAC, as well as carrying forward hi&nbhy;entries in responses received at the UAC to 
	      the responses forwarded by the UAS, subject to privacy considerations 
	      per <xref target="privacyhi"/>.  
				</t>        
       </section>
		<!-- end B2BUA --> 

    </section>
    <!-- end UAs-->
    
    <section anchor="proxy" title="Proxy/Intermediary Handling of History-Info Header Fields">
      <t>
        This section describes the procedures for proxies and other SIP intermediaries
        for the handling of the History-Info header fields for each of the following scenarios:</t>
        <t>
        <list style="hanging">
        <t hangText="Receiving a Request:">  An intermediary MUST 
        follow the procedures in <xref target="receiveReq"/> for the handling of 
        hi-entries in incoming SIP requests. </t>
        <t hangText="Sending a Request:"> 
              For each outgoing request relating to a target in the target 
              set, the intermediary MUST follow the procedures of <xref target="sendReq"/>. </t>
        <t hangText="Receiving a Response or Timeout:"> An intermediary MUST follow
        the procedures of  <xref target="receiveResponse"/> when a SIP 
        response is received or a request times out.</t>
        <t hangText="Sending a Response:"> An intermediary MUST follow the 
        procedures of <xref target="hiresponse"/> for 
        the handling of the hi-entries when sending a SIP response. </t>         
        </list>   
        </t> 
        <t> 
          In some cases, an intermediary may retarget a request more than
          once before forwarding, i.e., a request is retargeted to a SIP entity that is
          "internal" to the intermediary before the same intermediary retargets the 
          request to an external target.   
          A typical example would be a proxy
          that retargets a request first to a different user (i.e., it maps to a
          different AOR) and then forwards it to a registered contact bound to the same 
          AOR. In this case, the intermediary MUST 
          add an hi-entry for (each of) the internal target(s) per the procedures in 
          <xref target="sendReq"/>.  The intermediary MAY include a Reason header field in the
          hi-entry with
          the hi-targeted-to-uri that has been retargeted. Note that this is shown in the 
          INVITE (F6) in
          the example entitled "Sequentially Forking (History-Info in Response)"
          in <xref target="CALLFLOWS"/>.                 
      </t>
    </section>  
    
    <section anchor="redirect" title="Redirect Server Handling of History-Info Header Fields">
          <t>A redirect server MUST follow the procedures in <xref target="receiveReq"/> when 
          it receives a SIP request.  A redirect server MUST follow 
          the procedures in <xref target="hiresponse"/> when it sends a 
          SIP response.  When 
          generating the Contact header field in a
          3xx response, the redirect server MUST add the appropriate "mp", "np", or "rc" 
          header field parameter to
          each Contact header field as described in 
          <xref target="targethi"/>, if applicable.
        </t>
     
      </section>
      <!-- end redirect-->      
    <section anchor="commonhi" title="Handling of History-Info Header Fields in Requests and Responses">
      <t>
        This section describes the procedures for SIP entities for the handling 
        of the History-Info header field in SIP requests and responses.
      </t>
      
      <section anchor="receiveReq" title="Receiving a Request">
       <t> When receiving a request, a SIP entity MUST keep a copy of 
       the hi&nbhy;entries from the incoming request. This document describes 
       this copy in terms of a cache containing 
       the hi-entries associated with the request. The hi-entries MUST be added
       to the cache in the order in which they were received in the request. </t>
           
       <t>
              If the Request-URI of the incoming request
              does not match the hi&nbhy;targeted-to-uri in the last hi-entry (i.e., the previous 
              SIP entity that sent the request did not include a History-Info header field), the SIP entity 
              MUST add an hi-entry to the end of the cache, on behalf of the previous 
			  SIP entity. This is done as follows, before proceeding to <xref target="sendReq" />.</t>
              <t>
              <list>
              <t>  The
              SIP entity MUST set the hi-targeted-to-uri to the value of the
              Request-URI in the incoming request. If the Request-URI is a Tel&nbhy;URI, it SHOULD be transformed into a SIP URI 
              (per Section 19.1.6 of <xref target="RFC3261"/>) before being added as an hi&nbhy;targeted&nbhy;to&nbhy;uri.
              </t>
              <t> If privacy is required, the SIP entity MUST follow the procedures of <xref target="privacyhi"></xref>.</t> 
              <t>  The SIP entity MUST set the hi-index parameter as described in <xref
              target="indexhi"></xref>.</t>
              <t>  The SIP entity MUST NOT
              include an "rc", "mp", or "np" header field parameter. </t>    
              </list>
              </t>      
      </section>
      
      
      <section anchor="sendReq" title="Sending a Request with History-Info">
      <t> When sending a request, a SIP entity MUST include all the hi-entries from 
      the cache that was created per <xref target="receiveReq" />. 
      In addition, the SIP entity MUST add a new hi-entry to the outgoing request,
      but the SIP entity MUST NOT add the hi-entry to the cache at this time.  
      The hi-entries in the outgoing
      request's History-Info header field represent the preorder of the tree of
      hi-entries, that is, by the lexicographic ordering of the hi-indexes.

      The new hi-entry is populated as follows:</t>            
            <t> 
             <list style="hanging">
               <t hangText="hi-targeted-to-uri:"> The hi-targeted-to-uri MUST be set
               to the value of the Request-URI of the current
              (outgoing) request.
 If the Request-URI is a Tel-URI, it SHOULD be transformed 
 into a SIP URI (per Section 19.1.6 of <xref target="RFC3261"/>) before 
 being added as an hi&nbhy;targeted&nbhy;to&nbhy;uri.</t>

              <t hangText="privacy:">  If privacy is required, the procedures of <xref
              target="privacyhi"></xref> MUST be followed.</t>  
              <t hangText="hi-index:"> The SIP entity MUST include an hi-index
              for the hi-entry as described in <xref
              target="indexhi"></xref>. </t>
              <t hangText="rc/mp/np:"> The SIP entity MUST include
              an "rc", "mp", or "np" header field parameter in the hi-entry, if applicable,
              per the procedures in <xref
              target="targethi"></xref>. </t>
              </list>
              </t>          
      </section>     
           
       <section anchor="receiveResponse" title="Receiving a Response with History-Info or Request Timeouts"> 
       <t> When a SIP entity receives a non-100 response or a request times out, the SIP entity performs 
       the following steps:</t>
                      

          <t><list style="hanging">
              <t hangText="Step 1:">Add hi-entry to cache</t>
              <t hangText=""> The SIP entity 
               MUST add the hi-entry that was added to the request that 
               received the non-100 response or timed out to the cache, if 
               it was not already cached.  
               The hi-entry MUST be added to the cache
               in ascending order as indicated by the
               values in the hi&nbhy;index parameters of the hi-entries (e.g., 1.2.1
               comes after 1.2 but before 1.2.2 or 1.3).  </t>

              <t hangText="Step 2:"> Add Reason header field</t> 

              <t hangText=""> If the response is not a 100 or 2xx response, the SIP entity adds one or 
							more Reason header fields to the hi-targeted-to-uri in the (newly) 
							cached hi-entry 
							reflecting the SIP response code in the non-100 or non-2xx response, 
							per the procedures of
      				<xref target="reasonhi"></xref>.</t>

              <t hangText="Step 3:">Add additional hi-entries</t>

              <t hangText="">The SIP entity MUST also add to the cache any hi-entries
              received in the response that are not already in the cache. This situation
              can occur when the entity that generated the non-100 response retargeted the 
              request before generating the response.  As per Step 1, the hi-entries
               MUST be added to the cache
               in ascending order as indicated by the
               values in the hi-index parameters of the hi-entries.</t>
            
            </list></t>
            <t> It is important to note that the cache (and the request or response) does not contain 
			hi-entries for requests that 
            have not yet received a non-100 response, so there can be gaps in indices (e.g., 1.2 and 
            1.4 could be present but not 1.3).  </t>

<t>
    Note that in the case that a request has traversed one or more
intermediaries that do not support RFC 4244 or this document,    
    there can be duplicate indices (due to forking), which would be added to
the appropriate position in the cache in the order in 
    which they are received.
</t>
       
       </section>
       
            
      <section anchor="hiresponse" title="Sending History-Info in Responses">
        <t>  When sending a response other than a 100, a SIP entity MUST include all the cached 
        hi-entries in the response, subject to the privacy consideration in <xref target="applyingprivacy"></xref>, and with the following exception: If the received request contained
        no hi-entries and there is no "histinfo" option tag in the Supported header field, 
        the SIP entity MUST NOT include History-Info in the response.</t>       
        
       </section>
      <!-- end responses -->
      
    </section>
    <!-- end common -->
    
     

       <section title="Processing the History-Info Header Field">
        <t>The following subsections describe the procedures for processing  
        the History-Info header field. These procedures are applicable to
        SIP entities such as proxies/intermediaries, redirect servers, or
        user agents.</t>

        <section anchor="privacyhi" title="Privacy in the History-Info Header Field">
          <t>The privacy requirements for this document are described in <xref
          target="privacyreq"></xref>.   <xref target="settingprivacy"> </xref> describes the insertion of
          the Privacy header field (defined in 
          <xref target="RFC3323"></xref>) to indicate the privacy to be applied to the History-Info header field
          entries.  <xref target="applyingprivacy"> </xref> describes how to apply privacy to a request or response that is being forwarded, based on the presence of the Privacy header field. 
         </t>


          <section anchor="settingprivacy" title="Indicating Privacy">
           
          <t>As with other SIP headers described in 
          <xref target="RFC3323"></xref>, the hi&nbhy;targeted&nbhy;to&nbhy;uris in the
          History-Info header field can inadvertently reveal
          information about the initiator of the request. Thus, the UAC needs a mechanism to 
          indicate that the hi&nbhy;targeted&nbhy;to&nbhy;uris in the hi&nbhy;entries need
          to be privacy protected. The Privacy header field is used by the UAC to indicate 
          that privacy is to be applied to all the hi-entries in the request as follows:
          <list style="symbols">
          <t> If the UAC is including a Privacy 
          header field with a priv-value of "header" in the request, then 
          the UAC SHOULD NOT include a priv-value of "history" in the Privacy header field in the 
          request.</t>
          <t> If the UAC is including any priv-values other than "header" 
          in the Privacy header field, 
          then the UAC MUST also include 
          a priv-value of "history" in the 
          Privacy header field in the request.</t>
          <t> If the UAC is not including any priv-values in the
          Privacy header field in the request, then
          the UAC MUST add a Privacy header field, with 
          a priv-value of "history", to the request. The UAC MUST NOT include a priv-value of "critical"
          in the Privacy header field in the request in this case. </t>          
          </list>
          </t>
                  
          <t> In addition, the History-Info header field can reveal general routing
   			and diverting information that is within an
   			intermediary and that the
   intermediary wants to privacy protect.  In this case, the
   intermediary MUST construct a Privacy header field with the single
   priv-value of "history" and include the Privacy header field in the
   hi-targeted-to-uri, for each new hi-entry created by the intermediary
   whose hi-targeted-to-uri it wishes to privacy protect.  Note that the
priv-value in the Privacy header for the incoming request does not
   necessarily influence whether the intermediary includes a Privacy
   header field in the hi-entries.  For example, even if the Privacy
   header for the incoming request contained a priv-value of "none", the
   proxy can still set a priv-value of "history" in the Privacy header
   field included in the hi-targeted-to-uri.</t>
          
          
         <t>Finally, the UAS may not want to reveal the final reached target to the originator. In this case, 
          the UAS MUST include a Privacy header field with a priv-value of "history"
          in the hi-targeted-to-uri in the last
          hi-entry, in the response. As noted above, the UAS of the request MUST NOT use 
          any other priv-values in the Privacy header field included in the hi-entry.</t>
          
          </section>
          <!-- end set privacy-->
          
          <section anchor="applyingprivacy" title="Applying Privacy">
          <t> When a SIP message is 
          forwarded to a domain for which the SIP intermediary is not 
          responsible, a Privacy 
          Service at the boundary of the domain applies the appropriate privacy based
          on the value of the Privacy header field in the message header or in the 
          "headers" component of the hi-targeted-to-uri in the 
          individual hi-entries.</t>
         
          <t>If there is a Privacy header field in the message header of a request
   or response, with a priv-value of "header" or "history", then all the
   hi-targeted-to-uris (in the hi-entries associated with the domain for
   which the SIP intermediary is responsible) are anonymized by the
   Privacy Service.  The Privacy Service MUST change any hi&nbhy;targeted&nbhy;to&nbhy;uris in these hi-entries that have not been anonymized (evidenced by
   their domain not being "anonymous.invalid") to anonymous URIs
   containing a domain of anonymous.invalid as recommended in 
   Section 4.1.1.3 of <xref target="RFC3323"/>.   
   As defined in Section 4.1.1.2 of <xref target="RFC3323"/>,
   the recommendations of <xref target="RFC3261"/> for anonymizing the 
   URI Username SHOULD be followed (i.e., "anonymous" in the 
   user portion of the URI). 
   If there is a Privacy header field in
   the "headers" component of the hi-targeted-to-uri in the hi-entries,
   then the Privacy header field value MUST be removed from the hi&nbhy;entry.  Once all the appropriate hi-entries have been anonymized, the
   Privacy Service MUST remove the priv-value of "history" from the
   Privacy header field in the message header of the request or
   response.  If there are no remaining priv-values in the Privacy
   header field, the Privacy Service MUST remove the Privacy header
   field from the request or response per <xref target="RFC3323"/>. </t>
            
         <t>
          If there is not a Privacy header field in the message header of the request or response
          that is being forwarded, but there is a Privacy header field with a priv-value of 
          "history" in the "headers" component in any of the hi-targeted-uris in the hi-entries
          associated with the 
          domain for which a SIP intermediary is responsible, then the Privacy Service MUST update those hi-targeted-to-uris as described
   above.  Any other priv-values in the Privacy header field in the
   "headers" component of the hi-targeted-to-uris in the hi-entries MUST be ignored. 
          In any case, the Privacy Service MUST remove
          the Privacy header field from the "headers" component of the hi-targeted-to-uris in the 
          hi-entries prior to
          forwarding.</t>
                    
          </section> 
          <!-- end apply privacy -->
                     
        </section>
        <!-- end privacy -->        
        

        <section anchor="reasonhi" title="Reason in the History-Info Header Field">
            <t>

    A Reason header field is added when the hi-entry is added to the cache
based upon
   the receipt of a SIP response that is neither a 100 nor a 2xx
   response, as described in <xref target="receiveResponse"/>.   The SIP entity MUST
   include a Reason header field, containing the SIP Response Code, in
   the "headers" component of the hi&nbhy;targeted&nbhy;to&nbhy;uri in the last hi&nbhy;entry added to the cache, unless the hi&nbhy;targeted&nbhy;to&nbhy;uri is a Tel&nbhy;URI.
   In addition, if the
   response contains any Reason header fields (see <xref target="RFC3326" />), then the
   SIP entity MUST also include the Reason header fields in the "headers"
   component of the hi&nbhy;targeted&nbhy;to&nbhy;uri in the last hi&nbhy;entry added to the
   cache.
</t>

            <t>If a request has timed out (instead of being explicitly rejected),
   the SIP entity MUST update the cache as if the request received a SIP
   error response code of 408 "Request Timeout".</t>

   <t>A request can receive multiple responses that are neither 100
   nor 2xx responses and that carry
   or imply (for responses without Reason headers, and for timeouts)
   multiple, possibly duplicated, reason&nbhy;values to be applied to an hi-targeted-to-uri.  In these situations, the SIP entity creating
   the History-Info header value would choose the appropriate Reason header
   field value. </t>
            
            <t> A SIP entity MAY also include a Reason header field (in the 
            "headers" component of an 
            hi-targeted-to-uri) that contains the URI of a request that was retargeted
            as a result of internal retargeting. </t>                
            <t>   If additional Reason header field parameters are defined in the
   future per  <xref target="RFC3326"></xref>, the use of these Reason header field parameters
   for the History-Info header field MUST follow the same rules as
   described above.</t>
       
         </section>
         <!-- end reason -->

        <section anchor="indexhi" title="Indexing in the History-Info Header Field">
          <t>In order to maintain ordering and accurately reflect the retargeting of the request, 
          the SIP entity MUST add an hi-index to each 
          hi-entry. 
          Per the syntax in <xref target="definitionhi"></xref>, the hi-index consists of a series of nonnegative integers separated by dots (e.g., 1.1.2).  Each dot
   reflects a SIP forwarding hop.  The nonnegative integer following
   each dot reflects the order in which a request was retargeted at the
 hop.  The highest nonnegative integer at each hop reflects the number
   of entities to which the request has been retargeted at the specific
   hop (i.e., the number of branches) at the time that the request
   represented by this hi-entry was generated.  Thus, the indexing
   results in a logical tree representation for the history of the
   request and the hi-entries are given in the preorder of the tree.

 </t>
                    
          
          <t>The first index in a series of History-Info entries MUST be set to
   1. In the case that a SIP entity (intermediary or UAS) adds a first
   hi&nbhy;entry on behalf of the previous hop, the hi-index MUST be set to 1.
   For each forward hop (i.e., each new level of indexing), the last
   integers of the hi-indexes of the new requests MUST be generated
   starting at 1 and incrementing by 1 for each additional request.
</t>

          <t>The basic rules for adding the hi-index are summarized as follows:
          <list style="numbers">
              <t>Forwarding a request without changing the target: In the case of a request that is being
              forwarded without changing the target, the hi-index reflects the increasing length of the branch.
              In this case, the SIP entity MUST read the value from
              the History-Info header field in the received request
              and MUST add another level of indexing by appending the dot
              delimiter followed by an initial value of 1 for the new level.
              For example, if the hi&nbhy;index in the last History-Info header field
              in the received request is 1.1, a proxy would add an hi-entry with an
              hi-index of 1.1.1 and forward the request.</t>

              <t>Retargeting within a processing entity - first instance: For
              the first instance of retargeting within a processing entity, the 
              SIP entity 
              MUST calculate the hi-index as prescribed for basic
              forwarding.</t>

              <t>Retargeting within a processing entity - subsequent instance:
              For each subsequent retargeting of a request by the same
              SIP entity, the SIP entity MUST calculate and add the hi-index for
              each new branch by incrementing the rightmost value from the hi-index in the last hi-entry. 
              Per the example above, the hi-index in the next request forwarded by
              this same SIP entity would
              be 1.1.2.</t>

              <t>Retargeting based upon a response: In the case of retargeting
              due to a specific response (e.g., 302), the SIP entity MUST calculate
              the hi-index 
              calculated per rule 3. That is, the rightmost value of the
              hi-index MUST be incremented (i.e., a new branch is created). 
              For example, if the hi-index in the History-Info
              header field of the sent request is 1.2 and the response to the request
              is a 302,
              then the hi-index in the
              History-Info header field for the new hi-targeted-to-URI would
              be 1.3.</t>

              <t>Forking requests: If the request forwarding is done in
              multiple forks (sequentially or in parallel), the SIP entity MUST
              set the hi-index for each hi-entry for 
              each forked request per the rules above, with each
              new request having a unique index. Each index MUST be sequentially
              assigned. For example, if the index in the last History-Info
              header field in the received request is 1.1, this processing
              entity would initialize its index to 1.1.1 for the first fork,
              1.1.2 for the second, and so forth. (See <xref
              target="basicFlow"></xref> for an example.) Note that,
              in the case of parallel forking, only the hi-entry corresponding to 
              the fork is included in the request because no response can yet have been received 
              for any of the parallel forked requests.</t>
              
              <t>Missing entry: If the request clearly has a gap in the 
              hi-entry (i.e., the last hi-entry and Request-URI differ), the entity adding 
              an hi-entry MUST add a single index with a value of "0" (i.e., the nonnegative 
              integer zero)
              prior to adding the appropriate index 
              for the action to be taken. 
              For example, if the index of the last hi-entry in the request received was 1.1.2 
              and there was a missing hi-entry and the request was being forwarded to 
              the next hop, the resulting index will be 1.1.2.0.1. In the case of requests that
              are forked by a proxy that does not support History-Info, 
              it is possible for hi-entries generated by different entities
              to have the same index, i.e., each entity supporting History-Info would receive a 
              forked request with the same hi-index to which they would add the value of ".0" prior 
              to adding the appropriate index. Thus, in the previous example, each of the next-hop entities would generate an hi-index of 1.1.2.0.1. </t>
            </list></t>
        </section>
        <!-- index -->

        <section anchor="targethi" title="Mechanism for Target Determination in the History-Info Header Field">
          <t>
            This specification defines three header field parameters, "rc", "mp", and
            "np".  The header field parameters 
            "rc" and "mp" indicate the mechanism by which a new target
            for a request is determined. The header field "np" reflects that 
            the target has not changed. All parameters contain an index whose value is the 
            hi-index of the hi&nbhy;entry with an hi-targeted-to-uri that represents 
            the Request-URI that was 
            retargeted.</t>
                        
           <t> The SIP entity MUST determine the specific parameter field to be included 
            in the hi-target-param, in the History-Info header field, 
            as the targets are
            added to the target set per the procedures in Section 16.5 of <xref target="RFC3261"/>
            or per Section 8.1.3.4 of <xref target="RFC3261"/> in the case of 
            retargeting to a Contact URI received in a 3xx response.  
            In the latter case, the specific header field parameter in the 
            Contact header field becomes the header field parameter that is 
            used in the hi-entry when the request is retargeted.
            If the Contact header field does not contain an
            "rc" or "mp" header field parameter, then the SIP entity 
            MUST NOT include an "rc" or "mp" header field parameter
            in the hi-target-param in the hi-entry when the request is 
            retargeted to a Contact URI received in a 3xx response. 
            This is because the redirect server is the only element with any  
            knowledge on how the target was determined. Note that the "np"
            header field parameter is not applicable in the case of
            redirection.  </t>
                      
                      
          <t> Based on the following criteria, the SIP entity (intermediary or redirect server) determines the specific header
          field parameter ("rc", "mp", or "np")  to be used.</t>
          <t>
            <list style="symbols">
              <t>
                "rc": The Request-URI has changed while the target user 
                associated with the original Request-URI prior to
                retargeting has been retained.
              </t>
                
            <t>
                "mp": The target was determined based on a mapping to a user other
                than the target user associated with the Request-URI being retargeted. 
                </t>

            <t>
                "np": The target hasn't changed, and the associated Request-URI remained 
                 the same. 
                </t>
            </list>
          </t>          
                 
          <t> Note that there are two scenarios by which the "mp" header field parameter can be
          derived.  </t>
          <t> 
          <list style="symbols">
          <t> The mapping was done by the receiving entity on its own authority, in which case
 the mp-value is the parent index of the hi-entry's index.</t>  

           <t> The mapping was done due to receiving a 3xx response, in which case the
 mp-value is an earlier sibling or descendant of an earlier sibling of the
hi-entry's index; the index is that of the downstream request that
received the 3xx response.   </t>  
           </list>      
          </t>
          
 
                  
        </section>
        <!-- end target -->
        
      </section>
      <!-- end header field parameters -->
      
    <section anchor="application" title="Application Considerations">
     <t> History-Info provides a very flexible building block that can be used
   by intermediaries and UAs for a variety of services.  

Prior to any
   application usage of the History-Info header field parameters, the
   SIP entity that processes the hi-entries MUST evaluate the hi&nbhy;entries and determine if there are any gaps in the hi&nbhy;entries.

 The SIP entity MUST be prepared to process effectively
   messages whose hi&nbhy;entries show evidence of "gaps", that is,
   situations that reveal that not all of the forks of the request have
   been recorded in the hi&nbhy;entries.  Gaps are possible if the request is
   forwarded through intermediaries that do not support the History-Info
   header field and are reflected by the existence of hi&nbhy;entries with a
   nonnegative integer of "0", e.g., "1.1.0.1".  Gaps are also possible in
   the case of parallel forking if there is an outstanding request at
   the time the SIP entity sends a message.  In addition, gaps may introduce 
   the possibility of duplicate values for the hi-index in the case that 
   a proxy that does not support History-Info forks a request.  
   If gaps are detected,
   the SIP entity MUST NOT treat this as an error but SHOULD indicate
   to any applications that there are gaps.
   The interpretation of the
   information in the History-Info header field depends upon the
   specific application; an application might need to provide special
   handling in some cases where there are gaps. </t>     
      
      <t> The following describes some categories of information that applications can
      use:</t>
      <t>
      <list style="numbers">
      <t> Complete history information, e.g., for debugging or other 
      operational and management aspects, optimization of determining targets to 
      avoid retargeting to the same URI, etc. This information is relevant 
      to proxies, UACs, and UASs.</t>
      <t> Hi-entry with the index that matches the value of the "rc" header field parameter 
      in the last hi-entry with an "rc" header field parameter 
      in the request received by a UAS, i.e., the last AOR that was 
      retargeted to a contact based on an AOR-to-contact binding. </t>
      <t> Hi-entry with the index that matches the value of the "mp" header field parameter
      in the last hi-entry with an "mp" header field parameter in the hi-target-param
      in the request received by a UAS, i.e., the last Request-URI that was mapped to reach the destination.</t>
      <t> Hi-entry with the index that matches the value of the "rc" header field parameter 
      in the first hi-entry with an "rc" header field parameter 
      in the request received by a UAS.  Note that this would be the original AOR if all the entities involved
      support the History-Info header field and there is an absence of an "mp"
      header field parameter prior to the "rc" header field parameter in the hi-target-param in 
      the History-Info header field.
       However, there is no guarantee that all entities will support History-Info;
      thus, the hi-entry that matches the value of the "rc" header field parameter of the 
      first hi-entry with an "rc" header field parameter in the hi-target-param
      within the domain associated with the target URI at the destination is more likely to be 
      useful. </t>  
      <t> Hi-entry with the index that matches the value of the "mp" header field parameter 
      in the first hi-entry with an "mp" header field parameter 
      in the request received by a UAS. 
      Note that this would be the original mapped URI if all entities
       supported the History-Info header field. 
      However, there is no guarantee that all entities will support History-Info;
      thus, the hi-entry that matches the value of the "mp" header 
      field parameter of the first hi-entry with an "mp" header field parameter 
      within the domain associated with the target URI at the destination is more likely to be 
      useful. </t>         
      </list>      
      </t>
      
       
     
      <t> In many cases, applications are most interested in the
      information within one or more particular domains;
      thus, only a subset of the information is required. </t>
      <t> Some applications may use multiple types of information. 

   For example, an Automatic Call Distribution (ACD) / call center application
   that utilizes the hi&nbhy;entry with an index that matches the value of the "mp" header
   field parameter in the first hi&nbhy;entry with an "mp" header field
   parameter may also display other agents, reflected by 
   hi&nbhy;entries prior to hi&nbhy;entries with an "rc" header field parameter,
   to whom the call was targeted prior to its arrival at the
   current agent.

      This could allow the agent the
      ability to decide how they might forward or reroute the call if necessary 
      (avoiding agents that were 
      not previously available for whatever reason, etc.).  
      </t>
            
      <t> Since support for History-Info header field is optional, a service
      MUST define default
      behavior for requests and responses not containing History-Info
      header fields. For example, an entity may receive an incomplete set of hi-entries 
      or hi-entries that are not tagged appropriately with an hi-target-param in the 
      case of entries added by entities that are only compliant to RFC
      4244.
      This may not impact some applications (e.g., debug); however, it could require
      some applications to make some default assumptions in this case. For example, in an ACD
      scenario, the application could select the oldest hi-entry with the domain 
      associated with the ACD
      system and display that as the original called party. Depending upon how and 
      where the request may have
      been retargeted, the complete list of agents to whom the call was targeted may not be available.    
      </t>
      
    </section>

   <section anchor="application_specific" title="Application-Specific Usage">
	<t>The following are possible (non-normative) application-specific
        usages of History-Info.</t>
      <section anchor="pbx_vm" title="PBX Voicemail">
      <t>A voicemail system (VMS) typically requires the original called
   party information to determine the appropriate mailbox so an
   appropriate greeting can be provided and the appropriate party
   notified of the message.
      </t>
      <t>The original target is determined by finding the first
   hi-entry tagged with "rc" and using the hi-entry referenced by the
   index of the "rc" header field parameter as the target for determining
   the appropriate mailbox.  This hi-entry is used to populate the
   "target" URI parameter as defined in <xref target="RFC4458"></xref>.
   The VMS can look at the last hi-entry and find the target of the
   mailbox by looking at the URI entry in the "target" URI parameter in
   the hi-entry.
      </t>
      <t>This example usage does not work properly in the presence of forwarding that takes place before the call reaches the company. In that case, not the first hi-entry with an "rc" value, but the first hi-entry with an "rc" value following an "mp" entry needs to be picked. Further detail for this example can be 
      found in the call flow entitled "PBX Voicemail Example" 
      in <xref target="CALLFLOWS"/>. 
      </t>
      <t> Note that in the case where there is no entry tagged with "rc", a VMS can  
      follow the procedures, as defined in <xref target="RFC4458"></xref>,
      for the "Interaction with Request History Information".</t>      
      </section>
      
      <section anchor="consumer_vm" title="Consumer Voicemail">
      <t>The voicemail system in this
   environment typically requires the last called party information to
   determine the appropriate mailbox so an appropriate greeting can be
   provided and the appropriate party notified of the message.
      </t>
      <t>The last target is determined by finding the hi-entry referenced by the index
   of the last hi-entry tagged with "rc" for determining the appropriate
   mailbox.  This hi-entry is used to populate the "target" URI
   parameter as defined in <xref target="RFC4458"></xref>. 
   The VMS can look at the last hi-entry and find the target of the
   mailbox by looking for the "target" URI parameter in the hi-entry.
   Further detail for this example can be 
      found in the call flow entitled "Consumer Voicemail Example" 
      in <xref target="CALLFLOWS"/>.   
      </t>
      <t>  In the case where there is no entry tagged with "rc", a VMS can  
      follow the procedures, as defined in <xref target="RFC4458"></xref>,
      for the "Interaction with Request History Information".</t>
      </section>
   </section>

    <section anchor="security" title="Security Considerations">
      <t>The security requirements for this specification are specified in <xref
      target="secreq"></xref>.</t>

      <t>This document defines a header field for SIP. The use of the Transport
      Layer Security (TLS) protocol <xref target="RFC5246"></xref> as a
      mechanism to ensure the overall confidentiality of the History-Info
      header fields (SEC-req-4) is strongly RECOMMENDED. If TLS is NOT used, the 
      intermediary MUST ensure that the messages are only sent within an environment 
      that is secured by other means or that the messages don't leave the 
      intermediary's domain. This results in
      History-Info's having at least the same level of security as other headers
      in SIP that are inserted by intermediaries. With TLS, History-Info
      header fields are no less, nor no more, secure than other SIP header fields, which
      generally have even more impact on the subsequent processing of SIP
      sessions than the History-Info header field.</t>

      <t>Note that while using the SIPS scheme (as per <xref
      target="RFC5630"></xref>) protects History-Info from tampering by
      arbitrary parties outside the SIP message path, all the intermediaries
      on the path are trusted implicitly. A malicious intermediary could
      arbitrarily delete, rewrite, or modify History-Info. This specification
      does not attempt to prevent or detect attacks by malicious
      intermediaries.</t>
      
      <t>In terms of ensuring the privacy of hi-entries, the same security considerations
       as those described in <xref target="RFC3323"/> apply.
       The Privacy Service that's defined in <xref target="RFC3323"/> 
       MUST also support the new Privacy header field
      	priv-value of "history" and anonymize hi-entries in the case of a priv-value of "header"
        as described in <xref target="applyingprivacy"/>. </t>
    </section>

    <section anchor="iana" title="IANA Considerations">
      <t>IANA registrations have been implemented or updated as detailed in
      the following subsections.</t>

      <t>This document obsoletes <xref target="RFC4244"></xref> but uses the
      same SIP header field name, Privacy header field, and Option tag.
      References to <xref target="RFC4244"></xref> in the IANA 
      "Session Initiation Protocol (SIP) Parameters" registry
      (&lt;http://www.iana.org/assignments/sip-parameters&gt;) have been
      replaced with references to this document.</t>

      <section anchor="header"
               title="Registration of New SIP History-Info Header Field">
        <t>This document defines a SIP header field name, History-Info; and an
        option tag, histinfo. The following updates have been made to
        &lt;http://www.iana.org/assignments/sip-parameters&gt;. </t>
        
        <t>The following row has been updated in the "Header Fields" sub-registry:</t>

        <figure>
          <artwork><![CDATA[
Header Name             Compact Form               Reference
-----------             ------------               ---------
History-Info               none                    [RFC7044]

]]></artwork>
        </figure>

        <t>The following has been updated in the "Option Tags"
        sub-registry:</t>

        <figure>
          <artwork><![CDATA[
Name        Description                                 Reference
----        -----------                                 ---------
histinfo    When used with the Supported header field,  [RFC7044]
            this option tag indicates the UAC supports
            the History Information to be captured for 
            requests and returned in subsequent 
            responses.  This tag is not used in a 
            Proxy-Require or Require header field,
            since support of History-Info is optional.

]]></artwork>
        </figure>

      </section>

      <section title="Registration of &quot;history&quot; for SIP Privacy Header Field">
        <t>This document defines a priv-value for the SIP Privacy header field:
        history. The following updates have been made to the
        "SIP Privacy Header Field Values" sub-registry in
        &lt;http://www.iana.org/assignments/sip-parameters&gt; for
        the registration of the SIP Privacy header field:</t>

        <figure>
          <artwork><![CDATA[
Privacy
Type     Description             Registrant                 Reference
------   -----------             ----------                 ---------
history  Privacy requested for   Mary Barnes                [RFC7044]
         History-Info header     mary.ietf.barnes@gmail.com
         field(s)

]]></artwork>
        </figure>

      </section>
      
      <section title="Registration of Header Field Parameters">
      <t>This specification defines the following new 
      SIP header field parameters in
      the "Header Field Parameters and Parameter Values" sub-registry
      in &lt;http:/www.iana.org/assignments/sip-parameters&gt;.</t>
   
   <figure>
          <artwork><![CDATA[
          
 Header Field     Parameter Name   Predefined Values  Reference
-------------     --------------   -----------------  ---------
 History-Info           mp                 No         [RFC7044]
 History-Info           rc                 No         [RFC7044] 
 History-Info           np                 No         [RFC7044]
 Contact                mp                 No         [RFC7044]
 Contact                rc                 No         [RFC7044]
 Contact                np                 No         [RFC7044]
  
      ]]></artwork>
        </figure>

      </section>
      
    </section>


    <section title="Acknowledgements">
    
      <t>Jonathan Rosenberg et al. produced the document that provided 
        additional use cases precipitating the requirement for the 
        new header parameters to capture the method by which a Request-URI 
        is determined. The authors would like to acknowledge the constructive feedback
        provided by Ian Elz, Paul Kyzivat, John Elwell, Hadriel Kaplan, Marianne Mohali, 
        Brett Tate, 
        and Dale Worley. John Elwell also provided excellent suggestions in
        terms of document structure. Dan Romascanu performed the Gen-ART review.</t>    
    
      <t>
        Mark Watson, Cullen Jennings, and Jon Peterson provided significant input 
        into the initial work that resulted in the development
        of <xref target="RFC4244"></xref>.       

        The authors would like to acknowledge the constructive feedback
        provided by Robert Sparks, Paul Kyzivat, Scott Orton, John Elwell, Nir
        Chen, Palash Jain, Brian Stucker, Norma Ng, Anthony Brown, Jayshree
        Bharatia, Jonathan Rosenberg, Eric Burger, Martin Dolly, Roland Jesske,
        Takuya Sawada, Sebastien Prouvost, and Sebastien Garcin in the
        development of <xref target="RFC4244"></xref>.  
      </t>

      <t>
   The authors would like to acknowledge the significant input from
   Rohan Mahy on some of the normative aspects of the ABNF for
   <xref target="RFC4244"/>, particularly regarding security and the index (the need
   for it as well as its format).
</t>
      
    </section>

    <section title="Changes from RFC 4244">
      <t>This RFC replaces <xref target="RFC4244"></xref>.</t>

      <t>Deployment experience with <xref target="RFC4244"></xref> over the
      years has shown a number of issues, warranting an update:</t>

      <t><list style="symbols">
          <t>In order to make <xref target="RFC4244"></xref> work in "real
          life", one needs to make "assumptions" on how History-Info is used.
          For example, numerous implementations filter out many entries and only
          leave specific entries corresponding, for example, to first and last
          redirection. Since vendors use different rules, this causes
          significant interoperability issues.</t>

          <t><xref target="RFC4244"></xref> is overly permissive and evasive
          about recording entries, causing interoperability issues.</t>

          <t>The examples in the call flows had errors and were confusing because
          they often assume "loose routing". </t>

          <t><xref target="RFC4244"></xref> has lots of repetitive and unclear
          text due to the combination of requirements with the solution.</t>

          <t><xref target="RFC4244"></xref> gratuitously mandates the use of TLS
          on every hop. No existing implementation enforces this rule, and
          instead, whether to use TLS is a general SIP issue, not
          an issue with <xref
          target="RFC4244"></xref> per&nbsp;se.</t>

          <t><xref target="RFC4244"></xref> does not include clear procedures
          on how to deliver current target URI information to the UAS when the
          Request-URI is replaced with a contact.</t>

          <t><xref target="RFC4244"></xref> does not allow for marking
          History-Info entries for easy processing by user agents.</t>
        </list></t>

      <t> The following summarizes the functional
      changes between this specification and 
      <xref target="RFC4244"></xref>:</t>

      <t><list style="numbers">
          <t>Added header field parameters to capture the specific method by 
          which a target is determined to facilitate
          processing by users of the History-Info header field
          entries.  
          A specific header field parameter is captured for each 
          of the target
          URIs as the target set is determined (per Section 16.5 
          of <xref target="RFC3261"/>).  The header field
          parameter is used in both the History-Info and
          the Contact header fields. 
          </t>        

          <t>Added a way to indicate a gap in History-Info by adding a 
			nonnegative integer of "0".</t>

          <t>Rather than recommending that entries be removed in the case of
          certain values of the Privacy header field, the entries are
          anonymized.</t>

          <t>Updated the security section to be equivalent to the security
          recommendations for other SIP header fields inserted by
          intermediaries.</t>
          
          <t>Removed Appendix B ("Voicemail") since a separate call flow document is being
          published as a companion to this document. </t>
        </list></t>

      <t>The first two changes are intended to facilitate application usage of
      the History-Info header field and eliminate the need to make assumptions based
      upon the order of the entries and ensure that the most complete set of
      information is available to the applications.</t>

      <t>In addition, editorial changes were done to both condense and clarify
      the text, moving the requirements to an appendix and removing the inline references
      to the requirements. The 
      examples were simplified and updated to reflect the
      protocol changes. Several of the call flows in the appendix were removed
          and put into a separate document that includes additional use cases 
          that require the new header field parameters. </t>

      <section title="Backwards Compatibility">
        <t>This specification is backwards compatible because
        <xref target="RFC4244"></xref>
        allows for the addition of new optional parameters. 
        This specification adds an optional SIP header field parameter
        to the History-Info and Contact header fields. 
        Entities that 
        have not implemented this specification will ignore these parameters;
        however, per <xref target="RFC4244"/>,
        an entity will not remove these
          parameters from an hi-entry.
         While entities compliant to this document and <xref target="RFC4244"/> must be 
         able to recognize gaps in the hi-entries, this
         document requires that an index of "0" be used in this
        case. In comparison,
         <xref target="RFC4244"/> recommended (but did not require) 
         the use of "1".  However,
         since the ABNF in <xref target="RFC4244"/> defines the index as a
         DIGIT, "0" would be a valid value; thus,
         an <xref target="RFC4244"/> implementation should not have an issue
         if it receives hi-entries added by intermediaries compliant
         to this document.            
        </t>
        
        <t>As for the behavior of the UACs, UASs, and intermediaries, the following 
        additional normative 
        changes have been made: </t>
        
        <t>UAC behavior</t>
        
        <t>
         <list style="numbers">
          <t>Inclusion of option tag by UAC has changed from SHOULD to MUST.</t>
          <t>Inclusion of hi-target-entry along with hi-index has changed from MAY/RECOMMEND to MUST/MUST.</t>
          <t>Behavior surrounding the addition of hi-target-entry based on a 3xx response has changed from MAY/SHOULD to MUST.</t>
         </list>
        </t>
         <t>None of the behavior changes will cause any backward or forward compatibility issues.</t>
        
        <t>UAS behavior</t>
        
        <t>
         <list style="numbers">
          <t>Inclusion of hi-entry in response has changed from SHOULD to MUST.</t>
         </list>
        </t>
         <t>As the entity receiving response with hi-entry expected it with SHOULD, this 
         change will not cause any backward compatibility issues.</t>
        
        <t>Proxy/redirect server behavior</t>
        
        <t>
         <list style="numbers">
          <t>Inclusion of the History-Info header field when forwarding the request has
          changed from SHOULD to MUST.</t>

          <t>Association of Reason with timeout/internal reason has changed from MAY to MUST.</t>
          <t>Inclusion of hi-index has changed from RECOMMENDED to MUST.</t>
          <t>Inclusion of hi-entries in the response has changed from SHOULD to MUST.</t>
         </list>
        </t>
        <t>
        None of the above behavior changes impact backwards compatibility since
        they only strengthen normative behavior to improve interoperability.</t>
                
        <t> In cases where an entity that is compliant to this document
   receives a request that contains hi-entries compliant only to RFC 4244
   (i.e., the hi-entries do not contain any of the new header field
   parameters), the entity MUST NOT add 
   any of the new header field parameters to the hi-entries. 
   The hi-entries MUST be cached and forwarded as any other
   entries are, as specified in <xref target="receiveReq"/>. 
   As with entities that are compliant to RFC 4244, applications must
   be able to function in cases of missing information, as specified in <xref target="application"/>. 
   </t>       
        
      </section>
      </section>
    
  </middle>

  <back>
    <references title="Normative References">
      &rfc3261;

      &rfc3326;

      &rfc3323;

      &rfc2119;

      &rfc5234;

      &RFC4458;

      &rfc4244;
    </references>

    <references title="Informative References">
      &rfc5627;

      &rfc5630;

      &rfc3087;

      &rfc4240;

      &rfc3966;    

      &rfc4458;   
      
     <!-- draft-ietf-sipcore-rfc4244bis-callflows (Approved-announcement -->
     <!-- to be sent::Point Raised - writeup needed) --> 
<reference anchor='CALLFLOWS'>
<front>
<title>Session Initiation Protocol (SIP) History-Info Header Call Flow Examples</title>

<author initials='M' surname='Barnes' fullname='Mary Barnes'>
    <organization />
</author>

<author initials='F' surname='Audet' fullname='Francois Audet'>
    <organization />
</author>

<author initials='S' surname='Schubert' fullname='Shida Schubert'>
    <organization />
</author>

<author initials='H' surname='Elburg' fullname='Hans van Elburg'>
    <organization />
</author>

<author initials='C' surname='Holmberg' fullname='Christer Holmberg'>
    <organization />
</author>

<date month='November' day='7' year='2013' />

</front>

<seriesInfo name='Work in' value='Progress'/>
</reference>
    
      </references>

    <section anchor="requirements" title="Request History Requirements">
      <t>The following list constitutes a set of requirements for a "Request
      History" capability.</t>

      <t><list style="numbers">
          <t>CAPABILITY-req: The "Request History" capability provides a
          capability to inform proxies and UAs involved in processing a
          request about the history/progress of that request. Although this is
          inherently provided when the retarget is in response to a SIP
          redirect, it is deemed useful for non-redirect retargeting
          scenarios, as well.</t>

          <t>GENERATION-req: "Request History" information is generated when
          the request is retargeted. <list style="letters">
              <t>In some scenarios, it might be possible for more than one
              instance of retargeting to occur within the same proxy. A proxy
              MUST also generate "Request History" information for the
              'internal retargeting'.</t>

              <t>An entity (UA or proxy) retargeting in response to a redirect
              or REFER MUST include any "Request History" information from the
              redirect/REFER in the new request.</t>
            </list></t>

          <t>ISSUER-req: "Request History" information can be generated by a
          UA or proxy. It can be passed in both requests and responses.</t>

          <t>CONTENT-req: The "Request History" information for each
          occurrence of retargeting shall include the following:<list
              style="letters">
              <t>the new URI or address to which the request is in the process
              of being retargeted,</t>

              <t>the URI or address from which the request was retargeted, and
              whether the retarget URI was an AOR,</t>

              <t>the mechanism by which the new URI or address was
              determined,</t>

              <t>the reason for the Request-URI or address
              modification, and</t>

              <t>chronological ordering of the "Request History"
              information.</t>
            </list></t>

          <t>REQUEST-VALIDITY-req: "Request History" is applicable to requests
          not sent within an early or established dialog (e.g., INVITE, REGISTER,
          MESSAGE, and OPTIONS).</t>

          <t>BACKWARDS-req: "Request History" information may be passed from the
          generating entity backwards towards the UAC. This is needed to
          enable services that inform the calling party about the dialog
          establishment attempts.</t>

          <t>FORWARDS-req: "Request History" information may also be included by
          the generating entity in the request, if it is forwarded
          onwards.</t>
        </list></t>

      <section anchor="secreq" title="Security Requirements">
        <t>The "Request History" information is being inserted by a network
        element retargeting a request, resulting in a slightly different
        problem than the basic SIP header problem, thus requiring specific
        consideration. It is recognized that these security requirements can
        be generalized to a basic requirement of being able to secure
        information that is inserted by proxies.</t>

        <t>The potential security problems include the following: <list
            style="numbers">
            <t>A rogue application could insert a bogus Request History-Info entry
            by either adding an additional hi-entry as a result of retargeting or
            entering invalid information.</t>

            <t>A rogue application could rearrange the "Request History"
            information to change the nature of the end application or to
            mislead the receiver of the information.</t>

            <t>A rogue application could delete some or all of the "Request
            History" information.</t>
          </list></t>

        <t>Thus, a security solution for "Request History" must meet the
        following requirements: <list style="numbers">
            <t>SEC-req-1: The entity receiving the "Request History" must be
            able to determine whether any of the previously added "Request
            History" content has been altered.</t>

            <t>SEC-req-2: The ordering of the "Request History" information must
            be preserved at each instance of retargeting.</t>

            <t>SEC-req-3: The entity receiving the information conveyed by the
            "Request History" must be able to authenticate the entity providing
            the request.</t>

            <t>SEC-req-4: To ensure the confidentiality of the "Request History"
            information, only entities that process the request SHOULD  have
            visibility to the information.</t>
          </list></t>

        <t>It should be noted that these security requirements apply to any
        entity making use of the "Request History" information.</t>
      </section>

      <section anchor="privacyreq" title="Privacy Requirements">
        <t>Since the Request-URI that is captured could inadvertently reveal
        information about the originator, there are general privacy
        requirements that MUST be met: <list style="numbers">
            <t>PRIV-req-1: The entity retargeting the request must ensure that
            it maintains the network-provided privacy (as described in <xref
            target="RFC3323"></xref>) associated with the request as it is
            retargeted.</t>

            <t>PRIV-req-2: The entity receiving the "Request History" must
            maintain the privacy associated with the information. In addition,
            local policy at a proxy may identify privacy requirements
            associated with the Request-URI being captured in the "Request
            History" information.</t>

            <t>PRIV-req-3: "Request History" information subject to privacy
            shall not be included in outgoing messages unless it is protected
            as described in <xref target="RFC3323"></xref>.</t>
          </list></t>
      </section>
    </section>
  </back>
</rfc>
