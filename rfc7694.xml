<?xml version="1.0" encoding="US-ASCII"?>
<!--
    This XML document is the output of clean-for-DTD.xslt; a tool that strips
    extensions to RFC2629(bis) from documents for processing with xml2rfc.
-->
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc subcompact="no"?>
<!DOCTYPE rfc
  PUBLIC "" "rfc2629.dtd">

<rfc number="7694" category="std" submissionType="IETF" consensus="yes"
  ipr="trust200902">


	<front>
  <title abbrev="HTTP CICE">Hypertext Transfer Protocol (HTTP) Client-Initiated Content-Encoding</title>
  <author initials="J. F." surname="Reschke" fullname="Julian F. Reschke">
    <organization abbrev="greenbytes">greenbytes GmbH</organization>
    <address>
      <postal>
        <street>Hafenweg 16</street>
        <city>Muenster</city><region>NW</region><code>48155</code>
        <country>Germany</country>
      </postal>
      <email>julian.reschke@greenbytes.de</email>	
      <uri>http://greenbytes.de/tech/webdav/</uri>	
    </address>
  </author>

  <date year="2015" month="November"/>
  
  <area>Applications and Real-Time</area>
  <workgroup>HTTP Working Group</workgroup>
  <keyword>HTTP</keyword>
  <keyword>content-encoding</keyword>

  <abstract>
    <t>
      In HTTP, content codings allow for payload encodings such as for
      compression or integrity checks. In particular, the "gzip" content
      coding is widely used for payload data sent in response messages.
    </t>
    <t>
      Content codings can be used in request messages as well; however,
      discoverability is not on par with response messages. This document
      extends the HTTP "Accept-Encoding" header field for use in responses,
      to indicate the content codings that are supported in requests.
    </t>
  </abstract>
  
  </front>

  <middle>

<section anchor="introduction" title="Introduction">
    <t>
      In HTTP, content codings allow for payload encodings such as for
      compression or integrity checks (<xref target="RFC7231"/>, Section 3.1.2).
      In particular, the "gzip" content coding (<xref target="RFC7230"/>, Section 4.2)
      is widely used for payload data sent in response messages.
    </t>
    <t>
      Content codings can be used in request messages as well; however,
      discoverability is not on par with response messages. 
This document
      extends the HTTP "Accept-Encoding" header field (<xref target="RFC7231"/>, Section 5.3.4) for use in responses,
      to indicate the content codings that are supported in requests. It
      furthermore updates the definition of status code 415
      (Unsupported Media Type) (<xref target="RFC7231"/>, Section 6.5.13),
      recommending that the "Accept-Encoding" header field be included when
      appropriate.
    </t>
</section>  

<section anchor="notational.conventions" title="Notational Conventions">
<t>
   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in <xref target="RFC2119"/>.
</t>
<t>
   This document reuses terminology defined in the base HTTP specifications,
   namely Section 2 of <xref target="RFC7230"/> and
   Section 3.1.2 of <xref target="RFC7231"/>.
</t>
</section>

<section anchor="accept-encoding" title="Using the 'Accept-Encoding' Header Field in Responses">
<t>
  Section 5.3.4 of <xref target="RFC7231"/> defines
  "Accept-Encoding" as a request header field only.
</t>
<t>
  This specification expands that definition to allow "Accept-Encoding"
  as a response header field as well.  When present in a response, it indicates what
  content codings the resource was willing to accept in the associated request.
  A field value that only contains "identity" implies that no 
  content codings were supported.
</t>
<t>
  Note that this information is specific to the associated request; the
  set of supported encodings might be different for other resources on the 
  same server and could change over time or depend on other aspects of the 
  request (such as the request method).
</t>
<t>
  Section 6.5.13 of <xref target="RFC7231"/> defines status code 415
  (Unsupported Media Type) to apply to problems related to both media types
  and content codings.
</t>
<t>
  Servers that fail a request due to an unsupported content coding
  ought to respond with a 415 status and ought to include an "Accept-Encoding" header field in that response, allowing clients to
  distinguish between issues related to content codings and media
  types.  In order to avoid confusion with issues related to media
  types, servers that fail a request with a 415 status for reasons
  unrelated to content codings MUST NOT include the "Accept-Encoding"
  header field.
</t>
<t>
  It is expected that the most common use of "Accept-Encoding" in responses will have the 415
  (Unsupported Media Type) status code, in response to optimistic use of a content coding by
  clients. However, the header field can also be used to indicate to clients that content codings
  are supported, to optimize future interactions. For example, a resource might include it in a 2xx
  response when the request payload was big enough to justify use of a compression coding but the
  client failed do so.
</t>
</section>

<section anchor="example" title="Example">
<t>
  A client submits a POST request using the "compress" content coding
  (<xref target="RFC7231"/>, Section 3.1.2.1):
</t>
<figure><artwork type="message/http; msgtype=&#34;request&#34;"><![CDATA[
  POST /edit/ HTTP/1.1
  Host: example.org
  Content-Type: application/atom+xml;type=entry
  Content-Encoding: compress
  
  ...compressed payload...
  ]]></artwork></figure>
<t>
  The server rejects the request because it only allows the "gzip" content coding:
</t>
<figure><artwork type="message/http; msgtype=&#34;response&#34;"><![CDATA[
  HTTP/1.1 415 Unsupported Media Type
  Date: Fri, 09 May 2014 11:43:53 GMT
  Accept-Encoding: gzip
  Content-Length: 68
  Content-Type: text/plain
  
  This resource only supports the "gzip" content coding in requests.
  ]]></artwork></figure>
<t>
  At this point, the client can retry the request with the supported
  "gzip" content coding.
</t>
<t>
  Alternatively, a server that does not support any content codings in
  requests could answer with:
</t>
<figure><artwork type="message/http; msgtype=&#34;response&#34;"><![CDATA[
  HTTP/1.1 415 Unsupported Media Type
  Date: Fri, 09 May 2014 11:43:53 GMT
  Accept-Encoding: identity
  Content-Length: 61
  Content-Type: text/plain
  
  This resource does not support content codings in requests.
  ]]></artwork></figure>
</section>

<section anchor="deployment.considerations" title="Deployment Considerations">
<t>
  Servers that do not support content codings in requests already are 
  required to fail a request that uses a content coding.  Section
  6.5.13 of <xref target="RFC7231"/> defines the status code 415 (Unsupported Media
  Type) for this purpose, so the only change needed is to include the
  "Accept-Encoding" header field with the value "identity" in that
  response.
</t>
<t>
  Servers that do support some content codings are required to fail requests
  with unsupported content codings as well. To be compliant with this specification,
  servers will need to use the status code 415 (Unsupported Media Type) to
  signal the problem and will have to include an "Accept-Encoding" header field
  that enumerates the content codings that are supported. As the set of
  supported content codings is usually
  static and small, adding the header field ought to be trivial.
</t>
</section>

<section anchor="security.considerations" title="Security Considerations">
<!--<t>
  This specification does not introduce any new security considerations
  beyond those discussed in <xref target="RFC7231" x:fmt="of"
  x:rel="#security.considerations"/>.
</t>-->
<t>
  This specification only adds discovery of supported content codings and
  diagnostics for requests failing due to unsupported content codings. As such,
  it doesn't introduce any new security considerations over those already
  present in HTTP/1.1 (Section 9 of <xref target="RFC7231"/>) and HTTP/2 (Section 10 of <xref target="RFC7540"/>).
</t>
<t>
  However, the point of better discoverability and diagnostics is to make it
  easier to use content codings in requests. This might lead to increased
  usage of compression codings such as gzip (Section 4.2 of <xref target="RFC7230"/>), which, when used over a secure channel, can
  enable side-channel attacks such as BREACH (see Section 10.6 of <xref target="RFC7540"/> and <xref target="BREACH"/>). At the time of publication,
  it was unclear how BREACH-like attacks can be applied to compression in HTTP requests.
</t>
</section>

<section anchor="iana.considerations" title="IANA Considerations">
<section title="Header Field Registry">
<t>
   HTTP header fields are registered within the "Message Headers" registry
   located at <eref target="http://www.iana.org/assignments/message&nbhy;headers"/>,
   as defined by <xref target="BCP90"/>.
</t>
<t>
   This document updates the definition of the "Accept-Encoding" header
   field. 
   The "Permanent Message Header Field Names" registry has been updated
   as follows:
</t>
<texttable align="left" suppress-title="true" anchor="iana.header.registration.table">
   <ttcol>Header Field Name</ttcol>
   <ttcol>Protocol</ttcol>
   <ttcol>Status</ttcol>
   <ttcol>Reference</ttcol>

   <c>Accept-Encoding</c>
   <c>http</c>
   <c>standard</c>
   <c>
      Section 5.3.4 of <xref target="RFC7231"/>
      and <xref target="accept-encoding"/> of this document
   </c>
</texttable>
</section>
<section title="Status Code Registry">
<t>
   HTTP status codes are registered within the "HTTP Status Codes" registry
   located at <eref target="http://www.iana.org/assignments/http&nbhy;status&nbhy;codes"/>.
</t>
<t>
   This document updates the definition of the status code 415 (Unsupported
   Media Type). 
   The "HTTP Status Codes" registry has been updated as follows:
</t>
<texttable align="left" suppress-title="true" anchor="iana.status.code.registration.table">
   <ttcol>Value</ttcol>
   <ttcol>Description</ttcol>
   <ttcol>Reference</ttcol>

   <c>415</c>
   <c>Unsupported Media Type</c>
   <c>
      Section 6.5.13 of <xref target="RFC7231"/>
      and <xref target="accept-encoding"/> of this document
   </c>
</texttable>
</section>
</section>

  </middle>
  <back>
  
<references title="Normative References">

<reference  anchor='RFC2119' target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>


<reference  anchor='RFC7230' target='http://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>


<reference  anchor='RFC7231' target='http://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>

</references>

<references title="Informative References">

<reference anchor="BCP90" target="http://www.rfc-editor.org/info/bcp90">
<front>
<title>Registration Procedures for Message Header Fields</title>
<author initials='G.' surname='Klyne' fullname='G. Klyne'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='J.' surname='Mogul' fullname='J. Mogul'><organization /></author>
<date year='2004' month='September' />
<abstract><t>This specification defines registration procedures for the message header fields used by Internet mail, HTTP, Netnews and other applications.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='90'/>
<seriesInfo name='RFC' value='3864'/>
</reference>

<reference  anchor='RFC7540' target='http://www.rfc-editor.org/info/rfc7540'>
<front>
<title>Hypertext Transfer Protocol Version 2 (HTTP/2)</title>
<author initials='M.' surname='Belshe' fullname='M. Belshe'><organization /></author>
<author initials='R.' surname='Peon' fullname='R. Peon'><organization /></author>
<author initials='M.' surname='Thomson' fullname='M. Thomson' role='editor'><organization /></author>
<date year='2015' month='May' />
<abstract><t>This specification describes an optimized expression of the semantics of the Hypertext Transfer Protocol (HTTP), referred to as HTTP version 2 (HTTP/2).  HTTP/2 enables a more efficient use of network resources and a reduced perception of latency by introducing header field compression and allowing multiple concurrent exchanges on the same connection.  It also introduces unsolicited push of representations from servers to clients.</t><t>This specification is an alternative to, but does not obsolete, the HTTP/1.1 message syntax.  HTTP's existing semantics remain unchanged.</t></abstract>
</front>
<seriesInfo name='RFC' value='7540'/>
<seriesInfo name='DOI' value='10.17487/RFC7540'/>
</reference>


<reference anchor="BREACH" target="http://breachattack.com/resources/BREACH%20-%20SSL,%20gone%20in%2030%20seconds.pdf"><front>
    <title>
      BREACH: Reviving the CRIME Attack
    </title>
    <author initials="Y." surname="Gluck"/>
    <author initials="N." surname="Harris"/>
    <author initials="A." surname="Prado"/>
    <date year="2013" month="July" day="12"/>
  </front></reference>
</references>

<section title="Acknowledgements" numbered="no">
<t>
  Thanks go to the Hypertext Transfer Protocol Working Group participants, namely
  Amos Jeffries, Ben Campbell, Mark Nottingham, Pete Resnick,
  Stephen Farrell, and Ted Hardie. 
</t>
</section>

  </back>

</rfc>
