<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>            
<?rfc symrefs="yes"?>        
<?rfc sortrefs="yes"?>       
<?rfc iprnotified="no" ?>   
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc number="8199" ipr="trust200902" submissionType="IETF" consensus="yes" category="info"  >

<front>
  <title abbrev="YANG Module Classification">YANG Module Classification</title>

  <author fullname="Dean Bogdanovic" initials="D." surname="Bogdanovic">
    <organization abbrev="Volta Networks, Inc.">
	Volta Networks, Inc.
    </organization>
    <address>
      <email>dean@voltanet.io</email>
    </address>
  </author>

  <author initials="B." surname="Claise" fullname="Benoit Claise">
    <organization abbrev="Cisco Systems, Inc.">
	Cisco Systems, Inc.
    </organization>
    <address>
      <postal>
        <street>De Kleetlaan 6a b1</street>
        <city>1831 Diegem</city>
        <country>Belgium</country>
      </postal>
      <phone>+32 2 704 5622</phone>
      <email>bclaise@cisco.com</email>
    </address>
  </author>

  <author fullname="Carl Moberg" initials="C." surname="Moberg">
    <organization>Cisco Systems, Inc.</organization>
    <address>
      <email>camoberg@cisco.com</email>
    </address>
  </author>


  <date month="July" year="2017"/>

  <area>Operations and Management</area>
  <workgroup>NETMOD</workgroup>
  <keyword>service</keyword>
  <keyword>element</keyword>
  <keyword>standard</keyword>
  <keyword>vendor</keyword>
  <keyword>user</keyword>
  <keyword>controller</keyword>
  <keyword>orchestrator</keyword>

  <abstract>
    <t>The YANG data modeling language is currently being considered for a
    wide variety of applications throughout the networking industry at large.
    Many standards development organizations (SDOs), open-source software
    projects, vendors, and users are using YANG to develop and publish YANG
    modules for a wide variety of applications. At the same time, there is
    currently no well-known terminology to categorize various types of YANG 
    modules.</t>

    <t>A consistent terminology would help with the categorization of YANG 
    modules, assist in the analysis of the YANG data modeling efforts in the IETF 
    and other organizations, and bring clarity to the YANG-related discussions
    between the different groups.</t>

    <t>This document describes a set of concepts and associated terms to
      support consistent classification of YANG modules.</t>
  </abstract>
</front>

<middle>
  <section anchor="introduction" title="Introduction">

    <t>The Internet Engineering Steering Group (IESG) has been actively
      encouraging IETF working groups to use the YANG data modeling language <xref
      target="RFC7950"/> and the Network Configuration Protocol (NETCONF)
      <xref target="RFC6241"/> for configuration
      management purposes, especially in new working group charters
      <xref target="IESG-Statement"/>.</t>

    <t>YANG is also gaining wide acceptance as the de facto standard data modeling
      language in the broader industry. This extends beyond the IETF to
      include many SDOs, industry consortia,
      ad hoc groups, open-source projects, vendors, and end users.</t>

    <t>There are currently no clear guidelines on how to classify the layering
      of YANG modules according to abstraction or how to classify modules along
      the continuum spanning formal standards publications, vendor-specific
      modules, and modules provided by end users.</t>

    <t>This document presents a set of concepts and terms to form a useful
      taxonomy for consistent classification of YANG modules in two dimensions:
      <list style="symbols">
        <t>The layering of modules based on their abstraction levels</t>
        <t>The module origin type based on the nature and intent of the content</t>
      </list>
    </t>

    <t>The intent of this document is to provide a taxonomy to simplify human 
      communication around YANG modules. While the classification boundaries are 
      at times blurry, this document should provide a robust starting point as 
      the YANG community gains further experience with designing and deploying 
      modules. To be more explicit, it is expected that the classification 
      criteria will change over time.</t>

    <t>A number of modules, for example, modules concerned with
      topologies, created substantial discussion during
      the development of this document. Topology modules are useful both on the network element
      level (e.g., link-state database content) and on the network
      service level (e.g., network-wide, configured topologies). In the end,
      it is the module developer that classifies the module according to the
      initial intent of the module content.</t>

      <t>This document should provide benefits to multiple audiences:
        <list style="symbols">
          <t>First, a common taxonomy helps with discussions among SDOs and
            industry consortia; the goals of such discussions are determined by
            the respective areas of work.</t>
          <t>Second, operators might look at the YANG module abstraction layers
            to understand which Network Service YANG Modules and Network
            Element YANG Modules are available for their service composition.
            It is difficult to determine the module type without inspecting
            the YANG module itself. The YANG module name might provide some
            useful information but is not a definite answer. For example, a
            Layer 2 Virtual Private Network (L2VPN) YANG module might be a 
            Network Service YANG Module, ready to be used as a service model by
            a network operator. Alternatively, it might be a Network Element
            YANG Module that contains the L2VPN data definitions required to be
            configured on a single device.</t>
          <t>Third, this taxonomy will help equipment vendors (whether physical
            or virtual), controller vendors, and orchestrator vendors to
            explain to their customers the relationship between the different
            YANG modules they support in their products. </t>
        </list>
      </t>

    <section anchor="terminology" title="Terminology">
      <t><xref target='RFC7950'/> specifies:
        <list style="symbols">
          <t>data model: A data model describes how data is represented and
	  accessed.
	  </t>
          <t>module: A YANG module defines hierarchies of schema nodes.  With
	     its definitions and the definitions it imports or includes from
             elsewhere, a module is self-contained and "compilable".
          </t>
        </list>
      </t>
    </section>
  </section>

  <section anchor="firstdimension" title="First Dimension: YANG Module Abstraction Layers">
    <t>Module developers have taken two approaches to developing YANG modules:
      top-down and bottom-up. The top-down approach starts with high-level
      abstractions modeling business or customer requirements and maps them to
      specific networking technologies. The bottom-up approach starts with
      fundamental networking technologies and maps them into more abstract
      constructs.</t>
    <t>There are currently no specific requirements or well-defined best
        practices for the development of YANG modules. This document considers
        both bottom-up and top-down approaches as they are both used and they
        each provide benefits that appeal to different groups.</t>
    <t>For layering purposes, this document suggests the classification of
        YANG modules into two distinct abstraction layers:</t>
    <t>
      <list style="symbols">
        <t>Network Element YANG Modules describe the configuration, state
            data, operations, and notifications of specific device-centric
            technologies or features.</t>
        <t>Network Service YANG Modules describe the configuration, state
            data, operations, and notifications of abstract representations of
            services implemented on one or multiple network elements.</t>
      </list>
    </t>

    <figure title="YANG Module Abstraction Layers" anchor="modulelayers">
      <artwork align="center">
                    +--------------------------+
                    |  Operations and Business |
                    |      Support Systems     |
                    |      (OSSs and BSSs)     |
                    +--------------------------+

    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    Network Service YANG Modules 

         +------------+      +-------------+      +-------------+
         |            |      |             |      |             |
         |  - L2VPN   |      |   - L2VPN   |      |    L3VPN    |
         |  - VPWS    |      |   - VPLS    |      |             |
         |            |      |             |      |             |
         +------------+      +-------------+      +-------------+
    
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    Network Element YANG Modules

    +------------+  +------------+  +-------------+  +------------+
    |            |  |            |  |             |  |            |
    |    MPLS    |  |    BGP     |  | IPv4 / IPv6 |  |  Ethernet  |
    |            |  |            |  |             |  |            |
    +------------+  +------------+  +-------------+  +------------+

      L2VPN: Layer 2 Virtual Private Network
      L3VPN: Layer 3 Virtual Private Network
      VPWS: Virtual Private Wire Service
      VPLS: Virtual Private LAN Service
      </artwork>
    </figure>

    <t><xref target="modulelayers"/> illustrates the application of YANG
      modules at different layers of abstraction. Layering of modules
      allows for reusability of existing lower-layer modules by higher-level
      modules while limiting duplication of features across layers.</t>

    <t>For module developers, per-layer modeling allows for separation of
      concern across editing teams focusing on specific areas.</t>

    <t>As an example, experience from the IETF shows that creating useful
      Network Element YANG Modules (e.g., for routing or switching protocols)
      requires teams that include developers with experience 
      implementing those protocols.</t>

    <t>On the other hand, Network Service YANG Modules are best developed by
      network operators experienced in defining network services for
      consumption by programmers, e.g., those developing flow-through
      provisioning systems or self-service portals.</t>

  <section anchor="networkservice" title="Network Service YANG Modules">
    <t>Network Service YANG Modules describe the characteristics of a
      service, as agreed upon with consumers of that service. That is, a
      service module does not expose the detailed configuration parameters of
      all participating network elements and features but describes an
      abstract model that allows instances of the service to be decomposed
      into instance data according to the Network Element YANG Modules of
      the participating network elements. 
The service-to-element decomposition
      is a separate process; the details depend on how the network operator
      chooses to realize the service. For the purpose of this document, the term 
      "orchestrator" is used to describe a system implementing such
      a process.</t>

     <t>External systems can be provisioning systems, service orchestrators,
        Operations Support Systems, Business Support Systems, and applications
        exposed to network service consumers (either internal network
        operations people or external customers). These modules are commonly
        designed, developed, and deployed by network infrastructure teams.</t>

    <t>YANG allows for different design patterns to describe network services,
      ranging from monolithic to component-based approaches.</t>

    <t>The monolithic approach captures the entire service in a single module
      and does not put focus on reusability of internal data definitions and
      groupings. The monolithic approach has the advantages of single-purpose
      development, including development speed at the expense of reusability.</t>

    <t>The component-based approach captures device-centric features (e.g., VPN
        Routing and Forwarding (VRF), routing protocols, or packet filtering)
        in a vendor-independent manner. The components are designed for reuse
        across many service modules. The set of components required for a
        specific service is then composed into the higher-level service. The
        component-based approach has the advantages of modular development,
        including a higher degree of reusability at the expense of initial
        development speed.</t>

    <t>As an example, an L2VPN service can be built on many different types of
      transport network technologies, including, e.g., MPLS or Carrier Ethernet.
      A component-based approach would allow for reuse of User-Network
      Interface (UNI) definitions, such as the MEF UNI interface or MPLS
      interface, independent of the underlying transport network. The
      monolithic approach would assume a specific set of transport technologies
      and interface definitions.</t>

    <t>An example of a Network Service YANG Module is in <xref target='RFC8049'/>.
    It provides an abstract model for Layer 3 IP VPN service configuration.
    This module includes the concept of a  'site-network-access' to represent
    bearer and connection parameters. An orchestrator receives operations on
    service instances according to the service module and decomposes the data
    into configuration data according to specific Network Element YANG Modules
    to configure the participating network elements to the service. In the case
    of the L3VPN module, this would include translating the
    'site-network-access' parameters to the appropriate parameters in the
    Network Element YANG Module implemented on the constituent elements.</t>
   </section>

   <section anchor="networkelement" title="Network Element YANG Modules">
    <t>Network Element YANG Modules describe the characteristics of a network
      device as defined by the vendor of that device. The modules are commonly
      structured around features of the device, e.g., interface configuration
      <xref target='RFC7223'/>, OSPF configuration
      <xref target='OSPF-YANG'/>, and access control list (ACL) configuration
      <xref target='ACL-YANG'/>.</t>
    <t>The Network Element YANG Module provides a coherent data model
        representation of the software environment consisting of the operating
        system and applications running on the device. The decomposition,
        ordering, and execution of changes to the operating system and
        application configuration is the task of the agent that implements the
        module.</t>
   </section>
 </section>

 <section title="Second Dimension: YANG Module Origin Types">
    <t>This document suggests classifying YANG module origin types as Standard
      YANG Modules, Vendor-Specific YANG Modules and Extensions, or
      User-Specific YANG Modules and Extensions.</t>

    <t>The suggested classification applies to both Network Element YANG
      Modules and Network Service YANG Modules.</t>

    <t>It is to be expected that real-world implementations of both Network
      Service YANG Modules and Network Element YANG Modules will include a
      mix of all three module origin types.</t>

    <t><xref target="moduletypes"/> illustrates the relationship between the
    three types of modules.</t>

    <figure title="YANG Module Origin Types" anchor="moduletypes">
      <artwork align="center" type="ascii-art">
+--------------+
|     User     |
|   Extensions |
+------+-------+
    Augments
+------+-------+  +--------------+  +--------------+
|   Vendor     |  |     User     |  |     User     |
|  Extensions  |  |  Extensions  |  |  Extensions  |
+------+-------+  +------+-------+  +------+-------+
    Augments          Augments          Augments
+------+-----------------+-------+  +------+-------+  +--------------+
|            Standard            |  |    Vendor    |  |    User      |
|            Modules             |  |    Modules   |  |   Modules    |
+--------------------------------+  +--------------+  +--------------+
      </artwork>
    </figure>

    <section title="Standard YANG Modules">
      <t>Standard YANG Modules are published by SDOs. Most SDOs create specifications according to a 
        formal process in order to produce a standard that is useful for their 
        constituencies.</t>
      <t>The lifecycles of these modules are driven by the editing cycles of the
        specifications and not tied to a specific implementation.</t>

      <t>Examples of SDOs in the networking industry are the IETF and the IEEE.</t>
    </section>

    <section title="Vendor-Specific YANG Modules and Extensions">
      <t>Vendor-Specific YANG Modules are developed by organizations with the
        intent to support a specific set of implementations under control of
        that organization, for example, vendors of virtual or physical equipment,
        industry consortia, and open-source projects. The intent of these modules
        ranges from providing openly published YANG modules that may eventually
        be contributed back to or adopted by an SDO to strictly internal YANG
        modules not intended for external consumption.</t>


      <t>The lifecycles of these modules are generally aligned with the release
        cycles of the product or open-source software project deliverables.</t>

      <t>It is worth noting that there is an increasing amount of interaction
        between open-source projects and SDOs in the networking industry. This
        includes open-source projects implementing published standards as well
        as open-source projects  contributing content to SDO processes.</t>

      <t>Vendors also develop vendor-specific extensions to standard modules using
        YANG constructs for extending data definitions of previously published
        modules. This is done using the 'augment' statement that allows locally
        defined data trees to be added into locations in externally defined
        data trees.</t>

      <t>Vendors use this to extend standard modules to cover the
        full scope of features in implementations, which commonly is broader
        than that covered by the standard module.</t>
    </section>

    <section title="User-Specific YANG Modules and Extensions">
      <t>User-Specific YANG Modules are developed by organizations that operate
        YANG-based infrastructure including devices and orchestrators, for example,
        network administrators in enterprises or at service providers. The
        intent of these modules is to express the specific needs for a certain
        implementation, above and beyond what is provided by vendors.
      </t>

      <t>This module type obviously requires the infrastructure to support the
        introduction of user-provided modules and extensions. This would include
        the ability to describe the service-to-network decomposition in
        orchestrators and the module-to-configuration decomposition in devices.
      </t>

      <t>The lifecycles of these modules are generally aligned with the change
        cadence of the infrastructure.</t>
    </section>
</section>

<section anchor="security" title="Security Considerations">
    <t>This document doesn't have any Security Considerations.</t>
</section>

<section anchor="iana" title="IANA Considerations">
    <t>This document does not require any IANA actions.</t>
</section>


  </middle>

  <back>
    <references title="Normative References">
        <?rfc include='reference.RFC.6241'?>
        <?rfc include='reference.RFC.7950'?>
        <?rfc include='reference.RFC.7223'?>
	<?rfc include='reference.RFC.8049'?>
    </references>
    <references title="Informative References">

<reference anchor='ACL-YANG'>
<front>
<title>Network Access Control List (ACL) YANG Data Model</title>

<author initials='D' surname='Bogdanovic' fullname='Dean Bogdanovic'>
    <organization />
</author>

<author initials='M' surname='Jethanandani' fullname='Mahesh Jethanandani'>
    <organization />
</author>

<author initials='L' surname='Huang' fullname='Lisa Huang'>
    <organization />
</author>

<author initials='S' surname='Agarwal' fullname='Sonal Agarwal'>
    <organization />
</author>

<author initials='D' surname='Blair' fullname='Dana Blair'>
    <organization />
</author>

<date month='June' day='16' year='2017' />

</front>

<!-- draft-ietf-netmod-acl-model-11 IESG state: I-D Exists -->

<seriesInfo name='Work in Progress,' value='draft-ietf-netmod-acl-model-11' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-netmod-acl-model-11.txt' />
</reference>

<reference anchor='OSPF-YANG'>
<front>
<title>Yang Data Model for OSPF Protocol</title>

<author initials='D' surname='Yeung' fullname='Derek Yeung'>
    <organization />
</author>

<author initials='Y' surname='Qu' fullname='Yingzhen Qu'>
    <organization />
</author>

<author initials='Z' surname='Zhang' fullname='Zhaohui Zhang'>
    <organization />
</author>

<author initials='I' surname='Chen' fullname='Ing-Wher Chen'>
    <organization />
</author>

<author initials='A' surname='Lindem' fullname='Acee Lindem'>
    <organization />
</author>

<date month='July' day='2' year='2017' />

</front>

<!-- draft-ietf-ospf-yang-08 IESG state: I-D Exists -->

<seriesInfo name='Work in Progress,' value='draft-ietf-ospf-yang-08' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-ospf-yang-08.txt' />
</reference>

      <reference anchor="IESG-Statement"
        target="https://www.ietf.org/iesg/statement/writable-mib-module.html">
        <front>
          <title>Writable MIB Module IESG Statement</title>
          <author/>
          <date/>
        </front>
      </reference>
    </references>
<section anchor="ack" title="Acknowledgements" numbered="no">
    <t>Thanks to David Ball and Jonathan Hansford for feedback and
    suggestions.</t>
</section>

  </back>
</rfc>
