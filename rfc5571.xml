<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="6"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc subcompact="no"?>
<?rfc strict="no" ?>

<rfc number="5571" category="std">
	<front>
		<title abbrev="Softwire H &amp; S Framework with L2TPv2">
			Softwire Hub and Spoke Deployment Framework with&nbsp;Layer&nbsp;Two&nbsp;Tunneling&nbsp;Protocol&nbsp;Version&nbsp;2&nbsp;(L2TPv2)
			</title>

              <author fullname="Bill Storer" initials="B."
                      surname="Storer">
                      <organization>Cisco Systems</organization>
                      <address>
                              <postal>
                                      <street>170 W Tasman Dr</street>
                                      <street/>
                                      <city>San Jose</city>
                                      <code>95134</code>
                                      <region>CA</region>
                                      <country>USA</country>
                              </postal>
                              <email>bstorer@cisco.com</email>
                      </address>
              </author>

		<author role="editor" fullname="Carlos Pignataro" initials="C.M."
			surname="Pignataro">
			<organization>Cisco Systems</organization>
			<address>
				<postal>
					<street>7200 Kit Creek Road</street>
					<street>PO Box 14987</street>
					<city>Research Triangle Park</city>
					<code>27709</code>
					<region>NC</region>
					<country>USA</country>
				</postal>
<!--
				<phone>+1-919-392-7428</phone>
				<facsimile>+1-919-869-1438</facsimile>
-->
				<email>cpignata@cisco.com</email>
			</address>
		</author>

              <author fullname="Maria Alice Dos Santos" initials="M. A."
                      surname="Dos Santos">
                      <organization>Cisco Systems</organization>
                      <address>
                              <postal>
                                      <street>170 W Tasman Dr</street>
                                      <street/>
                                      <city>San Jose</city>
                                      <code>95134</code>
                                      <region>CA</region>
                                      <country>USA</country>
                              </postal>
                              <email>mariados@cisco.com</email>
                      </address>
              </author>

              <author role="editor" fullname="Bruno Stevant" initials="B."
                      surname="Stevant">
                      <organization>TELECOM Bretagne</organization>
                      <address>
                              <postal>
                                      <street>2 rue de la Chataigneraie CS17607</street>
                                      <city>Cesson Sevigne</city>
                                      <code>35576</code>
                                      <region/>
                                      <country>France</country>
                              </postal>
                              <email>bruno.stevant@telecom-bretagne.eu</email>
                      </address>
              </author>

<author fullname="Laurent Toutain" initials="L." surname="Toutain">
<organization>TELECOM Bretagne</organization>
<address>
<postal>
<street>2 rue de la Chataigneraie CS17607</street>
<city>Cesson Sevigne</city>
<code>35576</code>
<region/>
<country>France</country>
</postal>
<email>laurent.toutain@telecom-bretagne.eu</email>
</address>
</author>

              <author fullname="Jean-Francois Tremblay" initials="J.F."
                      surname="Tremblay">
                      <organization>Videotron Ltd.</organization>
                      <address>
                              <postal>
                                      <street>612 Saint-Jacques</street>
                                      <street/>
                                      <city>Montreal</city>
                                      <code>H3C 4M8</code>
                                      <region>QC</region>
                                      <country>Canada</country>
                              </postal>
                              <email>jf@jftremblay.com</email>
                      </address>
              </author>




		<date month="June" year="2009"/>
		<area></area>


		<workgroup>Softwires Working Group</workgroup>

<keyword>Softwire</keyword>
<keyword>L2TP</keyword>
<keyword>Softwire Hub and Spoke</keyword>
<keyword>Softwire HnS</keyword>
<keyword>4over6</keyword>
<keyword>6over4</keyword>
<keyword>L2TP softwires</keyword>
<keyword>L2TPv2 softwires</keyword>

<note title="">
<t>
This document may contain material from IETF Documents or IETF
Contributions published or made publicly available before November 10,
2008. The person(s) controlling the copyright in some of this material
may not have granted the IETF Trust the right to allow modifications
of such material outside the IETF Standards Process.  Without
obtaining an adequate license from the person(s) controlling the
copyright in such materials, this document may not be modified outside
the IETF Standards Process, and derivative works of it may not be
created outside the IETF Standards Process, except to format it for
publication as an RFC or to translate it into languages other than
English.
</t>
</note>


		<abstract>
			<t>
 This document describes the framework of the Softwire "Hub and
 Spoke" solution with the Layer Two Tunneling Protocol version 2 
 (L2TPv2). The
 implementation details specified in this document should be followed
 to achieve interoperability among different vendor implementations.
			</t>


		</abstract>


	</front>


	<middle>

		<section anchor="Intro" title="Introduction">
			<t>
 The Softwires Working Group has selected Layer Two Tunneling Protocol version 2
 (L2TPv2) as the phase 1 protocol to be deployed in the Softwire
 "Hub and Spoke" solution space.  This document describes the
 framework for the L2TPv2 "Hub and Spoke" solution, and the
 implementation details specified in this document should be followed
 to achieve interoperability among different vendor implementations.
			</t>

			<t>
 In the "Hub and Spoke" solution space, a Softwire is established to
 provide the home network with IPv4 connectivity across an IPv6-only
 access network, or IPv6 connectivity across an IPv4-only access
 network.  When L2TPv2 is used in the Softwire context, the voluntary
 tunneling model applies.  The Softwire Initiator (SI) at the home
 network takes the role of the L2TP Access Concentrator (LAC) client
 (initiating both the L2TP tunnel/session and the PPP link) while the
 Softwire Concentrator (SC) at the ISP takes the role of the L2TP
 Network Server (LNS).
 The terms voluntary tunneling and compulsory tunneling are defined in
 Section 1.1 of <xref target="RFC3193"/>.
 Since the L2TPv2 compulsory tunneling model does
 not apply to Softwires, it SHOULD NOT be requested or honored.  This
 document identifies all the voluntary tunneling related L2TPv2
 attributes that apply to Softwires and specifies the handling
 mechanism for such attributes in order to avoid ambiguities in
 implementations.  This document also identifies the set of L2TPv2
 attributes specific to the compulsory tunneling model that does not apply
 to Softwires and specifies the mechanism to ignore or nullify their
 effect within the Softwire context.

			</t>

			<t>
 The SI and SC MUST follow the L2TPv2 operations described in
 <xref target="RFC2661"/> when performing Softwire establishment,
teardown, and Operations, Administration, and Management (OAM).
 With L2TPv2, a Softwire consists of an L2TPv2 Control Connection
 (also referred to as Control Channel), a
 single L2TPv2 Session, and the PPP link negotiated over the Session.  To
 establish the Softwire, the SI first initiates an L2TPv2 Control
 Channel to the SC, which accepts the request and terminates the
 Control Channel.  L2TPv2 supports an optional mutual Control Channel
 authentication that allows both SI and SC to validate each other's
 identity at the initial phase of hand-shaking before proceeding with
 Control Channel establishment.  After the L2TPv2 Control Channel is
 established between the SI and SC, the SI initiates an L2TPv2 Session
 to the SC.  Then the PPP/IP link is negotiated over the L2TPv2
 Session between the SI and SC. After the PPP/IP link is established,
 it acts as the Softwire between the SI and SC for tunneling IP
 traffic of one Address Family (AF) across the access network of another
 Address Family.
			</t>

			<t>
 During the life of the Softwire, both SI and SC send L2TPv2
 keepalive HELLO messages to monitor the health of the Softwire and
 the peer L2TP Control Connection Endpoint (LCCE), and to potentially refresh the NAT/NAPT (Network Address Translation / Network Address Port Translation) entry at the CPE
 or at the other end of the access link.
 Optionally, Link Control Protocol (LCP) ECHO messages can be used as keepalives
 for the same purposes.

 In the event of keepalive
 timeout or administrative shutdown of the Softwire, either the SI or the SC
 MAY tear down the Softwire by tearing down the L2TPv2 Control Channel
 and Session as specified in <xref target="RFC2661"/>.
			</t>
              <section anchor="Intro.1" title="Abbreviations">
			<t>
<list style='hanging' hangIndent="7">
  <t hangText="AF">
Address Family, IPv4 or IPv6.
  </t>

  <t hangText="CPE">
Customer Premises Equipment.
  </t>

  <t hangText="LCCE">
L2TP Control Connection Endpoint,
an L2TP node that exists at either end of an L2TP Control
    Connection.
(See <xref target="RFC3931"/>.)
  </t>

  <t hangText="LNS">
L2TP Network Server,
a node that acts as one side of an L2TP tunnel (Control Connection) endpoint.
The LNS is the
    logical termination point of a PPP session that is being tunneled
    from the remote system by the peer LCCE.
(See <xref target="RFC2661"/>.)
  </t>

  <t hangText="SC">
Softwire Concentrator, the node terminating the Softwire in the
        service provider network. (See 
<xref target="RFC4925"/>.)
  </t>

  <t hangText="SI">
Softwire Initiator, the node initiating the Softwire within the
        customer network. (See 
<xref target="RFC4925"/>.)
  </t>

  <t hangText="SPH">
Softwire Payload Header, the IP
 headers being carried within a Softwire. (See 
<xref target="RFC4925"/>.)
  </t>

  <t hangText="STH">
Softwire Transport Header, the
 outermost IP header of a Softwire. (See 
<xref target="RFC4925"/>.)
  </t>

  <t hangText="SW">
Softwire, a shared-state "tunnel" created between the SC and SI.
 (See 
<xref target="RFC4925"/>.)
  </t>

</list>
			</t>
              </section> <!-- EO Intro.1 -->

              <section anchor="Intro.2" title="Requirements Language">
		    <t>The key words &quot;MUST&quot;, &quot;MUST NOT&quot;,
		    &quot;REQUIRED&quot;, &quot;SHALL&quot;,
		    &quot;SHALL NOT&quot;, &quot;SHOULD&quot;,
		    &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,
		    &quot;MAY&quot;, and &quot;OPTIONAL&quot; in this document
		    are to be interpreted as described in <xref
		    target="RFC2119"/>.
		    </t>

              </section> <!-- EO Intro.2 -->


              <section anchor="Intro.4" title="Considerations">
                      <t>
 Some sections of this document contain considerations that are not 
 required for interoperability and correct operation of Softwire 
 implementations.  These sections' titles are marked beginning with
 "Considerations".

                      </t>

              </section> <!-- EO Intro.4 -->

              </section> <!-- EO Intro -->


              <section anchor="Applicability"
		 title="Applicability of L2TPv2 for Softwire Requirements">
                      <t>
 A list of Softwire "Hub and Spoke" requirements has been
 identified by the Softwire Problem Statement 
<xref target="RFC4925"/>.  The following
 sub-sections describe how L2TPv2 fulfills each of them.
                      </t>

              <section anchor="Applicability.NAT"
		 title="Traditional Network Address Translation (NAT and NAPT)">
                      <t>
 A "Hub and Spoke" Softwire must be able to traverse
 Network Address Translation (NAT) and Network Address Port Translation
 (NAPT, also referred to as Port Address Translation or PAT)
 devices <xref target="RFC3022"/> in case
 the scenario in question involves a non-upgradable, preexisting IPv4
 home gateway performing NAT/NAPT or some carrier equipment at the
 other end of the access link performing NAT/NAPT.  The L2TPv2 Softwire
 (i.e., Control Channel and Session) is capable of NAT/NAPT traversal
 since L2TPv2 can run over UDP.
                      </t>

                      <t>
 Since L2TPv2 does not detect NAT/NAPT along the path, L2TPv2
 does not offer the option of disabling UDP. The UDP 
 encapsulation is present regardless of NAT/NAPT presence.  Both
 NAT/NAPT "autodetect" and UDP "bypass" are optional requirements
 in Section 2.3 of <xref target="RFC4925"/>.
                      </t>

                      <t>
	As mentioned in Section 8.1 of <xref target="RFC2661"/> and Section 4 of
	<xref target="RFC3193"/>, an L2TP Start-Control-Connection-Reply (SCCRP) responder (SC) can chose a different IP
	address and/or UDP port than those from the initiator's Start-Control-Connection-Request (SCCRQ)
	(SI). This may or may not traverse a NAT/NAPT depending on the
	NAT/NAPT's Filtering Behavior (see Section 5 of <xref target="RFC4787"/>).
	Specifically, any IP address and port combination will work with
	Endpoint-Independent Filtering, but changing the IP address and port
	will not work through Address-Dependent or Address-and-Port-Dependent Filtering.

Given this, responding from a different IP address
and/or UDP port is NOT RECOMMENDED.
                      </t>

              </section> <!-- EO Applicability.NAT -->

              <section anchor="Applicability.Scale"
               title="Scalability">
                      <t>
 In the "Hub and Spoke" model, a carrier must be able to scale the
 solution to millions of Softwire Initiators by adding more hubs (i.e.,
 Softwire Concentrators).  L2TPv2 is a widely deployed protocol in
 broadband services, and its scalability has been proven in multiple
 large-scale IPv4 Virtual Private Network deployments, which scale up
 to millions of subscribers each.
                      </t>
              </section> <!-- EO Applicability.Scale -->


              <section anchor="Applicability.Routing"
               title="Routing">
                      <t>
 There are no dynamic routing protocols between the SC and SI.
 A default route from the SI to the SC is used.
                      </t>
              </section> <!-- EO Applicability.Routing -->


              <section anchor="Applicability.Multicast"
               title="Multicast">
                      <t>
 Multicast protocols simply run transparently over L2TPv2 Softwires together with other regular IP traffic.

                      </t>
              </section> <!-- EO Applicability.Multicast -->

              <section anchor="Applicability.AAA"
               title="Authentication, Authorization, and Accounting (AAA)">
                      <t>
 L2TPv2 supports optional mutual Control Channel authentication and
 leverages the optional mutual PPP per-session authentication.  L2TPv2
 is well integrated with AAA solutions (such as RADIUS) for both
 authentication and authorization. Most L2TPv2 implementations
 available in the market support the logging of authentication and
 authorization events.
                      </t>

                      <t>
 L2TPv2 integration with RADIUS accounting (RADIUS Accounting
 extension for tunnel <xref target="RFC2867"/>)
allows the collection and reporting
 of L2TPv2 Softwire usage statistics.
                      </t>
              </section> <!-- EO Applicability.AAA -->

              <section anchor="Applicability.Priv"
               title="Privacy, Integrity, and Replay Protection">
                      <t>
 Since L2TPv2 runs over IP/UDP in the Softwire context, IPsec Encapsulating Security Payload (ESP) can
 be used in conjunction to provide per-packet authentication,
 integrity, replay protection, and confidentiality for both L2TPv2
 control and data traffic <xref target="RFC3193"/> and
<xref target="RFC3948"/>.
                      </t>

                      <t>
 For Softwire deployments in which full payload security is not
 required, the L2TPv2 built-in Control Channel authentication and the
 inherited PPP authentication and PPP Encryption Control Protocol can
 be considered.
                      </t>
              </section> <!-- EO Applicability.Priv -->

              <section anchor="Applicability.OAM"
               title="Operations and Management">
                      <t>
 L2TPv2 supports an optional in-band keepalive mechanism that injects
 HELLO control messages after a specified period of time has elapsed
 since the last data or control message was received on a tunnel
 (see Section 5.5 of <xref target="RFC2661"/>).  If
 the HELLO control message is not reliably delivered, then the Control
 Channel and its Session will be torn down.  In the Softwire context,
 the L2TPv2 keepalive is used to monitor the connectivity status
 between the SI and SC and/or as a refresh mechanism for any NAT/NAPT
 translation entry along the access link.
                      </t>

                      <t>
 LCP ECHO offers a similar mechanism to monitor the connectivity
 status, as described in <xref target="RFC1661"/>. Softwire implementations 
 SHOULD use L2TPv2 Hello keepalives, and in addition MAY use PPP LCP Echo
 messages to ensure Dead End 
 Detection and/or to refresh NAT/NAPT translation entries. The combination
 of these two mechanisms can be used as an optimization.
                      </t>

                      <t>
 The L2TPv2 MIB <xref target="RFC3371"/> supports the complete suite of management
 operations such as configuration of Control Channel and Session,
 polling of Control Channel and Session status and their traffic
 statistics and notifications of Control Channel and Session UP/DOWN
 events.
                      </t>
              </section> <!-- EO Applicability.OAM -->

              <section anchor="Applicability.Encap"
               title="Encapsulations">
                      <t>
L2TPv2 supports the following encapsulations:
                      </t>

<t><list style="symbols">
  <t>IPv6/PPP/L2TPv2/UDP/IPv4</t>
  <t>IPv4/PPP/L2TPv2/UDP/IPv6</t>
  <t>IPv4/PPP/L2TPv2/UDP/IPv4</t>
  <t>IPv6/PPP/L2TPv2/UDP/IPv6</t>
</list></t>
                      <t>
 Note that UDP bypass is not supported by L2TPv2 since L2TPv2 does not
 support "autodetect" of NAT/NAPT.
                      </t>
              </section> <!-- EO Applicability.Encap -->


              </section> <!-- EO Applicability -->




              <section anchor="Deployment"
               title="Deployment Scenarios">
                      <t>
 For the "Hub and Spoke" problem space, four scenarios have been
 identified. In each of these four scenarios, different home equipment
 plays the role of the Softwire Initiator.  This section elaborates
 each scenario with L2TPv2 as the Softwire protocol and other possible
 protocols involved to complete the solution.  This section examines
 the four scenarios for both IPv6-over-IPv4
(<xref target="Deployment.1"/>)
 and IPv4-over-IPv6 (<xref target="Deployment.2"/>)
 encapsulations.
                      </t>

              <section anchor="Deployment.1"
               title="IPv6-over-IPv4 Softwires with L2TPv2">
                      <t>
The following sub-sections cover IPv6 connectivity (SPH) across an IPv4-only
access network (STH) using a Softwire.
                     </t>

              <section anchor="Deployment.1.1"
               title="Host CPE as Softwire Initiator">
                      <t>
 The Softwire Initiator (SI) is the host CPE (directly
 connected to a modem), which is dual-stack.  There is no other
 gateway device. The IPv4 traffic SHOULD NOT traverse the Softwire.
See <xref target="Fig1"/>.
                      </t>

<figure align="center" anchor="Fig1" title="Host CPE as Softwire Initiator">
<preamble></preamble>
<artwork>
<![CDATA[       IPv6 or dual-stack      IPv4-only      dual-stack
      |------------------||-----------------||----------|

I                    SC                          SI
N                  +-----+                   +----------+
T                  |     |                   |  v4/v6   |
E  <==[ IPv6  ]....|v4/v6|....[IPv4-only]....| host CPE |
R     [network]    |     |    [ network ]    |          |
N                  | LNS |                   |LAC Client|
E                  +-----+                   +----------+
T                          _ _ _ _ _ _ _ _ _
                         ()_ _ _ _ _ _ _ _ _() <-- IPv6 traffic
                       PPP o L2TPv2 o UDP o IPv4          (SPH)
                                Softwire

                         <------------------>
              IPV6CP: capable of /64 Intf-Id assignment or
                           uniqueness check

                         |------------------>/64 prefix
                                  RA
                         |------------------>DNS, etc.
                                DHCPv6]]>
</artwork>
<postamble></postamble>
</figure>

                      <t>
 In this scenario, after the L2TPv2 Control Channel and Session establishment
and PPP LCP negotiation (and optionally PPP Authentication) are successful,
the IPv6 Control Protocol (IPV6CP) negotiates IPv6-over-PPP, which also provides
 the capability for the ISP to assign the 64-bit Interface-Identifier to the
 host CPE or perform uniqueness validation for the two interface identifiers
 at the two PPP ends <xref target="RFC5072"/>.
After IPv6-over-PPP is up, IPv6 Stateless Address Autoconfiguration / Neighbor
 Discovery runs over the IPv6-over-PPP link, and the LNS can 
inform the host CPE of a prefix to use for  
stateless
 address autoconfiguration through a
 Router Advertisement (RA)
 while other non-address configuration options (such as DNS
<xref target="RFC3646"/> or other servers' addresses that
might be available) can be conveyed to
 the host CPE via DHCPv6.
                      </t>


              </section> <!-- EO Deployment.1.1 -->

              <section anchor="Deployment.1.2"
               title="Router CPE as Softwire Initiator">
                      <t>
 The Softwire Initiator (SI)
 is the router CPE, which is a dual-stack device. The IPv4
 traffic SHOULD NOT traverse the Softwire.
See <xref target="Fig2"/>.
                      </t>

<figure align="center" anchor="Fig2" title="Router CPE as Softwire Initiator">
<preamble></preamble>
<artwork>
<![CDATA[       IPv6 or dual-stack      IPv4-only           dual-stack
      |------------------||-----------------||---------------------|

I                    SC                          SI
N                  +-----+                   +----------+
T                  |     |                   |  v4/v6   |    +-----+
E  <==[ IPv6  ]....|v4/v6|....[IPv4-only]....|   CPE    |----|v4/v6|
R     [network]    |     |    [ network ]    |          |    | host|
N                  | LNS |                   |LAC Client|    +-----+
E                  +-----+                   +----------+
T                          _ _ _ _ _ _ _ _ _
                         ()_ _ _ _ _ _ _ _ _() <-------- IPv6 traffic
                       PPP o L2TPv2 o UDP o IPv4                (SPH)
                                Softwire

                         <------------------>
                 IPV6CP: capable of /64 Intf-Id assignment or
                             uniqueness check

                         |------------------>/64 prefix
                                  RA
                         |------------------>/48 prefix,
                                DHCPv6       DNS, etc.

                                                  |------->/64 prefix
                                                      RA
                                                  |-------> DNS, etc.
                                                  DHCPv4/v6]]>
</artwork>
<postamble></postamble>
</figure>

                      <t>
 In this scenario, after the L2TPv2 Control Channel and Session establishment
and PPP LCP negotiation (and optionally PPP Authentication) are successful,
IPV6CP negotiates IPv6-over-PPP, which also provides
 the capability for the ISP to assign the 64-bit Interface-Identifier to the
 router CPE or perform uniqueness validation for the two 
interface identifiers
 at the two PPP ends <xref target="RFC5072"/>.
After IPv6-over-PPP is up, IPv6 Stateless Address Autoconfiguration / Neighbor
 Discovery runs over the IPv6-over-PPP link, and the LNS can 
inform the router CPE of a prefix to use for  
stateless
 address autoconfiguration through a
 Router Advertisement (RA).
 DHCPv6 can be used to perform IPv6 Prefix Delegation (e.g.,
 delegating a prefix to be used within the home network
<xref target="RFC3633"/>) and
 convey other non-address configuration options (such as DNS
<xref target="RFC3646"/>) to the router CPE.
                      </t>

              </section> <!-- EO Deployment.1.2 -->

              <section anchor="Deployment.1.3"
               title="Host behind CPE as Softwire Initiator">
                      <t>
 The CPE
 is IPv4-only. The Softwire Initiator (SI) is a dual-stack host (behind the
 IPv4-only CPE), which acts as an IPv6 host CPE. The IPv4 traffic SHOULD
 NOT traverse the Softwire.
See <xref target="Fig3"/>.
                      </t>

<figure align="center" anchor="Fig3" title="Host behind CPE as Softwire Initiator">
<preamble></preamble>
<artwork>
<![CDATA[      IPv6 or dual-stack            IPv4-only           dual-stack
     |------------------||----------------------------||----------|

I                   SC                                    SI
N                 +-----+                              +----------+
T                 |     |                   +-------+  |   v4/v6  |
E <==[ IPv6  ]....|v4/v6|....[IPv4-only]....|v4-only|--|   host   |
R    [network]    |     |    [ network ]    |  CPE  |  |          |
N                 | LNS |                   +-------+  |LAC Client|
E                 +-----+                              +----------+
T                         _ _ _ _ _ _ _ _ _ _ _ _ _ _
                        ()_ _ _ _ _ _ _ _ _ _ _ _ _ _() <--  IPv6
                           PPP o L2TPv2 o UDP o IPv4        traffic
                                    Softwire                 (SPH)

                        <------------------------------>
                 IPV6CP: capable of /64 Intf-Id assignment or
                               uniqueness check

                        |------------------------------>/64 prefix
                                       RA
                        |------------------------------>DNS, etc.
                                     DHCPv6]]>
</artwork>
<postamble></postamble>
</figure>

                      <t>
 In this scenario, after the L2TPv2 Control Channel and Session establishment
and PPP LCP negotiation (and optionally PPP Authentication) are successful,
IPV6CP negotiates IPv6-over-PPP, which also provides
 the capability for the ISP to assign the 64-bit Interface-Identifier to the
 host or perform uniqueness validation for the two interface identifiers at
 the two PPP ends <xref target="RFC5072"/>.
After IPv6-over-PPP is up, IPv6 Stateless Address Autoconfiguration / Neighbor
 Discovery runs over the IPv6-over-PPP link, and the LNS can 
inform the host of a prefix to use for  
stateless
 address autoconfiguration through a
 Router Advertisement (RA) while
 other non-address configuration options (such as DNS
<xref target="RFC3646"/>) can be conveyed to the host
 via DHCPv6.
                      </t>

              </section> <!-- EO Deployment.1.3 -->

              <section anchor="Deployment.1.4"
               title="Router behind CPE as Softwire Initiator">
                      <t>
 The CPE
 is IPv4-only.  The Softwire Initiator (SI) is a dual-stack device (behind the
 IPv4-only CPE) acting as an IPv6 CPE router inside the home network.
 The IPv4 traffic SHOULD NOT traverse the Softwire.
See <xref target="Fig4"/>.
                      </t>

<figure align="center" anchor="Fig4" title="Router behind CPE as Softwire Initiator">
<preamble></preamble>
<artwork>
<![CDATA[      IPv6 or dual-stack           IPv4-only          dual-stack
     |------------------||-------------------------||-------------|

I                   SC                                 SI
N                 +-----+                           +----------+
T                 |     |               +-------+   |  v4/v6   |
E <==[ IPv6  ]....|v4/v6|..[IPv4-only]..|v4-only|---|  router  |
R    [network]    |     |  [ network ]  |  CPE  | | |          |
N                 | LNS |               +-------+ | |LAC Client|
E                 +-----+                         | +----------+
T                                                 |
                                                  ---------+-----+
                                                           |v4/v6|
                                                           | host|
                          _ _ _ _ _ _ _ _ _ _ _ _ _        +-----+
                        ()_ _ _ _ _ _ _ _ _ _ _ _ _() <--  IPv6
                           PPP o L2TPv2 o UDP o IPv4      traffic
                                    Softwire               (SPH)

                        <--------------------------->
               IPV6CP: capable of /64 Intf-Id assignment or
                              uniqueness check

                        |--------------------------->/64 prefix
                                      RA
                        |--------------------------->/48 prefix,
                                    DHCPv6           DNS, etc.

                                                        |----> /64
                                                          RA   prefix
                                                        |----> DNS,
                                                        DHCPv6 etc.]]>
</artwork>
<postamble></postamble>
</figure>

                      <t>
 In this scenario, after the L2TPv2 Control Channel and Session establishment
and PPP LCP negotiation (and optionally PPP Authentication) are successful,
IPV6CP negotiates IPv6-over-PPP, which also provides
 the capability for the ISP to assign the 64-bit Interface-Identifier to the
 v4/v6 router or perform uniqueness validation for the two 
interface identifiers
 at the two PPP ends <xref target="RFC5072"/>.
After IPv6-over-PPP is up, IPv6 Stateless Address Autoconfiguration / Neighbor Discovery runs over the IPv6-over-PPP link, and the LNS can
inform the v4/v6 router of a prefix to use for  
stateless
 address autoconfiguration through a
 Router
 Advertisement (RA). DHCPv6 can be used to perform IPv6 Prefix
 Delegation (e.g., delegating a prefix to be used within
 the home network
<xref target="RFC3633"/>) and convey other non-address configuration options (such as
 DNS <xref target="RFC3646"/>) to the v4/v6 router.
                      </t>

              </section> <!-- EO Deployment.1.4 -->

              </section> <!-- EO Deployment.1 -->


              <section anchor="Deployment.2"
               title="IPv4-over-IPv6 Softwires with L2TPv2">
                      <t>
The following sub-sections cover IPv4 connectivity (SPH) across an IPv6-only
access network (STH) using a Softwire.
                     </t>

               <section anchor="Deployment.2.1"
               title="Host CPE as Softwire Initiator">
                      <t>
 The Softwire Initiator (SI)
 is the host CPE (directly connected to a modem), which is
 dual-stack.  There is no other gateway device. The IPv6 traffic
 SHOULD NOT traverse the Softwire.
See <xref target="Fig5"/>.
                      </t>

<figure align="center" anchor="Fig5" title="Host CPE as Softwire Initiator">
<preamble></preamble>
<artwork>
<![CDATA[      IPv4 or dual-stack      IPv6-only      dual-stack
     |------------------||-----------------||----------|

I                   SC                          SI
N                 +-----+                   +----------+
T                 |     |                   |  v4/v6   |
E <==[ IPv4  ]....|v4/v6|....[IPv6-only]....| host CPE |
R    [network]    |     |    [ network ]    |          |
N                 | LNS |                   |LAC Client|
E                 +-----+                   +----------+
T                         _ _ _ _ _ _ _ _ _
                        ()_ _ _ _ _ _ _ _ _() <-- IPv4 traffic
                      PPP o L2TPv2 o UDP o IPv6          (SPH)
                               Softwire

                        <------------------>
                IPCP: capable of global IP assignment
                             and DNS, etc.]]>
</artwork>
<postamble></postamble>
</figure>

                      <t>
 In this scenario, after the L2TPv2 Control Channel and Session establishment
and PPP LCP negotiation (and optionally PPP Authentication) are successful,
the IP Control Protocol (IPCP) negotiates IPv4-over-PPP, which also provides
 the capability for the ISP to assign a global IPv4 address to the
 host CPE.  A global IPv4 address can also be assigned via DHCP.  Other
 configuration options (such as DNS) can be conveyed to the host CPE
 via IPCP <xref target="RFC1877"/> or DHCP <xref target="RFC2132"/>.
                      </t>

              </section> <!-- EO Deployment.2.1 -->

              <section anchor="Deployment.2.2"
               title="Router CPE as Softwire Initiator">
                      <t>

The Softwire Initiator (SI)
 is the router CPE, which is a dual-stack device.  The IPv6
 traffic SHOULD NOT traverse the Softwire.
See <xref target="Fig6"/>.
                      </t>

<figure align="center" anchor="Fig6" title="Router CPE as Softwire Initiator">
<preamble></preamble>
<artwork>
<![CDATA[      IPv4 or dual-stack      IPv6-only        dual-stack Home
     |------------------||-----------------||-------------------|

I                   SC                          SI
N                 +-----+                   +----------+
T                 |     |                   |  v4/v6   |  +-----+
E <==[ IPv4  ]....|v4/v6|....[IPv6-only]....|   CPE    |--|v4/v6|
R    [network]    |     |    [ network ]    |          |  | host|
N                 | LNS |                   |LAC Client|  +-----+
E                 +-----+                   +----------+
T                         _ _ _ _ _ _ _ _ _
                        ()_ _ _ _ _ _ _ _ _() <--------- IPv4 traffic
                      PPP o L2TPv2 o UDP o IPv6                 (SPH)
                               Softwire

                        <------------------>
                IPCP: capable of global IP assignment
                            and DNS, etc.

                        |------------------>
                      DHCPv4: prefix, mask, PD

                                                          private/
                                                 |------> global
                                                   DHCP   IP, DNS,
                                                          etc.]]>
</artwork>
<postamble></postamble>
</figure>

                      <t>
 In this scenario, after the L2TPv2 Control Channel and Session establishment
and PPP LCP negotiation (and optionally PPP Authentication) are successful,
IPCP negotiates IPv4-over-PPP, which also provides
 the capability for the ISP to assign a global IPv4 address to the
 router CPE.  A global IPv4 address can also be assigned via DHCP. Other
 configuration options (such as DNS) can be conveyed to the router CPE
 via IPCP <xref target="RFC1877"/> or DHCP <xref target="RFC2132"/>.
 For IPv4 Prefix Delegation for the home
 network, DHCP
<xref target="SUBNET-ALL"/> can be used.
                      </t>

              </section> <!-- EO Deployment.2.2 -->

              <section anchor="Deployment.2.3"
               title="Host behind CPE as Softwire Initiator">
                      <t>


The CPE
 is IPv6-only. The Softwire Initiator (SI) is a dual-stack host (behind the
 IPv6 CPE), which acts as an IPv4 host CPE. The IPv6 traffic SHOULD
 NOT traverse the Softwire.
See <xref target="Fig7"/>.
                      </t>

<figure align="center" anchor="Fig7" title="Host behind CPE as Softwire Initiator">
<preamble></preamble>
<artwork>
<![CDATA[      IPv4 or dual-stack            IPv6-only           dual-stack
     |------------------||----------------------------||----------|

I                   SC                                      SI
N                 +-----+                              +----------+
T                 |     |                   +-------+  |   v4/v6  |
E <==[ IPv4  ]....|v4/v6|....[IPv6-only]....|v6-only|--|   host   |
R    [network]    |     |    [ network ]    |  CPE  |  |          |
N                 | LNS |                   +-------+  |LAC Client|
E                 +-----+                              +----------+
T                         _ _ _ _ _ _ _ _ _ _ _ _ _ _
                        ()_ _ _ _ _ _ _ _ _ _ _ _ _ _() <--  IPv4
                           PPP o L2TPv2 o UDP o IPv6        traffic
                                    Softwire                 (SPH)

                        <------------------------------>
                    IPCP: capable of global IP assignment
                                and DNS, etc.]]>
</artwork>
<postamble></postamble>
</figure>

                      <t>
 In this scenario, after the L2TPv2 Control Channel and Session establishment
and PPP LCP negotiation (and optionally PPP Authentication) are successful,
IPCP negotiates IPv4-over-PPP, which also provides
 the capability for the ISP to assign a global IPv4 address to the
 host. A global IPv4 address can also be assigned via DHCP.  Other
 configuration options (such as DNS) can be conveyed to the host CPE
 via IPCP <xref target="RFC1877"/> or DHCP <xref target="RFC2132"/>.
                      </t>

              </section> <!-- EO Deployment.2.3 -->

              <section anchor="Deployment.2.4"
               title="Router behind CPE as Softwire Initiator">
                      <t>

The CPE
 is IPv6-only.  The Softwire Initiator (SI) is a dual-stack device (behind the
 IPv6-only CPE) acting as an IPv4 CPE router inside the home network.
 The IPv6 traffic SHOULD NOT traverse the Softwire.
See <xref target="Fig8"/>.
                      </t>

<figure align="center" anchor="Fig8" title="Router behind CPE as Softwire Initiator">
<preamble></preamble>
<artwork>
<![CDATA[      IPv4 or dual-stack          IPv6-only           dual-stack
     |------------------||-------------------------||------------|

I                   SC                                 SI
N                 +-----+                           +----------+
T                 |     |               +-------+   |  v4/v6   |
E <==[ IPv4  ]....|v4/v6|..[IPv6-only]..|v6-only|---|  router  |
R    [network]    |     |  [ network ]  |  CPE  | | |          |
N                 | LNS |               +-------+ | |LAC Client|
E                 +-----+                         | +----------+
T                                                 |
                                                  --------+-----+
                                                          |v4/v6|
                                                          | host|
                          _ _ _ _ _ _ _ _ _ _ _ _ _       +-----+
                        ()_ _ _ _ _ _ _ _ _ _ _ _ _() <---  IPv4
                          PPP o L2TPv2 o UDP o IPv4        traffic
                                   Softwire                 (SPH)

                        <--------------------------->
                IPCP: assigns global IP address and DNS, etc.

                        |--------------------------->
                           DHCPv4: prefix, mask, PD

                                                             private/
                                                      |----> global
                                                       DHCP  IP, DNS,
                                                             etc.]]>
</artwork>
<postamble></postamble>
</figure>

                      <t>
 In this scenario, after the L2TPv2 Control Channel and Session establishment
and PPP LCP negotiation (and optionally PPP Authentication) are successful,
IPCP negotiates IPv4-over-PPP, which also provides
 the capability for the ISP to assign a global IPv4 address to the
 v4/v6 router.  A global IPv4 address can also be assigned via DHCP.
 Other configuration options (such as DNS) can be conveyed to the
 v4/v6 router via IPCP <xref target="RFC1877"/> or DHCP
<xref target="RFC2132"/>.
 For IPv4 Prefix Delegation
 for the home network, DHCP
<xref target="SUBNET-ALL"/> can be used.
                      </t>

              </section> <!-- EO Deployment.2.4 -->

              </section> <!-- EO Deployment.2 -->

              </section> <!-- EO Deployment -->



              <section anchor="Standardization"
               title="References to Standardization Documents">
                      <t>
This section lists and groups documents from the Internet
standardization describing  
technologies used to design the framework of the Softwire "Hub and  
Spoke" solution. This emphasizes the motivation of Softwire to reuse 
as many existing standards as possible.
This list contains both Standards Track  
(Proposed Standard, Draft Standard, and Standard)
and Informational documents. The list of documents and their status
should only be only used for 
description purposes.
                      </t>

              <section anchor="Standardization.1"
               title="L2TPv2">
                      <t>
<list style='hanging' hangIndent="11">
<t hangText="RFC 2661">
"Layer Two Tunneling Protocol 'L2TP'" <xref target="RFC2661"/>.
<list style="symbols" hangIndent="2">
<t>For both IPv4 and IPv6 payloads (SPH), support is complete.</t>
<t>For both IPv4 and IPv6 transports (STH), support is complete.</t>
</list>
</t>
</list>
                      </t>
              </section> <!-- EO Standardization.1 -->

              <section anchor="Standardization.2"
               title="Securing the Softwire Transport">
                      <t>
<list style='hanging' hangIndent="11">
<t hangText="RFC 3193">"Securing L2TP using IPsec" <xref target="RFC3193"/>.</t>
<t hangText="RFC 3948">
"UDP Encapsulation of IPsec ESP Packets" <xref target="RFC3948"/>.
<list style="symbols" hangIndent="2"><t>
IPsec supports both IPv4 and IPv6 transports.
</t></list>
</t>
</list>
                      </t>
              </section> <!-- EO Standardization.2 -->

              <section anchor="Standardization.3"
               title="Authentication, Authorization, and Accounting">
                      <t>
<list style='hanging' hangIndent="11">
<t hangText="RFC 2865">"Remote Authentication Dial In User Service (RADIUS)"
<xref target="RFC2865"/>.
<list style="symbols" hangIndent="2"><t>
Updated by
<xref target="RFC2868"/>,
<xref target="RFC3575"/>, and
<xref target="RFC5080"/>.
</t></list>
</t>
<t hangText="RFC 2867">
"RADIUS Accounting Modifications for Tunnel Protocol Support"
<xref target="RFC2867"/>.
</t>
<t hangText="RFC 2868">
"RADIUS Attributes for Tunnel Protocol Support"
<xref target="RFC2868"/>.
</t>
<t hangText="RFC 3162">"RADIUS and IPv6" <xref target="RFC3162"/>.</t>
</list>
                      </t>
              </section> <!-- EO Standardization.3 -->

              <section anchor="Standardization.4"
               title="MIB">
                      <t>
<list style='hanging' hangIndent="11">
<t hangText="RFC 1471">
	"The Definitions of Managed Objects for the Link Control Protocol of the Point-to-Point Protocol"
	<xref target="RFC1471"/>.</t>
<t hangText="RFC 1473">
	"The Definitions of Managed Objects for the IP Network Control Protocol of the Point-to-Point Protocol"
	<xref target="RFC1473"/>.</t>
<t hangText="RFC 3371">"Layer Two Tunneling Protocol "L2TP" Management Information Base" <xref target="RFC3371"/>.</t>
<t hangText="RFC 4087">"IP Tunnel MIB" <xref target="RFC4087"/>.
<list style="symbols" hangIndent="2">
<t>Both IPv4 and IPv6 transports are supported.</t></list>
</t>
</list>
                      </t>
              </section> <!-- EO Standardization.4 -->

              <section anchor="Standardization.5"
               title="Softwire Payload Related">
                      <t/>

              <section anchor="Standardization.5.1"
               title="For IPv6 Payloads">
                      <t>
<list style='hanging' hangIndent="11">
<t hangText="RFC 4861">"Neighbor Discovery for IP version 6 (IPv6)"
<xref target="RFC4861"/>.</t>
<t hangText="RFC 4862">"IPv6 Stateless Address Autoconfiguration"
<xref target="RFC4862"/>.</t>
<t hangText="RFC 5072">"IP Version 6 over PPP" <xref target="RFC5072"/>.
</t>
<t hangText="RFC 3315">
"Dynamic Host Configuration Protocol for IPv6 (DHCPv6)"
<xref target="RFC3315"/>.</t>
<t hangText="RFC 3633">
"IPv6 Prefix Options for
Dynamic Host Configuration Protocol (DHCP) version 6"
<xref target="RFC3633"/>.</t>
<t hangText="RFC 3646">
"DNS Configuration options for Dynamic Host Configuration Protocol for IPv6 (DHCPv6)" <xref target="RFC3646"/>.</t>
<t hangText="RFC 3736">
"Stateless Dynamic Host Configuration Protocol (DHCP) Service for IPv6" <xref target="RFC3736"/>.</t>
</list>
                      </t>
              </section> <!-- EO Standardization.5.1 -->

              <section anchor="Standardization.5.2"
               title="For IPv4 Payloads">
                      <t>
<list style='hanging' hangIndent="11">
<t hangText="RFC 1332">"The PPP Internet Protocol Control Protocol (IPCP)" <xref target="RFC1332"/>.</t>
<t hangText="RFC 1661">"The Point-to-Point Protocol (PPP)" <xref target="RFC1661"/>.</t>
<t hangText="RFC 1877">"PPP Internet Protocol Control Protocol Extensions for
Name Server Addresses" <xref target="RFC1877"/>.</t>
<t hangText="RFC 2131">"Dynamic Host Configuration Protocol"
<xref target="RFC2131"/>.</t>
<t hangText="RFC 2132">"DHCP Options and BOOTP Vendor Extensions"
<xref target="RFC2132"/>.</t>
<t hangText="DHCP Subnet Allocation">"Subnet Allocation Option".
<list style="symbols" hangIndent="2"><t>
Work in progress, see
<xref target="SUBNET-ALL"/>.</t></list>
</t>
</list>
                      </t>
              </section> <!-- EO Standardization.5.2 -->

              </section> <!-- EO Standardization.5 -->

              </section> <!-- EO Standardization -->








              <section anchor="Establishment"
               title="Softwire Establishment">
                      <t>
A Softwire is established in three distinct steps,
potentially preceded by an optional IPsec-related step 0 (see
<xref target="Fig_SW_Est"/>). First, an L2TPv2 
tunnel with a single session is established from the SI to the SC. Second,
a PPP session is established over the L2TPv2 session and the SI obtains an 
address. Third, the SI optionally gets other information through DHCP such
as a delegated prefix and DNS servers. 
                      </t>

<figure align="center" anchor="Fig_SW_Est" title="Steps for the Establishment of a Softwire">
<preamble></preamble>
<artwork>
<![CDATA[SC                                 SI
 |                                 |
 |<-------------IKEv1------------->| Step 0
 |                                 | IPsec SA establishment
 |                                 | (optional)
 |                                 |
 |<-------------L2TPv2------------>| Step 1
 |                                 | L2TPv2 Tunnel establishment
 |                                 |
 |<--------------PPP-------------->| Step 2
 |<-----Endpoint Configuration---->| PPP and Endpoint
 |                                 | configuration
 |                                 |
 |<------Router Configuration----->| Step 3
 |                                 | Additional configuration
 |                                 | (optional)]]>
</artwork>
<postamble></postamble>
</figure>

                      <t>
<xref target="Fig_SW_Est_Detail"/> depicts details of each of these steps
required to establish a Softwire.
                      </t>

<figure align="center" anchor="Fig_SW_Est_Detail" title="Detailed Steps in the Establishment of a Softwire">
<preamble></preamble>
<artwork>
<![CDATA[SC                                 SI
 |                                 |
 |                                 | Step 0
 |<------------IKEv1-------------->| = IKEv1 (Optional)
 |                                 |
 |                                 | Step 1
 |<------------SCCRQ---------------| -
 |-------------SCCRP-------------->| |
 |<------------SCCCN---------------| |
 |<------------ICRQ----------------| | L2TPv2
 |-------------ICRP--------------->| |
 |<------------ICCN----------------| -
 |                                 |
 |                                 | Step 2
 |<-----Configuration-Request------| -
 |------Configuration-Request----->| | PPP
 |--------Configuration-Ack------->| | LCP
 |<-------Configuration-Ack--------| -
 |                                 |
 |-----------Challenge------------>| - PPP Authentication
 |<----------Response--------------| | (Optional - CHAP)
 |------------Success------------->| -
 |                                 |
 |<-----Configuration-Request------| -
 |------Configuration-Request----->| | PPP NCP
 |--------Configuration-Ack------->| | (IPV6CP or IPCP)
 |<-------Configuration-Ack--------| -
 |                                 |
 |<------Router-Solicitation-------| - Neighbor Discovery
 |-------Router-Advertisement----->| | (IPv6 only)
 |                                 | -
 |                                 |
 |                                 | Step3
 |                                 | DHCP (Optional)
 |<-----------SOLICIT--------------| -
 |-----------ADVERTISE------------>| | DHCPv6
 |<---------- REQUEST--------------| | (IPv6 SW, Optional)
 |-------------REPLY-------------->| -
 |                                 | or
 |<---------DHCPDISCOVER-----------| -
 |-----------DHCPOFFER------------>| | DHCPv4
 |<---------DHCPREQUEST------------| | (IPv4 SW, Optional)
 |------------DHCPACK------------->| -]]>
</artwork>
<postamble></postamble>
</figure>

<t>
The IPsec-related negotiations in step 0 are optional.
The L2TPv2 negotiations in step 1 are described in 
<xref target="Establishment.1"/>.
The PPP Network Control Protocol (NCP) negotiations in step 2 use IPV6CP for IPv6-over-IPv4
Softwires, and IPCP for IPv4-over-IPv6 Softwires
(see <xref target="Establishment.2.4"/>). The optional
DHCP negotiations in step 3 use DHCPv6 for IPv6-over-IPv4
Softwires, and DHCPv4 for IPv4-over-IPv6 Softwires
(see <xref target="Establishment.4"/>).
Additionally, for IPv6-over-IPv4
Softwires, the DHCPv6 exchange for non-address configuration
(such as DNS) can use Stateless DHCPv6, the two-message exchange with
Information-Request and Reply messages (see Section 1.2 of
<xref target="RFC3315"/> and <xref target="RFC3736"/>).
</t>

              <section anchor="Establishment.1"
               title="L2TPv2 Tunnel Setup">
                      <t>
L2TPv2 
<xref target="RFC2661"/> was originally designed to provide private network
access to end users connected to a public network.  In the L2TPv2
incoming call
model, the end user makes a connection to an L2TP Access Concentrator (LAC).
The LAC then initiates an L2TPv2 tunnel to an L2TP Network Server (LNS).
The LNS then transfers end-user traffic between the L2TPv2 tunnel and the 
private network.

</t><t>

In the Softwire "Hub and Spoke" model, the Softwire Initiator (SI) assumes  
the role of the LAC Client
and the Softwire Concentrator (SC) assumes the role of the LNS.
                      </t>

                      <t>
In the Softwire model, an L2TPv2 packet MUST be carried over UDP.
The underlying version of the IP protocol may be IPv4 or IPv6, 
depending on the Softwire 
scenario.
                      </t>

                      <t>
In the following sections, the term "Tunnel" follows the definition
from Section 1.2 of <xref target="RFC2661"/>, namely:
"The Tunnel consists of a
    Control Connection and zero or more L2TP Sessions".
                      </t>

                 <section anchor="Establishment.1.1"
                  title="Tunnel Establishment">

                         <t>
<xref target="Fig_SW_Est_L2TP_CC"/>
describes the messages exchanged and 
Attribute Value Pairs (AVPs) used to establish 
a tunnel between an SI (LAC) and an SC (LNS).  The messages and AVPs described
here are only a subset of those defined in
<xref target="RFC2661"/>.  This is because Softwires use only a subset of 
the L2TPv2 functionality.
The subset of L2TP Control Connection Management AVPs
that is applicable to Softwires is 
grouped into Required AVPs and Optional AVPs 
on a per-control-message basis (see
<xref target="Fig_SW_Est_L2TP_CC"/>).
For each control message, Required AVPs include all the
"MUST be present" AVPs from <xref target="RFC2661"/> for that control message,
and Optional AVPs include the "MAY be present" AVPs from <xref target="RFC2661"/>
that are used in the Softwire context on that control message.
Note that in the Softwire environment, the SI 
always initiates the tunnel.
L2TPv2 AVPs SHOULD NOT be hidden.
                         </t>

<figure align="center" anchor="Fig_SW_Est_L2TP_CC" title="Control Connection Establishment">
<preamble></preamble>
<artwork>
<![CDATA[SC                       SI
 |<--------SCCRQ---------|
  Required AVPs:
     Message Type
     Protocol Version
     Host Name
     Framing Capabilities
     Assigned Tunnel ID
  Optional AVPs:
     Receive Window Size
     Challenge
     Firmware Revision
     Vendor Name

 |---------SCCRP-------->|
  Required AVPs:
     Message Type
     Protocol Version
     Framing Capabilities
     Host Name
     Assigned Tunnel ID
  Optional AVPs:
     Firmware Revision
     Vendor Name
     Receive Window Size
     Challenge
     Challenge Response

 |<--------SCCCN---------|
  Required AVPs:
     Message Type
  Optional AVPs:
     Challenge Response]]>
</artwork>
<postamble></postamble>
</figure>

                         <t>
In L2TPv2, generally, the tunnel between an LAC and LNS may carry the data 
of multiple users.  Each of these users is represented by an L2TPv2 session
within the tunnel.
In the Softwire environment, the tunnel carries the information of a single
user.  Consequently, there is only one L2TPv2 session per tunnel.
<xref target="Fig_SW_Est_L2TP_Session"/>
describes the messages exchanged and the AVPs used to establish 
a session between an SI (LAC) and an SC (LNS).  The messages and AVPs described
here are only a subset of those defined in
<xref target="RFC2661"/>.  This is because Softwires use only a subset of 
the L2TPv2 functionality.

The subset of L2TP Call Management (i.e., Session Management)
AVPs that is applicable to Softwires is 
grouped into Required AVPs and Optional AVPs 
on a per-control-message basis (see
<xref target="Fig_SW_Est_L2TP_Session"/>).

For each control message, Required AVPs include all the
"MUST be present" AVPs from <xref target="RFC2661"/> for that control message,
and Optional AVPs include the "MAY be present" AVPs from <xref target="RFC2661"/>
that are used in the Softwire context on that control message.

Note that in the Softwire environment, the SI 
always initiates the session.
An L2TPv2 session setup for a Softwire uses only the incoming call model.
No outgoing or analog calls (sessions) are permitted.  
L2TPv2 AVPs SHOULD NOT be hidden.
                         </t>

<figure align="center" anchor="Fig_SW_Est_L2TP_Session" title="Session Establishment">
<preamble></preamble>
<artwork>
<![CDATA[SC                      SI
 |<--------ICRQ---------|
  Required AVPs:
     Message Type
     Assigned Session ID
     Call Serial Number

 |---------ICRP-------->|
  Required AVPs:
     Message Type
     Assigned Session ID

 |<--------ICCN---------|
  Required AVPs:
     Message Type
     (Tx) Connect Speed
     Framing Type]]>
</artwork>
<postamble></postamble>
</figure>

                         <t>
 The following sub-sections 
(<xref target='Establishment.1.1.1' format='counter' />
through
<xref target='Establishment.1.1.3' format='counter' />)
describe in more
 detail the Control Connection and Session establishment AVPs (see
 message flows in Figures
<xref target="Fig_SW_Est_L2TP_CC" format='counter' />
and
<xref target="Fig_SW_Est_L2TP_Session" format='counter' />,
respectively) that are required, optional
 and not relevant for the L2TPv2 Tunnel establishment of a Softwire.
Specific L2TPv2 protocol messages and flows that are not
explicitly described in these sections are handled as defined in
<xref target="RFC2661"/>.
                         </t>
                         <t>
The mechanism for hiding AVP Attribute values is used, as  
described in Section 4.3 of <xref target="RFC2661"/>,
to hide sensitive control message data  
such as usernames, user passwords, or IDs, instead of sending the AVP
contents in the clear.
Since AVPs used in L2TP messages  
for the Softwire establishment do not transport such sensitive data,  
L2TPv2 AVPs SHOULD NOT be hidden.
                         </t>

                    <section anchor="Establishment.1.1.1"
                     title="AVPs Required for Softwires">
                         <t>
 This section prescribes specific values for AVPs that are required
 (by <xref target="RFC2661"/>) to be present in one or more of the messages
 used 
 for the Softwire establishment, as they are used in the
 Softwire context.
It combines all the Required AVPs from all the control messages in
<xref target='Establishment.1.1' />, and provides Softwire-specific use guidance.
                         </t>
                            <t>
Host Name AVP
<list hangIndent="3" style="empty"><t>
 This AVP is required in SCCRQ and SCCRP messages.
 This AVP MAY be used to authenticate users, in which case it would contain
 a user identification.  If this AVP is not used to authenticate users, it may be used
 for logging purposes.  
</t></list>
                            </t>
                            <t>
Framing Capabilities AVP
<list hangIndent="3" style="empty"><t>
  Both 
  the synchronous (S) and asynchronous (A) bits SHOULD be set to 1. This AVP
  SHOULD be ignored by the receiver.
</t></list>
                            </t>
                            <t>
Framing Type AVP
<list hangIndent="3" style="empty"><t>
  The synchronous bit SHOULD be set to 1 and the 
  asynchronous bit to 0. This AVP
  SHOULD be ignored by the receiver.
</t></list>
                            </t>
                            <t>
(Tx) Connect Speed AVP
<list hangIndent="3" style="empty"><t>
  (Tx) Connect Speed is a required AVP but is not meaningful in the Softwire
  context.  Its value SHOULD be set to 0 and ignored by the receiver.
</t></list>
                            </t>
                            <t>
Message Type AVP,
Protocol Version AVP,
Assigned Tunnel ID AVP,
Call Serial Number AVP, and
Assigned Session ID AVP
<list hangIndent="3" style="empty"><t>
  As defined in <xref target="RFC2661"/>.
</t></list>
                            </t>
                    </section> <!-- EO Establishment.1.1.1 -->

                    <section anchor="Establishment.1.1.2"
                     title="AVPs Optional for Softwires">
                            <t>
 This section prescribes specific values for AVPs that are Optional 
(not required by
 <xref target="RFC2661"/>) but used in the Softwire context.
It combines all the Optional AVPs from all the control messages in
<xref target='Establishment.1.1' />, and provides Softwire-specific use guidance.
                            </t>

                            <t>
Challenge AVP and Challenge Response AVP
                            </t>
                           <t>
<list hangIndent="3" style="empty">
<t>
 These AVPs are not required, but are necessary to implement tunnel 
 authentication.  Since tunnel authentication happens at the beginning
 of L2TPv2 tunnel creation, it can be helpful in preventing denial-of-service (DoS) attacks.
 See Section 5.1.1 of <xref target="RFC2661"/>.
</t>
<t>
The usage of these AVPs in L2TP messages is OPTIONAL, but SHOULD be implemented
in the SC.
</t>
</list>
                            </t>
                            <t>
Receive Window Size AVP,
Firmware Revision AVP, and
Vendor Name AVP
<list hangIndent="3" style="empty"><t>
  As defined in <xref target="RFC2661"/>.
</t></list>

                            </t>

                    </section> <!-- EO Establishment.1.1.2 -->

                    <section anchor="Establishment.1.1.3"
                     title="AVPs Not Relevant for Softwires">
                            <t>
 L2TPv2 specifies numerous AVPs that, while allowed for a given
 message, are irrelevant to Softwires. They can be irrelevant to
 Softwires because they do not apply to the Softwire establishment
 flow (e.g., they are only used in the Outgoing Call establishment
 message exchange, while Softwires only use the Incoming Call
 message flow), or because they are Optional AVPs that are not used.

L2TPv2 AVPs that are relevant to Softwires were covered in Sections
<xref target="Establishment.1.1" format="counter" />,
<xref target="Establishment.1.1.1" format="counter" />, and
<xref target="Establishment.1.1.2" format="counter" />.
Softwire implementations SHOULD NOT send
 AVPs that are not relevant to Softwires.
However, they SHOULD ignore them when they are received.
 This will simplify the creation of Softwire applications
that build upon
 existing L2TPv2 implementations.
                            </t>
                    </section> <!-- EO Establishment.1.1.3 -->


                 </section> <!-- EO Establishment.1.1 -->

                 <section anchor="Establishment.1.2"
                  title="Tunnel Maintenance">

                         <t>
Periodically, the SI/SC MUST transmit a message to the peer to
detect tunnel or peer failure and
maintain
NAT/NAPT contexts.  The L2TPv2 HELLO message 
provides a simple, low-overhead method of doing this.
                         </t>
                         <t>
The default values specified in <xref target="RFC2661"/> for L2TPv2
HELLO messages
could result in a dead-end detection time of 83 seconds.
Although these retransmission timers and counters SHOULD be configurable
(see Section 5.8 of <xref target="RFC2661"/>), these values
may not be adapted for all situations, where a quicker dead-end detection 
is required, or where NAT/NAPT context needs to be refreshed more frequently.
In such cases, the SI/SC MAY use, in combination with L2TPv2 HELLO,
LCP ECHO messages (Echo-Request and Echo-Reply codes)
described in <xref target="RFC1661"/>.
When used,
LCP ECHO messages SHOULD have a re-emission timer lower than the value
for L2TPv2 HELLO messages.
The default value recommended in Section 6.5 of <xref target="RFC2661"/>
for the HELLO message retransmission interval is 60 seconds.
When used, a set of suggested values (included here only
for guidance) for the LCP ECHO
message request interval is a default of 30 seconds, a minimum of
10 seconds, and a maximum of the lesser of the configured L2TPv2 HELLO
retransmission interval and 60 seconds.
                         </t>


                 </section> <!-- EO Establishment.1.2 -->

                 <section anchor="Establishment.1.3"
                  title="Tunnel Teardown">
                         <t>
Either the SI or SC can tear down the session and tunnel. 
This is done as specified in Section 5.7 of
<xref target="RFC2661"/>,
by sending a StopCCN control message.  There is no action
specific to Softwires in this case.
                         </t>
                 </section> <!-- EO Establishment.1.3 -->

                 <section anchor="Establishment.1.4"
                  title="Additional L2TPv2 Considerations">
                         <t>
In the Softwire "Hub and Spoke" framework, L2TPv2 is layered
on top of UDP, as part of an IP-in-IP tunnel; Section 8.1 of 
<xref target="RFC2661"/> describes L2TP over UDP/IP.
Therefore, the UDP guidelines specified in 
<xref target="RFC5405"/>
apply, as they pertain to the
UDP tunneling scenarios carrying IP-based traffic.

Section 3.1.3 of
<xref target="RFC5405"/>
specifies that for this case, specific congestion control mechanisms
 for the tunnel are not necessary.
Additionally, Section 3.2 of
<xref target="RFC5405"/> provides message size guidelines for the
encapsulating (outer) datagrams, including the recommendation
to implement Path MTU Discovery (PMTUD).
                         </t>
                 </section> <!-- EO Establishment.1.4 -->



              </section> <!-- EO Establishment.1 -->


              <section anchor="Establishment.2"
               title="PPP Connection">
			<t>
This section describes the PPP negotiations between the SI and SC
in the Softwire context.
			</t>

              <section anchor="Establishment.2.1"
               title="MTU">
                      <t>
The MTU of the PPP link 
presented to the SPH SHOULD be the link MTU minus the size of the IP,
UDP, L2TPv2, and PPP headers together. On an IPv4 link with an MTU equal
to 1500 bytes, this could typically mean a PPP MTU of 1460 bytes. 
When the link is managed by IPsec, this MTU SHOULD be lowered to take into
account the ESP encapsulation
(see <xref target="SW-SEC"/>).
The value for the MTU may also vary according
to the size of the L2TP header, as defined by the
leading bits of the L2TP message header (see <xref target="RFC2661"/>).
Additionally, see <xref target="RFC4623"/> for a detailed
discussion of fragmentation issues.

                      </t>
              </section> <!-- EO Establishment.2.1 -->

              <section anchor="Establishment.2.2"
               title="LCP">
                     <t>
 Once the L2TPv2 session is established, the SI and SC initiate the PPP
 connection by negotiating LCP as described in <xref target="RFC1661"/>.  
 The Address-and-Control-Field-Compression configuration option (ACFC)
 <xref target="RFC1661"/> MAY be rejected.
                      </t>
              </section> <!-- EO Establishment.2.2 -->

              <section anchor="Establishment.2.3"
               title="Authentication">
                     <t>
After completing LCP negotiation, the SI and SC MAY optionally 
perform authentication.  If authentication is chosen, Challenge Handshake Authentication Protocol (CHAP) 
<xref target="RFC1994"/>
authentication MUST be supported by both the Softwire Initiator and 
Softwire Concentrator. Other authentication methods such as 
Microsoft CHAP version 1 (MS-CHAPv1) <xref target="RFC2433"/>
and Extensible Authentication Protocol (EAP) <xref target="RFC3748"/> MAY be supported.
                      </t>
<t>
A detailed discussion of Softwire security is contained in
<xref target="SW-SEC"/>.
</t>
              </section> <!-- EO Establishment.2.3 -->

              <section anchor="Establishment.2.4"
               title="IPCP">
<t>
The only Network Control Protocol (NCP) negotiated in the Softwire context
is IPV6CP (see <xref target="Establishment.2.4.1"/>)
for IPv6 as SPH, and IPCP (see <xref target="Establishment.2.4.2"/>)
for IPv4 as SPH.
</t>

              <section anchor="Establishment.2.4.1"
               title="IPV6CP">
                      <t>
In the IPv6-over-IPv4 scenarios (see <xref target="Deployment.1"/>),
after the
optional authentication phase, the Softwire Initiator MUST negotiate
IPV6CP as defined in <xref target="RFC5072"/>.  IPV6CP provides a way 
to negotiate a unique 64-bit Interface-Identifier to be used for the address
	  autoconfiguration at the local end of the link.
</t>
              </section> <!-- EO Establishment.2.4.1 -->
              <section anchor="Establishment.2.4.2"
               title="IPv4CP">
                      <t>
In the IPv4-over-IPv6 scenarios (see <xref target="Deployment.2"/>),
a Softwire Initiator MUST negotiate IPCP 
<xref target="RFC1332"/>.  The SI uses IPCP to obtain an IPv4 address from the
SC.  IPCP MAY also be used to obtain DNS information as described in 
<xref target="RFC1877"/>.
                      </t>
              </section> <!-- EO Establishment.2.4.2 -->

              </section> <!-- EO Establishment.2.4 -->


              </section> <!-- EO Establishment.2 -->


              <section anchor="Establishment.3"
               title="Global IPv6 Address Assignment to Endpoints">
<t>


In several scenarios defined in <xref target="Deployment.1"/>, global IPv6
addresses are expected to be allocated to Softwire endpoints
(in addition to
   the Link-Local addresses autoconfigured using the IPV6CP negotiated
   interface identifier).
   The Softwire Initiator assigns global IPv6
   addresses using the IPV6CP negotiated interface identifier
   and using Stateless Address Autoconfiguration <xref target="RFC4862"/>,
   and/or using
   Privacy Extensions for Stateless Address Autoconfiguration
   <xref target="RFC4941"/>,
   (as described in Section 5 of <xref target="RFC5072"/>),
   and/or using DHCPv6 <xref target="RFC3315"/>.

</t>
                      <t>
The Softwire Initiator of an IPv6 Softwire MUST send a Router Solicitation
message to the Softwire Concentrator after IPV6CP is completed. The 
Softwire Concentrator MUST answer with a Router Advertisement. This 
message MUST contain
the global IPv6 prefix of the PPP link if Neighbor Discovery is used
to configure addresses of Softwire endpoints.
                      </t>
                      <t>
If DHCPv6 is available for address delegation, the M bits of the Router
Advertisement SHOULD be set.
The Softwire Initiator MUST then send a DHCPv6 Request to configure the
address of the Softwire endpoint.
                      </t>
                      <t>
Duplicate Address Detection (<xref target="RFC4861"/>)
MUST be performed on the Softwire in both cases.
                      </t>
              </section> <!-- EO Establishment.3 -->

              <section anchor="Establishment.4"
               title="DHCP">
                      <t>
The Softwire Initiator MAY use DHCP to get additional information such as
delegated prefix and DNS servers. 
                      </t>

              <section anchor="Establishment.4.1"
               title="DHCPv6">
                      <t>
In the scenarios in <xref target="Deployment.1"/>,
if the SI supports DHCPv6, it SHOULD
send a Solicit message to verify if more information is available.
                      </t>

                      <t>
If an SI establishing an IPv6 Softwire acts as a router 
(i.e., in the scenarios in Sections <xref target="Deployment.1.2" format="counter"/>
and <xref target="Deployment.1.4" format="counter"/>)
it MUST include the Identity Association for Prefix Delegation (IA_PD) option 
<xref target="RFC3633"/>
in the DHCPv6 Solicit message <xref target="RFC3315"/>
in order to request an IPv6 prefix. 
                      </t>
                      <t>
When delegating an IPv6 prefix to the SI
by returning a DHCPv6 Advertise message with the IA_PD and IP_PD Prefix
options <xref target="RFC3633"/>,
the SC SHOULD inject a route for this prefix 
in the IPv6 routing table in order to forward the traffic to the relevant Softwire.

                      </t>
                      <t>
Configuration of DNS MUST be done as specified in <xref target="RFC3646"/>
and transmitted according to <xref target="RFC3315"/>
and <xref target="RFC3736"/>.
In general, all DHCPv6 options MUST be transmitted according to
<xref target="RFC3315"/>
and <xref target="RFC3736"/>.

                      </t>
              </section> <!-- EO Establishment.4.1 -->

              <section anchor="Establishment.4.2"
               title="DHCPv4">
                      <t>
An SI establishing an IPv4 Softwire MAY send a DHCP request containing 
the Subnet Allocation option 
<xref target="SUBNET-ALL"/>.
This practice is not common, but it may be used to connect IPv4
subnets using Softwires, as defined in Sections <xref target="Deployment.2.2" format="counter"/>
and <xref target="Deployment.2.4" format="counter"/>.

                      </t>
                      <t>
One Subnet-Request suboption MUST be configured with the 'h' bit set 
to '1', as the SI is expected to perform the DHCP server function. 
The 'i' bit of the Subnet-Request suboption SHOULD be set to '0' the 
first time a prefix is requested and to '1' on subsequent requests, if a 
prefix has been allocated. The Prefix length suboption SHOULD be 0 by 
default. If the SI is configured to support only specific prefix lengths, 
it SHOULD specify the longest (smallest) prefix length it supports. 


                      </t>
                      <t>
If the SI was previously assigned a prefix from that same SC, it SHOULD 
include the Subnet-Information suboption with the prefix it was previously 
assigned. The 'c' and 's' bits of the suboption SHOULD be set to '0'. 
                      </t>
                      <t>
In the scenarios in <xref target="Deployment.2"/>,
when delegating an IPv4 prefix to the SI, the SC SHOULD inject a route for this prefix
in the IPv4 routing table in order to forward the traffic to the relevant Softwire.
                      </t>

              </section> <!-- EO Establishment.4.2 -->


              </section> <!-- EO Establishment.4 -->

              </section> <!-- EO Establishment -->


		<section anchor="Provisioning"
		title="Considerations about the Address Provisioning Model">
				                        <t>
This section describes how a Softwire Concentrator may manage delegated
addresses for Softwire endpoints and for subnets behind the Softwire
Initiator. One common practice is to aggregate endpoints' addresses and
delegated prefixes into one prefix routed to the SC. The main benefit is
to ease the routing scheme by isolating on the SC succeeding route
injections (when delegating new prefixes for SI).
										</t>

	<section anchor="Provisioning.1"
	title="Softwire Endpoints' Addresses">
		<t>
		</t>

		<section anchor="Provisioning.1.1"
		title="IPv6">
		<t>
A Softwire Concentrator should provide globally routable addresses 
to Softwire endpoints. Other types of addresses such as Unique
Local Addresses (ULAs)
<xref target="RFC4193"/>
may be used to address Softwire endpoints in a private network
with no global connectivity.
A single /64 should be assigned to the Softwire to address both Softwire
endpoints.
		</t>
		<t>
Global addresses or ULAs must be assigned to endpoints when the scenario
"Host CPE as Softwire Initiator"
(described in <xref target="Deployment.1.1"/>) is considered
to be deployed. For other scenarios, link-local
addresses may also be used.
		</t>
				
		</section> <!-- EO Provisioning.1.1 -->

		<section anchor="Provisioning.1.2"
		title="IPv4">
		<t>
A Softwire Concentrator may provide either globally routable or private 
IPv4 addresses. When using IPv4 private addresses 
<xref target="RFC1918"/> on the endpoints,
it is not recommended to delegate an IPv4 private prefix to the SI,
as it can lead to a nested-NAT situation.
		</t>

		<t>
The endpoints of the PPP link use host addresses (i.e., /32),
negotiated using IPCP.
		</t>
		</section> <!-- EO Provisioning.1.2 -->


		</section> <!-- EO Provisioning.1 -->

		<section anchor="Provisioning.2"
		title="Delegated Prefixes">
		<t>
		</t>

		<section anchor="Provisioning.2.1"
		title="IPv6 Prefixes">
		<t>
Delegated IPv6 prefixes should
be of global scope if the IPv6 addresses assigned to endpoints are global.
Using ULAs is not recommended when the subnet is connected to the global IPv6 Internet.
When using IPv6 ULAs on the endpoints, the delegated IPv6 prefix may be either of global or ULA scope.
		</t>
		<t>
Delegated IPv6 prefixes are between /48 and /64 in length. 
When an SI receives a prefix shorter than 64, it can assign different /64
prefixes to each of its interfaces.
An SI receiving a single /64 is expected to perform bridging if more than
one interface
is available (e.g., wired and wireless). 
		</t>
		</section> <!-- EO Provisioning.2.1 -->

		<section anchor="Provisioning.2.2"
		title="IPv4 Prefixes">
		<t>

Delegated IPv4 prefixes should be routable within the address space  
used by assigned IPv4 addresses. Delegate non-routable IPv4 prefixes  
(i.e., private IPv4 prefix over public IPv4 addresses or another class  
of private IPv4 addresses) is not recommended as a practice for provisioning and address translation should be considered in these cases.
The prefix length is between /8 and /30.
		</t>
		</section> <!-- EO Provisioning.2.2 -->

		</section> <!-- EO Provisioning.2 -->

		<section anchor="Provisioning.3"
		title="Possible Address Provisioning Scenarios">

		<t>
This section summarizes the different scenarios for address provisioning
with the considerations given in the previous sections.
		</t>
		
		<section anchor="Provisioning.3.1"
		title="Scenarios for IPv6">
<t>
This table describes the possible combination of IPv6 address scope for endpoints and delegated prefixes.
</t>

<?rfc compact="no"?>
  <texttable anchor='Table1' title='Scenarios for IPv6' style='full'>
      <preamble/>
      <ttcol align='left'>Endpoint IPv6 Address</ttcol>
      <ttcol align='left'>Delegated Global IPv6 Prefix</ttcol>
      <ttcol align='left'>Delegated ULA IPv6 Prefix</ttcol>

      <c>Link Local</c>
      <c>Possible</c>
      <c>Possible</c>

      <c>ULA</c>
      <c>Possible</c>
      <c>Possible</c>

      <c>Global</c>
      <c>Possible</c>
      <c>Possible, but Not Recommended</c>

      <postamble></postamble>
  </texttable>
<?rfc compact="yes"?>

		</section> <!-- EO Provisioning.3.1 -->

		<section anchor="Provisioning.3.2"
		title="Scenarios for IPv4">

<t>
This table describes the possible combination of IPv4 address scope for endpoints and delegated prefixes.
</t>

<?rfc compact="no"?>
  <texttable anchor='Table2' title='Scenarios for IPv4' style='full'>
      <preamble/>
      <ttcol align='left'>Endpoint IPv4 Address</ttcol>
      <ttcol align='left'>Delegated Public IPv4 Prefix</ttcol>
      <ttcol align='left'>Delegated Private IPv4 Prefix</ttcol>

      <c>Private IPv4</c>
      <c>Possible</c>
      <c>Possible, but Not Recommended when using NAT (cf. <xref target="Provisioning.1.2"/>)</c>

      <c>Public IPv4</c>
      <c>Possible</c>
      <c>Possible, but NAT usage is recommended (cf. <xref target="Provisioning.2.2"/>)</c>

      <postamble></postamble>
  </texttable>
<?rfc compact="yes"?>

		</section> <!-- EO Provisioning.3.2 -->

		</section> <!-- EO Provisioning.3 -->

		</section> <!-- EO Provisioning -->


		<section anchor="Stability"
		title="Considerations about Address Stability">

		<t>
A Softwire can provide stable addresses even if the underlying addressing
scheme changes, by opposition to automatic tunneling. A Softwire 
Concentrator should always provide the same address and prefix to a 
reconnecting user. However, if the goal of the Softwire service is to 
provide a temporary address for a roaming user, it may be provisioned to 
provide only a temporary address. 
		</t>
		<t>
The address and prefix are expected to change when reconnecting to a 
different Softwire Concentrator. However, an organization providing a 
Softwire service may provide the same address and prefix across different
Softwire Concentrators at the cost of a more fragmented routing table. 
The routing fragmentation issue may be limited if the prefixes are 
aggregated in a location topologically close to the SC. This would be 
the case, for example, if several SCs are put in parallel for load-balancing
purpose. 
		</t>

		</section> <!-- EO Stability -->


              <section anchor="AAA"
               title="Considerations about RADIUS Integration">
                      <t>
The Softwire Concentrator is expected to act as a client to a AAA server, 
for example, a RADIUS server. During the PPP authentication phase, the RADIUS 
server may return additional information in the form of attributes in the 
Access-Accept message. 
                      </t>
                      <t>
The Softwire Concentrator may include the Tunnel-Type and 
Tunnel-Medium-Type attributes 
<xref target="RFC2868"/>
in the Access-Request messages to provide a hint of the type of Softwire
being configured. 
                      </t>
              <section anchor="AAA.1"
               title="Softwire Endpoints">

              <section anchor="AAA.1.1"
               title="IPv6 Softwires">
                      <t>
If the RADIUS server includes a Framed-Interface-Id attribute 
<xref target="RFC3162"/>,
the Softwire Concentrator must send it to the Softwire Initiator in the 
Interface-Identifier field of its IPV6CP Configuration Request message. 
                      </t>
                      <t>
If the Framed-IPv6-Prefix attribute
<xref target="RFC3162"/> is included,
that prefix must be used in the router advertisements sent to the SI. 
If Framed-IPv6-Prefix is not present but Framed-IPv6-Pool is, the SC 
must choose a prefix from that pool to send RAs. 
                      </t>
              </section> <!-- EO AAA.1.1 -->

              <section anchor="AAA.1.2"
               title="IPv4 Softwires">
                      <t>
 If the Framed-IP-Address attribute
 <xref target="RFC2865"/> is present,
 the Softwire Concentrator must provide that address to the Softwire
 Initiator during IPCP address negotiation.  That is, when the Softwire 
 Initiator requests an IP address from the Softwire Concentrator, the
 address provided should be the Framed-IP-Address.
			</t>
              </section> <!-- EO AAA.1.2 -->


              </section> <!-- EO AAA.1 -->

              <section anchor="AAA.2"
               title="Delegated Prefixes">
                      <t>
                      </t>

              <section anchor="AAA.2.1"
               title="IPv6 Prefixes">
                      <t>
If the attribute Delegated-IPv6-Prefix 
<xref target="RFC4818"/>
is present in the RADIUS Access-Accept message, it must be used by the 
Softwire Concentrator for the delegation of the IPv6 prefix. Since the 
prefix delegation is performed by DHCPv6 and the attribute is linked to 
a username, the SC must associate the
DHCP Unique Identifier (DUID) of a DHCPv6 request to the tunnel 
it came from and its user. 
                      </t>
<t>
Interaction between RADIUS, PPP, and DHCPv6 server may follow the mechanism 
proposed in 
<xref target="RELAY-RAD"/>. 
In this case,
during the Softwire authentication phase, PPP collects the RADIUS attributes 
for the user such as Delegated-IPv6-Prefix. A specific DHCPv6 relay is assigned to the
Softwire. The DHCPv6 relay fills in these attributes in the Relay agent
RADIUS Attribute Option (RRAO) DHCPv6 option, before forwarding
the DHCPv6 requests to the DHCPv6 server.
</t>
              </section> <!-- EO AAA.2.1 -->

              <section anchor="AAA.2.2"
               title="IPv4 Prefixes">
                      <t>
RADIUS does not define an attribute for the delegated IPv4 Prefix.
Attributes indicating an IPv4 prefix and its length (for instance
the combination of the Framed-IP-Address and Framed-IP-Netmask attributes
 <xref target="RFC2865"/>) may be used by the Softwire Concentrator
 to delegate an IPv4 prefix to the Softwire Initiator.
The  
Softwire Concentrator must add a   corresponding route with the  
Softwire Initiator as next-hop.
                      </t>
                      <t>
As this practice had been used,
the inclusion of the Framed-IP-Netmask attribute 
along with the Framed-IP-Address attribute tells
the Softwire Concentrator to delegate an IPv4 prefix to the Softwire Initiator
(e.g., in the IPv4-over-IPv6 scenarios where the Softwire Initiator
is a router, see Sections <xref target="Deployment.2.2" format="counter"/>
and
<xref target="Deployment.2.4" format="counter" />),
as the SC should forward
packets destined to any IPv4 address in the prefix
to the SI.
                      </t>
              </section> <!-- EO AAA.2.2 -->


              </section> <!-- EO AAA.2 -->

              </section> <!-- EO AAA -->




              <section anchor="Maintenance"
               title="Considerations for Maintenance and Statistics">
                      <t>
Existing protocol mechanics for conveying adjunct 
or accessory information
for logging purposes, including L2TPv2 and RADIUS methods, can 
include informational text that the behavior is according to
the Softwire "Hub and Spoke" framework (following
the implementation details specified
in this document).
                      </t>

              <section anchor="Maintenance.1"
               title="RADIUS Accounting">
                      <t>
RADIUS Accounting for L2TP and PPP are documented 
(see <xref target="Standardization.3"/>). 
                      </t>
<t>
When deploying Softwire solutions, operators may experience
difficulties to differentiate the address family of the traffic
reported in accounting information from RADIUS. This problem
and some potential solutions are described in
<xref target="SW-ACCT"/>.
</t>
              </section> <!-- EO Maintenance.1 -->

              <section anchor="Maintenance.2"
               title="MIBs">
                      <t>
MIB support for L2TPv2 and PPP are documented 
(see <xref target="Standardization.4"/>).
Also, see <xref target="RFC4293"/>.

                      </t>
              </section> <!-- EO Maintenance.2 -->


              </section> <!-- EO Maintenance -->



		<section anchor="Security" title="Security Considerations">

<t>
 One design goal of the "Hub and Spoke" problem is to very strongly
 consider the reuse of already deployed protocols (see <xref target="RFC4925"/>).
 Another design goal is a solution with very high scaling properties.
 L2TPv2 <xref target="RFC2661"/> is the phase 1 protocol used in the Softwire "Hub
 and Spoke" solution space, and the L2TPv2 security considerations
 apply to this document (see Section 9 of <xref target="RFC2661"/>).
</t>
                      <t>
The L2TPv2 Softwire solution adds the following considerations:
</t>

<t><list style="symbols">
  <t>L2TP Tunnel Authentication (see Sections 5.1.1 and 9.1
  of <xref target="RFC2661"/>) provides
  authentication at tunnel setup.  It may be used to limit DoS attacks
  by authenticating the tunnel before L2TP and PPP resources
  are allocated.</t>
  <t>
In a Softwire environment, L2TPv2 AVPs do not transport sensitive data,
and thus the L2TPv2 AVP hiding mechanism is not used
(see <xref target='Establishment.1.1' />).
  </t>
  <t>PPP CHAP <xref target="RFC1994"/> provides basic user 
  authentication.  
Other authentication protocols may additionally be supported
(see <xref target='Establishment.2.3' />).
  </t>
</list></t>

                      <t>
 L2TPv2 can also be secured with IPsec to provide privacy,
 integrity, and replay protection. Currently, there are 
 two different solutions for security L2TPv2 with IPsec:
</t>

<t><list style="symbols">
  <t>
    Securing L2TPv2 using IPsec "version 2" (IKEv1)


is
    specified in <xref target="RFC3193" />, <xref target="RFC3947" />,
    and <xref target="RFC3948" />. When L2TPv2 is used in the
    Softwire context, the voluntary tunneling model applies.
    <xref target="RFC3193" /> describes the interaction between IPsec and L2TPv2,
    and is deployed.  <xref target="RFC3193" /> MUST be supported, given that
    deployed technology must be very strongly considered <xref target="RFC4925" />
    for this 'time-to-market' solution.
  </t>
  <t>
    <xref target="SW-SEC" /> also specifies a new
    (incompatible) solution for securing L2TPv2 with IPsec "version
    3" (IKEv2).


Section 3.5 of 
    <xref target="SW-SEC" /> describes the
    advantages of using IKEv2, and this solution needs to be
    considered for future phases.
  </t>
</list></t>

<t>
Additional discussion of Softwire security is contained in
<xref target="SW-SEC"/>.
</t>


		</section> <!-- EO Security -->


              <section anchor="Acknowledgements" title="Acknowledgements">
                      <t>
The authors would like to acknowledge the following contributors who
provided helpful input on this document:
Florent Parent, Jordi Palet Martinez, Ole Troan, Shin Miyakawa, Carl
Williams, Mark Townsley, Francis Dupont, Ralph Droms, Hemant Singh,
and Alain Durand.
                      </t>
                      <t>
The authors would also like to acknowledge the participants in the
Softwires interim meetings held in Hong Kong, China, and Barcelona, Spain.
The minutes for the interim meeting at the China University - Hong Kong
(February 23-24, 2006) are at
&lt;http://www.ietf.org/proceedings/06mar/isoftwire.html&gt;.
The minutes for the interim meeting at Polytechnic University of Catalonia -
Barcelona (September 14-15, 2006) are reachable at
&lt;http://www.ietf.org/proceedings/06nov/isoftwire.html&gt;.
The Softwires auxiliary page at 
&lt;http://bgp.nu/~dward/softwires/&gt; contains additional
meeting information.
</t>
                      <t>
During and after the IETF Last Call,
useful comments and discussion
were provided by 
Jari Arkko, 
David Black, Lars Eggert, Pasi Eronen, and Dan Romascanu.
                      </t>
              </section>


	</middle>
	<back>
		<references title="Normative References">
                      <?rfc include="reference.RFC.2119" ?>
                      <?rfc include="reference.RFC.2661" ?>
			<?rfc include="reference.RFC.3193" ?>
			<?rfc include="reference.RFC.3947" ?>
			<?rfc include="reference.RFC.3948" ?>
			<?rfc include="reference.RFC.2865" ?>
			<?rfc include="reference.RFC.3371" ?>
			<?rfc include="reference.RFC.5072" ?>
			<?rfc include="reference.RFC.1918" ?>


                      <?rfc include="reference.RFC.3315" ?>
                      <?rfc include="reference.RFC.3736" ?>
                      <?rfc include="reference.RFC.3633" ?>
                      <?rfc include="reference.RFC.1332" ?>
                      <?rfc include="reference.RFC.4862" ?>
                      <?rfc include="reference.RFC.3162" ?>
                      <?rfc include="reference.RFC.1661" ?>
                      <?rfc include="reference.RFC.1994" ?>
                      <?rfc include="reference.RFC.4818" ?>


		</references>

		<references title="Informative References">		
			<?rfc include="reference.RFC.3931" ?>
			<?rfc include="reference.RFC.1877" ?>
			<?rfc include="reference.RFC.2433" ?>
			<?rfc include="reference.RFC.2867" ?>
			<?rfc include="reference.RFC.2868" ?>
                      <?rfc include="reference.RFC.3748" ?>

<!--<?rfc include="reference.I-D.stevant-softwire-accounting" ?> -->
<reference anchor='SW-ACCT'>
<front>
<title>Accounting on Softwires</title>

<author initials='B' surname='Stevant' fullname='Bruno Stevant'>
  <organization />
</author>

<author initials='L' surname='Toutain' fullname='Laurent Toutain'>
  <organization />
</author>

<author initials='F' surname='Dupont' fullname='Francis Dupont'>
  <organization />
</author>

<author initials='D' surname='Binet' fullname='David Binet'>
  <organization />
</author>

<date month='April' day='20' year='2009' />

</front>

<seriesInfo name='Work in' value='Progress' />

</reference>



<!--<?rfc include="reference.I-D.ietf-softwire-security-requirements" ?> -->
<reference anchor='SW-SEC'>
<front>
<title>Softwire Security Analysis and Requirements</title>

<author initials='S' surname='Yamamoto' fullname='Shu Yamamoto'>
  <organization />
</author>

<author initials='C' surname='Williams' fullname='Carl Williams'>
  <organization />
</author>

<author initials='F' surname='Parent' fullname='Florent Parent'>
  <organization />
</author>

<author initials='H' surname='Yokota' fullname='Hidetoshi Yokota'>
  <organization />
</author>

<date month='May' day='22' year='2009' />

<abstract><t>This document describes the security guidelines for the softwire "Hubs and Spokes" and "Mesh" solutions.  Together with the discussion of the softwire deployment scenarios, the vulnerability to the security attacks is analyzed to provide the security protection mechanism such as authentication, integrity and confidentiality to the softwire control and data packets.</t></abstract>

</front>

<seriesInfo name='Work in' value='Progress' />

</reference>

<!--<?rfc include="reference.I-D.ietf-dhc-subnet-alloc" ?> -->
<reference anchor='SUBNET-ALL'>
<front>
<title>Subnet Allocation Option</title>

<author initials='R' surname='Johnson' fullname='Richard Johnson'>
  <organization />
</author>

<author initials='J' surname='Kumarasamy' fullname='Jay Kumarasamy'>
  <organization />
</author>

<author initials='K' surname='Kinnear' fullname='Kim Kinnear'>
  <organization />
</author>

<author initials='M' surname='Stapp' fullname='Mark Stapp'>
  <organization />
</author>

<date month='March' day='11' year='2009' />

</front>

<seriesInfo name='Work in' value='Progress' />

</reference>
<!--<?rfc include="reference.I-D.ietf-dhc-v6-relay-radius" ?> -->

<reference anchor='RELAY-RAD'>
<front>
<title>DHCPv6 Relay agent RADIUS Attribute Option</title>

<author initials='W' surname='Lau' fullname='Wing Lau'>
  <organization />
</author>

<date month='February' day='6' year='2006' />

<abstract><t>This document introduces the capabilities of the DHCPv4 Relay Agent Information Option in RFC 3046 and the corresponding RADIUS- Attributes Sub-option to DHCPv6. In particular, the document describes a new DHCPv6 option called the Relay agent RADIUS Attributes Option (RRAO) which extends the set of DHCPv6 options as defined in RFC 3315 and 3376. Following its DHCPv4 counterpart, the new option is inserted by the DHCPv6 relay agent when forwarding client-originated DHCPv6 packets to a DHCPv6 server. Servers recognizing the RRAO may use the information to implement IP address or other parameter assignment policies. The DHCP Server echoes the option back verbatim to the relay agent in server-to-client replies, and the relay agent strips the option before forwarding the reply to the client.</t></abstract>

</front>

<seriesInfo name='Work in' value='Progress' />

</reference>


                      <?rfc include="reference.RFC.4193" ?>
                      <?rfc include="reference.RFC.4293" ?>
			<?rfc include="reference.RFC.4925" ?>
                      <?rfc include="reference.RFC.3022" ?>
                      <?rfc include="reference.RFC.4087" ?>
                      <?rfc include="reference.RFC.1471" ?>
                      <?rfc include="reference.RFC.1473" ?>
                      <?rfc include="reference.RFC.4861" ?>
                      <?rfc include="reference.RFC.3646" ?>
                      <?rfc include="reference.RFC.4623" ?>
                      <?rfc include="reference.RFC.2131" ?>
                      <?rfc include="reference.RFC.2132" ?>
                      <?rfc include="reference.RFC.4941" ?>
                      <?rfc include="reference.RFC.5405" ?>
                      <?rfc include="reference.RFC.3575" ?>
                      <?rfc include="reference.RFC.5080" ?>
                      <?rfc include="reference.RFC.4787" ?>

		</references>


	</back>
</rfc>
