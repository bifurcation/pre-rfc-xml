<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC0919 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0919.xml">
<!ENTITY RFC1812 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1812.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2131 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2131.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC2644 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2644.xml">
<!ENTITY RFC3315 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3315.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC3819 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3819.xml">
<!ENTITY RFC4291 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4291.xml">
<!ENTITY RFC4795 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4795.xml">
<!ENTITY RFC5374 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5374.xml">
<!ENTITY RFC5771 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5771.xml">
<!ENTITY RFC6762 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6762.xml">
<!ENTITY RFC6973 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6973.xml">
<!ENTITY RFC4941 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4941.xml">
<!ENTITY RFC7721 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7721.xml">
<!ENTITY RFC7819 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7819.xml">
<!ENTITY RFC8117 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8117.xml">
<!ENTITY RFC7772 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7772.xml">
<!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY I-D.ietf-dnssd-privacy SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-privacy.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
<!ENTITY I-D.huitema-6man-random-addresses SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.huitema-6man-random-addresses.xml">
<!ENTITY I-D.ietf-mboned-ieee802-mcast-problems SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-mboned-ieee802-mcast-problems.xml">

]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc number="8386" category="info" submissionType="IETF" consensus="yes" ipr="trust200902">
  <front>


<title abbrev="Broadcast/Multicast Privacy Considerations">Privacy Considerations for Protocols Relying on IP Broadcast or Multicast</title>

    <author fullname="Rolf Winter" initials="R."
            surname="Winter">
    
      <organization>University of Applied Sciences Augsburg</organization>

      <address>
        <postal>
          <street></street>

          <city>Augsburg</city>

          <region></region>

          <code></code>

          <country>Germany</country>
        </postal>

        <email>rolf.winter@hs-augsburg.de</email>

      </address>
    </author>
      
      <author fullname="Michael Faath" initials="M."
            surname="Faath">
    
      <organization>Conntac GmbH</organization>

      <address>
        <postal>
          <street></street>

          <city>Augsburg</city>

          <region></region>

          <code></code>

          <country>Germany</country>
        </postal>

        <email>faath@conntac.net</email>
          
      </address>
    </author>
    
	<author fullname="Fabian Weisshaar" initials="F."
            surname="Weisshaar">
    
      <organization>University of Applied Sciences Augsburg</organization>

      <address>
        <postal>
          <street></street>

          <city>Augsburg</city>

          <region></region>

          <code></code>

          <country>Germany</country>
        </postal>

        <email>fabian.weisshaar@hs-augsburg.de</email>

      </address>
    </author>
 
    <date month="April" year="2018" />

    <area>Internet</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>IP broadcasts, multicast, privacy considerations</keyword>


    <abstract>
      <t>
   A number of application-layer protocols make use of IP broadcast or
   multicast messages for functions such as local service discovery or
   name resolution.  Some of these functions can only be implemented
   efficiently using such mechanisms.  When using broadcast or
   multicast messages, a passive observer in the same broadcast or
   multicast domain can trivially record these messages and analyze
   their content.  Therefore, designers of protocols that make use of
   broadcast or multicast messages need to take special care when designing
   their protocols.
      </t>
    </abstract>
  </front>

  <middle>

    <section anchor="intro" title="Introduction">

      <t>
      Broadcast and multicast messages have a large (and, to the sender, unknown)
	  receiver group by design.
      Because of that, these two mechanisms are vital for a number of basic
      network functions such as autoconfiguration and link-layer address lookup.
      Also, application developers use broadcast/multicast messages to implement things
      such as local service or peer discovery. It appears that an increasing
      number of applications make use of it as suggested by experimental results
	  obtained on campus networks, including the IETF meeting network <xref target="TRAC2016"/>. 
	  This trend is not entirely surprising. 


As <xref target="RFC0919"></xref> puts it, "The
      use of broadcasts [...] is a good base for many applications".
	  Broadcast and multicast functionality in a subnetwork is therefore important
	  because a lack thereof renders the
	  protocols relying on these mechanisms inoperable <xref target="RFC3819"/>.
      </t>

<t>
   Using broadcast/multicast can become problematic if the information
   that is being distributed can be regarded as sensitive or if the
   information that is distributed by multiple protocols can be
   correlated in a way that sensitive data can be derived. 
   This is clearly true for any
      protocol, but broadcast/multicast is special in at least two respects:
      
      <list style="format (%c)">
        <t>
        The aforementioned large receiver group consists of receivers unknown to the sender.
        This makes eavesdropping without special privileges or a special location in the network 
        trivial for anybody in the same broadcast/multicast domain.	
        </t>
        <t>
        Encryption is difficult when broadcast/multicast messages are used, 
		because, for instance, a non-trivial key management protocol might be required. 
		When encryption is not used, the content of these messages is easily accessible,
		making it easy to spoof and replay them.
        </t>
      </list> 
      
	  Given the above, privacy protection for protocols based on broadcast or
	  multicast communication is significantly more difficult compared
	  to unicast communication, and at the same time, invasion of privacy is 
	  much easier. 
	  </t>
	  
      <t>
      Privacy considerations for IETF-specified protocols have received some
      attention in the recent past (e.g., <xref target="RFC7721"></xref> and
      <xref target="RFC7819"></xref>). There is also general guidance available
      for document authors on when and how to include a privacy considerations
      section in their documents and on how to evaluate the privacy implications
	  of Internet protocols <xref target="RFC6973"/>. RFC 6973 also describes
      potential threats to privacy in great detail and lists terminology that is
      also used in this document. 
      In contrast to RFC 6973, this document contains
      a number of privacy considerations, especially for protocols that rely
      on broadcast/multicast, 
      that are intended to reduce the likelihood that a broadcast- or multicast-based
      protocol can be misused to collect sensitive data about devices, 
      users, and groups of users in a broadcast/multicast domain. </t>
	  
	  <t>The above-mentioned considerations particularly
      apply to protocols designed outside the IETF for two reasons. First,
      non-standard protocols will likely not receive operational attention
      and support in making them more secure, e.g., what DHCP snooping does
      for DHCP. Because these protocols are typically not documented, network equipment
	  does not provide similar features for them. Second, these 
      protocols have been designed in isolation, where a set of considerations
      to follow is useful in the absence of a larger community providing 
      feedback and expertise to improve the protocol. 
	  In particular, carelessly designed protocols that use broadcast/multicast
      can break privacy efforts at different
      layers of the protocol stack such as Media Access Control (MAC) address or IP address 
      randomization <xref target="RFC4941"/>.
      </t>

      <section title="Types and Usage of Broadcast and Multicast">


      <t>
      In IPv4, two 
	  major types of broadcast addresses exist: limited broadcast and
	  directed broadcast. Section 5.3.5 of <xref target="RFC1812"/>
	  defines limited broadcast as all-ones
	  (255.255.255.255) and defines 
      directed broadcast as the given network prefix of an IP address and
      the local part of all-ones.
      Broadcast packets are received by all nodes in a subnetwork. Limited broadcasts
      never transit a router. The same is true for directed broadcasts by default,
      but routers may provide an option to do this <xref target="RFC2644"/>. IPv6,
      on the other hand, does not provide broadcast addresses but relies solely
      on multicast <xref target="RFC4291"/>.	  
      </t>

	  <t>
	  In contrast to broadcast addresses, multicast addresses represent an identifier
	  for a set of interfaces that can be a set different from all nodes in the
	  subnetwork. All interfaces that are identified by a given multicast address
	  receive packets destined towards that address and are called a "multicast group". 
	  In both IPv4 and IPv6, multiple pre-defined
	  multicast addresses exist. The ones most relevant for this document are the 
	  ones with subnet scope. 
For IPv4, an IP prefix 
	  called the "Local Network Control Block" (224.0.0.0/24, defined in Section
	  4 of <xref target="RFC5771"/>) is reserved for this purpose. For IPv6, the relevant multicast addresses 
	  are the two All Nodes Addresses, which every IPv6-capable host is required to
	  recognize as identifying itself (see Section 2.7.1 of <xref target="RFC4291"/>).
	  </t>

	  <t>Typical usage of these addresses includes local service discovery 
	  (e.g., Multicast DNS (mDNS) <xref target="RFC6762"/> and Link-Local 
	  Multicast Name Resolution (LLMNR) <xref target="RFC4795"/> make 
	  use of multicast),
	  autoconfiguration (e.g., DHCPv4 <xref target="RFC2131"/> uses broadcasts, and DHCPv6 
	  <xref target="RFC3315"/> uses multicast addresses), and other vital network
	  services such as address resolution or duplicate address detection. 
	  Aside from these core network functions, applications also make use of broadcast
	  and multicast functionality, often implementing proprietary protocols. In
	  sum, these protocols distribute a diverse set of potentially privacy-sensitive
	  information to a large receiver group, and
	  the only requirement to be part of this receiver group is to be on the same subnetwork.
	  </t>

      </section>

        <section title="Requirements Language">
        <t>
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
    NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
    "MAY", and "OPTIONAL" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
        </section>
      
    </section>

    <section title="Privacy Considerations">
    <t>
    There are a few obvious and a few not necessarily obvious things that
    designers of protocols utilizing broadcast/multicast should consider in respect to the
    privacy implications for their protocol. Most of these items are based on 
    protocol behavior observed as part of experiments on operational networks
    <xref target="TRAC2016" />.
    </t>
    
    <section title="Message Frequency">
      <t>
      Frequent broadcast/multicast traffic caused by an application can give away
      user behavior and online connection times. This allows a passive observer to
      potentially deduce a user's current activity (e.g., a game) and 
      to create an online profile (i.e., times the user is on the network). 
   This profile becomes more accurate as the frequency of messages and the
   time duration over which they are sent increases.
Given that broadcast/multicast messages are only visible in the same broadcast/multicast domain,
      these messages also give away the rough location of the user (e.g., a campus or building). 
      </t>

      <t>
      This behavior has, for example, been observed by a synchronization mechanism of a popular
      application, where multiple messages have been sent per minute via broadcast.
      Given this behavior, it is possible to record a device's time on the network
      with a sub-minute accuracy given only the traffic of this single application 
      installed on the device. 
Also, services used for local name resolution in modern operating systems
utilize broadcast- or multicast-based protocols (e.g., mDNS, LLMNR, or NetBIOS) to
announce, for example, resources on a regular basis. This also allows tracking
of the online times of a device.
      </t>

      <t>
      If a protocol relies on frequent or periodic broadcast/multicast messages,
      the frequency SHOULD be chosen conservatively, in particular if the
      messages contain persistent identifiers (see <xref target="ident"/>). 
      Also, intelligent message suppression mechanisms such as the ones employed in mDNS 
      <xref target="RFC6762"/> SHOULD be implemented. The lower the frequency
	  of broadcast messages, the harder passive traffic analysis and surveillance becomes.
      </t>

    </section>
        
    <section title="Persistent Identifiers" anchor="ident">
      <t>


A few protocols that make use of broadcast/multicast messages observed in the
wild also make use of persistent identifiers.


 This includes the use of host names or more
	  abstract persistent identifiers such as a Universally Unique
	  Identifiers (UUIDs) or similar. These IDs, which,
	  for example, identify the installation of a certain application, might not change
	  across updates of the software and can therefore be extremely long lived. 
	  This allows a passive observer to track
	  a user precisely if broadcast/multicast messages are frequent. This is
	  even true if the IP and/or MAC address changes. Such identifiers also
	  allow two different interfaces (e.g., Wi-Fi and Ethernet) to be correlated to the 
	  same device. 

If the application makes use of persistent identifiers for
	  multiple installations of the same application for the same user, this
	  even allows a passive observer to infer that different devices belong to the same user.
	  </t>
	  
	  <t>
      The aforementioned broadcast messages from a synchronization mechanism of a
      popular application also included a persistent identifier in every broadcast.
      This identifier never changed after the application was installed, which
      allowed for the tracking of a device even when it changed its network
      interface or when it connected to a different network.
      </t>

	  <t>
	  In general, persistent IDs are considered bad practice for broadcast
	  and multicast communication, as 
	  persistent application-layer IDs will make efforts to 
	  randomize identifiers (e.g., <xref target="RANDOM-ADDR"/>) on lower layers
	  useless.
	  When protocols that make use of broadcast/multicast need to make use of IDs,
	  these IDs SHOULD be rotated frequently to make user tracking more
	  difficult.
	  </t>
    </section>
       
	<section title="Anticipate User Behavior">
    <t>
    A large number of users name their device after themselves, either using 
    their first name, last name, or both. 

   Often, a host name
   includes the type, model, or maker of a device, its function, or
   language-specific information. 

    Based on data gathered during experiments performed at IETF meetings and at a large
	campus network, this appears to be the currently prevalent user behavior <xref target="TRAC2016" />.
    For protocols using the host name as part of the messages, this clearly will
    reveal personally identifiable information to everyone on the local network.
    This information can also be used to mount more sophisticated attacks, e.g.,
    when the owner of a device is identified (as an interesting target) or properties
    of the device are known (e.g., known vulnerabilities). Host names are also a type of 
	persistent identifier; therefore, the considerations in <xref target="ident"/> apply.	
    </t>

    <t>
    Some of the most commonly used operating systems include the name the user chooses for the user account during the
    installation process as part of the host name of the device. The name of the operating system can also be included,
    therefore revealing two pieces of information that can be regarded as
    private information if the host name
    is used in broadcast/multicast messages.
    </t>

    <t>
    Where possible, the use of host names and other user-provided information 
    in protocols making use of broadcast/multicast SHOULD
    be avoided. An 
    application might want to display the information it will broadcast on the LAN at
    install/config time, so that the user is at least aware of the application's
    behavior. More host name considerations can be found in 
    <xref target="RFC8117"/>. More information on 
    user participation can be found in <xref target="RFC6973"></xref>.	
    </t>
	</section>

    <section title="Consider Potential Correlation">    
      <t>
	  A large number of services and applications make use of the broadcast/multicast
	  mechanism. That means there are various sources of information that are
	  easily accessible by a passive observer. In isolation, the information
	  these protocols reveal might seem harmless, but given multiple such 
	  protocols, it might be possible to correlate this information.  For example,
	  a protocol that uses frequent messages including a UUID to identify
	  the particular installation does not give away the identity of the user. However,
	  a single message including the user's host name might do that, and it
	  can be correlated using, for example, the MAC address of the device's interface.
	  </t>

	  <t>
	  In the experiments described in <xref target="TRAC2016" />, it was
   possible to
   correlate frequently sent broadcast messages that included a unique
   identifier with other broadcast/multicast messages containing
   usernames (e.g. mDNS, LLMNR, or NetBIOS); this revealed relationships among
   users. 
	  This allowed the real identity of the users of many devices to be
	  revealed, and it also gave away
	  some information about their social environment.
	  </t>
	  
	  <t>
	  A designer of a protocol that makes use of broadcast/multicast needs
	  to be aware of the fact that even if the information a
	  protocol leaks seems harmless in isolation, there 
	  might be ways to correlate that information with information from other protocols 
	  to reveal sensitive information about a user.
	  </t>
    </section>
    

    <section title="Configurability">
    <t>
	A lot of applications and services relying on broadcast- or multicast-based protocols do not 
	include the means to declare "safe" environments (e.g., based on the
	Service Set Identifier (SSID) of
	a Wi-Fi network and the MAC addresses of the access points). For example, a device connected 
	to a public Wi-Fi network will likely broadcast the
	same information as when connected to the home network. It would be beneficial
	if certain behaviors could be restricted to "safe" environments.
	</t>
	
	<t>
	For example, a popular operating system allows the user to specify the trust level of the
	network the device connects to, which, for example, restricts specific
	system services (using broadcast/multicast
	messages for their normal operation) to be used	in trusted networks only. Such functionality
	could be implemented as part of an application.
	</t>
	
	<t>
	An application developer making use of broadcast/multicast messages as part of the application 
	SHOULD, if possible, make the broadcast feature configurable so that 
	potentially sensitive information does not leak on public networks where the
	threat to privacy is much larger.
	</t>


    </section>
    
    </section>


	<section title="Operational Considerations">
	<t>
	Besides changing end-user behavior, choosing sensible defaults as an operating 
	system vendor (e.g., for suggesting host names), and following the considerations for protocol 
	designers mentioned in this document, there
	is something that the network administrators/operators can do to limit the 
	above-mentioned problems.
	</t>

	<t>
   A feature commonly found on access points is the ability to manage/filter
   broadcast and multicast traffic. 
This will potentially break certain applications
    or some of their functionality but will also protect the users from potentially
	leaking sensitive information. Wireless access points often provide finer-grained
	control beyond a simple on/off switch for well-known protocols or provide
	mechanisms to manage broadcast/multicast traffic intelligently using,
	for example, proxies (see  
	<xref target="MCAST-CONS"/>). However, these mechanisms only work on standardized protocols.
	</t>	
	</section>

    <section title="Summary">
	<t>
	Increasingly, applications rely on protocols that send and receive broadcast and multicast messages. For
	some, broadcast/multicast messages are the basis of their application logic; others use
	broadcast/multicast messages to improve certain aspects of the application but are fully
	functional in case broadcast/multicast messages fail. Irrespective of the role of
    broadcast and multicast messages for the application, the designers 
    of protocols that make use of them should be very careful in their 
    protocol design because of the special nature of broadcast and multicast.	
	</t>

	<t>
    It is not always possible to implement certain functionality via unicast,
    but if a protocol designer chooses to rely on broadcast/multicast, the
    following should be carefully considered:	
	
	<list style="symbols">
	<t> 
	IETF-specified protocols, such as mDNS <xref target="RFC6762"/>, SHOULD be used if possible as operational
	support might exist to protect against the leakage of private information.
    Also, for some protocols, privacy extensions are being specified; these can be
	used if implemented. For example, for DNS-SD, privacy extensions are documented in 
	<xref target="DNSSD-PRIV"/>.
    </t>

    <t>
	Using user-specified information inside broadcast/multicast messages
	SHOULD be avoided, as users will often use personal information or other information
	that aids attackers, in particular if the user is unaware about how that information
	is being used.
	</t>
	<t>
	The use of persistent IDs in messages SHOULD be avoided, as this
	allows user tracking and correlation, and
	and it potentially has a devastating effect on other privacy-protection 
	mechanisms.
	</t>
	<t>
	If one must design a new protocol relying on broadcast/multicast and cannot use an 
	IETF-specified protocol, then:
	  <list>
	    <t>the protocol SHOULD be very conservative in how frequently it sends messages as an effort in data minimization,</t>
	    <t>it SHOULD make use of mechanisms implemented in IETF-specified protocols that can be helpful in privacy protection, such as message suppression in mDNS,</t>
	    <t>it SHOULD be designed in such a way that information sent in broadcast/multicast messages
		cannot be correlated with information from other protocols
	    using broadcast/multicast, and</t>
	    <t>it SHOULD be possible to let the user configure "safe" environments if possible (e.g., based on the SSID)
		to minimize the risk of information leakage (e.g., a home
	    network as opposed to a public Wi-Fi network).</t>
	</list>
	</t>
	</list>
	</t>

    </section>


    <section title="Other Considerations">
      <t>
      Besides privacy implications, frequent broadcasting also represents
      a performance problem. In particular, in certain wireless technologies such as
      802.11, broadcast and multicast are transmitted at a much lower rate 
      (the lowest common denominator rate) compared to unicast and therefore
      have a much bigger impact on the overall available airtime 
	  <xref target="MCAST-CONS"/>.
Further, it will limit the
      ability for devices to go to sleep if frequent broadcasts are being sent.
      A similar problem in respect to Router Advertisements is addressed in
      <xref target="RFC7772"/>. In that respect,
      broadcast/multicast can be used for another class of attacks that is not related to privacy. The
      potential impact on network performance should nevertheless be considered when designing
	  a protocol that makes use of broadcast/multicast.
      </t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document has no IANA actions.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      
	<t>This document deals with privacy-related considerations for
	  broadcast- and multicast-based protocols. It contains advice for
	  designers of such protocols to minimize the leakage of privacy-sensitive
	  information. The intent of the advice is to make sure that identities
      will remain anonymous and user tracking will be made difficult.</t>

    <t>To protect multicast traffic, certain applications can make use of existing
	mechanisms, such as the ones defined in 
	<xref target="RFC5374"/>. Examples of such applications can be found in
    Appendix A of <xref target="RFC5374"/>. 
However, given the 
	assumptions about these applications and the required security infrastructure,
	many applications will not be able to make use of such mechanisms.</t>
    </section>
  </middle>


  <back>

    <references title="Normative References">
        
      &RFC2119;
      &RFC8174;

    </references>

    <references title="Informative References">

      &RFC5374;
      &RFC3819;
      &RFC0919;
      &RFC1812;
      &RFC4941;
      &RFC2644;
      &RFC6762;
      &RFC6973;
      &RFC7721;
      &RFC7819;
      &RFC5771;
      &RFC4291;
      &RFC4795;	  
      &RFC3315;
      &RFC2131;
      &RFC8117;
      &RFC7772;

<!-- draft-huitema-6man-random-addresses-03 IESG State: Expired -->

<reference anchor='RANDOM-ADDR'>
<front>
<title>Implications of Randomized Link Layers Addresses for IPv6 Address Assignment</title>

<author initials='C' surname='Huitema' fullname='Christian Huitema'>
    <organization />
</author>

<date month='March' day='2' year='2016' />

</front>

<seriesInfo name='Work in Progress,' value='draft-huitema-6man-random-addresses-03' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-huitema-6man-random-addresses-03.txt' />
</reference>


<!-- draft-ietf-dnssd-privacy-03 IESG State: I-D Exists-->

<reference anchor='DNSSD-PRIV'>
<front>
<title>Privacy Extensions for DNS-SD</title>

<author initials='C' surname='Huitema' fullname='Christian Huitema'>
    <organization />
</author>

<author initials='D' surname='Kaiser' fullname='Daniel Kaiser'>
    <organization />
</author>

<date month='April' year='2018' />

</front>

<seriesInfo name='Work in Progress,' value='draft-ietf-dnssd-privacy-04' />

</reference>

<!-- draft-ietf-mboned-ieee802-mcast-problems-01 IESG State: I-D Exists -->

<reference anchor='MCAST-CONS'>
<front>
<title>Multicast Considerations over IEEE 802 Wireless Media</title>

<author initials='C' surname='Perkins' fullname='Charles Perkins'>
    <organization />
</author>

<author initials='M' surname='McBride' fullname='Mike McBride'>
    <organization />
</author>

<author initials='D' surname='Stanley' fullname='Dorothy Stanley'>
    <organization />
</author>

<author initials='W' surname='Kumari' fullname='Warren Kumari'>
    <organization />
</author>

<author initials='J' surname='Zuniga' fullname='Juan Zuniga'>
    <organization />
</author>

<date month='February' day='3' year='2018' />

</front>

<seriesInfo name='Work in Progress,' value='draft-ietf-mboned-ieee802-mcast-problems-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-mboned-ieee802-mcast-problems-01.txt' />
</reference>
	  
	  <reference anchor="TRAC2016">
         <front>
		   <title>How Broadcast Data Reveals Your Identity and Social Graph</title>
		   <author surname="Faath" fullname="Michael Faath" initials="M." />
		   <author surname="Weisshaar" fullname="Fabian Weisshaar" initials="F." />
		   <author surname="Winter" fullname="Rolf Winter" initials="R." />
		   <date month="September" year="2016" />
		 </front>
		 <seriesInfo name="Wireless Communications and Mobile
				   Computing Conference (IWCMC),"
			     value="International Workshop on
TRaffic Analysis and Characterization (TRAC)"/>
<seriesInfo name="DOI" value="10.1109/IWCMC.2016.7577084"/>
	   </reference>
  
	  </references>

    <section anchor="Acknowledgments" title="Acknowledgments" numbered="no">
      <t>
      We would like to thank Eliot Lear, Joe Touch, and Stephane Bortzmeyer for 
	  their valuable input to this document.
      </t>
      <t>
      This work was partly supported by the
      European Commission under grant agreement FP7-318627 mPlane. Support
      does not imply endorsement.
      </t>
    </section>



  </back>
</rfc>
