<?xml version='1.0' encoding='US-ASCII'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2865 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2865.xml">
<!ENTITY RFC5080 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5080.xml">
<!ENTITY RFC5176 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5176.xml">
<!ENTITY RFC5580 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5580.xml">
<!ENTITY RFC6929 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6929.xml">
<!ENTITY RFC7542 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7542.xml">
<!ENTITY RFC8044 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8044.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC2866 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2866.xml">
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<rfc submissionType="IETF" number="8559" category="std" ipr="trust200902"
     updates="5176, 5580" consensus="yes">

<!-- Generated by id2xml 1.4.4 on 2019-02-09T03:38:56Z -->
        <?rfc compact="yes"?>
        <?rfc subcompact="no"?>
        <?rfc sortrefs="yes"?>
        <?rfc symrefs="yes"?>
        <?rfc strict="yes"?>
        <?rfc toc="yes"?>
        <?rfc text-list-symbols="o*+-"?>

        <front>

        <title abbrev="Dynamic Authorization Proxying in RADIUS ">Dynamic
        Authorization Proxying in the Remote Authentication
	Dial&nbhy;In&nbsp;User&nbsp;Service (RADIUS) Protocol</title>

        <author fullname="Alan DeKok" initials="A." surname="DeKok">
        <organization abbrev="FreeRADIUS">The FreeRADIUS Server Project</organization>
        <address>
        <email>aland@freeradius.org</email>
        </address>
        </author>

        <author fullname="Jouni Korhonen" initials="J." surname="Korhonen">
        <organization></organization>
        <address>
        <email>jouni.nospam@gmail.com</email>
        </address>
        </author>

        <date month="April" year="2019"/>

<keyword>RADIUS, Change of Authorization, CoA-Request, Disconnect-Request</keyword>

        <abstract><t>
   RFC 5176 defines Change-of-Authorization (CoA) and Disconnect Message
   (DM) behavior for RADIUS.  RFC 5176 also suggests that proxying these
   messages is possible, but it does not provide guidance as to how that
   is done.  This specification updates RFC 5176 to correct that omission for
   scenarios where networks use realm-based proxying as defined in
   RFC 7542.  This specification also updates RFC 5580 to allow the
   Operator-Name attribute in CoA-Request and Disconnect-Request
   packets.</t>
        </abstract>
        </front>

        <middle>
        <section title="Introduction" anchor="section-1"><t>
   RFC 5176 <xref target="RFC5176"/> defines Change&nbhy;of&nbhy;Authorization (CoA) and
   Disconnect Message (DM) behavior for RADIUS.  Section&nbsp;3.1 of
   <xref target="RFC5176"/> suggests that proxying these messages is possible,
   but it does not provide guidance as to how that is done.  This omission means that
   in practice, proxying of CoA packets is impossible.</t>

        <t>
   We partially correct that omission here by explaining how proxying
   of these packets can be done by leveraging an existing RADIUS
   attribute, Operator-Name (Section&nbsp;4.1 of <xref target="RFC5580"/>).  We then explain
   how this attribute can be used by proxies to route packets
   "backwards" through a RADIUS proxy chain from a home network to a
   visited network.  We then introduce a new attribute:
   Operator-NAS&nbhy;Identifier.  This attribute permits packets to be routed from the
   RADIUS server at the visited network to the Network Access Server (NAS).</t>

        <t>
   This correction is limited to the use case of realm-based proxying as
   defined in <xref target="RFC7542"/>.  Other forms of proxying are possible
   but are not discussed here.  We note that the recommendations provided in this
   document apply only to those systems that implement proxying of CoA
   packets, and then only to those that implement realm-based CoA
   proxying.  This specification neither requires nor suggests changes
   to any implementation or deployment of any other RADIUS systems.</t>

        <t>
   We also update the behavior described in <xref target="RFC5580"/> to allow
   the Operator-Name attribute to be used in CoA&nbhy;Request and
   Disconnect-Request packets, as further described in this document.</t>

        <t>
   This document is a Standards Track document in order to update the behavior
   described in <xref target="RFC5580"/>, as <xref target="RFC5580"/> is also a Standards Track document.  This document
   relies heavily upon and also updates some of the behaviors described in
   RFC&nbsp;5176, which is an Informational document; because the applicability statements in
   Section&nbsp;1.1 of <xref target="RFC5176"/> do not apply to this document, this document
   does not change the status of <xref target="RFC5176"/>.</t>

        <t>
   We finally conclude with a discussion of the security implications of
   this design and show that they do not decrease the security of the
   network.</t>

        <section title="Terminology" anchor="section-1.1"><t>
   This document frequently uses the following terms:</t>

        <t><list style="hanging" hangIndent="3"><t hangText="CoA">
        <vspace blankLines="1"/>
        Change of authorization, e.g., CoA&nbhy;Request, CoA&nbhy;ACK, or CoA&nbhy;NAK,
      as defined in <xref target="RFC5176"/>.  <xref target="RFC5176"/>
      also defines
      Disconnect-Request, Disconnect-ACK, and Disconnect-NAK.  For
      simplicity, where we use "CoA" in this document, we mean a generic "CoA&nbhy;Request or Disconnect-Request" packet.  We use "CoA&nbhy;Request" or
      "Disconnect-Request" to refer to the specific packet types.
        </t>

        <t hangText="Network Access Identifier (NAI)">
        <vspace blankLines="1"/>
        The user identity submitted by the client during network access
        authentication. See <xref target="RFC7542"/>.  The
      purpose of the NAI is to identify the user as well as assist in
      the routing of the authentication request.  Please note that the
      NAI may not necessarily be the same as the user's email address or
      the user identity submitted in an application-layer authentication.
        </t>

        <t hangText="Network Access Server (NAS)">
        <vspace blankLines="1"/>
        The device that clients connect to in order to get access to the
        network.  In Point-to-Point Tunneling Protocol (PPTP) terminology,
        this is referred to as the PPTP Access Concentrator (PAC), and in
        Layer 2 Tunneling Protocol (L2TP) terminology, it is referred to as
        the L2TP Access Concentrator (LAC).  In IEEE 802.11, it is referred to
        as an Access Point.
        </t>

        <t hangText="Home Network">
        <vspace blankLines="1"/>
        The network that holds the authentication credentials for a user.
        </t>

        <t hangText="Visited Network">
        <vspace blankLines="1"/>
        A network other than the home network, where the user attempts to
      gain network access.  The visited network typically has a
      relationship with the home network, possibly through one or more
      intermediary proxies.
        </t>

        </list>
        </t>

        </section>

        <section title="Requirements Language" anchor="section-1.2">
          <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
          "SHALL&nbsp;NOT", "SHOULD", "SHOULD&nbsp;NOT", "RECOMMENDED",
          "NOT&nbsp;RECOMMENDED", "MAY", and "OPTIONAL" in this document
          are to be interpreted as described in BCP&nbsp;14
          <xref target="RFC2119"/> <xref target="RFC8174"/> when,
          and only when, they appear in all capitals, as shown here.</t>
        </section>

        </section>

        <section title="Problem Statement" anchor="section-2"><t>
   This section describes how RADIUS proxying works, how CoA packets
   work, and why CoA proxying as discussed in <xref target="RFC5176"/> is insufficient
   to create a working system.</t>

        <section title="Typical RADIUS Proxying" anchor="section-2.1"><t>
   When a RADIUS server proxies an Access-Request packet, it typically
   does so based on the contents of the User-Name attribute, which
   contains an NAI <xref target="RFC7542"/>.  This
   specification describes how to use the NAI in order to proxy CoA
   packets across multiple hops.  Other methods of proxying CoA packets
   are possible but are not discussed here.</t>

        <t>
   In order to determine the "next hop" for a packet, the proxying
   server looks up the "realm" portion of the NAI in a logical
   Authentication, Authorization, and Accounting (AAA)
   routing table, as described in Section&nbsp;3 of <xref target="RFC7542"/>.  The entry in
   that table contains information about the next hop to which the
   packet is sent.  This information can be IP address, shared secret,
   certificate, etc.  The next hop may also be another proxy, or it
   may be the home server for that realm.</t>

        <t>
   If the next hop is a proxy, that proxy will perform the same realm
   lookup and then proxy the packet as above.  At some point, the
   next&nbsp;hop will be the home server for that realm.</t>

        <t>
   The home server validates the NAI in the User-Name attribute against
   the list of realms hosted by the home network.  If there is no match,
   then an Access-Reject is returned.  All other packets are processed
   through local site rules, which result in an appropriate response
   packet being sent.  This response packet can be Access-Accept,
   Access-Challenge, or Access-Reject.</t>

        <t>
   The RADIUS client receiving that response packet will match it to an
   outstanding request.  If the client is part of a proxy, the proxy
   will then send that response packet in turn to the system that
   originated the Access-Request.  This process continues until the
   response packet arrives at the NAS.</t>

        <t>
   The proxies are typically stateful with respect to ongoing
   request&wj;/response packets but are stateless with respect to user sessions.  That
   is, once a response has been sent by the proxy, it can discard all
   information about the request packet, other than what is needed for
   detecting retransmissions as per Section&nbsp;2.2.2 of <xref target="RFC5080"/>.</t>

        <t>
   The same method is used to proxy Accounting-Request packets.
   Proxying both Access-Request and Accounting-Request packets allows proxies
   to connect visited networks to home networks for all AAA purposes.</t>
        </section>

        <section title="CoA Processing" anchor="section-2.2"><t>
   <xref target="RFC5176"/> describes how CoA clients send packets to CoA servers.  We
   note that a system comprising the CoA client is typically co-located
   with, or is the same as, the RADIUS server.  Similarly, the CoA
   server is a system that is either co-located with or the same as
   the RADIUS client.</t>

        <t>
   In the case of packets sent inside of one network, the source and
   destination of CoA packets are locally determined.  There is thus no
   need for standardization of that process, as networks are free to
   send CoA packets whenever they want, for whatever reason they want.</t>

        </section>

        <section title="Failure of CoA Proxying" anchor="section-2.3"><t>
   The situation is more complicated when proxies are involved.
   <xref target="RFC5176"/> suggests that CoA proxying is permitted, but
   <xref target="RFC5176"/> does not make any suggestions as to how that
   proxying should be done.</t>

        <t>
   If proxies were to track user sessions, it would be possible for a
   proxy to match an incoming CoA packet to a user session and then to
   proxy the CoA packet to the RADIUS client that originated the
   Access&nbhy;Request for that session.  There are many problems with such a
   scenario.</t>

        <t>
   The CoA server might not, in fact, be co-located with the RADIUS
   client, in which case it might not have access to user session
   information for performing the reverse path forwarding.</t>

        <t>
   The CoA server may be down, but there may be a different CoA server
   that could successfully process the packet.  The CoA client should
   then fail over to a different CoA server.  If the reverse path is
   restricted to be the same as the forward path, then such failover is
   not possible.</t>

        <t>
   In a roaming consortium, the proxies may forward traffic for tens of
   millions of users.  Tracking each user session can be expensive and
   complicated, and doing so does not scale well.  For that reason, most
   proxies do not record user sessions.</t>

        <t>
   Even if the proxy recorded user sessions, <xref target="RFC5176"/> is silent on the
   topic of what attributes constitute "session identification attributes".  That silence means it is impossible for a proxy to
   determine if a CoA packet matches a particular user session.</t>

        <t>
   The result of all of these issues is that CoA proxying is impossible
   when using the behavior defined in <xref target="RFC5176"/>.</t>

        </section>

        </section>

        <section title="How to Perform CoA Proxying" anchor="section-3"><t>
   The solution to the above problem is to use realm-based proxying on
   the reverse path, just as with the forward path.  In order for the
   reverse path proxying to work, the proxy decision must be based on an
   attribute other than User-Name.</t>

        <t>
   The reverse path proxying can be done by using the Operator-Name
   attribute defined in Section&nbsp;4.1 of <xref target="RFC5580"/>.  We repeat a portion of
   that definition here for clarity:</t>

<!-- DNE -->
        <t><list><t>
      This attribute carries the operator namespace identifier and the
      operator name.  The operator name is combined with the namespace
      identifier to uniquely identify the owner of an access network.</t>

        </list>
        </t>

        <t>...followed a few paragraphs later by a description of the REALM
        namespace:</t>
        
<!-- DNE -->
        <t>
        <list>
        <t>REALM ('1' (0x31)):
             <list>
            <t>The REALM operator namespace can be used to indicate operator
            names based on any registered domain name.  Such names are
            required to be unique, and the rights to use a given realm name
            are obtained coincident with acquiring the rights to use a
            particular Fully Qualified Domain Name (FQDN). ...</t>
        </list></t>
     </list></t>

        <t>
   In short, the Operator-Name attribute contains an ASCII "1",
   followed by the realm of the visited network.  For example, for the
   "example.com" realm, the Operator-Name attribute contains the text
   "1example.com".  This information is precisely what is needed by
   intermediate nodes in order to perform CoA proxying.</t>

        <t>
   The remainder of this document describes how CoA proxying can be
   performed by using the Operator-Name attribute.  We describe the
   following:</t>

   <t><list style="symbols">
   <t>how the forward path has to change in order to allow reverse path
   proxying</t>
   <t>how reverse path proxying works</t>
   <t>how visited networks and home networks have to behave in order for
   CoA proxying to work</t>
 </list></t>

        <t>
   We note that as a proxied CoA packet is sent to only one destination,
   the Operator-Name attribute MUST NOT occur more than once in a
   packet.  If a packet contains more than one Operator-Name,
   implementations MUST treat the second and subsequent attributes as
   "invalid attributes", as discussed in Section&nbsp;2.8 of <xref target="RFC6929"/>.</t>

        <section title="Changes to Access-Request and Accounting-Request Packets" anchor="section-3.1"><t>
   When a visited network proxies an Access-Request or
   Accounting-Request packet outside of its network, a visited network that
   wishes to support realm-based CoA proxying SHOULD include an Operator-Name
   attribute in the packet, as discussed in Section&nbsp;4.1 of <xref target="RFC5580"/>.
   The contents of the Operator-Name attribute should be "1", followed by the
   realm name of the visited network.  Where the visited network has
   more than one realm name, a "canonical" name SHOULD be chosen and
   used for all packets.</t>

        <t>
   Visited networks MUST use a consistent value for Operator-Name for
   any one user session.  That is, sending "1example.com" in an
   Access&nbhy;Request packet and "1example.org" in an Accounting-Request packet
   for that same session is forbidden.  Such behavior would make it look
   like a single user session was active simultaneously in two different
   visited networks, which is impossible.</t>

        <t>
   Proxies that record user session information SHOULD also record
   Operator-Name.  Proxies that do not record user session information
   do not need to record Operator-Name.</t>

        <t>
   Home networks SHOULD record Operator-Name along with any other
   information that they record about user sessions.  Home networks that
   expect to send CoA packets to visited networks MUST record
   Operator&nbhy;Name for each user session that originates from a
   visited network. Failure to record Operator-Name would mean that the
   home network would not know where to send any CoA packets.</t>

        <t>
   Networks that host both the RADIUS client and RADIUS server do not
   need to create, record, or track Operator-Name.  That is, if the
   visited network and home network are the same, there is no need to
   use the Operator-Name attribute.</t>

        </section>

        <section title="Proxying of CoA-Request and Disconnect-Request Packets" anchor="section-3.2"><t>
   When a home network wishes to send a CoA-Request or Disconnect-Request packet to a visited network, it MUST include an Operator-Name
   attribute in the CoA packet.  The value of the Operator-Name attribute MUST be
   the value that was recorded earlier for that user session.</t>

        <t>
   The home network MUST look up the realm from the Operator-Name attribute
   in a logical "realm routing table", as discussed in
   Section&nbsp;3 of <xref target="RFC7542"/>.
   That logical realm table is defined therein&nbsp;as:</t>

<!-- DNE -->
        <t><list><t>
      ... a logical AAA routing table, where the "utf8-realm" portion
      acts as a key, and the values stored in the table are one or more
      "next hop" AAA servers.</t>

        </list>
        </t>

        <t>
   In order to support proxying of CoA packets, this table is extended
   to include a mapping between "utf8-realm" and one or more next&nbhy;hop
   CoA servers.</t>

        <t>
   When proxying CoA-Request and Disconnect-Request packets, the lookups
   will return data from the "CoA server" field instead of the "AAA server" field.</t>

        <t>
   In practice, this process means that CoA proxying works exactly like
   "normal" RADIUS proxying, except that the proxy decision is made
   using the realm from the Operator-Name attribute instead of using
   the realm from the User-Name attribute.</t>

        <t>
   Proxies that receive the CoA packet will look up the realm from the
   Operator-Name attribute in a logical "realm routing table", as with home
   servers, above.  The packet is then sent to the proxy for the realm
   that was found in that table.  This process continues with any
   subsequent proxies until the packet reaches a public CoA server at
   the visited network.</t>

        <t>
   Where the realm is unknown, the proxy MUST return a NAK packet that
   contains an Error&nbhy;Cause Attribute having value 502 ("Request Not Routable").</t>

        <t>
   Proxies that receive a CoA packet MUST NOT use the NAI from the
   User&nbhy;Name attribute in order to make proxying decisions.  Doing so would result
   in the CoA packet being forwarded to the home network, while the
   user's session is in the visited network.</t>

        <t>
   We also update Section 5 of <xref target="RFC5580"/> to permit CoA&nbhy;Request and
   Disconnect-Request packets to contain zero or one instance of the
   Operator-Name attribute.</t>

        </section>

        <section title="Reception of CoA-Request and Disconnect-Request Packets" anchor="section-3.3"><t>
   After some proxying, the CoA packet will be received by the CoA
   server in the visited network.  That CoA server MUST validate the NAI
   in the Operator-Name attribute against the list of realms hosted by
   the visited network.  If the realm is not found, then the CoA server
   MUST return a NAK packet that contains an Error&nbhy;Cause Attribute
   having value 502 ("Request Not Routable").</t>

        <t>
   Some home networks will not have permission to send CoA packets to
   the visited network.  The CoA server SHOULD therefore also validate
   the NAI contained in the User-Name attribute.  If the home network is
   not permitted to send CoA packets to this visited network, then the
   CoA server MUST return a NAK packet that contains an Error&nbhy;Cause
   Attribute having value 502 ("Request Not Routable").</t>

        <t>
   These checks make it more difficult for a malicious home network to
   scan roaming networks in order to determine which visited network
   hosts which realm.  That information should be known to all parties
   in advance and exchanged via methods outside the scope of this
   specification. Those methods will typically be in the form of
   contractual relationships between parties or membership in a
   roaming consortium.</t>

        <t>
   The CoA server in the visited network will also ensure that the
   Operator-NAS-Identifier attribute is known, as described below.  If
   the attribute matches a known NAS, then the packet will be sent to
   that NAS.  Otherwise, the CoA server MUST return a NAK packet that
   contains an Error&nbhy;Cause Attribute having value 403 ("NAS Identification Mismatch").</t>

        <t>
   All other received packets are processed as per local site rules
   and will result in an appropriate response packet being sent.  This
   process mirrors the method used to process Access-Request and
   Accounting-Request packets (described above).</t>

        <t>
   Processing done by the visited network will normally include sending the
   CoA packet to the NAS, having the NAS process it, and then returning
   any response packets back up the proxy chain to the home server.</t>

        <t>
   The only missing piece here is the procedure by which the
   visited network gets the packet from its public CoA server to the NAS.  The
   visited network could use NAS-Identifier, NAS-IP-Address, or
   NAS&nbhy;IPv6-Address, but these attributes may have been edited by an
   intermediate proxy or the attributes may be missing entirely.</t>

        <t>
   These attributes may be incorrect because proxies forwarding
   Access&nbhy;Request packets often rewrite them for internal policy reasons.
   These attributes may be missing, because the visited network may not
   want all upstream proxies and home servers to have detailed
   information about the internals of its private network and may
   remove them itself.</t>

        <t>
   We therefore need a way to identify a NAS in the visited network via a
   method that affords privacy and does not use any existing attributes.
   Our solution is to define an Operator-NAS-Identifier
   attribute, which identifies an individual NAS in the visited network.</t>

        </section>

        <section title="Operator-NAS-Identifier" anchor="section-3.4"><t>
   The Operator-NAS-Identifier attribute is an opaque token that
   identifies an individual NAS in a visited network.  It MAY appear in
   the following packets: Access-Request, Accounting-Request, CoA&nbhy;Request, or Disconnect-Request.  Operator-NAS-Identifier MUST NOT
   appear in any other packets.</t>

        <t>
   Operator-NAS-Identifier MAY occur in a packet if the packet also
   contains an Operator-Name attribute.  Operator-NAS-Identifier MUST&nbsp;NOT
   appear in a packet if there is no Operator-Name in the packet.
   As each proxied CoA packet is sent to only one NAS, the
   Operator-NAS-Identifier attribute MUST NOT occur more than once in a packet.  If a
   packet contains more than one Operator-NAS-Identifier,
   implementations MUST treat the second and subsequent attributes as
   "invalid attributes", as discussed in Section&nbsp;2.8 of <xref target="RFC6929"/>.</t>

        <t>
   An Operator-NAS-Identifier attribute SHOULD be added to an
   Access&nbhy;Request or Accounting-Request packet by a visited network, before
   proxying a packet to an external RADIUS server.  When the
   Operator-NAS-Identifier attribute is added to a packet, the following
   attributes SHOULD be deleted from the packet: NAS-IP-Address,
   NAS&nbhy;IPv6-Address, and NAS-Identifier.  If these attributes are deleted, the
   proxy MUST then add a new NAS-Identifier attribute, in order to satisfy the
   requirements of Section&nbsp;4.1 of <xref target="RFC2865"/> and Section&nbsp;4.1 of
   <xref target="RFC2866"/>.  The contents of the new NAS-Identifier attribute
   SHOULD be the realm name of the visited network.</t>

        <t>
   When a server receives a packet that already contains an Operator-
   NAS-Identifier attribute, no such editing is performed.</t>

        <t>
   The Operator-NAS-Identifier attribute MUST NOT be added to any packet by any
   other proxy or server in the network.  Only the visited network (i.e.,
   the operator) can name a NAS that is inside of the visited network.</t>

        <t>
   The result of these requirements is that for everyone outside of the
   visited network there is only one NAS: the visited network itself.
   Also, the visited network is able to identify its own NASes to its own
   satisfaction.</t>

        <t>
   This usage of the Operator-NAS-Identifier attribute parallels the
   Operator-Name attribute as defined in Section&nbsp;4.1 of
   <xref target="RFC5580"/>.</t>

        <t>
   The Operator-NAS-Identifier attribute is defined as follows.</t>

        <t><list style="hanging" hangIndent="3"><t hangText="Description">
        <vspace blankLines="1"/>
        An opaque token describing the NAS a user has logged into.
        </t>



        <t hangText="Type">
        <vspace blankLines="1"/>
        241.8 (assigned by IANA from the "short extended space" <xref
	target="RFC6929"/> of the "RADIUS Attribute Types" registry").
        </t>

        <t hangText="Length">
        <vspace blankLines="1"/>
        4 to 35.
        <vspace blankLines="1"/>
        Implementations supporting this attribute MUST be able to handle
      between one (1) and thirty-two (32) octets of data.
      Implementations creating an Operator-NAS-Identifier attribute
      MUST&nbsp;NOT
      create attributes with more than sixty-four (64) octets of data.  A
      32&nbhy;octet string should be more than sufficient for future&nbsp;uses.
        </t>

        <t hangText="Data Type">
        <vspace blankLines="1"/>
        The data type of this field is "string".
        See Section&nbsp;3.5 of <xref target="RFC8044"/> for a definition.
        </t>

        <t hangText="Value">
        <vspace blankLines="1"/>
        This attribute contains an opaque token that can only be interpreted
        by the visited network.
        <vspace blankLines="1"/>
        This token MUST allow the visited network to direct the packet to
      the NAS for the user's session.  In practice, this requirement
      means that the visited network has two practical methods for creating
      the value.
        <vspace blankLines="1"/>
        The first method is to create an opaque token per NAS and then to
      store that information in a database.  The database can be
      configured to allow querying by NAS IP address in order to find
      the correct Operator-NAS-Identifier.  The database can also be
      configured to allow querying by Operator-NAS-Identifier in order
      to find the correct NAS IP address.
        <vspace blankLines="1"/>
        The second method is to obfuscate the NAS IP address using
      information known locally by the visited network -- for example, by
      XORing it with a locally known secret key.  The output of that
      obfuscation operation is data that can be used as the value of
      Operator-NAS-Identifier.  On reception of a CoA packet, the
      locally known information can be used to unobfuscate the value of
      Operator-NAS-Identifier, in order to determine the actual NAS IP
      address.
        <vspace blankLines="1"/>
      Note that there is no requirement that the value of
      Operator-NAS-Identifier be checked for integrity.  Modification of the
      value can only result in the erroneous transaction being rejected.
        <vspace blankLines="1"/>
        We note that the Access-Request and Accounting-Request packets
      often contain the Media Access Control (MAC) address of the NAS.  There
      is therefore no requirement that Operator-NAS-Identifier obfuscate or
      hide in any way the total number of NASes in a visited network.  That
      information is already public knowledge.
        </t>

        </list>
        </t>

        </section>

        </section>

        <section title="Requirements" anchor="section-4"><section title="Requirements on Home Servers" anchor="section-4.1"><t>
   The Operator-NAS-Identifier attribute MUST be stored by a home server
   along with any user session identification attributes.  When sending
   a CoA packet for a user session, the home server MUST include
   verbatim any Operator-NAS-Identifier it has recorded for that
   session.</t>

        <t>
   A home server MUST NOT send CoA packets for users of other networks.
   The next few sections describe how other participants in the RADIUS
   ecosystem can help enforce this requirement.</t>

        </section>

        <section title="Requirements on Visited Networks" anchor="section-4.2"><t>
   A visited network that receives a CoA packet that will be proxied to
   a NAS MUST perform all of the operations required for proxies; see
   <xref target="section-4.3.2"/>.  We specify this requirement because we
   assume that the visited network has a proxy between the NAS and any
   external (i.e., third-party) proxy.  Situations where a NAS sends packets
   directly to a third-party RADIUS server are outside the scope of this
   specification.</t>

        <t>
   The visited network uses the contents of the Operator-NAS-Identifier
   attribute to determine which NAS will receive the packet.</t>

        <t>
   The visited network MUST remove the Operator-Name and Operator-NAS-
   Identifier attributes from a given CoA packet prior to sending
   that packet to the final CoA server (i.e., NAS).  This step is
   necessary due to the limits specified in Section&nbsp;2.3 of <xref target="RFC5176"/>.</t>

        <t>
   The visited network MUST also ensure that the CoA packet sent to the
   NAS contains one of the following attributes: NAS-IP-Address,
   NAS&nbhy;IPv6-Address, or NAS-Identifier.  This step is the inverse of the
   removal suggested above in <xref target="section-3.4"/>.</t>

        <t>
   In general, the NAS should only receive attributes that identify or
   modify a user's session. It is not appropriate to send to a NAS
   attributes that are used only for inter-proxy signaling.</t>

        </section>

        <section title="Requirements on Proxies" anchor="section-4.3"><t>
   There are a number of requirements on both CoA proxies and
   RADIUS proxies.  For the purpose of this section, we assume that each
   RADIUS proxy shares a common administration with a corresponding CoA
   proxy and that the two systems can communicate electronically.
   There is no requirement that these systems be co-located.</t>

        <section title="Security Requirements on Proxies" anchor="section-4.3.1"><t>
   Section&nbsp;6.1 of <xref target="RFC5176"/> has some security requirements on proxies
   that handle CoA&nbhy;Request and Disconnect-Request packets:</t>

<!-- DNE -->
        <t><list><t>
      ... a proxy MAY perform a "reverse path forwarding" (RPF) check to verify that a Disconnect-Request or
      CoA&nbhy;Request originates from an authorized Dynamic Authorization
      Client.</t>
        </list>
        </t>

        <t>
   We strengthen that requirement by saying that a proxy MUST perform a
   reverse path forwarding check to verify that a CoA packet
   originates from an authorized Dynamic Authorization Client.  Without
   this check, a proxy may forward packets from misconfigured or
   malicious parties and thus contribute to the problem instead of
   preventing it.  Where the check fails, the proxy MUST return a NAK
   packet that contains an Error&nbhy;Cause Attribute having value 502
   ("Request Not Routable").</t>

        <t>
   Proxies that record user session information SHOULD verify the
   contents of a received CoA packet against the recorded data for that
   user session.  If the proxy determines that the information in the
   packet does not match the recorded user session, it SHOULD return a
   NAK packet that contains an Error&nbhy;Cause Attribute having value 503
   ("Session Context Not Found").  These checks cannot be mandated due
   to the fact that <xref target="RFC5176"/> offers no advice on which
   attributes are used to identify a user's session.</t>

        <t>
   Because a RADIUS proxy will see Access-Request and
   Accounting-Request packets, we recognize that it will have sufficient information to
   forge CoA packets.  The RADIUS proxy will thus have the ability to
   subsequently disconnect any user who was authenticated through
   itself.</t>

        <t>
   We suggest that the real-world effect of this security problem is
   minimal.  RADIUS proxies can already return Access-Accept or
   Access&nbhy;Reject for Access-Request packets and can change authorization
   attributes contained in an Access-Accept.  Allowing a proxy to change
   (or disconnect) a user session post-authentication is not
   substantially different from changing (or refusing to connect) a user
   session during the initial process of authentication.</t>

        <t>
   The biggest problem is that there are no provisions in RADIUS for
   "end-to-end" security.  That is, the visited network and home network
   cannot communicate privately in the presence of proxies.  This
   limitation originates from the design of RADIUS for Access-Request
   and Accounting-Request packets.  That limitation is then carried over
   to CoA&nbhy;Request and Disconnect-Request packets.</t>

        <t>
   We therefore cannot prevent proxies or home servers from forging CoA
   packets.  We can only create scenarios where that forgery is hard to
   perform, is likely to be detected, and/or has no effect.</t>

        </section>

        <section title="Filtering Requirements on Proxies" anchor="section-4.3.2"><t>
   Section&nbsp;2.3 of <xref target="RFC5176"/> makes the following requirement for CoA
   servers:</t>

<!-- DNE -->
        <t><list>
         <t>In CoA-Request and Disconnect-Request packets, all attributes
         MUST be treated as mandatory.</t>

        </list>
        </t>

        <t>
   This requirement is too stringent for a CoA proxy.  Only the final
   CoA server (i.e., NAS) can decide which attributes are
   mandatory and which are not.</t>

        <t>
   Instead, in the case of a CoA proxy, we say that all attributes
   MUST&nbsp;NOT be treated as mandatory.  Proxies implementing this
   specification MUST perform proxying based on Operator-Name.  Other schemes
   are possible but are not discussed here.  Proxies SHOULD forward all packets
   either "as&nbsp;is" or with minimal changes.</t>

        <t>
   We note that some NAS implementations currently treat signaling
   attributes as mandatory.  For example, some NAS implementations will
   NAK any CoA packet that contains a Proxy-State attribute.  While this
   behavior is based on a straightforward reading of the above text, it
   causes problems in practice.</t>

        <t>
   We update Section&nbsp;2.3 of <xref target="RFC5176"/> as follows: in CoA&nbhy;Request and
   Disconnect-Request packets, the NAS MUST NOT treat as mandatory any
   attribute that is known to not affect the user's session -- for
   example, the Proxy-State attribute.  Proxy-State is an attribute used
   for proxy-to-proxy signaling.  It cannot affect the user's session,
   and therefore Proxy-State (and similar attributes) MUST be ignored by
   the NAS.</t>

        <t>
   When Operator-Name and/or Operator-NAS-Identifier are received by a
   proxy, the proxy MUST pass those attributes through unchanged.  This
   requirement applies to all proxies, including proxies that forward any
   or all of Access-Request, Accounting-Request, CoA&nbhy;Request, and
   Disconnect-Request packets.</t>

        <t>
   All attributes added by a RADIUS proxy when sending packets from the
   visited network to the home network MUST be removed by the
   corresponding CoA proxy from packets traversing the reverse path.
   That is, any editing of attributes that is done on the "forward" path
   MUST be undone on the "reverse" path.</t>

        <t>
   The result is that a NAS will only ever receive CoA packets that
   either contain (1)&nbsp;attributes sent by the NAS to its local RADIUS
   server or (2)&nbsp;attributes that are sent by the home server in
   order to perform a change of authorization.</t>

        <t>
   Finally, we extend the above requirement not only to Operator-Name
   and Operator-NAS-Identifier but also to any future attributes that
   are added for proxy-to-proxy signaling.</t>

        </section>

        </section>

        </section>

        <section title="Functionality" anchor="section-5"><t>
   This section describes how the two attributes work together to permit
   CoA proxying.</t>

        <section title="User Login" anchor="section-5.1">
   <t>
   In this scenario, we follow a roaming user who is attempting to log&nbsp;in
   to a visited network.  The login attempt is done via a NAS in the
   visited network.  That NAS will send an Access-Request packet to the
   visited RADIUS server.  The visited RADIUS server will see that the
   user is roaming and will add an Operator-Name attribute, with value
   "1" followed by its own realm name, e.g., "1example.com".  The
   visited RADIUS server MAY also add an Operator-NAS-Identifier
   attribute.  The
   NAS identification attributes are also edited, as required by <xref target="section-3.4"/>, above.</t>

        <t>
   The visited server will then proxy the authentication request to an
   upstream server.  That server may be the home server, or it may be a
   proxy.  In the case of a proxy, the proxy will forward the packet
   until the packet reaches the home server.</t>

        <t>
   The home server will record the Operator-Name and Operator-NAS-
   Identifier attributes, along with other information about the user's session, if
   those attributes are present in a packet.</t>

        </section>

        <section title="CoA Proxying" anchor="section-5.2"><t>
   At some later point in time, the home server determines that
   (1)&nbsp;a&nbsp;user session should have its authorization changed or
   (2)&nbsp;the&nbsp;user should be disconnected.
   The home server looks up the Operator-Name and
   Operator-NAS-Identifier attributes, along with other user session identifiers as described in
   <xref target="RFC5176"/>.  The home server then looks up the realm from the
   Operator-Name attribute in the logical AAA routing table, in order to
   find the next&nbhy;hop CoA server for that realm (which may be a proxy).
   The CoA&nbhy;Request is then sent to that CoA server.</t>

        <t>
   The CoA server receives the request and, if it is a proxy, performs a
   lookup similar to the lookup done by the home server.  The packet is then
   proxied repeatedly until it reaches the visited network.</t>

        <t>
   If the proxy cannot find a destination for the request or if no
   Operator-Name attribute exists in the request, the proxy will return
   a CoA&nbhy;NAK with Error&nbhy;Cause 502 ("Request Not Routable").</t>

        <t>
   The visited network will receive the CoA-Request packet and will use
   the Operator-NAS-Identifier attribute (if available) to determine
   which local CoA server (i.e., NAS) the packet should be sent to.  If
   there is no Operator-NAS-Identifier attribute, the visited network may
   use other means to locate the NAS, such as consulting a local
   database that tracks user sessions.</t>

        <t>
   The Operator-Name and Operator-NAS-Identifier attributes are then
   removed from the packet; one of NAS-IP-Address, NAS-IPv6-Address,
   or NAS-Identifier is added to the packet; and the packet is then sent
   to the CoA server.</t>

        <t>
   If no CoA server can be found, the visited network returns a CoA&nbhy;NAK
   with Error&nbhy;Cause 403 ("NAS Identification Mismatch").</t>

        <t>
   Any response from the CoA server (NAS) is returned to the home
   network via the normal method of returning responses to requests.</t>

        </section>

        </section>

        <section title="Security Considerations" anchor="section-6"><t>
   This specification incorporates by reference Section&nbsp;11 of
   <xref target="RFC6929"/>.  In short, RADIUS has many known issues;
   those issues are discussed in detail in <xref target="RFC6929"/> and do not
   need to be repeated here.</t>

        <t>
   This specification adds one new attribute and defines new behavior
   for RADIUS proxying.  As this behavior mirrors existing RADIUS
   proxying, we do not believe that it introduces any new security
   issues.  We note, however, that RADIUS proxying has many
   inherent security issues.</t>

        <section title="RADIUS Security and Proxies" anchor="section-6.1"><t>
   The requirement that packets be signed with a shared secret means
   that a CoA packet can only be received from a trusted party or,
   transitively, received from a third party via a trusted party.  This
   security provision of the base RADIUS protocol makes it impossible
   for untrusted parties to affect the user's session.</t>

        <t>
   When RADIUS proxying is performed, all packets are signed on a
   hop&nbhy;by&nbhy;hop basis.  Any intermediate proxy can therefore forge
   packets, replay packets, or modify the contents of any packet.
Any system receiving correctly signed packets must accept them at face value
and is unable to detect any forgery, replay, or modifications.
  As a result, the secure operation of such a
   system depends largely on trust instead of on technical means.</t>

        <t>
   CoA packet proxying has all of the same issues as those noted above.  We
   note that the proxies that see and can modify CoA packets are
   generally the same proxies that can see or modify Access-Request and
   Accounting-Request packets.  As such, there are few additional
   security implications in allowing CoA proxying.</t>

        <t>
   The main security implication that remains is that home networks now have
   the ability to disconnect or change the authorization of users in a
   visited network.  As this capability is only enabled when mutual
   agreement is in place, and only for those parties who can already
   control user sessions, there are no new security issues with
   this specification.</t>

        </section>

        <section title="Security of the Operator-NAS-Identifier Attribute" anchor="section-6.2"><t>
   Nothing in this specification depends on the security of the
   Operator-NAS-Identifier attribute.  The entire process would work
   exactly the same if the Operator-NAS-Identifier attribute simply contained the
   NAS IP address that is hosting the user's session.  The only real
   downside in that situation would be that external parties would see
   some additional private information about the visited network.  They
   would still, however, be unable to leverage that information to do
   anything malicious.</t>

        <t>
   The main reason to use an opaque token for the Operator-NAS-
   Identifier attribute is that there is no compelling reason to make the
   information public.  We therefore recommend that the value be simply
   an opaque token.  We also state that there is no requirement for
   integrity protection or replay detection of this attribute.  The rest
   of the RADIUS protocol ensures that modification or replay of the
   Operator-NAS-Identifier attribute will either have no effect or have the
   same effect as if the value had not been modified.</t>

        <t>
   Trusted parties can modify a user's session on the NAS only when they
   have sufficient information to identify that session.  In practice,
   this limitation means that those parties already have access to the
   user's session information.  In other words, those parties are the
   proxies who are already forwarding Access-Request and Accounting-Request
   packets.</t>

        <t>
   Since those parties already have the ability to see and modify all of
   the information about a user's session, there is no additional
   security issue with allowing them to see and modify CoA packets.</t>

        <t>
   In short, any security issues with the contents of Operator-NAS-
   Identifier are largely limited by the security of the underlying
   RADIUS protocol.  This limitation means that it does not matter how
   the values of Operator-NAS-Identifier are created, stored, or used.</t>

        </section>

        </section>

        <section title="IANA Considerations" anchor="section-7"><t>

   Per <xref target="section-3.4"/> of this document, IANA has allocated one
   new RADIUS attribute (the Operator-NAS-Identifier attribute) from the
   "short extended space" of the "RADIUS Attribute Types" registry
   as follows:</t>

        <figure><artwork><![CDATA[
   Value: 241.8
   Description: Operator-NAS-Identifier
   Data Type: string
   Reference: RFC 8559
]]></artwork>
        </figure>
        </section>

        </middle>

        <back>
        <references title="Normative References">
        &RFC2119;
        &RFC2865;
        &RFC5080;
        &RFC5176;
        &RFC5580;
        &RFC6929;
        &RFC7542;
        &RFC8044;
        &RFC8174;
        </references>

        <references title="Informative References">
        &RFC2866;
        </references>
        </back>
  </rfc>
