<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 SYSTEM 'reference.RFC.2119.xml'>
<!ENTITY rfc791 SYSTEM 'reference.RFC.0791.xml'>
<!ENTITY rfc2131 SYSTEM 'reference.RFC.2131.xml'>
<!ENTITY rfc2132 SYSTEM 'reference.RFC.2132.xml'>
<!ENTITY rfc3315 SYSTEM 'reference.RFC.3315.xml'>
<!ENTITY rfc3633 SYSTEM 'reference.RFC.3633.xml'>
<!ENTITY rfc3925 SYSTEM 'reference.RFC.3925.xml'>
<!ENTITY rfc3942 SYSTEM 'reference.RFC.3942.xml'>
<!ENTITY rfc4086 SYSTEM 'reference.RFC.4086.xml'>
<!ENTITY rfc4361 SYSTEM 'reference.RFC.4361.xml'>
<!ENTITY rfc4702 SYSTEM 'reference.RFC.4702.xml'>
<!ENTITY rfc4704 SYSTEM 'reference.RFC.4704.xml'>
<!ENTITY rfc4861 SYSTEM 'reference.RFC.4861.xml'>
<!ENTITY rfc4941 SYSTEM 'reference.RFC.4941.xml'>
<!ENTITY rfc4578 SYSTEM 'reference.RFC.4578.xml'>
<!ENTITY rfc6059 SYSTEM 'reference.RFC.6059.xml'>
<!ENTITY rfc6355 SYSTEM 'reference.RFC.6355.xml'>
<!ENTITY rfc7217 SYSTEM 'reference.RFC.7217.xml'>
<!ENTITY rfc7618 SYSTEM 'reference.RFC.7618.xml'>
<!ENTITY rfc7721 SYSTEM 'reference.RFC.7721.xml'>
<!ENTITY rfc7819 SYSTEM 'reference.RFC.7819.xml'>
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments='yes' ?>
<?rfc inline='yes' ?>

<rfc category="std" number="7844" ipr="trust200902" submissionType="IETF" consensus="yes">

<front>
    <title abbrev="DHCP Anonymity Profiles">
      Anonymity Profiles for DHCP Clients
    </title>

   <author fullname="Christian Huitema" initials="C." surname="Huitema">
      <organization>Microsoft</organization>
      <address>
        <postal>
          <street> </street>
          <city>Redmond</city>
          <code>98052</code>
          <region>WA</region>
          <country>United States</country>
        </postal>
        <email>huitema@microsoft.com</email>
      </address>
    </author>

    <author fullname="Tomek Mrugalski" initials="T." surname="Mrugalski">
      <organization abbrev="ISC">Internet Systems Consortium,
      Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <region>CA</region>
          <code>94063</code>
          <country>United States</country>
        </postal>
        <email>tomasz.mrugalski@gmail.com</email>
      </address>
    </author>

    <author fullname="Suresh Krishnan" initials="S." surname="Krishnan">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>8400 Decarie Blvd.</street>
          <city>Town of Mount Royal</city>
          <region>QC</region>
          <country>Canada</country>
        </postal>
        <phone>+1 514 345 7900 x42871</phone>
        <email>suresh.krishnan@ericsson.com</email>
      </address>
    </author>

    <date month="May" year="2016" />

<keyword>DHCP</keyword>
<keyword>DHCPv4</keyword>
<keyword>DHCPv6</keyword>
<keyword>pervasive monitoring</keyword>
<keyword>fingerprinting</keyword>
<keyword>privacy</keyword>
<keyword>Anonymity</keyword>
<keyword>MAC Address Randomization</keyword>
<keyword>Privacy</keyword>
<keyword>Surveillance</keyword>

    <abstract>
        <t> 
Some DHCP options carry unique identifiers. These identifiers can enable
device tracking even if the device administrator takes care of randomizing
other potential identifications like link-layer addresses or IPv6 addresses.
The anonymity profiles are designed for clients that wish to remain anonymous
to the visited network. The profiles provide guidelines on the composition
of DHCP or DHCPv6 messages, designed to minimize disclosure of identifying
information.
        </t>
    </abstract>
</front>

<middle>
<section title="Introduction">
<t>
There have been reports of systems that would monitor the wireless connections
of passengers at Canadian airports <xref target="CNBC" />. We can assume that
these are either fragments or trial runs of a wider system that would attempt
to monitor Internet users as they roam through wireless access points and
other temporary network attachments. We can also assume that
privacy-conscious users will attempt to evade this monitoring --
for example, by ensuring that low-level identifiers such as link&nbhy;layer
addresses are "randomized", so that the devices do not broadcast
the same unique identifier in every location that they visit.
</t>
<t>
Of course, link-layer MAC (Media Access Control) addresses are not the only
way to identify a device. As soon as it connects to a remote network, the
device may use DHCP and DHCPv6 to obtain network parameters. The analysis of
DHCP and DHCPv6 options shows that parameters of these protocols can reveal
identifiers of the device, negating the benefits of link&nbhy;layer address
randomization. This is documented in detail in <xref target = "RFC7819"/>
and <xref target="RFC7824"/>. The natural reaction is to restrict the
number and values of such parameters in order to minimize disclosure.
</t>
<t>
In the absence of a common standard, different system developers are likely
to implement this minimization of disclosure in different ways. Monitoring
entities could then use the differences to identify the software version
running on the device. The proposed anonymity profiles provide a common
standard that minimizes information disclosure, including the disclosure of
implementation identifiers.
</t>

<section title="Requirements">
<t>
  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
  "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
  document are to be interpreted as described in <xref target="RFC2119" />.
</t>
</section>

</section>
<section title="Application Domain" anchor="appdomain" >
<t>
Mobile nodes can be tracked using multiple identifiers, the most prominent
being link&nbhy;layer addresses, a.k.a.&nbsp;MAC addresses. For example, when
devices use Wi&nbhy;Fi connectivity, they place the MAC address in the header
of all the packets that they transmit. Standard implementations of Wi&nbhy;Fi
use unique 48&nbhy;bit link&nbhy;layer addresses, assigned to the devices
according to procedures defined by IEEE 802. Even when the Wi&nbhy;Fi packets
are encrypted, the portion of the header containing the addresses will be sent
in cleartext. Tracking devices can "listen to the airwaves" to find out what
devices are transmitting near them. 
</t>
<t>
We can easily imagine that the MAC addresses can be correlated with other
data, e.g., cleartext names and cookies, to build a registry linking MAC
addresses to the identity of devices' owners. Once that correlation is done,
tracking the MAC address is sufficient to track individual people, even when
all application data sent from the devices is encrypted. Link&nbhy;layer
addresses can also be correlated with IP addresses of devices, negating the
potential privacy benefits of IPv6 "privacy" addresses. Privacy advocates have
reasons to be concerned.
</t>
<t>
The obvious solution is to "randomize" the MAC address. Before connecting to a
particular network, the device replaces the MAC address with a randomly drawn
48&nbhy;bit value. Link&nbhy;layer address randomization was successfully
tried at the IETF meeting in Honolulu in November&nbsp;2014
<xref target="IETFMACRandom" /> and in subsequent meetings
<xref target="IETFTrialsAndMore"/>; it is studied in the IEEE 802 EC Privacy
Recommendation Study Group <xref target="IEEE802PRSG"/>. However, we have to
consider the linkage between link&nbhy;layer addresses, DHCP identifiers,
and IP addresses.
</t>
<section title="MAC Address Randomization Hypotheses" >
<t>
There is not yet an established standard for randomizing link&nbhy;layer
addresses. Various prototypes have tried different strategies, such&nbsp;as:
</t>
<t>
<list style="hanging">
<t hangText="Per connection:">Configure a random link&nbhy;layer address at
the time of connecting to a network, e.g., to a specific Wi&nbhy;Fi SSID
(Service Set Identifier), and keep it for the duration of the connection.
</t>
<t hangText="Per network:">Same as "per connection", but always use the same
link&nbhy;layer address for the same network -- different, of course, from
the addresses used in other networks. 
</t>
<t hangText="Time interval:">Change the link&nbhy;layer address at regular
time intervals.
</t>
</list>
</t>

<t>
In practice, there are many reasons to keep the link&nbhy;layer address constant for 
the duration of a link&nbhy;layer connection, as in the "per&nbsp;connection" 
or "per network" variants. In Wi&nbhy;Fi networks, changing the
link&nbhy;layer address requires dropping the existing Wi&nbhy;Fi connection
and then re&nbhy;establishing it, which implies repeating the connection
process and associated procedures. The IP addresses will change, which means
that all required TCP connections will have to be re&nbhy;established. If the
network access is provided through a NAT, changing IP addresses also means that
the NAT traversal procedures will have to be restarted. This means a lot of
disruption. At the same time, an observer on the network will easily notice
that a station left, another came in just after that, and the new one
appears to be communicating with the same set of IP addresses as the old
one. This provides for easy correlation.
</t>
<t>
The anonymity profiles pretty much assume that the link&nbhy;layer address
randomization follows the "per connection" or "per network" strategies, 
or a variant of the "time interval" strategy in which the interval has about
the same duration as the average connection. 
</t>
</section>
<section title="MAC Address Randomization and DHCP">
<t>
From a privacy point of view, it is clear that the link&nbhy;layer address, IP
address, and DHCP identifier shall evolve in synchrony. For example, if the
link&nbhy;layer address changes and the DHCP identifier stays constant, then
it is really easy to correlate old and new link&nbhy;layer addresses, either
by listening to DHCP traffic or by observing that the IP address remains
constant, since it is tied to the DHCP identifier. Conversely, if the DHCP
identifier changes but the link&nbhy;layer address remains constant, the old
and new identifiers and addresses can be correlated by listening to L2
traffic. The procedures documented in the following sections construct DHCP
identifiers from the current link&nbhy;layer address, automatically providing
for this synchronization.
</t>
<t>
The proposed anonymity profiles solve this synchronization issue by
deriving most identifiers from the link&nbhy;layer address and by generally
making sure that DHCP parameter values do not remain constant after an
address change.
</t>
</section>

<section title="Radio Fingerprinting" >
<t>
MAC address randomization solves the trivial monitoring problem in which
someone just uses a Wi&nbhy;Fi scanner and records the MAC addresses seen
on the air. DHCP anonymity solves the more elaborate scenario in which
someone monitors link&nbhy;layer addresses and identities used in DHCP at
the access point or DHCP server. But these are not the only ways to track a
mobile device.
</t>
<t>
Radio fingerprinting is a process that identifies a radio transmitter by the
unique "fingerprint" of its signal transmission, i.e., the tiny differences
caused by minute imperfections of the radio transmission hardware. This can be
applied to diverse types of radios, including Wi&nbhy;Fi as described,
for example, in <xref target="WiFiRadioFingerprinting" />. No amount of
link&nbhy;layer address randomization will protect against such techniques. Protections may exist, but they are outside the scope of the present document. 
</t>
<t>
On the other hand, we should not renounce randomization just because radio
fingerprinting exists. The radio fingerprinting techniques are harder to
deploy than just recording link&nbhy;layer addresses with a scanner.
Such techniques can only track devices for which the fingerprints are known
and thus have a narrower scope of application than mass monitoring of
addresses and DHCP parameters.
</t>
</section>

<section title="Operating System Fingerprinting" >
<t>
When a standard like DHCP allows for multiple options, different implementers
will make different choices for the options that they support or the values
they choose for the options. Conversely, monitoring the options and values
present in DHCP messages reveals these differences and allows for "operating
system fingerprinting", i.e., finding the type and version of software that a
particular device is running. Finding these versions provides some information
about the device's identity and thus goes against the goal of anonymity.
</t>
<t>
The design of the anonymity profiles attempts to minimize the number of
options and the choice of values, in order to reduce the possibilities of
operating system fingerprinting.
</t>
</section>
<section title="No Anonymity Profile Identification" anchor="desire" >
<t>
Reviewers of the anonymity profiles have sometimes suggested adding an option
to explicitly identify the profiles as "using the anonymity option". One
suggestion is that the client tell the server about its desire to remain
anonymous, so that a willing server could cooperate and protect the
client's privacy. Another possibility would be to use a specific
privacy-oriented construct, such as, for example, a new type of
DHCP Unique Identifier (DUID) for a temporary DUID that would be changing
over time. 
</t>
<t>
This is not workable in a large number of cases, as it is possible that the
network operator (or other entities that have access to the operator's
network) might be actively participating in surveillance and
anti&nbhy;privacy, willingly or not. Declaring a preference for
anonymity is a bit like walking around with a Guy Fawkes mask.
(See <xref target="GuyFawkesMask"/> for an explanation of this usage.)
When anonymity is required, it is generally not a good idea to stick out
of the crowd. Simply revealing the desire for privacy could cause the
attacker to react by triggering additional surveillance or monitoring
mechanisms. Therefore, we feel that it is preferable to not disclose
one's desire for privacy. 
</t>
<t>
This preference leads to some important implications. In particular, we make
an effort to make the mitigation techniques difficult to distinguish from
regular client behaviors, if at all possible.</t>
</section>

<section title="Using the Anonymity Profiles" anchor="profileUse">
<t>
There are downsides to randomizing link&nbhy;layer addresses and DHCP
identifiers. By definition, randomization will break management procedures
that rely on tracking link&nbhy;layer addresses. Even if this is not too much
of a concern, we have to be worried about the frequency of link&nbhy;layer
address randomization. Suppose, for example, that many devices would get new
random link&nbhy;layer addresses at short intervals, maybe every few
minutes. This would generate new DHCP requests in rapid succession, with a
high risk of exhausting DHCPv4 address pools. Even with IPv6, there would
still be a risk of increased neighbor discovery traffic and bloating of
various address tables. Implementers will have to be cautious when programming
devices to use randomized MAC addresses. They will have to carefully choose
the frequency with which such addresses will be renewed.
</t>

<t>
This document only provides guidelines for using DHCP when clients care about
privacy. We assume that the request for anonymity is materialized by the
assignment of a randomized link&nbhy;layer address to the network
interface. Once that decision is made, the following guidelines will avoid
leakage of identity in DHCP parameters or in assigned addresses.
</t>
<t>
There may be rare situations where the clients want to remain anonymous to
attackers but not to the DHCP server.  These clients should still use
link&nbhy;layer address randomization to hide from observers, as well as
some form of encrypted communication to the DHCP server. This scenario is
out of scope for this document.

</t>
<t>
To preserve anonymity, the clients need to not use stable values for the
client identifiers. This is clearly a trade&nbhy;off, because a stable client
identifier guarantees that the client will receive consistent parameters over
time. An example is given in <xref target="RFC7618" />, where the client
identifier is used to guarantee that the same client will always get the same
combination of IP address and port range. Static clients benefit most from
stable parameters and often can already be identified by
physical-connection-layer parameters. These static clients will normally not
use the anonymity profiles. Mobile clients, in contrast, have the option of
using the anonymity profiles in conjunction with <xref target="RFC7618" /> if
they are more concerned with privacy protection than with stable parameters.
</t>
</section>

<section title="What about privacy for DHCP servers?" anchor="serverPrivacy" >
<t>
This document only provides recommendations for DHCP clients. The main targets
are DHCP clients used in mobile devices. Such devices are tempting targets
for various monitoring systems, so there is an urgent need to provide them
with a simple anonymity solution. We can argue that some mobile devices embed
DHCP servers and that providing solutions for such devices is also quite
important. Two plausible examples would be a DHCP server for a car network and
a DHCP server for a mobile hot spot. However, mobile servers get a lot of
privacy protection through the use of access control and link&nbhy;layer
encryption. Servers may disclose information to clients through DHCP, but they
normally only do that to clients that have passed the link&nbhy;layer access
control and have been authorized to use the network services. This arguably
makes solving the server problem less urgent than solving the client problem.
</t>
<t>
Server privacy issues are presented in <xref target="RFC7819" /> and
<xref target="RFC7824" />. Mitigation of these issues is left for
further study.
</t>
</section>
</section>

<section title="Anonymity Profile for DHCPv4" anchor="anonymousV4" >
<t>
Clients using the DHCPv4 anonymity profile limit the disclosure of information
by controlling the header parameters and by limiting the number and values of
options. The number of options depends on the specific DHCP message:
</t>
<t>
<list style="hanging">
<t hangText="DHCPDISCOVER:"> The anonymized DHCPDISCOVER messages 
MUST contain the Message Type option, MAY contain the Client Identifier option,
and MAY contain the Parameter Request List option. It SHOULD NOT contain any
other option.
</t>
<t hangText="DHCPREQUEST:"> The anonymized DHCPREQUEST messages 
MUST contain the Message Type option, MAY contain the Client Identifier option,
and MAY contain the Parameter Request List option. If the message is in
response to a DHCPOFFER, it MUST contain the corresponding Server Identifier
option and the Requested IP address option. If the message is not in response
to a DHCPOFFER, it MAY contain a Requested IP address option as explained in
<xref target="requestedIP" />. It SHOULD NOT contain any other option.
</t>
<t hangText="DHCPDECLINE:"> The anonymized DHCPDECLINE messages 
MUST contain the Message Type option, the Server Identifier option, and the
Requested IP address option; and MAY contain the Client Identifier option.
</t> 
<t hangText="DHCPRELEASE:"> The anonymized DHCPRELEASE messages 
MUST contain the Message Type option and the Server Identifier option, and 
MAY contain the Client Identifier option.
</t>
<t hangText="DHCPINFORM:"> The anonymized DHCPINFORM messages 
MUST contain the Message Type option, MAY contain the Client Identifier option,
and MAY contain the Parameter Request List option. It SHOULD NOT contain any
other option.
</t>
</list>
</t>
<t>
Header fields and option values SHOULD be set in accordance with the DHCP
specification, but some header fields and option values SHOULD be constructed
per the following guidelines.
</t>
<t>
The inclusion of the Host Name and Fully Qualified Domain Name (FQDN)
options in DHCPDISCOVER, DHCPREQUEST, or DHCPINFORM messages is discussed
in Sections&nbsp;<xref target="hostNameOption" format="counter"/> and
<xref target="fqdnv4" format="counter"/>.
</t>

<section title="Avoiding Fingerprinting" anchor="finger4" >
<t>
There are many choices for implementing DHCPv4 messages. Clients can choose to
transmit a specific set of options, pick a particular encoding for these
options, and transmit options in different orders. These choices can be used
to fingerprint the client.  
</t>
<t>
The following sections provide guidance on the encoding of options and
fields within the packets. However, this guidance alone may not be
sufficient to prevent fingerprinting from revealing the device type,
the vendor name, or the OS type and specific version. Fingerprinting may
also reveal whether the client is using the anonymity profile.
</t>
<t>
The client intending to protect its privacy SHOULD limit the subset of options
sent in messages to the subset listed in the remaining subsections.
</t>
<t>
The client intending to protect its privacy SHOULD randomize the ordering
of options before sending any DHCPv4 message. If this random ordering cannot
be implemented, the client MAY order the options by option code number
(lowest to highest).
</t>
</section>

<section title="Client IP Address Field" >
<t>
Four octets in the header of the DHCP messages carry the "Client IP address"
(ciaddr) as defined in <xref target="RFC2131"/>. In DHCP, this field is used
by the clients to indicate the address that they used previously, so that as
much as possible the server can allocate the same address to them.
</t>
<t>
There are very few privacy implications related to sending this address in
the DHCP messages, except in the case of connecting to a different network
than the last network connected to previously.  If the DHCP client somehow
repeated the address used in a previous network attachment, monitoring
services might use the information to tie the two network locations. DHCP
clients SHOULD ensure that the field is cleared when they know that the
network attachment has changed, particularly if the link&nbhy;layer
address is reset by a device's administrator.
</t>
<t>
The clients using the anonymity profile MUST NOT include in the message a
Client IP address that has been obtained with a different link&nbhy;layer
address.
</t>
</section>

<section title="Requested IP Address Option" anchor="requestedIP" >
<t>
The Requested IP address option is defined in <xref target="RFC2132" /> with
code 50. It allows the client to request that a particular IP address be
assigned. This option is mandatory in some protocol messages per <xref
target="RFC2131" /> -- for example, when a client selects an address
offered by a server. However, this option is not mandatory in the DHCPDISCOVER
message. It is simply a convenience -- an attempt to regain the same IP address
that was used in a previous connection. Doing so entails the risk of
disclosing an IP address used by the client at a previous location or with a 
different link&nbhy;layer address. This risk exists for all forms of
IP addresses, public or private, as some private addresses may be used in
a wide scope, e.g., when an Internet Service Provider is using NAT.
</t>
<t>
When using the anonymity profile, clients SHOULD NOT 
use the Requested IP address option in DHCPDISCOVER messages. They
MUST use the option when mandated by DHCP -- for example, in
DHCPREQUEST messages.
</t>
<t>
There are scenarios in which a client connecting to a network remembers
a previously allocated address, i.e., when it is in the INIT&nbhy;REBOOT state.
In that state, any client that is concerned with privacy SHOULD perform a
complete four&nbhy;way handshake, starting with a DHCPDISCOVER, to
obtain a new address lease. If the client can ascertain that this is
exactly the same network to which it was previously connected, and if the
link&nbhy;layer address did not change, the client MAY issue a DHCPREQUEST
to try to reclaim the current address.
</t>

</section>
<section title="Client Hardware Address Field" anchor="clientAddressField" >
<t>
Sixteen octets in the header of the DHCP messages carry the "Client hardware
address" (chaddr) as defined in <xref target="RFC2131"/>. The presence of this
address is necessary for the proper operation of the DHCP service.
</t>
<t>
Hardware addresses, called "link-layer addresses" in many RFCs, can be
used to uniquely identify a device, especially if they follow the
IEEE&nbsp;802 recommendations. If the hardware address is reset to a new
randomized value, the DHCP client SHOULD use the new randomized value
in the DHCP messages.
</t>
</section>
<section title="Client Identifier Option" anchor="dhcpv4ClientId">
<t>
The Client Identifier option is defined in <xref target="RFC2132"/> with
option&nbsp;code&nbsp;61. It is discussed in detail in <xref
target="RFC4361"/>. The purpose of the Client Identifier option is to identify
the client in a manner independent of the link&nbhy;layer address. This is
particularly useful if the DHCP server is expected to assign the same address
to the client after a network attachment is swapped and the link&nbhy;layer
address changes. It is also useful when the same node issues requests through
several interfaces and expects the DHCP server to provide consistent
configuration data over multiple interfaces.
</t>
<t>
The considerations for hardware independence and strong client identity have
an adverse effect on the privacy of mobile clients, because the
hardware-independent unique identifier obviously enables very efficient
tracking of the clients' movements. One option would be to not transmit this
option at all, but this may affect interoperability and will definitely mark
the client as requesting anonymity, exposing it to the risks mentioned in
<xref target="desire" />. 
</t>
<t>

The recommendations in <xref target="RFC4361"/> are very strong, stating,
for example, that "DHCPv4 clients MUST NOT use client identifiers based solely
on layer&nbsp;two addresses that are hard-wired to the layer&nbsp;two device
(e.g., the Ethernet MAC address)." These strong recommendations are in fact a
trade&nbhy;off between ease of management and privacy, and the trade&nbhy;off
should depend on the circumstances.
</t>
<t>
In contradiction to <xref target="RFC4361"/>, when using the anonymity
profile, DHCP clients MUST use client identifiers based solely on the
link&nbhy;layer address that will be used in the underlying
connection. This will ensure that the DHCP client identifier does not
leak any information that is not already available to entities
monitoring the network connection. It will also ensure that a strategy
of randomizing the link&nbhy;layer address will not be nullified by the
Client Identifier option.
</t>
<t>
There are usages of DHCP where the underlying connection is a point-to-point
link, in which case there is no link&nbhy;layer address available to construct
a non-revealing identifier. If anonymity is desired in such networks, the
client SHOULD pick a random identifier that is highly likely to be unique
to the current link, using, for example, a combination of a local secret and
an identifier of the connection. The algorithm for combining secrets and
identifiers, as described in Section&nbsp;5 of <xref target="RFC7217" />,
solves a similar problem. The criteria for the generation of random numbers
are stated in <xref target="RFC4086" />.
</t>
</section>

<section title="Parameter Request List Option" anchor="PRLoption">

<t>The Parameter Request List (PRL) option is defined in <xref
target="RFC2132"/> with option&nbsp;code&nbsp;55. It lists the parameters
requested from the server by the client. Different implementations request
different parameters. <xref target="RFC2132"/> specifies that "the client MAY
list the options in order of preference." In practice, this means that
different client implementations will request different parameters, in
different orders.</t>

<t>The choice of option numbers and the specific ordering of option numbers in
the PRL can be used to fingerprint the client. This may not reveal the
identity of a client but may provide additional information such as the
device type, the vendor name, or the OS type and specific version.
</t>
<t>
The client intending to protect its privacy SHOULD only request a minimal 
number of options in the PRL and SHOULD also randomly shuffle the
ordering of option codes in the PRL. If this random ordering cannot be
implemented, the client MAY order the option codes in the PRL by option
code number (lowest to highest).
</t>

</section>

<section title="Host Name Option" anchor="hostNameOption">
<t>
The Host Name option is defined in <xref target="RFC2132"/> with
option&nbsp;code&nbsp;12. Depending on implementations, the option value can
carry either an FQDN such as "node1984.example.com" or a simple host name
such as "node1984". The host name is commonly used by the DHCP server to
identify the host and also to automatically update the address of the
host in local name services.   
</t>
<t>
FQDNs are obviously unique identifiers, but even simple host names can provide
a significant amount of information on the identity of the device. They are
typically chosen to be unique in the context where the device is most often
used. In a context that contains a substantial number of devices, e.g., in
a large company or a big university, the host name will be a pretty good
identifier of the device, due to the specificity required to ensure uniqueness.
Monitoring services could use that information in conjunction with
traffic analysis and quickly derive the identity of the device's owner.
</t>
<t>
When using the anonymity profile, DHCP clients SHOULD NOT send the Host Name
option. If they choose to send the option, DHCP clients MUST always send a
non&nbhy;qualified host name instead of an FQDN and MUST obfuscate the
host name value.
</t>
<t>
There are many ways to obfuscate a host name. The construction rules SHOULD
guarantee that a different host name is generated each time the
link&nbhy;layer address changes and that the obfuscated host name will not
reveal the underlying link&nbhy;layer address. The construction
SHOULD generate names that are unique enough to minimize collisions in the
local link. Clients MAY use the following algorithm: compute a secure hash of
a local secret and of the link&nbhy;layer address that will be 
used in the underlying connection, and then use the hexadecimal representation
of the first 6&nbsp;octets of the hash as the obfuscated host name.
</t>
<t>
The algorithm described in the previous paragraph generates an easily
recognizable pattern. There is a potential downside to having such a
specific name pattern for hosts that require anonymity (the "sticking out
of the crowd" principle), as explained in <xref target="desire" />. For
this reason, the above algorithm is just a suggestion. 
</t>
</section>
<section title="Client FQDN Option" anchor="fqdnv4" >
<t>
The Client FQDN option is defined in <xref target="RFC4702" /> with option
code 81. This option allows the DHCP clients to advertise to the DHCP server
their FQDN, such as "mobile.example.com". This would allow the DHCP server to
update in the DNS the PTR record for the IP address allocated to the
client. Depending on circumstances, either the DHCP client or the DHCP server
could update in the DNS the A&nbsp;record for the FQDN of the client.
</t>
<t>
Obviously, this option uniquely identifies the client, exposing it to the DHCP
server or to anyone listening to DHCP traffic. In fact, if the DNS record is
updated, the location of the client becomes visible to anyone with DNS lookup
capabilities. 
</t>
<t>
When using the anonymity profile, DHCP clients SHOULD NOT include the
Client FQDN option in their DHCP requests. Alternatively, they MAY include
a special-purpose FQDN using the same host name as in the Host Name option, 
with a suffix matching the connection-specific DNS suffix being advertised by 
that DHCP server.  Having a name in the DNS allows working with legacy systems 
that require one to be there, e.g., by verifying that a forward and
reverse lookup succeeds with the same result.
</t> 
</section>
<section title="UUID/GUID-Based Client Machine Identifier Option" anchor="PXEOption" >
<t>
The UUID/GUID-based (where "UUID" means "Universally Unique Identifier" and
"GUID" means "Globally Unique Identifier") Client&nbsp;Machine Identifier
option is defined in <xref target="RFC4578"/> with option&nbsp;code&nbsp;97.
This option is part of a set of options for the Intel Preboot eXecution
Environment (PXE). The purpose of the PXE system is to perform
management functions on a device before its main OS is operational. The
Client Machine Identifier carries a 16&nbhy;octet GUID that uniquely
identifies the device.
</t>
<t>
The PXE system is clearly designed for devices operating in a controlled 
environment. The main usage of the PXE system is to install a new version of
the operating system through a high&nbhy;speed Ethernet connection. The process
is typically controlled from the user interface during the boot process. 
Common sense seems to dictate that getting a new operating system from an
unauthenticated server at an untrusted location is a really bad idea and
that even if the option was available users would not activate it. In any
case, the option is only used in the "pre&nbhy;boot" environment, and
there is no reason to use it once the system is up and running. 
Nodes visiting untrusted networks MUST NOT send or use the PXE options.
</t>
</section>

<section title="User and Vendor Class DHCP Options">
<t>
Vendor-identifying options are defined in <xref target="RFC2132" /> and
<xref target="RFC3925" />. When using the anonymity profile, DHCPv4 clients
SHOULD NOT use the Vendor-Specific Information option (code&nbsp;43),
the Vendor Class Identifier option (code&nbsp;60), the V&nbhy;I Vendor
Class option (code&nbsp;124), or the V&nbhy;I Vendor-Specific
Information option (code&nbsp;125), as these options potentially reveal
identifying information.
</t>
</section>
</section>
<section title="Anonymity Profile for DHCPv6" anchor="anonymityV6">
<t> 
DHCPv6 is typically used by clients in one of two scenarios: stateful or
stateless configuration. In the stateful scenario, clients use a combination
of Solicit, Request, Confirm, Renew, Rebind, Release, and Decline messages
to obtain addresses and manage these addresses. 
</t>
<t>
In the stateless scenario, clients configure addresses using a combination of
client-managed identifiers and router-advertised prefixes, without involving
the DHCPv6 services. Different ways of constructing these prefixes have
different implications on privacy, which are discussed in <xref
target="DEFAULT-IIDs"/> and <xref target="RFC7721" />. In the stateless
scenario, clients use DHCPv6 to obtain network configuration parameters,
through the Information-request message. 
</t>
<t>
The choice between the stateful and stateless scenarios depends on flag and
prefix options published by the Router Advertisement messages of local
routers, as specified in <xref target="RFC4861"/>. When these options enable
stateless address configuration, hosts using the anonymity profile SHOULD use
stateless address configuration instead of stateful address configuration,
because stateless configuration requires fewer information disclosures than
stateful configuration.
</t>
<t>
When using the anonymity profile, DHCPv6 clients carefully select DHCPv6
options used in the various messages that they send. The list of options that
are mandatory or optional for each message is specified in <xref
target="RFC3315" />. Some of these options have specific implications on
anonymity. The following sections provide guidance on the choice of option
values when using the anonymity profile.
</t>

<section title="Avoiding Fingerprinting" anchor="finger6" >
<t>
There are many choices for implementing DHCPv6 messages. As explained in <xref
target="finger4"/>, these choices can be used to fingerprint the client.  
</t>
<t>
The following sections provide guidance on the encoding of options.
However, this guidance alone may not be sufficient to prevent
fingerprinting from revealing the device type, the vendor name, or the
OS type and specific version. Fingerprinting may also reveal whether
the client is using the anonymity profile.
</t>
<t>
The client intending to protect its privacy SHOULD limit the subset of options
sent in messages to the subset listed in the following sections.
</t>
<t>
The client intending to protect its privacy SHOULD randomize the ordering
of options before sending any DHCPv6 message. If this random ordering
cannot be implemented, the client MAY order the options by option code
number (lowest to highest).
</t>

</section>

      <section title="Do not send Confirm messages, unless really sure about
                      the location" anchor="dhcpv6Confirm">
<t><xref target="RFC3315" /> requires clients to send a
Confirm message when they attach to a new link to verify
whether the addressing and configuration information they
previously received is still valid. This requirement was
relaxed in <xref target="DHCPv6bis" />. When these clients
send Confirm messages, they include any
Identity Associations (IAs) assigned to the interface that
may have moved to a new link, along with the addresses
associated with those IAs. By examining the addresses in the
Confirm message, an attacker can trivially identify the
previous point(s) of attachment.</t>

<t>Clients interested in protecting their privacy SHOULD NOT send
Confirm messages and instead SHOULD directly try to acquire addresses
on the new link. However, not sending Confirm messages can result in
connectivity hiatus in some scenarios, e.g., roaming between two access
points in the same wireless network. DHCPv6 clients that can verify that
the previous link and the current link are part of the same network MAY
send Confirm messages while still protecting their privacy. Such link
identification should happen before DHCPv6 is used, and thus it
cannot depend on the DHCPv6 information used in <xref target="RFC6059"/>.
In practice, the most reliable detection of network attachment is
through link&nbhy;layer security, e.g., <xref target="IEEE8021X" />.
</t>
      </section>

<section title="Client Identifier DHCPv6 Option" anchor="V6ClientId">
<t>
The DHCPv6 Client Identifier option is defined in <xref target="RFC3315"/>
with option&nbsp;code&nbsp;1. The purpose of the Client Identifier option is
to identify the client to the server. The content of the option is a DHCP
Unique Identifier (DUID). One of the primary privacy concerns is that a client
is disclosing a stable identifier (the DUID) that can be used for tracking and
profiling. Three DUID formats are specified in <xref target="RFC3315"/>:
link&nbhy;layer address plus time (DUID-LLT), Vendor-assigned unique ID based
on Enterprise Number, and link&nbhy;layer address. A fourth type,
DUID&nbhy;UUID, is defined in <xref target="RFC6355" />.
</t>
<t>
When using the anonymity profile in conjunction with randomized
link&nbhy;layer addresses, DHCPv6 clients MUST use DUID format
number&nbsp;3 -- link&nbhy;layer address. The value of the
link&nbhy;layer address should be the value currently assigned to the
interface.
</t>
<t>
When using the anonymity profile without the benefit of randomized
link&nbhy;layer addresses, clients that want to protect their privacy
SHOULD generate a new randomized DUID-LLT every time they attach to a new link
or detect a possible link change event. Syntactically, this identifier will
conform to <xref target="RFC3315" />, but its content is meaningless.
The exact details are left up to implementers, but there are several factors
that should be taken into consideration. The DUID type SHOULD be set to 1
(DUID-LLT). Hardware type SHOULD be set appropriately to the hardware
type in question. The link address embedded in the LLT SHOULD be set to a
randomized value. Time SHOULD be set to a random timestamp from the previous
year. Time MAY be set to current time, but this will reveal the fact that the
DUID is newly generated and thus could provide information for device
fingerprinting. The criteria for generating highly unique random numbers are
listed in <xref target="RFC4086" />.
</t>

<section title="Anonymous Information-request">
<t>According to <xref target="RFC3315" />, a DHCPv6 client
includes its client identifier in most of the messages it sends.
There is one exception, however: the client is allowed to omit its
client identifier when sending Information-request messages.</t>

<t>When using stateless DHCPv6, clients wanting to
protect their privacy SHOULD NOT include client identifiers in
their Information-request messages. This will prevent the
server from specifying client-specific options if it is
configured to do so, but the need for anonymity precludes such
options anyway.</t>
</section>
</section>

<section title="Server Identifier Option" anchor="random-duid">
<t>
When using the anonymity profile, DHCPv6 clients SHOULD use the Server
Identifier option (code 2) as specified in <xref target="RFC3315"/>. Clients
MUST only include server identifier values that were received with the current
link&nbhy;layer address, because the reuse of old values discloses information
that can be used to identify the client.
</t>
</section>

<section title="Address Assignment Options" anchor="useIA_NA">
<t>
When using the anonymity profile, DHCPv6 clients might have to use Solicit or
Request messages to obtain IPv6 addresses through the DHCPv6 server.
In DHCPv6, the collection of addresses assigned to a client is identified
by an IA. Clients interested in privacy SHOULD request addresses using
the IA for the Non&nbhy;temporary Addresses option (IA_NA,&nbsp;code&nbsp;3)
<xref target="RFC3315"/>.
</t>
<t>
The IA_NA option includes an IAID parameter that identifies a unique
IA for the interface for which the address is requested. Clients interested in
protecting their privacy MUST ensure that the IAID does not enable client
identification. They also need to conform to the requirement of <xref
target="RFC3315"/> that the IAID for that IA MUST be consistent across
restarts of the DHCPv6 client. We interpret that as requiring that the
IAID MUST be constant for the association, as long as the link&nbhy;layer
address remains constant.
</t>
<t>
Clients MAY meet the privacy, uniqueness, and stability requirements of
the IAID by constructing it as the combination of 1&nbsp;octet encoding
the interface number in the system, and the first 3&nbsp;octets of the
link&nbhy;layer address. 
</t>
<t>
The clients MAY use the IA Address option (code 5) <xref target="RFC3315"/>
but need to balance the potential advantage of "address continuity" versus the
potential risk of "previous address disclosure". A potential solution is to
remove all stored addresses when a link&nbhy;layer address changes and to
only use the IA Address option with addresses that have been explicitly
assigned through the current link&nbhy;layer address. 
</t>

<section title="Obtain Temporary Addresses" anchor="v6Temporary" >
<t><xref target="RFC3315" /> defines a special container
(IA_TA, code 4) for requesting temporary addresses. This is a good
mechanism in principle, but there are a number of issues
associated with it. First, this is not a widely used
feature, so clients depending solely on temporary
addresses may lock themselves out of service. 
Secondly, <xref target="RFC3315" /> does not
specify any lifetime or lease length for temporary
addresses. Therefore, support for renewing temporary addresses
may vary between client implementations, including no support at all.
Finally, by requesting temporary addresses, a client reveals its
desire for privacy and potentially risks countermeasures as described
in <xref target="desire"/>.</t>

<t>Because of these issues, clients interested in their privacy
SHOULD&nbsp;NOT use IA_TA.</t>

<t>The addresses obtained according to <xref target="useIA_NA" /> are
meant to be non&nbhy;temporary, but the anonymity profile uses them as
temporary, and they will be discarded when the link&nbhy;layer address is
changed. They thus meet most of the use cases of the temporary addresses
defined in <xref target="RFC4941"/>. Clients interested in their privacy
should not publish their IPv6 addresses in the DNS or otherwise associate them 
with name services, and thus do not normally need two classes of addresses --
one public, one temporary.</t>

<t>The use of mechanisms to allocate several IPv6 addresses to a client while
preserving privacy is left for further study.</t>

</section>
<section title="Prefix Delegation" anchor="IA_PD" >
<t>
The use of DHCPv6 address assignment option for Prefix Delegation (PD) is
defined in <xref target="RFC3633" />. Because current host OS implementations
do not typically request prefixes, clients that wish to use DHCPv6 PD --
just like clients that wish to use any DHCP or DHCPv6 option that is not 
currently widely used -- should recognize that doing so will serve as a form
of fingerprinting, unless or until the use of DHCPv6 PD by clients becomes
more widespread.
</t>
<t>
The anonymity properties of DHCPv6 PD, which uses IA_PD IAs,
are similar to those of DHCPv6 address assignment using IA_NA IAs.
The IAID could potentially be used to identify the client, and a prefix hint
sent in the IA_PD Prefix option could be used to track the client's previous
location. Clients that desire anonymity and never request more than one 
prefix SHOULD set the IAID value to zero, as authorized in
Section&nbsp;6 of <xref target="RFC3633" />, and SHOULD NOT document any
previously assigned prefix in the IA_PD Prefix option.
</t>
</section>
</section>
<section title="Option Request Option" anchor="OROv6option" >

<t>
The Option Request Option (ORO) is defined in <xref target="RFC3315"/>
with option&nbsp;code&nbsp;6. It specifies the options that the client is
requesting from the server. The choice of requested options and the order of
encoding of these options in the ORO can be used to fingerprint the client.
</t>
<t>
The client intending to protect its privacy SHOULD only request a 
minimal subset of options and SHOULD randomly shuffle the ordering of
option codes in the ORO. If this random ordering cannot be implemented,
the client MAY order the option codes in the ORO by option code number
(lowest to highest).
</t>

<section title="Previous Option Values">
<t>
According to <xref target="RFC3315"/>, the client that includes an ORO
in a Solicit or Request message MAY additionally include instances of
those options that are identified in the ORO, with data values as
hints to the server about parameter values the client would like to
have returned.
</t>
<t>
When using the anonymity profile, clients SHOULD NOT include such instances
of options, because old values might be used to identify the client.
</t>
</section>
</section>
<section title="Authentication Option">
<t>
The purpose of the Authentication option (code 11) <xref target="RFC3315"/>
is to authenticate the identity of clients and servers and the contents of
DHCPv6 messages. As such, the option can be used to identify the client, so
it is incompatible with the stated goal of "client anonymity". DHCPv6
clients that use the anonymity profile SHOULD NOT use the
Authentication option. They MAY use it if they recognize that they are
operating in a trusted environment, e.g., in a workplace network. 
</t>
</section>
<section title="User and Vendor Class DHCPv6 Options">
<t>
When using the anonymity profile, DHCPv6 clients SHOULD NOT use the User Class
option (code 15) or the Vendor Class option (code 16)
<xref target="RFC3315"/>, as these options potentially reveal
identifying information.
</t>
</section>
<section title="Client FQDN DHCPv6 Option">
<t>
The DHCPv6 Client FQDN option is defined in <xref target="RFC4704"/> with
option&nbsp;code&nbsp;39. This option allows the DHCPv6 clients to advertise
to the DHCPv6 server their FQDN, such as "mobile.example.com". When using
the anonymity profile, DHCPv6 clients SHOULD NOT include the Client FQDN
option in their DHCPv6 messages, because it identifies the client. As explained
in <xref target="fqdnv4" />, they MAY use a local-only FQDN by combining a
host name derived from the link&nbhy;layer address and a suffix advertised by
the local DHCPv6 server.</t>
</section>
</section>

<section title="Operational Considerations" anchor="operations" >
  <t>The anonymity profiles have the effect of hiding the client identity from
  the DHCP server. This is not always desirable. Some DHCP servers provide
  facilities like publishing names and addresses in the DNS, or ensuring that
  returning clients get reassigned the same address.</t>
  <t>Clients using an anonymity profile may be consuming more resources. For
  example, when a client changes its link&nbhy;layer address and requests
  a new IP address, the old IP address is still marked as leased by the server.
</t>
  <t>Some DHCP servers will only give addresses to pre&nbhy;registered MAC
  addresses, forcing clients to choose between remaining anonymous and
  obtaining connectivity.</t>
  <t>Implementers SHOULD provide a way for clients to control when the
  anonymity profiles are used and when standard behavior is preferred.
  Implementers MAY implement this control by tying the use of the
  anonymity profiles to that of link&nbhy;layer address randomization.</t>
</section>

<section title="Security Considerations" anchor="secucons">
<t> 
The use of the anonymity profiles does not change the security considerations
of the DHCPv4 or DHCPv6 protocols <xref target="RFC2131"/>
<xref target="RFC3315"/>.


</t>
</section>

</middle>

<back>
<references title="Normative References">
    &rfc2119;
    &rfc2131;
    &rfc3315;
    &rfc3633;
    &rfc4702;
    &rfc4861;
    &rfc4941;
</references>

<references title="Informative References">
    &rfc2132;
    &rfc3925;
    &rfc4086;
    &rfc4361;
    &rfc4578;
    &rfc4704;
    &rfc6059;
    &rfc6355;
    &rfc7217;
    &rfc7618;
    &rfc7819;

<!-- draft-ietf-dhc-dhcpv6-privacy (RFC 7824) -->
<reference anchor='RFC7824' target="http://www.rfc-editor.org/info/rfc7824">
<front>
<title>Privacy Considerations for DHCPv6</title>
<author initials='S' surname='Krishnan' fullname='Suresh Krishnan'>
    <organization />
</author>
<author initials='T' surname='Mrugalski' fullname='Tomek Mrugalski'>
    <organization />
</author>
<author initials='S' surname='Jiang' fullname='Sheng Jiang'>
    <organization />
</author>
<date month='May' year='2016' />
</front>
<seriesInfo name='RFC' value='7824' />
<seriesInfo name='DOI' value='10.17487/RFC7824' />
</reference>

<!-- draft-ietf-6man-default-iids (I-D Exists) -->
<reference anchor='DEFAULT-IIDs'>
<front>
<title>Recommendation on Stable IPv6 Interface Identifiers</title>
<author initials='F' surname='Gont' fullname='Fernando Gont'>
    <organization />
</author>
<author initials='A' surname='Cooper' fullname='Alissa Cooper'>
    <organization />
</author>
<author initials='D' surname='Thaler' fullname='Dave Thaler'>
    <organization />
</author>
<author initials='W' surname='Liu' fullname='Will Liu'>
    <organization />
</author>
<date month='April' year='2016' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-6man-default-iids-11'/>
</reference>

    &rfc7721;

<!-- draft-ietf-dhc-rfc3315bis (I-D Exists) -->
<reference anchor='DHCPv6bis'>
<front>
<title>Dynamic Host Configuration Protocol for IPv6 (DHCPv6) bis</title>
<author initials='T' surname='Mrugalski' fullname='Tomek Mrugalski' role="editor">
    <organization />
</author>
<author initials='M' surname='Siodelski' fullname='Marcin Siodelski'>
    <organization />
</author>
<author initials='B' surname='Volz' fullname='Bernie Volz'>
    <organization />
</author>
<author initials='A' surname='Yourtchenko' fullname='Andrew Yourtchenko'>
    <organization />
</author>
<author initials='M' surname='Richardson' fullname='Michael Richardson'>
    <organization />
</author>
<author initials='S' surname='Jiang' fullname='Sheng Jiang'>
    <organization />
</author>
<author initials='T' surname='Lemon' fullname='Ted Lemon'>
    <organization />
</author>
<date month='March' year='2016' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-dhc-rfc3315bis-04'/>
</reference>

<reference anchor='IEEE8021X' target='http://ieeexplore.ieee.org/servlet/opac?punumber=5409757'>
 <front>
  <title>IEEE Standard for Local and metropolitan area networks - Port-Based Network Access Control</title>
  <author>
   <organization>IEEE</organization>
  </author>
  <date/>
 </front>
 <seriesInfo name='IEEE' value='802.1X-2010' />
 <seriesInfo name='DOI' value='10.1109/ieeestd.2010.5409813' />
</reference>

    <reference anchor="CNBC" target="http://www.cbc.ca/news/politics/csec-used-airport-wi-fi-to-track-canadian-travellers-edward-snowden-documents-1.2517881">
        <front>
            <title>CBC News: CSEC used airport Wi-Fi to track Canadian
            travellers: Edward Snowden documents</title>
            <author initials="G" surname="Weston" fullname="Greg Weston" />
            <author initials="G" surname="Greenwald" fullname="Glenn Greenwald" />
            <author initials="R" surname="Gallagher" fullname="Ryan Gallagher" />
            <date month="January" year="2014" />
        </front>
    </reference>

    <reference anchor="IETFMACRandom" target="http://www.ietf.org/blog/2014/11/mac-privacy/">
        <front>
            <title>MAC Privacy</title>
            <author initials="JC" surname="Zuniga" fullname="Juan Carlos Zuniga" />
            <date month="November" year="2014" />
        </front>
    </reference>

    <reference anchor="WiFiRadioFingerprinting"
        target="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.145.8873">
        <front>
            <title>Wireless Device Identification with Radiometric Signatures</title>
            <author initials="V" surname="Brik" fullname="Vladimir Brik" />
            <author initials="S" surname="Banerjee" fullname="Suman Banerjee" />
            <author initials="M" surname="Gruteser" fullname="Marco Gruteser" />
            <author initials="S" surname="Oh" fullname="Sangho Oh" />
            <date month="September" year="2008" />
        </front>
        <seriesInfo name="DOI" value="10.1.1.145.8873"/>
    </reference>

<reference anchor="IEEE802PRSG" target="http://www.ieee802.org/PrivRecsg/">
<front>
<title>
IEEE 802 EC Privacy Recommendation Study Group
</title>
<author>
<organization>IEEE 802 EC PRSG</organization>
</author>
<date month="February" year="2016" /> 
</front>
</reference>


    <reference anchor="IETFTrialsAndMore" target="http://www.it.uc3m.es/cjbc/papers/pdf/2015_bernardos_cscn_privacy.pdf">
        <front>
            <title>Wi-Fi Internet connectivity and privacy: hiding your tracks on the wireless Internet</title>
            <author initials="CJ" surname="Bernardos" fullname="Carlos J. Bernardos" />
            <author initials="JC" surname="Zuniga" fullname="Juan Carlos Zuniga" />
            <author initials="P" surname="O'Hanlon" fullname="Piers O'Hanlon" />
            <date month="October" year="2015" />
        </front>
    </reference>

    <reference anchor="GuyFawkesMask" target="http://theweek.com/articles/463151/brief-history-guy-fawkes-mask">
        <front>
            <title>A brief history of the Guy Fawkes mask</title>
            <author initials="M" surname="Nickelsburg" fullname="Monica Nickelsburg">
               <organization>The Week</organization>
            </author>
            <date day="3" month="July" year="2013" />
        </front>
</reference>



</references>  

<section title="Acknowledgments" numbered="no">
    <t> 
The inspiration for this document came from discussions in the Perpass mailing
list. Several people provided feedback on this document,
notably Noel Anderson, Brian Carpenter, Lorenzo Colitti, Stephen Farrell,
Nick Grifka, Tushar Gupta, Brian Haberman, Gabriel Montenegro, 
Marcin Siodelski, Dave Thaler, Bernie Volz, and Jun Wu.
    </t>
</section>

</back>
</rfc>


