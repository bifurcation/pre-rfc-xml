<?xml version="1.0" encoding="US-ASCII"?>
<?rfc toc="yes"?>
<?rfc tocdepth="2"?>
<?rfc rfcedstyle="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="no"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<!-- [rfced] Please note that after you have approved the document,
post-xml2rfc changes will be made to update the header and
boilerplate as described in RFC 5741.
-->

<rfc number="5762" category="std" ipr="pre5378Trust200902">
<front>
  <title abbrev="RTP over DCCP"> RTP and the Datagram Congestion Control Protocol (DCCP) </title>
  <author initials="C.S." surname="Perkins" fullname="Colin Perkins">
    <organization abbrev="University of Glasgow"> University of Glasgow </organization>
    <address>
      <postal>
          <street>  Department of Computing Science </street>
	  <city>    Glasgow                         </city>
	  <code>    G12 8QQ                         </code>
	  <country> UK                              </country>
      </postal>
      <email>csp@csperkins.org</email>
    </address>
  </author>
  <date month="April" year="2010" />
  <abstract>
  <t> The Real-time Transport Protocol (RTP) is a widely used transport for
      real-time multimedia on IP networks. The Datagram Congestion Control 
      Protocol (DCCP) is a transport protocol that provides
      desirable services for real-time applications. 


This memo specifies a
      mapping of RTP onto DCCP, along with associated signalling, such that
      real-time applications can make use of the services provided by DCCP.
      </t>

  </abstract>
</front>
<middle>
<!---------------------------------------------------------------------------->
<section anchor="intro" title="Introduction">

<t> The <xref target="RFC3550"> Real-time Transport Protocol (RTP) </xref>
    is widely used in video streaming, telephony, and other real-time
    networked applications. RTP can run over a range of lower-layer
    transport protocols, and the performance of an application using RTP is
    heavily influenced by the choice of lower-layer transport. The
    <xref target="RFC4340"> Datagram Congestion Control Protocol
    (DCCP) </xref> is a transport protocol that provides
    desirable properties for real-time applications running on unmanaged
    best-effort IP networks. 



This memo describes how RTP can be framed for
    transport using DCCP, and discusses some of the implications of such
    a framing. It also describes how the <xref target="RFC4566"> 
    Session Description Protocol (SDP) </xref> can be used to signal such
    sessions. </t>

<t> The remainder of this memo is structured as follows: it begins with
    a rationale for the work in <xref target="rationale"/>, describing
    why a mapping of RTP onto DCCP is needed. Following a description 
    of the conventions used in this memo in <xref target="2119"/>, the
    specification begins in <xref target="framing"/> with the definition 
    of how RTP packets are framed within DCCP.  Associated signalling is
    described in <xref target="sdp"/>.  Security considerations are
    discussed in <xref target="security"/>, and IANA considerations in
    <xref target="iana"/>. </t>

</section>
<!---------------------------------------------------------------------------->
<section anchor="rationale" title="Rationale">

<t> With the widespread adoption of RTP have come concerns that many real-time 
    applications do not implement congestion control, leading to the potential 
    for congestion collapse of the network <xref target="RFC3714"/>. The 
    designers of RTP recognised this issue, stating in RFC 3551 that <xref target="RFC3551"/>:</t>

<t> <list style="empty">
    <t>	If best-effort service is being used, RTP receivers SHOULD monitor
	packet loss to ensure that the packet loss rate is within
	acceptable parameters.  Packet loss is considered acceptable if a
	TCP flow across the same network path and experiencing the same
	network conditions would achieve an average throughput, measured on
	a reasonable timescale, that is not less than the RTP flow is
	achieving.  This condition can be satisfied by implementing
	congestion control mechanisms to adapt the transmission rate (or
	the number of layers subscribed for a layered multicast session),
	or by arranging for a receiver to leave the session if the loss
	rate is unacceptably high.</t>
    </list></t>
    
<t> While the goals are clear, the development of TCP friendly congestion
    control that can be used with RTP and real-time media applications is
    an open research question with many proposals for new algorithms, but
    little deployment experience. </t>

<t> Two approaches have been used to provide congestion control for RTP: 
    1) develop RTP extensions that incorporate congestion control; and
    2) provide mechanisms for running RTP over congestion-controlled
    transport protocols. An example of the first approach can be found 
    in <xref target="I-D.ietf-avt-tfrc-profile"/>, extending RTP to 
    incorporate feedback information such
    that <xref target="RFC5348">TCP Friendly Rate Control (TFRC)
    </xref> can be implemented at the application level.
    This will allow congestion control to be added to existing applications
    without operating system or network support, and it offers the
    flexibility to experiment with new congestion control algorithms as
    they are developed.  Unfortunately, it also passes the complexity of
    implementing congestion control onto application authors, a burden
    which many would prefer to avoid. </t>

<t> The second approach is to run RTP on a lower-layer transport protocol
    that provides congestion control. One possibility is to run RTP over
    TCP, as defined in <xref target="RFC4571"/>, but the reliable nature 
    of TCP and the dynamics of its congestion control algorithm make this
    inappropriate for most interactive real-time applications (the Stream
    Control Transmission Protocol (SCTP) is inappropriate for similar
    reasons).  A better fit for such applications may be to run RTP over
    DCCP, since DCCP offers unreliable packet delivery and a choice of
    congestion control. This gives applications the ability to tailor the
    transport to their needs, taking advantage of better congestion control
    algorithms as they come available, while passing the complexity of
    implementation to the operating system.  If DCCP should come to be
    widely available, it is believed these will be compelling advantages.
    Accordingly, this memo defines a mapping of RTP onto DCCP. </t>

</section>
<!---------------------------------------------------------------------------->
<section anchor="2119" title="Conventions Used in This Memo">

<t> The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in 
    this document are to be interpreted as described in RFC 2119 <xref
    target="RFC2119"/>. </t>

</section>
<!---------------------------------------------------------------------------->
<section anchor="framing" title="RTP over DCCP: Framing">

<t> The following section defines how RTP and RTP Control Protocol (RTCP) packets can be framed
    for transport using DCCP.  It also describes the differences between
    RTP sessions and DCCP connections, and the impact these have on the
    design of applications. </t>

<!-- - - - - - - - - - - - - - - - - - -- - - - - - - - - - - - - - - - - - -->
<section title="RTP Data Packets">

<t> Each RTP data packet MUST be conveyed in a single DCCP datagram. Fields
    in the RTP header MUST be interpreted according to the RTP specification, 
    and any applicable RTP Profile and Payload Format.  Header processing is 
    not affected by DCCP framing (in particular, note that the semantics of
    the RTP sequence number and the DCCP sequence number are not compatible,
    and the value of one cannot be inferred from the other). </t>

<t> A DCCP connection is opened when an end system joins an RTP session,
    and it remains open for the duration of the session. To ensure NAT
    bindings are kept open, an end system SHOULD send a zero-length DCCP-Data 
    packet once every 15 seconds during periods when it has no other data to
    send. This removes the need for <xref target="I-D.wing-avt-rtp-noop">
    RTP no-op packets</xref>, and similar application-level keepalives,
    when using RTP over DCCP.  This application-level keepalive does not
    need to be sent if it is known that the DCCP CCID in use provides a
    transport-level keepalive, or if the application can determine that
    there are no NAT devices on the path. </t>

<t> RTP data packets MUST obey the dictates of DCCP congestion control.
    In some cases, the congestion control will require a sender to send
    at a rate below that which the payload format would otherwise use. 
    To support this, an application could use either a rate-adaptive
    payload format, or a range of payload formats (allowing it to switch 
    to a lower rate format if necessary). Details of the rate adaptation
    policy for particular payload formats are outside the scope of this
    memo (but see <xref target="I-D.ietf-dccp-tfrc-media"/> and
    <xref target="I-D.ietf-dccp-user-guide"/> for guidance). </t>

<t> RTP extensions that provide application-level congestion control
    (e.g., <xref target="I-D.ietf-avt-tfrc-profile"/>) will conflict 
    with DCCP congestion control, and MUST NOT be used. </t>

<t> DCCP allows an application to choose the checksum coverage, using 
    a partial checksum to allow an application to receive packets with
    corrupt payloads. Some RTP Payload Formats (e.g., <xref target="RFC4867"/>)
    can make use of this feature in conjunction with payload-specific
    mechanisms to improve performance when operating in environments with
    frequent non-congestive packet corruption. If such a payload format is
    used, an RTP end system MAY enable partial checksums at the DCCP layer,
    in which case the checksum MUST cover at least the DCCP and RTP
    headers to ensure packets are correctly delivered. Partial checksums
    MUST NOT be used unless supported by mechanisms in the RTP payload
    format.  </t>

</section>
<!-- - - - - - - - - - - - - - - - - - -- - - - - - - - - - - - - - - - - - -->
<section title="RTP Control Packets">

<t> The RTP Control Protocol (RTCP) is used in the standard manner with
    DCCP.  RTCP packets are grouped into compound packets, as described
    in Section 6.1 of <xref target="RFC3550"/>, and each compound RTCP
    packet is transported in a single DCCP datagram. </t> 

<t> The usual RTCP timing rules apply, with the additional constraint
    that RTCP packets MUST obey the DCCP congestion control algorithm
    negotiated for the connection.  This can prevent a participant from
    sending an RTCP packet at the expiration of the RTCP transmission
    timer if there is insufficient network capacity available.  In such
    cases the RTCP packet is delayed and sent at the earliest possible
    instant when capacity becomes available.  The actual time the RTCP
    packet was sent is then used as the basis for calculating the next
    RTCP transmission time. </t>
    
<t> RTCP packets comprise only a small fraction of the total traffic
    in an RTP session. Accordingly, it is expected that delays in their
    transmission due to congestion control will not be common, provided
    the configured nominal "session bandwidth" (see Section 6.2 of <xref
    target="RFC3550"/>) is in line with the bandwidth achievable on the
    DCCP connection. If, however, the capacity of the DCCP connection is
    significantly below the nominal session bandwidth, RTCP packets may
    be delayed enough for participants to time out due to apparent
    inactivity.  In such cases, the session parameters SHOULD be
    re-negotiated to more closely match the available capacity, for example
    by performing a re-invite with an updated "b=" line when using the
    Session Initiation Protocol <xref target="RFC3261"/> for signalling.
    </t>

<t> <list style="empty"> <t> Note: Since the nominal session bandwidth is
    chosen based on media codec capabilities, a session where the nominal
    bandwidth is much larger than the available bandwidth will likely
    become unusable due to constraints on the media channel, and so
    require negotiation of a lower bandwidth codec, before it becomes
    unusable due to constraints on the RTCP channel. </t></list></t>

<t> As noted in Section 17.1 of <xref target="RFC4340"/>, there is the
    potential for overlap between information conveyed in RTCP packets
    and that conveyed in DCCP acknowledgement options.  In general this
    is not an issue since RTCP packets contain media-specific data that
    is not present in DCCP acknowledgement options, and DCCP options
    contain network-level data that is not present in RTCP.  Indeed,
    there is no overlap between the five RTCP packet types defined in
    the RTP specification <xref target="RFC3550"/> and the standard DCCP
    options <xref target="RFC4340"/>. There are, however, cases where
    overlap does occur: most clearly between the Loss RLE Report Blocks
    defined as part of the <xref target="RFC3611">RTCP Extended Reports
    </xref> and the DCCP Ack Vector option.  

If there is overlap between RTCP report
    packets and DCCP acknowledgements, an application SHOULD use either
    RTCP feedback or DCCP acknowledgements, but not both (use of both
    types of feedback will waste available network capacity, but is not
    otherwise harmful).  </t>

</section>
<!-- - - - - - - - - - - - - - - - - - -- - - - - - - - - - - - - - - - - - -->
<section title="Multiplexing Data and Control">

<t> The obvious mapping of RTP onto DCCP creates two DCCP connections for
    each RTP flow: one for RTP data packets and one for RTP control packets. 
    A frequent criticism of RTP relates to the number of ports it uses,
    since large telephony gateways can support more than 32768 RTP flows
    between pairs of gateways, and so run out of UDP ports. In addition,
    use of multiple ports complicates NAT traversal. For these reasons,
    it is RECOMMENDED that the RTP and RTCP traffic for a single RTP
    session is multiplexed onto a single DCCP connection following the
    guidelines in <xref target="RFC5761"/>, where
    possible (it may not be possible in all circumstances, for example
    when translating from an RTP stream over a non-DCCP transport that
    uses conflicting RTP payload types and RTCP packet types). </t>

</section>
<!-- - - - - - - - - - - - - - - - - - -- - - - - - - - - - - - - - - - - - -->
<section title="RTP Sessions and DCCP Connections">

<t> An end system SHOULD NOT assume that it will observe only a single RTP
    synchronisation source (SSRC) because it is using DCCP framing. An RTP
    session can span any number of transport connections, and can include
    RTP mixers or translators bringing other participants into the session.
    The use of a unicast DCCP connection does not imply that the RTP session
    will have only two participants, and RTP end systems SHOULD assume that
    multiple synchronisation sources may be observed when using RTP over
    DCCP, unless otherwise signalled. </t>

<t> An RTP translator bridging multiple DCCP connections to form a single 
    RTP session needs to be aware of the congestion state of each DCCP
    connection, and must adapt the media to the available capacity of each.  
    The Codec Control Messages defined in <xref target="I-D.ietf-avt-avpf-ccm"/>
    may be used to signal congestion state to the media senders, allowing
    them to adapt their transmission.  Alternatively, media transcoding may
    be used to perform adaptation: this is computationally expensive,
    induces delay, and generally gives poor-quality results. Depending on
    the payload, it might also be possible to use some form of scalable coding.
    </t>



<t> A single RTP session may also span a DCCP connection and some other
    type of transport connection. An example might be an RTP over DCCP
    connection from an RTP end system to an RTP translator, with an RTP
    over UDP/IP multicast group on the other side of the translator.
    A second example might be an RTP over DCCP connection that links Public Switched Telephone Network (PSTN)
    gateways. The issues for such an RTP translator are similar to those when
    linking two DCCP connections, except that the congestion control
    algorithms on either side of the translator may not be compatible.
    Implementation of effective translators for such an environment is
    non-trivial. </t>

</section>
<!-- - - - - - - - - - - - - - - - - - -- - - - - - - - - - - - - - - - - - -->
<section title="RTP Profiles">

<t> In general, there is no conflict between new RTP profiles and DCCP
    framing, and most RTP profiles can be negotiated for use over DCCP
    with the following exceptions:

    <list style="symbols">
    <t> An RTP profile that is intolerant of packet corruption may conflict
        with the DCCP partial checksum feature.  An example of this is the
	integrity protection provided by the RTP/SAVP profile, which cannot
	be used in conjunction with DCCP partial checksums. </t>
    <t> An RTP profile that mandates a particular non-DCCP lower-layer 
        transport will conflict with DCCP. </t>
    </list>

    RTP profiles that fall under these exceptions SHOULD NOT be used with
    DCCP unless the conflicting features can be disabled. </t>

<t> Of the profiles currently defined, the <xref target="RFC3551"> RTP
    Profile for Audio and Video Conferences with Minimal Control </xref>,
    the <xref target="RFC3711"> Secure Real-time Transport Protocol </xref>,
    the <xref target="RFC4585"> Extended RTP Profile for RTCP-based
    Feedback </xref>, and the <xref target="RFC5124">
    Extended Secure RTP Profile for RTCP-based Feedback </xref> MAY be used
    with DCCP (noting the potential conflict between DCCP partial checksums
    and the integrity protection provided by the secure RTP variants -- see
    <xref target="security"/>). </t>

</section>
</section>
<!---------------------------------------------------------------------------->
<section anchor="sdp" title="RTP over DCCP: Signalling using SDP">

<t> The <xref target="RFC4566"> Session Description Protocol
    (SDP) </xref> and the <xref target="RFC3264"> offer/answer model </xref> 
    are widely used to negotiate RTP sessions (for example, using the 
    <xref target="RFC3261"> Session Initiation Protocol </xref>). This
    section describes how SDP is used to signal RTP sessions running
    over DCCP. </t>

<!-- - - - - - - - - - - - - - - - - - -- - - - - - - - - - - - - - - - - - -->
<section anchor="sdp-proto" title="Protocol Identification">

<t> SDP uses a media ("m=") line to convey details of the media format and
    transport protocol used. The ABNF syntax of a media line is as follows
    (from <xref target="RFC4566"/>): </t>

<figure>
<artwork type="abnf">
    media-field = %x6d "=" media SP port ["/" integer] SP proto 
                  1*(SP fmt) CRLF
</artwork>
</figure>

<t> The proto field denotes the transport protocol used for the media,
    while the port indicates the transport port to which the media is
    sent. Following <xref target="RFC4571"/> and <xref target="RFC4145"/>,
    this memo defines these five values of the proto field to
    indicate media transported using DCCP: </t>

<figure>
<artwork>
    DCCP
    DCCP/RTP/AVP	
    DCCP/RTP/SAVP
    DCCP/RTP/AVPF
    DCCP/RTP/SAVPF
</artwork>
</figure>

<t> The "DCCP" protocol identifier is similar to the "UDP" and "TCP"
    protocol identifiers and denotes the DCCP transport protocol <xref
    target="RFC4340"/>, but not its upper-layer protocol. An SDP "m=" line
    that specifies the "DCCP" protocol MUST further qualify the application-layer protocol using a "fmt" identifier (the "fmt" namespace is managed
    in the same manner as for the "UDP" protocol identifier). A single DCCP
    port is used, as denoted by the port field in the media line. The
    "DCCP" protocol identifier MUST NOT be used to signal RTP sessions
    running over DCCP; those sessions MUST use a protocol identifier of the
    form "DCCP/RTP/..." as described below.  </t>

<t> The "DCCP/RTP/AVP" protocol identifier refers to RTP using the 
    <xref target="RFC3551"> RTP Profile for Audio and Video Conferences
    with Minimal Control </xref> running over DCCP. </t>

<t> The "DCCP/RTP/SAVP" protocol identifier refers to RTP using the 
    <xref target="RFC3711"> Secure Real-time Transport Protocol </xref>
    running over DCCP. </t>

<t> The "DCCP/RTP/AVPF" protocol identifier refers to RTP using the 
    <xref target="RFC4585"> Extended RTP Profile for RTCP-based Feedback
    </xref> running over DCCP. </t>

<t> The "DCCP/RTP/SAVPF" protocol identifier refers to RTP using the 
    <xref target="RFC5124"> Extended Secure RTP Profile
    for RTCP-based Feedback </xref> running over DCCP. </t>

<t> RTP payload formats used with the "DCCP/RTP/AVP", "DCCP/RTP/SAVP",
    "DCCP/RTP/AVPF", and "DCCP/RTP/SAVPF" protocol identifiers MUST use the
    payload type number as their "fmt" value.  If the payload type number
    is dynamically assigned, an additional "rtpmap" attribute MUST be
    included to specify the format name and parameters as defined by the
    media type registration for the payload format. </t>

<t> DCCP port 5004 is registered for use by the RTP profiles listed above, and
    SHOULD be the default port chosen by applications using those profiles.
    If multiple RTP sessions are active from a host, even-numbered ports in the
    dynamic range SHOULD be used for the other sessions. If RTCP is to be sent
    on a separate DCCP connection to RTP, the RTCP connection SHOULD use the
    next higher destination port number, unless an alternative DCCP port is
    signalled using the "a=rtcp:" attribute <xref target="RFC3605"/>.  For
    improved interoperability, "a=rtcp:" SHOULD be used whenever an alternate
    DCCP port is used.</t>

</section>
<!-- - - - - - - - - - - - - - - - - - -- - - - - - - - - - - - - - - - - - -->
<section anchor="sdp-service-code" title="Service Codes">

<t> In addition to the port number, specified on the SDP "m=" line, a DCCP
    connection has an associated service code. A single new SDP attribute 
    ("dccp-service-code") is defined to signal the DCCP service code
    according to the following ABNF <xref target="RFC5234"/>: </t>

<figure>
<artwork type="abnf">
    dccp-service-attr = %x61 "=dccp-service-code:" service-code

    service-code      = hex-sc / decimal-sc / ascii-sc

    hex-sc            = %x53 %x43 "=" %x78 *HEXDIG

    decimal-sc        = %x53 %x43 "="  *DIGIT

    ascii-sc          = %x53 %x43 ":"  *sc-char
    
    sc-char           = %d42-43 / %d45-47 / %d63-90 / %d95 / %d97-122
</artwork>
</figure>

<t> where DIGIT and HEXDIG are as defined in <xref target="RFC5234"/>. 
    The service code is interpreted as defined in Section 8.1.2 of 
    <xref target="RFC4340"/> and may be specified using either the
    hexadecimal, decimal, or ASCII formats. A parser MUST interpret
    service codes according to their numeric value, independent of the
    format used to represent them in SDP.
    </t>

<t> The following DCCP service codes are registered for use with RTP: 

    <list style="symbols">
    <t> SC:RTPA (equivalently SC=1381257281 or SC=x52545041): an RTP session
        conveying audio data (and OPTIONAL multiplexed RTCP)</t>

    <t> SC:RTPV (equivalently SC=1381257302 or SC=x52545056): an RTP session
        conveying video data (and OPTIONAL multiplexed RTCP)</t>

    <t> SC:RTPT (equivalently SC=1381257300 or SC=x52545054): an RTP session
        conveying text media (and OPTIONAL multiplexed RTCP)</t>

    <t> SC:RTPO (equivalently SC=1381257295 or SC=x5254504f): an RTP session
        conveying any other type of media (and OPTIONAL multiplexed RTCP)</t>

    <t> SC:RTCP (equivalently SC=1381253968 or SC=x52544350): an RTCP
        connection, separate from the corresponding RTP</t>

    </list>

    To ease the job of middleboxes, applications SHOULD use these service
    codes to identify RTP sessions running within DCCP. The service code
    SHOULD match the top-level media type signalled for the session (i.e.,
    the SDP "m=" line), with the exception connections using media types
    other than audio, video, or text, which use SC:RTPO, and connections 
    that transport only RTCP packets, which use SC:RTCP. </t>

<t> The "a=dccp-service-code:" attribute is a media-level attribute that
    is not subject to the charset attribute. </t>

</section>
<!-- - - - - - - - - - - - - - - - - - -- - - - - - - - - - - - - - - - - - -->
<section anchor="sdp-conn" title="Connection Management">

<t> The "a=setup:" attribute indicates which of the endpoints 



should
    initiate the DCCP connection establishment (i.e., send the initial
    DCCP-Request packet).  The "a=setup:" attribute MUST be used in a 
    manner comparable with <xref target="RFC4145"/>, except that DCCP
    connections are being initiated rather than TCP connections. </t>

<t> After the initial offer/answer exchange, the endpoints may decide to 
    re-negotiate various parameters. The "a=connection:" attribute MUST be
    used in a manner compatible with <xref target="RFC4145"/> to decide
    whether a new DCCP connection needs to be established as a result of
    subsequent offer/answer exchanges, or if the existing connection should
    still be used. </t>

</section>
<!-- - - - - - - - - - - - - - - - - - -- - - - - - - - - - - - - - - - - - -->
<section title="Multiplexing Data and Control">

<t> A single DCCP connection can be used to transport multiplexed RTP and
    RTCP packets. Such multiplexing MUST be signalled using an "a=rtcp-mux"
    attribute according to <xref target="RFC5761"/>.
    If multiplexed RTP and RTCP are not to be used, then the "a=rtcp-mux"
    attribute MUST NOT be present in the SDP offer, and a separate DCCP
    connection MUST be opened to transport the RTCP data on a different
    DCCP port. </t>

</section>
<!-- - - - - - - - - - - - - - - - - - -- - - - - - - - - - - - - - - - - - -->
<section anchor="sdp-example" title="Example">

<t> An offerer at 192.0.2.47 signals its availability for an H.261 video
    session, using RTP/AVP over DCCP with service code "RTPV" (using the
    hexadecimal encoding of the service code in the SDP).  RTP and RTCP
    packets are multiplexed onto a single DCCP connection: </t>

<figure>
<artwork>
    v=0
    o=alice 1129377363 1 IN IP4 192.0.2.47
    s=-
    c=IN IP4 192.0.2.47
    t=0 0
    m=video 5004 DCCP/RTP/AVP 99
    a=rtcp-mux
    a=rtpmap:99 h261/90000
    a=dccp-service-code:SC=x52545056
    a=setup:passive
    a=connection:new
</artwork>
</figure>

<t> An answerer at 192.0.2.128 receives this offer and responds with the
    following answer: </t>

<figure>
<artwork>
    v=0
    o=bob 1129377364 1 IN IP4 192.0.2.128
    s=-
    c=IN IP4 192.0.2.128
    t=0 0
    m=video 9 DCCP/RTP/AVP 99
    a=rtcp-mux
    a=rtpmap:99 h261/90000
    a=dccp-service-code:SC:RTPV
    a=setup:active
    a=connection:new
</artwork>
</figure>

<t> The end point at 192.0.2.128 then initiates a DCCP connection to port
    5004 at 192.0.2.47.  DCCP port 5004 is used for both the RTP and RTCP
    data, and port 5005 is unused.  The textual encoding of the service 
    code is used in the answer, and represents the same service code as
    in the offer. </t>

</section>
</section>
<!---------------------------------------------------------------------------->
<section anchor="security" title="Security Considerations">

<t> The security considerations in the <xref target="RFC3550"> RTP
    specification </xref> and any applicable RTP profile (e.g., 
    <xref target="RFC3551"/>, <xref target="RFC3711"/>, 
    <xref target="RFC4585"/>, or 
    <xref target="RFC5124"/>) or payload format apply
    when transporting RTP over DCCP. </t>
    
<t> The security considerations in the <xref target="RFC4340">
    DCCP specification </xref> apply. </t>

<t> The SDP signalling described in <xref target="sdp"/> is subject to the
    security considerations of <xref target="RFC4566"/>, 
    <xref target="RFC3264"/>, <xref target="RFC4145"/>, 
    <xref target="RFC4571"/>, and 
    <xref target="RFC5761"/>.</t>

<t> The provision of effective congestion control for RTP through use of
    DCCP is expected to help reduce the potential for denial of service
    present when RTP flows ignore the advice in <xref target="RFC3550"/> 
    to monitor packet loss and reduce their sending rate in the face of
    persistent congestion. </t>

<t> There is a potential conflict between the Secure RTP profiles (<xref
    target="RFC3711"/>, <xref target="RFC5124"/>) and 
    the DCCP partial checksum option, since these profiles introduce, 
    and recommend the use of, message authentication for RTP and RTCP
    packets.  Message authentication codes of the type used by these
    profiles cannot be used with partial checksums, since any bit error in
    the DCCP packet payload will cause the authentication check to fail.
    Accordingly, DCCP partial checksums SHOULD NOT be used in conjunction
    with Secure Real-time Transport Protocol (SRTP) authentication.  The confidentiality features of the basic
    RTP specification cannot be used with DCCP partial checksums, since
    bit errors propagate.  Also, despite the fact that bit errors do not
    propagate when using AES in counter mode, the Secure RTP profiles
    SHOULD NOT be used with DCCP partial checksums, since the profiles require
    authentication for security, and authentication is incompatible with
    partial checksums. </t>


</section>
<!---------------------------------------------------------------------------->
<section anchor="iana" title="IANA Considerations">

<t> The following SDP "proto" field identifiers have been registered 
    (see <xref target="sdp-proto"/>): </t>

<figure>
<artwork>
   Type          SDP Name                                Reference 
   ----          --------                                ---------
   proto         DCCP                                    [RFC5762]
                 DCCP/RTP/AVP                            [RFC5762]
                 DCCP/RTP/SAVP                           [RFC5762]
                 DCCP/RTP/AVPF                           [RFC5762]
                 DCCP/RTP/SAVPF                          [RFC5762]
</artwork>
</figure>

<t> The following new SDP attribute ("att-field") has been registered:

    <list style="empty">
    <t> Contact name: Colin Perkins &lt;csp@csperkins.org> </t>
    <t> Attribute name: dccp-service-code </t>
    <t> Long-form attribute name in English: DCCP service code </t>
    <t> Type of attribute: Media level. </t>
    <t> Subject to the charset attribute? No. </t>
    <t> Purpose of the attribute: see RFC 5762, <xref target="sdp-service-code"/></t>
    <t> Allowed attribute values: see RFC 5762, <xref target="sdp-service-code"/></t>
    </list></t>

<t> The following DCCP service code values have been registered (see 
    <xref target="sdp-service-code"/>): </t>

<figure>
<artwork>
   1381257281    RTPA    RTP session conveying audio     [RFC5762]
                          data (and associated RTCP)
   1381257302    RTPV    RTP session conveying video     [RFC5762]
                          data (and associated RTCP)
   1381257300    RTPT    RTP session conveying text      [RFC5762]
                          media (and associated RTCP)
   1381257295    RTPO    RTP session conveying other     [RFC5762]
                          media (and associated RTCP)   
   1381253968    RTCP    RTCP connection, separate from  [RFC5762] 
                          the corresponding RTP     
</artwork>
</figure>

<t> The following DCCP ports have been registered (see <xref target="sdp-proto"/>):</t>

<figure>
<artwork>
   avt-profile-1 5004/dccp  RTP media data       [RFC3551, RFC5762]
   avt-profile-2 5005/dccp  RTP control protocol [RFC3551, RFC5762]
</artwork>
</figure>

<t> Note: ports 5004/tcp, 5004/udp, 5005/tcp, and 5005/udp have
    existing registrations, but incorrect descriptions and
    references. The IANA has updated the existing registrations as
    follows: </t>

<figure>
<artwork>
   avt-profile-1 5004/tcp   RTP media data       [RFC3551, RFC4571]
   avt-profile-1 5004/udp   RTP media data       [RFC3551]
   avt-profile-2 5005/tcp   RTP control protocol [RFC3551, RFC4571]
   avt-profile-2 5005/udp   RTP control protocol [RFC3551]
</artwork>
</figure>

</section>
<!---------------------------------------------------------------------------->
<section title="Acknowledgements">

<t> This work was supported in part by the UK Engineering and Physical
    Sciences Research Council. Thanks are due to Philippe Gentric,
    Magnus Westerlund, Sally Floyd, Dan Wing, Gorry Fairhurst, Stephane
    Bortzmeyer, Arjuna Sathiaseelan, Tom Phelan, Lars Eggert, Eddie Kohler,
    Miguel Garcia, and the other members of the DCCP working group for
    their comments.  </t>

</section>
</middle>
<!---------------------------------------------------------------------------->
<back>
<references title="Normative References">
<?rfc include="reference.RFC.2119.xml"?>
<?rfc include="reference.RFC.5234.xml"?>
<?rfc include="reference.RFC.3264.xml"?>
<?rfc include="reference.RFC.3550.xml"?>
<?rfc include="reference.RFC.3551.xml"?>
<?rfc include="reference.RFC.3605.xml"?>
<?rfc include="reference.RFC.3711.xml"?>
<?rfc include="reference.RFC.4145.xml"?>
<?rfc include="reference.RFC.4340.xml"?>
<?rfc include="reference.RFC.4566.xml"?>
<?rfc include="reference.RFC.4571.xml"?>
<?rfc include="reference.RFC.4585.xml"?>
<?rfc include="reference.RFC.5124.xml"?>

<!-- RFC 5761 = draft-ietf-avt-rtp-and-rtcp-mux in Q in RFC-EDITOR -->

<reference anchor='RFC5761'>
<front>
<title>Multiplexing RTP Data and Control Packets on a Single Port</title>

<author initials='C' surname='Perkins' fullname='Colin Perkins'>
    <organization />
</author>

<author initials='M' surname='Westerlund' fullname='Magnus Westerlund'>
    <organization />
</author>

<date month='April' year='2010' />

</front>

<seriesInfo name="RFC" value="5761"/>

</reference>


</references>

<references title="Informative References">
<?rfc include="reference.RFC.3261.xml"?>
<?rfc include="reference.RFC.4867.xml"?>
<?rfc include="reference.RFC.5348.xml"?>
<?rfc include="reference.RFC.3611.xml"?>
<?rfc include="reference.RFC.3714.xml"?>

<reference anchor='I-D.ietf-avt-tfrc-profile'>
<front>
<title>RTP with TCP Friendly Rate Control</title>

<author initials='L' surname='Gharai' fullname='Ladan Gharai'>
    <organization />
</author>

<date month='July' day='25' year='2007' />

</front>

<seriesInfo name="Work in" value="Progress"/>

</reference>

<reference anchor='I-D.wing-avt-rtp-noop'>
<front>
<title>A No-Op Payload Format for RTP</title>

<author initials='F' surname='Andreasen' fullname='Flemming Andreasen'>
    <organization />
</author>
<author initials='D' surname='Oran'>
    <organization />
</author>
<author initials='D' surname='Wing'>
    <organization />
</author>

<date month='May' day='18' year='2005' />

</front>
<seriesInfo name="Work in" value="Progress"/>
</reference>


<reference anchor='I-D.ietf-dccp-tfrc-media'>
<front>
<title>Strategies for Streaming Media Applications Using TCP-Friendly Rate  Control</title>

<author initials='T' surname='Phelan' fullname='Thomas Phelan'>
    <organization />
</author>

<date month='July' day='5' year='2007' />

</front>

<seriesInfo name="Work in" value="Progress"/>

</reference>


<reference anchor='I-D.ietf-dccp-user-guide'>
<front>
<title>Datagram Congestion Control Protocol (DCCP) User Guide</title>

<author initials='T' surname='Phelan' fullname='Thomas Phelan'>
    <organization />
</author>

<date month='April' day='27' year='2005' />

</front>
<seriesInfo name="Work in" value="Progress"/>

</reference>


<reference anchor='I-D.ietf-avt-avpf-ccm'>
<front>
<title>Codec Control Messages in the RTP Audio-Visual Profile with Feedback (AVPF)</title>

<author initials='S' surname='Wenger' fullname='Stephan Wenger'>
    <organization />
</author>

<author initials='U' surname='Chandra' fullname='Umesh Chandra'>
    <organization />
</author>

<author initials='M' surname='Westerlund' fullname='Magnus Westerlund'>
    <organization />
</author>

<author initials='B' surname='Burman' fullname='Bo Burman'>
    <organization />
</author>

<date month='October' day='26' year='2007' />

</front>
<seriesInfo name="Work in" value="Progress"/>

</reference>

</references>
<!---------------------------------------------------------------------------->
</back>
</rfc>
