<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC6052 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6052.xml">
<!ENTITY RFC6144 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6144.xml">
<!ENTITY RFC6145 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6145.xml">
<!ENTITY RFC6146 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6146.xml">
<!ENTITY RFC1918 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC3633 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3633.xml">
<!ENTITY RFC5245 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5245.xml">
<!ENTITY RFC5625 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5625.xml">
<!ENTITY RFC6092 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6092.xml">
<!ENTITY RFC6147 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6147.xml">
<!ENTITY RFC6459 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6459.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc rfcedstyle="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc number="6877" category="info" ipr="trust200902"
     submissionType="IETF" consensus="yes">

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="464XLAT">464XLAT: Combination of Stateful and Stateless Translation</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Masataka Mawatari" initials="M.M." 
            surname="Mawatari">
      <organization abbrev="Japan Internet Exchange">Japan Internet Exchange Co., Ltd.</organization>

      <address>
        <postal>
          <street>KDDI Otemachi Building 19F, 1-8-1 Otemachi,</street>

          <!-- Reorder these if your country does things differently -->

          <city>Chiyoda-ku</city>

          <region>Tokyo</region>

          <code>100-0004</code>

          <country>JAPAN</country>
        </postal>

        <phone>+81 3 3243 9579</phone>

        <email>mawatari@jpix.ad.jp</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Masanobu Kawashima" initials="M.K." 
            surname="Kawashima">
      <organization>NEC AccessTechnica, Ltd.</organization>

      <address>
        <postal>
          <street>800, Shimomata</street>

          <!-- Reorder these if your country does things differently -->

          <city>Kakegawa-shi</city>

          <region>Shizuoka</region>

          <code>436-8501</code>

          <country>JAPAN</country>
        </postal>

        <phone>+81 537 22 8274</phone>

        <email>kawashimam@vx.jp.nec.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Cameron Byrne" initials="C.B." 
            surname="Byrne">
      <organization>T-Mobile USA</organization>

      <address>
        <postal>
          <street> </street>

          <!-- Reorder these if your country does things differently -->

          <city>Bellevue</city><region>Washington</region>

          <code>98006</code>

          <country>USA</country>
        </postal>

        <email>cameron.byrne@t-mobile.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date month="April" year="2013" />

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>XLAT</keyword>
    <keyword>Stateful Translation</keyword>
    <keyword>Stateless Translation</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This document describes an architecture (464XLAT) for
      providing limited IPv4 connectivity across an IPv6-only network
      by combining existing and well-known stateful protocol
      translation (as described in RFC 6146) in the core and stateless
      protocol translation (as described in RFC 6145) at the edge. 464XLAT is a simple and scalable technique to quickly deploy limited IPv4 access service to IPv6-only edge networks without encapsulation.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>With the exhaustion of the unallocated IPv4 address pools, it will be difficult for many networks to assign IPv4 addresses to end users.</t>

      <t>This document describes an IPv4-over-IPv6 solution as one of the techniques for IPv4 service extension and encouragement of IPv6 deployment. 464XLAT is not a one-for-one replacement of full IPv4 functionality. The 464XLAT architecture only supports IPv4 in the client-server model, where the server has a global IPv4 address. This means it is not fit for IPv4 peer-to-peer communication or inbound IPv4 connections. 464XLAT builds on IPv6 transport and includes full any-to-any IPv6 communication.</t>

      <t>The 464XLAT architecture described in this document uses IPv4/IPv6 translation standardized in <xref target="RFC6145"></xref> and <xref target="RFC6146"></xref>. It does not require DNS64 [RFC6147] since an IPv4 host may simply send IPv4 packets, including packets to an IPv4 DNS server, that will be translated to IPv6 on the customer-side translator (CLAT) and back to IPv4 on the provider-side translator (PLAT). &nbsp;464XLAT networks may use DNS64 <xref target="RFC6147"></xref> to enable single stateful translation <xref target="RFC6146"></xref> instead of 464XLAT double translation where possible. The 464XLAT architecture encourages the IPv6 transition by making IPv4 services reachable across IPv6-only networks and providing IPv6 and IPv4 connectivity to single-stack IPv4 or IPv6 servers and peers.</t>

</section>

    <section title="Terminology">
      <t><list hangIndent="8" style="hanging">
	<t hangText="PLAT:">PLAT is provider-side translator (XLAT) that complies with <xref target="RFC6146"></xref>. It translates N:1 global IPv6 addresses to global IPv4 addresses, and vice versa.</t>

	<t hangText="CLAT:">CLAT is customer-side translator (XLAT)
	that complies with <xref target="RFC6145"></xref>. It
	algorithmically translates 1:1 private IPv4 addresses to
	global IPv6 addresses, and vice versa. The CLAT function is
	applicable to a router or an end-node such as a mobile phone.
	The CLAT should perform IP routing and forwarding to
	facilitate packets forwarding through the stateless
	translation even if it is an end-node. The CLAT as a common
	home router or wireless Third Generation Partnership Project
	(3GPP) router is expected to perform gateway functions such as
	being a DHCP server and DNS proxy for local clients. The CLAT uses different IPv6 prefixes for CLAT-side and PLAT-side IPv4 addresses and therefore does not comply with the sentence "Both IPv4-translatable IPv6 addresses and IPv4-converted IPv6 addresses SHOULD use the same prefix." in Section 3.3 of <xref target="RFC6052"></xref>. The CLAT does not facilitate communications between a local IPv4-only node and an IPv6-only node on the Internet.</t>

      </list></t>
    </section>

    <section title="Motivation and Uniqueness of 464XLAT">

<t>
   The list below describes the motivation for 464XLAT and its unique
   characteristics.
</t>

      <t><list style="symbols">
	<t>464XLAT has minimal IPv4 resource
	requirements and maximum IPv4 efficiency through statistical multiplexing.</t>

	<t>No new protocols are required; there is quick deployment.</t>


	<t>IPv6-only networks are simpler and therefore less expensive to operate than dual-stack networks.</t>

	<t>464XLAT has consistent native IP-based monitoring and traffic engineering. Capacity-planning techniques can be applied without the indirection or obfuscation of a tunnel.</t>

      </list></t>

    </section>

    <section title="Network Architecture">
     
      <t>Examples of 464XLAT architectures are shown in the figures in the following sections.</t>

<t> 
   Wireline Network Architecture can be used in situations where there
   are clients behind the CLAT, regardless of the type of access
   service -- for example, fiber to the home (FTTH), Data Over Cable
   Service Interface Specification (DOCSIS), or WiFi.
</t>

<t>
   Wireless 3GPP Network Architecture can be used in situations where
   a client terminates the wireless access network and possibly acts
   as a router with tethered clients.
</t>

      <section title="Wireline Network Architecture">

      <t>The private IPv4 host in this diagram can reach global IPv4
      hosts via translation on both the CLAT and PLAT. On the other
      hand, the IPv6 host can reach other IPv6 hosts on the Internet
      directly without translation.  This means that the Customer
      Premises Equipment (CPE) / CLAT can not only have the function
      of a CLAT but also the function of an IPv6 native router for
      native IPv6 traffic. In this diagram, the v4p host behind the CLAT has
<xref target="RFC1918"></xref> addresses.</t>

      <figure align="center" anchor="Wireline_topology" title="Wireline Network Topology">
       <preamble></preamble>
       <artwork align="center"><![CDATA[
                              +------+
                              |  v6  |
                              | host |
                              +--+---+
                                 |
                             .---+---.
                            /         \
                           /   IPv6    \
                          |  Internet   |
                           \           /
                            `----+----'
                                 |
+------+   |                 .---+---.                    .------.
|  v6  +---+   +------+     /         \     +------+     /        \
| host |   |   |      |    /   IPv6    \    |      |    /   IPv4   \
+------+   +---+ CLAT +---+   Network   +---+ PLAT +---+  Internet  |
+--------+ |   |      |    \           /    |      |    \           /
| v4p/v6 +-+   +------+     `---------'     +------+     `----+----'
|  host  | |                                                  |
+--------+ |                                               +--+---+
+------+   |                                               | v4g  |
| v4p  +---+                                               | host |
| host |   |                                               +------+
+------+   |

       <- v4p -> XLAT <--------- v6 --------> XLAT <- v4g ->

  v6  : Global IPv6
  v4p : Private IPv4
  v4g : Global IPv4
        ]]></artwork>
      </figure>
    </section>

      <section title="Wireless 3GPP Network Architecture">

      <t>The CLAT function on the User Equipment (UE) provides
      an <xref target="RFC1918"></xref> address and IPv4 default route
      to the local node's network stack. The applications on the UE
      can use the private IPv4 address for reaching global IPv4 hosts
      via translation on both the CLAT and the PLAT.  On the other
      hand, reaching IPv6 hosts (including hosts presented via DNS64 <xref target="RFC6147"></xref>) does not require the CLAT function on the UE.</t>

      <t>Presenting a private IPv4 network for tethering via NAT44 and stateless translation on the UE is also an application of the CLAT.</t>

      <figure align="center" anchor="Wireless_topology" title="Wireless 3GPP Network Topology">
       <preamble></preamble>
       <artwork align="center"><![CDATA[
                               +------+
                               |  v6  |
                               | host |
                               +--+---+
                                  |
                              .---+---.
                             /         \
                            /   IPv6    \
                           |   Internet  |
                            \           /
   UE / Mobile Phone         `---------'
+----------------------+          |
| +----+    |          |      .---+---.                   .------.
| | v6 +----+   +------+     /         \     +------+    /        \
| +----+    |   |      |    / IPv6 PDP  \    |      |   /   IPv4   \
|           +---+ CLAT +---+ Mobile Core +---+ PLAT +--+  Internet  |
|           |   |      |    \    GGSN   /    |      |   \          /
|           |   +------+     \         '     +------+    `----+---'
| +-----+   |          |      `-------'                       |
| | v4p +---+          |                                   +--+---+
| +-----+   |          |                                   | v4g  |
+----------------------+                                   | host |
                                                           +------+

        <- v4p -> XLAT <--------- v6 --------> XLAT <- v4g ->

  v6   : Global IPv6
  v4p  : Private IPv4
  v4g  : Global IPv4
  PDP  : Packet Data Protocol
  GGSN : Gateway GPRS Support Node
        ]]></artwork>
      </figure>
    </section>

   </section>


    <section title="Applicability">

      <section title="Wireline Network Applicability">

      <t>When an Internet Service Provider (ISP) has IPv6 access service and provides 464XLAT, the ISP can provide outgoing IPv4 service to end users across an IPv6 access network. The result is that edge network growth is no longer tightly coupled to the availability of scarce IPv4 addresses.</t>

      <t>If another ISP operates the PLAT, the edge ISP is only required to deploy an IPv6 access network.  All ISPs do not need IPv4 access networks. They can migrate their access network to a simple and highly scalable IPv6-only environment.</t>
      </section>

      <section title="Wireless 3GPP Network Applicability">

     <t>At the time of writing, in April 2013, the vast majority of
       mobile networks are compliant to Pre-Release 9 3GPP standards. 

In Pre-Release 9 3GPP networks, Global System for Mobile Communications (GSM) and Universal Mobile Telecommunications System (UMTS) networks must signal and support both IPv4 and IPv6 Packet Data Protocol (PDP) attachments to access IPv4 and IPv6 network destinations <xref target="RFC6459"></xref>. Since there are two PDPs required to support two address families, this is double the number of PDPs required to support the status quo of one address family, which is IPv4.</t>

      <t>For the cases of connecting to an IPv4 literal or IPv4 socket
      that require IPv4 connectivity, the CLAT function on the UE
      provides a private IPv4 address and IPv4 default route on the
      host for the applications to reference and bind to. Connections
      sourced from the IPv4 interface are immediately routed to the
      CLAT function and passed to the IPv6-only mobile network,
      destined for the PLAT.  In summary, the UE performs the CLAT function that does a stateless translation <xref target="RFC6145"></xref>, but only when required by an IPv4-only scenario such as IPv4 literals or IPv4-only sockets.  The mobile network has a PLAT that does stateful translation <xref target="RFC6146"></xref>.</t>

      <t>464XLAT works with today's existing systems as much as
	possible. 464XLAT is compatible with existing solutions for
network-based deep packet inspection like 3GPP standardized Policy and Charging Control (PCC) <xref target="TS.23203"></xref>.</t>

      </section>

</section>


    <section title="Implementation Considerations">

        <section title="IPv6 Address Format">
          <t>The IPv6 address format in 464XLAT is defined in Section 2.2 of <xref target="RFC6052"></xref>.</t>
        </section>

    <section title="IPv4/IPv6 Address Translation Chart">

          <t>This chart offers an explanation about address
          translation architecture using a combination of stateful
          translation at the PLAT and stateless translation at the
          CLAT. The client on this chart is delegated an IPv6 prefix
          from a prefix delegation mechanism such as DHCPv6 Prefix
          Delegation (DHCPv6-PD) <xref target="RFC3633"></xref>; therefore, it has a dedicated IPv6 prefix for translation.</t>

        <figure anchor="case_of_enabling" align="center" title="Case of Enabling Only Stateless XLATE on CLAT">
         <preamble></preamble>
         <artwork align="center"><![CDATA[
                                        Destination IPv4 address
                                       +----------------------------+
                                       | Global IPv4 address        |
                                       | assigned to IPv4 server    |
                            +--------+ +----------------------------+
                            |  IPv4  |  Source IPv4 address
                            | server | +----------------------------+
                            +--------+ | Global IPv4 address        |
                                ^      | assigned to IPv4 PLAT pool |
                                |      +----------------------------+
                            +--------+
                            |  PLAT  | Stateful XLATE(IPv4:IPv6=1:n)
                            +--------+
                                ^
                                |
                           (IPv6 cloud)
      Destination IPv6 address
     +--------------------------------------------------------------+
     | IPv4-embedded IPv6 address                                   |
     | defined in Section 2.2 of RFC 6052                           |
     +--------------------------------------------------------------+
      Source IPv6 address
     +--------------------------------------------------------------+
     | IPv4-embedded IPv6 address                                   |
     | defined in Section 2.2 of RFC 6052                           |
     +--------------------------------------------------------------+
                           (IPv6 cloud)
                                ^
                                |
                            +--------+
                            |  CLAT  | Stateless XLATE(IPv4:IPv6=1:1)
                            +--------+
                                ^       Destination IPv4 address
                                |      +----------------------------+
                            +--------+ | Global IPv4 address        |
                            |  IPv4  | | assigned to IPv4 server    |
                            | client | +----------------------------+
                            +--------+  Source IPv4 address
                                       +----------------------------+
                                       | Private IPv4 address       |
                                       | assigned to IPv4 client    |
                                       +----------------------------+
          ]]></artwork>
        </figure>
</section>

<section title="IPv6 Prefix Handling">


          <t>There are two relevant IPv6 prefixes that the CLAT must be aware of.</t>

          <t>First, CLAT must know its own IPv6 prefixes. The CLAT
          should acquire a /64 for the uplink interface, a /64 for all
          downlink interfaces, and a dedicated /64 prefix for the
          purpose of sending and receiving statelessly translated
          packets. When a dedicated /64 prefix is not available for
          translation from DHCPv6-PD <xref target="RFC3633"></xref>,
          the CLAT may perform NAT44 for all IPv4 LAN packets so that
          all the LAN-originated IPv4 packets appear from a single
          IPv4 address and are then statelessly translated to one
          interface IPv6 address that is claimed by the CLAT via the
          Neighbor Discovery Protocol (NDP) and defended with Duplicate Address Detection (DAD).</t>

          <t>Second, the CLAT must discover the PLAT-side translation IPv6 prefix used as a destination of the PLAT. The CLAT will use this prefix as the destination of all translation packets that require stateful translation to the IPv4 Internet. It may discover the PLAT-side translation prefix using <xref target="Discovery-Heuristic"></xref>. In the future, some other mechanisms, such as a new DHCPv6 option, will possibly be defined to communicate the PLAT-side translation prefix.</t>

</section>

        <section title="DNS Proxy Implementation">
          <t>The CLAT should implement a DNS proxy as defined
          in <xref target="RFC5625"></xref>. The case of an IPv4-only
          node behind the CLAT querying an IPv4 DNS server is
          undesirable since it requires both stateful and stateless
          translation for each DNS lookup. The CLAT should set itself
          as the DNS server via DHCP or other means and should proxy DNS queries for IPv4 and IPv6 LAN clients. Using the CLAT-enabled home router or UE as a DNS proxy is a normal consumer gateway function and simplifies the traffic flow so that only IPv6 native queries are made across the access network. DNS queries from the client that are not sent to the DNS proxy on the CLAT must be allowed and are translated and forwarded just like any other IP traffic.</t>
        </section>

        <section title="CLAT in a Gateway">
          <t>The CLAT feature can be implemented in a common home
          router or mobile phone that has a tethering feature. Routers
          with a CLAT feature should also provide common router
          services such as DHCP of <xref target="RFC1918"></xref>
          addresses, DHCPv6, NDP with Router Advertisement, and DNS service.</t>
        </section>

        <section title="CLAT-to-CLAT Communications">
          <t>464XLAT is a hub and spoke architecture focused on
          enabling IPv4-only services over IPv6-only
          networks. Interactive Connectivity Establishment (ICE) <xref target="RFC5245"></xref> may be used to support peer-to-peer communication within a 464XLAT network.</t>
        </section>
</section>

    <section title="Deployment Considerations">

        <section title="Traffic Engineering">

          <t>Even if the ISP for end users is different from the PLAT provider (e.g., another ISP), it can implement traffic engineering independently from the PLAT provider. Detailed reasons are below:</t>

      <t><list  style="numbers">
	<t>The ISP for end users can figure out the IPv4 destination
	address from the translated IPv6 packet header, so it can
	implement traffic engineering based on the IPv4 destination address (e.g., traffic monitoring for each IPv4 destination address, packet filtering for each IPv4 destination address, etc.).  The tunneling methods do not have such an advantage, without any deep packet inspection for processing the inner IPv4 packet of the tunnel packet.</t>

	<t>If the ISP for end users can assign an IPv6 prefix greater
	than /64 to each subscriber, this 464XLAT architecture can
	separate the IPv6 prefix for native IPv6 packets and the XLAT prefixes for IPv4/IPv6 translation packets. Accordingly, it can identify the type of packets ("native IPv6 packets" and "IPv4/IPv6 translation packets") and implement traffic engineering based on the IPv6 prefix.</t>
      </list></t>

    </section>

        <section title="Traffic Treatment Scenarios">

          <t>The below table outlines how different permutations of connectivity are treated in the 464XLAT architecture.</t>
          <t>Note: 464XLAT double translation treatment will be stateless when a dedicated /64 is available for translation on the CLAT. Otherwise, the CLAT will have both stateful and stateless since it requires NAT44 from the LAN to a single IPv4 address and then stateless translation to a single IPv6 address.</t>

          <figure align="center" title="Traffic Treatment Scenarios">
            <preamble></preamble>
            <artwork align="center"><![CDATA[
  +--------+-------------+-----------------------+-------------+
  | Server | Application |   Traffic Treatment   | Location of |
  |        | and Host    |                       | Translation |
  +--------+-------------+-----------------------+-------------+
  |  IPv6  |    IPv6     |    End-to-End IPv6    |    None     |
  +--------+-------------+-----------------------+-------------+
  |  IPv4  |    IPv6     | Stateful Translation  |    PLAT     |
  +--------+-------------+-----------------------+-------------+
  |  IPv4  |    IPv4     |        464XLAT        |  PLAT/CLAT  |
  +--------+-------------+-----------------------+-------------+
            ]]></artwork>
          </figure>
        </section>
</section>

    <section anchor="Security" title="Security Considerations">
      <t>To implement a PLAT, see the security considerations presented in Section 5 of <xref target="RFC6146"></xref>.</t>

      <t>To implement a CLAT, see the security considerations presented in Section 7 of <xref target="RFC6145"></xref>. The CLAT may comply with <xref target="RFC6092"></xref>.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The authors would like to thank JPIX NOC members, JPIX 464XLAT trial service members, Seiichi Kawamura, Dan Drown, Brian Carpenter, Rajiv Asati, Washam Fan, Behcet Sarikaya, Jan Zorz, Tatsuya Oishi, Lorenzo Colitti, Erik Kline, Ole Troan, Maoke Chen, Gang Chen, Tom Petch, Jouni Korhonen, Bjoern A. Zeeb, Hemant Singh, Vizdal Ales, Mark ZZZ Smith, Mikael Abrahamsson, Tore Anderson, Teemu Savolainen, Alexandru Petrescu, Gert Doering, Victor Kuarsingh, Ray Hunter, James Woodyatt, Tom Taylor, and Remi Despres for their helpful comments. We also would like to thank Fred Baker and Joel Jaeggli for their support.</t>
    </section>

    <!-- Possibly a 'Contributors' section ... -->

  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>

<?rfc rfcedstyle="no"?>

    <references title="Normative References">
      &RFC6052;
      &RFC6145;
      &RFC6146;

    </references>

    <references title="Informative References">
      &RFC1918;
      &RFC3633;
      &RFC5245;
      &RFC5625;
      &RFC6092;
      &RFC6147;
      &RFC6459;

<!--  draft-ietf-behave-nat64-discovery-heuristic in IESG Evaluation -->
<reference anchor="Discovery-Heuristic">
<front>
<title>Discovery of the IPv6 Prefix Used for IPv6 Address Synthesis</title>

<author initials='T' surname='Savolainen' fullname='Teemu Savolainen'>
    <organization />
</author>

<author initials='J' surname='Korhonen' fullname='Jouni Korhonen'>
    <organization />
</author>

<author initials='D' surname='Wing' fullname='Dan Wing'>
    <organization />
</author>

<date month='March' year='2013' />

<abstract><t>This document describes a method for detecting the presence of DNS64 and for learning the IPv6 prefix used for protocol translation on an access network.  The method depends on the existence of a well-known IPv4-only fully qualified domain name "ipv4only.arpa".  The information learned enables nodes to perform local IPv6 address synthesis and to potentially avoid NAT64 on dual-stack and multi- interface deployments.</t></abstract>

</front>

<seriesInfo name="Work in" value="Progress"/>
</reference>


<reference anchor="TS.23203">
	<front>
		<title>Policy and charging control architecture</title>
		<author><organization>3GPP</organization></author>
		<date day="22" month="June" year="2012"/>
	</front>
	<seriesInfo name="3GPP TS" value="23.203 10.7.0"/>
	<format type="HTML" target="http://www.3gpp.org/ftp/Specs/html-info/23203.htm"/>
</reference>

    </references>
<?rfc rfcedstyle="yes"?>

    <section anchor="app-additional-1" title="Examples of IPv4/IPv6 Address Translation">
      <t>The following is an example of IPv4/IPv6 address translation on the 464XLAT architecture.</t>
      <t>In the case that an IPv6 prefix greater than /64 is assigned to an end user by such as DHCPv6-PD <xref target="RFC3633"></xref>, the CLAT can use a dedicated /64 from the assigned IPv6 prefix.</t>

        <figure align="center">
         <preamble></preamble>
         <artwork align="center"><![CDATA[
   Host & configuration value
+------------------------------+
|           IPv4 server        |
|         [198.51.100.1]       |            IP packet header
+------------------------------+   +--------------------------------+
                ^                  | Destination IP address         |
                |                  | [198.51.100.1]                 |
                |                  | Source IP address              |
                |                  | [192.0.2.1]                    |
+------------------------------+   +--------------------------------+
|              PLAT            |                   ^
| IPv4 pool address            |                   |
| [192.0.2.1 - 192.0.2.100]    |                   |
| PLAT-side XLATE IPv6 prefix  |                   |
| [2001:db8:1234::/96]         |                   |
+------------------------------+   +--------------------------------+
                ^                  | Destination IP address         |
                |                  | [2001:db8:1234::198.51.100.1]  |
                |                  | Source IP address              |
                |                  | [2001:db8:aaaa::192.168.1.2]   |
+------------------------------+   +--------------------------------+
|              CLAT            |                   ^
| PLAT-side XLATE IPv6 prefix  |                   |
| [2001:db8:1234::/96]         |                   |
| CLAT-side XLATE IPv6 prefix  |                   |
| [2001:db8:aaaa::/96]         |                   |
+------------------------------+   +--------------------------------+
                ^                  | Destination IP address         |
                |                  | [198.51.100.1]                 |
                |                  | Source IP address              |
                |                  | [192.168.1.2]                  |
+------------------------------+   +--------------------------------+
|          IPv4 client         |
|        [192.168.1.2/24]      |
+------------------------------+
Delegated IPv6 prefix for client: 2001:db8:aaaa::/56
          ]]></artwork>
        </figure>
    </section>
  </back>
</rfc>

