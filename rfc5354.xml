<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc subcompact="no"?>

<rfc number="5354" category="exp" >
<front>

<title abbrev="ASAP &amp; ENRP Common Parameters">
Aggregate Server Access Protocol (ASAP) and Endpoint&nbsp;Handlespace&nbsp;Redundancy&nbsp;Protocol&nbsp;(ENRP)&nbsp;Parameters </title>

<!-- ************** RANDALL STEWART ***************-->
<author initials="R. R." surname="Stewart" fullname="Randall R. Stewart">
<organization>The Resource Group</organization>
<address>
    <postal>
        <street>1700 Pennsylvania Ave NW</street>
        <street> Suite 560</street>
        <city>Washington</city> <region>DC</region>
        <code>20006</code>
        <country>USA</country>
    </postal>
    <phone></phone>
    <email>randall.stewart@trgworld.com</email>
</address>
</author>

<!-- ************** QIAOBING XIE *************** -->
<author initials="Q." surname="Xie" fullname="Qiaobing Xie">
<organization>The Resource Group</organization>
<address>
<postal>
 <street>1700 Pennsylvania Ave NW</street>
 <street>Suite 560</street>
<city>Washington, D.C.</city> <region></region>
 <code>20006</code>
 <country>USA</country>
</postal>
<phone>+1 224-465-5954</phone>
<email>Qiaobing.Xie@gmail.com</email>
</address>
</author>

<!-- ************** MAUREEN STILLMAN *************** -->
<author initials="M." surname="Stillman" fullname="Maureen Stillman">
<organization>Nokia</organization>
<address>
<postal>
 <street>1167 Peachtree Ct. </street>
 <city>Naperville</city> <region>IL</region>
 <code>60540</code>
 <country>USA</country>
</postal>
<email>maureen.stillman@nokia.com</email>
</address>
</author>

<!-- ************** MICHAEL TUEXEN *************** -->
<author initials="M." surname="Tuexen" fullname="Michael Tuexen">
<organization>Muenster Univ. of Applied Sciences</organization>
<address>
    <postal>
        <street>Stegerwaldstr. 39</street>
        <city>48565 Steinfurt</city>
        <country>Germany</country>
    </postal>
    <email>tuexen@fh-muenster.de</email>
</address>
</author>

<date month="September" year="2008" />

<!--[rfced] Please insert any keywords (beyond those that appear in 
  the title) for use on http://www.rfc-editor.org/rfcsearch.html. -->
<keyword>example</keyword>

<abstract>
<t>
This document details the parameters of the Aggregate Server
Access Protocol (ASAP) and Endpoint Handlespace Redundancy Protocol
(ENRP) defined within the Reliable Server Pooling (RSerPool)
architecture.
</t>    
</abstract>
</front>

<middle>

<!-- ***********1************ -->
<section title="Introduction">
<t>The Aggregate Server Access Protocol (ASAP) 
<xref target="RFC5352"/>,
in conjunction with the
Endpoint Handlespace Redundancy Protocol (ENRP) 
<xref target="RFC5353"/>,
provides a high-availability, data-transfer mechanism over IP networks.</t>

<t>Both protocols work together and so share many common parameters
used in message formats. This document details the common message
parameters shared between the two protocols. This document provides
parameter formats only; for procedures and message composition,
please refer to the respective 
<xref target="RFC5352"/>
and 
<xref target="RFC5353"/>
documents.</t>    

<!-- ***********1.1********* -->
<section title="Conventions">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL"
in this document are to be interpreted as described in
<xref target="RFC2119"/>.</t>
</section>
</section>

<!--*****2*********-->
<section anchor="general" title="Parameters in General">
<t>All parameters described below MUST be in network byte
order (aka Big Endian, i.e., the most significant byte first)
during transmission.</t>

<t>Please note that messages in both ENRP and ASAP are often
composed of multiple parameters. These parameters may also
be nested. In such a case, a nested parameter will include
the length of the padding between the nested parameters
but not the last padding.</t>
</section>

<!--******3 *********-->
<section anchor="common" title="ENRP-ASAP Common Parameters">
<t>Parameters are defined in the following Type-Length-Value (TLV)
format:</t>
<figure>
<artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Parameter Type       |       Parameter Length        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                                                               :
:                       Parameter Value                         :
:                               +-------------------------------:
:                               |        Padding                :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>

<t><list style='hanging'>
<t hangText="Parameter Type:  16 bits (unsigned integer)">
<vspace/>
The Type field is a 16-bit identifier of the type of parameter.
It takes a value of 0 to 65534.
<vspace/>
The value of 65535 is reserved for IETF-defined extensions. 
Values, other than those defined in the specific ENRP parameter
description, are reserved by IETF. (Additional types, when needed,
will be defined in the future through appropriate IETF/IANA
procedures.) 
<vspace/>
The Parameter Types are encoded such that the two bits of the highest-order specify the action that must be taken if the processing endpoint does
not recognize the Parameter Type.
<list style='hanging'>
<t hangText="00">
Stop processing this ENRP or ASAP message and discard it; do
not process any further parameters within it.
</t>
<t hangText="01">
Stop processing this ENRP or ASAP message and discard it; do
not process any further parameters within it, and report the
unrecognized parameter in an 'Unrecognized Parameter' error
(see <xref target="operr" />).
</t>
<t hangText="10">
Skip this parameter and continue processing.
</t>
<t hangText="11">
Skip this parameter and continue processing, but report the
unrecognized parameter in an 'Unrecognized Parameter' error
(see <xref target="operr" />).
</t>
</list>
<vspace/>
The values of parameter types are defined as follows:
<texttable anchor='typetable'>
<ttcol align='center'>Value</ttcol>
<ttcol align='left'>Parameter Type</ttcol>
<c>0x0</c>        <c>(Reserved by IETF)</c>
<c>0x1</c>        <c>IPv4 Address</c>
<c>0x2</c>        <c>IPv6 Address</c>
<c>0x3</c>        <c>DCCP Transport</c>
<c>0x4</c>        <c>SCTP Transport</c>
<c>0x5</c>        <c>TCP Transport</c>
<c>0x6</c>        <c>UDP Transport</c>
<c>0x7</c>        <c>UDP-Lite</c>
<c>0x8</c>        <c>Pool Member Selection Policy</c>
<c>0x9</c>        <c>Pool Handle</c>
<c>0xa</c>        <c>Pool Element</c>
<c>0xb</c>        <c>Server Information</c>
<c>0xc</c>        <c>Operation Error</c>
<c>0xd</c>        <c>Cookie</c>
<c>0xe</c>        <c>PE Identifier</c>
<c>0xf</c>        <c>PE Checksum</c>
<c>0x10</c>       <c>Opaque Transport</c>
<c>0x11-0xfffffffe</c>     <c>(Available for assignment)</c>
<c>0xffffffff</c> <c>IETF-defined extensions</c>
</texttable></t>

<t hangText="Parameter Length: 16 bits (unsigned integer)">
<vspace/>
The Parameter Length field contains the size of the parameter in
bytes, including the Parameter Type, Parameter Length, and
Parameter Value fields.  Thus, a parameter with a zero-length
Parameter Value field would have a Length field of 4.
<vspace/>
The total length of a parameter (including Type, Parameter Length and
Value fields) MUST be a multiple of 4 bytes.  If the length of the
parameter is not a multiple of 4 bytes, the sender MUST pad the parameter
at the end (i.e., after the Parameter Value field) with all zero
bytes.  The length of this padding is not included in the Parameter
Length field.  A sender MUST NOT pad with more than 3 bytes.  The
receiver MUST ignore the padding bytes.</t>

<t hangText="Parameter Value: variable length.">
<vspace/>
The Parameter Value field contains the actual information to be
transferred in the parameter.</t>
<t hangText="Parameter Padding: variable length.">
<vspace/>
The Parameter Padding, as described above.</t>

</list></t>

<!--******* 3.1 ******-->
<section anchor="ipv4" title="IPv4 Address Parameter">
<t>This parameter defines a TLV that carries an IPv4 address.</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Type = 0x1             |      Length = 0x8             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        IPv4 Address                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText="IPv4 Address: 32 bits (unsigned integer)">
<vspace/>
Contains an IPv4 address. It is binary encoded.</t>
</list></t>
</section>
<!--******* 3.2 ******-->
<section anchor="ipv6" title="IPv6 Address Parameter">
<t>
This parameter defines a TLV that carries an IPv6 address.
</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Type = 0x2         |          Length = 0x14        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
|                         IPv6 Address                          |
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText="IPv6 Address: 128 bits (unsigned integer)">
<vspace/>
Contains an IPv6 address. It is binary encoded.</t>
</list></t>
</section>

<section anchor="dccp" title="DCCP Transport Parameter">

<t>This parameter defines a TLV that describes a user transport using
Datagram Congestion Control Protocol (DCCP).</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Type = 0x3             |      Length = variable        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         DCCP Port             |          (reserved)           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                      DCCP Service Code                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                     IPv4 or IPv6 Address                      :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>

<t hangText="Length: 16 bits (unsigned integer)">
<vspace/>
Indicates the entire length of the parameter in number of
octets, including the Type, Length, DCCP port, reserved fields,
and IP Address Parameter.</t>

<t hangText="DCCP Port: 16 bits (unsigned integer)">
<vspace/>
The DCCP port number signed to this DCCP user transport.</t>

<t hangText="DCCP Service Code: 32 bits (unsigned integer)">
<vspace/>
The DCCP service code signed to this DCCP user transport.</t>

<t hangText="IPv4 or IPv6 Address">
<vspace/>
Indicates an IPv4 or IPv6 address parameter (as defined above in
<xref target="ipv4" />
and 
<xref target="ipv6" />)
assigned to this DCCP user
transport. Unlike in an SCTP Transport parameter, only one IP address
parameter can be present in a DCCP Transport parameter.</t>
</list>

Note: The DCCP Port MUST NOT be used for control information. For
this reason, no Transport Use field is provided. DCCP MUST always
be treated as a "Data Only" type transport use.</t>
</section>

<section anchor="sctp" title="SCTP Transport Parameter">
<t>This parameter defines a TLV that describes a user transport using
Stream Control Transport Protocol (SCTP).</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Type = 0x4             |      Length = variable        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        SCTP Port              |          Transport Use        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                     IPv4 or IPv6 Address #1                   :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                                                               :
:                              ...                              :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                     IPv4 or IPv6 Address #n                   :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>

<t><list style='hanging'>
<t hangText="Length: 16 bits (unsigned integer)">
<vspace/>
Indicates the entire length of the parameter in number of
octets, including the Type, Length, SCTP port, reserved fields,
and all IP Address Parameters present.</t>

<t hangText="SCTP Port: 16 bits (unsigned integer)">
<vspace/>
The SCTP port number signed to this SCTP user transport.</t>

<t hangText="Transport Use: 16 bits (unsigned integer)">
<vspace/>
This field represents how the pool element
intends this transport address to be used. The
field MUST be populated with one of the following values:

<texttable>
<ttcol align='center'>Type</ttcol>
<ttcol align='left'>Value</ttcol>
<c>DATA ONLY</c>         <c>0x0000</c>
<c>DATA plus CONTROL</c> <c>0x0001</c>
</texttable>
</t>

<t hangText="IPv4 or IPv6 Address #1 - #n">
<vspace/>
Each indicates an IPv4 or IPv6 address parameter (as defined
above in
<xref target="ipv4" />
and 
<xref target="ipv6" />)
assigned to this SCTP user transport. An SCTP Transport parameter may
have a mixed list of IPv4 and IPv6 addresses and at least one IP address
parameter MUST be present in an SCTP Transport parameter. </t>
</list></t>
</section>

<!--******* 3.4 ******-->
<section anchor="tcp" title="TCP Transport Parameter">
<t>This parameter defines a TLV that describes a user transport using
TCP protocol.</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Type = 0x5             |      Length = variable        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         TCP Port              |           (reserved)          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                     IPv4 or IPv6 Address                      :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText="Length: 16 bits (unsigned integer)">
<vspace/>
Indicates the entire length of the parameter in number of
octets, including the Type, Length, TCP port, reserved fields,
and IP Address Parameter.</t>
<t hangText="TCP Port: 16 bits (unsigned integer)">
<vspace/>
The TCP port number signed to this TCP user transport.</t>
<t hangText="IPv4 or IPv6 Address">
<vspace/>
Indicates an IPv4 or IPv6 address parameter (as defined above in
<xref target="ipv4" />
and
<xref target="ipv6" />) assigned to this TCP user
transport. Unlike in an SCTP Transport parameter, only one IP Address
parameter can be present in a TCP Transport parameter.</t>
</list></t>
<t>Note: The TCP Port MUST NOT be used for control information. For
this reason, no Transport Use field is provided. TCP MUST always
be treated as a "Data Only" type transport use.</t>
</section>

<!--******* 3.5 ******-->
<section anchor="udp" title="UDP Transport Parameter">
<t>This parameter defines a TLV that describes a user transport using
UDP protocol.</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Type = 0x6             |      Length = variable        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         UDP Port              |          (reserved)           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                     IPv4 or IPv6 Address                      :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText="Length: 16 bits (unsigned integer)">
<vspace/>
Indicates the entire length of the parameter in number of
octets, including the Type, Length, UDP port, reserved fields,
and IP Address Parameter.</t>
<t hangText="UDP Port: 16 bits (unsigned integer)">
<vspace/>
The UDP port number signed to this UDP user transport.</t>
<t hangText="IPv4 or IPv6 Address">
<vspace/>
Indicates an IPv4 or IPv6 address parameter (as defined above in
<xref target="ipv4" />
and 
<xref target="ipv6" />)
assigned to this UDP user
transport. Unlike in an SCTP Transport parameter, only one IP Address
parameter can be present in a UDP Transport parameter.</t>
</list></t>
<t>Note: The UDP Port MUST NOT be used for control information. For
this reason, no Transport Use field is provided. UDP MUST always
be treated as a "Data Only" type transport use.</t>
</section>

<section anchor="udp-lite" title="UDP-Lite Transport Parameter">
<t>This parameter defines a TLV that describes a user transport using
UDP-Lite protocol.</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Type = 0x7             |      Length = variable        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|      UDP-Lite Port            |          (reserved)           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                     IPv4 or IPv6 Address                      :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText="Length: 16 bits (unsigned integer)">
<vspace/>
Indicates the entire length of the parameter in number of
octets, including the Type, Length, UDP-Lite port, reserved fields,
and IP Address Parameter.</t>
<t hangText="UDP Port: 16 bits (unsigned integer)">
<vspace/>
The UDP-Lite port number signed to this UDP-Lite user transport.</t>
<t hangText="IPv4 or IPv6 Address">
<vspace/>
Indicates an IPv4 or IPv6 address parameter (as defined above in
<xref target="ipv4" />
and 
<xref target="ipv6" />)
assigned to this UDP-Lite user
transport. Unlike in an SCTP Transport parameter, only one IP address
parameter can be present in a UDP-Lite transport parameter.</t>
</list></t>
<t>Note: The UDP-Lite Port MUST NOT be used for control information. For
this reason, no Transport Use field is provided. UDP-Lite MUST always
be treated as a "Data Only" type transport use.</t>
</section>

<!--******* 3.6 ******-->
<section anchor="member" title="Pool Member Selection Policy Parameter">
<t>This parameter defines a pool member selection policy. RSerPool
supports multiple pool member selection policies and also allows the
definition of new selection policies in the future. </t>

<t>The enforcement rules and handling procedures of all the policies
are defined in
<xref target="RFC5352"/>.</t>

<t>All pool member selection policies, both present and future, MUST
use the following general parameter format:</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Type = 0x8             |      Length = variable        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         Policy Type                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                     Policy-specific Data                      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

</artwork>
</figure>
<t><list style='hanging'>
<t hangText="Length: 16 bits (unsigned integer)">
<vspace/>
Indicates the entire length of the parameter in number of
octets, including the Type, Length, Policy Type,
and the Policy-specific Data fields.
<vspace/>
Note, the Length field value will NOT include any padding at the
end of the parameter.</t>
<t hangText="Policy Type: 32 bits (unsigned integer)">
<vspace/>
Specifies the type of selection policy. The values are defined
in <xref target="RFC5356"/>.</t>
<t hangText="Policy-specific Data:">
<vspace/>
The structure and fields for each presently defined policy type
are described in detail in <xref target="RFC5356"/>.</t>
</list></t>
</section>

<!--******* 3.7 ******-->
<section anchor="poolhandle" title="Pool Handle Parameter">

<t>This parameter holds a pool handle.</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Type = 0x9            |       Length=variable         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                                                               :
:                          Pool Handle                          :
:                                                               :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText="Length: 16 bits (unsigned integer)">
<vspace/>
Indicates the entire length of the parameter in number of
octets, including the Type, Length, and Pool Handle string.
<vspace/>
Note, the value in the Length field will NOT cover any padding at
the end of the parameter.</t>
<t hangText="Pool Handle">
<vspace/>
Defined as a sequence of (Length - 4) bytes. </t>
</list></t>
</section>
<!--******* 3.8 ******-->
<section anchor="poolelement" title="Pool Element Parameter">
<t>This parameter is used in multiple ENRP messages to represent an
ASAP endpoint (i.e., a Pool Element (PE) in a pool) and the associated
information, such as its transport address, selection policy,
and other operational or status information of the PE.</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Type = 0xa            |       Length=variable         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         PE Identifier                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                  Home ENRP Server Identifier                  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                      Registration Life                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                      User Transport param                     :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                 Member Selection Policy param                 :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                      ASAP Transport param                     :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText="Length: 16 bits (unsigned integer)">
<vspace/>
Indicates the entire length of the parameter in number of
octets, including the Type, Length, PE Identifier, Registration
Life, User Transport, and Member Selection Policy
parameters.
<vspace/>
Note, the value in the Length field will NOT cover any padding at
the end of this Pool Element parameter.</t>

<t hangText="PE Identifier: 32 bits (unsigned integer)">
<vspace/>
Uniquely identifies the PE in the pool. The PE picks its
identifier when it starts up.</t>
   
<t hangText="Home ENRP Server Identifier: 32 bits (unsigned integer)">
<vspace/>
Indicates the current Home ENRP server of this PE. Set to all
 0s if the PE's Home ENRP server is undetermined.</t>

<t hangText="Registration Life: 32 bits (signed integer)">
<vspace/>
Indicates the lifetime of the registration in number of
seconds. A value of -1 indicates infinite lifetime.</t>

<t hangText="User Transport"> 
<vspace/>
This can be either an DCCP, SCTP, TCP, UDP, UDP-Lite, or Opaque Transport
parameter (see
<xref target="dccp" />,
<xref target="sctp" />,
<xref target="tcp" />,
<xref target="udp" />,
<xref target="udp-lite" />, and
<xref target="opaque" />).
A PE MUST have one and only one User Transport.</t>

<t hangText="Member Selection Policy">
<vspace/>
Contains one of the defined member selection policy parameters
(see <xref target="member" />).</t>
<t hangText="ASAP Transport">
<vspace/>
This indicates the ASAP transport address of the PE and MUST be an
SCTP type transport parameter (see <xref target="sctp"/>).</t>
</list></t>
</section>

<!--******* 3.10 ******-->
<section anchor="serverinfo" title="Server Information Parameter">

<t>This parameter is used in ENRP to pass basic information of an ENRP
server.</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Type = 0xb            |       Length=variable         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           Server ID                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                       Server Transport                        :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText="Length: 16 bits (unsigned integer)">
<vspace/>
Indicates the entire length of the parameter in number of bytes.
<vspace/>
Note, the value in the Length field will NOT cover any padding at
the end of the parameter.</t>

<t hangText="Server ID: 32 bits (unsigned integer)">
<vspace/>
This is the ID of the ENRP server, as defined
in <xref target="RFC5353"/>.</t>

<t hangText="Server Transport:">
<vspace/>
This is an SCTP Transport Parameter, as defined in 
<xref target="sctp" />,
that contains the network access address(es), SCTP port number,
etc. of the ENRP server.</t>
</list></t>
</section>

<!-- ******* 3.11 ****** -->
<section anchor="operr" title="Operation Error Parameter">
<t>This parameter is used in both ENRP and ASAP for a message sender
to report an error(s) to a message receiver.</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Type = 0xc           |       Length=variable         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                                                               :
:                    one or more Error Causes                   :
:                                                               :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText="Length: 16 bits (unsigned integer)">
<vspace/>
Indicates the entire length of the parameter in number of bytes.
<vspace/>
Note, the value in the Length field will NOT cover any padding at
the end of the parameter.</t>
</list></t>

<t>Error causes are defined as variable-length parameters using the
following format:</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Cause Code          |       Cause Length            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                                                               :
:                    Cause-Specific Information                 :
:                                                               :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText="Cause Code: 16 bits (unsigned integer)">
<vspace/>
Defines the type of error condition being reported.
<texttable anchor="causetable">
<ttcol align='center'>Cause Code Value</ttcol>
<ttcol align='left'>Cause Code</ttcol>
<c>0x0</c>    <c>Unspecified Error</c>
<c>0x1</c>    <c>Unrecognized Parameter</c>
<c>0x2</c>    <c>Unrecognized Message</c>
<c>0x3</c>    <c>Invalid Values</c>
<c>0x4</c>    <c>Non-unique PE Identifier</c>
<c>0x5</c>    <c>Inconsistent Pooling Policy</c>
<c>0x6</c>    <c>Lack of Resources</c>
<c>0x7</c>    <c>Inconsistent Transport Type</c>
<c>0x8</c>    <c>Inconsistent Data/Control Configuration</c>
<c>0x9</c>    <c>Unknown Pool Handle</c>
<c>0xa</c>    <c>Rejected due to security considerations</c>
<c>0xb -0xffff</c> <c>(Available for assignment)</c>
</texttable>
</t>
<t hangText="Cause Length: 16 bits (unsigned integer)">
<vspace/>
Set to the size of the parameter in bytes, including the Cause
Code, Cause Length, and Cause-Specific Information fields, but
not including any padding at the end of this error cause TLV.</t>
<t hangText="Cause-specific Information: variable length">
<vspace/>
This field carries the details of the error condition.</t>
</list></t>

<t>The following subsections 
(<xref target="unspecified_err" /> - <xref target="incdatactl" />)
define specific error causes. </t>

<!--******* 3.11.1 ******-->
<section anchor="unspecified_err" title="Unspecified Error">
<t>This error cause is used to report an unspecified error by the
sender. There is no cause specific information.</t>
</section>

<!--******* 3.11.2 ******-->
<section anchor="unrecogparam" title="Unrecognized Parameter Error">
<t>This error cause is used to report an unrecognized parameter. The complete, 
unrecognized parameter TLV is included as cause-specific information.
If a message contains multiple unrecognized parameters, multiple error causes are used.</t>
</section>

<!--******* 3.11.3 ******-->
<section anchor="unrecogmsg" title="Unrecognized Message Error">
<t>This error cause is used to report an unrecognized message. The unrecognized
message TLV is included as cause-specific information.</t>
</section>

<!--******* 3.11.4 ******-->
<section anchor="invalidvalue" title="Invalid Values Error">
<t>This error cause is used to report one or more invalid values found in
a received parameter. The offending TLV that contains the invalid
value(s) is included as cause-specific information.</t>
</section>

<!---******* 3.11.5 ******-->
<section anchor="nonuniqid" title="Non-Unique PE Identifier Error">
<t>This error cause is used by an ENRP server to indicate to a
registering PE that the PE Identifier it chooses has already been
used by another PE in the pool. There is no cause-specific
information.</t>
</section>

<!---******* 3.11.6 ******-->
<section anchor="poolpolinc" title="Inconsistent Pool Policy Error">
<t>This error cause is used by an ENRP server to indicate to a
registering PE that the pool policy it chooses does not match the
overall policy of the pool. A Pool Member Selection Policy TLV (see 
<xref target="member" />) that indicates the overall pool
policy is included as cause-specific information.</t>
</section>

<!---******* 3.11.7 ******-->
<section anchor="noresource" title="Lack of Resources Error">
<t>This error cause is used to indicate that the sender does not have
certain resources to perform a requested function. There is no cause
specific information.</t>
</section>

<!---******* 3.11.8 ******-->
<section anchor="inctxtyp" title="Inconsistent Transport Type Error">
<t>This error cause is used by an ENRP server to indicate to a
registering PE that the User Transport it chooses does not match the
overall user transport of the pool. A Transport TLV that indicates the
overall pool user transport type is included as cause-specific
information. </t>
</section>

<!---******* 3.11.9 ******-->
<section anchor="incdatactl" title="Inconsistent Data/Control
Configuration Error">
<t>This error cause is used by an ENRP server to indicate to a
registering PE that the Transport Use field in the User Transport it
sent in its registration is inconsistent to the pool's overall
data/control channel configuration. There is no cause-specific
information. </t>
</section>

<!---******* 3.11.10 ******-->
<section anchor="insecure" title="Rejected Due to Security Considerations">
<t>This error cause is used by any endpoint to indicate a rejection
of a request due to a failure in security credentials or authorizations.</t>
</section>


<section anchor="poolunknown" title="Unknown Pool Handle Error">
<t>This error cause is used by an ENRP server to indicate to a
PE or PU that the requested pool is unknown by the server. There is no
cause-specific information.</t>

</section>
</section>

<!---******* 3.11 ******-->
<section anchor="Cookie" title="Cookie Parameter">
<t>This parameter defines a TLV that carries a Cookie.</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Type = 0xd         |       Length=variable         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                                                               :
:                             Cookie                            :
:                                                               :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText="Length: 16 bits (unsigned integer)">
<vspace/>
Indicates the entire length of the parameter in number of
bytes, including the Type, Length, and Cookie.</t>

<t hangText="Cookie: variable length">
<vspace/>
The Cookie is an arbitrary byte string of (Length - 4) bytes.</t>
</list></t>
</section>

<!---******* 3.12 ******-->
<section anchor="PE-Identifier" title="PE Identifier Parameter">
<t>This parameter defines a TLV that carries a PE Identifier.</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Type = 0xe         |         Length=0x8            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         PE Identifier                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>

<t><list style='hanging'>

<t hangText="PE Identifier: 32 bits (unsigned integer)">
<vspace/>
Uniquely identifies the PE in the pool. The PE picks its
identifier when it starts up.
See <xref target="RFC5352"/> for
recommendations on PE identifier generation.</t>
</list></t>
</section>

<!---******* 3.13 ******-->
<section anchor="PE-Checksum" title="PE Checksum Parameter">

<t>This parameter defines a TLV that carries a PE Checksum.</t>
<figure>
<artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Type = 0xf         |         Length=0x6            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           PE Checksum         |          Padding              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>

<t hangText="PE Checksum: 16 bits (unsigned integer)">
<vspace/>
An overall checksum of all PEs in the current handlespace owned by an
ENRP server (which is normally the sender of this TLV). The definition
and calculation of this checksum is defined in
<xref target="RFC5353"/>.</t>
</list></t>
</section>

<!---******* 3.13 ******-->
<section anchor="opaque" title="Opaque Transport Parameter">

<t>This parameter defines a TLV that carries opaque transport
information.</t>
<figure>
<artwork>
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Type = 0x10        |        Length=variable        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                                                               :
:                    Opaque Transport Data                      :
:                                                               :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>

<t hangText="Length: 16 bits (unsigned integer)">
<vspace/>
Indicates the entire length of the parameter in number of
bytes, including the Type, Length, and Opaque Transport Data.</t>

<t hangText="Opaque Transport Data: variable length">
<vspace/>
The Opaque Transport Data is an arbitrary byte string of (Length - 4) bytes.</t>
</list></t>
</section>

</section>

<!---******* 4 ******-->
<section anchor="commonmsg" title="Common Message Formats">
<t>
The figure below illustrates the common format for all ASAP and
ENRP messages. Each message is formatted with a Message Type field,
a message-specific Flag field, a Message Length field, and a Value
field.
</t>
<figure>
<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Message Type  |   Msg Flags   |        Message Length         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
:                                                               :
:                        Message Value                          :
:                                                               :
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText="Message Type: 8 bits (unsigned integer)">
<vspace/>
This field identifies the type of information contained in the
Message Value field. It takes a value from 0 to 254.  The value
of 255 is reserved for future use as an extension field.
<vspace/>
Message Types are encoded such that the two bits of the highest order
specify the action that must be taken if the message receiver
does not recognize the Message Type. 
<vspace/>
<list style='hanging'>
<t hangText='00'>
Stop processing this message and discard it.</t>
<t hangText='01'>
Stop processing this message and discard it, and report the
unrecognized message in an 'Unrecognized Message' error
(see <xref target="unrecogmsg" />).</t>
<t hangText='10'>
Reserved.</t>
<t hangText='11'>
Reserved.</t>
</list></t>

<t hangText="Message Flags: 8 bits">
<vspace/>
The usage of these bits depends on the message type, as given by
the Message Type. Unless otherwise specified, they are set to
zero on transmit and ignored on receipt.</t>

<t hangText="Message Length: 16 bits (unsigned integer)">
<vspace/>
This value represents the size of the message in bytes, including
the Message Type, Message Flags, Message Length, and Message
Value fields. Therefore, if the Message Value field is
zero length, the Length field will be set to 4.
<vspace/>
Note, the value in the Message Length field will NOT cover any
padding at the end of this message.</t>

<t hangText="Message Value: variable length">
<vspace/>
The Message Value field contains the actual information to be
transferred in the message.  The usage and format of this field
is dependent on the Message Type.
<vspace/>
The total length of a message (including Type, Length, and Value
fields) MUST be a multiple of 4 bytes.  If the length of the
message is not a multiple of 4 bytes, the sender MUST pad the
message with all zero bytes and this padding is not included in the
Message Length field. The sender should never pad with more than 3
bytes.  The receiver MUST ignore the padding bytes.</t>
</list></t>
</section>

<section title="IANA Considerations">

<t>This document (RFC 5354) is the reference for all registrations
described in this section. All registrations have been listed
on the RSerPool Parameters page.</t>


<section title="A New Table for RSerPool Parameter Types">
<t>RSerPool Parameter Types are maintained by IANA. Thirteen initial values
have been assigned by IANA, as described in
  <xref target='typetable'/>. IANA created
a new table, "RSerPool Parameter Types":</t>
<texttable>
<ttcol align='center'>Value</ttcol>
<ttcol align='left'>Parameter Type</ttcol>
<c>0x0</c>        <c>(Reserved by IETF)</c>
<c>0x1</c>        <c>IPv4 Address</c>
<c>0x2</c>        <c>IPv6 Address</c>
<c>0x3</c>        <c>DCCP Transport</c>
<c>0x4</c>        <c>SCTP Transport</c>
<c>0x5</c>        <c>TCP Transport</c>
<c>0x6</c>        <c>UDP Transport</c>
<c>0x7</c>        <c>UDP-Lite</c>
<c>0x8</c>        <c>Pool Member Selection Policy</c>
<c>0x9</c>        <c>Pool Handle</c>
<c>0xa</c>        <c>Pool Element</c>
<c>0xb</c>        <c>Server Information</c>
<c>0xc</c>        <c>Operation Error</c>
<c>0xd</c>        <c>Cookie</c>
<c>0xe</c>        <c>PE Identifier</c>
<c>0xf</c>        <c>PE Checksum</c>
<c>0x10</c>       <c>Opaque Transport</c>
<c>0xffffffff</c> <c>IETF-defined extensions</c>
<c>others</c>     <c>(Reserved by IETF)</c>
</texttable>

<t>Requests to register an RSerPool Parameter Type in this table
  should be sent to IANA. The number must be unique.
The "Specification Required" policy of <xref target="RFC5226"/>
MUST be applied.
</t>
</section>

<section title="A New Table for RSerPool Error Causes">
<t>RSerPool Error Causes are maintained by IANA. Eleven initial values
have been assigned by IANA, as described in
  <xref target="causetable"/>. IANA created
a new table, "RSerPool Error Causes":
<texttable>
<ttcol align='center'>Cause Code Value</ttcol>
<ttcol align='left'>Cause Code</ttcol>
<c>0x0</c>    <c>Unspecified Error</c>
<c>0x1</c>    <c>Unrecognized Parameter</c>
<c>0x2</c>    <c>Unrecognized Message</c>
<c>0x3</c>    <c>Invalid Values</c>
<c>0x4</c>    <c>Non-Unique PE Identifier</c>
<c>0x5</c>    <c>Inconsistent Pooling Policy</c>
<c>0x6</c>    <c>Lack of Resources</c>
<c>0x7</c>    <c>Inconsistent Transport Type</c>
<c>0x8</c>    <c>Inconsistent Data/Control Configuration</c>
<c>0x9</c>    <c>Unknown Pool Handle</c>
<c>0xa</c>    <c>Rejected Due to Security Considerations</c>
<c>others</c> <c>(Reserved by IETF)</c>
</texttable>
</t>
<t>Requests to register an RSerPool Error Cause in this table should
  be sent to IANA. The number must be unique.
The "Specification Required" policy of <xref target="RFC5226"/>
MUST be applied.</t>
</section>

</section>



<!---******* 5 ******-->
<section anchor="security" title="Security Considerations">
<t>This document contains common parameter formats only. As such,
it specifies no new security constraints on either ENRP or
ASAP. Details on ENRP and ASAP security constraints are
addressed in 
<xref target="RFC5353"/>
and 
<xref target="RFC5352"/>.</t>
</section>

</middle>
<back>

<references title="Normative References">
<?rfc include="reference.RFC.2119" ?>
<?rfc include="reference.RFC.5226" ?>

<!-- rserpool-asap became RFC 5352 -->
<reference anchor="RFC5352">

<front>
<title>Aggregate Server Access Protocol (ASAP)</title>

<author initials="R" surname="Stewart" fullname="Randall Stewart">
<organization/>
</author>

<author initials="Q" surname="Xie" fullname="Qiaobing Xie">
<organization/>
</author>

<author initials="M" surname="Stillman" fullname="Maureen Stillman">
<organization/>
</author>

<author initials="M" surname="Tuexen" fullname="Michael Tuexen">
<organization/>
</author>
<date month="September" year="2008"/>

</front>
<seriesInfo name="RFC" value="5352"/>
</reference>

<!-- rserpool-enrp became RFC 5353 -->
<reference anchor="RFC5353">

<front>
<title>Endpoint Handlespace Redundancy Protocol (ENRP)</title>

<author initials="Q" surname="Xie" fullname="Qiaobing Xie">
<organization/>
</author>

<author initials="R" surname="Stewart" fullname="Randall  Stewart">
<organization/>
</author>

<author initials="M" surname="Stillman" fullname="Maureen Stillman">
<organization/>
</author>

<author initials="M" surname="Tuexen" fullname="Michael Tuexen">
<organization/>
</author>

<author initials="A" surname="Silverton" fullname="Aron Silverton">
<organization/>
</author>
<date month="September" year="2008"/>

</front>
<seriesInfo name="RFC" value="5353"/>
</reference>

<!-- rserpool-policies became RFC 5356 -->
<reference anchor="RFC5356">

<front>
<title>Reliable Server Pooling Policies</title>

<author initials="T" surname="Dreibholz" fullname="Thomas Dreibholz">
<organization/>
</author>

<author initials="M" surname="Tuexen" fullname="Michael Tuexen">
<organization/>
</author>
<date month="September" year="2008"/>

</front>
<seriesInfo name="RFC" value="5356"/>
</reference>

</references>
</back>
</rfc>


