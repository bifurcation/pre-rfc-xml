<?xml version="1.0" encoding="US-ASCII"?>


<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [



<!ENTITY RFC2119 PUBLIC ''
  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
<!ENTITY RFC2629 PUBLIC ''
  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml'>
<!ENTITY RFC2460 PUBLIC ''
  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2460.xml'>
<!ENTITY RFC5887 PUBLIC ''
  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5887.xml'>
<!ENTITY RFC1918 PUBLIC ''
  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1918.xml'>
<!ENTITY RFC4192 PUBLIC ''
  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4192.xml'>
<!ENTITY RFC4193 PUBLIC ''
  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4193.xml'>
<!ENTITY RFC4862 PUBLIC ''
  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4862.xml'>
<!ENTITY RFC3315 PUBLIC ''
  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3315.xml'>
<!ENTITY RFC3007 PUBLIC ''
  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3007.xml'>
<!ENTITY RFC2608 PUBLIC ''
  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2608'>
<!ENTITY RFC6250 PUBLIC ''
  'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6250'>

]>


<?rfc toc="yes"?>            
<?rfc symrefs="yes"?>        
<?rfc sortrefs="yes"?>       
<?rfc iprnotified="no" ?>    
<?rfc compact="yes"?>
<?rfc subcompact="no" ?>
<?rfc rfcedstyle="yes"?>



<rfc submissionType="IETF" consensus="yes" ipr="trust200902" number="6866" category="info" >


<front>
<title abbrev="Renumbering Static Addresses">Problem Statement for Renumbering IPv6 Hosts with Static Addresses
in Enterprise Networks</title>


<author initials="B. E." surname="Carpenter" fullname="Brian Carpenter">
    <organization abbrev="Univ. of Auckland"></organization>
    <address>
      <postal>
        <street>Department of Computer Science</street>
        <street>University of Auckland</street>
        <street>PB 92019</street>
        <city>Auckland</city>
        <region></region>
        <code>1142</code>
        <country>New Zealand</country>
      </postal>
      
      <email>brian.e.carpenter@gmail.com</email>
    </address>
</author>

   <author fullname="Sheng Jiang" initials="S." surname="Jiang">
      <organization>Huawei Technologies Co., Ltd.</organization>
      <address>
        <postal>
          <street>Q14, Huawei Campus</street>
          <street>No.156 Beiqing Road</street>
          <city>Hai-Dian District, Beijing</city>
          <code>100095</code>
          <country>P.R. China</country>
        </postal>
        <email>jiangsheng@huawei.com</email>
      </address>
    </author>

 <date month="February" year="2013" />

<area>Operations and Management</area>
<workgroup>6RENUM</workgroup>

 

<abstract>

<t>This document analyses the problems of updating the IPv6 addresses of hosts in enterprise
networks that, for operational reasons, require static addresses. 
</t>
    
</abstract>
</front>

<middle>
<section anchor="intro" title="Introduction">

<t>A problem that is frequently mentioned in discussions of renumbering enterprise networks
<xref target="RFC5887"/> <xref target="RFC6879"/>  <xref target="GAP-ANALYSIS"/> 
is that of statically assigned addresses. The scope of the present document is to analyse
the problems caused for enterprise networks during renumbering by static addresses and to identify related
gaps in existing technology. Some aspects also apply to small office and home networks, but
these are not the intended scope of the document.</t>

<t>A static address can be defined as an IP address
that is intended by the network manager to remain constant over a long period of time, possibly
many years, regardless of system restarts or any other unpredictable events.
Static addressing often implies manual address assignment,
including manual preparation of configuration scripts. An implication of hosts having static addresses is 
that subnets must have static prefixes, which also requires analysis. </t>

<t>In a sense, the issue of static addresses is a result of history. As discussed in Section 3.2
of <xref target="RFC6250"/>, various properties of IP addresses that have long been assumed
by programmers and operators are no longer true today, although they were true when
almost all addresses were manually assigned. In some cases, the resulting operational difficulties are avoided
by static addressing.</t>

<t>Although static addressing is, in general, problematic for renumbering,
hosts inside an enterprise may have static addresses for a number of operational reasons:</t>
<t><list style="symbols">
   <t>For some reason, other hosts need to be configured with a literal numeric address for the host in question,
      so its address must be static.  </t>
   <t>Even if a site has local DNS support and this is normally used to locate servers, some operators wish their
      servers to have static addresses so that issues of address lifetime and DNS Time to Live (TTL) cannot affect connectivity. </t>
   <t>Some approaches to virtual server farms require static addressing. </t>
   <t>On some sites, the network operations staff require hosts to have static addresses for asset management purposes
      and for address-based backtracking of security incidents. </t>
   <t>Certain software licensing mechanisms are based on IP addresses. </t>
   <t>Network elements, such as routers, are usually assigned static addresses, which are also
      configured into network monitoring and management systems. </t>
   <t>Access Control Lists and other security mechanisms are often configured using IP addresses. </t>
   </list></t>

<t>Static addressing is not the same thing as manual addressing. Static addresses may be configured
automatically, for example, by stateful DHCPv6. In that case, the database from which the static
address is derived may itself have been created automatically in some fashion, or configured manually.
If a host's address is configured manually by the host's administrator, it is by definition static. </t>

<t>This document analyses these issues in more detail and presents a problem statement. 
Where obvious alternatives to static addresses exist, they are mentioned. </t> 

</section> <!-- intro -->

<section anchor="anal" title="Analysis">

 <section title="Static Addresses Imply Static Prefixes">
 <t>Host addresses can only be static if subnet prefixes are also static. Static prefixes are such a
 long-established practice in enterprise networks that it is hard to discern the reason for them. 
 Originally, before DHCP became available, there was simply no alternative. Thus it became accepted
 practice to assign subnet prefixes manually and build them into static router configurations. 
 Today, the static nature of subnet prefixes has become a diagnostic tool in itself, at
 least in the case of IPv4 where prefixes can easily be memorised. If several users
 sharing a subnet prefix report problems, the fault can readily be localised. </t>

 <t>This model is being challenged for the case of unmanaged home IPv6 networks, in which it is 
 possible to assign subnet prefixes automatically, at least in a 
 cold start scenario <xref target="PREFIX"/>. For an enterprise
 network, the question arises whether automatic subnet prefix assignment can be made
 using the "without a flag day" approach to renumbering. <xref target="RFC4192"/> specifies that
 "the new prefix is added to the network infrastructure in parallel with (and without interfering
 with) the old prefix". Any method for automatic prefix assignment needs to support this. </t>
 </section> 


 <section title="Other Hosts Need Literal Address">
 <t>This issue commonly arises in small networks without local DNS support, for devices such as printers,
    that all other hosts need to reach. In this case, not only does the host in question have a static address
    but that address is also configured in the other hosts. It is a long-established practice in small IPv4
    enterprise networks that printers, in particular, are manually assigned a
    fixed address (typically, an <xref target="RFC1918"/> address) and that users are told
    to manually configure printer access using that fixed address. For a small network, the work involved
    in doing this is much less than the work involved in doing it "properly" by setting up
    DNS service, whether local or hosted by an ISP, to give the printer a name. Also, although
    the Service Location Protocol (SLP) <xref target="RFC2608"/> is widely available for tasks
    such as printer discovery, it is not widely used in enterprise networks. In consequence,
    if the printer is renumbered for any reason, the manual configuration of all users' hosts must
    be updated in many enterprises. </t>
 <t>In the case of IPv6, exactly the same situation would be created by numbering the printer
    statically under the site's Unique Local Address (ULA) prefix <xref target="RFC4193"/>.
    Although this address would not change if the site's globally routable prefix is changed,
    internal renumbering for any other reason would be troublesome. Additionally, the disadvantage compared
    to IPv4 is that an IPv6 address is harder to communicate reliably, compared to something
    as simple as "10.1.1.10". The process will be significantly more error-prone for IPv6. </t>
 <t>If such a host is numbered out of a globally routable prefix that is potentially subject to renumbering,
    then a renumbering event will require a configuration change in all hosts using the device
    in question, and such configuration data are by no means stored in the network layer. </t>

 <t>At least two simple alternatives exist to avoid static numbering of simple devices, 
 such as printers, by giving them local names.
 One is the use of Multicast DNS (mDNS) <xref target="RFC6762"/> in
 combination with DNS Service Discovery <xref target="RFC6763"/>.
 The other is the Service Location Protocol <xref target="RFC2608"/>. Both of these solutions
 are widely implemented, but seemingly not widely deployed in enterprise networks. </t>
 </section>

 <section title="Static Server Addresses">

 <t>On larger sites, it is safe to assume that servers of all kinds, including printers, are identified
 in user configurations and applications by DNS names. However, it is very widespread operational practice
 that servers have static IP addresses. If they did not, whenever an address assigned by stateless address
 autoconfiguration <xref target="RFC4862"/> or DHCPv6 <xref target="RFC3315"/> expired, and if the address
 actually changed for some extraneous reason, sessions in progress might fail (depending on whether the 
 address deprecation period was long enough). </t>

 <t>DNS aspects of renumbering are discussed in more detail in <xref target="RFC6879"/>.
 Here, we note that one reason for widespread use of static server addresses is the lack
 of deployment of Secure Dynamic DNS update <xref target="RFC3007"/>, or some other method
 of prompt DNS updates, in enterprise networks. A separate issue is that even with such
 updates in place, remote users of a server would attempt to use the wrong address until
 the DNS TTL expired, as discussed in <xref target="RFC4192"/>. </t>

 <t>Server addresses can be managed centrally, even if they are static, by using DHCPv6 in stateful mode
 to ensure that the same address is always assigned to a given server. Consistency with DNS can
 be ensured by generating both DHCPv6 data and DNS data from a common configuration database
 using a suitable configuration tool. This does normally
 carry the implication that the database also contains the hardware (Media Access Control (MAC)) addresses of the relevant LAN
 interfaces on the servers, so that the correct IPv6 address can be delivered whenever a server requests
 an address. Not every operator wishes to maintain such a costly database, however, and some sites are
 therefore likely today to fall back on manual configuration of server addresses as a result. </t>

 <t>In the event of renumbering the prefix covering such servers, the situation should be manageable if there
 is a common configuration database; the "without a flag day" procedure <xref target="RFC4192"/> could be followed.
 However, if there is no such database, a manual procedure would have to be adopted. </t>
 </section> 

 <section title="Static Virtual Machine Addresses">
 <t>According to <xref target= "PROBLEM"/>, the placement and live
   migration of Virtual Machines (VMs) in a physical network requires that their IP
   addresses be fixed and static. Otherwise, when a VM is migrated
   to a different physical server, its IP address would change and transport sessions in progress would be lost.
   In effect, this is a special case of the previous one.</t>
 <t>If VMs are numbered out of a prefix that is subject to renumbering, there is a direct
   conflict with application session continuity, unless a procedure similar to <xref target="RFC4192"/>
   is followed. </t> 
 </section>

 <section title="Asset Management and Security Tracing">
 <t>There are some large (campus-sized) sites that not only capture the MAC addresses of servers in
    a configuration system, but also do so for desktop client machines with wired connections that are then given
    static IP addresses. Such hosts are not normally servers, so the two preceding cases do not apply. One
    motivation for this approach is straightforward asset management (Who has which computer?, Connected to
    which cable?). Another, more compelling, reason is security incident handling. If, as occurs with reasonable
    frequency on any large network, a particular host is found to be generating some form of unwanted
    traffic, it is urgent to be able to track back from its IP address to its physical location so that
    an appropriate intervention can be made. A static binding between the MAC address and the IPv6 address
    might be preferred for this purpose. </t>

 <t>Such users will not, in most circumstances, be significantly inconvenienced by prefix renumbering, as long
    as it follows the <xref target="RFC4192"/> procedure. The address deprecation mechanism would allow
    for clean termination of current sessions, including those in which their machine was actually operating
    as a server, e.g., for a peer-to-peer application. The only users who would be seriously affected would be
    those running extremely long transport sessions that might outlive the address deprecation period. </t>

 <t>Note that such large campus sites generally allocate addresses dynamically to wireless hosts,
    since (in an IPv4 world) addresses are scarce and allocating static addresses to intermittent users is
    not acceptable. Also, a wireless user may appear on different subnets at different times, so it
    cannot be given a single static address. These users will, in most circumstances, only be slightly
    inconvenienced, if at all, by prefix renumbering. </t>
 </section>

 <section title="Primitive Software Licensing">
 <t>Although it has many disadvantages and cannot be recommended as a solution,
    software licensing based on IP addresses or prefixes
    is still quite widely used in various forms. It is to be expected that this practice will
    continue for IPv6. If so, there is no alternative to informing the licensing party of
    the new address(es) by whatever administrative process is required. In an RFC 4192 renumbering
    procedure, the licenses for the old and new addresses or prefixes would have to overlap. </t>

 <t>If acceptable to the licensing mechanism, using addresses under an enterprise's ULA prefix for
    software licensing would avoid this problem. </t>

 </section>

 <section title="Network Elements">
 <t>Each interface of a router needs an IP address, and so do other network elements, such as firewalls,
    proxies, and load balancers. Since these are critical infrastructures, they must be monitored
    and in some cases controlled by a network management system. A conventional approach to this
    is to assign the necessary IP addresses statically, and to configure those addresses in the
    monitoring and management systems. It is common practice that some such addresses will have
    no corresponding DNS entry. If these addresses need to be changed, there will be considerable
    ramifications. A restart of the network element might be needed, interrupting
    all user sessions in progress. Simultaneously, the monitoring and management system configurations
    must be updated, and in the case of a default router, its clients must be informed. 
    To avoid such disruption, network elements must be renumbered according to an <xref target="RFC4192"/>
    procedure, like any other host. </t>

 <t>There is a school of thought that to minimise renumbering problems for network elements
 and to keep the simplicity of static addressing for them, network elements should all have static ULA addresses
 for management and monitoring purposes, regardless of what other global addresses they may have. </t>

 </section>

 <section title="Access Control Lists">
 <t>Access Control Lists (ACLs) and other security mechanisms are often configured using
 static IP addresses. This may occur in network elements or hosts. If they are not updated
 promptly during a renumbering event, the result may be the opening of security loopholes,
 the blocking of legitimate traffic, or both. Such security loopholes may never be detected
 until they are successfully exploited. </t>
 </section>

 <section title="Management Aspects">
 <t>As noted in the Introduction, static addressing and manual address configuration are not the same thing.
 In terms of managing a renumbering event, static addressing derived automatically from a central database, e.g., by
 stateful DHCPv6, is clearly better than manual configuration by an administrator. This remains true even if
 the database itself requires manual changes, since, otherwise, an administrator would have to log in to
 every host concerned, a time-consuming and error-prone task. In cases where static addresses cannot
 be avoided, they could be assigned automatically from a central database using a suitable protocol,
 such as stateful DHCPv6. Clearly, the database needs to be supported by a suitable configuration tool,
 to minimise manual updates and to eliminate manual configuration of individual hosts. </t>
 </section>


</section> <!-- anal -->

<section anchor="prob" title="Summary of Problem Statement">

<t>If subnet prefixes are statically assigned, various network elements and the network management system
must be updated when they are renumbered. To avoid loss of existing user sessions, the old prefixes
need to be removed only after a period of overlap.  </t>

<t>If a printer or similar local server is statically addressed, and has no 
DNS or mDNS name and no discovery protocol, renumbering will require configuration 
changes in all hosts using that server.
Most likely, these changes will be manual; therefore, this type of configuration should be avoided except for
very small networks. Even if the server is under a ULA prefix, any subnet
rearrangement that causes it to be renumbered will have the same effect. </t>

<t>If a server with a DNS name is statically addressed via a common configuration database that supports both
DHCPv6 and DNS, then it can be renumbered "without a flag day" by following RFC 4192. However, if there is no common
configuration database, then present technology requires manual intervention. Similar considerations apply to
virtual servers with static addresses. </t>

<t>If client computers, such as desktops, are statically addressed via a common configuration database and stateful DHCPv6, they can
also be renumbered "without a flag day." But other statically addressed clients will need manual intervention,
so DHCPv6 should be used if possible. </t>

<t>If address-based software licensing is unavoidable, requiring static addresses, and ULAs cannot be used 
for this case, an administrative procedure during renumbering seems unavoidable. </t>

<t>If network elements have static addresses, the network management system and affected client hosts must
be informed when they are renumbered. Even if a network element is under a ULA prefix, any subnet
rearrangement that causes it to be renumbered will have the same effect. </t>

<t>ACLs configured with static addresses must be updated during renumbering. </t>

<t>It appears that the majority of the above problems can be largely mitigated if the following measures are taken:</t>


<t>
<list style="numbers">
<t>The site uses a general
configuration management database and an associated tool that manage all prefixes and all DHCPv6, DNS,
and router and security configurations in a consistent and integrated way. Even if static addresses
are used, they are always configured with this tool, and never manually. Specification of such 
a tool is out of scope for the present document. </t>
<t>All printers and other local servers are always
accessed via a DNS or mDNS name, or via a discovery protocol. User computers are configured only with names for
such servers and never with their addresses. </t>
<t>Internal traffic uses a ULA prefix, such that disturbance to such traffic is avoided
if the externally used prefix changes. </t>
<t>If prefix renumbering is required, the RFC 4192 procedure is followed. </t>
</list>
</t>

<t>Remaining open questions are: </t>
<t>
<list style="numbers">
<t>Is minor residual loss of extremely long-living transport sessions during renumbering operationally acceptable? </t>
<t>Can automatic network element renumbering be performed without interrupting any user sessions? </t>
<t>Do any software licensing systems require manual intervention? </t>
</list>
</t>


</section> <!-- prob -->


<section anchor="security" title="Security Considerations">

<t>This document does not define a protocol, so it does not introduce any new security exposures.
However, security configurations, such as ACLs, are affected by the renumbering of static addresses. </t>

   
</section> <!-- security -->





<section anchor="ack" title="Acknowledgements">

<t>
Valuable comments and contributions were made by
Ran Atkinson,
Ralph Droms,
Adrian Farrel,
Wes George, 
Brian Haberman, 
Bing Liu,
Pete Resnick,
and other participants in the 6renum WG.</t>


</section> <!-- ack -->


</middle>

<back>


<references title="Informative References">

&RFC5887;
&RFC1918;
&RFC4192;
&RFC4193;
&RFC4862;
&RFC3315;
&RFC3007;
&RFC2608;
&RFC6250;

<!--All notes as of 1/17/13 -->

<!--&DRAFT-renent;draft-ietf-6renum-enterprise-05; Entered queue as submitted for PUB -->



<reference anchor='RFC6879'>
<front>
<title>IPv6 Enterprise Network Renumbering Scenarios, Considerations, and Methods</title>

<author initials='S' surname='Jiang' fullname='Sheng Jiang'>
    <organization />
</author>

<author initials='B' surname='Liu' fullname='Bing Liu'>
    <organization />
</author>

<author initials='B' surname='Carpenter' fullname='Brian Carpenter'>
    <organization />
</author>

<date month='February' year='2013' />

<abstract><t>This document analyzes events that cause renumbering and describes the current renumbering methods. These are described in three categories: those applicable during network design, those applicable during preparation for renumbering, and those applicable during the renumbering operation.</t></abstract>

</front>

<seriesInfo name='RFC' value='6879' />

</reference>



<!--&DRAFT-rengap;draft-ietf-6renum-gap-analysis-05; Exists, waiting on WG chair-->



<reference anchor='GAP-ANALYSIS'>
<front>
<title>IPv6 Site Renumbering Gap Analysis</title>

<author initials='B' surname='Liu' fullname='Bing Liu'>
    <organization />
</author>

<author initials='S' surname='Jiang' fullname='Sheng Jiang'>
    <organization />
</author>

<author initials='B' surname='Carpenter' fullname='Brian Carpenter'>
    <organization />
</author>

<author initials='S' surname='Venaas' fullname='Stig Venaas'>
    <organization />
</author>

<author initials='W' surname='George' fullname='Wesley George'>
    <organization />
</author>

<date month='December' day='12' year='2012' />

<abstract><t>This document briefly introduces the existing mechanisms that could be utilized for IPv6 site renumbering and tries to cover most of the explicit issues and requirements of IPv6 renumbering. Through the gap analysis, the document provides a basis for future works that identify and develop solutions or to stimulate such development as appropriate. The gap analysis is presented following a renumbering event procedure summary.</t></abstract>

</front>

<seriesInfo name='Work in' value='Progress' />

</reference>


<!--&DRAFT-nvo3;draft-ietf-nvo3-overlay-problem-statement-01; Exists-->




<reference anchor='PROBLEM'>
<front>
<title>Problem Statement: Overlays for Network Virtualization</title>

<author initials='T' surname='Narten' fullname='Thomas Narten' role="editor">
    <organization />
</author>

<author initials='E' surname='Gray' fullname='Eric Gray' role="editor">
    <organization />
</author>

<author initials='D' surname='Black' fullname='David Black' >
    <organization />
</author>

<author initials='D' surname='Dutt' fullname='Dinesh Dutt'>
    <organization />
</author>

<author initials='L' surname='Fang' fullname='Luyuan Fang'>
    <organization />
</author>

<author initials='L' surname='Kreeger' fullname='Lawrence Kreeger'>
    <organization />
</author>

<author initials='M' surname='Napierala' fullname='Maria Napierala'>
    <organization />
</author>

<author initials='M' surname='Sridharan' fullname='Murari Sridharan'>
    <organization />
</author>

<date month='October' day='22' year='2012' />

<abstract><t>This document describes issues associated with providing multi- tenancy in large data center networks and how these issues may be addressed using an overlay-based network virtualization approach.  A key multi-tenancy requirement is traffic isolation, so that one tenant's traffic is not visible to any other tenant.  Another requirement is address space isolation, so that different tenants can use the same address space within different virtual networks. Traffic and address space isolation is achieved by assigning one or more virtual networks to each tenant, where traffic within a virtual network can only cross into another virtual network in a controlled fashion (e.g., via a configured router and/or a security gateway). Additional functionality is required to provision virtual networks, associating a virtual machine's network interface(s) with the appropriate virtual network, and maintaining that association as the virtual machine is activated, migrated and/or deactivated.  Use of an overlay-based approach enables scalable deployment on large network infrastructures.</t></abstract>

</front>

<seriesInfo name='Work in' value='Progress' />

</reference>


<!--&DRAFT-homepref;draft-baker-homenet-prefix-assignment-01, Expired-->


<reference anchor='PREFIX'>
<front>
<title>IPv6 Prefix Assignment in Small Networks</title>

<author initials='F' surname='Baker' fullname='Fred Baker'>
    <organization />
</author>

<author initials='R' surname='Droms' fullname='Ralph Droms'>
    <organization />
</author>

<date month='March' day='7' year='2012' />

<abstract><t>It is necessary to allocate prefixes in small networks, which include residential and Small Office/Home Office (SOHO) networks in a manner that minimizes or eliminates manual configuration.  This note suggests an approach.</t></abstract>

</front>

<seriesInfo name='Work in' value='Progress' />


</reference>


<reference anchor='RFC6762'>
<front>
<title>Multicast DNS</title>

<author initials='S' surname='Cheshire' fullname='Stuart Cheshire'>
    <organization />
</author>

<author initials='M' surname='Krochmal' fullname='Marc Krochmal'>
    <organization />
</author>

<date month='February' year='2013' />

<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.  Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional unicast DNS server. In addition, mDNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.  The primary benefits of mDNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>

</front>

<seriesInfo name='RFC' value='6762' />

</reference>
  


<reference anchor='RFC6763'>
<front>
<title>DNS-Based Service Discovery</title>

<author initials='S' surname='Cheshire' fullname='Stuart Cheshire'>
    <organization />
</author>

<author initials='M' surname='Krochmal' fullname='Marc Krochmal'>
    <organization />
</author>

<date month='February' year='2013' />

<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this allows clients to discover a list of named instances of that desired service, using standard DNS queries. This is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>

</front>

<seriesInfo name='RFC' value='6763' />

</reference>


</references>




</back>
</rfc>

