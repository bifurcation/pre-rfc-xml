<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY rfc1812 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1812.xml">
<!ENTITY rfc2741 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2741.xml">
<!ENTITY rfc3654 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3654.xml">
<!ENTITY rfc3746 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3746.xml">
<!ENTITY rfc3015 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3015.xml">
<!ENTITY rfc3292 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3292.xml">
<!ENTITY rfc5378 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5378.xml">
<!ENTITY rfc5810 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5810.xml">
<!ENTITY rfc5811 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5811.xml">
<!ENTITY rfc5812 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5812.xml">
<!ENTITY rfc5813 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5813.xml">
]>
<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="yes" ?>
<?rfc rfcedstyle="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc strict="no"?>
<?rfc comments="no" ?>
<?rfc inline="no" ?>

<rfc category="info" number="6041"
     ipr="pre5378Trust200902">
  <front>
    <title abbrev="ForCES Applicability Statement">Forwarding and Control
Element Separation (ForCES) Applicability&nbsp;Statement</title>

    <author fullname="Alan Crouch" initials="A." surname="Crouch">
      <organization>Intel</organization>

      <address>
        <postal>
          <street>2111 NE 25th Avenue</street>

          <city>Hillsboro, OR</city>

          <code>97124</code>

          <country>USA</country>
        </postal>

        <phone>+1 503 264 2196</phone>

        <email>alan.crouch@intel.com</email>
      </address>
    </author>

    <author fullname="Hormuzd Khosravi" initials="H." surname="Khosravi">
      <organization>Intel</organization>

      <address>
        <postal>
          <street>2111 NE 25th Avenue</street>

          <city>Hillsboro, OR</city>

          <code>97124</code>

          <country>USA</country>
        </postal>

        <phone>1-503-264-0334</phone>

        <email>hormuzd.m.khosravi@intel.com</email>
      </address>
    </author>

    <author fullname="Avri Doria" initials="A." surname="Doria" role="editor">
      <organization>LTU</organization>

      <address>
        <postal>
          <street>Lulea University of Technology</street>

          <city></city>

          <code></code>

          <country>Sweden</country>
        </postal>

        <phone>+46 73 277 1788</phone>

        <email>avri@acm.org</email>
      </address>
    </author>

    <author fullname="Xin-ping Wang" initials="X." surname="Wang">
      <organization>Huawei</organization>

      <address>
        <postal>
          <street></street>

          <city>Beijing</city>

          <code></code>

          <country>China</country>
        </postal>

        <phone>+86 10 82836067</phone>

        <email>carly.wang@huawei.com</email>
      </address>
    </author>

    <author fullname="Kentaro Ogawa" initials="K." surname="Ogawa">
      <organization>NTT Corporation</organization>

      <address>
        <postal>
          <street>3-9-11 Midori-cho</street>

          <city>Musashino-shi, Tokyo</city>

          <code>180-8585</code>

          <country>Japan</country>
        </postal>

        <email>ogawa.kentaro@lab.ntt.co.jp</email>
      </address>
    </author>

    <date month="October" year="2010" />

    <area>Routing</area>

    <workgroup>ForCES Working Group</workgroup>

    <abstract>
      <t>The Forwarding and Control Element Separation (ForCES) protocol
      defines a standard framework and mechanism for
      the interconnection between control elements and forwarding elements in
      IP routers and similar devices.  In this document we describe the
      applicability of the ForCES model and protocol.  We provide example
      deployment scenarios and functionality, as well as document applications
      that would be inappropriate for ForCES.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The Forwarding and Control Element Separation (ForCES) protocol
      defines a standard framework and mechanism for
      the exchange of information between the logically separate functionality
      of the control and data forwarding planes of IP routers and similar
      devices.  It focuses on the communication necessary for separation of
      control plane functionality such as routing protocols, signaling
      protocols, and admission control from data forwarding plane per-packet
      activities such as packet forwarding, queuing, and header editing.</t>

      <t>This document defines the applicability of the ForCES mechanisms.  It
      describes types of configurations and settings where ForCES is most
      appropriately applied.  This document also describes scenarios and
      configurations where ForCES would not be appropriate for use.</t>
    </section>

      <section title="Purpose">
      <t>The purpose of the ForCES Applicability Statement is to capture the
      intent of the ForCES protocol <xref target="RFC5810"></xref> designers
      as to how the protocol could be used in conjunction with the ForCES
      model <xref target="RFC5812"></xref> and a Transport Mapping Layer <xref
      target="RFC5811"></xref>.</t>

      </section>


    <section title="Terminology">
      <t>A set of concepts associated with ForCES was introduced in
      "Requirements for Separation of IP Control and Forwarding" <xref
      target="RFC3654"></xref> and in "Forwarding and Control Element
      Separation (ForCES) Framework" <xref target="RFC3746"></xref>.  The
      terminology associated with these concepts and with the protocol
      elements in
      ForCES is defined in the "Forwarding and Control Element Separation
      (ForCES) Protocol Specification" <xref target="RFC5810"></xref>. </t>

      <t>The reader is directed to these documents for the conceptual
      introduction and for definitions, including the following
      acronyms:</t>

      <t><list style="symbols">
          <t>CE: control element</t>

          <t>CEM: CE Manager</t>

          <t>FE: forwarding element</t>

          <t>FEM: FE Manager</t>

          <t>ForCES: Forwarding and Control Element Separation protocol</t>

          <t>LFB: Logical Function Block</t>

          <t>NE: ForCES network element </t>

          <t>TML: Transport Mapping Layer</t>
        </list></t>

    </section>

    <section title="Applicability to IP Networks">
      <t>This section lists the areas of ForCES applicability in IP network
      devices.  Some relatively low-end routing systems may be implemented on
      simple hardware that performs both control and packet forwarding
      functionality.  ForCES may not be useful for such devices.</t>

      <t>Higher-end routing systems typically distribute work amongst several
      interface-processing elements, and these devices (FEs) therefore need to
      communicate with the control element(s) to perform their job.  A
      higher-end router may also distribute control processing amongst several
      processing elements (CEs).  ForCES provides a standard way to do this
      communication.  ForCES also provides support for high-availability
      configurations that include a primary CE and one or more secondary
      CEs.</t>

      <t>The remainder of this section lists the applicable services that
      ForCES may support, applicable FE functionality, applicable CE-FE link
      scenarios, and applicable topologies in which ForCES may be
      deployed.</t>

      <section title="Applicable Services">
        <t>In this section we describe the applicability of ForCES for the
        following control-forwarding-plane services:</t>

        <t><list style="symbols">
            <t>Association, Capability Discovery, and Information Exchange</t>

            <t>Topology Information Exchange</t>

            <t>Configuration</t>

            <t>Routing Exchange</t>

            <t>Quality of Service (QoS) Exchange</t>

            <t>Security Exchange</t>

            <t>Filtering Exchange</t>

            <t>Encapsulation/Tunneling Exchange</t>

            <t>NAT and Application-Level Gateways</t>

            <t>Measurement and Accounting</t>

            <t>Diagnostics</t>

            <t>CE Redundancy or CE Failover</t>
          </list></t>

        <section title="Association, Capability Discovery, and Information Exchange">
          <t>Association is the first step of the ForCES protocol exchange in
          which capability discovery and exchange happens between one or more
          CEs and the FEs.  ForCES assumes that CEs and FEs already have
          sufficient information to begin communication in a secure manner.
          The ForCES protocol is only applicable after CEs and FEs have
          discovered each other.  ForCES makes no assumption about whether
          discovery was performed using a dynamic protocol or merely static
          configuration.  Some discussion about how this can occur can be found
          in <xref target="fem-cem" /> of this document.</t>

          <t>During the association phase, CEs and FEs exchange capability
          information with each other.  For example, the FEs express the number
          of interface ports they provide, as well as the static and
          configurable attributes of each port.</t>

          <t>In addition to initial configuration, the CEs and FEs also
          exchange dynamic configuration changes using ForCES.  For example,
          FEs asynchronously inform the CEs of an increase/decrease in
          available resources or capabilities on the FE.</t>
        </section>

        <section title="Topology Information Exchange">
          <t>In this context, topology information relates to how the FEs are
          interconnected with each other with respect to packet forwarding.
          Topology discovery is outside the scope of the ForCES protocol.  An
          implementation can choose its own method of topology discovery (for
          example, it can use a standard topology discovery protocol or apply a
          static topology configuration policy).  Once the topology is
          established, the ForCES protocol may be used to transmit the
          resulting information to the CEs.</t>
        </section>

        <section title="Configuration">
          <t>ForCES is used to perform FE configuration.  For example, CEs set
          configurable FE attributes such as IP addresses, etc. for their
          interfaces.</t>
        </section>

        <section title="Routing Exchange">
          <t>ForCES may be used to deliver packet forwarding information
          resulting from CE routing calculations.  For example, CEs may send
          forwarding table updates to the FEs, so that they can make
          forwarding decisions.  FEs may inform the CEs in the event of a
          forwarding table miss.  ForCES may also be used to configure
          Equal Cost Multi-Path (ECMP) capability.</t>
        </section>

        <section title="QoS Capabilities Exchange and Configuration">
          <t>ForCES may be used to exchange QoS capabilities between CEs and
          FEs.  For example, an FE may express QoS capabilities to the CE.  Such
          capabilities might include metering, policing, shaping, and queuing
          functions.  The CE may use ForCES to configure these
          capabilities.</t>
        </section>

        <section title="Security Exchange">
          <t>ForCES may be used to exchange security information between a CE
          and the FEs it controls.  For example, the FE may use ForCES to
          express the types of encryption that it is capable of using in an
          IP Security (IPsec) tunnel.  The CE may use ForCES to configure
          such a tunnel.  The
          CEs would be responsible for the NE dynamic key exchanges and
          updates.</t>
        </section>

        <section title="Filtering Exchange and Firewalls">
          <t>ForCES may be used to exchange filtering information.  For
          example, FEs may use ForCES to express the filtering functions, such
          as classification and action, that they can perform, and the CE may
          configure these capabilities.</t>
        </section>

        <section title="Encapsulation/Tunneling Exchange">
          <t>ForCES may be used to exchange encapsulation capabilities of an
          FE, such as tunneling, and the configuration of such
          capabilities.</t>
        </section>

        <section title="NAT and Application-Level Gateways">
          <t>ForCES may be used to exchange configuration information for
          Network Address Translators.  Whilst ForCES is not specifically
          designed for the configuration of application-level gateway
          functionality, this may be in scope for some types of
          application-level gateways.</t>
        </section>

        <section title="Measurement and Accounting">
          <t>ForCES may be used to exchange configuration information
          regarding traffic measurement and accounting functionality.  In this
          area, ForCES may overlap somewhat with functionality provided by
          network management mechanisms such as the Simple Network
          Management Protocol (SNMP).  In some
          cases, ForCES may be used to convey information to the CE to be
          reported externally using SNMP.  A further discussion of this
          capability is covered in <xref target="ForCES-man" /> of this
          document.</t>
        </section>

        <section title="Diagnostics">
          <t>ForCES may be used for CEs and FEs to exchange diagnostic
          information.  For example, an FE can send self-test results to a
          CE.</t>
        </section>

        <section title="Redundancy and Failover">
          <t>The ForCES architecture includes mechanisms that allow for
          multiple redundant CEs and FEs in a ForCES NE.  The ForCES-model LFB
          definitions provide sufficient component details via component
          identifiers to be universally unique within an NE.  The ForCES
          protocol includes mechanisms to facilitate transactions as well as
          atomicity across the NE.</t>

          <t>Given the above, it is possible to deploy redundant CEs and FEs
          that incorporate failover.</t>
        </section>
      </section>

      <section title="CE-FE Link Capability">
        <t>When using ForCES, the bandwidth of the CE-FE link is a
        consideration, and cannot be ignored.  For example, sending a full
        routing table is reasonable over a high-bandwidth link, but could be
        non-trivial over a lower-bandwidth link.  ForCES should be sufficiently
        future-proof to be applicable in scenarios where routing tables grow
        to several orders of magnitude greater than their current size.
        However, we also note that not all IP routers need full routing
        tables.</t>
      </section>

      <section title="CE/FE Locality">
        <t>ForCES is intended for environments where one of the following
        applies:</t>

        <t><list style="symbols">
            <t>The control interconnect is some form of local bus, switch, or
            LAN, where reliability is high, closely controlled, and not
            susceptible to external disruption that does not also affect the
            CEs and/or FEs.</t>

            <t>The control interconnect shares its fate with the FE's forwarding
            function.  Typically this is because the control connection is also
            the FE's primary packet forwarding connection, and so if that link
            goes down, the FE cannot forward packets anyway.</t>
          </list></t>

        <t>The key guideline is that the reliability of the device should not
        be significantly reduced by the separation of control and forwarding
        functionality.</t>

        <t>Taking this into account, ForCES is applicable in the following
        CE/FE localities:</t>

        <t><list style="hanging">
            <t hangText="Single Box NE: "><vspace blankLines="0" />
            chassis with multiple CEs and FEs
            set up.  ForCES is applicable in localities consisting of control
            and forwarding elements that are components in the same physical
            box.</t>

            <t hangText="">Example: a network element with a single control
            blade, and one or more forwarding blades, all present in the same
            chassis and sharing an interconnect such as Ethernet or Peripheral
            Component Interconnect (PCI).  In
            this locality, the majority of the data traffic being forwarded
            typically does not traverse the same links as the ForCES control
            traffic.</t>

            <t hangText="Multiple Box NE: "><vspace blankLines="0" />
            separated CE and FE, where physical
            locality could be the same rack, room, or building; or long
            distances that could span across continents and oceans.  ForCES is
            applicable in localities consisting of control and forwarding
            elements that are separated by a single hop or multiple hops in
            the network.</t>
          </list></t>
      </section>
    </section>

    <section title="Security Considerations">
      <t>The ForCES protocol allows for a variety of security levels <xref
      target="RFC5810"></xref>.  When operating under a secured physical
      environment, or for other operational concerns (in some cases,
      performance issues), the operator may turn off all the security functions
      between CEs and FEs.  When the operator makes a decision to secure the
      path between the FEs and CEs, then the operator chooses from one of the
      options provided by the TML.  Security choices provided by the TML take
      effect during the pre-association phase of the ForCES protocol.  An
      operator may choose to use all, some, or none of the security services
      provided by the TML in a CE-FE connection.  A ForCES NE is required to
      provide CE/FE node authentication services, and may provide message
      integrity and confidentiality services.  The NE may provide these
      services
      by employing IPsec or Transport Layer Security (TLS), depending on
      the choice of TML used in the deployment of the&nbsp;NE.</t>
    </section>

    <section title="ForCES Manageability" anchor="ForCES-man">
      <t>From the architectural perspective, the ForCES NE is a single network
      element. As an example, if the ForCES NE is specifically a router that
      needs to be managed, then it should be managed in essentially the same
      way any router should be managed.  From another perspective, element
      management could directly view the individual entities and interfaces
      that make up a ForCES NE.  However, any element management updates made
      directly on these entities and interfaces may compromise the control
      relationship between the CEs and the FEs, unless the update mechanism
      has been accounted for in the model used by the NE.</t>

      <section title="The NE as an Atomic Element">
        <t>From the ForCES Requirements <xref target="RFC3654"></xref>, Section
        4, point 4:</t>

        <list style="empty">
        <t>A NE MUST support the appearance of a single functional device.</t>
        </list>

        <t>As a single functional device, a ForCES NE runs protocols, and each
        of the protocols has its own existing manageability aspects that are
        documented elsewhere.  As an example, a router would also have a
        configuration interface.  When viewed in this manner, the NE is
        controlled as a single routing entity, and no new management beyond
        what is already available for routers and routing protocols would be
        required for a ForCES NE.  Management commands on a management
        interface to the NE will arrive at the CE and may require ForCES
        interactions between the CE and FEs to complete.  This may impact the
        atomicity of such commands and may require careful implementation by
        the CE.</t>
      </section>

      <section title="The NE as Composed of Manageable Elements">
        <t>When viewed as a decomposed set of elements from the management
        perspective, the ForCES NE is divided into a set of one of more
        control elements, forwarding elements, and the interfaces between them.
        The interface functionality between the CE and the FE is provided by
        the ForCES protocol.  A MIB module is provided for the purpose of
        gaining management information on the operation of the protocol
        described in <xref target="ForCES-MIB" /> of this document.</t>

        <t>Additionally, the architecture makes provisions for configuration
        control of the individual CEs and FEs.  This is handled by elements
        called the FE Manager (FEM) and the CE Manager (CEM).  Specifically,
        from the
        ForCES Requirements RFC <xref target="RFC3654"></xref>, Section 4,
        point 4:</t>

        <list style="empty">
        <t>However, external entities (e.g., FE Managers and CE Managers) MAY
        have direct access to individual ForCES protocol elements for
        providing information to transition them from the pre-association to
        the post-association phase.</t>
        </list>
      </section>

      <section title="ForCES Protocol MIB" anchor="ForCES-MIB">
        <t>The ForCES MIB <xref target="RFC5813"></xref> defines a primarily
        read-only MIB module that captures information related to the ForCES
        protocol.  This includes state information about the associations
        between CE(s) and FE(s) in the NE.</t>

        <t>The ForCES MIB does not include information that is specified in
        other MIB modules, such as packet counters for interfaces, etc.</t>

        <t>More specifically, the information in the ForCES MIB module
        relative to associations includes:</t>

        <t><list style="symbols">
            <t>identifiers of the elements in the association</t>

            <t>state of the association</t>

            <t>configuration parameters of the association</t>

            <t>statistics of the association</t>
          </list></t>

        <section title="MIB Management of an FE">
          <t>While it is possible to manage an FE from an element manager,
          several requirements relating to this have been included in the
          ForCES Requirements.</t>

          <t>From the ForCES Requirements <xref target="RFC3654"></xref>,
          Section 4, point 14:</t>

          <list style="empty">
          <list style="numbers">
              <t>The ability for a management tool (e.g., SNMP) to be used to
              read (but not change) the state of FE SHOULD NOT be
              precluded.</t>

              <t>It MUST NOT be possible for management tools (e.g., SNMP,
              etc) to change the state of a FE in a manner that affects
              overall NE behavior without the CE being notified.</t>
            </list>
            </list>

          <t>The ForCES Framework <xref target="RFC3746"></xref>, Section
          5.7, goes further in discussing the manner in which FEs should
          handle management requests that are specifically directed to the
          FE:</t>

          <list style="empty">
          <t>(For a ForCES NE that is an IP router,) RFC 1812 <xref
          target="RFC1812"></xref> also dictates that "Routers must be
          manageable by SNMP".  In general, for the post-association phase,
          most external management tasks (including SNMP) should be done
          through interaction with the CE in order to support the appearance
          of a single functional device.  Therefore, it is recommended that an
          SNMP agent be implemented by CEs and that the SNMP messages received
          by FEs be redirected to their CEs.  AgentX framework defined in
          RFC 2741 <xref target="RFC2741"></xref>) may be applied here
          such that CEs act in
          the role of master agent to process SNMP messages while FEs
          act in the role of subagent to provide access to the MIB objects
          residing on FEs.  AgentX protocol messages between the master agent
          (CE) and the subagent (FE) are encapsulated and transported via
          ForCES, just like data packets from any other application layer
          protocols.</t>
          </list>
        </section>
      </section>

      <section title="The FEM and CEM" anchor="fem-cem">
        <t>Though out of scope for the initial ForCES specification effort,
        the ForCES architecture includes two entities: the CE Manager (CEM) and
        the FE Manager (FEM).  From the ForCES Protocol Specification <xref
        target="RFC5810"></xref>:</t>

        <t><list style="hanging">
            <t hangText="CE Manager (CEM):"><vspace blankLines="0" />
            A logical entity responsible for
            generic CE management tasks.  It is particularly used during the
            pre-association phase to determine with which FE(s) a CE should
            communicate.</t>

            <t hangText="FE Manager (FEM):"><vspace blankLines="0" />
            A logical entity responsible for
            generic FE management tasks.  It is used during the pre-association
            phase to determine with which CE(s) an FE should communicate.</t>
          </list></t>
      </section>
    </section>

    <section title="Contributors">
      <t>Mark Handley was an initial author involved in the earlier versions
      of this document.</t>

      <t></t>
    </section>

    <section title="Acknowledgments">
      <t>Many of the participants in the ForCES WG, as well as fellow
      employees of
      the authors, have provided valuable input into this work.  Particular
      thanks go to Jamal Hadi Salim, our WG chair and document shepherd;
      and to Adrian Farrel, the AD for the area; for their review,
      comments, and encouragement, without which this document might
      never have been completed.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      &rfc1812;
      &rfc5810;
      &rfc5811;
      &rfc5812;
      &rfc5813;
    </references>

    <references title="Informative References">
      &rfc2741;
      &rfc3654;
      &rfc3746;
    </references>
  </back>
</rfc>
