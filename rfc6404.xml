<?xml version="1.0" encoding="US-ASCII"?>

<?rfc strict="no"?>
<?rfc toc="yes" ?>
<?rfc tocompact="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc rfcedstyle="yes"?>


<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY rfc2827 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2827.xml'>
<!ENTITY rfc3261 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml'>
<!ENTITY rfc3263 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3263.xml'>
<!ENTITY rfc3323 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3323.xml'>
<!ENTITY rfc3324 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3324.xml'>
<!ENTITY rfc3325 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3325.xml'>
<!ENTITY rfc3711 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3711.xml'>
<!ENTITY rfc3893 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3893.xml'>
<!ENTITY rfc4033 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4033.xml'>
<!ENTITY rfc4034 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4034.xml'>
<!ENTITY rfc4035 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4035.xml'>
<!ENTITY rfc4301 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4301.xml'>
<!ENTITY rfc4347 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4347.xml'>
<!ENTITY rfc4474 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4474.xml'>
<!ENTITY rfc4475 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4475.xml'>
<!ENTITY rfc4568 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4568.xml'>
<!ENTITY rfc4732 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4732.xml'>
<!ENTITY rfc5246 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml'>
<!ENTITY rfc5486 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5486.xml'>
<!ENTITY rfc5853 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5853.xml'>
<!ENTITY rfc5352 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5352.xml'>
<!ENTITY rfc5353 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5353.xml'>
<!ENTITY rfc5351 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5351.xml'>
<!ENTITY rfc6271 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6271.xml'>
]>

<rfc number="6404" submissionType="IETF" consensus="yes" ipr="trust200902" category="info">
   <front>
      <title abbrev="SPEERMINT Threats and Countermeasures">Session PEERing for Multimedia INTerconnect (SPEERMINT) Security Threats and Suggested Countermeasures</title>

   
      <author initials="J." surname="Seedorf" fullname="Jan Seedorf">
         <organization abbrev="NEC">NEC Laboratories Europe, NEC Europe, 
         Ltd.</organization>
         <address>
            <postal>
               <street>Kurfuersten-Anlage 36</street>
               <city>Heidelberg</city>
               <code>69115</code>
               <country>Germany</country>
            </postal>
            <phone>+49 (0) 6221 4342 221</phone>
            <email>jan.seedorf@neclab.eu</email>
            <uri>http://www.neclab.eu</uri>
         </address>
      </author>

      <author initials="S." surname="Niccolini" fullname="Saverio Niccolini">
         <organization abbrev="NEC">NEC Laboratories Europe, NEC Europe, Ltd.</organization>
         <address>
            <postal>
               <street>Kurfuersten-Anlage 36</street>
               <city>Heidelberg</city>
               <code>69115</code>
               <country>Germany</country>
            </postal>
            <phone>+49 (0) 6221 4342 118</phone>
            <email>saverio.niccolini@.neclab.eu</email>
            <uri>http://www.neclab.eu</uri>
         </address>
      </author>
      
     <author initials="E." surname="Chen" fullname="Eric Chen">
         <organization abbrev="NTT">Information Sharing Platform Laboratories, NTT</organization>
         <address>
            <postal>
               <street>3-9-11 Midori-cho</street>
               <city>Musashino, Tokyo</city>
               <code>180-8585</code>
               <country>Japan</country>
            </postal>
            <email>eric.chen@lab.ntt.co.jp</email>
            <uri>http://www.ntt.co.jp/index_e.html</uri>
         </address>
      </author>

      <author initials="H." surname="Scholz" fullname="Hendrik Scholz">
         <organization abbrev="VOIPFUTURE">VOIPFUTURE GmbH</organization>
         <address>
            <postal>
               <street>Wendenstrasse 4</street>
               <city>Hamburg</city>
               <code>20097</code>
               <country>Germany</country>
            </postal>
            <phone>+49 (0) 40 688 900 163</phone>
            <email>hendrik.scholz@voipfuture.com</email>
            <uri>http://voipfuture.com</uri>
         </address>
      </author>

      <date month="November" year="2011"/>

      <area>Real-time Applications and Infrastructure</area>

      <workgroup>SPEERMINT Working Group</workgroup>

      <keyword>VoIP</keyword>
      <keyword>multimedia</keyword>
      <keyword>Security</keyword>
      <keyword>Threats</keyword>
      <keyword>Threat countermeasures</keyword>
      <keyword>SIP Interconnect</keyword>
      <keyword>VoIP peering</keyword>
      <keyword>Fraud prevention</keyword>
      <keyword>Network protection</keyword>
      <keyword>SIP</keyword>
      <keyword>RTP</keyword>
      <keyword>RTCP</keyword>
      <keyword>control plane</keyword>
      <keyword>user plane</keyword>




      <abstract>
         <t>The Session PEERing for Multimedia INTerconnect (SPEERMINT) working group (WG) provides a peering framework that leverages the building
   blocks of existing IETF-defined protocols such as SIP and ENUM for the interconnection between SIP Service Providers (SSPs). The objective of this document is to identify and enumerate SPEERMINT-specific threat vectors and to give guidance for implementers on selecting appropriate countermeasures. Security requirements for SPEERMINT that have been derived from the threats detailed in this document can be found in RFC 6271; this document provides concrete countermeasures to meet those SPEERMINT security requirements.
         
         In this document, the different security threats related to SPEERMINT are classified into threats to the Lookup Function (LUF), the Location Routing Function (LRF), the Signaling Function (SF), and the Media
         Function (MF) of a specific SIP Service Provider. Various instances of the threats are briefly introduced inside the
         classification. Finally, existing security solutions for SIP and RTP/RTCP (Real-time Transport Control Protocol) are presented
         to describe countermeasures currently available for such threats.

Each SSP may have connections to one or more remote SSPs through peering or transit contracts.
A potentially compromised remote SSP that attacks other SSPs is out of the scope of
this document; this document focuses on attacks on an SSP from outside the
trust domain such an SSP may have with other SSPs.
</t>
      </abstract>
   </front>

   <middle>

      <section anchor="intro" title="Introduction">
         <t>With Voice over IP (VoIP), the need for security is compounded because there is the need to protect
         both the control plane and the data plane. In a legacy telephone system, security is a
         more valid assumption. Intercepting conversations requires either physical access to
         telephone lines or a compromise to the Public Switched Telephone Network (PSTN) nodes or
         the office Private Branch eXchanges (PBXs). Only particularly security-sensitive
         organizations bother to encrypt voice traffic over traditional telephone lines. In
         contrast, the risk of sending unencrypted data across the Internet is more significant
         (e.g., dual-tone multi-frequency (DTMF) tones corresponding to the credit card number). An additional security threat
         to Internet Telephony comes from the fact that the signaling devices may be addressed
         directly by attackers as they use the same underlying networking technology as 
         the multimedia data; traditional telephone systems have the signaling network
         separated from the data network. This is an increased security threat since a hacker
         could attack the signaling network and its servers with increased damage potential (call
         hijacking, call drop, Denial-of-Service (DoS) attacks <xref target="RFC4732" pageno="false" format="default" />, etc.). Therefore, there is a need to investigate
         the different security threats, to extract security-related requirements, and to highlight
         potential solutions on how to protect against such threats.</t>
         
         <t>
         The Session PEERing for Multimedia INTerconnect (SPEERMINT) working group provides a peering framework that leverages the building
   blocks of existing IETF-defined protocols such as SIP and ENUM for the interconnection between SIP servers <xref target="RFC5486" pageno="false" format="default" />. The objective of this document is to identify and enumerate SPEERMINT-specific threat vectors 
         and to give guidance for implementers on selecting appropriate countermeasures. Security requirements for SPEERMINT can be found in RFC 6271 "Requirements for SIP-Based Session Peering" <xref target="RFC6271" pageno="false" format="default" />. These security requirements for SPEERMINT are derived from the threats that are detailed in this document; they have been moved from an earlier version of this document to the SPEERMINT requirements document <xref target="RFC6271" pageno="false" format="default" />. In addition to being the base for those security requirements, this document provides to implementers advice and examples for concrete countermeasures on how to meet these security requirements for SPEERMINT with technical means. The SPEERMINT terminology outlined in <xref target="RFC5486" pageno="false" format="default" /> is used throughout this document.</t>
         
         
         <t>In this document, the different security threats related to SPEERMINT are classified into threats to the Lookup Function (LUF), the Location Routing Function (LRF), the Signaling Function (SF), and the Media
         Function (MF) of a specific SIP Service Provider (SSP). Various instances of the threats are briefly introduced inside the
         classification. Finally, existing security solutions for SIP and RTP/RTCP are presented
         to describe countermeasures currently available for such threats.

Each SSP may have connections to one or more remote SSPs through peering or transit contracts.
A potentially compromised remote SSP that attacks other SSPs is out of the scope of
this document; this document focuses on attacks on an SSP from outside the
trust domain such an SSP may have with other SSPs.</t>
		 
 
      </section>

      <section anchor="taxonomy" title="Security Threats Relevant to SPEERMINT">
         <t>This section enumerates potential security threats relevant to SPEERMINT. A
         taxonomy of VoIP security threats is defined in <xref target="refs.voipsataxonomy"/>.
         This taxonomy is comprehensive and also takes into account non-VoIP-specific
         threats (e.g., loss of power, etc.). Threats relevant to the boundaries of Layer 5 SIP
         networks are extracted from this taxonomy and mapped to the functions of the SPEERMINT architecture as defined in <xref target="RFC6406"/>. Moreover, additional threats for the SPEERMINT architecture are listed and detailed
         under the same classification of SPEERMINT functions and according to the CIA (Confidentiality, Integrity, and
         Availability) triad:
            <list style="symbols">
               <t>Lookup Function (LUF);</t>
               <t>Location Routing Function (LRF);</t>
               <t>Signaling Function (SF);</t>
               <t>Media Function (MF).</t>
            </list>
         </t>
         
         <section anchor="lookup" title="Threats to the Lookup Function (LUF)">
<t>For a given request, the LUF provides a mechanism to determine the identity of the requested resource on the terminating domain. The returned identity can be used to look up Session Establishment Data (SED) using the Location Routing Function (LRF). In direct peerings, the LUF is usually hosted locally, whereas in a federation context, this function may be offered by a third party.</t>

            <t>If the LUF is hosted locally, it is vulnerable to the same threats that affect
		database systems in general.
            If the SSP relies on a remote third party to provide the LUF functionality, confidentiality, integrity, and authenticity of the responses are at risk.</t>
            
            <section anchor="lufConf" title="Threats to LUF Confidentiality">
               <t>For a given request, the Lookup Function (LUF) determines the target
   domain to which the request should be routed. The following attacks are relevant with respect to eavesdropping on LUF messages:
                  <list style="symbols">
                     <t>SIP URI and peering domain harvesting - an attacker can exploit 
                     this weakness if the underlying database has a weak authentication
                     system or if SIP messages are sent unencrypted, and then use the gained knowledge to launch other kinds of
                     attacks.</t>
                     <t>Third-party information - a LUF providing information to multiple
                     companies / third parties can be attacked to obtain information
                     about third party peering configurations and possible contracts.</t>
                  </list>
               </t>
            </section>
            
            <section anchor="lufInt" title="Threats to LUF Integrity">
               <t>The underlying database or LUF messages could be vulnerable to input/output message modification attacks: 
                  <list style="symbols">
                     <t>Injection attack - an attacker could manipulate statements
                     performed on the database LUF messages sent to a third party.
					 A specific version of this attack is known as "SQL injection". An SQL injection
					is a code insertion into the LUF due to incorrect input validation.</t>
                  </list>
               </t>
            </section>
            
            <section anchor="lufAva" title="Threats to LUF Availability">
               <t>The underlying database or third party LUF service could be vulnerable to:
                  <list style="symbols">
                     <t>Denial-of-Service attacks - For example, an attacker makes incomplete requests
                     causing the server to create an idle state for each of them, which causes memory
                     to be exhausted.</t>
                  </list>
               </t>
            </section>
            
         </section>

         <section anchor="location" title="Threats to the Location Routing Function (LRF)">
<t>The LRF determines the location of the Signaling Function (SF) for the target domain of a given request. Optionally, it may return additional SED.</t>
         
            <section anchor="locConf" title="Threats to LRF Confidentiality">
               <t>Similar to the LUF, the following attacks are related to eavesdropping on LRF messages:
                  <list style="symbols">
                     <t>URI harvesting - the attacker harvests URIs and IP addresses of the existing 
                     User Endpoints (UEs) by issuing a multitude of location requests. Direct intrusion
                     against vulnerable UEs or telemarketing are possible attack scenarios that would use
                     the gained knowledge.
                     </t>
                     <t>SIP device enumeration  - the attacker discovers the IP address of each intermediate
                     signaling device by looking at the Via and Record-Route headers of a SIP message. Targeting
                     the discovered devices with subsequent attacks is a possible attack scenario.
                     </t>
                  </list>
               </t>
            </section>
         
            <section anchor="locInt" title="Threats to LRF Integrity">
               <t>An attacker may modify messages, e.g., by feeding bogus information to the LRF, if the routing data is not correctly validated or sent unencrypted. Dynamic call routing discovery and establishment, as in the scope of SPEERMINT, introduce opportunities for attacks such as the following:
                  <list style="symbols">
                     <t>Man-in-the-Middle attacks - the attacker inserts or has already inserted an unauthorized node
                     in the signaling path modifying the SED. The result is that the attacker is then able
                     to read, insert, and modify the multimedia communications.</t>
                     <t>Incorrect destinations - the attacker redirects the calls to an incorrect destination with the
                     purpose of establishing fraud communications like voice phishing or DoS attacks.</t>
                  </list>
               </t>
            </section>
         
            <section anchor="locAvl" title="Threats to LRF Availability">
               <t>The LRF can be the object of DoS attacks. DoS attacks to the LRF can be carried out by sending a large
               number of queries to the LRF or LUF, with the result of preventing an Originating SSP
               from looking up call routing data of any URI outside its administrative domain.

<!--[rfced] Please let us know how we may expand LS:

Original:
 DoS attacks to the LRF can be carried out by sending a large
number of queries to the LS or Session Manager, SM, with the result of preventing an originating SSP from looking up call routing data of any URI outside its administrative domain.


Hendrik Scholz: The LS (Location Server) and SM (Service Manager) terms have been
	deprecated in the -architecture draft (e.g. compare -04 vs. -19).

	The LS+SM has been replaced with the LUF+LRF. Both the LUF and LRF are reachable
	from the 'outside' and thus are subject to this thread.

--> 

As an alternative,
               the attacker could target the DNS to disable resolution of SIP addresses.</t>
            </section>
         
         </section>

         <section anchor="signaling" title="Threats to the Signaling Function (SF)">
            <t>The Signaling Function involves a great number of sensitive information. Through the Signaling
            Function, User Agents (UAs) assert identities and operators authorize billable
            resources. Correct and trusted operation of Signaling Function is essential for
            service providers. This section discusses potential security threats to the Signaling
            Function to detail the possible attack vectors.</t>            
         
            <section anchor="sfConf" title="Threats to SF Confidentiality">
               <t>SF traffic is vulnerable to eavesdropping, in particular, when the data is moved across
               multiple SSPs having different levels of security policies. Threats for the SF confidentiality
               are listed here:
                  <list style="symbols">
                     <t>Call pattern analysis - the attacker tracks the call patterns of the users
                     violating his/her privacy (e.g., revealing the social network of various users, the
                     daily phone usage, etc.); also, rival SSPs may infer information about the customer
                     base of other SSPs in this way;</t>
                     <t>Password cracking - the challenge-response authentication mechanism of SIP Digest can
						be attacked with offline dictionary attacks. With such attacks, an attacker tries
						to exploit weak passwords that are used by incautious users.</t>
					 <t>Network discovery - the attacker may learn information about the internal network
					 structure of a peering partner that is directly or indirectly connected by
					 looking at SIP routing information (i.e, Record-Route, Via or Contact headers).</t>
                  </list>
               </t>
            </section>
         
            <section anchor="sfInt" title="Threats to SF Integrity">
               <t>The integrity of the SF can be violated using SIP request spoofing, SIP reply spoofing,
               and SIP message tampering.</t>
               
               <section title="SIP Request Spoofing">
                 <t>Most SIP request spoofing attacks first require SIP message eavesdropping. However, some of these attacks 
                 can be also performed by estimating certain fields in SIP headers (e.g., by exploiting the fact that weak implementations may generate predictable SIP Dialog parameters) or exploiting broken implementations that do not properly verify the content of certain headers. Threats
                 in this category are as follows:
                   <list style="symbols">
                     <t>session teardown - an attacker can send CANCEL/BYE messages in order to tear
                     down an existing call at the SIP layer; for such an attack, the attacker either needs to know (e.g., by eavesdropping a SIP INVITE message) the SIP Dialog of the call to be hijacked (To-tag, From-tag, Call-ID) or alternatively may rely on SIP implementations that do not properly authenticate requests based on the SIP Dialog;</t>
                     <t>Billing fraud - the attacker can modify and replay an intercepted INVITE request in order to bill a call to
					 a victim UE and avoid paying for the phone call;</t>
                     <t>User ID spoofing - SSPs are responsible for asserting the legitimacy of a user ID;
                     if an SSP fails to achieve the level of identity assertion that the federation to which it
                     belongs expects, it may create an entry point for attackers to conduct user ID spoofing
                     attacks;</t>
					<t>Unwanted requests - the attacker sends requests to interfere with regular operation, e.g., by sending
					a REGISTER request in order to hijack calls. The SPEERMINT architecture as defined in

					<xref target="RFC6406"/> does not require
					registrations between the Signaling Functions (SFs) of the connected SSPs. Hence, superfluous
					requests like REGISTERs should be rejected.</t>
                   </list>
                 </t>
               </section>
               
               <section title="SIP Reply Spoofing">
                 <t>Threats in this category are as follows:
                   <list style="symbols">
					 <t>Forged 199 Response - the attacker sends a forged 199 response to terminate an
					 early dialog. The forged response will not terminate the entire session but may
					 alter the direction of the session;</t>
                     <t>Forged 200 Response - having seen the contents of an INVITE request, an eavesdropper can inject a 200 response, affecting the processing of the transaction of all proxies between the injection point and the originating UA and at the originating UA itself. In the extreme case, this can result in a hijacked call. In many cases, however, such an attack will leave signaling artifacts that may allow it to be detected (e.g., the element receiving the forged 200 response may also receive other SIP reply messages from the actual terminating UE);</t>
                     <t>Forged 302 Response - having seen the contents of an INVITE request, an eavesdropper could also inject                   
                     a forged "302 Moved Temporarily" reply, affecting the processing of the transaction at intermediate entities and the originating UA. This may allow the attacker to successfully redirect the call to any destination UE of his choosing;</t>
                     <t>Forged 404 Response - having seen the contents of an INVITE request, an eavesdropper could also inject a forged "404 Not Found" reply, affecting the processing of the transaction at intermediate entities and the originating UA. Such an attack may result in disrupting the call establishment.</t>
                   </list>
                 </t>
               </section>
               
               <section title="SIP Message Tampering">
                 <t>This threat involves the alteration of important field values in a SIP message or in the Session Description Protocol (SDP)
                 body. Examples of this threat could be the dropping or modification of handshake packets
                 in order to avoid the establishment of a secure RTP session (SRTP). The same approach could be
                 used to degrade the quality of media session by letting a UE negotiate a poor quality codec.</t>               
               </section>
               
            </section>
            
            <section anchor="sfAvl" title="Threats to SF Availability">
               <t>
                  <list style="symbols">
                     <t>Flooding attack - a Signaling Path Border Element (SBE) is susceptible to message flooding attacks that may come from
                     interconnected SSPs;</t>
                     <t>Session blackholing - the attacker (assumed to be able to make Man-in-the-Middle attacks)
                     intentionally drops essential packets, e.g., INVITEs, to prevent certain calls from being
                     established;</t>
                     <t>SIP Fuzzing attack - fuzzing tests and software can be used by attackers to discover and 
                     exploit vulnerabilities of a SIP entity. This attack may result in crashing a SIP entity.</t>
                  </list>
               </t>
            </section>
         </section>
            

         <section anchor="media" title="Threats to the Media Function (MF)">
            <t>The Media Function (MF) is responsible for the actual delivery of multimedia communication
            between the users and carries sensitive information. Through the media function, the UE
            can establish secure communications and monitor the quality of conversations.
            Correct and trusted operations of MF is essential for privacy and service-assurance issues. This section discusses potential security threats to the MF
            to detail the possible attack vectors.</t> 
            <section anchor="mfConf" title="Threats to MF Confidentiality">
               <t>The MF is vulnerable to eavesdropping in which the attacker may reconstruct the
               voice conversation or sensitive information (e.g., PINs from DTMF tones).
               Some SRTP key exchange mechanisms (e.g., <xref target="RFC4568" pageno="false" format="default" />) are vulnerable to bid-down attacks, where an attacker selectively changes
               key exchange protocol fields in order to enforce the establishment of a less secure or even non-secure
               communication.</t>
            </section>
            <section anchor="mfInt" title="Threats to MF Integrity">
               <t>Both RTP and RTCP are vulnerable to integrity violation in many ways:
                  <list style="symbols">
                    <t>Media injection - if an attacker can somehow detect an ongoing media session and
                    eavesdrop a few RTP packets, he can start sending bogus RTP packets to one of the
                    UEs involved using the same codec. If the bogus RTP
                    packets have consistently greater timestamps and sequence numbers (but within the
                    acceptable range) than the legitimate RTP packets, the recipient UE may accept the
                    bogus RTP packets and discard the legitimate ones.</t>
                    <t>Media session teardown - the attacker sends bogus RTCP BYE messages to a target
                    UE signaling to tear down the media communication; please note that RTCP messages
                    are normally not authenticated.</t>
                    <t>Quality-of-Service (QoS) degradation - the attacker sends wrong RTCP reports advertising more packet
                    loss or more jitter than actually experimented resulting in the usage of a poor
                    quality codec degrading the overall quality of the call experience.</t>
                  </list>
               </t>
            </section>
            <section anchor="mfAvl" title="Threats to MF Availability">
               <t>
                  <list style="symbols">
                     <t>Malformed messages - the attacker tries to cause a crash or a
                     reboot of the Data Path Border Element (DBE)/UE by sending RTP/RTCP malformed messages;</t>
                     <t>Messages flooding - the attacker tries to exhaust the resources of
                     the DBE/UE by sending many RTP/RTCP messages.</t>
                  </list>
               </t>
            </section>
            
         </section>   
         
      </section>

      <section title="Security Requirements" toc="default">
      <section title="Security Requirements from SPEERMINT Requirements Document" toc="default">
      <t>The security requirements for SPEERMINT have been moved from an earlier version of this document to the SPEERMINT requirements <xref target="RFC6271" pageno="false" format="default" />.

          The security requirements for SPEERMINT are the following, from <xref target="RFC6271" pageno="false" format="default" />:
           <list style="symbols">
             <t>Requirement #15: The protocols used to query the Lookup and Location Routing Functions SHOULD support mutual authentication.</t>
             <t>Requirement #16: The protocols used to query the Lookup and Location Routing Functions SHOULD provide support for data confidentiality and integrity.</t>
             <t>Requirement #17: The protocols used to enable session peering MUST NOT interfere with the exchanges of media security attributes in SDP. Media attribute lines that are not understood by SBEs must be ignored and passed along the signaling path untouched.</t>
           </list>
              </t>
            </section>
        <section anchor="fulfill" title="How to Fulfill the Security Requirements for SPEERMINT" toc="default">   
           <t>Requirements #15 and #16 state that the LUF and LRF should support mutual authentication, data confidentiality, and integrity. In principle, these requirements can be fulfilled technically with Transport Layer Security (TLS) or Datagram TLS (DTLS) <xref target="RFC5246"></xref> <xref target="RFC4347"></xref> or IP layer security (IPsec) <xref target="RFC4301"></xref>. From a pure security perspective both solutions fulfill the security requirements for SPEERMINT, just on a different layer, and both solutions are widely deployed.</t>
           
 <t>However, from a more practical perspective, transport layer security (i.e., TLS or DTLS) has the advantage that the application using it is aware of whether or not security (or rather the corresponding security features) is enabled. For instance, using TLS has the consequence that the connection fails if the corresponding connection endpoint cannot authenticate properly. </t>

<t>While IPsec fulfills the same requirements from a security perspective, IPsec is somewhat de-coupling security from the application using it. For instance, IPsec is often provided by dedicated entities in such a way that from the application layer, it cannot be recognized whether or not IPsec or certain security features are turned on ("bump-in-the-wire").</t>

<t>In summary, TLS (or DTLS) has some notable advantages over IPsec for addressing the SPEERMINT security requirements. In particular, transport layer security is preferable over IPsec for SPEERMINT because with TLS (or DTLS) security is more closely coupled to the LUF or LRF. From a mere technical perspective, however, both solutions (transport layer security or IPsec) fulfill the SPEERMINT security requirements, and there may be particular cases where IPsec is a preferable solution.
      </t>
       </section>
    </section>
    
      <section anchor="requirements" title="Suggested Countermeasures" toc="default">
      <t>This section describes implementer-specific countermeasures against the threats described in the previous sections and for addressing the SPEERMINT security requirements described in
         <xref target="RFC6271" pageno="false" format="default" />. The countermeasures listed in this section are not meant to be exhaustive; rather, the suggested countermeasures are aimed to serve as starting points and to give guidance for implementers that are trying to select appropriate countermeasures against certain threats.
</t>
<t>The following table provides a map of the relationships between threats and countermeasures.  The suggested countermeasures are discussed in detail in the subsequent subsections.</t>
<texttable>
<ttcol align="center">Group</ttcol>
<ttcol align="left">Threat</ttcol>
<ttcol align="left">Suggested Countermeasure</ttcol>
<c>LUF</c><c>Unauthorized access</c><c><xref target="database">database security BCPs</xref>, <xref target="secure_exchange">Secure Exchange of SIP messages</xref></c>
<c/><c>SQL injection</c><c><xref target="database">database security BCPs</xref>, <xref target="secure_exchange">Secure Exchange of SIP messages</xref></c>
<c/><c>DoS to LUF</c><c><xref target="database">database security BCPs</xref>, <xref target="secure_exchange">Secure Exchange of SIP messages</xref></c>
<c/><c/><c/>
<c>LRF</c><c>URI harvesting</c><c><xref target="privacy_protection">privacy protection</xref>, <xref target="secure_exchange">Secure Exchange of SIP messages</xref></c>
<c/><c>SIP equipment enumeration</c><c><xref target="privacy_protection">privacy protection</xref>, <xref target="secure_exchange">Secure Exchange of SIP messages</xref></c>
<c/><c>MitM attack</c><c><xref target="DNSSEC">DNSSEC</xref>, <xref target="secure_exchange">Secure Exchange of SIP messages</xref></c>
<c/><c>Incorrect destinations</c><c><xref target="DNSSEC">DNSSEC</xref>, <xref target="secure_exchange">Secure Exchange of SIP messages</xref></c>
<c/><c>DoS to LRF</c><c><xref target="dns_replication">DNS replication</xref></c>
<c/><c/><c/>
<c>SF</c><c>Call pattern analysis</c><c><xref target="secure_exchange">Secure Exchange of SIP messages</xref>, <xref target="ssed">Securing Session Establishment Data</xref></c>
<c/><c>Password cracking</c><c><xref target="secure_exchange">Secure Exchange of SIP messages</xref></c>
<c/><c>Network discovery</c><c><xref target="ssed">Securing Session Establishment Data</xref>, <xref target="topology_hiding">Topology Hiding</xref></c>
<c/><c>Session teardown</c><c><xref target="secure_exchange">Secure Exchange of SIP messages</xref>, <xref target="ingress_filtering">ingress filtering</xref></c>
<c/><c>Billing fraud</c><c><xref target="strong_identity">strong identity assertion</xref></c>
<c/><c>User ID spoofing</c><c><xref target="strong_identity">strong identity assertion</xref></c>
<c/><c>Forged 200 Response</c><c><xref target="secure_exchange">Secure Exchange of SIP messages</xref>, <xref target="ingress_filtering">ingress filtering</xref></c>
<c/><c>Forged 302 Response</c><c><xref target="secure_exchange">Secure Exchange of SIP messages</xref>, <xref target="ingress_filtering">ingress filtering</xref></c>
<c/><c>Forged 404 Response</c><c><xref target="secure_exchange">Secure Exchange of SIP messages</xref>, <xref target="ingress_filtering">ingress filtering</xref></c>
<c/><c>Flooding attack</c><c><xref target="rbep">reliable border element pooling</xref>, <xref target="rate_limit">rate limit</xref></c>
<c/><c>Session blackholing</c><c><xref target="DNSSEC">DNSSEC</xref></c>
<c/><c>SIP fuzzing attack</c><c><xref target="beh">border element hardening</xref></c>
<c/><c/><c/>
<c>MF</c><c>Eavesdropping</c><c><xref target="SRTP">Encryption and Integrity Protection of Media Stream</xref></c>
<c/><c>Media injection</c><c><xref target="SRTP">Encryption and Integrity Protection of Media Stream</xref></c>
<c/><c>Media session teardown</c><c><xref target="SRTP">Encryption and Integrity Protection of Media Stream</xref></c>
<c/><c>QoS degradation</c><c><xref target="SRTP">Encryption and Integrity Protection of Media Stream</xref></c>
<c/><c>Malformed messages</c><c><xref target="beh">border element hardening</xref></c>
<c/><c>Message flooding</c><c><xref target="rate_limit">rate limit</xref></c>
</texttable>
      <section title="Database Security BCPs" toc="default" anchor="database">
        <t>Adequate security measures must be applied to the LUF to prevent it from being a target of attacks
           often seen on common database systems.  Common security Best Current Practices (BCPs) for database systems include the use of strong passwords to prevent unauthorized access, parameterized statements to prevent SQL injections, and server replication to prevent any database from being a single point of failure. <xref target="refs.dbsec" pageno="false" format="default" /> is one of many existing documents
           that describe BCPs in this area.</t>
      </section>
      <section title="DNSSEC" toc="default" anchor="DNSSEC">
        <t>If DNS is used by the LRF, it is recommended to deploy the recent version of Domain Name System
           Security Extensions (informally called "DNSSEC-bis") defined by <xref target="RFC4033" pageno="false" format="default" />, <xref target="RFC4034" pageno="false" format="default" />, and <xref target="RFC4035" pageno="false" format="default" />.  DNSSEC has been designed to protect DNS against well-known attacks such as DNS cache poisoning or Man-in-the-Middle (MitM) attacks on DNS queries.  Essentially, DNSSEC is a set of public key cryptography extensions to DNS that provide authentication of DNS data, integrity protection for DNS entries, and authenticated denial of existence regarding non-existing DNS entries. In the context of SSP peering, DNSSEC can provide authentication and integrity regarding the location of a Signaling Function (SF) entity retrieved via DNS. Using DNSSEC can thus help to defend against MitM attacks on DNS queries invoked by the LRF, session blackholing and other attacks that lead traffic to incorrect destinations. </t>
           
           <t>
DNSSEC has been deployed at the root level and in several top-level domains (e.g., .com and .net).  Although, at the time of this writing, DNSSEC is still not yet widely deployed on the Internet, even limited deployment can add significant integrity protection and authentication to the LRF for Signaling Function locations received via DNS entries.
Neither end users nor terminals are involved in the DNS resolution process of the LRF. Hence, if a) the sending SSP uses a DNS resolver that supports DNSSEC extensions, b) the receiving SSP stores the location of its Signaling Function cryptographically signed (using DNSSEC extensions) in the DNS, and c) the sending SSP can obtain an authentication chain (i.e., a series of linked DS and DNSKEY records) to the receiving SSP, the LRF can be secured with DNSSEC. In the context of SPEERMINT, all three of these requirements can be fulfilled even in the case of partial DNSSEC deployment. In particular, even without Internet-wide deployment of DNSSEC, it may be possible for a sending SSP to obtain a suitable trust anchor for verifying the receiving SSP's public key. For instance, a suitable trust anchor could be configured for that specific SSP's top-level domain or for the particular SSP's domain directly. If the sending and the receiving SSP use a common ENUM tree, DNSSEC use with the ENUM tree's trust anchor is "straightforward".</t>
           
           </section>
      <section title="DNS Replication" toc="default" anchor="dns_replication">
        <t>DNS replication is a very important countermeasure to mitigate DoS attacks on the LRF.  Simultaneously bringing down multiple DNS servers that support the LRF is much more challenging than attacking a sole DNS server (single point of failure).</t>
      </section>
      <section title="Cross-Domain Privacy Protection" toc="default" anchor="privacy_protection">
        <t>Stripping Via and Record-Route headers, replacing the Contact header, and even changing Call-IDs are
           the mechanisms described in <xref target="RFC3323" pageno="false" format="default" /> to protect SIP privacy. This practice allows an SSP
           to hide its SIP network topology, prevents intermediate signaling equipment from becoming the target of
           DoS attacks, as well as protects the privacy of UEs according to their preferences.  This practice is effective in preventing SIP equipment enumeration that exploits LRF.</t>
      </section>
      
      <section title="Secure Exchange of SIP Messages" toc="default" anchor="secure_exchange">
<t>SIP can be used on top of UDP or TCP as transport protocol <xref target="RFC3261" pageno="false" format="default"/>. However, look-up and SED data should be exchanged securely (<xref target="fulfill">see security requirements</xref>), e.g., to increase the difficulty of performing session teardown and
forging responses (200, 302, 404, etc). If UDP is used to carry SIP messages, DTLS should be used to secure SIP message exchange between SSPs. If TCP is used as a transport protocol, it can be secured with TLS. Therefore, depending on the underlying transport protocol, SSPs should use either DTLS or TLS to secure SIP message delivery.</t>

<t>In general, encryption and integrity protection of signaling messages can be achieved on the transport layer (with TLS or DTLS) or on the network layer (with IPsec). Both solutions are technically sound, but transport layer security has some advantages. Please refer to the subsection on fulfilling the <xref target="fulfill">SPEERMINT security requirements</xref> for a discussion on using TLS/DTLS or IPsec for protecting the confidentiality and integrity of signalling messages. Similar to strong identity assertion, a Public Key Infrastructure (PKI) is assumed to be in place for TLS/DTLS (or IPsec) deployment so that SSPs can obtain and trust the keys necessary to decrypt messages and verify signatures sent by other SSPs.</t>

<t>Message-oriented protection such as <xref target="RFC3261" pageno="false" format="default"/> authentication does not fulfill the
SPEERMINT requirements (e.g., mutual authentication).
</t>
      </section>
      
      
      <section title="Ingress Filtering / Reverse-Path Filtering" toc="default" anchor="ingress_filtering">
        <t>Ingress filtering, i.e., blocking all traffic coming from a host that has a source address different than
           the addresses that have been assigned to that host (see <xref target="RFC2827" pageno="false" format="default" />), can effectively prevent
           UEs from sending packets with a spoofed source IP address. This can be achieved by reverse-path filtering, i.e., only accepting ingress traffic if
responses would take the same path.  This practice is effective in preventing session teardown and forged SIP replies (200, 302, 404, etc.), if the recipient correctly verifies the source IP address for the authenticity of each incoming SIP message. </t>
      </section>
      <section title="Strong Identity Assertion" toc="default" anchor="strong_identity">
        <t>"Caller ID spoofing" can be achieved thanks to the weak identity assertion on the From URI of an INVITE request.
           In a single SSP domain, strong identity assertion can be easily achieved by authenticating each INVITE request.
           However, in the context of SPEERMINT, only the Originating SSP is able to verify the identity directly.
           In order to overcome this problem, there are currently only two major approaches: transitive trust and cryptographic
           signature.
           
           The transitive trust approach builds a chain of trust among different SSP domains. One example of this approach
           is a combined mechanism specified in <xref target="RFC3324" pageno="false" format="default" /> and <xref target="RFC3325" pageno="false" format="default" />.
                      
           Using this approach in a transit peering network scenario, the terminating SSP must establish a trust relationship
           with all SSP domains on the path, which can be seen as an underlying weakness.
           
           The use of cryptographic signatures is an alternative approach. "Session Initiation Protocol (SIP) Authenticated Identity Body (AIB) Format" is
           specified in <xref target="RFC3893" pageno="false" format="default" />. <xref target="RFC4474" pageno="false" format="default" /> introduces two new header fields, IDENTITY and
           IDENTITY-INFO, that allow a SIP server in the Originating SSP to digitally sign an INVITE request after authenticating
           the sending UE. The terminating SSP can verify if the INVITE request is signed by a trusted SSP domain. Although this
           approach does not require the terminating SSP to establish a trust relationship with all transit SSPs on the path, a
           PKI is assumed to be in place.</t>
      </section>
      <section title="Reliable Border Element Pooling" toc="default" anchor="rbep">
        <t>It is advisable to implement reliable pooling on border elements. An architecture and protocols for the management of server pools supporting mission-critical applications are addressed in the RSERPOOL WG. Using such mechanisms and protocols (see <xref target="RFC5351" pageno="false" format="default" /> <xref target="RFC5352" pageno="false" format="default" /> <xref target="RFC5353" pageno="false" format="default" /> for details), a UE can effectively increase its capacity in handling flooding attacks.</t>
      </section>
      <section title="Rate limit" toc="default" anchor="rate_limit">
        <t>Flooding attacks on SFs and MFs can also be mitigated by limiting the rate of incoming traffic through policing or queuing. 
           In this way, legitimate clients can be denied the service since their traffic may be discarded. Rate limiting
           can also be applied on a per-source-IP basis under the assumption that the source IP of each attack packet is not
           spoofed dynamically. Limitations related to NAT and mobility issues apply and may result in false positives (i.e., source IP addresses blocked) when multiple legitimate clients are
located behind the same NAT IP address. It may be preferable to limit 
           the number of concurrent 'sessions', i.e., ongoing calls instead of the messaging associated with it (since sessions 
           use more resources on backend-systems). When calculating rate limits,
           all entities along the session path should be taken into account. SIP entities on the receiving end of a call may be the
limiting factor (e.g., the number of ISDN channels on PSTN gateways) rather than the ingress limiting device.</t>
      </section>
      <section title="Topology Hiding" toc="default" anchor="topology_hiding">
		<t>Topology hiding applies to both the signaling and media plane and consists of limiting the amount of topology information
		exposed to peering partners. Topology hiding requires back-to-back user agent (B2BUA) functionality. The most common way is the use of a
		Session Border Controller (SBC) as SBE. Topology hiding is explained in <xref target="RFC5853"/>.</t>
      </section>
      <section title="Border Element Hardening" toc="default" anchor="beh">
 <t>To prevent attacks that exploit vulnerabilities (such as buffer overflows, format string vulnerabilities, etc.) in SPEERMINT border elements, these implementations should be security hardened. For instance, fuzz testing is a common black box testing technique used in software engineering. Also, security vulnerability tests can be carried out preventively to assure a UE/SBE/DBE can handle unexpected data correctly without crashing.
<xref target="RFC4475" pageno="false" format="default" /> and <xref target="refs.protos" pageno="false" format="default" /> are examples of torture test cases specific for SIP devices and freely available security testing tools, respectively. These type of tests needs to be carried out before product release and in addition throughout the product life cycle.</t>
</section>
	<section title="Securing Session Establishment Data" toc="default" anchor="ssed">
	<t>
Session Establishment Data (SED) contains critical information for the routing of SIP sessions.  In order to prevent attacks such as service hijacking and denial of service that exploit SED, SSPs should adopt a secure transport protocol that provides authentication, confidentiality and integrity to exchange SED among themselves.  Further details can be found in <xref target="DRINKS-SPPROV" pageno="false" format="default" />.
	</t>
	</section>


      <section title="Encryption and Integrity Protection of Media Stream" toc="default" anchor="SRTP">
        <t>The Secure Real-time Transport Protocol (SRTP) <xref target="RFC3711" pageno="false" format="default" /> prevents eavesdropping on plain RTP by encrypting the data flow.  It uses AES as the default cipher and defines two modes of operation (Segmented Integer Counter Mode and f8-mode), which is agreed upon after negotiation.  It also uses HMAC-SHA1 and index keeping to enable message authentication/integrity and replay protection required to prevent media injection attacks. Secure RTCP (SRTCP) provides the same security-related features to RTCP as SRTP does for RTP.  SRTCP is described in
           <xref target="RFC3711" pageno="false" format="default" /> as optional. In order to prevent media session teardown, it is recommended to
           turn this feature on. The choice of the external key management protocol is left to the deployment, a PKI is necessary to implement the security requirements of the SPEERMINT requirements document.</t>
      </section>
    </section>

   
      <section anchor="conclusions" title="Conclusions">
         <t>This document presented the different SPEERMINT security threats classified in groups
         related to the LUF, LRF, SF, and MF, respectively. The multiple instances of the threats were
         presented with a brief explanation. Finally, suggested countermeasures for SPEERMINT were outlined
         together with possible mitigation of the existing threats by means of them.</t>
      </section>

      <section anchor="security" title="Security Considerations">
         <t>This document is entirely focused on the security threats for SPEERMINT.</t>
      </section>
      
   

      <section anchor="ack" title="Acknowledgements">
         <t>This document was originally inspired by the VOIPSA VoIP Security and Privacy Threat Taxonomy. The
         authors would like to thank VOIPSA for having produced a comprehensive taxonomy
         as the starting point of this document. Additionally, the authors would like to thank Cullen
         Jennings, Jon Peterson, David Schwartz, Hadriel Kaplan, Peter Koch, Daryl Malas, Jason Livingood, and Robert Sparks for useful comments to previous editions of this document on the mailing list as well as during IETF meetings. </t>
         
        <t>Jan Seedorf and Saverio Niccolini are partially supported by
        the DEMONS project, a research project
        supported by the European Commission under its 7th Framework
        Program (contract no. 257315). The views and conclusions
        contained herein are those of the authors and should not be
        interpreted as necessarily representing the official policies
        or endorsements, either expressed or implied, of the DEMONS
        project or the European Commission.
         </t>
      </section>

   </middle>

   <back>
<?rfc rfcedstyle="no"?>
      <references title="Informative References">

         <reference anchor="refs.voipsataxonomy">
            <front>
               <title>VOIPSA VoIP Security and Privacy Threat Taxonomy, Public Release 1.0</title>
               <author initials="J." surname="Zar" fullname="Jonathan Zar">
               <organization/>              
               </author>
                <author initials="" surname="et al" fullname="et al">
               <organization/>              
               </author>
               <date month="October" year="2005"/>
            </front>
                    <seriesInfo name=""
                    value="http://www.voipsa.org/Activities/taxonomy.php" />
         </reference>
     
<!--draft-ietf-speermint-archicture-19; companion doc in cluster 86 -->             
         <reference anchor="RFC6406">
            <front>
               <title>Session PEERing for Multimedia INTerconnect (SPEERMINT) Architecture</title>
         
               <author initials="D." surname="Malas" fullname="Daryl Malas" role="editor">
                  <organization abbrev="Cablelabs"/>
               </author>
                              <author initials="J." surname="Livingood" fullname="Jason Livingood" role="editor">
                  <organization abbrev="Comcast"/>
               </author>
               
               <date month="November" year="2011"/>
            </front>
            <seriesInfo name="RFC" value="6406"/>
         </reference>
         
         
         &rfc3711;
         &rfc4347;
         &rfc4474;
      
         &rfc5486;
         
		 &rfc4568;
		 
<!--draft-ietf-drinks-spprov-09; I-D Exists -->
<!--         &I-D.ietf-drinks-spprov; -->


<reference anchor='DRINKS-SPPROV'>
<front>
<title>Session Peering Provisioning Protocol</title>

<author initials='J' surname='Mule' fullname='Jean-Francois Mule'>
    <organization />
</author>

<author initials='K' surname='Cartwright' fullname='Kenneth Cartwright'>
    <organization />
</author>

<author initials='S' surname='Ali' fullname='Syed Ali'>
    <organization />
</author>

<author initials='A' surname='Mayrhofer' fullname='Alexander Mayrhofer'>
    <organization />
</author>

<date month='September' day='8' year='2011' />

<abstract><t>This document defines a protocol for provisioning session establishment data into Session Data Registries and SIP Service Provider data stores.  The provisioned data is typically used by various network elements for session peering.  This document describes the Session Peering Provisioning Protocol used by clients to provision registries.  The document provides a set of guiding principles for the design of this protocol including extensibility and independent transport definitions, a basic data model and an XML Schema Document.</t></abstract>

</front>

<seriesInfo name='Work in' value='Progress' />

</reference>

        
		 &rfc5246; 
		 &rfc4301; 
         
<!--[rfced] May we update the title of the reference entry "refs.dbsec" to read as "Handbook of Database Security: Applications and Trends"? 

Hendrik Scholz: yes, that seems to be the common name
-->
         <reference anchor="refs.dbsec">
            <front>
               <title>Handbook of Database Security</title>
               <author initials="M." surname="Gertz" fullname="M. Gertz">
                 <organization/>
               </author>
               <author initials="S." surname="Jajodia" fullname="S. Jajodia">
                 <organization/>
               </author>
               <date month="" year="2008"/>
            </front>
            <seriesInfo name=""
                    value="Springer" />
         </reference>
         
         &rfc4033; 
         
         &rfc4034; 
         
         &rfc4035; 
         
         &rfc3323;
         &rfc3261;
       
         &rfc2827;
         &rfc3324;
         &rfc3325;
         &rfc3893;

<!--[rfced] As there were no citations to it in the text, we have removed RFC 3237 from the Informative References section.  Please let us know if this is in error. 

Hendrik Scholz: OK from my side to remove


 -->
<!--         &rfc3237; -->
         
         &rfc4732;
         
         &rfc5351;
         &rfc5352;
         &rfc5353;
        
         
         <reference anchor="refs.protos">
            <front>
               <title>SIP Robustness Testing for Large-Scale Use</title>
               <author initials="C." surname="Wieser" fullname="Christian Wieser">
                 <organization/>
               </author>
                              <author initials="M." surname="Laakso" fullname="Marko Laakso">
                 <organization/>
               </author>
                              <author initials="H." surname="Schulzrinne" fullname="Henning Schulzrinne">
                 <organization/>
               </author>
                <date month="September" year="2004"/>
            </front>
                                    <seriesInfo name=""
                    value="First International Workshop on Software Quality (SOQUA 2004)" />
         </reference>

         &rfc4475;

		 &rfc5853;
		 &rfc6271;
		
      </references>
<?rfc rfcedstyle="yes" ?>
   </back>
</rfc>
