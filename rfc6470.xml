<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
  <!ENTITY rfc2119 PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
  <!ENTITY rfc3688 PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3688.xml'>
  <!ENTITY rfc5277 PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5277.xml'>
  <!ENTITY rfc6020 PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6020.xml'>
  <!ENTITY rfc6021 PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6021.xml'>
  <!ENTITY rfc6241 PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6241.xml'>
  <!ENTITY rfc6242 PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6242.xml'>
  ]>

<rfc 
   category="std" 
   number="6470" 
   ipr="trust200902"
   submissionType="IETF"
   consensus="yes">

  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <?rfc toc="yes"?>
  <?rfc tocompact="yes"?>
  <?rfc tocdepth="4"?>
  <?rfc symrefs="yes"?>
  <?rfc sortrefs="no" ?>
  <?rfc compact="yes"?>
  <?rfc subcompact="no"?>
  <?rfc iprnotified="no"?>
  <?rfc rfcedstyle="yes"?>

  <front>
    <title abbrev="NETCONF Base Notifications">
      Network Configuration Protocol (NETCONF) Base Notifications
    </title>

    <author fullname="Andy Bierman" 
            initials="A.B."
            surname="Bierman">
      <organization>Brocade</organization>
      <address>
	<email>andy@netconfcentral.org</email>
      </address>
    </author>
    
    <date year="2012" month="February"/>
    <area>OPS</area>
    <workgroup>NETCONF</workgroup>
    <keyword>notifications</keyword>
    <keyword>XML</keyword>

    <abstract>
      <t>
	The Network Configuration Protocol (NETCONF) provides mechanisms to manipulate configuration
        datastores.  However, client applications often need to be aware
        of common events, such as a change in NETCONF server capabilities, 
        that may impact management applications.
        Standard mechanisms are needed to support the monitoring of
        the base system events within the NETCONF server.
	This document defines a YANG
        module that allows a NETCONF client to 
        receive notifications for some common system events.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>
	The NETCONF protocol <xref target="RFC6241"/>
        provides mechanisms to manipulate configuration
        datastores.  However, client applications often need to be aware
        of common events, such as a change in NETCONF server capabilities, 
        that may impact management applications.
        Standard mechanisms are needed to support the monitoring of
        the base system events within the NETCONF server.
	This document defines a YANG module 
        <xref target="RFC6020"/>
	that allows a NETCONF client to 
        receive notifications for some common system events.
      </t>
      <section title="Terminology">
	<t>
	  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
	  "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
	  and "OPTIONAL" in this document are to be interpreted as
	  described in <xref target="RFC2119"/>.
	</t>
	<t>
	  The following terms are defined in 
          <xref target="RFC6241"/>:
	  <list style="symbols">
	    <t>client</t>
        <?rfc subcompact="yes"?>
            <t>datastore</t>
	    <t>protocol operation</t>
	    <t>server</t>
	  </list>
        <?rfc subcompact="no"?>
	</t>

	<t>
	  The following terms are defined in <xref target="RFC5277"/>:
	  <list style="symbols">
	    <t>event</t>
        <?rfc subcompact="yes"?>
            <t>stream</t>
            <t>subscription</t>
	  </list>
        <?rfc subcompact="no"?>
	</t>

        <t>
	  The following term is defined in 
          <xref target="RFC6020"/>:
	  <list style="symbols">
	    <t>data node</t>
	  </list>
	</t>
      </section>
    </section>

    <section title="YANG Module for NETCONF Base Notifications">
      <section title="Overview">
        <t>
	  The YANG module defined within this document specifies
          a small number of event notification messages
          for use within the 'NETCONF' stream, and accessible to
          clients via the subscription mechanism described in
          <xref target="RFC5277"/>.  This module imports data types
          from the 'ietf-netconf' module defined in <xref target="RFC6241"/>
          and 'ietf-inet-types' module defined in <xref target="RFC6021"/>.
        </t>

        <t>
          These notifications pertain to configuration and 
          monitoring portions of the managed system, not the entire system.
          A server MUST report events
          that are directly related to the NETCONF protocol.  
          A server MAY
          report events for non-NETCONF management sessions, 
          using the 'session-id' value of zero.
        </t>

          <t>
            This module defines the following notifications
            for the 'NETCONF' stream
            to notify a client application that the
            NETCONF server state has changed:
          </t>
          <t>
            <list style="hanging">

              <t hangText="netconf-config-change:">
                <vspace />
                Generated when the NETCONF
                server detects that the &lt;running&gt; 
                or &lt;startup&gt; configuration datastore
                has been changed by a management session.
                The notification summarizes the edits that
                have been detected.
              </t>
              <t hangText="netconf-capability-change:">
                <vspace />
                Generated when the NETCONF server detects that
                the server capabilities have changed.
                Indicates which capabilities have been added, deleted, 
                and/or modified.  The manner in which a server
                capability is changed is outside the scope of this
                document.
              </t>
              <t hangText="netconf-session-start:">
                <vspace />
                Generated when a NETCONF server detects that a
                NETCONF session has started.  A server MAY generate
                this event for non-NETCONF management sessions.
                Indicates the identity of the user that started 
                the session.
              </t>
              <t hangText="netconf-session-end:">
                <vspace />
                Generated when a NETCONF server detects that a
                NETCONF session has terminated.
                A server MAY optionally generate this event for
                non&nbhy;NETCONF management sessions.  Indicates the
                identity of the user that owned the session,
                and why the session was terminated.
              </t>
              <t hangText="netconf-confirmed-commit:">
                <vspace />
                Generated when a NETCONF server detects that a
                confirmed-commit event has occurred.  Indicates the event
                and the current state of the confirmed-commit procedure
                in progress.
              </t>
            </list>
          </t>
      </section>

      <section title="Definitions" anchor="YANGMOD">
        <t>
	  <figure>
	    <artwork><![CDATA[<CODE BEGINS> file="ietf-netconf-notifications@2011-12-09.yang"

module ietf-netconf-notifications {

   namespace 
     "urn:ietf:params:xml:ns:yang:ietf-netconf-notifications";

   prefix ncn;

   import ietf-inet-types { prefix inet; }
   import ietf-netconf { prefix nc; }

   organization
     "IETF NETCONF (Network Configuration Protocol) Working Group";

   contact
     "WG Web:   <http://tools.ietf.org/wg/netconf/>
      WG List:  <mailto:netconf@ietf.org>

      WG Chair: Bert Wijnen
                <mailto:bertietf@bwijnen.net>

      WG Chair: Mehmet Ersue
                <mailto:mehmet.ersue@nsn.com>

      Editor:   Andy Bierman
                <mailto:andy@netconfcentral.org>";

   description
     "This module defines a YANG data model for use with the 
      NETCONF protocol that allows the NETCONF client to 
      receive common NETCONF base event notifications.

      Copyright (c) 2012 IETF Trust and the persons identified as
      the document authors.  All rights reserved.

      Redistribution and use in source and binary forms, with or
      without modification, is permitted pursuant to, and subject
      to the license terms contained in, the Simplified BSD License
      set forth in Section 4.c of the IETF Trust's Legal Provisions
      Relating to IETF Documents
      (http://trustee.ietf.org/license-info).

      This version of this YANG module is part of RFC 6470; see
      the RFC itself for full legal notices.";

   revision "2012-02-06" {
     description
       "Initial version.";
     reference
       "RFC 6470: NETCONF Base Notifications";
   }

  grouping common-session-parms {
    description
      "Common session parameters to identify a
       management session.";

    leaf username {
      type string;
      mandatory true;
      description 
        "Name of the user for the session.";
    }

    leaf session-id {
      type nc:session-id-or-zero-type;
      mandatory true;
      description 
        "Identifier of the session.
         A NETCONF session MUST be identified by a non-zero value.        
         A non-NETCONF session MAY be identified by the value zero.";
    }

    leaf source-host {
      type inet:ip-address;
      description
        "Address of the remote host for the session.";
    }
  }


  grouping changed-by-parms {
    description
      "Common parameters to identify the source
       of a change event, such as a configuration
       or capability change.";

    container changed-by {
      description
        "Indicates the source of the change.
         If caused by internal action, then the
         empty leaf 'server' will be present.
         If caused by a management session, then
         the name, remote host address, and session ID
         of the session that made the change will be reported.";
      choice server-or-user {
        mandatory true;
        leaf server {
          type empty;
          description
            "If present, the change was caused 
             by the server.";
        }

        case by-user {
          uses common-session-parms;
        }
      } // choice server-or-user
    } // container changed-by-parms
  }


  notification netconf-config-change {
    description
      "Generated when the NETCONF server detects that the 
       <running> or <startup> configuration datastore
       has been changed by a management session.  
       The notification summarizes the edits that
       have been detected.

       The server MAY choose to also generate this 
       notification while loading a datastore during the
       boot process for the device.";

    uses changed-by-parms;

    leaf datastore {
      type enumeration {
        enum running {
          description "The <running> datastore has changed.";
        }
        enum startup {
          description "The <startup> datastore has changed";
        }
      }
      default "running";
      description
        "Indicates which configuration datastore has changed.";
    }

    list edit {
      description
        "An edit record SHOULD be present for each distinct
         edit operation that the server has detected on
         the target datastore.  This list MAY be omitted
         if the detailed edit operations are not known.
         The server MAY report entries in this list for
         changes not made by a NETCONF session (e.g., CLI).";

      leaf target {
        type instance-identifier;
        description
          "Topmost node associated with the configuration change.
           A server SHOULD set this object to the node within 
           the datastore that is being altered.  A server MAY
           set this object to one of the ancestors of the actual
           node that was changed, or omit this object, if the 
           exact node is not known.";
      }

      leaf operation {
        type nc:edit-operation-type;
        description 
          "Type of edit operation performed.
           A server MUST set this object to the NETCONF edit 
           operation performed on the target datastore.";
      }
    } // list edit
  } // notification netconf-config-change


  notification netconf-capability-change {
    description
      "Generated when the NETCONF server detects that 
       the server capabilities have changed.
       Indicates which capabilities have been added, deleted, 
       and/or modified.  The manner in which a server
       capability is changed is outside the scope of this
       document.";

    uses changed-by-parms;

    leaf-list added-capability {
      type inet:uri;
      description
        "List of capabilities that have just been added.";
    }

    leaf-list deleted-capability {
      type inet:uri;
      description
        "List of capabilities that have just been deleted.";
    }

    leaf-list modified-capability {
      type inet:uri;
      description
        "List of capabilities that have just been modified.
         A capability is considered to be modified if the
         base URI for the capability has not changed, but
         one or more of the parameters encoded at the end of
         the capability URI have changed.
         The new modified value of the complete URI is returned.";
    }
  } // notification netconf-capability-change


  notification netconf-session-start {
    description
      "Generated when a NETCONF server detects that a 
       NETCONF session has started.  A server MAY generate
       this event for non-NETCONF management sessions.
       Indicates the identity of the user that started 
       the session.";
    uses common-session-parms;
  } // notification netconf-session-start


  notification netconf-session-end {
    description
      "Generated when a NETCONF server detects that a 
       NETCONF session has terminated.
       A server MAY optionally generate this event for
       non-NETCONF management sessions.  Indicates the 
       identity of the user that owned the session,
       and why the session was terminated.";

    uses common-session-parms;

    leaf killed-by {
      when "../termination-reason = 'killed'";
      type nc:session-id-type;
      description
        "The ID of the session that directly caused this session
         to be abnormally terminated.  If this session was abnormally
         terminated by a non-NETCONF session unknown to the server,
         then this leaf will not be present.";
    }

    leaf termination-reason {
      type enumeration {
        enum "closed" {
          description
            "The session was terminated by the client in normal
             fashion, e.g., by the NETCONF <close-session> 
             protocol operation.";
        }
        enum "killed" {
          description
            "The session was terminated in abnormal
             fashion, e.g., by the NETCONF <kill-session> 
             protocol operation.";
        }
        enum "dropped" {
          description
            "The session was terminated because the transport layer
             connection was unexpectedly closed.";
        }
        enum "timeout" {
          description
            "The session was terminated because of inactivity, 
             e.g., waiting for the <hello> message or <rpc>
             messages.";
        }
        enum "bad-hello" {
          description
            "The client's <hello> message was invalid.";
        }
        enum "other" {
          description
            "The session was terminated for some other reason.";
        }
      }
      mandatory true;
      description 
        "Reason the session was terminated.";
    }
  } // notification netconf-session-end


  notification netconf-confirmed-commit {
    description
      "Generated when a NETCONF server detects that a
       confirmed-commit event has occurred.  Indicates the event
       and the current state of the confirmed-commit procedure
       in progress.";
    reference 
      "RFC 6241, Section 8.4";

    uses common-session-parms {
      when "../confirm-event != 'timeout'";
    }

    leaf confirm-event {
      type enumeration {
        enum "start" {
          description
            "The confirmed-commit procedure has started.";
        }
        enum "cancel" {
          description
            "The confirmed-commit procedure has been canceled,
             e.g., due to the session being terminated, or an
             explicit <cancel-commit> operation.";
        }
        enum "timeout" {
          description
            "The confirmed-commit procedure has been canceled
             due to the confirm-timeout interval expiring.
             The common session parameters will not be present
             in this sub-mode.";
        }
        enum "extend" {
          description
            "The confirmed-commit timeout has been extended,
             e.g., by a new <confirmed-commit> operation.";
        }
        enum "complete" {
          description
            "The confirmed-commit procedure has been completed.";
        }
      }
      mandatory true;
      description
        "Indicates the event that caused the notification.";
    }

    leaf timeout {
      when 
        "../confirm-event = 'start' or ../confirm-event = 'extend'";
      type uint32;
      units "seconds";
      description
        "The configured timeout value if the event type
         is 'start' or 'extend'.  This value represents
         the approximate number of seconds from the event
         time when the 'timeout' event might occur.";
    }     
  } // notification netconf-confirmed-commit

}

<CODE ENDS>
                  ]]></artwork>
	  </figure>
        </t>
      </section> 
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>
        This document registers one XML namespace URN
	in the 'IETF XML registry', following the format 
        defined in <xref target="RFC3688"/>.

        <list>
          <t>URI: urn:ietf:params:xml:ns:yang:ietf-netconf-notifications</t>
        </list>
      </t>

      <t>Registrant Contact: The IESG.</t>

      <t>XML: N/A; the requested URI is an XML namespace.</t>

      <t>
	This document registers one module name 
        in the 'YANG Module Names' registry,
	defined in <xref target="RFC6020" />.  

        <list>
          <t>name: ietf-netconf-notifications</t>
   <?rfc subcompact="yes"?>
          <t>prefix: ncn</t>
          <t>namespace: urn:ietf:params:xml:ns:yang:ietf-netconf-notifications</t>
          <t>RFC: 6470</t>
        </list>
      </t>
   <?rfc subcompact="no"?>
    </section>

    <section anchor="Security" title="Security Considerations">

      <t>
        The YANG module defined in this memo is designed to be accessed
        via the NETCONF protocol <xref target="RFC6241"/>. 
        The lowest NETCONF layer is
        the secure transport layer and the mandatory-to-implement 
        secure transport is SSH, defined in <xref target="RFC6242"/>.
      </t>
      <t>
        Some of the readable data nodes in this YANG module may be
        considered sensitive or vulnerable in some network 
        environments.
        It is thus important to control read access (e.g., via 
        get, get-config, or notification) to these data nodes.  These are the
        subtrees and data nodes and their sensitivity/vulnerability:
      </t>
      <t>
        <list style="hanging">
          <t hangText="/netconf-config-change:">
            <vspace />
            Event type itself indicates that the system configuration
            has changed.  This event could alert an attacker that
            specific configuration data nodes have been altered.
          </t>
    <?rfc subcompact="yes"?>
          <t hangText="/netconf-config-change/changed-by:">
            <vspace />
            Indicates whether the server or a specific user management
            session made the configuration change.  Identifies the
            user name, session-id,  and source host address associated
            with the configuration change, if any.
          </t>
          <t hangText="/netconf-config-change/datastore:">
            <vspace />
            Indicates which datastore has been changed.
            This data can be used to determine if the
            non-volatile startup configuration data has been
            changed.
          </t>
          <t hangText="/netconf-config-change/edit:">
            <vspace />
            Identifies the specific edit operations and
            specific datastore subtree(s) that have changed.
            This data could be used to determine if specific
            server vulnerabilities may now be present.
          </t>
        </list>
    <?rfc subcompact="no"?>
      </t>
      <t>
        <list style="hanging">
          <t hangText="/netconf-capability-change:">
            <vspace />
            Event type itself indicates that the system capabilities
            have changed, and may now be vulnerable to unspecified
            attacks. An attacker will likely need to understand the
            content represented by specific capability URI strings.
            For example, knowing that a packet capture monitoring
            capability has been added to the system might
            help an attacker identify the device for possible
            unauthorized eavesdropping.
          </t>
    <?rfc subcompact="yes"?>
          <t hangText="/netconf-capability-change/changed-by:">
            <vspace />
            Indicates whether the server or a specific user management
            session made the capability change.  Identifies the
            user name, session-id,  and source host address associated
            with the capability change, if any.
          </t>
          <t hangText="/netconf-capability-change/added-capability:">
            <vspace />
            Indicates the specific capability URIs that have been
            added.  
            This data could be used to determine if specific
            server vulnerabilities may now be present.
          </t>
          <t hangText="/netconf-capability-change/deleted-capability:">
            <vspace />
            Indicates the specific capability URIs that have been
            deleted.  
            This data could be used to determine if specific
            server vulnerabilities may now be present.
          </t>
          <t hangText="/netconf-capability-change/modified-capability:">
            <vspace />
            Indicates the specific capability URIs that have been
            modified.  
            This data could be used to determine if specific
            server vulnerabilities may now be present.
          </t>
        </list>
    <?rfc subcompact="no"?>
      </t>
      <t>
        <list style="hanging">
          <t hangText="/netconf-session-start:">
            <vspace />
            Event type itself indicates that a NETCONF or other
            management session  may start altering the device 
            configuration and/or state.
            It may be possible for an attacker to alter the configuration
            by somehow taking advantage of another session 
            concurrently editing an unlocked datastore.
          </t>
    <?rfc subcompact="yes"?>
          <t hangText="/netconf-session-start/username:">
            <vspace />
            Indicates the user name associated with the session.
          </t>
          <t hangText="/netconf-session-start/source-host:">
            <vspace />
            Indicates the source host address associated with 
            the session.
          </t>
        </list>
    <?rfc subcompact="no"?>
      </t>
      <t>
        <list style="hanging">
          <t hangText="/netconf-session-end:">
            <vspace />
            Event type itself indicates that a NETCONF or other
            management session  may be finished altering the device 
            configuration.
            This event could alert an attacker that
            a datastore may have been altered.
          </t>
    <?rfc subcompact="yes"?>
          <t hangText="/netconf-session-end/username:">
            <vspace />
            Indicates the user name associated with the session.
          </t>
          <t hangText="/netconf-session-end/source-host:">
            <vspace />
            Indicates the source host address associated with 
            the session.
          </t>
        </list>
    <?rfc subcompact="no"?>
      </t>
      <t>
        <list style="hanging">
          <t hangText="/netconf-confirmed-commit:">
            <vspace />
            Event type itself indicates that the &lt;running&gt;
            datastore may have changed.
            This event could alert an attacker that the
            device behavior has changed.
          </t>
    <?rfc subcompact="yes"?>
          <t hangText="/netconf-confirmed-commit/username:">
            <vspace />
            Indicates the user name associated with the session.
          </t>
          <t hangText="/netconf-confirmed-commit/source-host:">
            <vspace />
            Indicates the source host address associated with 
            the session.
          </t>
          <t hangText="/netconf-confirmed-commit/confirm-event:">
            <vspace />
            Indicates the specific confirmed-commit state change that
            occurred. A value of 'complete' probably indicates that the
            &lt;running&gt; datastore has changed.
          </t>
          <t hangText="/netconf-confirmed-commit/timeout:">
            <vspace />
            Indicates the number of seconds in the future
            when the &lt;running&gt; datastore may change,
            due to the server reverting to an older configuration.
          </t>
        </list>
    <?rfc subcompact="no"?>
      </t>
    </section>  

    <section title="Acknowledgements">
      <t>
        Thanks to Martin Bjorklund, Juergen Schoenwaelder, 
        Kent Watsen, and many other members of the NETCONF WG
        for providing important input to this document.
      </t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      &rfc2119;
      &rfc3688;
      &rfc5277;

<reference anchor='RFC6020'>
<front>
<title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
<author initials='M.' surname='Bjorklund' fullname='M. Bjorklund' role="editor">
<organization /></author>
<date year='2010' month='October' />
</front>
<seriesInfo name='RFC' value='6020' />
</reference>

<reference anchor='RFC6021'>
<front>
<title>Common YANG Data Types</title>
<author initials='J.' surname='Schoenwaelder' fullname='J. Schoenwaelder' role="editor">
<organization /></author>
<date year='2010' month='October' />
</front>
<seriesInfo name='RFC' value='6021' />
</reference>

<reference anchor='RFC6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author initials='R.' surname='Enns' fullname='R. Enns' role="editor">
<organization /></author>
<author initials='M.' surname='Bjorklund' fullname='M. Bjorklund' role="editor">
<organization /></author>
<author initials='J.' surname='Schoenwaelder' fullname='J. Schoenwaelder' role="editor">
<organization /></author>
<author initials='A.' surname='Bierman' fullname='A. Bierman' role="editor">
<organization /></author>
<date year='2011' month='June' />
</front>
<seriesInfo name='RFC' value='6241' />
</reference>

      &rfc6242;
    </references>

  </back>
</rfc>
