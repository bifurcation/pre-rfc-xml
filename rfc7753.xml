<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc number="7753" category="std" ipr="trust200902" submissionType="IETF" consensus="yes">

  <front>

    <title abbrev="PCP PORT_SET">Port Control Protocol (PCP) Extension for
    Port-Set Allocation</title>

    <author fullname="Qiong Sun" initials="Q." surname="Sun">
      <organization>China Telecom</organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <region></region>

          <code></code>

          <country>China</country>
        </postal>

        <phone>86 10 58552936</phone>

        <email>sunqiong@ctbri.com.cn</email>
      </address>
    </author>

    <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
      <organization>France Telecom</organization>

      <address>
        <postal>
          <street></street>

          <city>Rennes</city>

          <region></region>

          <code>35000</code>

          <country>France</country>
        </postal>

        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <author fullname="Senthil Sivakumar" initials="S." surname="Sivakumar">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>7100-8 Kit Creek Road</street>

          <city>Research Triangle Park</city>

          <region>NC</region>

          <code>27709</code>

          <country>United States</country>
        </postal>

        <phone>+1 919 392 5158</phone>

        <email>ssenthil@cisco.com</email>
      </address>
    </author>

    <author fullname="Cathy Zhou" initials="C." surname="Zhou">
      <organization>Huawei Technologies</organization>

      <address>
        <postal>
          <street>Bantian, Longgang District</street>

          <city>Shenzhen</city>

          <code>518129</code>

          <country>China</country>
        </postal>

        <phone></phone>

        <email>cathy.zhou@huawei.com</email>
      </address>
    </author>

    <author fullname="Tina Tsou" initials="T." surname="Tsou">
      <organization>Philips Lighting</organization>

      <address>
        <postal>
          <street>3 Burlington Woods Dr #4t</street>

          <city>Burlington</city>
<region>MA</region>
          <code>01803</code>

          <country>United States</country>
        </postal>

        <phone>+1 617-423-9999</phone>

        <email>tina.tsou@philips.com</email>
      </address>
    </author>

    <author fullname="Simon Perreault" initials="S." surname="Perreault">
      <organization>Jive Communications</organization>

      <address>
        <postal>
          <street></street>

          <city>Quebec</city>

          <region>QC</region>

          <country>Canada</country>
        </postal>

        <email>sperreault@jive.com</email>
      </address>
    </author>

    <date month="February" year="2016" />

    <area>Transport</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>IPv4 service continuity</keyword>

    <keyword>IPv4 address shortage</keyword>

    <keyword>A+P</keyword>

    <keyword>AplusP</keyword>

    <keyword>address plus port</keyword>

    <keyword>MAP</keyword>

    <keyword>Port range</keyword>

    <keyword>Port Range Router</keyword>

    <keyword>MAP-E</keyword>

    <keyword>port set mapping</keyword>

    <keyword>port bulk</keyword>


    <abstract>
      <t>In some use cases, e.g., Lightweight 4over6, the client may require
      not just one port, but a port set. 

  This document defines an
  extension to the Port Control Protocol (PCP) that allows clients to
  manipulate a set of ports as a whole. 

  This is accomplished using a new MAP option:
      PORT_SET.</t>

    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>This document extends the Port Control Protocol (PCP) <xref
      target="RFC6887"></xref> with the ability to retrieve a set of ports
      using a single request. It does so by defining a new PORT_SET
      option.</t>

      <t>
  This section describes a few of the possible envisioned use
  cases.  Note that the PCP extension defined in this document is
  generic and is expected to be applicable to other use cases.
</t>


      <section title="Applications Using Port Sets">
        <t>Some applications require not just one port, but a port set. One
        example is a Session Initiation Protocol (SIP) User Agent Server (UAS)
        <xref target="RFC3261"></xref> expecting to handle multiple concurrent
        calls, including media termination. When the UAS receives a call, it needs
        to signal media port numbers to its peer. Generating individual PCP
        MAP requests for each of the media ports during call setup would
        introduce unwanted latency and increased signaling load. Instead, the
        server can pre-allocate a set of ports such that no PCP exchange is
        needed during call setup.</t>
      </section>

      <section title="Lightweight 4over6">
        <t>In the Lightweight 4over6 (lw4o6) <xref target="RFC7596"></xref>
        architecture, shared global addresses can be allocated to customers.
        This allows moving the Network Address Translation (NAT) function,
        otherwise accomplished by a Carrier-Grade NAT (CGN) <xref
        target="RFC6888"></xref>, to the Customer Premises Equipment (CPE).
        This provides more control over the NAT function to the user, and more
        scalability to the Internet Service Provider (ISP).</t>

        <t>In the lw4o6 architecture, the PCP-controlled device corresponds to
        the Lightweight Address Family Transition Router (lwAFTR), and the PCP client corresponds to the
        Lightweight B4 (lwB4). The PCP client sends a PCP MAP request
        containing a PORT_SET option to trigger shared address allocation on
        the Lightweight AFTR (lwAFTR). The PCP response contains the shared
        address information, including the port set allocated to the
        Lightweight B4 (lwB4).</t>
      </section>

      <section title="Firewall Control">
        <t>Port sets are often used in firewall rules. For example, defining a
        range for Real-time Transport Protocol (RTP) <xref
        target="RFC3550"></xref> traffic is common practice. The PCP MAP
        request can already be used for firewall control. The PORT_SET option
        brings the additional ability to manipulate firewall rules operating
        on port sets instead of single ports.</t>
      </section>

      <section title="Discovering Stateless Port-Set Mappings">
        <t>A PCP MAP request can be used to retrieve a mapping from a
        stateless device (i.e., one that does not establish any per-flow
        state, and simply rewrites the address and/or port in a purely
        algorithmic fashion, including no rewriting). Similarly, a PCP MAP
        request with a PORT_SET request can be used to discover a port-set
        mapping from a stateless device. See <xref
        target="stateless_example"></xref> for an example.</t>
      </section>
    </section>

    <section title="The Need for PORT_SET">
      <t>Multiple PCP MAP requests can be used to manipulate a set of ports;
      this has roughly the same effect as a single use of a PCP MAP request with
      a PORT_SET option. However, use of the PORT_SET option is more efficient
      when considering the following aspects: <list style="hanging">
          <t hangText="Network Traffic:">A single request uses fewer network
          resources than multiple requests.</t>

          <t hangText="Latency:">Even though PCP MAP requests can be sent in
          parallel, we can expect the total processing time to be longer for
          multiple requests than for a single one.</t>

          <t hangText="Server-side efficiency:">Some PCP-controlled devices
          can allocate port sets in a manner such that data passing through
          the device is processed much more efficiently than the equivalent
          using individual port allocations. For example, a CGN having a
          "bulk" port allocation scheme (see <xref target="RFC6888"></xref>,
          Section 5) often has this property.</t>

          <t hangText="Server-side scalability:">The number of state table
          entries in PCP-controlled devices is often a limiting factor.
          Allocating port sets in a single request can result in a single
          mapping entry being used, therefore allowing greater
          scalability.</t>
        </list></t>

      <t>Therefore, while it is functionally possible to obtain the same
      results using plain MAP, the extension proposed in this document allows
      greater efficiency, scalability, and simplicity, while lowering latency
      and necessary network traffic.</t>

      <t>In addition, PORT_SET supports parity preservation. Some protocols
      (e.g., RTP <xref target="RFC3550"></xref>) assign meaning to a port
      number's parity. When mapping sets of ports for the purpose of using
      such kind of protocol, preserving parity can be necessary.</t>
    </section>

    <section title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"></xref>.</t>
    </section>

    <section anchor="PORT_SET" title="The PORT_SET Option">
      <t><list style="hanging">
          <t hangText="Option Name:">PORT_SET</t>

          <t hangText="Number:">130 (see <xref target="IANA"></xref>)</t>

          <t hangText="Purpose:">To map sets of ports.</t>

          <t hangText="Valid for Opcodes:">MAP</t>

          <t hangText="Length:">5 bytes</t>

          <t hangText="May appear in:">Both requests and responses</t>

          <t hangText="Maximum occurrences:">1</t>
        </list></t>

      <t>The PORT_SET option indicates that the PCP client wishes to reserve a
      set of ports. The requested number of ports in that set is indicated in
      the option.</t>

      <t>The maximum occurrences of the PORT_SET option MUST be limited to 1.
      The reason is that the Suggested External Port Set depends on the data
      contained in the MAP Opcode header. Having two PORT_SET options with a
      single MAP Opcode header would imply having two overlapping Suggested
      External Port Sets.</t>

      <t>Note that the option number is in the "optional to process" range
      (128-191), meaning that a PCP MAP request with a PORT_SET option will be
      interpreted by a PCP server that does not support PORT_SET as a
      single-port PCP MAP request, as if the PORT_SET option was absent.</t>

      <t>The PORT_SET option is formatted as shown in <xref
      target="format"></xref>.</t>

      <figure anchor="format" title="PORT_SET Option">
        <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Option Code=130|   Reserved    |        Option Length=5        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Port Set Size          |      First Internal Port      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Reserved   |P|
+-+-+-+-+-+-+-+-+
        ]]></artwork>
      </figure>


      <t>The fields are as follows: <list style="hanging">

          <t hangText="Port Set Size:">A 16-bit unsigned integer. Number of
          ports requested. MUST NOT be zero.</t>

          <t hangText="First Internal Port:">In a request, this field MUST be
          set equal to the Internal Port field in the MAP Opcode by the PCP
          client. In a response, this field indicates the First Internal Port
          of the port set mapped by the PCP server, which may differ from the
          value sent in the request. That is to be contrasted to the Internal
          Port field, which by necessity is always identical in matched
          requests and responses.</t>

          <t hangText="Reserved:">MUST be set to zero when sending; MUST be
          ignored when receiving.</t>

          <t hangText="P (parity bit):">1 if parity preservation is requested; 0 otherwise.
          See <xref target="RFC4787"></xref>, Section 4.2.2.</t>
        </list></t>

<t>Note that Option Code, Reserved, and Option Length are as described in
<xref target="RFC6887"/>, Section 7.3.</t>



      <t>The Internal Port Set is defined as being the range of Port Set Size
      ports starting from the First Internal Port. The Suggested External Port
      Set is defined as being the range of Port Set Size ports starting from
      the Suggested External Port. Similarly, the Assigned External Port Set
      is defined as being the range of Port Set Size ports starting from the
      Assigned External Port. The Internal Port Set returned in a response and
      the Assigned External Port Set have the same size.</t>

      <t>The Suggested External Port corresponds to the first port in the
      Suggested External Port Set.  Its purpose is for clients to be able to
      regenerate previous mappings after state loss. When such an event
      happens, clients may attempt to regenerate identical mappings by
      suggesting the same External Port Set as before the state loss. Note
      that there is no guarantee that the allocated External Port Set will be
      the one suggested by the client.</t>

      <section title="Client Behavior">
        <t>To retrieve a set of ports, the PCP client adds a PORT_SET option
        to its PCP MAP request. If parity preservation is required (i.e., an
        even port to be mapped to an even port and an odd port to be mapped
        to an odd port), the PCP client MUST set the parity bit (to 1) to ask
        the PCP server to preserve the port parity.</t>

        <t>The PCP client MUST NOT include more than one PORT_SET option in a
        PCP MAP request. If several port sets are needed, the PCP client MUST
        issue separate PCP MAP requests, each potentially including a PORT_SET
        option. These individual PCP MAP requests MUST include distinct
        Internal Ports.</t>

        <t>If the PCP client does not know the exact number of ports it
        requires, it MAY then set the Port Set Size to 0xffff, indicating that
        it is willing to accept as many ports as the PCP server can offer.</t>

        <t>A PCP client SHOULD NOT send a PORT_SET option for single-port PCP
        MAP requests (including creation, renewal, and deletion), because that
        needlessly increases processing on the server.</t>

        <t>PREFER_FAILURE MUST NOT appear in a request with a PORT_SET option.
        As a reminder, PREFER_FAILURE was specifically designed for the
        Universal Plug and Play (UPnP) Internet Gateway Device - Port Control
        Protocol Interworking Function (IGD-PCP IWF) <xref
        target="RFC6970"></xref>. The reasons for not recommending the use of
        PREFER_FAILURE are discussed in Section 13.2 of <xref
        target="RFC6887"></xref>.</t>



        <t>When the PCP-controlled device supports delegation of multiple port sets
        for a given PCP client, the PCP client MAY re-initiate a
        PCP request to get another port set when it has exhausted all the
        ports within the port set.</t>
      </section>

      <section title="Server Behavior">
        <t>In addition to regular PCP MAP request processing, the following
        checks are made upon receipt of a PORT_SET option with a non-zero
        Requested Lifetime: <list style="symbols">

            <t>If multiple PORT_SET options are present in a single PCP MAP
            request, a MALFORMED_OPTION error is returned.</t>

            <t>If the Port Set Size is zero, a MALFORMED_OPTION error is
            returned.</t>

            <t>If a PREFER_FAILURE option is present, a MALFORMED_OPTION error
            is returned.</t>
          </list></t>

        <t>The PCP server MAY map fewer ports than the value of Port Set Size
        from the request. It MUST NOT map more ports than the PCP client asked
        for. Internal Ports outside the range of Port Set Size ports starting
        from the Internal Port MUST NOT be mapped by the PCP server.</t>

        <t>If the requested port set cannot be fully satisfied, the PCP server
        SHOULD map as many ports as possible and SHOULD map at least one port
        (which is the same behavior as if Port Set Size is set to 1).</t>

        <t>If the PCP server ends up mapping only a single port, for any
        reason, the PORT_SET option MUST NOT be present in the response. In
        particular, if the PCP server receives a single-port PCP MAP request
        that includes a PORT_SET option, the PORT_SET option is silently
        ignored, and the request is handled as a single-port PCP MAP
        request.</t>

        <t>If the port parity preservation is requested (P = 1), the PCP
        server MAY preserve port parity. In that case, the External Port is
        set to a value having the same parity as the First Internal Port.</t>

        <t>If the mapping is successful, the MAP response's Assigned External
        Port is set to the first port in the External Port Set, and the
        PORT_SET option's Port Set Size is set to the number of ports in the
        mapped port set. The First Internal Port field is set to the first
        port in the Internal Port Set.</t>
      </section>

      <section title="Absence of Capability Discovery">
        <t>A PCP client that wishes to make use of a port set includes the
        PORT_SET option. If no PORT_SET option is present in the response, the
        PCP client cannot conclude that the PCP server does not support the
        PORT_SET option. It may just be that the PCP server does support
        PORT_SET but decided to allocate only a single port, for reasons that
        are its own. If the client wishes to obtain more ports, it MAY send
        additional PCP MAP requests (see <xref target="fewer"></xref>), which
        the PCP server may or may not grant according to local policy.</t>

        <t>If port-set capability is added to or removed from a running PCP
        server, the server MAY reset its Epoch time and send an ANNOUNCE
        message as described in the PCP specification (<xref target="RFC6887"></xref>, Section
        14.1). This causes PCP clients to retry, and those using PORT_SET will
        now receive a different response.</t>
      </section>

      <section title="Port-Set Renewal and Deletion">
        <t>Port-set mappings are renewed and deleted as a single entity. That
        is, the lifetime of all port mappings in the set is set to the
        Assigned Lifetime at once.</t>

        <t>A PCP client attempting to refresh or delete a port-set mapping
        MUST include the PORT_SET option in its request.</t>

        <section anchor="overlap" title="Overlap Conditions">
          <t>Port-set PCP MAP requests can overlap with existing single-port
          or port-set mappings. This can happen either by mistake or after a
          PCP client becomes out of sync with server state.</t>

          <t>If a PCP server receives a PCP MAP request, with or without a
          PORT_SET option, that tries to map one or more Internal Ports or
          port sets belonging to already-existing mappings, then the request
          is considered to be a refresh request applying those mappings. Each
          of the matching port or port-set mappings is processed
          independently, as if a separate refresh request had been received.
          The processing is as described in Section 15 of <xref
          target="RFC6887"></xref>. The PCP server sends a Mapping Update
          message for each of the mappings.</t>
        </section>
      </section>
    </section>

    <section title="Examples">
      <section title="Simple Request on Network Address Translator IPv4/IPv4 (NAT44)">

        <t>An application requires a range of 100 IPv4 UDP ports to be mapped
        to itself. The application running on the host has created sockets
        bound to IPv4 UDP ports 50,000 to 50,099 for this purpose. It does not
        care about which External Port numbers are allocated. The PCP client
        sends a PCP request with the following parameters over IPv4: <list
            style="symbols">
            <t>MAP Opcode <list style="hanging">
                <t hangText="Mapping Nonce:">&lt;a random nonce&gt;</t>

                <t hangText="Protocol:">17</t>

                <t hangText="Internal Port:">50,000</t>

                <t hangText="Suggested External Port:">0</t>

                <t
                hangText="Suggested External IP Address:">::ffff:0.0.0.0</t>
              </list></t>

            <t>PORT_SET Option <list style="hanging">
                <t hangText="Port Set Size:">100</t>

                <t hangText="First Internal Port:">50,000</t>

                <t hangText="P:">0</t>
              </list></t>
          </list></t>

        <t>The PCP server is unable to fulfill the request fully: it is
        configured by local policy to only allocate 32 ports per user. Since
        the PREFER_FAILURE option is absent from the request, it decides to
        map UDP ports 37,056 to 37,087 on external address 192.0.2.3 to
        Internal Ports 50,000 to 50,031. After setting up the mapping in the
        NAT44 device it controls, it replies with the following PCP response:
        <list style="symbols">
            <t>MAP Opcode <list style="hanging">
                <t hangText="Mapping Nonce:">&lt;copied from the
                request&gt;</t>

                <t hangText="Protocol:">17</t>

                <t hangText="Internal Port:">50,000</t>

                <t hangText="Assigned External Port:">37,056</t>

                <t
                hangText="Assigned External IP Address:">::ffff:192.0.2.3</t>
              </list></t>

            <t>PORT_SET Option <list style="hanging">
                <t hangText="Port Set Size:">32</t>

                <t hangText="First Internal Port:">50,000</t>

                <t hangText="P:">0</t>
              </list></t>
          </list></t>

        <t>Upon receiving this response, the host decides that 32 ports is
        good enough for its purposes. It closes sockets bound to ports 50,032
        to 50,099, sets up a refresh timer, and starts using the port range it
        has just been assigned.</t>
      </section>

      <section anchor="stateless_example" title="Stateless Mapping Discovery">
        <t>A host wants to discover a stateless NAT44 mapping pointing to it.
        To do so, it sends the following request over IPv4: <list
            style="symbols">
            <t>MAP Opcode <list style="hanging">
                <t hangText="Mapping Nonce:">&lt;a random nonce&gt;</t>

                <t hangText="Protocol:">0</t>

                <t hangText="Internal Port:">1</t>

                <t hangText="Suggested External Port:">0</t>

                <t
                hangText="Suggested External IP Address:">::ffff:0.0.0.0</t>
              </list></t>

            <t>PORT_SET Option <list style="hanging">
                <t hangText="Port Set Size:">65,535</t>

                <t hangText="First Internal Port:">1</t>

                <t hangText="P:">0</t>
              </list></t>
          </list></t>

        <t>The PCP server sends the following response: <list style="symbols">
            <t>MAP Opcode <list style="hanging">
                <t hangText="Mapping Nonce:">&lt;copied from the
                request&gt;</t>

                <t hangText="Protocol:">0</t>

                <t hangText="Internal Port:">1</t>

                <t hangText="Assigned External Port:">26,624</t>

                <t
                hangText="Assigned External IP Address:">::ffff:192.0.2.5</t>
              </list></t>

            <t>PORT_SET Option <list style="hanging">
                <t hangText="Port Set Size:">2048</t>

                <t hangText="First Internal Port:">26,624</t>

                <t hangText="P:">0</t>
              </list></t>
          </list></t>

        <t>From this response, the host understands that a 2048-port stateless
        mapping is pointing to itself, starting from port 26,624 on external
        IP address 192.0.2.5.</t>
      </section>

      <section title="Resolving Overlap">
        <t>This example relates to <xref target="overlap"></xref>.</t>

        <t>Suppose Internal Port 100 is mapped to External Port 100 and port
        set 101-199 is mapped to External Port Set 201-299. The PCP server
        receives a PCP MAP request with Internal Port = 100, External Port =
        0, and a PORT_SET option with Port Set Size = 100. The request's
        Mapping Nonce is equal to those of the existing single-port and
	port-set mappings. This request is therefore treated as two refresh
        requests, the first one applying to the single-port mapping and the
        second one applying to the port-set mapping. The PCP server updates
        the lifetimes of both mappings as usual and then sends two responses: the first
        one contains Internal Port = 100, External Port = 100, and no PORT_SET
        option, while the second one contains Internal Port = 101, External
        Port = 201, and a PORT_SET option with Port Set Size = 99.</t>
      </section>
    </section>

    <section title="Operational Considerations">
      <section anchor="quota" title="Limits and Quotas">
        <t>It is up to the PCP server to determine the port-set quota, if any,
        for each PCP client.</t>

        <t>If the PCP server is configured to allocate multiple port-set
        allocations for one subscriber, the same Assigned External IP Address
        SHOULD be assigned to the subscriber in multiple port-set
        responses.</t>

        <t>To optimize the number of mapping entries maintained by the PCP
        server, it is RECOMMENDED to configure the PCP server to assign the
        maximum allowed Port Set Size in a single response. This policy SHOULD
        be configurable.</t>
      </section>

      <section title="High Availability">
        <t>The failover mechanism in MAP (Section 14 of <xref
        target="RFC6887"></xref>) can also be applied to port sets.</t>
      </section>

      <section title="Idempotence">
        <t>A core, desirable property of PCP is idempotence. In a
        nutshell, requests produce the same results whether they are executed
        once or multiple times. 

        This property is preserved with the PORT_SET
        option, with the following caveat: the order in which the PCP
        server receives requests with overlapping Internal Port Sets will
        affect the mappings being created and the responses received.</t>

        <t>For example, suppose these two requests are sent by a PCP client:
        <list style="hanging">
            <t hangText="Request A:">Internal Port Set 1-10</t>

            <t hangText="Request B:">Internal Port Set 5-14</t>
          </list> The PCP server's actions will depend on which request is
        received first. Suppose that A is received before B: <list
            style="hanging">
            <t hangText="Upon reception of A:">Internal Ports 1-10 are mapped.
            A success response containing the following fields is sent: <list
                style="hanging">
                <t hangText="Internal Port:">1</t>

                <t hangText="First Internal Port:">1</t>

                <t hangText="Port Set Size:">10</t>
              </list></t>

            <t hangText="Upon reception of B:">The request matches mapping A.
            The request is interpreted as a refresh request for mapping A, and
            a response containing the following fields is sent: <list
                style="hanging">
                <t hangText="Internal Port:">5</t>

                <t hangText="First Internal Port:">1</t>

                <t hangText="Port Set Size:">10</t>
              </list></t>
          </list> If the order of reception is reversed (B before A), the
        created mapping will be different, and the First Internal Port in both
        responses would then be 5.</t>

        <t>To avoid surprises, PCP clients MUST ensure that port-set mapping
        requests do not inadvertently overlap. For example, a host's operating
        system could include a central PCP client process through which
	port-set mapping requests would be arbitrated. Alternatively,
	individual
        PCP clients running on the same host would be required to acquire the
        Internal Ports from the operating system (e.g., a call to the bind()
        function from the BSD API) before trying to map them with PCP.</t>
      </section>

      <section anchor="fewer"
               title="What should a PCP client do when it receives fewer ports than requested?">
        <t>Suppose a PCP client asks for 16 ports and receives 8. What should
        it do? Should it consider this a final answer? Should it try a second
        request, asking for 8 more ports? Should it fall back to 8 individual
        PCP MAP requests? This document leaves the answers to be
        implementation specific but describes issues to be considered when
        answering them.</t>

        <t>First, the PCP server has decided to allocate 8 ports for some
        reason. It may be that allocation sizes have been limited by the PCP
        server's administrator. It may be that the PCP client has reached a
        quota. It may be that these 8 ports were the last contiguous ones
        available. Depending on the reason, asking for more ports may or may
        not be likely to actually yield more ports. However, the PCP client
        has no way of knowing.</t>

        <t>Second, not all PCP clients asking for N ports actually need all N
        ports to function correctly. For example, a DNS resolver could ask for
        N ports to be used for source-port randomization. If fewer than N
        ports are received, the DNS resolver will still work correctly, but
        source-port randomization will be slightly less efficient, having
        fewer bits to play with. In that case, it would not make much sense to
        ask for more ports.</t>

        <t>Finally, asking for more ports could be considered abuse. External
        Ports are a resource that is to be shared among multiple PCP clients.
        A PCP client trying to obtain more than its fair share could trigger
        countermeasures according to local policy.</t>

        <t>In conclusion, it is expected that, for most applications, asking
        for more ports would not yield benefits justifying the additional
        costs.</t>
      </section>
    </section>

    <section title="Security Considerations">
      <t>The security considerations discussed in <xref
      target="RFC6887"></xref> apply to this extension.</t>

      <t>As described in <xref target="overlap"></xref>, a single PCP request
      using the PORT_SET option may result in multiple responses. For this to
      happen, it is necessary that the request contain the nonce associated with
      multiple mappings on the server. Therefore, an on-path attacker could
      use an eavesdropped nonce to mount an amplification attack. Use of PCP
      authentication (<xref target="RFC6887"></xref>, Section 18) eliminates
      this attack vector.</t>

      <t>In order to prevent a PCP client from controlling all ports bound to
      a shared IP address, port quotas should be configured on the PCP server
      (Section 17.2 of <xref target="RFC6887"></xref>).</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>IANA has allocated value 130 
      in the "PCP Options" registry at
      &lt;http://www.iana.org/assignments/pcp-parameters&gt; for the new PCP option
      defined in <xref target="PORT_SET"></xref>.</t>
    </section>


  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">

<?rfc include="reference.RFC.6887"?>
<?rfc include="reference.RFC.2119"?>

    </references>

    <references title="Informative References">

<?rfc include='reference.RFC.7596'?>

<?rfc include='reference.RFC.6970'?>

<?rfc include="reference.RFC.4787"?>

<?rfc include="reference.RFC.6888"?>

<?rfc include="reference.RFC.3261"?>

<?rfc include="reference.RFC.3550"?>

    </references>

    <section title="Acknowledgements" numbered="no">
      <t>The authors would like to express sincere appreciation to Alain Durand,
      Cong Liu, Dan Wing, Dave Thaler, Peter Koch, Reinaldo Penno, Sam
      Hartman, Stuart Cheshire, Ted Lemon, Yoshihiro Ohba, Meral Shirazipour,
      Jouni Korhonen, and Ben Campbell for their useful comments and
      suggestions.</t>
    </section>


    <section title="Contributors" numbered="no">
      <t>The following individuals contributed to this document:</t>

      <t>Yunqing Chen<vspace />
      China Telecom<vspace />
      Room 502, No.118, Xizhimennei Street<vspace />
      Beijing 100035<vspace />
      China
      </t>


      <t>Chongfeng Xie<vspace />
      China Telecom<vspace />
      Room 502, No.118, Xizhimennei Street<vspace />
      Beijing 100035<vspace />
      China
      </t>


      <t>Yong Cui<vspace />
      Tsinghua University<vspace />
      Beijing 100084<vspace />
      China<vspace />
      Phone: +86-10-62603059<vspace />
      Email: yong@csnet1.cs.tsinghua.edu.cn
      </t>

      <t>Qi Sun<vspace />
      Tsinghua University<vspace />
      Beijing 100084<vspace />
      China<vspace />
      Phone: +86-10-62785822<vspace />
      Email: sunqibupt@gmail.com
      </t>


      <t>Gabor Bajko<vspace />
      Mediatek Inc.<vspace />
      Email: gabor.bajko@mediatek.com<vspace />
      </t>

      <t>Xiaohong Deng<vspace />
      France Telecom<vspace />
      Email: xiaohong.deng@orange-ftgroup.com</t>
    </section>

  </back>
</rfc>
