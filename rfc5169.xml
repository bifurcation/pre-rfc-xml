<?xml version="1.0" encoding="UTF-8"?><?rfc linefile="1:/tmp/CGI3102.1"?><?rfc linefile="1:/tmp/CGI3102.1"?>
<!-- automatically generated by xml2rfc v1.33 on 2008-03-20T21:24:18Z -->
<!-- automatically generated by xml2rfc v1.33 on 2008-03-20T21:24:18Z -->
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd"
[



<!-- xml2rfc-processed-entity RFC2119 -->
<!-- xml2rfc-processed-entity RFC3748 -->
<!-- xml2rfc-processed-entity RFC3990 -->
<!-- xml2rfc-processed-entity RFC4017 -->
<!-- xml2rfc-processed-entity RFC4186 -->
<!-- xml2rfc-processed-entity RFC4187 -->
<!-- xml2rfc-processed-entity RFC4851 -->
<!-- xml2rfc-processed-entity RFC4962 -->
]>

<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc compact="yes"?>
<?rfc tocdepth="3"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc rfcedstyle="yes"?>
<rfc number="5169" category="info" >
    <front>
        <title abbrev="HOKEY Re-Auth PS">Handover Key Management and Re-Authentication Problem Statement</title>

        <author initials="T" surname="Clancy" fullname="T. Charles Clancy, Editor">
            <organization abbrev="LTS">Laboratory for Telecommunications Sciences</organization>
            <address>
	      <postal>
                <street>US Department of Defense</street>
                <city>College Park</city>
                <region>MD</region>
                <country>USA</country>
              </postal>
              <email>clancy@LTSnet.net</email>
            </address>
        </author>

	<author initials="M" surname="Nakhjiri" fullname="Madjid Nakhjiri">
	  <organization abbrev="Motorola">Motorola</organization>
	  <address>
	    <email>madjid.nakhjiri@motorola.com</email>
	  </address>
	</author>

	<author initials="V" surname="Narayanan" fullname="Vidya Narayanan">
	  <organization abbrev="Qualcomm">Qualcomm, Inc.</organization>
	  <address>
	    <postal>
	      <street></street>
	      <city>San Diego</city>
	      <region>CA</region>
	      <country>USA</country>
	    </postal>
	    <email>vidyan@qualcomm.com</email>
	  </address>
	</author>

	<author initials="L" surname="Dondeti" fullname="Lakshminath Dondeti">
	  <organization abbrev="Qualcomm">Qualcomm, Inc.</organization>
	  <address>
	    <postal>
	      <street></street>
	      <city>San Diego</city>
	      <region>CA</region>
	      <country>USA</country>
	    </postal>
	    <email>ldondeti@qualcomm.com</email>
	  </address>
	</author>


        <date month="March" year="2008"/>
        <workgroup>HOKEY Working Group</workgroup>
        <keyword>HOKEY</keyword>
	<keyword>Handover Key Management</keyword>
	<keyword>Fast Re-authentication</keyword>
	<keyword>Mobility</keyword>

 <!-- [rfced] Please insert any keywords (beyond those that appear in
 the title) for use on http://www.rfceditor.org/rfcsearch.html. -->

        <abstract>

	<t>This document describes the Handover Keying (HOKEY)
	  re-authentication problem statement.  The current Extensible
	  Authentication Protocol (EAP) keying framework is not
	  designed to support re-authentication and handovers without
	  re-executing an EAP method. This often causes unacceptable
	  latency in various mobile wireless environments. This
	  document details the problem and defines design goals for a
	  generic mechanism to reuse derived EAP keying material for
	  handover.</t>
	    
        </abstract>
    </front>
    <middle>
        <!-- ******************************************************************** -->
        <section title="Introduction">

          <t>The Extensible Authentication Protocol (EAP), specified
          in RFC 3748 <xref target="RFC3748" /> is a generic framework
          supporting multiple authentication methods.  The primary
          purpose of EAP is network access control.  It also supports
          exporting session keys derived during the authentication.
          The EAP keying hierarchy defines two keys that are derived
          at the top level, the Master Session Key (MSK) and the
          Extended Master Session Key (EMSK).</t>

          <t>In many common deployment scenarios, an EAP peer and EAP
          server authenticate each other through a third party known
          as the pass-through authenticator (hereafter referred to as
          simply "authenticator").  The authenticator is responsible
          for encapsulating EAP packets from a network-access technology
          lower layer within the Authentication, Authorization, and
          Accounting (AAA) protocol.  The authenticator does not
          directly participate in the EAP exchange, and simply acts as
          a gateway during the EAP method execution.</t>

          <t>After successful authentication, the EAP server transports
          the MSK to the authenticator.  Note that this is performed
          using AAA protocols, not EAP itself.  The underlying L2 or
          L3 protocol uses the MSK to derive additional keys,
          including the transient session keys (TSKs) used for
          per-packet encryption and authentication.</t>

	  <t>Note that while the authenticator is one logical device,
	  there can be multiple physical devices involved.  For
	  example, the CAPWAP model <xref target="RFC3990" /> splits
	  authenticators into two logical devices: Wireless
	  Termination Points (WTPs) and Access Controllers (ACs).
	  Depending on the configuration, authenticator features can
	  be split in a variety of ways between physical devices;
	  however, from the EAP perspective, there is only one logical
	  authenticator.</t>

	  <t>Wireless handover between access points or base stations
	  is typically a complex process that involves several layers
	  of protocol execution.  Often times executing these
	  protocols results in unacceptable delays for many real-time
	  applications such as voice <xref target="MSA03"/>.  One part
	  of the handover process is EAP re-authentication, which can
	  contribute significantly to the overall handover time
	  <xref target="MSPCA04"/>.  Thus, in many environments we can
	  lower overall handover time by lowering EAP
	  re-authentication time.</t>

	  <t>In EAP existing implementations, when a peer arrives at
	  the new authenticator, it runs an EAP method irrespective of
	  whether it has been authenticated to the network recently
	  and has unexpired keying material.  This typically involves
	  an EAP-Response/Identity message from the peer to the server,
	  followed by one or more round trips between the EAP server
	  and peer to perform the authentication, followed by the
	  EAP-Success or EAP-Failure message from the EAP server to
	  the peer.  At a minimum, the EAP exchange consists of 1.5
	  round trips.  However, given the way EAP interacts with AAA,
	  and given that an EAP identity exchange is typically
	  employed, at least 2 round trips are required to the EAP
	  server.  An even higher number of round trips is required by
	  the most commonly used EAP methods. For instance, EAP-TLS
	  (Extensible Authentication Protocol - Transport Layer
          Security) requires at least 3, but typically 4 or more, round
          trips.</t> 

          <t>There have been attempts to solve the problem of
          efficient re-authentication in various ways.  However, those
          solutions are either EAP-method specific or EAP lower-layer
          specific.  Furthermore,
          these solutions do not deal with scenarios involving
          handovers to new authenticators, or they do not conform to the
          AAA keying requirements specified in <xref target="RFC4962"
          />.</t>

          <t>This document provides a detailed description of
          efficient EAP-based re-authentication protocol design goals.
          The scope of this protocol is specifically re-authentication
          and handover between authenticators within a single
          administrative domain.  While the design goals presented in
          this document may facilitate inter-technology handover and
          inter-administrative-domain handover, they are outside the
          scope of this protocol.</t>

        </section>
        <!-- ******************************************************************** -->
        <section title="Terminology">

          <t>In this document, several words are used to signify the
          requirements of the specification. These words are often
          capitalized. The key words "MUST", "MUST NOT", "REQUIRED",
          "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",
          "MAY", and "OPTIONAL" in this document are to be interpreted
          as described in <xref target="RFC2119"/>, with the
          qualification that, unless otherwise stated, they apply to the
          design of the re-authentication protocol, not its
          implementation or application.</t>

          <t>With respect to EAP, this document follows the
          terminology that has been defined in <xref target="RFC3748"
          /> and <xref target="EAP-KEYING" />.</t>

        </section>
        <!-- ******************************************************************** -->
        <section anchor="psa" title="Problem Statement">

	  <t>Under the existing model, any re-authentication requires
	  a full EAP exchange with the EAP server to which the peer
	  initially authenticated <xref target="RFC3748" />.  This
	  introduces handover latency from both network transit time
	  and processing delay.  In service provider networks, the
	  home EAP server for a peer could be on the other side of the
	  world, and typical intercontinental latencies across the
	  Internet are 100 to 300 milliseconds per round trip
	  <xref target="LGS07"/>.  Processing delays average a couple
	  of milliseconds for symmetric-key operations and hundreds of
	  milliseconds for public-key operations.</t>

	  <t>An EAP conversation with a full EAP method run can take
	  two or more round trips to complete, causing delays in
	  re-authentication and handover times.  Some methods specify
	  the use of keys and state from the initial authentication to
	  finish subsequent authentications in fewer round trips and
	  without using public-key operations (detailed in Section 6.1).
	  However, even in those cases, multiple round trips to the
	  EAP server are required, resulting in unacceptable handover
	  times.</t>

	  <t>In summary, it is undesirable to run an EAP Identity and
	  complete EAP method exchange each time a peer authenticates
	  to a new authenticator or needs to extend its current
	  authentication with the same authenticator.  Furthermore, it
	  is desirable to specify a method-independent, efficient,
	  re-authentication protocol.  Keying material from the
	  initial authentication can be used to enable efficient
	  re-authentication.  It is also desirable to have a local
	  server with low-latency connectivity to the peer that can
	  facilitate re-authentication.  Lastly, a re-authentication
	  protocol should also be capable of supporting scenarios
	  where an EAP server passes authentication information to a
	  remote re-authentication server, allowing a peer to
	  re-authenticate locally, without having to communicate with
	  its home re-authentication server.</t>

          <t>These problems are the primary issues to be resolved.  In
          solving them, there are a number of constraints to conform
          to, and those result in some additional work to be done in
          the area of EAP keying.</t>

        </section>

        <section title="Design Goals">

          <t>The following are the goals and constraints in designing
          the EAP re-authentication and key management protocol:</t>

          <t>
          <list style="hanging">

            <t hangText="Lower-latency operation:"> The protocol MUST
            be responsive to handover and re-authentication latency
            performance objectives within a mobile access network.  A
            solution that reduces latency as compared to a full EAP
            authentication will be most favorable, since in networks
            that rely on reactive re-authentication this will directly
            impact handover times.  <vspace blankLines="1" /></t>

            <t hangText="EAP lower-layer independence:"> Any keying
            hierarchy and protocol defined MUST be lower-layer
            independent in order to provide capabilities over
            heterogeneous technologies.  The defined protocols MAY
            require some additional support from the lower layers that
            use it, but should not require any particular lower layer.
            <vspace blankLines="1" /></t>

            <t hangText="EAP method independence:"> Changes to
            existing EAP methods MUST NOT be required as a result of
            the re-authentication protocol.  There MUST be no
            requirements imposed on future EAP methods, provided they
            satisfy <xref target="EAP-KEYING" /> and
            <xref target="RFC4017" />.  Note that the only EAP methods
            for which independence is required are those that
            currently conform to the specifications of
            <xref target="EAP-KEYING" /> and
            <xref target="RFC4017" />.  In particular, methods that do
            not generate the keys required by
            <xref target="EAP-KEYING" /> need not be
            supported by the re-authentication protocol.
            <vspace blankLines="1" /></t>

            <t hangText="AAA protocol compatibility and keying:"> Any
            modifications to EAP and EAP keying MUST be compatible
            with RADIUS <xref target="RADEXT-DESIGN" /> and
            Diameter <xref target="DIME-APP-DESIGN" />.
            Extensions to both RADIUS and Diameter to support these
            EAP modifications are acceptable.  The designs and
            protocols must be configurable to satisfy the AAA key
            management requirements specified in RFC 4962
            <xref target="RFC4962" />.  <vspace blankLines="1" /></t>

            <t hangText="Compatibility:"> Compatibility and
            coexistence with compliant (<xref target="RFC3748" />
            <xref target="EAP-KEYING" />) EAP deployments
            MUST be provided.  Specifically, the protocol should be
            designed such that a peer not supporting fast
            re-reauthentication should still function in a network
            supporting fast re-authentication, and also a peer
            supporting fast re-authentication should still function in
            a network not supporting fast re-authentication.
            <vspace blankLines="1" /></t>

	    <t hangText="Cryptographic Agility:"> Any
	    re-authentication protocol MUST support cryptographic
	    algorithm agility, to avoid hard-coded primitives whose
	    security may eventually prove to be compromised.  The
	    protocol MAY support cryptographic algorithm negotiation,
	    provided it does not adversely affect overall performance
	    (i.e., by requiring additional round trips).
	    <vspace blankLines="1" /></t>

	    <t hangText="Impact to Existing Deployments:">
	    Any re-authentication protocol MAY make changes to the
	    peer, authenticator, and EAP server, as necessary to meet
	    the aforementioned design goals.  In order to facilitate
	    protocol deployment, protocols should seek to minimize the
	    necessary changes, without sacrificing performance.</t>

          </list>
          </t>

        </section>

        <!-- ******************************************************************** -->

        <section title="Security Goals" anchor="sec">

          <t>This section draws from the guidance provided in
          <xref target="RFC4962" /> to further define the security
          goals to be achieved by a complete re-authentication keying
          solution.</t>

          <section title="Key Context and Domino Effect">

            <t>Any key must have a well-defined scope and must be used
            in a specific context and for the intended use.  This
            specifically means the lifetime and scope of each key must
            be defined clearly so that all entities that are
            authorized to have access to the key have the same context
            during the validity period.  In a hierarchical key
            structure, the lifetime of lower-level keys must not
            exceed the lifetime of higher-level keys.  This
            requirement may imply that the context and the scope
            parameters have to be exchanged.  Furthermore, the
            semantics of these parameters must be defined to provide
            proper channel binding specifications.  The definition of
            exact parameter syntax definition is part of the design of
            the transport protocol used for the parameter exchange, and
            that may be outside scope of this protocol.</t>

            <t>If a key hierarchy is deployed, compromising lower-level keys must not result in a compromise of higher-level
            keys that were used to derive the lower-level keys.
            The compromise of keys at each level must not result in
            compromise of other keys at the same level.  The same
            principle applies to entities that hold and manage a
            particular key defined in the key hierarchy.  Compromising
            keys on one authenticator must not reveal the keys of
            another authenticator.  Note that the compromise of
            higher-level keys has security implications on lower
            levels.</t>

            <t>Guidance on parameters required, caching, and storage and
            deletion procedures to ensure adequate security and
            authorization provisioning for keying procedures must be
            defined in a solution document.</t>

            <t>All the keying material must be uniquely named so that
            it can be managed effectively.</t>

          </section>

          <section title="Key Freshness">

            <t>As <xref target="RFC4962" /> defines,
            a fresh key is one that is generated for the intended use.
            This would mean the key hierarchy must provide for
            creation of multiple cryptographically separate child keys
            from a root key at higher level.  Furthermore, the keying
            solution needs to provide mechanisms for 
            refreshing each of the keys within the key hierarchy.</t>

          </section>

          <section title="Authentication">

            <t>Each handover keying participant must be authenticated
            to any other party with whom it communicates to the extent
            it is necessary to ensure proper key scoping, and securely
            provide its identity to any other entity that may require
            the identity for defining the key scope.</t>

          </section>

          <section title="Authorization">

            <t>The EAP Key management document
            <xref target="EAP-KEYING" /> discusses several
            vulnerabilities that are common to handover mechanisms.
            One important issue arises from the way the authorization
            decisions might be handled at the AAA server during
            network access authentication.  Furthermore, the reasons
            for making a particular authorization decision are not
            communicated to the authenticator.  In fact, the
            authenticator only knows the final authorization result.
            The proposed solution must make efforts to document and
            mitigate authorization attacks.</t>

          </section>

          <section title="Channel Binding">

            <t>Channel Binding procedures are needed to avoid a
            compromised intermediate authenticator providing
            unverified and conflicting service information to each of
            the peer and the EAP server.  To support fast
            re-authentication, there will be intermediate entities
            between the peer and the back-end EAP server.  Various
            keys need to be established and scoped between these
            parties and some of these keys may be parents to other
            keys.  Hence, the channel binding for this architecture
            will need to consider layering intermediate entities at
            each level to make sure that an entity with a higher level
            of trust can examine the truthfulness of the claims made
            by intermediate parties.</t>

          </section>

          <section title="Transport Aspects">

            <t>Depending on the physical architecture and the
            functionality of the elements involved, there may be a
            need for multiple protocols to perform the key transport
            between entities involved in the handover keying
            architecture.  Thus, a set of requirements for each of
            these protocols, and the parameters they will carry, must
            be developed.</t>

            <t>The use of existing AAA protocols for carrying EAP
            messages and keying material between the AAA server and
            AAA clients that have a role within the architecture
            considered for the keying problem will be carefully
            examined.  Definition of specific parameters, required for
            keying procedures and for being transferred over any of the
            links in the architecture, are part of the scope.  The
            relation between the identities used by the transport
            protocol and the identities used for keying also needs to
            be explored.</t>

          </section>

        </section>

        <!-- ******************************************************************** -->

        <section title="Use Cases and Related Work">

          <t>In order to further clarify the items listed in scope of
          the proposed work, this section provides some background on
          related work and the use cases envisioned for the proposed
          work.</t>

	  <section title="Method-Specific EAP Re-Authentication">

	    <t>A number of EAP methods support fast re-authentication.
	    In this section, we examine their properties in further
	    detail.</t>

	    <t>EAP-SIM <xref target="RFC4186"/> and EAP-AKA
	    <xref target="RFC4187"/> support fast re-authentication,
	    bootstrapped by the keys generated during an initial full
	    authentication.  In response to the typical
	    EAP-Request/Identity, the peer sends a specially formatted
	    identity indicating a desire to perform a fast
	    re-authentication.  A single round-trip occurs to verify
	    knowledge of the existing keys and provide fresh nonces
	    for generating new keys.  This is followed by an EAP
	    success.  In the end, it requires a single local round
	    trip between the peer and authenticator, followed by
	    another round trip between the peer and EAP server.  AKA
	    is based on symmetric-key cryptography, so processing
	    latency is minimal.</t>

	    <t>EAP-TTLS <xref target="EAP-TTLS" /> and
	    PEAP (Protected EAP Protocol) <xref target="JOSEFSSON-PPPEXT" />
	    support using TLS session resumption for fast
	    re-authentication.  During the TLS handshake, the client
	    includes the message ID of the previous session he wishes
	    to resume, and the server can echo that ID back if it
	    agrees to resume the session.  EAP-FAST
	    <xref target="RFC4851" /> also supports TLS session
	    resumption, but additionally allows stateless session
	    resumption as defined in <xref target="RFC5077" />.
	    Overall, for all three protocols, there are still two round
	    trips between the peer and EAP server, in addition to the
	    local round trip for the Identity request and
	    response.</t>

	    <t>To improve performance, fast re-authentication needs to
	    reduce the number of overall round trips.  Optimal
	    performance could result from eliminating the
	    EAP-Request/Identity and EAP-Response/Identity messages
	    observed in typical EAP method execution, and allowing a
	    single round trip between the peer and a local
	    re-authentication server.</t>

	  </section>

          <section title="IEEE 802.11r Applicability">

            <t>One of the EAP lower layers, IEEE 802.11 <xref
            target="IEEE.802-11R-D9.0" />, is in the process of
            specifying a fast handover mechanism.  Access Points (APs)
            are grouped into mobility domains.  Initial authentication
            to any AP in a mobility domain requires execution of EAP,
            but handover between APs within the mobility domain does
            not require the use of EAP.</t>

            <t>Internal to the mobility domain are sets of security
            associations to support key transfers between APs.  In one
            model, relatively few devices, called R0-KHs, act as
            authenticators.  All EAP traffic traverses an R0-KH, and
            it derives the initial IEEE 802.11 keys.  It then
            distributes cryptographically separate keys to APs in the
            mobility domain, as necessary, to support the client
            mobility.  For a deployment with M designated R0-KHs and N
            APs, this requires M*N security associations.  For small
            M, this approach scales reasonably.  Another approach
            allows any AP to act as an R0-KH, necessitating a full
            mesh of N2 security associations, which scales poorly.</t>

            <t>The model that utilizes designated R0-KHs is
            architecturally similar to the fast re-authentication
            model proposed by HOKEY.  HOKEY, however, allows for
            handover between authenticators.  This would allow an IEEE
            802.11r-enabled peer to handover from one mobility domain
            to another without performing an EAP authentication.</t>

          </section>

          <section title="CAPWAP Applicability">

            <t>The CAPWAP (Control and Provisioning of Wireless Access
	    Points) protocol
	    <xref target="CAPWAP-PROTOCOL-SPEC" />
	    allows the functionality of an IEEE 802.11 access point to
	    be split into two physical devices in enterprise
	    deployments.  Wireless Termination Points (WTPs) implement
	    the physical and low-level Media Access Control (MAC) layers, 
<!-- [rfced] Please verify that MAC has been correctly expanded as
Media Access Control (MAC). -->
while a centralized
	    Access Controller (AC) provides higher-level management
	    and protocol execution.  Client authentication is handled
	    by the AC, which acts as the AAA authenticator.</t>

	    <t>One of the many features provided by CAPWAP is the
	    ability to roam between WTPs without executing an EAP
	    authentication.  To accomplish this, the AC caches the MSK
	    from an initial EAP authentication, and uses it to execute
	    a separate four-way handshake with the station as it moves
	    between WTPs.  The keys resulting from the four-way
	    handshake are then distributed to the WTP to which the
	    station is associated.  CAPWAP is transparent to the
	    station.</t>

            <t>CAPWAP currently has no means to support roaming
	    between ACs in an enterprise network.  The proposed work
	    on EAP efficient re-authentication addresses is an
	    inter-authenticator handover problem from an EAP
	    perspective, which applies during handover between ACs.
	    Inter-AC handover is a topic yet to be addressed in great
	    detail and the re-authentication work can potentially
	    address it in an effective manner.</t>

          </section>

        </section>


        <!-- ******************************************************************** -->

        <section title="Security Considerations">

          <t>This document details the HOKEY problem statement.  Since HOKEY is
          an authentication protocol, there is a myriad of security-related
          issues surrounding its development and deployment.</t>

          <t>In this document, we have detailed a variety of security
          properties inferred from <xref
          target="RFC4962" /> to which HOKEY must
          conform, including the management of key context, scope,
          freshness, and transport; resistance to attacks based on the
          domino effect; and authentication and authorization.  See
          <xref target="sec" /> for further details.</t>

        </section>
        <!-- ******************************************************************** -->
     
        <!-- ******************************************************************** -->
        <section title="Contributors">

	  <t>This document represents the synthesis of two problem statement
	    documents.  In this section, we acknowledge their contributions,
	    and involvement in the early documents.</t>

	  <t><list style="hanging" hangIndent="2">

	  <t>Mohan Parthasarathy</t>
	  <t>Nokia</t>
	  <t>EMail: mohan.parthasarathy@nokia.com
	    <vspace blankLines="1"/></t>

	  <t>Julien Bournelle</t>
	  <t>France Telecom R&D</t>
	  <t>EMail: julien.bournelle@orange-ftgroup.com
	    <vspace blankLines="1"/></t>

	  <t>Hannes Tschofenig</t>
	  <t>Siemens</t>
	  <t>EMail: Hannes.Tschofenig@siemens.com
	    <vspace blankLines="1"/></t>

	  <t>Rafael Marin Lopez</t>
	  <t>Universidad de Murcia</t>
	  <t>EMail: rafa@dif.um.es</t>

	  </list></t>

        </section>

        <!-- ******************************************************************** -->
        <section title="Acknowledgements">

	  <t>The authors would like to thank the participants of the
	  HOKEY working group for their review and comments including:
	  Glen Zorn, Dan Harkins, Joe Salowey, and Yoshi Ohba.  The
	  authors would also like to thank those that provided
          last-call reviews including: Bernard Aboba, Alan DeKok, Jari
          Arkko, and Hannes Tschofenig.</t> 

        </section>

        <!-- ******************************************************************** -->

    </middle>

    <!-- ******************************************************************** -->

    <back>
        <references title="Normative References">

               <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>

<reference anchor='RFC2119'>

<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year='1997' month='March' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>

<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='ftp://ftp.isi.edu/in-notes/rfc2119.txt' />
<format type='HTML' octets='17491' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5777' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>
<?rfc linefile="661:/tmp/CGI3102.1"?>
               <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml/reference.RFC.3748.xml"?>

<reference anchor='RFC3748'>

<front>
<title>Extensible Authentication Protocol (EAP)</title>
<author initials='B.' surname='Aboba' fullname='B. Aboba'>
<organization /></author>
<author initials='L.' surname='Blunk' fullname='L. Blunk'>
<organization /></author>
<author initials='J.' surname='Vollbrecht' fullname='J. Vollbrecht'>
<organization /></author>
<author initials='J.' surname='Carlson' fullname='J. Carlson'>
<organization /></author>
<author initials='H.' surname='Levkowetz' fullname='H. Levkowetz'>
<organization /></author>
<date year='2004' month='June' />
<abstract>
<t>This document defines the Extensible Authentication Protocol (EAP),
an authentication framework which supports multiple authentication
methods.  EAP typically runs directly over data link layers such as
Point-to-Point Protocol (PPP) or IEEE 802, without requiring IP.  EAP
provides its own support for duplicate elimination and retransmission,
but is reliant on lower layer ordering guarantees.  Fragmentation is
not supported within EAP itself; however, individual EAP methods may
support this.  This document obsoletes RFC 2284.  A summary of the
changes between this document and RFC 2284 is available in Appendix
A. [STANDARDS TRACK]</t></abstract></front> 

<seriesInfo name='RFC' value='3748' />
<format type='TXT' octets='157994' target='ftp://ftp.isi.edu/in-notes/rfc3748.txt' />
</reference>
<?rfc linefile="662:/tmp/CGI3102.1"?>
               <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml/reference.RFC.4017.xml"?>

<reference anchor='RFC4017'>

<front>
<title>Extensible Authentication Protocol (EAP) Method Requirements for Wireless LANs</title>
<author initials='D.' surname='Stanley' fullname='D. Stanley'>
<organization /></author>
<author initials='J.' surname='Walker' fullname='J. Walker'>
<organization /></author>
<author initials='B.' surname='Aboba' fullname='B. Aboba'>
<organization /></author>
<date year='2005' month='March' />
<abstract>
<t>The IEEE 802.11i MAC Security Enhancements Amendment makes use of
IEEE 802.1X, which in turn relies on the Extensible Authentication
Protocol (EAP).  This document defines requirements for EAP methods
used in IEEE 802.11 wireless LAN deployments.  The material in this
document has been approved by IEEE 802.11 and is being presented as an
IETF RFC for informational purposes.  This memo provides information
for the Internet community.</t></abstract></front> 

<seriesInfo name='RFC' value='4017' />
<format type='TXT' octets='22183' target='ftp://ftp.isi.edu/in-notes/rfc4017.txt' />
</reference>
<?rfc linefile="663:/tmp/CGI3102.1"?>
	       <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml/reference.RFC.4962.xml"?>

<reference anchor='RFC4962'>

<front>
<title>Guidance for Authentication, Authorization, and Accounting (AAA) Key Management</title>
<author initials='R.' surname='Housley' fullname='R. Housley'>
<organization /></author>
<author initials='B.' surname='Aboba' fullname='B. Aboba'>
<organization /></author>
<date year='2007' month='July' />
<abstract>
<t>This document provides guidance to designers of Authentication,
Authorization, and Accounting (AAA) key management protocols.  The
guidance is also useful to designers of systems and solutions that
include AAA key management protocols.  Given the complexity and
difficulty in designing secure, long-lasting key management algorithms
and protocols by experts in the field, it is almost certainly
inappropriate for IETF working groups without deep expertise in the
area to be designing their own key management algorithms and protocols
based on Authentication, Authorization, and Accounting (AAA)
protocols.  The guidelines in this document apply to documents
requesting publication as IETF RFCs.  Further, these guidelines will
be useful to other standards development organizations (SDOs) that
specify AAA key management.  This document specifies an Internet Best
Current Practices for the Internet Community, and requests discussion
and suggestions for improvements.</t>
</abstract>
</front> 

<seriesInfo name='BCP' value='132' />
<seriesInfo name='RFC' value='4962' />
<format type='TXT' octets='54927' target='ftp://ftp.isi.edu/in-notes/rfc4962.txt' />
</reference>
<?rfc linefile="664:/tmp/CGI3102.1"?>

	</references>
        <references title="Informative References">

<!-- [rfced] &I-D.funk-eap-ttls-v0; -->
<!-- [rfced] &I-D.ietf-capwap-protocol-specification;-->
<!-- [rfced] &I-D.ietf-dime-app-design-guide; -->
<!-- [rfced] &I-D.ietf-eap-keying;-->
<!-- [rfced  &I-D.ietf-radext-design;-->
<!-- [rfced  &I-D.josefsson-pppext-eap-tls-eap;-->

               <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml/reference.RFC.3990.xml"?>

<reference anchor='RFC3990'>

<front>
<title>Configuration and Provisioning for Wireless Access Points (CAPWAP) Problem Statement</title>
<author initials='B.' surname='O&apos;Hara' fullname='B. O&apos;Hara'>
<organization /></author>
<author initials='P.' surname='Calhoun' fullname='P. Calhoun'>
<organization /></author>
<author initials='J.' surname='Kempf' fullname='J. Kempf'>
<organization /></author>
<date year='2005' month='February' />
<abstract>
<t>This document describes the Configuration and Provisioning for Wireless Access Points (CAPWAP) problem statement.  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='3990' />
<format type='TXT' octets='11854' target='ftp://ftp.isi.edu/in-notes/rfc3990.txt' />
</reference>
<?rfc linefile="676:/tmp/CGI3102.1"?>
               <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml/reference.RFC.4186.xml"?>

<reference anchor='RFC4186'>

<front>
<title>Extensible Authentication Protocol Method for Global System for Mobile Communications (GSM) Subscriber Identity Modules (EAP-SIM)</title>
<author initials='H.' surname='Haverinen' fullname='H. Haverinen'>
<organization /></author>
<author initials='J.' surname='Salowey' fullname='J. Salowey'>
<organization /></author>
<date year='2006' month='January' />
<abstract>
<t>This document specifies an Extensible Authentication Protocol (EAP) mechanism for authentication and session key distribution using the Global System for Mobile Communications (GSM) Subscriber Identity Module (SIM).  GSM is a second generation mobile network standard.  The EAP-SIM mechanism specifies enhancements to GSM authentication and key agreement whereby multiple authentication triplets can be combined to create authentication responses and session keys of greater strength than the individual GSM triplets.  The mechanism also includes network authentication, user anonymity support, result indications, and a fast re-authentication procedure.  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='4186' />
<format type='TXT' octets='220807' target='ftp://ftp.isi.edu/in-notes/rfc4186.txt' />
</reference>
<?rfc linefile="677:/tmp/CGI3102.1"?>
               <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml/reference.RFC.4187.xml"?>

<reference anchor='RFC4187'>

<front>
<title>Extensible Authentication Protocol Method for 3rd Generation Authentication and Key Agreement (EAP-AKA)</title>
<author initials='J.' surname='Arkko' fullname='J. Arkko'>
<organization /></author>
<author initials='H.' surname='Haverinen' fullname='H. Haverinen'>
<organization /></author>
<date year='2006' month='January' />
<abstract>
<t>This document specifies an Extensible Authentication Protocol (EAP) mechanism for authentication and session key distribution that uses the Authentication and Key Agreement (AKA) mechanism. AKA is used in the 3rd generation mobile networks Universal Mobile Telecommunications System (UMTS) and CDMA2000. AKA is based on symmetric keys, and typically runs in a Subscriber Identity Module, which is a UMTS Subscriber Identity Module, USIM, or a (Removable) User Identity Module, (R)UIM, similar to a smart card.&lt;/t>&lt;t> EAP-AKA includes optional identity privacy support, optional result indications, and an optional fast re-authentication procedure. This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='4187' />
<format type='TXT' octets='194958' target='ftp://ftp.isi.edu/in-notes/rfc4187.txt' />
</reference>
<?rfc linefile="678:/tmp/CGI3102.1"?>
         
<!-- [rfced] &RFC4507;-->
               <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml/reference.RFC.4851.xml"?>

<reference anchor='RFC4851'>

<front>
<title>The Flexible Authentication via Secure Tunneling Extensible Authentication Protocol Method (EAP-FAST)</title>
<author initials='N.' surname='Cam-Winget' fullname='N. Cam-Winget'>
<organization /></author>
<author initials='D.' surname='McGrew' fullname='D. McGrew'>
<organization /></author>
<author initials='J.' surname='Salowey' fullname='J. Salowey'>
<organization /></author>
<author initials='H.' surname='Zhou' fullname='H. Zhou'>
<organization /></author>
<date year='2007' month='May' />
<abstract>
<t>This document defines the Extensible Authentication Protocol (EAP) based Flexible Authentication via Secure Tunneling (EAP-FAST) protocol.  EAP-FAST is an EAP method that enables secure communication between a peer and a server by using the Transport Layer Security (TLS) to establish a mutually authenticated tunnel.  Within the tunnel, Type-Length-Value (TLV) objects are used to convey authentication related data between the peer and the EAP server.  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='4851' />
<format type='TXT' octets='131460' target='ftp://ftp.isi.edu/in-notes/rfc4851.txt' />
</reference>
<?rfc linefile="681:/tmp/CGI3102.1"?>

  <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml3/reference.I-D.funk-eap-ttls-v0.xml"?>

<reference anchor='EAP-TTLS'>
<front>
<title>EAP Tunneled TLS Authentication Protocol Version 0 (EAP-TTLSv0)</title>

<author initials='P' surname='Funk' fullname='Paul Funk'>
    <organization />
</author>

<author initials='S' surname='Blake-Wilson' fullname='Simon Blake-Wilson'>
    <organization />
</author>

<date month='March' day='11' year='2008' />

</front>

<seriesInfo name='Work in' value='Progress' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-funk-eap-ttls-v0-04.txt' />

</reference>
<reference anchor='CAPWAP-PROTOCOL-SPEC'>
<front>
<title>CAPWAP Protocol Specification</title>

<author initials='P' surname='Calhoun' fullname='Pat Calhoun'>
    <organization />
</author>
<author initials='M' surname='Montemurro'>
</author>
<author initials='D' surname='Stanely'>
</author>
<date month='March' day='17' year='2008' />

<abstract><t>This specification defines the Control And Provisioning of Wireless Access Points (CAPWAP) Protocol.  The CAPWAP protocol meets the IETF CAPWAP working group protocol requirements.  The CAPWAP protocol is designed to be flexible, allowing it to be used for a variety of wireless technologies.  This document describes the base CAPWAP protocol.  The CAPWAP protocol binding which defines extensions for use with the IEEE 802.11 wireless LAN protocol is available in [I-D.ietf-capwap-protocol-binding-ieee80211].  Extensions are expected to be defined to enable use of the CAPWAP protocol with additional wireless technologies.</t></abstract>

</front>

<seriesInfo name='Work in' value='Progress' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-capwap-protocol-specification-10.txt' />
</reference>

<?rfc linefile="679:/tmp/CGI99881.1"?>
	  <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-dime-app-design-guide.xml"?>

<reference anchor='DIME-APP-DESIGN'>
<front>
<title>Diameter Applications Design Guidelines</title>

<author initials='V' surname='Fajardo' fullname='Victor Fajardo'>
    <organization />
</author>

<author initials='T' surname='Asveren' fullname='Tolga Asveren'>
    <organization />
</author>

<author initials='H' surname='Tschofenig' fullname='Hannes Tschofenig'>
    <organization />
</author>

<author initials='G' surname='McGregor' fullname='Glenn McGregor'>
    <organization />
</author>

<author initials='J' surname='Loughney' fullname='John Loughney'>
    <organization />
</author>

<date month='January' day='23' year='2008' />

<abstract><t>The Diameter Base protocol provides updated rules on how to extend Diameter by modifying and/or deriving from existing applications or creating entirely new applications.  This is a companion document to the Diameter Base protocol which further explains and/or clarify these rules.  It is meant as a guidelines document and therefore it does not add, remove or change existing rules.</t></abstract>

</front>

<seriesInfo name='Work in' value='Progress' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-dime-app-design-guide-06.txt' />
</reference>


<?rfc linefile="680:/tmp/CGI99881.1"?>
          <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-eap-keying.xml"?>

<reference anchor='EAP-KEYING'>
<front>
<title>Extensible Authentication Protocol (EAP) Key Management Framework</title>

<author initials='B' surname='Aboba' fullname='Bernard  Aboba'>
    <organization />
</author>

<author initials='D' surname='Simon' fullname='Daniel Simon'>
    <organization />
</author>

<author initials='P' surname='Eronen' fullname='Pasi Eronen'>
    <organization />
</author>

<date month='November' day='11' year='2007' />

<abstract><t>The Extensible Authentication Protocol (EAP), defined in RFC 3748, enables extensible network access authentication.  This document specifies the EAP key hierarchy and provides a framework for the transport and usage of keying material and parameters generated by EAP authentication algorithms, known as "methods".  It also provides a detailed system-level security analysis, describing the conditions under which the key management guidelines described in RFC 4962 can be satisfied.</t></abstract>

</front>

<seriesInfo name='Work in' value='Progress' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-eap-keying-22.txt' />
</reference>

<?rfc linefile="681:/tmp/CGI99881.1"?>
	  <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-radext-design.xml"?>

<reference anchor='RADEXT-DESIGN'>
<front>
<title>RADIUS Design Guidelines</title>

<author initials='G' surname='Weber' fullname='Greg Weber'>
    <organization />
</author>

<author initials='A' surname='DeKok' fullname='Alan DeKok'>
    <organization />
</author>

<date month='December' day='5' year='2007' />

<abstract><t>This document provides guidelines for the design of attributes used by the Remote Authentication Dial In User Service (RADIUS) protocol. It is expected that these guidelines will prove useful to authors and reviewers of future RADIUS attribute specifications, both within the IETF as well as other Standards Development Organizations (SDOs).</t></abstract>

</front>

<seriesInfo name='Work in' value='Progress' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-radext-design-02.txt' />
</reference>

<?rfc linefile="682:/tmp/CGI99881.1"?>
	  <?rfc linefile="1:http://xml.resource.org/public/rfc/bibxml3/reference.I-D.josefsson-pppext-eap-tls-eap.xml"?>

<reference anchor='JOSEFSSON-PPPEXT'>
<front>
<title>Protected EAP Protocol (PEAP) Version 2</title>

<author initials='S' surname='Josefsson' fullname='Simon Josefsson'>
    <organization />
</author>

<author initials='A' surname='Palekar' fullname='Ashwin Palekar'>
    <organization />
</author>

<author initials='D' surname='Simon' fullname='Daniel Simon'>
    <organization />
</author>

<author initials='G' surname='Zorn' fullname='Glen Zorn'>
    <organization />
</author>

<date month='October' day='21' year='2004' />

<abstract><t>The Extensible Authentication Protocol (EAP) provides support for multiple authentication methods. This document defines the Protected Extensible Authentication Protocol (PEAP) Version 2, which provides an encrypted and authenticated tunnel based on transport layer security (TLS) that encapsulates EAP authentication mechanisms. PEAPv2 uses TLS to protect against rogue authenticators, protect against various attacks on the confidentiality and integrity of the inner EAP method exchange and provide EAP peer identity privacy. PEAPv2 also provides support for chaining multiple EAP mechanisms, cryptographic binding between authentications performed by inner EAP mechanisms and the tunnel, exchange of arbitrary parameters (TLVs), and fragmentation and reassembly.</t></abstract>

</front>

<seriesInfo name='Work in' value='Progress' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-josefsson-pppext-eap-tls-eap-10.txt' />
</reference>


	       <reference anchor="IEEE.802-11R-D9.0">
	         <front>
	           <title>
		     Information technology - Telecommunications and
		     information exchange between systems - Local and
		     metropolitan area networks - Specific requirements
		     - Part 11: Wireless LAN Medium Access Control (MAC)
		     and Physical Layer (PHY) specifications - Amendment
		     2: Fast BSS Transition
		   </title>
		   <author>
		     <organization/>
		   </author>
		   <date month="January" year="2008"/>
	         </front>
	         <seriesInfo name="IEEE" value="Standard 802.11r"/>
	       </reference>



	<reference anchor="RFC5077">

	<front>

	<title>
Transport Layer Security (TLS) Session Resumption without Server-Side State
</title>

	<author initials="J." surname="Salowey" fullname="J. Salowey">
<organization/>
</author>

	<author initials="H." surname="Zhou" fullname="H. Zhou">
<organization/>
</author>

	<author initials="P." surname="Eronen" fullname="P. Eronen">
<organization/>
</author>

	<author initials="H." surname="Tschofenig" fullname="H. Tschofenig">
<organization/>
</author>
<date year="2008" month="January"/>

	<abstract>

	<t>
This document describes a mechanism that enables the Transport Layer Security (TLS) server to resume sessions and avoid keeping per-client session state.  The TLS server encapsulates the session state into a ticket and forwards it to the client.  The client can subsequently resume a session using the obtained ticket.  This document obsoletes RFC 4507. [STANDARDS TRACK]
</t>
</abstract>
</front>
<seriesInfo name="RFC" value="5077"/>
<format type="TXT" octets="41989" target="ftp://ftp.isi.edu/in-notes/rfc5077.txt"/>
</reference>
	       <reference anchor="LGS07">
		 <front>
		   <title>
		     Network Coordinates in the Wild
		   </title>
		   <author initials="J" surname="Ledlie">
		     <organization/>
		   </author>
		   <author initials="P" surname="Gardner">
		     <organization/>
		   </author>
		   <author initials="M" surname="Selter">
		     <organization/>
		   </author>
		   <date month="April" year="2007"/>
		 </front>
		 <seriesInfo name="USENIX" value="Symposium on Networked System Design and Implementation"/>
	       </reference>

	       <reference anchor="MSA03">
		 <front>
		   <title>
		     An Empirical Analysis of the IEEE 802.11 MAC-Layer Handoff Process
		   </title>
		   <author initials="A" surname="Mishra">
		     <organization/>
		   </author>
		   <author initials="M" surname="Shin">
		     <organization/>
		   </author>
		   <author initials="W" surname="Arbaugh">
		     <organization/>
		   </author>
		   <date month="April" year="2003"/>
		 </front>
		 <seriesInfo name="ACM SIGCOMM" value="Computer and Communications Review"/>
	       </reference>
	       <reference anchor="MSPCA04">
		 <front>
		   <title>
		     Proactive Key Distribution using Neighbor Graphs
		   </title>
		   <author initials="A" surname="Mishra">
		     <organization/>
		   </author>
		   <author initials="M" surname="Shin">
		     <organization/>
		   </author>
		   <author initials="N" surname="Petroni">
		     <organization/>
		   </author>
		   <author initials="T" surname="Clancy">
		     <organization/>
		   </author>
		   <author initials="W" surname="Arbaugh">
		     <organization/>
		   </author>
		   <date month="February" year="2004"/>
		 </front>
		 <seriesInfo name="IEEE" value="Wireless Communications"/>
	       </reference>
        </references>
    </back>
</rfc>

