<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt'?>
<?rfc toc="yes"?>
<?rfc strict="no"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>
<rfc number="5429" category="std" updates="5228" obsoletes="3028">

  <front>

    <title abbrev="Sieve Extension: Reject">
      Sieve Email Filtering: Reject and Extended Reject Extensions
    </title>

    <author fullname="Aaron Stone" initials="A" surname="Stone" role="editor">
      <organization>Serendipity</organization>
      <address>
        <postal>
          <street>260 El Verano Ave</street>
          <city>Palo Alto</city>
          <region>CA</region>
          <code>94306</code>
          <country>USA</country>
        </postal>
        <email>aaron@serendipity.palo-alto.ca.us</email>
      </address>
    </author>

    <date month="January" year="2009" />

    <area>Applications</area>

    <workgroup>Sieve Working Group</workgroup>

    <keyword>sieve refuse reject ereject joe-job smtp lmtp spam</keyword>

<note title="">
<t>
This document may contain material from IETF Documents or IETF
Contributions published or made publicly available before November 10,
2008.  The person(s) controlling the copyright in some of this material
may not have granted the IETF Trust the right to allow modifications
of such material outside the IETF Standards Process.  Without
obtaining an adequate license from the person(s) controlling the
copyright in such materials, this document may not be modified outside
the IETF Standards Process, and derivative works of it may not be
created outside the IETF Standards Process, except to format it for
publication as an RFC or to translate it into languages other than
English.
</t>
</note>


    <abstract>
      <t>
      This memo updates the definition of the Sieve mail 
filtering language
      "reject" extension, originally defined in RFC 3028.
      </t>
      
      <t>
      A "Joe-job" is a spam run forged to appear as though it came from an
      innocent party, who is then generally flooded by automated bounces,
      Message Disposition Notifications (MDNs), and personal messages with
      complaints.  The original Sieve "reject" action defined in RFC 3028
      required use of MDNs for rejecting messages, thus contributing to the
      flood of Joe-job spam to victims of Joe-jobs.
      </t>
      
      <t>
      This memo updates the definition of the "reject" action to allow
      messages to be refused during the SMTP transaction, and defines the
      "ereject" action to require messages to be refused during the SMTP
      transaction, if possible.
      </t>
      
      <t>
      The "ereject" action is intended to replace the "reject" action wherever
      possible. The "ereject" action is similar to "reject", but will always
      favor protocol-level message rejection.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>
      The Sieve mail filtering language, as originally defined in
      <xref target="RFC3028">RFC 3028</xref>, specified that the "reject" action
      shall discard a message and send a Message Disposition Notification
      <xref target="MDN" /> to the envelope sender along with an explanatory
      message.  The Sieve mail filtering language, as updated in
      <xref target="SIEVE">RFC 5228</xref>, does not define any "reject"
      action, hence that is the purpose of this document.
      </t>
 
      <t>
      This document updates the definition of the "reject" action to permit
      refusal of the message during the SMTP transaction, if possible, and
      defines a new "ereject" action to require refusal of the message
      during the SMTP transaction, if possible.
      </t>
      
      <t>
      An important goal of this document is to reduce the risk of Sieve scripts
      being used to perpetrate "Joe-job" spam runs, where the MDN is sent
      notifying the sender of a message of its non-delivery is in fact sent to
      an innocent third-party.  The original Sieve "reject" action defined in
      RFC 3028 required use of MDNs for rejecting messages, thus contributing
      to the flood of Joe-job spam to victims of Joe-jobs. By rejecting the
      message at the protocol level, it is less likely that an MDN will be needed,
      and thus less likely that an MDN will be misdirected at an innocent third-party.
      </t>
      
      <t>
      Implementations are further encouraged to use spam-detection systems
      to determine the level of risk associated with sending an MDN, and
      this document allows implementations to silently drop the MDN if the
      rejected message is deemed likely to be spam.
      </t>

      <t>
      This document also describes how to use "reject"/"ereject" at varying points
      in the email stack: Mail Transfer Agent (MTA), Mail Delivery Agent (MDA),
      and Mail User Agent (MUA). See <xref target="EMAIL-ARCH" /> for a
      comprehensive discussion of these environments.
      </t>
   
      <t>
      In general, an MDN is generated by an MUA, and can be used to
      indicate the status of a message with respect to its recipient, while a
      Delivery Status Notification (DSN) <xref target="DSN" /> is generated by an MTA, and can be used to
      indicate whether or not a message was received and delivered by the mail
      system.
      </t>
 
      <t>
      Further discussion highlighting the risks of generating MDNs and the
      benefits of protocol-level refusal can be found in <xref target="Joe-DoS" />.
      </t>

      <section title="Conventions Used in This Document">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref target="KEYWORDS"/>.
        </t>

        <t>Conventions for notations are as in Section 1.1 of <xref target="SIEVE">RFC 5228</xref>.</t>

        <t>
        This document does not attempt to define spam or how it should be
        identified, nor does it attempt to define an email virus or how it should be
        detected.  Implementors are advised to follow best practices
        and keep abreast of current research in these fields.
        </t>
      </section>
    </section>

    <section title="Sieve &quot;reject&quot; and &quot;ereject&quot; Extensions">
      <section anchor="action-ereject" title="Action ereject">
        <t>Usage:   ereject &lt;reason: string&gt;</t>
   
        <t>
        Sieve implementations that implement the "ereject" action must use
        the "ereject" capability string.
        </t>
        
        <t>
        The "ereject" action cancels the implicit keep and refuses delivery
        of a message.  The "reason" string is a <xref target="UTF-8">UTF-8</xref> string
        specifying the reason for refusal.  How a message is refused depends
        on the capabilities of the mail component (MDA or MTA) executing the
        Sieve script.  The Sieve interpreter MUST carry out one of the
        following actions (listed in order from most to least preferred),
        MUST carry out the most preferable action possible, and MUST fall back to
        lesser actions if a preferred action fails.
        </t>

        <t>
          <list style="numbers">
            <t>Refuse message delivery by sending a 5XX response code
               over <xref target="SMTP">SMTP</xref> or <xref target="LMTP">Local Mail Transfer Protocol (LMTP)</xref>.
               See <xref target="reject-protocol-level" /> for more details.
            </t>
	    <t>Send a non-delivery report to the envelope sender (<xref
               target="REPORT"/> <xref target="DSN"/>), unless the envelope sender
               address is determined to be a forged or otherwise invalid address.
            </t>
          </list>
        </t>

        <t>
	Note that the determination of whether or not an envelope sender is a
	forgery may be performed by site-specific and implementation-specific
	heuristic techniques, such as "return-path verification", details of
	which are outside the scope of this document.  Implementations SHOULD
	log instances when a non-delivery report is not sent and the reason
	for not sending the report (e.g., content was spam, return-path invalid, etc.).
	</t>
        
	<t> The "ereject" action MUST NOT be available in environments that do
	not support protocol-level rejection, e.g., an MUA, and MUST be
	available in all other environments that support the "reject" action.
	</t>

      <figure><artwork>
    Example:   
            require ["ereject"];
            
            if address "from" "someone@example.com" {
                ereject "I no longer accept mail from this address";
            }
      </artwork></figure>


    <section anchor="reject-protocol-level" title="Rejecting a Message at the SMTP/LMTP Protocol Level">
      <t>
      Sieve implementations that are able to reject messages at the
      SMTP/LMTP level MUST do so and SHOULD use the 550 response code. Note
      that if a message is arriving over SMTP and has multiple recipients,
      some of whom have accepted the message, <xref target="reject-dsn" />
      defines how to reject such a message.
      </t>

      <t>
      The risk that these actions will generate blowback spam are minimized but
      cannot be eliminated completely even in the case of "ereject", so caution is
      advised when using these actions to deal with messages determined to be
      spam.
      </t>

      <t>
      Note that <xref target="SMTP">SMTP</xref> does not allow non-US-ACSII characters in the
      SMTP response text. If non-US-ACSII characters appear in the "reason"
      string, they can be sent at the protocol level if and only if the
      client and the server use an SMTP extension that allows for
      transmission of non-US-ACSII reply text. (One example of such an SMTP
      extension is described in <xref target="UTF8-RESP" />.) In the absence of such an
      SMTP extension, the Sieve engine MUST replace any "reason" string
      being sent at the protocol level and containing non-US-ACSII
      characters with an implementation-defined US-ACSII-only string.
      </t>
      
      <t>
      Users who don't like this behavior should consider using
      the "reject" action described in <xref target="action-reject" />, if available.
      </t>
      
      <t>
      See <xref target="refuse-protocol-level" /> for the detailed instructions about performing
      protocol-level rejection.
      </t>

    </section>

    <section anchor="reject-dsn" title="Rejecting a Message by Sending a DSN">
      <t>
      An implementation may receive a message via SMTP that has more
      than one RCPT TO that has been accepted by the server, and at least
      one but not all of them are refusing delivery (whether the refusal
      is caused by a Sieve "ereject" action or for some other reason).
      In this case, the server MUST accept the message and generate DSNs
      for all recipients that are refusing it. Note that this exception
      does not apply to LMTP, as LMTP is able to reject messages on a per-
      recipient basis.  (However, the LMTP client may then have no
      choice but to generate a DSN to report the error, which
      may result in blowback spam.)
      </t>
      
      <t>
      Note that according to <xref target="DSN"/>, Delivery Status Notifications MUST NOT
      be generated if the MAIL FROM (or Return-Path) is empty.  
      </t>
      
      <t>
      The DSN message MUST follow the requirements of  <xref target="DSN"/> and  <xref target="REPORT" />.
      The action-value field defined in <xref target="DSN"/>, Section 2.3.3, MUST contain
      the value "failed".  The human-readable portion of the non-delivery
      report MUST contain the "reason" string from the "ereject" action and
      SHOULD contain additional text alerting the apparent original sender
      that the message was refused by an email filter.  This part of the
      report might appear as follows:

      </t>
      
      <figure><artwork>
------------------------------------------------------------
Your message was refused by the recipient's mail filtering program.
The reason given is as follows:

I am not taking mail from you, and I don't want your birdseed,
either!
------------------------------------------------------------
      </artwork></figure>
    </section>
      </section>

    <section anchor="action-reject" title='Action reject'>
    
    <t>
    This section updates the definition of the "reject" action in Section
    4.1 of <xref target="RFC3028">RFC 3028</xref> and is an optional extension to <xref target="SIEVE"/>.
    </t>
    
    <figure><artwork>
       Usage:   reject &lt;reason: string&gt;
    </artwork></figure>
    
    <t>
    Sieve implementations that implement the "reject" action must use
    the "reject" capability string.
    </t>
    
    <t>
    The "reject" action cancels the implicit keep and refuses delivery of a
    message.  The "reason" string is a <xref target="UTF-8">UTF-8</xref> string
    specifying the reason for refusal.  Unlike the "ereject" action described
    above, this action would always favor preserving the exact text of the
    refusal reason. Typically, the "reject" action refuses delivery of a message
    by sending back an MDN to the sender (see <xref target="reject-mdn" />).
    However, implementations MAY refuse delivery over SMTP/LMTP protocol
    (as detailed in <xref target="refuse-protocol-level" />), if and only if all
    of the following conditions are true:

    </t>
    
       <?rfc needLines="5" ?>
       <t><list style="numbers">
         <t>
         The "reason" string consists of only US-ASCII characters
         <vspace blankLines="0" />&nbsp;&nbsp;or <vspace blankLines="0" />
         The "reason" string contains non-US-ASCII and both the client and server
         support and negotiate use of an SMTP/LMTP extension for sending
         UTF-8 responses.
         </t>
    
       <?rfc needLines="7" ?>
         <t>
         LMTP protocol is used
         <vspace blankLines="0" />&nbsp;&nbsp;or <vspace blankLines="0" />
         SMTP protocol is used and the message has a single recipient
         <vspace blankLines="0" />&nbsp;&nbsp;or <vspace blankLines="0" />
         SMTP protocol is used, the message has multiple recipients,
         and all of them refused message delivery (whether or not Sieve is being used).
         </t>
       </list></t>
    
    <figure><artwork>
    Example:   
            require ["reject"];
    
            if size :over 100K {
                reject text:
    Your message is too big.  If you want to send me a big attachment,
    put it on a public web site and send me a URL.
    .
                ;
            }
    </artwork></figure>

    <t>
    (Pretend that the "reason" string above contains some non-US-ACSII text.)
    </t>
    
    <t>
    Implementations may use techniques as described in <xref target="action-ereject" />
    to determine if a non-delivery report should not be sent to a forged sender.
    Implementations SHOULD log instances when a non-delivery report is not sent
    and the reason for not sending the report.
    </t>
    
    <section anchor="reject-mdn" title="Rejecting a Message by Sending an MDN">
    <t>
    The "reject" action resends the received message to the envelope sender
    specified by the MAIL FROM (or Return-Path) address, wrapping it in
    a "reject" form, explaining that it was rejected by the recipient.
    </t>
    
    <t>
    Note that according to <xref target="MDN"/>, Message Disposition Notifications MUST
    NOT be generated if the MAIL FROM (or Return-Path) is empty.  
    </t>
    
    <t>
    A reject message MUST take the form of a failure MDN as specified
    by <xref target="MDN"/>. The human-readable portion of the message, the first
    component of the MDN, contains the human-readable message
    describing the error, and it SHOULD contain additional text
    alerting the apparent original sender that mail was refused by an
    email filter.
    </t>
    
    <t>
    The MDN disposition-field as defined in the MDN specification MUST
    be "deleted" and MUST have the "MDN-sent-automatically" and
    "automatic-action" modes set (see Section 3.2.6 of <xref target="MDN"/>).
    </t>
    
    <t>
    In the following script, a message is rejected and returned to the
    sender.
    </t>
    
    <figure><artwork>
    Example:
            require ["reject"];
    
            if header :contains "from" "coyote@desert.example.org" {
                reject text:
    I am not taking mail from you, and I don't
    want your birdseed, either!
    .
                ;
            }
    </artwork></figure>
    
    <t>
    For this script, the first part of the MDN might appear as follows:
    </t>
    
    <figure><artwork>
------------------------------------------------------------
The message was refused by the recipient's mail filtering program.
The reason given was as follows:

I am not taking mail from you, and I don't want your birdseed,
either!
------------------------------------------------------------
    </artwork></figure>
    
    
    </section>
    </section>

    <section title="Silent Upgrade from &quot;reject&quot; to &quot;ereject&quot;">
    <t>
    Implementations MUST NOT silently upgrade "reject" actions to "ereject" actions
    in a Sieve script because this might lead to unpleasant changes of behavior
    not expected by the script owner.
    </t>

    <t>
    User interfaces that present a generic rejection option, and generate Sieve
    script output, MAY switch from generating "reject" to "ereject" actions, so
    long as doing so does not create a confusing change for the script owner.
    </t>

    <t>
    Script generators SHOULD ensure that a rejection action being
    executed as a result of an anti-spam/anti-virus positive test
    be done using the "ereject" action, as it is more suitable for such
    rejections.
    </t>
    
    <t>
    Script generators MAY automatically upgrade scripts that previously
    used the "reject" action for anti-spam/anti-virus related rejections.
    Note that such generators MUST make sure that the target environment
    can support the "ereject" action.
    </t>
    </section>

    <section title="Compatibility with Other Actions">
    <t>
    This section applies equally to "reject" and "ereject" actions.
    All references to the "reject" action in this section can be replaced
    with the "ereject" action.
    </t>
    
    <t>
    A "reject" action cancels the implicit keep.
    </t>
    
    <t>
    Implementations MUST prohibit the execution of more than one "reject"
    in a Sieve script.
    </t>
    
    <t>
    "reject" MUST be incompatible with the <xref target="VACATION">"vacation"</xref>
    action. It is NOT RECOMMENDED that implementations permit the use of
    "reject" with actions that cause mail delivery, such as "keep",
    "fileinto", and "redirect".
    </t>
    
    <t>
    Making "reject" compatible with actions that cause mail delivery
    violates the <xref target="SMTP">RFC 5321</xref> principle that a message is either delivered or
    bounced back to the sender. So bouncing a message back (rejecting)
    and delivering it will make the sender believe that the message was
    not delivered.
    </t>
    
    <t>
    However, there are existing laws requiring certain organizations to
    archive all received messages, even the rejected ones. Also, it can
    be quite useful to save copies of rejected messages for later
    analysis.
    </t>
    
    <t>
    Any action that would modify the message body will not have an effect
    on the body of any message refused by "reject" using an SMTP response
    code and MUST NOT have any effect on the content of generated
    DSN/MDNs.
    </t>
    
    </section>

    <section anchor="refuse-protocol-level" title="Details of Protocol-Level Refusal">
    
    <t>
    If the "reason" string consists of multiple CRLF separated lines,
    then the reason text MUST be returned as a multiline SMTP/LMTP
    response, per Section 4.2.1 of <xref target="SMTP"/>. Any line MUST NOT exceed the
    SMTP limit on the maximal line length. To make the "reason" string
    conform to any such limits, the server MAY insert CRLFs and turn the
    response into a multiline response.
    </t>
    
    <t>
    In the following script (which assumes support for the
    <xref target="SPAMTEST">"spamtest"</xref>
    and "fileinto" extensions), messages that test highly positive for spam are refused.
    </t>
    
    <figure><artwork>
    Example:
            require ["ereject", "spamtest", "fileinto",
                     "comparator-i;ascii-numeric"];
    
            if spamtest :value "ge"
                        :comparator "i;ascii-numeric" "6" {
                ereject text:
    AntiSpam engine thinks your message is spam.
    It is therefore being refused.
    Please call 1-900-PAY-US if you want to reach us.
    .
                ;
            } elsif spamtest :value "ge"
                             :comparator "i;ascii-numeric" "4" {
                fileinto "Suspect";
            }
    </artwork></figure>
    
    <t>
    The following excerpt from an SMTP session shows it in action.
    </t>
    <figure><artwork>
      ...
      C: DATA
      S: 354 Send message, ending in CRLF.CRLF.
       ...
      C: .
      S: 550-AntiSpam engine thinks your message is spam.
      S: 550-It is therefore being refused.
      S: 550 Please call 1-900-PAY-US if you want to reach us.
    </artwork></figure>
    
    <t>
    If the SMTP/LMTP server supports <xref target="ENHANCED-CODES">RFC 2034</xref>, it MUST
    prepend an appropriate Enhanced Error Code to the "reason" text.
    Enhanced Error code 5.7.1 or a more generic 5.7.0 are RECOMMENDED.
    With an Enhanced Error Code, the response to a DATA command in the SMTP
    example below will look like:
    </t>
    
    <figure><artwork>
      S: 550-5.7.1 AntiSpam engine thinks your message is spam.
      S: 550-5.7.1 It is therefore being refused.
      S: 550 5.7.1 Please call 1-900-PAY-US if you want to reach us.
    </artwork></figure>
    
    <t>
    if the server selected "5.7.1" as appropriate.
    </t>
    
    <t>
    If a Sieve implementation that supports "ereject" does not wish to
    immediately disclose the reason for rejection (for example, that it
    detected spam), it may delay immediately sending of the 550 error
    code by sending a 4XX error code on the first attempt to receive
    the message.
    </t>
    </section>
    </section>

    <section anchor="changes" title="Changes from RFC 3028">
      <t>
      Clarified that the "reject" action cancels the implicit keep.
      Extended the list of allowable actions on "reject" to include protocol-level message rejection.
      </t>
      
      <t>
      Added the "ereject" action that is similar to "reject", but will
      always favor protocol-level message rejection.
      </t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>
      The introduction to this document discusses why rejecting messages
      before delivery is better than accepting and bouncing them.
      </t>

      <t>
      While the details of techniques that can be used to determine when to
      silently drop a non-delivery report are outside the scope of this
      document, the explicit permission this document gives to take such action
      may enable denial-of-service situations. Techniques such as
      spam-checking, return-path verification, and others, can and do have
      false-positives. Care should be exercised to prevent the loss of
      legitimate messages by failing to notify the sender of non-delivery.
      </t>

      <t> Security issues associated with email auto-responders are fully
      discussed in the Security Considerations section of <xref
      target="RFC3834" />. This document is not believed to introduce any
      additional security considerations in this general area.  </t>
      
      <t> The "ereject" extension does not raise any other security
      considerations that are not already present in the base <xref
      target="SIEVE"/> specification, and these issues are discussed in <xref
      target="SIEVE"/>.  </t> </section>

    <section anchor="iana" title="IANA Considerations">
      <t>
      The following section provides the IANA registrations for the Sieve
      extensions specified in this document.
      </t>
      <section anchor="iana-reject" title="&quot;reject&quot; Extension Registration">
        <t>
        IANA is requested to update the registration for the Sieve "reject"
        extension as detailed below:
        </t>

        <figure><artwork>
Capability name: reject
Description:     adds the "reject" action for refusing delivery 
                 of a message.  The exact reason for refusal is
                 conveyed back to the client.
RFC number:      RFC 5429
Contact address: the Sieve discussion list &lt;ietf-mta-filters@imc.org&gt;
        </artwork></figure>
      </section>

      <section anchor="iana-ereject" title="&quot;ereject&quot; Extension Registration">
        <t>
        IANA is requested to replace the preliminary registration of the
        Sieve refuse extension with the following registration:
        </t>
          
        <figure><artwork>
Capability name: ereject
Description:     adds the "ereject" action for refusing delivery
                 of a message.  The refusal should happen as early
                 as possible (e.g., at the protocol level) and might
                 not preserve the exact reason for refusal if it
                 contains non-US-ASCII text.
RFC number:      RFC 5429
Contact address: the Sieve discussion list &lt;ietf-mta-filters@imc.org&gt;
        </artwork></figure>
      </section>
    </section>

  </middle>

  <back>
    <references title="Normative References">
      <reference anchor="KEYWORDS">

<front>
<title abbrev="RFC Key Words">Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials="S." surname="Bradner" fullname="Scott Bradner">
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year="1997" month="March"/>
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>

<seriesInfo name="BCP" value="14"/>
<seriesInfo name="RFC" value="2119"/>
<format type="TXT" octets="4723" target="ftp://ftp.isi.edu/in-notes/rfc2119.txt"/>
<format type="HTML" octets="17491" target="http://xml.resource.org/public/rfc/html/rfc2119.html"/>
<format type="XML" octets="5777" target="http://xml.resource.org/public/rfc/xml/rfc2119.xml"/>
</reference>
      <reference anchor="SIEVE">

<front>
<title>Sieve: An Email Filtering Language</title>
<author initials="P." surname="Guenther" fullname="P. Guenther">
<organization/></author>
<author initials="T." surname="Showalter" fullname="T. Showalter">
<organization/></author>
<date year="2008" month="January"/>
<abstract>
<t>This document describes a language for filtering email messages at time of final delivery.  It is designed to be implementa
ble on either a mail client or mail server.  It is meant to be extensible, simple, and independent of access protocol, mail ar
chitecture, and operating system.  It is suitable for running on a mail server where users may not be allowed to execute arbit
rary programs, such as on black box Internet Message Access Protocol (IMAP) servers, as the base language has no variables, lo
ops, or ability to shell out to external programs. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name="RFC" value="5228"/>
<format type="TXT" octets="87531" target="ftp://ftp.isi.edu/in-notes/rfc5228.txt"/>
</reference>

<reference anchor='SMTP'>

<front>
<title>Simple Mail Transfer Protocol</title>
<author initials='J.' surname='Klensin' fullname='John Klensin'>
<organization /></author>
<date year='2008' month='October' />
</front>
<seriesInfo name='RFC' value='5321' />
</reference>

      <reference anchor="LMTP">

<front>
<title abbrev="Local Mail">Local Mail Transfer Protocol</title>
<author initials="J.G." surname="Myers" fullname="John G. Myers">
<organization>Carnegie-Mellon University</organization>
<address>
<postal>
<street>5000 Forbes Ave.</street>
<street>Pittsburgh</street>
<street>15213-3890</street>
<country>PA</country></postal>
<email>jgm+@cmu.edu</email></address></author>
<date year="1996" month="October"/>
<area>Applications</area>
<keyword>mail</keyword></front>

<seriesInfo name="RFC" value="2033"/>
<format type="TXT" octets="14711" target="ftp://ftp.isi.edu/in-notes/rfc2033.txt"/>
<format type="HTML" octets="27748" target="http://xml.resource.org/public/rfc/html/rfc2033.html"/>
<format type="XML" octets="17426" target="http://xml.resource.org/public/rfc/xml/rfc2033.xml"/>
</reference>
      <reference anchor="DSN">

<front>
<title>An Extensible Message Format for Delivery Status Notifications</title>
<author initials="K." surname="Moore" fullname="K. Moore">
<organization/></author>
<author initials="G." surname="Vaudreuil" fullname="G. Vaudreuil">
<organization/></author>
<date year="2003" month="January"/>
<abstract>
<t>This memo defines a Multipurpose Internet Mail Extensions (MIME) content-type that may be used by a message transfer agent 
(MTA) or electronic mail gateway to report the result of an attempt to deliver a message to one or more recipients.  This cont
ent-type is intended as a machine-processable replacement for the various types of delivery status notifications currently use
d in Internet electronic mail.  Because many messages are sent between the Internet and other messaging systems (such as X.400
 or the so-called "Local Area Network (LAN)-based" systems), the Delivery Status Notification (DSN) protocol is designed to be
 useful in a multi-protocol messaging environment.  To this end, the protocol described in this memo provides for the carriage
 of "foreign" addresses and error codes, in addition to those normally used in Internet mail.  Additional attributes may also 
be defined to support "tunneling" of foreign notifications through Internet mail. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name="RFC" value="3464"/>
<format type="TXT" octets="83060" target="ftp://ftp.isi.edu/in-notes/rfc3464.txt"/>
</reference>
      <reference anchor="MDN">

<front>
<title>Message Disposition Notification</title>
<author initials="T." surname="Hansen" fullname="T. Hansen">
<organization/></author>
<author initials="G." surname="Vaudreuil" fullname="G. Vaudreuil">
<organization/></author>
<date year="2004" month="May"/>
<abstract>
<t>This memo defines a MIME content-type that may be used by a mail user agent (MUA) or electronic mail gateway to report the 
disposition of a message after it has been successfully delivered to a recipient.  This content-type is intended to be machine
-processable.  Additional message headers are also defined to permit Message Disposition Notifications (MDNs) to be requested 
by the sender of a message.  The purpose is to extend Internet Mail to support functionality often found in other messaging sy
stems, such as X.400 and the proprietary "LAN-based" systems, and often referred to as "read receipts," "acknowledgements", or
 "receipt notifications." The intention is to do this while respecting privacy concerns, which have often been expressed when 
such functions have been discussed in the past.  Because many messages are sent between the Internet and other messaging syste
ms (such as X.400 or the proprietary "LAN-based" systems), the MDN protocol is designed to be useful in a multi-protocol messa
ging environment.  To this end, the protocol described in this memo provides for the carriage of "foreign" addresses, in addit
ion to those normally used in Internet Mail.  Additional attributes may also be defined to support "tunneling" of foreign noti
fications through Internet Mail. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name="RFC" value="3798"/>
<format type="TXT" octets="64049" target="ftp://ftp.isi.edu/in-notes/rfc3798.txt"/>
</reference>
      <reference anchor="REPORT">

<front>
<title>The Multipart/Report Content Type for the Reporting of Mail System Administrative Messages</title>
<author initials="G." surname="Vaudreuil" fullname="G. Vaudreuil">
<organization/></author>
<date year="2003" month="January"/>
<abstract>
<t>The Multipart/Report Multipurpose Internet Mail Extensions (MIME) content-type is a general "family" or "container" type fo
r electronic mail reports of any kind.  Although this memo defines only the use of the Multipart/Report content-type with resp
ect to delivery status reports, mail processing programs will benefit if a single content-type is used to for all kinds of rep
orts.  This document is part of a four document set describing the delivery status report service.  This collection includes t
he Simple Mail Transfer Protocol (SMTP) extensions to request delivery status reports, a MIME content for the reporting of del
ivery reports, an enumeration of extended status codes, and a multipart container for the delivery report, the original messag
e, and a human-friendly summary of the failure. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name="RFC" value="3462"/>
<format type="TXT" octets="12186" target="ftp://ftp.isi.edu/in-notes/rfc3462.txt"/>
</reference>
      <reference anchor="ENHANCED-CODES">

<front>
<title abbrev="SMTP Enhanced Error Codes">SMTP Service Extension for Returning Enhanced Error Codes</title>
<author initials="N." surname="Freed" fullname="Ned Freed">
<organization>Innosoft International, Inc.</organization>
<address>
<postal>
<street>1050 East Garvey Avenue South</street>
<street>West Covina</street>
<street>CA 91790</street>
<country>USA</country></postal>
<phone>+1 818 919 3600           fax: +1 818 919 3614</phone>
<email>ned@innosoft.com</email></address></author>
<date year="1996" month="October"/>
<area>Applications</area>
<keyword>SMTP</keyword>
<keyword>point-to-point protocol</keyword>
<keyword>simple mail transfer protocol</keyword></front>

<seriesInfo name="RFC" value="2034"/>
<format type="TXT" octets="10460" target="ftp://ftp.isi.edu/in-notes/rfc2034.txt"/>
<format type="HTML" octets="21966" target="http://xml.resource.org/public/rfc/html/rfc2034.html"/>
<format type="XML" octets="10728" target="http://xml.resource.org/public/rfc/xml/rfc2034.xml"/>
</reference>
      <reference anchor="UTF-8">

<front>
<title>UTF-8, a transformation format of ISO 10646</title>
<author initials="F." surname="Yergeau" fullname="F. Yergeau">
<organization/></author>
<date year="2003" month="November"/>
<abstract>
<t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world'
s writing systems.  The originally proposed encodings of the UCS, however, were not compatible with many current applications 
and protocols, and this has led to the development of UTF-8, the object of this memo.  UTF-8 has the characteristic of preserv
ing the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII value
s but are transparent to other values.  This memo obsoletes and replaces RFC 2279.</t></abstract></front>

<seriesInfo name="STD" value="63"/>
<seriesInfo name="RFC" value="3629"/>
<format type="TXT" octets="33856" target="ftp://ftp.isi.edu/in-notes/rfc3629.txt"/>
</reference>
      <reference anchor="VACATION">

<front>
<title>Sieve Email Filtering: Vacation Extension</title>
<author initials="T." surname="Showalter" fullname="T. Showalter">
<organization/></author>
<author initials="N." surname="Freed" fullname="N. Freed">
<organization/></author>
<date year="2008" month="January"/>
<abstract>
<t>This document describes an extension to the Sieve email filtering language for an autoresponder similar to that of the Unix
 "vacation" command for replying to messages.  Various safety features are included to prevent problems such as message loops.
 [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name="RFC" value="5230"/>
<format type="TXT" octets="29822" target="ftp://ftp.isi.edu/in-notes/rfc5230.txt"/>
</reference>
    </references>

    <references title="Informative References">
      <reference anchor="Joe-DoS" target="http://www.techzoom.net/papers/mail_non_delivery_notice_attacks_2004.pdf">
        <front>
          <title>Mail Non-Delivery Notice Attacks</title>
          <author initials="S" surname="Frei" fullname="Stefan Frei"><organization/></author>
          <author initials="I" surname="Silvestri" fullname="Ivo Silvestri"><organization/></author>
          <author initials="G" surname="Ollman" fullname="Gunter Ollman"><organization/></author>
          <date day="5" month="April" year="2004"/>
          <abstract><t>http://www.techzoom.net/paper-mailbomb.asp:
          http://www.techzoom.net/papers/mail_non_delivery_notice_attacks_2004.pdf</t></abstract>
        </front>
        <format type="PDF" target="http://www.techzoom.net/papers/mail_non_delivery_notice_attacks_2004.pdf"/>
      </reference>
      <reference anchor="RFC3028">

<front>
<title>Sieve: A Mail Filtering Language</title>
<author initials="T." surname="Showalter" fullname="T. Showalter">
<organization/></author>
<date year="2001" month="January"/>
<abstract>
<t>This document describes a language for filtering e-mail messages at time of final delivery. [STANDARDS TRACK]</t></abstract>
</front>

<seriesInfo name="RFC" value="3028"/>
<format type="TXT" octets="73582" target="ftp://ftp.isi.edu/in-notes/rfc3028.txt"/>
</reference>
      <reference anchor="RFC3834">

<front>
<title>Recommendations for Automatic Responses to Electronic Mail</title>
<author initials="K." surname="Moore" fullname="K. Moore">
<organization/></author>
<date year="2004" month="August"/>
<abstract>
<t>This memo makes recommendations for software that automatically responds to incoming electronic mail messages, including "o
ut of the office" or "vacation" response generators, mail filtering software, email-based information services, and other auto
matic responders.  The purpose of these recommendations is to discourage undesirable behavior which is caused or aggravated by
 such software, to encourage uniform behavior (where appropriate) among automatic mail responders, and to clear up some source
s of confusion among implementors of automatic email responders. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name="RFC" value="3834"/>
<format type="TXT" octets="53119" target="ftp://ftp.isi.edu/in-notes/rfc3834.txt"/>
</reference>
      <reference anchor="SPAMTEST">

<front>
<title>Sieve Email Filtering: Spamtest and Virustest Extensions</title>
<author initials="C." surname="Daboo" fullname="C. Daboo">
<organization/></author>
<date year="2008" month="January"/>
<abstract>
<t>The Sieve email filtering language "spamtest", "spamtestplus", and "virustest" extensions permit users to use simple, porta
ble commands for spam and virus tests on email messages.  Each extension provides a new test using matches against numeric "sc
ores".  It is the responsibility of the underlying Sieve implementation to do the actual checks that result in proper input to
 the tests. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name="RFC" value="5235"/>
<format type="TXT" octets="25957" target="ftp://ftp.isi.edu/in-notes/rfc5235.txt"/>
</reference>
      <reference anchor="UTF8-RESP">
<front>
<title>SMTP Language Extension</title>

<author initials="A" surname="Melnikov" fullname="Alexey Melnikov">
    <organization/>
</author>

<date month="June" day="19" year="2007"/>

<abstract><t>The Simple Mail Transfer Protocol (RFC 2821) allows server responses to include human-readable text that in many 
cases needs to be presented to the user. This document specifies a way for a client to negotiate which language the server sho
uld use when sending human-readable text. It also extends the UTF-8 Delivery Status Notifications format to include language f
ield for the human-readable text.</t></abstract>

</front>

<seriesInfo name="Work in" value="Progress"/>
</reference>
      <reference anchor="EMAIL-ARCH">
<front>
<title>Internet Mail Architecture</title>

<author initials="D" surname="Crocker" fullname="Dave Crocker">
    <organization/>
</author>

<date month="October" day="31" year="2008"/>

<abstract><t>Over its thirty-five year history, Internet Mail has changed significantly in scale and complexity, as it has bec
ome a global infrastructure service.  These changes have been evolutionary, rather than revolutionary, reflecting a strong des
ire to preserve both its installed base and its usefulness.  To collaborate productively on this large and complex system, all
 participants must work from a common view of it and use a common language to describe its components and the interactions amo
ng them.  But the many differences in perspective currently make it difficult to know exactly what another participant means. 
 To serve as the necessary common frame of reference, this document describes the enhanced Internet Mail architecture, reflect
ing the current service.</t></abstract>

</front>

<seriesInfo name="Work in" value="Progress"/>
</reference>
    </references>


    <section anchor="acknowledgements" title="Acknowledgements">
      <t>
      Thanks to Ned Freed, Cyrus Daboo, Arnt Gulbrandsen, Kristin Hubner,
      Mark E. Mallett, Philip Guenther, Michael Haardt, and Randy Gellens
      for comments and corrections.
      </t>
      
      <t>
      The authors gratefully acknowledge the extensive work of Tim
      Showalter as the author of the RFC 3028, which originally defined
      the "reject" action.
      </t>
    </section>

    <section anchor="contributors" title="Contributors">
<figure>
<artwork>
Matthew Elvey
The Elvey Partnership, LLC
1819 Polk Street, Suite 133
San Francisco, CA  94109
USA

EMail: matthew@elvey.com


Alexey Melnikov
Isode Limited
5 Castle Business Village
36 Station Road
Hampton, Middlesex  TW12 2BX
UK

EMail: Alexey.Melnikov@isode.com
</artwork>
</figure>
   </section>
  </back>


</rfc>
