<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc strict="yes" ?>
<?rfc rfcedstyle="yes" ?>
<rfc submissionType="IETF" category="std" consensus="yes" number="6871"
     ipr="pre5378Trust200902" updates="5939" >
  <front>

    <title abbrev="SDP Media Capabilities Negotiation">Session Description Protocol (SDP) Media Capabilities
    Negotiation</title>



    <author fullname="Robert R Gilman " initials="R" surname="Gilman">
      <organization>Independent</organization>

      <address>
        <postal>
          <street>3243 W. 11th Ave. Dr.</street>

          <city>Broomfield, CO 80020</city>

          <country>USA</country>
        </postal>

        <email>bob_gilman@comcast.net</email>
      </address>
    </author>

<author fullname="Roni Even" initials="R" surname="Even">
			<organization>Huawei Technologies</organization>
			<address>
				<postal>
					<street>14 David Hamelech</street>
					<city>Tel Aviv</city>
					<country>Israel</country>
					<code>64953</code>
				</postal>
				<email>roni.even@mail01.huawei.com</email>
			</address>
		</author>


    <author fullname="Flemming Andreasen " initials="F" surname="Andreasen">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street></street>

          <city>Iselin, NJ</city>

          <country>USA</country>
        </postal>

        <email>fandreas@cisco.com</email>
      </address>
    </author>

    <date month="February" year="2013" />

    <workgroup>MMUSIC</workgroup>





    <abstract>
      <t>Session Description Protocol (SDP) capability negotiation provides a
      general framework for indicating and negotiating capabilities in SDP.
      The base framework defines only capabilities for negotiating transport
      protocols and attributes. This documents extends the framework by
      defining media capabilities that can be used to negotiate media types
      and their associated parameters.</t>

      <t>This document updates the IANA Considerations of RFC 5939.</t>

    </abstract>


  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t>"Session Description Protocol (SDP) Capability Negotiation" <xref
      target="RFC5939"></xref> provides a general framework for indicating and
      negotiating capabilities in SDP <xref target="RFC4566"></xref>. The base
      framework defines only capabilities for negotiating transport protocols
      and attributes.</t>

      <t>RFC 5939 <xref target="RFC5939"></xref> lists some of the issues
      with the current SDP capability negotiation process. An additional real-life problem is to be able to offer one media stream (e.g., audio) but list
      the capability to support another media stream (e.g., video) without
      actually offering it concurrently.</t>

      <t>In this document, we extend the framework by defining media
      capabilities that can be used to indicate and negotiate media types and
      their associated format parameters. This document also adds the ability
      to declare support for media streams, the use of which can be offered
      and negotiated later, and the ability to specify session configurations
      as combinations of media stream configurations. The definitions of new
      attributes for media capability negotiation are chosen to make the
      translation from these attributes to "conventional" SDP <xref
      target="RFC4566"></xref> media attributes as straightforward as possible
      in order to simplify implementation. This goal is intended to reduce
      processing in two ways: each proposed configuration in an offer may be
      easily translated into a conventional SDP media stream record for
      processing by the receiver and the construction of an answer based on a
      selected proposed configuration would be straightforward.</t>

      <t>This document updates RFC 5939 <xref target="RFC5939"></xref> by
      updating the IANA considerations. All other extensions defined
      in this document are considered extensions above and beyond
      RFC 5939 <xref target="RFC5939"></xref>. </t>
    </section>


    <section anchor="terms" title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in RFC 2119 <xref
      target="RFC2119"></xref> and indicate requirement levels for compliant implementations.</t>

      <t></t>
      <t>Actual Configuration: An actual configuration specifies which
      combinations of SDP session parameters and media stream components can
      be used in the current offer/answer exchange and with what parameters.
      Use of an actual configuration does not require any further negotiation
      in the offer/answer exchange. See RFC 5939 <xref target="RFC5939"></xref> for further details. </t>

      <t>Base Attributes: Conventional SDP attributes appearing in the base
      configuration of a media block.</t>

      <t>Base Configuration: The media configuration represented by a media
      block exclusive of all the capability negotiation attributes defined in
      this document, the base capability negotiation document <xref
      target="RFC5939"></xref>, or any other capability negotiation document.
      In an offer SDP, the base configuration corresponds to the actual
      configuration as defined in RFC 5939 <xref target="RFC5939"></xref>.</t>

      <t>Conventional Attribute: Any SDP attribute other than those defined
      by the series of capability negotiation specifications.</t>

      <t>Conventional SDP: An SDP record devoid of capability negotiation
      attributes.</t>

      <t>Media Format Capability: A media format, typically a media subtype such as
      PCMU, H263-1998, or T38, expressed in the form of a capability.</t>

      <t>Media Format Parameter Capability: A media format parameter
      ("a=fmtp" in conventional SDP) expressed in the form of a
      capability. The media format parameter capability is associated
      with a media format capability.</t>

      <t>Media Capability: The combined set of capabilities
      associated with expressing a media format and its relevant
      parameters (e.g., media format parameters and media specific
      parameters).</t>

      <t>Potential Configuration: A potential configuration indicates which
      combinations of capabilities can be used for the session and its
      associated media stream components. Potential configurations are not
      ready for use; however, they are offered for potential use in the current
      offer/answer exchange. They provide an alternative that may be used
      instead of the actual configuration, subject to negotiation in the
      current offer/answer exchange. See RFC 5939 <xref target="RFC5939"></xref> for
      further details.</t>

      <t>Latent Configuration: A latent configuration indicates which
      combinations of capabilities could be used in a future negotiation for
      the session and its associated media stream components. Latent
      configurations are neither ready for use nor offered for
      actual or potential use in the current offer/answer exchange. Latent
      configurations merely inform the other side of possible configurations
      supported by the entity. Those latent configurations may be used to
      guide subsequent offer/answer exchanges, but they are not offered for
      use as part of the current offer/answer exchange. </t>
    </section>

    <section anchor="sdpmedcap" title=" SDP Media Capabilities">
      <t>The SDP capability negotiation <xref target="RFC5939"></xref>
      discusses the use of any SDP <xref target="RFC4566"></xref> attribute
      (a=) under the attribute capability "acap". The limitations of using
      "acap" for "fmtp" and "rtpmap" in a potential configuration are described in
      RFC 5939 <xref target="RFC5939"></xref>; for example, they can be used only at the
      media level since they are media-level attributes. RFC 5939 <xref
      target="RFC5939"></xref> does not provide a way to exchange media-level
      capabilities prior to the actual offer of the associated media stream.
      This section provides an overview of extensions providing an SDP media
      capability negotiation solution offering more robust capabilities
      negotiation. This is followed by definitions of new SDP attributes for
      the solution and its associated updated offer/answer procedures <xref
      target="RFC3264"></xref>.</t>

      <section anchor="reqts" title="Requirements">
        <t>The capability negotiation extensions requirements considered
        herein are as follows.</t>

        <t><list style="hanging">
            <t hangText="REQ-01: ">Support the specification of alternative
            (combinations of) media formats (codecs) in a single media
            block.</t>
          </list></t>

        <t><list style="hanging">
            <t hangText="REQ-02: ">Support the specification of alternative
            media format parameters for each media format.</t>
          </list></t>

        <t><list style="hanging">
            <t hangText="REQ-03: ">Retain backward compatibility with
            conventional SDP. Ensure that each and every offered configuration
            can be easily translated into a corresponding SDP media block
            expressed with conventional SDP lines.</t>
          </list></t>

        <t><list style="hanging">
            <t hangText="REQ-04: ">Ensure that the scheme operates within the
            offer/answer model in such a way that media formats and parameters
            can be agreed upon with a single exchange.</t>
          </list></t>

        <t><list style="hanging">
            <t hangText="REQ-05: ">Provide the ability to express offers in
            such a way that the offerer can receive media as soon as the offer
            is sent. (Note that the offerer may not be able to render received
            media prior to exchange of keying material.)</t>
          </list></t>

        <t><list style="hanging">
            <t hangText="REQ-06: ">Provide the ability to offer latent media
            configurations for future negotiation.</t>
          </list></t>

        <t><list style="hanging">
            <t hangText="REQ-07: ">Provide reasonable efficiency in the
            expression of alternative media formats and/or format parameters,
            especially in those cases in which many combinations of options
            are offered.</t>
          </list></t>

        <t><list style="hanging">
            <t hangText="REQ-08: ">Retain the extensibility of the base
            capability negotiation mechanism.</t>
          </list></t>

        <t><list style="hanging">
            <t hangText="REQ-09: ">Provide the ability to specify acceptable
            combinations of media streams and media formats. For example,
            offer a PCMU audio stream with an H264 video stream or a G729
            audio stream with an H263 video stream. This ability would give
            the offerer a means to limit processing requirements for
            simultaneous streams. This would also permit an offer to include
            the choice of an audio/T38 stream or an image/T38 stream, but not
            both.</t>
          </list></t>

        <t>Other possible extensions have been discussed, but have not been
        treated in this document. They may be considered in the future. Three
        such extensions are:</t>

        <t><list style="hanging">
            <t hangText="FUT-01: ">Provide the ability to mix, or change,
            media types within a single media block. Conventional SDP does not
            support this capability explicitly; the usual technique is to
            define a media subtype that represents the actual format within
            the nominal media type. For example, T.38 FAX as an alternative to
            audio/PCMU within an audio stream is identified as audio/T38; a
            separate FAX stream would use image/T38.</t>
          </list></t>

        <t><list style="hanging">
            <t hangText="FUT-02: ">Provide the ability to support multiple
            transport protocols within an active media stream without
            reconfiguration. This is not explicitly supported by conventional
            SDP.</t>
          </list></t>

        <t><list style="hanging">
            <t hangText="FUT-03: ">Provide capability negotiation attributes
            for all media-level SDP line types in the same manner as already
            done for the attribute type, with the exception of the media line
            type itself. The media line type is handled in a special way to
            permit compact expression of media coding/format options. The line
            types are bandwidth ("b="), information ("i="), connection data
            ("c="), and, possibly, the deprecated encryption key ("k=").</t>
          </list></t>
      </section>

      <section anchor="overview" title="Solution Overview">
        <t>The solution consists of new capability attributes corresponding to
        conventional SDP line types, new parameters for the "pcfg", "acfg", and
        the new "lcfg" attributes extending the base attributes from RFC 5939 <xref
        target="RFC5939"></xref>, and a use of the "pcfg" attribute to return
        capability information in the SDP answer.</t>

        <t>Several new attributes are defined in a manner that can be related
        to the capabilities specified in a media line, and its corresponding
        "rtpmap" and "fmtp" attributes.</t>

        <t><list style="symbols">
            <t>A new attribute ("a=rmcap") defines RTP-based media
            format capabilities in the form of a media subtype (e.g., "PCMU"), and its
            encoding parameters (e.g., "/8000/2"). Each resulting media format
            type/subtype capability has an associated handle called a media
            capability number. The encoding parameters are as specified for
            the "rtpmap" attribute defined in SDP <xref target="RFC4566"></xref>,
            without the payload type number part.</t>

            <t>A new attribute ("a=omcap") defines other (non-RTP-based)
            media format capabilities in the form of a media subtype only (e.g.,
            "T38"). Each resulting media format type/subtype capability has an
            associated handle called a media capability number.</t>

            <t>A new attribute ("a=mfcap") specifies media format parameters
            associated with one or more media format capabilities. The "mfcap"
            attribute is used primarily to associate the media format parameters
normally carried in the "fmtp" attribute. Note that
            media format parameters can be used with RTP and non-RTP-based
            media formats.</t>

            <t>A new attribute ("a=mscap") specifies media parameters
            associated with one or more media format capabilities. The "mscap"
            attribute is used to associate capabilities with attributes other
            than "fmtp" or "rtpmap", for example, the "rtcp-fb" attribute defined in
            RFC 4585 <xref target="RFC4585"></xref>.</t>

            <t>A new attribute ("a=lcfg") specifies latent media stream
            configurations when no corresponding media line ("m=") is offered.
            An example is the offer of latent configurations for video even
            though no video is currently offered. If the peer indicates
            support for one or more offered latent configurations, the
            corresponding media stream(s) may be added via a new offer/answer
            exchange.</t>

            <t>A new attribute ("a=sescap") is used to specify an acceptable
            combination of simultaneous media streams and their configurations
            as a list of potential and/or latent configurations.</t>
          </list></t>

        <t>New parameters are defined for the potential configuration ("pcfg"),
        latent configuration ("lcfg"), and accepted configuration ("acfg")
        attributes to associate the new attributes with particular
        configurations.</t>

        <t><list style="symbols">
            <t>A new parameter type ("m=") is added to the potential
            configuration ("a=pcfg:") attribute and the actual configuration
            ("a=acfg:") attribute defined in RFC 5939 <xref target="RFC5939"></xref>
            and to the new latent configuration ("a=lcfg:") attribute. This
            permits specification of media capabilities (including their
            associated parameters) and combinations thereof for the
            configuration. For example, the "a=pcfg:" line might specify PCMU
            and telephone events <xref target="RFC4733"></xref> or G.729B and
            telephone events as acceptable configurations. The "a=acfg:" line
            in the answer would specify the configuration chosen.</t>

            <t>A new parameter type ("pt=") is added to the potential
            configuration, actual configuration, and latent configuration
            attributes. This parameter associates RTP payload type numbers
            with the referenced RTP-based media format capabilities and is
            appropriate only when the transport protocol uses RTP.</t>

            <t>A new parameter type ("mt=") is used to specify the media type
            for latent configurations.</t>
          </list></t>

        <t>Special processing rules are defined for capability attribute
        arguments in order to reduce the need to replicate
        essentially identical attribute lines for the base configuration and
        potential configurations.</t>

        <t><list style="symbols">
            <t>A substitution rule is defined for any capability attribute to
            permit the replacement of the (escaped) media capability number
            with the media format identifier (e.g., the payload type number in
            audio/video profiles).</t>

            <t>Replacement rules are defined for the conventional SDP
            equivalents of the "mfcap" and "mscap" capability attributes. This
            reduces the necessity to use the deletion qualifier in the "a=pcfg"
            parameter in order to ignore "rtpmap", "fmtp", and certain other
            attributes in the base configuration.</t>

            <t>An argument concatenation rule is defined for "mfcap" attributes
            that refer to the same media capability number. This makes it
            convenient to combine format options concisely by associating
            multiple mfcap lines with multiple media format capabilities.</t>
          </list></t>

        <t>This document extends the base protocol extensions to the
        offer/answer model that allow for capabilities and potential
        configurations to be included in an offer. Media capabilities
        constitute capabilities that can be used in potential and latent
        configurations. Whereas potential configurations constitute
        alternative offers that may be accepted by the answerer instead of the
        actual configuration(s) included in the "m=" line(s) and associated
        parameters, latent configurations merely inform the other side of
        possible configurations supported by the entity. Those latent
        configurations may be used to guide subsequent offer/answer exchanges,
        but they are not part of the current offer/answer exchange.</t>

        <t>The mechanism is illustrated by the offer/answer exchange below,
        where Alice sends an offer to Bob:</t>

        <figure>
          <artwork><![CDATA[
					   
                Alice                            Bob
               | (1) Offer (SRTP and RTP)         |
               |--------------------------------->|
               |                                  |
               | (2) Answer (RTP)                 |
               |<---------------------------------|
               |                                  |
		]]></artwork>
        </figure>

        <t>Alice's offer includes RTP and Secure Real-time Transport Protocol (SRTP) as alternatives. RTP is the
        default, but SRTP is the preferred one (long lines are folded to fit
        the margins):</t>

        <t><list hangIndent="10">
            <t>v=0<vspace blankLines="0" /> o=- 25678 753849 IN IP4
            192.0.2.1<vspace blankLines="0" /> s=<vspace
            blankLines="0" /> c=IN IP4 192.0.2.1<vspace blankLines="0"
            /> t=0 0<vspace blankLines="0" /> a=creq:med-v0<vspace
            blankLines="0" /> m=audio 3456 RTP/AVP 0 18<vspace
            blankLines="0" /> a=tcap:1 RTP/SAVP RTP/AVP<vspace
            blankLines="0" /> a=rtpmap:0 PCMU/8000/1<vspace
            blankLines="0" /> a=rtpmap:18 G729/8000/1<vspace
            blankLines="0" /> a=fmtp:18 annexb=yes<vspace
            blankLines="0" /> a=rmcap:1,4 G729/8000/1<vspace
            blankLines="0" /> a=rmcap:2 PCMU/8000/1<vspace
            blankLines="0" /> a=rmcap:5 telephone-event/8000<vspace
            blankLines="0" /> a=mfcap:1 annexb=no<vspace
            blankLines="0" /> a=mfcap:4 annexb=yes<vspace
            blankLines="0" /> a=mfcap:5 0-11<vspace blankLines="0" />
            a=acap:1 crypto:1 AES_CM_128_HMAC_SHA1_32 \ <vspace
            blankLines="0" />
            inline:NzB4d1BINUAvLEw6UzF3WSJ+PSdFcGdUJShpX1Zj|2^20|1:32<vspace
            blankLines="0" /> a=pcfg:1 m=4,5|1,5 t=1 a=1
            pt=1:100,4:101,5:102<vspace blankLines="0" /> a=pcfg:2 m=2
            t=1 a=1 pt=2:103<vspace blankLines="0" /> a=pcfg:3 m=4 t=2
            pt=4:18</t>
          </list></t>

        <t>The required base and extensions are provided by the "a=creq"
        attribute defined in RFC 5939 <xref target="RFC5939"></xref>, with the option
        tag "med-v0", which indicates that the extension framework defined
        here must be supported. The base-level capability negotiation support
        ("cap-v0" <xref target="RFC5939"></xref>) is implied since it is
        required for the extensions.</t>

        <t>The "m=" line indicates that Alice is offering to use plain RTP
        with PCMU or G.729B.&nbsp; The media line implicitly defines the default
        transport protocol (RTP/AVP in this case) and the default actual
        configuration.</t>



        <t>The "a=tcap:1" line, specified in the SDP capability negotiation base
        protocol <xref target="RFC5939"></xref>, defines transport protocol
        capabilities, in this case Secure RTP (SAVP profile) as the first
        option and RTP (AVP profile) as the second option.</t>

        <t>The "a=rmcap:1,4" line defines two G.729 RTP-based media format
        capabilities, numbered 1 and 4, and their encoding rate. The
        capabilities are of media type "audio" and subtype G729. Note that the
        media subtype is explicitly specified here, rather than RTP payload
        type numbers. This permits the assignment of payload type numbers in
        the media stream configuration specification. In this example, two
        G.729 subtype capabilities are defined. This permits the declaration
        of two sets of formatting parameters for G.729.</t>

        <t>The "a=rmcap:2" line defines a G.711 mu-law capability, numbered
        2.</t>

        <t>The "a=rmcap:5" line defines an audio telephone-event capability,
        numbered 5.</t>

        <t>The "a=mfcap:1" line specifies the "fmtp" formatting parameters for
        capability 1 (offerer will not accept G.729 Annex B packets).</t>

        <t>The "a=mfcap:4" line specifies the "fmtp" formatting parameters for
        capability 4 (offerer will accept G.729 Annex B packets).</t>

        <t>The "a=mfcap:5" line specifies the "fmtp" formatting parameters for
        capability 5 (the dual-tone multi-frequency (DTMF) touchtones 0-9,*,#).</t>


        <t>The "a=acap:1" line specified in the base protocol provides the
        "crypto" attribute that provides the keying material for SRTP using
        SDP security descriptions.</t>

        <t>The "a=pcfg:" attributes provide the potential
        configurations included in the offer by reference to the media
        capabilities, transport capabilities, attribute capabilities,
        and specified payload type number mappings. Three explicit
        alternatives are provided; the lowest-numbered one is the
        preferred one. The "a=pcfg:1 ..." line specifies media
        capabilities 4 and 5, i.e., G.729B and DTMF (including their
        associated media format parameters), or media capability 1 and
        5, i.e., G.729 and DTMF (including their associated media format
        parameters). Furthermore, it specifies transport protocol
        capability 1 (i.e., the RTP/SAVP profile - secure RTP), and the
        attribute capability 1, i.e., the "crypto" attribute
        provided. Last, it specifies a payload type number mapping
        for (RTP-based) media capabilities 1, 4, and 5, thereby
        permitting the offerer to distinguish between encrypted media
        and unencrypted media received prior to receipt of the
        answer.</t>

        <t>Use of unique payload type numbers in alternative configurations is
        not required; codecs such as Adaptive Multi-Rate Wideband (AMR-WB) <xref target="RFC4867"></xref>
        have the potential for so many combinations of options that it may be
        impractical to define unique payload type numbers for all supported
        combinations. If unique payload type numbers cannot be specified, then
        the offerer will be obliged to wait for the SDP answer before
        rendering received media. For SRTP using Security Descriptions (SDES) inline keying <xref
        target="RFC4568"></xref>, the offerer will still need to receive the
        answer before being able to decrypt the stream.</t>

        <t>The second alternative ("a=pcfg:2 ...") specifies media capability
        2, i.e., PCMU, under the RTP/SAVP profile, with the same SRTP key
        material.</t>

        <t>The third alternative ("a=pcfg:3 ...") offers G.729B unsecured; its
        only purpose in this example is to show a preference for G.729B over
        PCMU.</t>

        <t>Per RFC 5939 <xref target="RFC5939"></xref>, the media line, with any
        qualifying attributes such as "fmtp" or "rtpmap", is itself considered a
        valid configuration (the current actual configuration); it has the
        lowest preference (per RFC 5939 <xref target="RFC5939"></xref>).</t>

        <t>Bob receives the SDP offer from Alice. Bob supports G.729B, PCMU,
        and telephone events over RTP, but not SRTP, hence he accepts the
        potential configuration 3 for RTP provided by Alice. Bob generates the
        following answer:</t>

        <t><list hangIndent="10">
            <t>v=0<vspace blankLines="0" /> o=- 24351 621814 IN IP4
            192.0.2.2<vspace blankLines="0" /> s=<vspace blankLines="0" />
            c=IN IP4 192.0.2.2<vspace blankLines="0" /> t=0 0<vspace
            blankLines="0" /> a=csup:med-v0<vspace blankLines="0" /> m=audio
            4567 RTP/AVP 18<vspace blankLines="0" /> a=rtpmap:18
            G729/8000<vspace blankLines="0" /> a=fmtp:18 annexb=yes<vspace
            blankLines="0" /> a=acfg:3 m=4 t=2 pt=4:18</t>
          </list></t>

        <t>Bob includes the "a=csup" and "a=acfg" attributes in the answer to
        inform Alice that he can support the med-v0 level of capability
        negotiations. Note that in this particular example, the answerer
        supported the capability extensions defined here; however, had he not,
        he would simply have processed the offer based on the offered PCMU and
        G.729 codecs under the RTP/AVP profile only. Consequently, the answer
        would have omitted the "a=csup" attribute line and chosen one or both
        of the PCMU and G.729 codecs instead. The answer carries the accepted
        configuration in the "m=" line along with corresponding "rtpmap" and/or
        "fmtp" parameters, as appropriate.</t>

        <t>Note that per the base protocol, after the above, Alice MAY
        generate a new offer with an actual configuration ("m=" line, etc.)
        corresponding to the actual configuration referenced in Bob's answer
        (not shown here).</t>
      </section>

      <section anchor="newattrs" title="New Capability Attributes">
        <t>In this section, we present the new attributes associated with
        indicating the media capabilities for use by the SDP capability
        negotiation. The approach taken is to keep things similar to the
        existing media capabilities defined by the existing media descriptions
        ("m=" lines) and the associated "rtpmap" and "fmtp" attributes. We use
        media subtypes and "media capability numbers" to link the relevant
        media capability parameters. This permits the capabilities to be
        defined at the session level and be used for multiple streams, if
        desired. For RTP-based media formats, payload types are then specified
        at the media level (see <xref target="ptparm"></xref>).</t>

        <t>A media capability merely indicates possible support for the media
        type and media format(s) and parameters in question. In order to actually use a media
        capability in an offer/answer exchange, it MUST be referenced in a
        potential configuration.</t>

        <t>Media capabilities, i.e., the attributes associated with expressing
        media capability formats, parameters, etc., can be provided at
        the session level and/or the media level. Media capabilities
        provided at the session level may be referenced in any "pcfg" or
        "lcfg" attribute at the media level (consistent with the media
        type), whereas media capabilities provided at the media level
        may be referenced only by the "pcfg" or "lcfg" attribute within
        that media stream.  In either case, the scope of the
        &lt;med-cap-num&gt; is the entire session description. This
        enables each media capability to be uniquely referenced across
        the entire session description (e.g., in a potential
        configuration).

</t>

        <section anchor="mcap" title="The Media Format Capability Attributes">
          <t>Media subtypes can be expressed as media format capabilities by
          use of the "a=rmcap" and "a=omcap" attributes. The "a=rmcap"
          attribute MUST be used for RTP-based media, whereas the "a=omcap"
          attribute MUST be used for non-RTP-based (other) media formats. The
          two attributes are defined as follows:</t>

          <figure>
            <artwork><![CDATA[
a=rmcap:<media-cap-num-list> <encoding-name>/<clock-rate>
                             [/<encoding-parms>]

a=omcap:<media-cap-num-list> <format-name>
                                       ]]></artwork>
          </figure>

          <t>where &lt;media-cap-num-list&gt; is a (list of) media
          capability number(s) used to number a media format
          capability, the &lt;encoding name&gt; or &lt;format-name&gt;
          is the media subtype, e.g., H263-1998, PCMU, or T38,
          &lt;clock rate&gt; is the encoding rate, and &lt;encoding
          parms&gt; are the media encoding parameters for the media
          subtype. All media format capabilities in the list are
          assigned to the same media type/subtype. Each occurrence of
          the "rmcap" and "omcap" attribute MUST use unique values in
          their &lt;media-cap-num-list&gt;; the media capability
          numbers are shared between the two attributes and the
          numbers MUST be unique across the entire SDP session. In
          short, the "rmcap" and "omcap" attributes define media format
          capabilities and associate them with a media capability
          number in the same manner as the "rtpmap" attribute defines
          them and associates them with a payload type
          number. Additionally, the attributes allow multiple
          capability numbers to be defined for the media format in
          question by specifying a range of media capability
          numbers. This permits the media format to be associated with
          different media parameters in different configurations.
          When a range of capability numbers is specified, the first
          (leftmost) capability number MUST be strictly smaller than
          the second (rightmost), i.e., the range increases and covers
          at least two numbers. </t>

          <t>In ABNF <xref target="RFC5234"></xref>, we have:</t>

          <figure>
            <artwork><![CDATA[
media-capability-line = rtp-mcap / non-rtp-mcap

rtp-mcap           = "a=rmcap:" media-cap-num-list
                        1*WSP encoding-name "/" clock-rate
                        ["/" encoding-parms]
non-rtp-mcap       = "a=omcap:" media-cap-num-list 1*WSP format-name
media-cap-num-list = media-cap-num-element
                     *("," media-cap-num-element)
media-cap-num-element = media-cap-num
                             / media-cap-num-range
media-cap-num-range = media-cap-num "-" media-cap-num
media-cap-num      = NonZeroDigit *9(DIGIT)
encoding-name      = token ;defined in RFC 4566
clock-rate         = NonZeroDigit *9(DIGIT)
encoding-parms     = token
format-name        = token ;defined in RFC 4566
NonZeroDigit       = %x31-39    ; 1-9
	                               ]]></artwork>
          </figure>

          <t>The encoding-name, clock-rate, and encoding-params are as defined
          to appear in an "rtpmap" attribute for each media type/subtype. Thus,
          it is easy to convert an "rmcap" attribute line into one or more
          "rtpmap" attribute lines, once a payload type number is assigned to a
          media-cap-num (see <xref target="lcfg"></xref>).</t>

          <t>The format-name is a media format description for non-RTP-based
          media as defined for the &lt;fmt&gt; part of the media description
          ("m=" line) in SDP <xref target="RFC4566"></xref>. In simple terms, it
          is the name of the media format, e.g., "t38". This form can also be
          used in cases such as Binary Floor Control Protocol (BFCP) <xref target="RFC4585"></xref> where the
          fmt list in the "m=" line is effectively ignored (BFCP uses "*").</t>


          <t>The "rmcap" and "omcap" attributes can be provided at the
          session level and/or the media level. There can be more than
          one "rmcap" and more than one "omcap" attribute at both the
          session and media levels (i.e., more than one of each at the
          session level and more than one of each in each media
          description).  Media capability numbers cannot include
          leading zeroes, and each media-cap-num MUST be unique within
          the entire SDP record; it is used to identify that media
          capability in potential, latent, and actual configurations,
          and in other attribute lines as explained below. Note that
          the media-cap-num values are shared between the "rmcap" and
          "omcap" attributes; hence, the uniqueness requirement
          applies to the union of them. When the media capabilities
          are used in a potential, latent, or actual configuration, the
          media formats referred by those configurations apply at the
          media level, irrespective of whether the media capabilities
          themselves were specified at the session or media level. In
          other words, the media capability applies to the specific
          media description associated with the configuration that
          invokes it.</t>

          <t>For example:</t>

          <t><list hangIndent="5">
              <t>v=0<vspace blankLines="0" />o=- 24351 621814 IN IP4
              192.0.2.2<vspace blankLines="0" />s=<vspace
              blankLines="0" />c=IN IP4 192.0.2.2<vspace blankLines="0" />t=0
              0<vspace blankLines="0" />a=rmcap:1 L16/8000/1<vspace
              blankLines="0" />a=rmcap:2 L16/16000/2<vspace
              blankLines="0" />a=rmcap:3 H263-1998/90000<vspace
              blankLines="0" />a=omcap:4 example<vspace
              blankLines="0" />m=audio 54320 RTP/AVP 0<vspace
              blankLines="0" />a=pcfg:1 m=1|2, pt=1:99,2:98<vspace
              blankLines="0" />m=video 66544 RTP/AVP 100<vspace
              blankLines="0" />a=rtpmap:100 H264/90000<vspace
              blankLines="0" />a=pcfg:10 m=3 pt=3:101<vspace
              blankLines="0" />a=tcap:1 TCP<vspace blankLines="0" />a=pcfg:11
              m=4 t=1</t>
            </list></t>
        </section>

        <section anchor="mfcap"
                 title="The Media Format Parameter Capability Attribute">
          <t>This attribute is used to associate media format specific
          parameters with one or more media format capabilities. The
          form of the attribute is</t>

          <t><list hangIndent="5">
              <t>a=mfcap:&lt;media-caps&gt; &lt;list of parameters&gt;</t>
            </list></t>

          <t>where &lt;media-caps&gt; permits the list of parameters to be
          associated with one or more media format capabilities and the format
          parameters are specific to the type of media format. The mfcap lines
          map to a single traditional SDP "fmtp" attribute line (one for each
          entry in &lt;media-caps&gt;) of the form</t>

          <t><list hangIndent="5">
              <t>a=fmtp:&lt;fmt&gt; &lt;list of parameters&gt;</t>
            </list></t>

          <t>where &lt;fmt&gt; is the media format parameter defined in RFC
          4566 <xref target="RFC4566"></xref>, as appropriate for the
          particular media stream. The "mfcap" attribute MUST be used to encode
          attributes for media capabilities, which would conventionally appear
          in an "fmtp" attribute. The existing "acap" attribute MUST NOT be used
          to encode "fmtp" attributes.</t>

          <t>The "mfcap" attribute adheres to SDP <xref target="RFC4566"></xref>
          attribute production rules with</t>

          <figure>
            <artwork><![CDATA[
   media-format-parameter-capability =
          "a=mfcap:" media-cap-num-list 1*WSP fmt-specific-param-list
   fmt-specific-param-list = text ; defined in RFC4566
	                               ]]></artwork>
          </figure>

          <t>Note that media format parameters can be used with RTP-based and
          non-RTP-based media formats.</t>

          <section anchor="mfcapcat"
                   title="Media Format Parameter Concatenation Rule">
            <t>The appearance of media subtypes with a large number of
            formatting options (e.g., AMR-WB <xref target="RFC4867"></xref>),
            coupled with the restriction that only a single "fmtp" attribute can
            appear per media format, suggests that it is useful to create a
            combining rule for "mfcap" parameters that are associated with the
            same media capability number. Therefore, different mfcap lines MAY
            include the same media-cap-num in their media-cap-num-list. When a
            particular media capability is selected for processing, the
            parameters from each mfcap line that references the particular
            capability number in its media-cap-num-list are concatenated
            together via ";", in the order the "mfcap" attributes appear in the
            SDP record, to form the equivalent of a single "fmtp" attribute
            line. This permits one to define a separate mfcap line for a
            single parameter and value that is to be applied to each media
            capability designated in the media-cap-num-list. This provides a
            compact method to specify multiple combinations of format
            parameters when using codecs with multiple format options. Note
            that order-dependent parameters SHOULD be placed in a single mfcap
            line to avoid possible problems with line rearrangement by a
            middlebox.</t>

            <t>Format parameters are not parsed by SDP; their content is
            specific to the media type/subtype. When format parameters for a
            specific media capability are combined from multiple "a=mfcap" lines
            that reference that media capability, the format-specific
            parameters are concatenated together and separated by ";" for
            construction of the corresponding format attribute ("a=fmtp"). The
            resulting format attribute will look something like the following
            (without line breaks):</t>

            <t><figure>
                <artwork><![CDATA[
     a=fmtp:<fmt> <fmt-specific-param-list1>;
                  <fmt-specific-param-list2>;
                  ...
                         ]]></artwork>
              </figure></t>

            <t>where &lt;fmt&gt; depends on the transport protocol in the
            manner defined in RFC 4566 <xref target="RFC4566" />. SDP cannot assess the legality of the
            resulting parameter list in the "a=fmtp" line; the user must take
            care to ensure that legal parameter lists are generated.</t>

            <t>The "mfcap" attribute can be provided at the session level and
            the media level. There can be more than one "mfcap" attribute at the
            session or media level. The unique media-cap-num is used to
            associate the parameters with a media capability.</t>

            <t>As a simple example, a G.729 capability is, by default,
            considered to support comfort noise as defined by Annex B.
            Capabilities for G.729 with and without comfort noise support may
            thus be defined by:</t>

            <t><list hangIndent="5">
                <t>a=rmcap:1,2 G729/8000<vspace blankLines="0" /> a=mfcap:2
                annexb:no</t>
              </list></t>

            <t>Media capability 1 supports G.729 with Annex B, whereas
            media capability 2 supports G.729 without Annex B.</t>

            <t>Example for H.263 video:</t>

            <t><list hangIndent="5">
                <t>a=rmcap:1 H263-1998/90000<vspace blankLines="0" />
                a=rmcap:2 H263-2000/90000<vspace blankLines="0" /> a=mfcap:1
                CIF=4;QCIF=2;F=1;K=1<vspace blankLines="0" /> a=mfcap:2
                profile=2;level=2.2</t>
              </list></t>

            <t>Finally, for six format combinations of the Adaptive Multi-Rate
            codec:</t>

            <t><list hangIndent="5">
                <t>a=rmcap:1-3 AMR/8000/1<vspace blankLines="0" /> a=rmcap:4-6
                AMR-WB/16000/1<vspace blankLines="0" /> a=mfcap:1,2,3,4
                mode-change-capability=1<vspace blankLines="0" /> a=mfcap:5,6
                mode-change-capability=2<vspace blankLines="0" />
                a=mfcap:1,2,3,5 max-red=220<vspace blankLines="0" />
                a=mfcap:3,4,5,6 octet-align=1<vspace blankLines="0" />
                a=mfcap:1,3,5 mode-set=0,2,4,7<vspace blankLines="0" />
                a=mfcap:2,4,6 mode-set=0,3,5,6</t>
              </list></t>

            <t>So that AMR codec #1, when specified in a "pcfg" attribute within
            an audio stream block (and assigned payload type number 98) as
            in:</t>

            <t><list hangIndent="5">
                <t>a=pcfg:1 m=1 pt=1:98</t>
              </list></t>

            <t>is essentially equivalent to the following:</t>

            <t><list hangIndent="10">
                <t>m=audio 49170 RTP/AVP 98<vspace blankLines="0" />
                a=rtpmap:98 AMR/8000/1<vspace blankLines="0" /> a=fmtp:98
                mode-change-capability=1; \ <vspace blankLines="0" />
                max-red=220; mode-set=0,2,4,7</t>
              </list></t>

            <t>and AMR codec #4 with payload type number 99, depicted by the
            potential configuration:</t>

            <t><list hangIndent="10">
                <t>a=pcfg:4 m=4, pt=4:99</t>
              </list></t>

            <t>is equivalent to the following:</t>

            <t><list hangIndent="10">
                <t>m=audio 49170 RTP/AVP 99<vspace blankLines="0" />
                a=rtpmap:99 AMR-WB/16000/1<vspace blankLines="0" /> a=fmtp:99
                mode-change-capability=1; octet-align=1; \ <vspace
                blankLines="0" /> mode-set=0,3,5,6</t>
              </list></t>

            <t>and so on for the other four combinations. SDP could thus
            convert the media capabilities specifications into one or more
            alternative media stream specifications, one of which can be
            chosen for the answer.</t>
          </section>
        </section>

        <section anchor="mscap"
                 title="The Media-Specific Capability Attribute">
          <t>Attributes and parameters associated with a media format are
          typically specified using the "rtpmap" and "fmtp" attributes in SDP,
          and the similar "rmcap" and "mfcap" attributes in SDP media
          capabilities. Some SDP extensions define other attributes that need
          to be associated with media formats, for example, the "rtcp-fb"
          attribute defined in RFC 4585 <xref target="RFC4585"></xref>. Such
          media-specific attributes, beyond the "rtpmap" and "fmtp" attributes,
          may be associated with media capability numbers via a new
          media-specific attribute, "mscap", of the following form:</t>

          <figure>
            <artwork><![CDATA[
      a=mscap:<media caps star> <att field> <att value>
]]></artwork>
          </figure>

          <t>where &lt;media caps star&gt; is a (list of) media
          capability number(s), &lt;att field&gt; is the attribute
          name, and &lt;att value&gt; is the value field for the named
          attribute. Note that the media capability numbers refer to
          media format capabilities specified elsewhere in the SDP
          ("rmcap" and/or "omcap"). If a range of capability numbers
          is specified, the first (leftmost) capability number MUST be
          strictly smaller than the second (rightmost). The media
          capability numbers may include a wildcard ("*"), which will
          be used instead of any payload type mappings in the
          resulting SDP (see, e.g., RFC 4585 <xref
          target="RFC4585"></xref> and the example below). In ABNF, we
          have:</t>

          <figure>
            <artwork><![CDATA[
       media-specific-capability = "a=mscap:"
                                    media-caps-star
                                    1*WSP att-field ; from RFC 4566
                                    1*WSP att-value ; from RFC 4566
       media-caps-star	         =  media-cap-star-element
                                      *("," media-cap-star-element)
       media-cap-star-element    = (media-cap-num [wildcard]) 
                                 / (media-cap-num-range [wildcard])
       wildcard                  = "*"

                                    ]]></artwork>
          </figure>

          <t>Given an association between a media capability and a payload
          type number as specified by the "pt=" parameters in a "pcfg" attribute
          line, a mscap line may be translated easily into a conventional SDP
          attribute line of the form:</t>

          <t><list hangIndent="5">
              <t>a=&lt;att field&gt;":"&lt;fmt&gt; &lt;att value&gt; ;
              &lt;fmt&gt; defined in SDP <xref target="RFC4566"></xref></t>
            </list></t>

          <t>A resulting attribute that is not a legal SDP attribute, as
          specified by RFC 4566, MUST be ignored by the receiver.</t>

          <t>If a media capability number (or range) contains a wildcard
          character at the end, any payload type mapping specified for that
          media-specific capability (or range of capabilities) will use the
          wildcard character in the resulting SDP instead of the payload type
          specified in the payload type mapping ("pt" parameter) in the
          configuration attribute.</t>

          <t>A single mscap line may refer to multiple media
          capabilities by use of a capability number range; this is equivalent to
          multiple mscap lines, each with the same attribute values
          (but different media capability numbers), one line per media
          capability.</t>

          <t>Multiple mscap lines may refer to the same media capability, but,
          unlike the "mfcap" attribute, no concatenation operation is defined.
          Hence, multiple mscap lines applied to the same media capability are
          equivalent to multiple lines of the specified attribute in a
          conventional media record.</t>

          <t>Here is an example with the "rtcp-fb" attribute, modified from an
          example in RFC 5104 <xref target="RFC5104"></xref> (with the session level
          and audio media omitted). If the offer contains a media block like
          the following (note the wildcard character),</t>

          <t><list hangIndent="10">
              <t>m=video 51372 RTP/AVP 98<vspace blankLines="0" /> a=rtpmap:98
              H263-1998/90000<vspace blankLines="0" /> a=tcap:1
              RTP/AVPF<vspace blankLines="0" /> a=rmcap:1
              H263-1998/90000<vspace blankLines="0" /> a=mscap:1 rtcp-fb ccm
              tstr<vspace blankLines="0" /> a=mscap:1 rtcp-fb ccm fir<vspace
              blankLines="0" /> a=mscap:1* rtcp-fb ccm tmmbr smaxpr=120<vspace
              blankLines="0" /> a=pcfg:1 t=1 m=1 pt=1:98</t>
            </list></t>

          <t>and if the proposed configuration is chosen, then the equivalent
          media block would look like the following</t>

          <t><list hangIndent="10">
              <t>m=video 51372 RTP/AVPF 98<vspace blankLines="0" />
              a=rtpmap:98 H263-1998/90000<vspace blankLines="0" />
              a=rtcp-fb:98 ccm tstr<vspace blankLines="0" /> a=rtcp-fb:98 ccm
              fir<vspace blankLines="0" /> a=rtcp-fb:* ccm tmmbr
              smaxpr=120</t>
            </list></t>
        </section>

        <section anchor="configparms" title="New Configuration Parameters">
          <t>Along with the new attributes for media capabilities, new
          extension parameters are defined for use in the potential
          configuration, the actual configuration, and/or the new latent
          configuration defined in <xref target="lcfg"></xref>.</t>

          <section anchor="mparm"
                   title="The Media Configuration Parameter (m=)">
            <t>The media configuration parameter is used to specify the media
            format(s) and related parameters for a potential, actual, or
            latent configuration. Adhering to the ABNF for
            extension-config-list in RFC 5939 <xref target="RFC5939"></xref> with</t>

            <figure>
              <artwork><![CDATA[
          ext-cap-name = "m"
          ext-cap-list = media-cap-num-list
                         [*(BAR media-cap-num-list)]
                                          ]]></artwork>
            </figure>

            <t>we have</t>

            <figure>
              <artwork><![CDATA[
           media-config-list = ["+"] "m=" media-cap-num-list
                                          *(BAR media-cap-num-list)
                                ;BAR is defined in RFC 5939
                                ;media-cap-num-list is defined above
                                           ]]></artwork>
            </figure>

            <t>Alternative media configurations are separated by a vertical
            bar ("|"). The alternatives are ordered by preference,
            most-preferred first. When media capabilities are not included in
            a potential configuration at the media level, the media type and
            media format from the associated "m=" line will be used. The use
            of the plus sign ("+") is described in RFC 5939.</t>
          </section>

          <section anchor="ptparm"
                   title="The Payload Type Number Mapping Parameter (pt=)">
            <t>The payload type number mapping parameter is used to
            specify the payload type number to be associated with each
            RTP-based media format in a potential, actual, or latent
            configuration. We define the payload type number mapping
            parameter, payload-number-config-list, in accordance with
            the extension-config-list format defined in RFC 5939 <xref
            target="RFC5939"></xref>. In ABNF:</t>

            <figure>
              <artwork><![CDATA[
payload-number-config-list = ["+"] "pt=" media-map-list
media-map-list      = media-map *("," media-map)
media-map           = media-cap-num ":" payload-type-number 
                         ; media-cap-num is defined in Section 3.3.1
payload-type-number = NonZeroDigit *2(DIGIT) ; RTP payload
                                             ; type number                               
                                 ]]></artwork>
            </figure>

            <t>The example in <xref target="ptsubs"></xref> shows how the
            parameters from the rmcap line are mapped to payload type numbers
            from the "pcfg" "pt" parameter. The use of the plus sign ("+") is
            described in RFC 5939 <xref target="RFC5939"></xref>.</t>

            <t>A latent configuration represents a future capability; hence,
            the "pt=" parameter is not directly meaningful in the "lcfg" attribute
            because no actual media session is being offered or accepted.  It
            is permitted in order to tie any payload type number parameters
            within attributes to the proper media format. A primary example is
            the case of format parameters for the Redundant Audio Data (RED) <xref target="RFC2198" />
            payload, which are payload type numbers. Specific payload type
            numbers used in a latent configuration MAY be interpreted as
            suggestions to be used in any future offer based on the latent
            configuration, but they are not binding; the offerer and/or
            answerer may use any payload type numbers each deems appropriate.
            The use of explicit payload type numbers for latent configurations
            can be avoided by use of the parameter substitution rule of <xref
            target="ptsubs"></xref>. Future extensions are also permitted. Note that leading zeroes are not permitted.</t>
          </section>

          <section anchor="mtparm" title="The Media Type Parameter">
            <t>When a latent configuration is specified (always at the media
            level), indicating the ability to support an additional media
            stream, it is necessary to specify the media type (audio, video,
            etc.) as well as the format and transport type. The media type
            parameter is defined in ABNF as</t>

            <figure>
              <artwork><![CDATA[
         media-type = ["+"] "mt=" media; media defined in RFC 4566
                                         ]]></artwork>
            </figure>

            <t>At present, the media-type parameter is used only in the latent
            configuration attribute, and the use of the "+" prefix to specify
            that the entire attribute line is to be ignored if the mt=
            parameter is not understood is unnecessary. However, if the
            media-type parameter is later added to an existing capability
            attribute such as "pcfg", then the "+" would be useful. The media
            format(s) and transport type(s) are specified using the media
            configuration parameter ("+m=") defined above, and the transport
            parameter ("t=") defined in RFC 5939 <xref target="RFC5939"></xref>,
            respectively.</t>
          </section>
        </section>

        <section anchor="lcfg" title="The Latent Configuration Attribute">
          <t>One of the goals of this work is to permit the exchange of
          supportable media configurations in addition to those offered or
          accepted for immediate use. Such configurations are referred to as
          "latent configurations". For example, a party may offer to establish
          a session with an audio stream, and, at the same time, announce its
          ability to support a video stream as part of the same session. The
          offerer can supply its video capabilities by offering one or more
          latent video configurations along with the media stream for audio;
          the responding party may indicate its ability and willingness to
          support such a video session by returning a corresponding latent
          configuration.</t>

          <t>Latent configurations returned in SDP answers MUST match offered
          latent configurations (or parameter subsets thereof). Therefore, it
          is appropriate for the offering party to announce most, if not all,
          of its capabilities in the initial offer. This choice has been made
          in order to keep the size of the answer more compact by not
          requiring acap, rmcap, tcap, etc. lines in the answer.</t>

          <t>Latent configurations may be announced by use of the latent
          configuration attribute, which is defined in a manner very similar
          to the potential configuration attribute. The latent configuration
          attribute combines the properties of a media line and a potential
          configuration. A latent configuration MUST include a media type (mt=) and a transport protocol configuration parameter
	  since the latent configuration is independent
          of any media line present. In most cases, the media configuration
          (m=) parameter needs to be present as well (see <xref
          target="examples"></xref> for examples). The "lcfg" attribute is a
          media-level attribute.</t>

          <t><list>
              <t>The "lcfg" attribute is defined as a media-level attribute
              since it specifies a possible future media stream. However, the
              "lcfg" attribute is not necessarily related to the media
              description within which it is provided. Session capability attributes
              ("a=sescap") may be used to indicate supported media stream configurations.</t>
            </list></t>

          <t>Each media line in an SDP description represents an offered
          simultaneous media stream, whereas each latent configuration
          represents an additional stream that may be negotiated in a future
          offer/answer exchange. Session capability attributes may be used to
          determine whether a latent configuration may be used to form an
          offer for an additional simultaneous stream or to reconfigure an
          existing stream in a subsequent offer/answer exchange.</t>

          <t>The latent configuration attribute is of the form:</t>

          <figure>
            <artwork><![CDATA[
     a=lcfg:<config-number> <latent-cfg-list>
                                    ]]></artwork>
          </figure>

          <t>which adheres to the SDP <xref target="RFC4566"></xref> "attribute"
          production with att-field and att-value defined as:</t>

          <figure>
            <artwork><![CDATA[
     att-field  = "lcfg"
     att-value  = config-number 1*WSP lcfg-cfg-list
     config-number = NonZeroDigit *9(DIGIT)  ; DIGIT defined in RFC5234
     lcfg-cfg-list = media-type 1*WSP pot-cfg-list
                                 ; as defined in RFC5939
                                 ; and extended herein
                                     ]]></artwork>
          </figure>

          <t>The media-type (mt=) parameter identifies the media type (audio,
          video, etc.) to be associated with the latent media stream, and it MUST
          be present. The pot-cfg-list MUST contain a
          transport-protocol-config-list (t=) parameter and a
          media-config-list (m=) parameter. The pot-cfg-list MUST NOT contain
          more than one instance of each type of parameter list. As specified
          in RFC 5939 <xref target="RFC5939"></xref>, the use of the "+" prefix with a
          parameter indicates that the entire configuration MUST be ignored if
          the parameter is not understood; otherwise, the parameter itself may
          be ignored.</t>

          <t>Media stream payload numbers are not assigned by a latent
          configuration. Assignment will take place if and when the
          corresponding stream is actually offered via an "m=" line in a later
          exchange. The payload-number-config-list is included as a parameter
          to the "lcfg" attribute in case it is necessary to tie payload numbers
          in attribute capabilities to specific media capabilities.</t>

          <t>If an "lcfg" attribute invokes an "acap" attribute that appears at
          the session level, then that attribute will be expected to appear at
          the session level of a subsequent offer when and if a corresponding
          media stream is offered. Otherwise, "acap" attributes that appear at
          the media level represent media-level attributes. Note, however,
          that "rmcap", omcap, "mfcap", "mscap", and "tcap" attributes may appear at
          the session level because they always result in media-level
          attributes or "m=" line parameters.</t>

          <t>The configuration numbers for latent configurations do
          not imply a preference; the offerer will imply a preference
          when actually offering potential configurations derived from
          latent configurations negotiated earlier. Note, however, that
          the offerer of latent configurations MAY specify preferences
          for combinations of potential and latent configurations by
          use of the "sescap" attribute defined in <xref
          target="sescap"></xref>. For example, if an SDP offer
          contains, say, an audio stream with "pcfg:1", and two latent
          video configurations, "lcfg:2" and "lcfg:3", then a session
          with one audio stream and one video stream could be
          specified by including "a=sescap:1 1,2|3". One audio stream
          and two video streams could be specified by including
          "a=sescap:2 1,2,3" in the offer. In order to permit
          combinations of latent and potential configurations in
          session capabilities, latent configuration numbers MUST be
          different from those used for potential configurations. This
          restriction is especially important if the offerer does not
          require cmed-v0 capability and the recipient of the offer
          doesn't support it. If the "lcfg" attribute is not recognized,
          the capability attributes intended to be associated with it
          may be confused with those associated with a potential
          configuration of some other media stream. Note also that
          leading zeroes are not permitted in configuration numbers.</t>

          <t>If a cryptographic attribute, such as the SDES
          "a=crypto:" attribute <xref target="RFC4568"></xref>, is
          referenced by a latent configuration through an "acap"
          attribute, any keying material required in the conventional
          attribute, such as the SDES key/salt string, MUST be
          included in order to satisfy formatting rules for the
          attribute. Since the keying material will be visible but not
          actually used at this stage (since it's a latent
          configuration), the value(s) of the keying material MUST
          NOT be a real value used for real exchange of media, and the
          receiver of the "lcfg" attribute MUST ignore the value(s).</t>
        </section>

        <section anchor="pcfg"
                 title="Enhanced Potential Configuration Attribute">
          <t>The present work requires new extensions (parameters) for the
          "pcfg" attribute defined in the SDP capability negotiation base protocol <xref
          target="RFC5939"></xref>. The parameters and their definitions are
          "borrowed" from the definitions provided for the latent
          configuration attribute in <xref target="lcfg"></xref>. The expanded
          ABNF definition of the "pcfg" attribute is</t>

          <t><figure>
              <artwork><![CDATA[     a=pcfg: <config-number> [<pot-cfg-list>]
]]></artwork>
            </figure></t>

          <t>where</t>

          <t><figure>
              <artwork><![CDATA[     config-number = 1*DIGIT ;defined in [RFC5234]
     pot-cfg-list  = pot-config *(1*WSP pot-config)
     pot-config    =  attribute-config-list / ;def in [RFC5939]
          transport-protocol-config-list / ;defined in [RFC5939]
          extension-config-list / ;[RFC5939]
          media-config-list / ; Section 3.3.4.1
          payload-number-config-list ; Section 3.3.4.2]]></artwork>
            </figure></t>

          <t>Except for the extension-config-list, the pot-cfg-list MUST NOT
          contain more than one instance of each parameter list.</t>

          <section anchor="answercaps"
                   title="Returning Capabilities in the Answer">
            <t>Potential and/or latent configuration attributes may be
            returned within an answer SDP to indicate the ability of the
            answerer to support alternative configurations of the
            corresponding stream(s). For example, an offer may include
            multiple potential configurations for a media stream and/or latent
            configurations for additional streams. The corresponding answer
            will indicate (via an "acfg" attribute) the configuration accepted
            and used to construct the base configuration for each active media
            stream in the reply, but the reply MAY also contain potential
            and/or latent configuration attributes, with parameters, to
            indicate which other offered configurations would be acceptable.
            This information is useful if it becomes desirable to reconfigure
            a media stream, e.g., to reduce resource consumption.</t>

            <t>When potential and/or latent configurations are returned in an
            answer, all numbering MUST refer to the configuration and
            capability attribute numbering of the offer. The offered
            capability attributes need not be returned in the answer. The
            answer MAY include additional capability attributes and/or
            configurations (with distinct numbering). The parameter values of
            any returned "pcfg" or "lcfg" attributes MUST be a subset of those
            included in the offered configurations and/or those added by the
            answerer; values MAY be omitted only if they were indicated as
            alternative sets, or optional, in the original offer. The
            parameter set indicated in the returned "acfg" attribute need not be
            repeated in a returned "pcfg" attribute. The answerer MAY return
            more than one "pcfg" attribute with the same configuration number if
            it is necessary to describe selected combinations of optional or
            alternative parameters.</t>

            <t>Similarly, one or more session capability attributes ("a=sescap")
            MAY be returned to indicate which of the offered session
            capabilities is/are supportable by the answerer (see <xref
            target="sescap"></xref>).</t>

            <t>Note that, although the answerer MAY return capabilities beyond
            those included by the offerer, these capabilities MUST NOT be used
            to form any base level media description in the answer. For this
            reason, it is advisable for the offerer to include most, if not
            all, potential and latent configurations it can support in the
            initial offer, unless the size of the resulting SDP is a concern.
            Either party MAY later announce additional capabilities by
            renegotiating the session in a second offer/answer exchange.</t>
          </section>

          <section anchor="ptmaping" title="Payload Type Number Mapping">
            <t>When media format capabilities defined in "rmcap" attributes are used in
            potential configuration lines, the transport protocol uses RTP and
            it is necessary to assign payload type numbers. In some cases, it
            is desirable to assign different payload type numbers to the same
            media format capability when used in different potential configurations.
            One example is when configurations for AVP and SAVP are offered:
            the offerer would like the answerer to use different payload type
            numbers for encrypted and unencrypted media, so the
            offerer can decide whether or not to render early media that
            arrives before the answer is received. </t>

            <t><list>
                <t>For example, if use of AVP was selected by the answerer,
                then media received by the offerer is not encrypted; hence, it
                can be played out prior to receiving the answer. Conversely,
                if SAVP was selected, cryptographic parameters and keying
                material present in the answer may be needed to decrypt
                received media. If the offer configuration indicated that AVP
                media uses one set of payload types and SAVP a different set,
                then the offerer will know whether media received prior to the
                answer is encrypted or not by simply looking at the RTP
                payload type number in the received packet.</t>
              </list></t>

            <t>This association of distinct payload type number(s) with
            different transport protocols requires a separate pcfg line for
            each protocol. Clearly, this technique cannot be used if the
            number of potential configurations exceeds the number of possible
            payload type numbers.</t>
          </section>

          <section anchor="mediaattrs"
                   title="Processing of Media-Format-Related Conventional Attributes for Potential Configurations">
            <t>When media capabilities negotiation is employed,
            SDP records are likely to contain conventional attributes such as
            "rtpmap", "fmtp", and other media-format-related lines, as well as
            capability attributes such as "rmcap", omcap, "mfcap", and "mscap" that
            map into those conventional attributes when invoked by a potential
            configuration. In such cases, it MAY be appropriate to employ the
            delete-attributes option <xref target="RFC5939"></xref> in the
            attribute configuration list parameter in order to avoid the
            generation of conflicting "fmtp" attributes for a particular
            configuration. Any media-specific attributes in the media block
            that refer to media formats not used by the potential
            configuration MUST be ignored.</t>

            <t>For example:</t>

            <t><list hangIndent="10">
                <t>v=0<vspace blankLines="0" /> o=- 25678 753849 IN IP4
                192.0.2.1<vspace blankLines="0" /> s=<vspace blankLines="0" />
                c=IN IP4 192.0.2.1<vspace blankLines="0" /> t=0 0<vspace
                blankLines="0" /> a=creq:med-v0<vspace blankLines="0" />
                m=audio 3456 RTP/AVP 0 18 100<vspace blankLines="0" />
                a=rtpmap:100 telephone-event<vspace blankLines="0" />
                a=fmtp:100 0-11<vspace blankLines="0" /> a=rmcap:1
                PCMU/8000<vspace blankLines="0" /> a=rmcap:2 G729/8000<vspace
                blankLines="0" /> a=rmcap:3 telephone-event/8000<vspace
                blankLines="0" /> a=mfcap:3 0-15<vspace blankLines="0" />
                a=pcfg:1 m=2,3|1,3 a=-m pt=1:0,2:18,3:100<vspace
                blankLines="0" /> a=pcfg:2</t>
              </list></t>

            <t>In this example, PCMU is media capability 1, G729 is media
            capability 2, and telephone-event is media capability 3. The
            a=pcfg:1 line specifies that the preferred configuration is G.729
            with extended DTMF events, second is G.711 mu-law with extended
            DTMF events, and the base media-level attributes are to be
            deleted. Intermixing of G.729, G.711, and "commercial" DTMF events
            is least preferred (the base configuration provided by the "m="
            line, which is, by default, the least preferred configuration).
            The "rtpmap" and "fmtp" attributes of the base configuration are
            replaced by the "rmcap" and "mfcap" attributes when invoked by the
            proposed configuration.</t>

            <t>If the preferred configuration is selected, the SDP answer will
            look like the following</t>

            <t><list hangIndent="10">
                <t>v=0<vspace blankLines="0" /> o=- 25678 753849 IN IP4
                192.0.2.1<vspace blankLines="0" /> s=<vspace blankLines="0" />
                c=IN IP4 192.0.2.1<vspace blankLines="0" /> t=0 0<vspace
                blankLines="0" /> a=csup:med-v0<vspace blankLines="0" />
                m=audio 3456 RTP/AVP 18 100<vspace blankLines="0" />
                a=rtpmap:100 telephone-event/8000<vspace blankLines="0" />
                a=fmtp:100 0-15<vspace blankLines="0" /> a=acfg:1 m=2,3
                pt=1:0,2:18,3:100</t>
              </list></t>
          </section>
        </section>

        <section anchor="ptsubs"
                 title="Substitution of Media Payload Type Numbers in Capability Attribute Parameters">
          <t>In some cases, for example, when an RFC 2198 <xref
          target="RFC2198"></xref> redundancy audio subtype (RED) capability
          is defined in an "mfcap" attribute, the parameters to an attribute may
          contain payload type numbers. Two options are available for
          specifying such payload type numbers. They may be expressed
          explicitly, in which case they are bound to actual payload types by
          means of the payload type number parameter (pt=) in the appropriate
          potential or latent configuration. For example, the following SDP
          fragment defines a potential configuration with redundant G.711
          mu-law</t>

          <t><list hangIndent="10">
              <t>m=audio 45678 RTP/AVP 0<vspace blankLines="0" /> a=rtpmap:0
              PCMU/8000<vspace blankLines="0" /> a=rmcap:1 PCMU/8000<vspace
              blankLines="0" /> a=rmcap:2 RED/8000<vspace blankLines="0" />
              a=mfcap:2 0/0<vspace blankLines="0" /> a=pcfg:1 m=2,1
              pt=2:98,1:0</t>
            </list></t>

          <t>The potential configuration is then equivalent to</t>

          <t><list hangIndent="10">
              <t>m=audio 45678 RTP/AVP 98 0<vspace blankLines="0" />
              a=rtpmap:0 PCMU/8000<vspace blankLines="0" /> a=rtpmap:98
              RED/8000<vspace blankLines="0" /> a=fmtp:98 0/0</t>
            </list></t>

          <t>A more general mechanism is provided via the parameter
          substitution rule. When an "mfcap", "mscap", or "acap" attribute is
          processed, its arguments will be scanned for a payload type number
          escape sequence of the following form (in ABNF):</t>

          <t><list hangIndent="10">
              <t>ptn-esc = "%m=" media-cap-num "%" ; defined in Section 3.3.1</t>
            </list></t>

          <t>If the sequence is found, the sequence is replaced by the payload
          type number assigned to the media capability number, as specified by
          the "pt=" parameter in the selected potential configuration; only
          actual payload type numbers are supported -- wildcards are excluded.
          The sequence "%%" (null digit string) is replaced by a single
          percent sign and processing continues with the next character, if
          any.</t>

          <t>For example, the above offer sequence could have been written
          as</t>

          <t><list hangIndent="10">
              <t>m=audio 45678 RTP/AVP 0<vspace blankLines="0" /> a=rtpmap:0
              PCMU/8000<vspace blankLines="0" /> a=rmcap:1 PCMU/8000<vspace
              blankLines="0" /> a=rmcap:2 RED/8000<vspace blankLines="0" />
              a=mfcap:2 %m=1%/%m=1%<vspace blankLines="0" /> a=pcfg:1 m=2,1
              pt=2:98,1:0<vspace blankLines="0" /></t>
            </list></t>

          <t>and the equivalent SDP is the same as above.</t>
        </section>

        <section anchor="sescap" title="The Session Capability Attribute">
          <t>Potential and latent configurations enable offerers and answerers
          to express a wide range of alternative configurations for current
          and future negotiation. However, in practice, it may not be possible
          to support all combinations of these configurations. </t>

          <t>The session capability attribute provides a means for the offerer
          and/or the answerer to specify combinations of specific media stream
          configurations that it is willing and able to support. Each session
          capability in an offer or answer MAY be expressed as a list of
          required potential configurations, and MAY include a list of
          optional potential and/or latent configurations.</t>

          <t>The choices of session capabilities may be based on processing
          load, total bandwidth, or any other criteria of importance to the
          communicating parties. If the answerer supports media capabilities
          negotiation, and session configurations are offered, it MUST accept
          one of the offered configurations, or it MUST refuse the session.
          Therefore, if the offer includes any session capabilities, it SHOULD
          include all the session capabilities the offerer is willing to
          support.</t>

          <t>The session capability attribute is a session-level attribute
          described by</t>

          <figure>
            <artwork><![CDATA[
	"a=sescap:" <session num> <list of configs>
		                        ]]></artwork>
          </figure>

          <t>which corresponds to the standard value attribute definition
          with</t>

          <figure>
            <artwork><![CDATA[
        att-field        = "sescap"
        att-value        = session-num 1*WSP list-of-configs
                           [1*WSP optional-configs]
        session-num      = NonZeroDigit *9(DIGIT)  ; DIGIT defined 
                                                   ; in RFC5234
        list-of-configs  = alt-config *("," alt-config)
        optional-configs = "[" list-of-configs "]"
        alt-config       = config-number *("|" config-number)
		                         ]]></artwork>
          </figure>

          <t>The session-num identifies the session: a lower-number session is
          preferred over a higher-number session, and leading zeroes are not permitted. Each alt-config list
          specifies alternative media configurations within the session;
          preference is based on config-num as specified in RFC 5939 <xref
          target="RFC5939"></xref>. Note that the session preference order,
          when present, takes precedence over the individual media stream
          configuration preference order.</t>

          <t>Use of session capability attributes requires that configuration
          numbers assigned to potential and latent configurations MUST be
          unique across the entire session; RFC 5939 <xref target="RFC5939"></xref>
          requires only that "pcfg" configuration numbers be unique within a
          media description. Also, leading zeroes are not permitted.</t>

          <t>As an example, consider an endpoint that is capable of supporting
          an audio stream with either one H.264 video stream or two H.263
          video streams with a floor control stream. In the latter case, the
          second video stream is optional. The SDP offer might look like the
          following (offering audio, an H.263 video streams, BFCP and another
          optional H.263 video stream) -- the empty lines are added for
          readability only (not part of valid SDP):</t>

          <t><list hangIndent="10">
              <t>v=0<vspace blankLines="0" /> o=- 25678 753849 IN IP4
              192.0.2.1<vspace blankLines="0" /> s=<vspace blankLines="0" />
              c=IN IP4 192.0.2.1<vspace blankLines="0" /> t=0 0<vspace
              blankLines="0" /> a=creq:med-v0<vspace blankLines="0" />
              a=sescap:2 1,2,5,[3]<vspace blankLines="0" /> a=sescap:1
              1,4<vspace blankLines="0" /> <vspace blankLines="1" /> m=audio
              54322 RTP/AVP 0<vspace blankLines="0" /> a=rtpmap:0
              PCMU/8000<vspace blankLines="0" /> a=pcfg:1<vspace
              blankLines="0" /> <vspace blankLines="1" /> m=video 22344
              RTP/AVP 102<vspace blankLines="0" /> a=rtpmap:102
              H263-1998/90000<vspace blankLines="0" /> a=fmtp:102
              CIF=4;QCIF=2;F=1;K=1<vspace blankLines="0" /> i=main video
              stream<vspace blankLines="0" /> a=label:11<vspace
              blankLines="0" /> a=pcfg:2<vspace blankLines="0" /> a=rmcap:1
              H264/90000<vspace blankLines="0" /> a=mfcap:1
              profile-level-id=42A01E; packetization-mode=2<vspace
              blankLines="0" /> a=acap:1 label:13<vspace blankLines="0" />
              a=pcfg:4 m=1 a=1 pt=1:104<vspace blankLines="0" /> <vspace
              blankLines="1" /> m=video 33444 RTP/AVP 103<vspace
              blankLines="0" /> a=rtpmap:103 H263-1998/90000<vspace
              blankLines="0" /> a=fmtp:103 CIF=4;QCIF=2;F=1;K=1<vspace
              blankLines="0" /> i=secondary video (slides)<vspace
              blankLines="0" /> a=label:12<vspace blankLines="0" />
              a=pcfg:3<vspace blankLines="0" /> <vspace blankLines="1" />
              m=application 33002 TCP/BFCP *<vspace blankLines="0" />
              a=setup:passive<vspace blankLines="0" /> a=connection:new<vspace
              blankLines="0" /> a=floorid:1 m-stream:11 12<vspace
              blankLines="0" /> a=floor-control:s-only<vspace
              blankLines="0" /> a=confid:4321<vspace blankLines="0" />
              a=userid:1234<vspace blankLines="0" /> a=pcfg:5</t>
            </list></t>

          <t>If the answerer understands MediaCapNeg, but cannot support the
          Binary Floor Control Protocol, then it would respond with (invalid
          empty lines in SDP included again for readability):</t>

          <t><list hangIndent="10">
              <t>v=0<vspace blankLines="0" /> o=- 25678 753849 IN IP4
              192.0.2.1<vspace blankLines="0" /> s=<vspace blankLines="0" />
              c=IN IP4 192.0.2.22<vspace blankLines="0" /> t=0 0<vspace
              blankLines="0" /> a=csup:med-v0<vspace blankLines="0" />
              a=sescap:1 1,4<vspace blankLines="0" /> <vspace
              blankLines="1" /> m=audio 23456 RTP/AVP 0<vspace
              blankLines="0" /> a=rtpmap:0 PCMU/8000<vspace blankLines="0" />
              a=acfg:1<vspace blankLines="0" /> <vspace blankLines="1" />
              m=video 41234 RTP/AVP 104<vspace blankLines="0" /> a=rtpmap:104
              H264/90000<vspace blankLines="0" /> a=fmtp:104
              profile-level-id=42A01E; packetization-mode=2<vspace
              blankLines="0" /> a=acfg:4 m=1 a=1 pt=1:104<vspace
              blankLines="0" /> <vspace blankLines="1" /> m=video 0 RTP/AVP
              103<vspace blankLines="0" /> a=acfg:3<vspace blankLines="0" />
              <vspace blankLines="1" /> m=application 0 TCP/BFCP *<vspace
              blankLines="0" /> a=acfg:5</t>
            </list></t>

          <t>An endpoint that doesn't support media capabilities negotiation,
          but does support H.263 video, would respond with one or two H.263
          video streams. In the latter case, the answerer may issue a second
          offer to reconfigure the session to one audio and one video channel
          using H.264 or H.263.</t>

          <t>Session capabilities can include latent capabilities as well.
          Here's a similar example in which the offerer wishes to initially
          establish an audio stream, and prefers to later establish two video
          streams with chair control. If the answerer doesn't understand Media
          CapNeg, or cannot support the dual video streams or flow control,
          then it may support a single H.264 video stream. Note that
          establishment of the most favored configuration will require two
          offer/answer exchanges.</t>

          <t><list hangIndent="10">
              <t>v=0<vspace blankLines="0" /> o=- 25678 753849 IN IP4
              192.0.2.1<vspace blankLines="0" /> s=<vspace blankLines="0" />
              c=IN IP4 192.0.2.1<vspace blankLines="0" /> t=0 0<vspace
              blankLines="0" /> a=creq:med-v0<vspace blankLines="0" />
              a=sescap:1 1,3,4,5<vspace blankLines="0" /> a=sescap:2
              1,2<vspace blankLines="0" /> a=sescap:3 1<vspace
              blankLines="0" /> <vspace blankLines="0" /> a=rmcap:1
              H263-1998/90000<vspace blankLines="0" /> a=mfcap:1
              CIF=4;QCIF=2;F=1;K=1<vspace blankLines="0" /> a=tcap:1 RTP/AVP
              TCP/BFCP<vspace blankLines="0" /> <vspace blankLines="0" />
              m=audio 54322 RTP/AVP 0<vspace blankLines="0" /> a=rtpmap:0
              PCMU/8000<vspace blankLines="0" /> a=pcfg:1<vspace
              blankLines="0" /> <vspace blankLines="0" /> m=video 22344
              RTP/AVP 102<vspace blankLines="0" /> a=rtpmap:102
              H264/90000<vspace blankLines="0" /> a=fmtp:102
              profile-level-id=42A01E; packetization-mode=2<vspace
              blankLines="0" /> a=label:11<vspace blankLines="0" />
              a=content:main<vspace blankLines="0" /> a=pcfg:2 <vspace
              blankLines="0" /> a=lcfg:3 mt=video t=1 m=1 a=31,32<vspace
              blankLines="0" /> a=acap:31 label:12<vspace blankLines="0" />
              a=acap:32 content:main<vspace blankLines="0" /> <vspace
              blankLines="0" /> a=lcfg:4 mt=video t=1 m=1 a=41,42<vspace
              blankLines="0" /> a=acap:41 label:13<vspace blankLines="0" />
              a=acap:42 content:slides<vspace blankLines="0" /> <vspace
              blankLines="0" /> a=lcfg:5 mt=application m=51 t=51<vspace
              blankLines="0" /> a=tcap:51 TCP/BFCP<vspace blankLines="0" />
              a=omcap:51 * <vspace blankLines="0" /> a=acap:51
              setup:passive<vspace blankLines="0" /> a=acap:52
              connection:new<vspace blankLines="0" /> a=acap:53 floorid:1
              m-stream:12 13<vspace blankLines="0" /> a=acap:54
              floor-control:s-only<vspace blankLines="0" /> a=acap:55
              confid:4321<vspace blankLines="0" /> a=acap:56
              userid:1234<vspace blankLines="0" /></t>
            </list></t>

          <t>In this example, the default offer, as seen by endpoints that do
          not understand capabilities negotiation, proposes a PCMU audio
          stream and an H.264 video stream. Note that the offered lcfg lines
          for the video streams don't carry "pt=" parameters because they're not
          needed (payload type numbers will be assigned in the offer/answer
          exchange that establishes the streams). Note also that the three
          "rmcap", "mfcap", and "tcap" attributes used by "lcfg:3" and "lcfg:4" are
          included at the session level so they may be referenced by both
          latent configurations. As per <xref target="newattrs"></xref>, the
          media attributes generated from the "rmcap", "mfcap", and "tcap"
          attributes are always media-level attributes. If the answerer
          supports Media CapNeg, and supports the most desired configuration,
          it would return the following SDP:</t>

          <t><list hangIndent="10">
              <t>v=0<vspace blankLines="0" /> o=- 25678 753849 IN IP4
              192.0.2.1<vspace blankLines="0" /> s=<vspace blankLines="0" />
              c=IN IP4 192.0.2.22<vspace blankLines="0" /> t=0 0<vspace
              blankLines="0" /> a=csup:med-v0<vspace blankLines="0" />
              a=sescap:1 1,3,4,5<vspace blankLines="0" /> a=sescap:2
              1,2<vspace blankLines="0" /> a=sescap:3 1<vspace
              blankLines="0" /> <vspace blankLines="0" /> m=audio 23456
              RTP/AVP 0<vspace blankLines="0" /> a=rtpmap:0 PCMU/8000<vspace
              blankLines="0" /> a=acfg:1<vspace blankLines="0" /> <vspace
              blankLines="0" /> m=video 0 RTP/AVP 102<vspace blankLines="0" />
              a=pcfg:2 <vspace blankLines="0" /> a=lcfg:3 mt=video t=1 m=1
              a=31,32<vspace blankLines="0" /> <vspace blankLines="0" />
              a=lcfg:4 mt=video t=1 m=1 a=41,42 <vspace blankLines="0" />
              <vspace blankLines="0" /> a=lcfg:5 mt=application t=2<vspace
              blankLines="0" /></t>
            </list></t>

          <t>This exchange supports immediate establishment of an audio stream
          for preliminary conversation. This exchange would presumably be
          followed at the appropriate time with a "reconfiguration"
          offer/answer exchange to add the video and chair control
          streams.</t>
        </section>
      </section>

      <section anchor="oaext" title="Offer/Answer Model Extensions">
        <t>In this section, we define extensions to the offer/answer
        model defined in RFC 3264 <xref target="RFC3264"></xref> and
        RFC 5939 <xref target="RFC5939"></xref> to allow for media
        format and associated parameter capabilities, latent
        configurations, and acceptable combinations of media stream
        configurations to be used with the SDP capability negotiation
        framework. Note that the procedures defined in this section
        extend the offer/answer procedures defined in RFC 5939 <xref target="RFC5939"></xref>
        Section 6; those procedures form a baseline set of capability
        negotiation offer/answer procedures that MUST be followed,
        subject to the extensions defined here.</t>

        <t>SDP capability negotiation <xref target="RFC5939"></xref> provides a relatively compact
        means to offer the equivalent of an ordered list of alternative
        configurations for offered media streams (as would be described by
        separate "m=" lines and associated attributes). The attributes "acap",
        "mscap", "mfcap", "omcap", and "rmcap" are designed to map somewhat straightforwardly
        into equivalent "m=" lines and conventional attributes when invoked by a
        "pcfg", "lcfg", or "acfg" attribute with appropriate parameters. The "a=pcfg:"
        lines, along with the "m=" line itself, represent offered media
        configurations. The "a=lcfg:" lines represent alternative capabilities
        for future use.</t>

        <section anchor="offergen" title="Generating the Initial Offer">
          <t>The media capabilities negotiation extensions defined in this
          document cover the following categories of features:</t>

          <t><list style="symbols">
              <t>Media format capabilities and associated parameters ("rmcap", "omcap",
              "mfcap", and "mscap" attributes)</t>

              <t>Potential configurations using those media format capabilities and
              associated parameters</t>

              <t>Latent media streams ("lcfg" attribute)</t>

              <t>Acceptable combinations of media stream configurations
              ("sescap" attribute).</t>
            </list> The high-level description of the operation is as
          follows:</t>

          <t>When an endpoint generates an initial offer and wants to use the
          functionality described in the current document, it SHOULD identify
          and define the media formats and associated parameters it can
          support via the "rmcap", "omcap", "mfcap", and "mscap" attributes. The SDP
          media line(s) ("m=") should be made up with the actual configuration
          to be used if the other party does not understand capability
          negotiations (by default, this is the least preferred
          configuration). Typically, the media line configuration will contain
          the minimum acceptable configuration from the offerer's point of
          view.</t>

          <t>Preferred configurations for each media stream are identified
          following the media line. The present offer may also include latent
          configuration ("lcfg") attributes, at the media level, describing
          media streams and/or configurations the offerer is not now offering
          but that it is willing to support in a future offer/answer
          exchange. A simple example might be the inclusion of a latent video
          configuration in an offer for an audio stream.</t>

          <t>Lastly, if the offerer wishes to impose restrictions on the
          combinations of potential configurations to be used, it will include
          session capability ("sescap") attributes indicating those.</t>

          <t>If the offerer requires the answerer to understand the media
          capability extensions, the offerer MUST include a "creq" attribute
          containing the value "med-v0". If media capability negotiation is
          required only for specific media descriptions, the "med-v0" value
          MUST be provided only in "creq" attributes within those media
          descriptions, as described in RFC 5939 <xref target="RFC5939"></xref>.</t>

          <t>Below, we provide a more detailed description of how to construct
          the offer SDP.</t>

          <section title="Offer with Media Capabilities">
            <t>For each RTP-based media format the offerer wants to include as
            a media format capability, the offer MUST include an "rmcap" attribute
            for the media format as defined in <xref target="mcap" />.</t>

            <t>For each non-RTP-based media format the offer wants to include
            as a media format capability, the offer MUST include an "omcap" attribute
            for the media format as defined in <xref target="mcap" />.</t>

            <t>Since the media capability number space is shared
            between the "rmcap" and "omcap" attributes, each media capability
            number provided (including ranges) MUST be unique in the entire
            SDP.</t>

            <t>If an "fmtp" parameter value is needed for a media format
            (whether or not it is RTP based) in a media capability, then the offer
            MUST include one or more "mfcap" parameters with the relevant "fmtp"
            parameter values for that media format as defined in <xref target="mfcap" />. When multiple "mfcap" parameters are provided for a given
            media capability, they MUST be provided in accordance with the
            concatenation rules in <xref target="mfcapcat" />.</t>

            <t>For each of the media format capabilities above, the offer MAY include
            one or more "mscap" parameters with attributes needed for those
            specific media formats as defined in <xref target="mscap" />. Such
            attributes will be instantiated at the media level; hence,
            session-level-only attributes MUST NOT be used in the "mscap"
            parameter. The "mscap" parameter MUST NOT include an "rtpmap" or
            "fmtp" attribute ("rmcap" and "mfcap" are used instead).</t>

            <t>If the offerer wants to limit the relevance (and use) of a
            media format capability or parameter to a particular media stream, the
            media format capability or parameter MUST be provided within the
            corresponding media description. Otherwise, the media format capabilities
            and parameters MUST be provided at the session level. Note,
            however, that the attribute or parameter embedded in these will
            always be instantiated at the media level.</t>

            <t><list style="empty">
                <t>This is due to those parameters being effectively
                media-level parameters. If session-level attributes are
                needed, the "acap" attribute defined in RFC 5939 <xref target="RFC5939"></xref> can be used;
                however, it does not provide for media-format-specific
                instantiation.</t>
              </list></t>

            <t>Inclusion of the above does not constitute an offer to
            use the capabilities; a potential configuration is needed
            for that. If the offerer wants to offer one or more of the
            media capabilities above, they MUST be included as part of
            a potential configuration ("pcfg") attribute as defined in
            <xref target="configparms" />. Each potential configuration MUST include a
            config-number, and each config-number MUST be unique in
            the entire SDP (note that this differs from RFC 5939 <xref
            target="RFC5939"></xref>, which only requires uniqueness
            within a media description). Also, the config-number MUST
            NOT overlap with any config-number used by a latent
            configuration in the SDP. As described in RFC 5939 <xref
            target="RFC5939"></xref>, lower config-numbers indicate a
            higher preference; the ordering still applies within a
            given media description only though.</t>

            <t>For a media capability to be included in a potential
            configuration, there MUST be an "m=" parameter in the "pcfg"
            attribute referencing the media capability number in question.
            When one or more media capabilities are included in an offered
            potential configuration ("pcfg"), they completely replace the list
            of media formats offered in the actual configuration ("m=" line).
            Any attributes included for those formats remain in the SDP though
            (e.g., "rtpmap", "fmtp", etc.). For non-RTP-based media formats, the
            format-name (from the "omcap" media capability) is simply added to
            the "m=" line as a media format (e.g., t38). For RTP-based media,
            payload type mappings MUST be provided by use of the "pt"
            parameter in the potential configuration (see <xref target="ptparm" />);
            payload type escaping may be used in "mfcap", "mscap", and "acap"
            attributes as defined in <xref target="ptsubs" />.</t>

            <t>Note that the "mt" parameter MUST NOT be used with the "pcfg"
            attribute (since it is defined for the "lcfg" attribute only); the
            media type in a potential configuration cannot be changed from
            that of the encompassing media description.</t>
          </section>

          <section title="Offer with Latent Configuration">
            <t>If the offerer wishes to offer one or more latent
            configurations for future use, the offer MUST include a latent
            configuration attribute ("lcfg") for each as defined in <xref target="pcfg" />.</t>

            <t>Each "lcfg" attribute</t>

            <t><list style="symbols">
                <t>MUST be specified at the media level</t>

                <t>MUST include a config-number that is unique in the entire
                SDP (including for any potential configuration attributes). Note
                that config-numbers in latent configurations do not indicate
                any preference order</t>

                <t>MUST include a media type ("mt")</t>

                <t>MUST reference a valid transport capability ("t")</t>
              </list></t>

            <t>Each "lcfg" attribute MAY include additional capability
            references, which may refer to capabilities anywhere in the
            session description, subject to any restrictions normally
            associated with such capabilities. For example, a media-level
            attribute capability must be present at the media level in some
            media description in the SDP. Note that this differs from the
            potential configuration attribute, which cannot validly refer to
            media-level capabilities in another media description (per
            RFC 5939 <xref target="RFC5939"></xref>, Section 3.5.1).</t>

            <t><list style="empty">
                <t>Potential configurations constitute an actual offer and
                may instantiate a referenced capability. Latent
                configurations are not actual offers; hence, they cannot
                instantiate a referenced capability.  Therefore, it is safe for
                those to refer to capabilities in another media
                description.</t>
              </list></t>
          </section>

          <section title="Offer with Configuration Combination Restrictions">
            <t>If the offerer wants to indicate restrictions or preferences
            among combinations of potential and/or latent configurations, a
            session capability ("sescap") attribute MUST be provided at the
            session level for each such combination as described in <xref target="sescap" />. Each "sescap" attribute MUST include a session-num that is
            unique in the entire SDP; the lower the session-num the more
            preferred that combination is. Furthermore, "sescap" preference
            order takes precedence over any order specified in individual "pcfg"
            attributes.</t>

            <t><list style="empty">
                <t>For example, if we have pcfg-1 and pcfg-2, and sescap-1
                references pcfg-2, whereas sescap-2 references pcfg-1, then
                pcfg-2 will be the most preferred potential configuration.
                Without the sescap, pcfg-1 would be the most preferred.</t>
              </list></t>
          </section>
        </section>

        <section anchor="answergen" title="Generating the Answer ">
          <t>When receiving an offer, the answerer MUST check the offer for
          "creq" attributes containing the value "med-v0"; answerers compliant
          with this specification will support this value in accordance with
          the procedures specified in RFC 5939 <xref target="RFC5939"></xref>.</t>

          <t>The SDP MAY contain</t>

          <t><list style="symbols">
              <t>Media format capabilities and associated parameters ("rmcap", "omcap",
              "mfcap", and "mscap" attributes)</t>

              <t>Potential configurations using those media format capabilities and
              associated parameters</t>

              <t>Latent media streams ("lcfg" attribute)</t>

              <t>Acceptable combinations of media stream configurations
              ("sescap" attribute)</t>
            </list></t>

          <t>The high-level informative description of the operation is as
          follows:</t>

          <t>When the answering party receives the offer, if it supports
          the required capability negotiation extensions, it should select the
          most-preferred configuration it can support for each media stream,
          and build its answer accordingly. The configuration selected for
          each accepted media stream is placed into the answer as a media line
          with associated parameters and attributes. If a proposed
          configuration is chosen for a given media stream, the answer must
          contain an actual configuration ("acfg") attribute for that media
          stream to indicate which offered "pcfg" attribute was used to build
          the answer. The answer should also include any potential or latent
          configurations the answerer can support, especially any
          configurations compatible with other potential or latent
          configurations received in the offer. The answerer should make note
          of those configurations it might wish to offer in the future.</t>

          <t>Below we provide a more detailed normative description of how the
          answerer processes the offer SDP and generates an answer SDP.</t>

          <section title="Processing Media Capabilities and Potential Configurations">
            <t>The answerer MUST first determine if it needs to perform media
            capability negotiation by examining the SDP for valid and
            preferred potential configuration attributes that include media
            configuration parameters (i.e., an "m" parameter in the "pcfg"
            attribute).</t>

            <t>Such a potential configuration is valid if</t>

            <t><list style="numbers">
                <t>It is valid according to the rules defined in RFC 5939 <xref target="RFC5939"></xref>.</t>

                <t>It contains a config-number that is unique in the entire
                SDP and does not overlap with any latent configuration
                config-numbers.</t>

                <t>All media format capabilities ("rmcap" or "omcap"), media
                format parameter capabilities ("mfcap"), and media-specific
                capabilities ("mscap") referenced by the potential configuration
                ("m" parameter) are valid themselves (as defined in Sections
                <xref target="mcap" format="counter"/>, <xref target="mfcap" format="counter"/>, and <xref target="mscap" format="counter"/>) and each of them is provided either
                at the session level or within this particular media
                description.</t>

                <t>All RTP-based media format capabilities ("rmcap") have a
                corresponding payload type ("pt") parameter in the potential
                configuration that results in mapping to a valid payload type
                that is unique within the resulting SDP.</t>

                <t>Any concatenation (see <xref target="mfcapcat" />) and substitution
                (see <xref target="ptsubs" />) applied to any capability ("mfcap", "mscap",
                or "acap") referenced by this potential configuration results in
                a valid SDP.</t>
              </list></t>

            <t>Note that since SDP does not interpret the value of "fmtp"
            parameters, any resulting "fmtp" parameter value will be considered
            valid.</t>

            <t>Secondly, the answerer MUST determine the order in which
            potential configurations are to be negotiated. In the absence of
            any session capability ("sescap") attributes, this simply follows
            the rules of RFC 5939 <xref target="RFC5939"></xref>, with a lower config-number within a media
            description being preferred over a higher one. If a valid "sescap"
            attribute is present, the preference order provided in the
            "sescap" attribute MUST take precedence. A "sescap" attribute is
            considered valid if</t>

            <t><list style="numbers">
                <t>It adheres to the rules provided in <xref target="sescap" />.</t>

                <t>All the configurations referenced by the "sescap" attribute
                are valid themselves (note that this can include the actual,
                potential, and latent configurations).</t>
              </list></t>

            <t>The answerer MUST now process the offer for each media stream
            based on the most preferred valid potential configuration in
            accordance with the procedures specified in RFC 5939 <xref target="RFC5939"></xref>, Section
            3.6.2, and further extended below:</t>

            <t><list style="symbols">
                <t>If one or more media format capabilities are included in
                the potential configuration, then they replace all media
                formats provided in the "m=" line for that media description.
                For non-RTP-based media formats ("omcap"), the format-name is
                added. For RTP-based media formats ("rmcap"), the payload-type
                specified in the payload-type mapping ("pt") is added and a
                corresponding "rtpmap" attribute is added to the media
                description.</t>

                <t>If one or more media format parameter capabilities are
                included in the potential configuration, then the
                corresponding "fmtp" attributes are added to the media
                description. Note that this inclusion is done indirectly via
                the media format capability.</t>

                <t>If one or more media-specific capabilities are included in
                the potential configuration, then the corresponding attributes
                are added to the media description. Note that this inclusion
                is done indirectly via the media format capability.</t>

                <t>When checking to see if the answerer supports a given
                potential configuration that includes one or more media format
                capabilities, the answerer MUST support at least one of the
                media formats offered. If he does not, the answerer MUST
                proceed to the next potential configuration based on the
                preference order that applies.</t>

                <t>If session capability ("sescap") preference ordering is
                included, then the potential configuration selection process
                MUST adhere to the ordering provided. Note that this may
                involve coordinated selection of potential configurations
                between media descriptions. The answerer MUST accept one of
                the offered sescap combinations (i.e., all the required
                potential configurations specified) or it MUST reject the
                entire session.</t>
              </list></t>

            <t>Once the answerer has selected a valid and supported offered
            potential configuration for all of the media streams (or has
            fallen back to the actual configuration plus any added session
            attributes), the answerer MUST generate a valid answer SDP as
            described in RFC 5939 <xref target="RFC5939"></xref>, Section 3.6.2, and further extended
            below:</t>

            <t><list style="symbols">
                <t>Additional answer capabilities and potential configurations
                MAY be returned in accordance with <xref target="answercaps" />. Capability
                numbers and configuration numbers for those MUST be distinct
                from the ones used in the offer SDP.</t>

                <t>Latent configuration processing and answer generation MUST
                be performed, as specified below.</t>

                <t>Session capability specification for the potential and
                latent configurations in the answer MAY be included (see
                <xref target="sescap" />).</t>
              </list></t>
          </section>

          <section title="Latent Configuration Processing">
            <t>The answerer MUST determine if it needs to perform any latent
            configuration processing by examining the SDP for valid latent
            configuration attributes ("lcfg"). An "lcfg" attribute is considered
            valid if:</t>

            <t><list style="symbols">
                <t>It adheres to the description in <xref target="lcfg" />.</t>

                <t>It includes a config-number that is unique in the entire
                SDP and does not overlap with any potential configuration
                config-number.</t>

                <t>It includes a valid media type ("mt=").</t>

                <t>It references a valid transport capability ("t=").</t>

                <t>All other capabilities referenced by it are valid.</t>
              </list></t>

            <t>For each such valid latent configuration in the offer, the
            answerer checks to see if it could support the latent
            configuration in a subsequent offer/answer exchange. If so, it
            includes the latent configuration with the same configuration
            number in the answer, similar to the way potential configurations
            are processed and the selected one returned in an actual
            configuration attribute (see RFC 5939 <xref target="RFC5939"></xref>). If the answerer supports
            only a (non-mandatory) subset of the parameters offered in a
            latent configuration, the answer latent configuration will include
            only those parameters supported (similar to "acfg" processing).
            Note that latent configurations do not constitute an actual offer
            at this point in time; they merely indicate additional
            configurations that could be supported.</t>

            <t>If a session capability ("sescap") attribute is included and it
            references a latent configuration, then the answerer processing of
            that latent configuration must be done within the constraints
            specified by that session capability. That is, it must be possible to
            support it at the same time as any required (i.e., non-optional)
            potential configurations in the session capability. The answerer
            may in turn add his own sescap indications in the answer as
            well.</t>
          </section>
        </section>

        <section anchor="ansproc" title="Offerer Processing of the Answer ">
          <t>The offerer MUST process the answer in accordance with Section 3.6.3 of RFC 5939 <xref target="RFC5939"></xref>
          and the further explanation below.</t>

          <t>When the offerer processes the answer SDP based on a valid actual
          configuration attribute in the answer, and that valid configuration
          includes one or more media capabilities, the processing MUST
          furthermore be done as if the offer was sent using those media
          capabilities instead of the actual configuration. In particular, the
          media formats in the "m=" line, and any associated payload type
          mappings ("rtpmap"), "fmtp" parameters ("mfcap"), and media-specific
          attributes ("mscap") MUST be used. Note that this may involve use of
          concatenation and substitution rules (see Sections <xref target="mfcapcat" format="counter" /> and
          <xref target="ptsubs" format="counter" />). The actual configuration attribute may also be used to infer
          the lack of acceptability of higher-preference configurations that
          were not chosen, subject to any constraints provided by a session
          capability ("sescap") attribute in the offer. Note that the SDP capability negotiation base
          specification <xref target="RFC5939"></xref> requires the answerer to choose the highest-preference configuration it can support, subject to local
          policies.</t>


          <t>When the offerer receives the answer, it SHOULD furthermore make
          note of any capabilities and/or latent configurations included for
          future use, and any constraints on how those may be combined.</t>
        </section>

        <section anchor="sesmod" title="Modifying the Session">
          <t>If, at a later time, one of the parties wishes to modify the
          operating parameters of a session, e.g., by adding a new media
          stream, or by changing the properties used on an existing stream, it
          can do so via the mechanisms defined for offer/answer <xref
          target="RFC3264"></xref>. If the initiating party has remembered the
          codecs, potential configurations, latent configurations, and session
          capabilities provided by the other party in the earlier negotiation,
          it MAY use this knowledge to maximize the likelihood of a successful
          modification of the session. Alternatively, the initiator MAY
          perform a new capabilities exchange as part of the reconfiguration.
          In such a case, the new capabilities will replace the
          previously negotiated capabilities. This may be useful if conditions
          change on the endpoint.</t>
        </section>
      </section>
    </section>

    <section anchor="examples" title="Examples">
      <t>In this section, we provide examples showing how to use the media
      capabilities with the SDP capability negotiation.</t>

      <section anchor="altcodecs" title="Alternative Codecs">
        <t>This example provides a choice of one of six variations of the
        Adaptive Multi-Rate codec. In this example, the default configuration
        as specified by the media line is the same as the most preferred
        configuration. Each configuration uses a different payload type number
        so the offerer can interpret early media.</t>

        <t><list hangIndent="10">
            <t>v=0<vspace blankLines="0" /> o=- 25678 753849 IN IP4
            192.0.2.1<vspace blankLines="0" /> s=<vspace blankLines="0" />
            c=IN IP4 192.0.2.1<vspace blankLines="0" /> t=0 0<vspace
            blankLines="0" /> a=creq:med-v0<vspace blankLines="0" /> m=audio
            54322 RTP/AVP 96<vspace blankLines="0" /> a=rtpmap:96
            AMR-WB/16000/1<vspace blankLines="0" /> a=fmtp:96
            mode-change-capability=1; max-red=220; \ <vspace blankLines="0" />
            mode-set=0,2,4,7<vspace blankLines="0" /> a=rmcap:1,3,5 audio
            AMR-WB/16000/1<vspace blankLines="0" /> a=rmcap:2,4,6 audio
            AMR/8000/1<vspace blankLines="0" /> a=mfcap:1,2,3,4
            mode-change-capability=1<vspace blankLines="0" /> a=mfcap:5,6
            mode-change-capability=2<vspace blankLines="0" /> a=mfcap:1,2,3,5
            max-red=220<vspace blankLines="0" /> a=mfcap:3,4,5,6 octet-align=1
            <vspace blankLines="0" /> a=mfcap:1,3,5 mode-set=0,2,4,7 <vspace
            blankLines="0" /> a=mfcap:2,4,6 mode-set=0,3,5,6 <vspace
            blankLines="0" /> a=pcfg:1 m=1 pt=1:96<vspace blankLines="0" />
            a=pcfg:2 m=2 pt=2:97<vspace blankLines="0" /> a=pcfg:3 m=3
            pt=3:98<vspace blankLines="0" /> a=pcfg:4 m=4 pt=4:99 <vspace
            blankLines="0" /> a=pcfg:5 m=5 pt=5:100 <vspace blankLines="0" />
            a=pcfg:6 m=6 pt=6:101</t>
          </list></t>

        <t>In the above example, media capability 1 could have been excluded
        from the first "rmcap" declaration and from the corresponding "mfcap"
        attributes, and the "pcfg:1" attribute line could have been simply
        "pcfg:1".</t>

        <t>The next example offers a video stream with three options of H.264
        and four transports. It also includes an audio stream with different
        audio qualities: four variations of AMR, or AC3. The offer looks
        something like the following:</t>

        <t><list hangIndent="10">
            <t>v=0<vspace blankLines="0" /> o=- 25678 753849 IN IP4
            192.0.2.1<vspace blankLines="0" /> s=An SDP Media NEG
            example<vspace blankLines="0" /> c=IN IP4 192.0.2.1<vspace
            blankLines="0" /> t=0 0<vspace blankLines="0" />
            a=creq:med-v0<vspace blankLines="0" />
            a=ice-pwd:speEc3QGZiNWpVLFJhQX <vspace blankLines="0" /> m=video
            49170 RTP/AVP 100 <vspace blankLines="0" /> c=IN IP4
            192.0.2.56<vspace blankLines="0" /> a=maxprate:1000 <vspace
            blankLines="0" /> a=rtcp:51540 <vspace blankLines="0" />
            a=sendonly <vspace blankLines="0" /> a=candidate 12345 1 UDP 9
            192.0.2.56 49170 host <vspace blankLines="0" /> a=candidate 23456
            2 UDP 9 192.0.2.56 51540 host<vspace blankLines="0" /> a=candidate
            34567 1 UDP 7 198.51.100.1 41345 srflx raddr \ <vspace
            blankLines="0" /> 192.0.2.56 rport 49170<vspace blankLines="0" />
            a=candidate 45678 2 UDP 7 198.51.100.1 52567 srflx raddr \ <vspace
            blankLines="0" /> 192.0.2.56 rport 51540<vspace blankLines="0" />
            a=candidate 56789 1 UDP 3 192.0.2.100 49000 relay raddr \ <vspace
            blankLines="0" /> 192.0.2.56 rport 49170<vspace blankLines="0" />
            a=candidate 67890 2 UDP 3 192.0.2.100 49001 relay raddr \ <vspace
            blankLines="0" /> 192.0.2.56 rport 51540 <vspace blankLines="0" />
            b=AS:10000 <vspace blankLines="0" /> b=TIAS:10000000 <vspace
            blankLines="0" /> b=RR:4000 <vspace blankLines="0" />
            b=RS:3000<vspace blankLines="0" /> a=rtpmap:100 H264/90000 <vspace
            blankLines="0" /> a=fmtp:100 profile-level-id=42A01E;
            packetization-mode=2; \ <vspace blankLines="0" />
            sprop-parameter-sets=Z0IACpZTBYmI,aMljiA==; \ <vspace
            blankLines="0" /> sprop-interleaving-depth=45;
            sprop-deint-buf-req=64000; \ <vspace blankLines="0" />
            sprop-init-buf-time=102478; deint-buf-cap=128000 <vspace
            blankLines="0" /> a=tcap:1 RTP/SAVPF RTP/SAVP RTP/AVPF<vspace
            blankLines="0" /> a=rmcap:1-3,7-9 H264/90000<vspace
            blankLines="0" /> a=rmcap:4-6 rtx/90000<vspace blankLines="0" />
            a=mfcap:1-9 profile-level-id=42A01E<vspace blankLines="0" />
            a=mfcap:1-9 aMljiA==<vspace blankLines="0" /> a=mfcap:1,4,7
            packetization-mode=0<vspace blankLines="0" /> a=mfcap:2,5,8
            packetization-mode=1<vspace blankLines="0" /> a=mfcap:3,6,9
            packetization-mode=2<vspace blankLines="0" /> a=mfcap:1-9
            sprop-parameter-sets=Z0IACpZTBYmI<vspace blankLines="0" />
            a=mfcap:1,7 sprop-interleaving-depth=45; \ <vspace
            blankLines="0" /> sprop-deint-buf-req=64000;
            sprop-init-buf-time=102478; \ <vspace blankLines="0" />
            deint-buf-cap=128000<vspace blankLines="0" /> a=mfcap:4
            apt=100<vspace blankLines="0" /> a=mfcap:5 apt=99<vspace
            blankLines="0" /> a=mfcap:6 apt=98<vspace blankLines="0" />
            a=mfcap:4-6 rtx-time=3000<vspace blankLines="0" /> a=mscap:1-6
            rtcp-fb nack<vspace blankLines="0" /> a=acap:1 crypto:1
            AES_CM_128_HMAC_SHA1_80 \ <vspace blankLines="0" />
            inline:d0RmdmcmVCspeEc3QGZiNWpVLFJhQX1cfHAwJSoj|220|1:32 <vspace
            blankLines="0" /> a=pcfg:1 t=1 m=1,4 a=1 pt=1:100,4:97<vspace
            blankLines="0" /> a=pcfg:2 t=1 m=2,5 a=1 pt=2:99,4:96<vspace
            blankLines="0" /> a=pcfg:3 t=1 m=3,6 a=1 pt=3:98,6:95<vspace
            blankLines="0" /> a=pcfg:4 t=2 m=7 a=1 pt=7:100 <vspace
            blankLines="0" /> a=pcfg:5 t=2 m=8 a=1 pt=8:99<vspace
            blankLines="0" /> a=pcfg:6 t=2 m=9 a=1 pt=9:98<vspace
            blankLines="0" /> a=pcfg:7 t=3 m=1,3 pt=1:100,4:97 <vspace
            blankLines="0" /> a=pcfg:8 t=3 m=2,4 pt=2:99,4:96<vspace
            blankLines="0" /> a=pcfg:9 t=3 m=3,6 pt=3:98,6:95<vspace
            blankLines="0" /> m=audio 49176 RTP/AVP 101 100 99 98 <vspace
            blankLines="0" /> c=IN IP4 192.0.2.56<vspace blankLines="0" />
            a=ptime:60 <vspace blankLines="0" /> a=maxptime:200 <vspace
            blankLines="0" /> a=rtcp:51534 <vspace blankLines="0" />
            a=sendonly <vspace blankLines="0" /> a=candidate 12345 1 UDP 9
            192.0.2.56 49176 host <vspace blankLines="0" /> a=candidate 23456
            2 UDP 9 192.0.2.56 51534 host<vspace blankLines="0" /> a=candidate
            34567 1 UDP 7 198.51.100.1 41348 srflx \ <vspace blankLines="0" />
            raddr 192.0.2.56 rport 49176<vspace blankLines="0" /> a=candidate
            45678 2 UDP 7 198.51.100.1 52569 srflx \ <vspace blankLines="0" />
            raddr 192.0.2.56 rport 51534<vspace blankLines="0" /> a=candidate
            56789 1 UDP 3 192.0.2.100 49002 relay \ <vspace blankLines="0" />
            raddr 192.0.2.56 rport 49176<vspace blankLines="0" /> a=candidate
            67890 2 UDP 3 192.0.2.100 49003 relay \ <vspace blankLines="0" />
            raddr 192.0.2.56 rport 51534 <vspace blankLines="0" /> b=AS:512
            <vspace blankLines="0" /> b=TIAS:512000 <vspace blankLines="0" />
            b=RR:4000 <vspace blankLines="0" /> b=RS:3000 <vspace
            blankLines="0" /> a=maxprate:120 <vspace blankLines="0" />
            a=rtpmap:98 AMR-WB/16000 <vspace blankLines="0" /> a=fmtp:98
            octet-align=1; mode-change-capability=2<vspace blankLines="0" />
            a=rtpmap:99 AMR-WB/16000 <vspace blankLines="0" /> a=fmtp:99
            octet-align=1; crc=1; mode-change-capability=2<vspace
            blankLines="0" /> a=rtpmap:100 AMR-WB/16000/2 <vspace
            blankLines="0" /> a=fmtp:100 octet-align=1; interleaving=30
            <vspace blankLines="0" /> a=rtpmap:101 AMR-WB+/72000/2 <vspace
            blankLines="0" /> a=fmtp:101 interleaving=50; int-delay=160000;
            <vspace blankLines="0" /> a=rmcap:14 ac3/48000/6 <vspace
            blankLines="0" /> a=acap:23 crypto:1 AES_CM_128_HMAC_SHA1_80 \
            <vspace blankLines="0" />
            inline:d0RmdmcmVCspeEc3QGZiNWpVLFJhQX1cfHAwJSoj|220|1:32<vspace
            blankLines="0" /> a=tcap:4 RTP/SAVP <vspace blankLines="0" />
            a=pcfg:10 t=4 a=23 <vspace blankLines="0" /> a=pcfg:11 t=4 m=14
            a=23 pt=14:102</t>
          </list></t>

        <t>This offer illustrates the advantage in compactness that arises if
        one can avoid deleting the base configuration attributes and
        recreating them in "acap" attributes for the potential
        configurations.</t>
      </section>

      <section anchor="altcombos"
               title="Alternative Combinations of Codecs (Session Configurations)">
        <t>If an endpoint has limited signal processing capacity, it might be
        capable of supporting, say, a G.711 mu-law audio stream in combination
        with an H.264 video stream, or a G.729B audio stream in combination
        with an H.263-1998 video stream. It might then issue an offer like the
        following:</t>

        <t><list hangIndent="10">
            <t>v=0<vspace blankLines="0" /> o=- 25678 753849 IN IP4
            192.0.2.1<vspace blankLines="0" /> s=<vspace blankLines="0" />
            c=IN IP4 192.0.2.1<vspace blankLines="0" /> t=0 0<vspace
            blankLines="0" /> a=creq:med-v0<vspace blankLines="0" />
            a=sescap:1 2,4<vspace blankLines="0" /> a=sescap:2 1,3<vspace
            blankLines="0" /> m=audio 54322 RTP/AVP 18<vspace
            blankLines="0" /> a=rtpmap:18 G729/8000<vspace blankLines="0" />
            a=fmtp:18 annexb=yes<vspace blankLines="0" /> a=rmcap:1
            PCMU/8000<vspace blankLines="0" /> a=pcfg:1 m=1 pt=1:0<vspace
            blankLines="0" /> a=pcfg:2<vspace blankLines="0" /> m=video 54344
            RTP/AVP 100<vspace blankLines="0" /> a=rtpmap:100
            H263-1998/90000<vspace blankLines="0" /> a=rmcap:2
            H264/90000<vspace blankLines="0" /> a=mfcap:2
            profile-level-id=42A01E; packetization-mode=2<vspace
            blankLines="0" /> a=pcfg:3 m=2 pt=2:101<vspace blankLines="0" />
            a=pcfg:4</t>
          </list></t>

        <t>Note that the preferred session configuration (and the default as
        well) is G.729B with H.263. This overrides the individual media stream
        preferences that are PCMU and H.264 by the potential configuration
        numbering rule.</t>
      </section>

      <section anchor="latentstreams" title="Latent Media Streams">
        <t>Consider a case in which the offerer can support either G.711
        mu-law or G.729B, along with DTMF telephony events for the 12 common
        touchtone signals, but is willing to support simple G.711 mu-law audio
        as a last resort. In addition, the offerer wishes to announce its
        ability to support video and Message Session Relay Protocol (MSRP) in the future, but does not wish to
        offer a video stream or an MSRP stream at present. The offer might
        look like the following:</t>

        <t><list hangIndent="10">
            <t>v=0<vspace blankLines="0" /> o=- 25678 753849 IN IP4
            192.0.2.1<vspace blankLines="0" /> s=<vspace blankLines="0" />
            c=IN IP4 192.0.2.1<vspace blankLines="0" /> t=0 0<vspace
            blankLines="0" /> a=creq:med-v0<vspace blankLines="0" /> m=audio
            23456 RTP/AVP 0<vspace blankLines="0" /> a=rtpmap:0
            PCMU/8000<vspace blankLines="0" /> a=rmcap:1 PCMU/8000<vspace
            blankLines="0" /> a=rmcap:2 G729/8000<vspace blankLines="0" />
            a=rmcap:3 telephone-event/8000<vspace blankLines="0" /> a=mfcap:3
            0-11<vspace blankLines="0" /> a=pcfg:1 m=1,3|2,3 pt=1:0,2:18,3:100
            <vspace blankLines="0" /> a=lcfg:2 mt=video t=1 m=10|11<vspace
            blankLines="0" /> a=rmcap:10 H263-1998/90000<vspace
            blankLines="0" /> a=rmcap:11 H264/90000<vspace blankLines="0" />
            a=tcap:1 RTP/AVP<vspace blankLines="0" /> a=lcfg:3 mt=message t=2
            m=20 <vspace blankLines="0" />a=tcap:2 TCP/MSRP <vspace
            blankLines="0" />a=omcap:20 *</t>
          </list></t>

        <t>The first "lcfg" attribute line ("lcfg:2") announces support for
        H.263 and H.264 video (H.263 preferred) for future negotiation. The
        second "lcfg" attribute line ("lcfg:3") announces support for MSRP for
        future negotiation. The "m=" line and the "rtpmap" attribute offer an audio
        stream and provide the lowest precedence configuration (PCMU without
        any DTMF encoding). The rmcap lines define the RTP-based media
        format capabilities (PCMU, G729, telephone-event, H263-1998, and H264) and the
        omcap line defines the non-RTP-based media format capability (wildcard). The
        "mfcap" attribute provides the format parameters for telephone-event,
        specifying the 12 commercial DTMF 'digits'.&nbsp; The "pcfg" attribute line
        defines the most-preferred media configuration as PCMU plus DTMF
        events and the next-most-preferred configuration as G.729B plus DTMF
        events.</t>

        <t>If the answerer is able to support all the potential
        configurations, and also support H.263 video (but not H.264), it would
        reply with an answer like the following:</t>

        <t><list hangIndent="10">
            <t>v=0<vspace blankLines="0" /> o=- 24351 621814 IN IP4
            192.0.2.2<vspace blankLines="0" /> s=<vspace blankLines="0" />
            c=IN IP4 192.0.2.2<vspace blankLines="0" /> t=0 0<vspace
            blankLines="0" /> a=csup:med-v0<vspace blankLines="0" /> m=audio
            54322 RTP/AVP 0 100<vspace blankLines="0" /> a=rtpmap:0
            PCMU/8000<vspace blankLines="0" /> a=rtpmap:100
            telephone-event/8000<vspace blankLines="0" /> a=fmtp:100
            0-11<vspace blankLines="0" /> a=acfg:1 m=1,3 pt=1:0,3:100<vspace
            blankLines="0" /> a=pcfg:1 m=2,3 pt=2:18,3:100<vspace
            blankLines="0" /> a=lcfg:2 mt=video t=1 m=10<vspace
            blankLines="0" /></t>
          </list></t>

        <t>The "lcfg" attribute line announces the capability to support H.263
        video at a later time. The media line and subsequent "rtpmap" and "fmtp"
        attribute lines present the selected configuration for the media
        stream. The "acfg" attribute line identifies the potential configuration
        from which it was taken, and the "pcfg" attribute line announces the
        potential capability to support G.729 with DTMF events as well. If, at
        some later time, congestion becomes a problem in the network, either
        party may, with expectation of success, offer a reconfiguration of the
        media stream to use G.729 in order to reduce packet sizes.</t>
      </section>
    </section>

    <section anchor="iana" title="IANA Considerations">
      <section anchor="ianaattrs" title="New SDP Attributes">
        <t>IANA has registered the following new SDP
        attributes:</t>

        <t><list hangIndent="4">
            <t>
	    Attribute name:     rmcap<vspace blankLines="0" />
	    Long form name:     RTP-based media format capability<vspace blankLines="0" />
	    Type of attribute:  session-level and media-level<vspace blankLines="0" />
            Subject to charset: no<vspace blankLines="0" />
	    Purpose:            associate RTP-based media capability number(s) with<vspace blankLines="0" />
            media subtype and encoding parameters<vspace blankLines="0" />
            Appropriate Values: see <xref target="mcap"></xref> <vspace blankLines="0" />
	    Contact name:       Flemming Andreasen, fandres@cisco.com</t>
          </list></t>

        <t><list hangIndent="4">
            <t>Attribute name: omcap<vspace blankLines="0" />
	    Long form name:    non-RTP-based media format capability<vspace blankLines="0" /> Type of
            attribute: session-level and media-level<vspace blankLines="0" />
            Subject to charset: no<vspace blankLines="0" /> Purpose: associate
            non-RTP-based media capability number(s) with<vspace
            blankLines="0" /> media subtype and encoding parameters<vspace
            blankLines="0" /> Appropriate Values: see <xref
            target="mcap"></xref><vspace blankLines="0" />
	    Contact name: Flemming Andreasen, fandreas@cisco.com</t>
          </list></t>

        <t><list hangIndent="4">
            <t>Attribute name: mfcap<vspace blankLines="0" /> Long form name:
            media format parameter capability<vspace blankLines="0" /> Type of
            attribute: session-level and media-level<vspace blankLines="0" />
            Subject to charset: no<vspace blankLines="0" /> Purpose: associate
            media format attributes and<vspace blankLines="0" /> parameters
            with media format capabilities<vspace blankLines="0" />
            Appropriate Values: see <xref target="mfcap"></xref><vspace blankLines="0" />
	    Contact name: Flemming Andreasen, fandreas@cisco.com</t>

          </list></t>

        <t><list hangIndent="4">
            <t>Attribute name: mscap<vspace blankLines="0" /> Long form name:
            media-specific capability<vspace blankLines="0" /> Type of
            attribute: session-level and media-level<vspace blankLines="0" />
            Subject to charset: no<vspace blankLines="0" /> Purpose: associate
            media-specific attributes and<vspace blankLines="0" /> parameters
            with media capabilities<vspace blankLines="0" /> Appropriate
            Values: see <xref target="mscap"></xref><vspace blankLines="0" />
	    Contact name: Flemming Andreasen, fandreas@cisco.com</t>
          </list></t>

        <t><list hangIndent="4">
            <t>Attribute name: lcfg<vspace blankLines="0" /> Long form name:
            latent configuration<vspace blankLines="0" /> Type of attribute:
            media-level<vspace blankLines="0" /> Subject to charset: no<vspace
            blankLines="0" /> Purpose: to announce supportable media
            streams<vspace blankLines="0" /> without offering them for
            immediate use.<vspace blankLines="0" /> Appropriate Values: see
            <xref target="lcfg"></xref><vspace blankLines="0" />
	    Contact name: Flemming Andreasen, fandreas@cisco.com</t>
          </list></t>

        <t><list hangIndent="4">
            <t>Attribute name: sescap<vspace blankLines="0" /> Long form name:
            session capability<vspace blankLines="0" /> Type of attribute:
            session-level<vspace blankLines="0" /> Subject to charset:
            no<vspace blankLines="0" /> Purpose: to specify and prioritize
            acceptable<vspace blankLines="0" /> combinations of media stream
            configurations.<vspace blankLines="0" /> Appropriate Values: see
            <xref target="sescap"></xref><vspace blankLines="0" />
	    Contact name: Flemming Andreasen, fandreas@cisco.com</t>
          </list></t>
      </section>

      <section anchor="ianaoption" title="New SDP Capability Negotiation Option Tag">
        <t>IANA has added the new option tag "med-v0",
        defined in this document, to the "SDP Capability Negotiation Option 
        Capability Tags" registry created for RFC 5939 <xref target="RFC5939"></xref>.</t>
      </section>


      <section anchor="ianacfgregistry" title="SDP Capability Negotiation Configuration Parameters Registry">
	<t>IANA has changed the "SDP Capability
	Negotiation Potential Configuration Parameters" registry,
	currently registered and defined by RFC 5939 <xref
	target="RFC5939"></xref>, as follows:</t>

	<t>The name of the registry should be "SDP Capability
	Negotiation Configuration Parameters Registry" and it should
	contain a table with the following column headings:</t>

	<t><list style="symbols">
	  <t>Encoding Name: The syntactical value used for the
	  capability negotiation configuration parameter, as defined
	  in RFC 5939 <xref target="RFC5939"></xref>, Section 3.5.</t>

	  <t>Descriptive Name: The name commonly used to refer to the
	  capability negotiation configuration parameter.</t>

	  <t>Potential Configuration Definition: A reference to the
	  RFC that defines the configuration parameter in the context
	  of a potential configuration attribute. If the configuration
	  parameter is not defined for potential configurations, the
	  string "N/A" (Not Applicable) MUST be present instead.</t>

	  <t>Actual Configuration Definition: A reference to the RFC
	  that defines the configuration parameter in the context of
	  an actual configuration attribute. If the configuration
	  parameter is not defined for actual configurations, the
	  string "N/A" (Not Applicable) MUST be present instead. </t>
	  
	  <t>Latent Configuration Definition: A reference to the RFC
	  that defines the configuration parameter in the context of a
	  latent configuration attribute. If the configuration
	  parameter is not defined for latent configurations, the
	  string "N/A" (Not Applicable) MUST be present instead.</t>
	</list></t>

	<t>An IANA SDP Capability Negotiation Configuration
	registration MUST be documented in an RFC in accordance with
	the IETF Review policy <xref target="RFC5226"></xref>. Furthermore:</t>

	<t><list style="symbols">

	  <t>The RFC MUST define the syntax and semantics of each new
	  potential configuration parameter.</t>

	  <t>The syntax MUST adhere to the syntax provided for
	  extension configuration lists in RFC 5939 <xref target="RFC5939"></xref>, Section 3.5.1,
	  and the semantics MUST adhere to the semantics provided for
	  extension configuration lists in RFC 5939 <xref target="RFC5939"></xref>, Sections 3.5.1
	  and 3.5.2.  </t>

	  <t>Configuration parameters that apply to latent
	  configurations MUST furthermore adhere to the syntax
	  provided in <xref target="lcfg" /> and the semantics defined overall in this document.</t>


	  <t> Associated with each registration MUST be the encoding
	  name for the parameter as well as a short descriptive name
	  for it.</t>

	  <t>Each registration MUST specify if it applies to
	  <list style="symbols">
	    <t>Potential configurations</t>
	    <t>Actual configurations</t>
	    <t>Latent configurations</t>
	  </list>
	  </t>
	</list></t>
      </section>

      <section anchor="ianacfgparmreg" title="SDP Capability Negotiation Configuration Parameter Registrations">
	<t>IANA has registered the following
	capability negotiation configuration parameters:</t>
	<t><list hangIndent="4">
	  <t>
	    Encoding Name: a <vspace blankLines="0"/>
	    Descriptive Name: Attribute Configuration<vspace blankLines="0"/>
	    Potential Configuration Definition: <xref target="RFC5939" /> <vspace blankLines="0"/>
	    Actual Configuration Definition: <xref target="RFC5939"> </xref> <vspace blankLines="0"/>
	    Latent Configuration Definition: [RFC6871]
	  </t>
	</list></t>

	<t><list hangIndent="4">
	  <t>
	    Encoding Name: t <vspace blankLines="0"/>
	    Descriptive Name: Transport Protocol Configuration<vspace blankLines="0"/>
	    Potential Configuration Definition: <xref target="RFC5939" /> <vspace blankLines="0"/>
	    Actual Configuration Definition: <xref target="RFC5939" /> <vspace blankLines="0"/>
	    Latent Configuration Definition: [RFC6871]
	  </t>
	</list></t>

	<t><list hangIndent="4">
	  <t>
	    Encoding Name: m <vspace blankLines="0"/>
	    Descriptive Name: Media Configuration<vspace blankLines="0"/>
	    Potential Configuration Definition: [RFC6871] <vspace blankLines="0"/>
	    Actual Configuration Definition: [RFC6871] <vspace blankLines="0"/>
	    Latent Configuration Definition: [RFC6871]
	  </t>
	</list></t>

	<t><list hangIndent="4">
	  <t>
	    Encoding Name: pt <vspace blankLines="0"/>
	    Descriptive Name: Payload Type Number Mapping<vspace blankLines="0"/>
	    Potential Configuration Definition: [RFC6871] <vspace blankLines="0"/>
	    Actual Configuration Definition: [RFC6871] <vspace blankLines="0"/>
	    Latent Configuration Definition: [RFC6871]
	  </t>
	</list></t>

	<t><list hangIndent="4">
	  <t>
	    Encoding Name: mt <vspace blankLines="0"/>
	    Descriptive Name: Media Type <vspace blankLines="0"/>
	    Potential Configuration Definition: N/A <vspace blankLines="0"/>
	    Actual Configuration Definition: N/A <vspace blankLines="0"/>
	    Latent Configuration Definition: [RFC6871]
	  </t>
	</list></t>

      </section>

    </section>
    <section anchor="security" title="Security Considerations">

      <t>The security considerations of RFC 5939 <xref target="RFC5939"></xref>
      apply for this document.</t>

      <t>In RFC 5939 <xref target="RFC5939"></xref>, it was noted that
      negotiation of transport protocols (e.g., secure and non-secure)
      and negotiation of keying methods and material are potential
      security issues that warrant integrity protection to
      remedy. Latent configuration support provides hints to the other
      side about capabilities supported for further offer/answer
      exchanges, including transport protocols and attribute
      capabilities, e.g., for keying methods. If an attacker can remove
      or alter latent configuration information to suggest that only
      non-secure or less-secure alternatives are supported, then he may
      be able to force negotiation of a less secure session than would
      otherwise have occurred. While the specific attack, as described
      here, differs from those described in RFC 5939 <xref
      target="RFC5939"></xref>, the considerations and mitigation
      strategies are similar to those described in RFC 5939 <xref
      target="RFC5939"></xref>.</t>


	<t>Another variation on the above attack involves the session
	capability ("sescap") attribute defined in this document. The
	"sescap" enables a preference order to be specified for all
	the potential configurations, and that preference will take
	precedence over any preference indication provided in
	individual potential configuration attributes. Consequently,
	an attacker that can insert or modify a "sescap" attribute may
	be able to force negotiation of an insecure or less secure
	alternative than would otherwise have occurred. Again, the
	considerations and mitigation strategies are similar to those
	described in RFC 5939 <xref target="RFC5939"></xref>.</t>

	<t>The addition of negotiable media formats and their
	associated parameters, defined in this specification can cause
	problems for middleboxes that attempt to control bandwidth
	utilization, media flows, and/or processing resource
	consumption as part of network policy, but that do not
	understand the media capability negotiation feature. As for
	the initial SDP capability negotiation work <xref
	target="RFC5939"></xref>, the SDP answer is formulated in such
	a way that it always carries the selected media encoding for
	every media stream selected. Pending an understanding of
	capabilities negotiation, the middlebox should examine the
	answer SDP to obtain the best picture of the media streams
	being established. As always, middleboxes can best do their
	job if they fully understand media capabilities
	negotiation.</t>
      </section>


    <section anchor="acks" title="Acknowledgements">
      <t>This document is heavily influenced by the discussions and work done
      by the SDP Capability Negotiation design team. The following people in
      particular provided useful comments and suggestions to either the
      document itself or the overall direction of the solution defined herein:
      Cullen Jennings, Matt Lepinski, Joerg Ott, Colin Perkins, and Thomas
      Stach.</t>

      <t>We thank Ingemar Johansson and Magnus Westerlund for examples that
      stimulated this work, and for critical reading of the document. We also
      thank Cullen Jennings, Christer Holmberg, and Miguel Garcia for their
      review of the document.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119.xml"?>
      
      <?rfc include="reference.RFC.3264.xml"?>

      <?rfc include="reference.RFC.4566.xml"?>

      <?rfc include="reference.RFC.5226.xml"?>

      <?rfc include="reference.RFC.5234.xml"?>

      <?rfc include="reference.RFC.5939.xml"?>    
    </references>

    <references title="Informative References">
      <?rfc include="reference.RFC.2198.xml"?>
      
      <?rfc include="reference.RFC.4568.xml"?>

      <?rfc include="reference.RFC.4585.xml"?>

      <?rfc include="reference.RFC.4733.xml"?>

      <?rfc include="reference.RFC.4867.xml"?>

      <?rfc include="reference.RFC.5104.xml"?>
    </references>

  </back>
</rfc>
