<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<rfc number="5790" category="std" ipr="pre5378Trust200902">
<?xml-stylesheet type='text/xsl'
		 href='http://xml.resource.org/authoring/rfc2629.xslt' ?>
<?rfc toc="yes"?>
<?rfc symrefs="no" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="no" ?>
<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>

<front>
	<title abbrev="Lightweight IGMPv3 and MLDv2">
		Lightweight Internet Group Management Protocol Version 3 (IGMPv3) and Multicast Listener Discovery Version 2 (MLDv2) Protocols
	</title>

	<author initials="H" surname="Liu" fullname="Hui Liu">
	<organization abbrev="Huawei Technologies">Huawei Technologies Co., Ltd.</organization>
	  <address>
	    <postal>
	      <street>Huawei Bld., No.3 Xinxi Rd.</street>
	      <street>Shang-Di Information Industry Base</street>
	      <city>Hai-Dian Distinct</city> <region>Beijing</region>
	      <code>100085</code>
	      <country>China</country>
	    </postal>
	    <email>Liuhui47967@huawei.com</email>
	  </address>
	</author>

	<author initials="W" surname="Cao" fullname="Wei Cao">
	<organization abbrev="Huawei Technologies">Huawei Technologies Co., Ltd.</organization>
	  <address>
	    <postal>
	      <street>Huawei Bld., No.3 Xinxi Rd.</street>
	      <street>Shang-Di Information Industry Base</street>
	      <city>Hai-Dian Distinct</city> <region>Beijing</region>
	      <code>100085</code>
	      <country>China</country>
	    </postal>
	    <email>caowayne@huawei.com</email>
	  </address>
	</author>

	<author initials="H" surname="Asaeda" fullname="Hitoshi Asaeda">
	  <organization>Keio University</organization>
	  <address>
	    <postal>
	      <street>Graduate School of Media and Governance</street>
	      <street>5322 Endo</street>
	      <city>Fujisawa</city> <region>Kanagawa</region>
	      <code>252-8520</code>
	      <country>Japan</country>
	    </postal>
	    <email>asaeda@wide.ad.jp</email>
	  </address>
	</author>

	<date month="February" year="2010" />

	<area>Operations and Management</area>
	<workgroup>MBONED Working Group</workgroup>

	<keyword>Multicast</keyword>
	<keyword>IGMP</keyword>
	<keyword>MLD</keyword>
	<keyword>Lite</keyword>
        <keyword>lightweight</keyword>

	<abstract>
	  <t>This document describes lightweight IGMPv3 and MLDv2 protocols (LW-IGMPv3 and LW-MLDv2), which simplify the standard (full) versions of IGMPv3 and MLDv2. The interoperability with the full versions and the previous versions of IGMP and MLD is also taken into account.</t>
	</abstract>

</front>

<middle>

<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

	<section anchor="sec.intro" title="Introduction">

	  <t><xref target="refs.IGMPv3">IGMP version 3</xref> and <xref target="refs.MLDv2">MLD version 2</xref> implement source filtering capabilities that are not supported by their earlier versions, <xref target="refs.IGMPv1">IGMPv1</xref>, <xref target="refs.IGMPv2">IGMPv2</xref>, and <xref target="refs.MLDv1">MLDv1</xref>. An IGMPv3- or MLDv2-capable host can tell its upstream router which group it would like to join by specifying which sources it does or does not intend to receive multicast traffic from. IGMPv3 and MLDv2 add the capability for a multicast router to learn sources that are of interest or that are not of interest for a particular multicast address. This information is used during forwarding of multicast data packets.</t>

	  <t>INCLUDE and EXCLUDE filter-modes are introduced to support the source filtering function. If a host wants to receive from specific sources, it sends an IGMPv3 or MLDv2 report with filter-mode set to INCLUDE. If the host does not want to receive from some sources, it sends a report with filter-mode set to EXCLUDE. A source-list for the given sources shall be included in the Report message.</t>

	  <t>INCLUDE and EXCLUDE filter-modes are also defined in a multicast router to process the IGMPv3 or MLDv2 reports. When a multicast router receives the Report messages from its downstream hosts, it forwards the corresponding multicast traffic by managing requested group and source addresses. Group timers and source timers are used to maintain the forwarding state of desired groups and sources under certain filter-modes. When a group report arrives or a certain timer expires, a multicast router may update the desired or undesired source-lists, reset related timer values, change filter-mode, or trigger group queries. With all of the above factors correlating with each other, the determination rules become relatively complex, as the interface states could be frequently changed.</t>

	  <t>The multicast filter-mode improves the ability of the multicast receiver to express its desires. It is useful to support <xref target="refs.SSM">Source-Specific Multicast (SSM)</xref> by specifying interesting source addresses with INCLUDE mode. However, practical applications do not use EXCLUDE mode to block sources very often, because a user or application usually wants to specify desired source addresses, not undesired source addresses. Even if a user explicitly refuses traffic from some sources in a group, when other users in the same shared network have an interest in these sources, the corresponding multicast traffic will still be forwarded to the network. It is generally unnecessary to support the filtering function that blocks sources.</t>

	  <t>This document proposes simplified versions of IGMPv3 and MLDv2, named Lightweight IGMPv3 and Lightweight MLDv2 (or LW-IGMPv3 and LW-MLDv2). LW-IGMPv3 and LW-MLDv2 are subsets of the standard IGMPv3 and MLDv2. They support both Any-Source Multicast (ASM) and SSM communications without a filtering function that blocks sources. Not only are they compatible with the standard IGMPv3 and MLDv2, but also the protocol operations made by hosts and routers (or switches performing IGMPv3/MLDv2 snooping) are simplified to reduce the complicated operations. Since LW-IGMPv3 and LW-MLDv2 are fully compatible with IGMPv3 and MLDv2, hosts or routers that have implemented the full version do not need to implement or modify anything to cooperate with LW-IGMPv3/LW-MLDv2 hosts or routers.</t>

	</section>

<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

	<section title="Terminology">

	  <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT","SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="refs.KEYWORDS">RFC 2119</xref>.</t>

	  <t>In addition, the following terms are used in this document.</t>

	  <t>(*,G) join:
         <vspace blankLines="0" />
         An operation triggered by a host that wants to join a group G.&nbsp; In this case, the host receives from all sources sending to group G. This is typical in ASM communication.</t>

	  <t>(S,G) join:
         <vspace blankLines="0" />
         An operation triggered by a host that wants to join a group G, specifying a desired source S.&nbsp; In this case, the host receives traffic only from source S sending to group G.</t>

	  <t>INCLUDE (S,G) join:
         <vspace blankLines="0" />
         An operation triggered by a host that wants to join a group G under INCLUDE filter-mode, specifying a desired source S.&nbsp; Same meaning as (S,G) join.</t>

	  <t>EXCLUDE (*,G) join:
         <vspace blankLines="0" />
         An operation triggered by a host that wants to join a group G under EXCLUDE filter-mode. Same meaning as (*,G) join.</t>

	  <t>EXCLUDE (S,G) join:
         <vspace blankLines="0" />
         An operation triggered by a host that wants to join a group G under EXCLUDE filter-mode, specifying an undesired source S.&nbsp; This operation is not supported by LW-IGMPv3/LW-MLDv2.</t>

	</section>

<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

	<section title="Simplification Method Overview">

	  <t>The principle is to simplify the host's and router's behavior as much as possible to improve efficiency, while guaranteeing interoperability with the full versions, and introducing no side effects on applications.</t>

	  <t>For convenience, this document mainly discusses IGMPv3, since MLDv2 inherits the same source filtering mechanism, but this document additionally shows MLDv2's unique specifications when needed.</t>

	  <section title="Behavior of Group Members">

	    <t>LW-IGMPv3 inherits the service interface model of IGMPv3.</t>
<!--
	      <list style="empty">
	      <t>IPMulticastListen ( socket, interface, multicast-address,
	      <vspace blankLines="0" />
	                             filter-mode, source-list )</t>
	      </list>
-->
	    <figure>
	      <artwork><![CDATA[
  IPMulticastListen ( socket, interface, multicast-address,
                      filter-mode, source-list )
	      ]]></artwork>
	    </figure>
	    <t>In the lightweight protocol, INCLUDE mode on the host part has the same usage as the full version for INCLUDE (S,G) join, while EXCLUDE mode on the host part is preserved only for excluding null source-lists, which denotes a (*,G) join as used by IGMPv2/IGMPv1/MLDv1. The detailed host operation of LW-IGMPv3/LW-MLDv2 is described in <xref target="sec.host" />.</t>

	  </section>

	  <section anchor="sec.behave" title="Behavior of Multicast Routers">

	    <t>In IGMPv3, router filter-mode is defined to optimize the state description of a group membership <xref target="refs.IGMPv3" />. As a rule, once a member report is in EXCLUDE mode, the router filter-mode for the group will be set to EXCLUDE. When all systems cease sending EXCLUDE mode reports, the filter-mode for that group may transit back to INCLUDE mode. The group timer is used to identify such a transition.</t>
	    <t>In LW-IGMPv3, hosts primarily send INCLUDE requests, and also can request an EXCLUDE (*,G) join, which can be interpreted by the router as a request to include all sources. Without the more general form of EXCLUDE requests, it is unnecessary for the router to maintain the EXCLUDE filter-mode, and the state model for multicast routers can be simplified as:</t>

	    <list style="empty">
	      <t>(multicast address, group timer, (source records))</t>
	    </list>

	    <t>Here a group timer is kept to represent a (*,G) join. Its basic behavior is: when a router receives a (*,G) join, it will set its group timer and keep the source-list for sources specified in the previously received source records. When the group timer expires, the router may change to reception of the listed sources only. The definition of the source record is the same as in the full version.</t>
	    <t>The elimination of the filter-mode will greatly simplify the router behavior. The details of router operation are described in <xref target="sec.router" />.</t>

	  </section>

	</section>

<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

	<section anchor="sec.host" title="LW-IGMPv3 Protocol for Group Members">

	  <section anchor="sec.msg" title="Query and Report Messages">

	    <t>LW-IGMPv3 uses the same two sets of messages, Query and Report messages, as the full version protocols. There is no difference between the definition and usage of the Query message. But the report types in lightweight protocols are reduced because an operation that triggers EXCLUDE (S,G) join is omitted.</t>

	    <t>There are three Group Record Types defined in the full IGMPv3: the Current-State Record denoted by MODE_IS_INCLUDE (referred to as IS_IN) or MODE_IS_EXCLUDE (IS_EX), the Filter-Mode-Change Record denoted by CHANGE_TO_INCLUDE_MODE (TO_IN) or CHANGE_TO_EXCLUDE_MODE (TO_EX), and the Source-List-Change Record denoted by ALLOW_NEW_SOURCES (ALLOW) or BLOCK_OLD_SOURCES (BLOCK). LW-IGMPv3 inherits the actions on change of interface state and on reception of a query, but the IS_IN and IS_EX record types are eliminated and Current-State Records are replaced by other records. The following sections explain the details.</t>

	  </section>

	  <section title="Action on Change of Interface State">

	    <t>When the state of an interface of a group member host is changed, a State-Change Report for that interface is immediately transmitted from that interface. The type and contents of the Group Record(s) in that report are determined by comparing the filter-mode and source-list for the affected multicast address before and after the change. While the requirements for the computation are the same as for the full version, in a lightweight version host the interface state change rules are simplified due to the reduction of message types. The contents of the new transmitted report are calculated as follows (Group Record Types are described in <xref target="sec.record_type" />):


</t>

	    <figure>
	    <artwork align="center">
Old State        New State        State-Change Report Sent
-----------      -----------      ------------------------

INCLUDE (A)      INCLUDE (B)      ALLOW(B-A), BLOCK(A-B)

INCLUDE (A)      EXCLUDE ({})     TO_EX({})

INCLUDE ({})     EXCLUDE ({})     TO_EX({})

EXCLUDE ({})     INCLUDE (B)      TO_IN(B)
	    </artwork>
	    </figure>

	    <t>As in the full version, to cover the possibility of the State-Change Report being missed by one or more multicast routers, it is retransmitted [Robustness Variable]-1 more times, at intervals chosen at random from the range (0, [Unsolicited Report Interval]). (These values are defined in <xref target="refs.IGMPv3" /><xref target="refs.MLDv2" />.)</t>

	  </section>

	  <section anchor="sec.hops" title="Action on Reception of a Query">
	    <t>As in the full version, when a lightweight version host receives a query, it does not respond immediately. Instead, it delays its response by a random amount of time, bounded by the Max Resp Time value derived from the Max Resp Code in the received Query message <xref target="refs.IGMPv3" /><xref target="refs.MLDv2" />. The system may receive a variety of queries on different interfaces and of different kinds (e.g., General Queries, Group-Specific Queries, and Group-and-Source-Specific Queries), each of which may require its own delayed response.</t>

	    <t>Before scheduling a response to a query, the system must first consider previously scheduled pending responses and in many cases schedule a combined response. Therefore, the lightweight version host must be able to maintain the following state:</t>

	    <figure>
	    <artwork align="center">
o A timer per interface for scheduling responses to General Queries.

o A per-group and interface timer for scheduling responses to Group-
 Specific and Group-and-Source-Specific Queries.

o A per-group and interface list of sources to be reported in the
 response to a Group-and-Source-Specific Query.
	    </artwork>
	    </figure>

	    <t>LW-IGMPv3 inherits the full version's rules that are used to determine if a report needs to be scheduled. The difference is regarding the simplification of EXCLUDE filter-mode and the type of report as detailed in <xref target="sec.record_type" />.</t>

	  </section>

	  <section anchor="sec.record_type" title="LW-IGMPv3 Group Record Types">
	    <t>Among the Group Record Types defined in the full IGMPv3, several record types are not used in LW-IGMPv3 as some of the processes related to the filter-mode change to the EXCLUDE mode are eliminated and some of the Report messages are converged into a record having a null source address list. All of the record types of Report messages used by the full and lightweight version protocols are shown as follows:</t>
	    <figure>
	    <artwork align="center">
IGMPv3       LW-IGMPv3    Comments
---------    ---------    -------------------------------------

IS_EX({})    TO_EX({})    Query response for (*,G) join

IS_EX(x)     N/A          Query response for EXCLUDE (x,G) join

IS_IN(x)     ALLOW(x)     Query response for INCLUDE (x,G) join

ALLOW(x)     ALLOW(x)     INCLUDE (x,G) join

BLOCK(x)     BLOCK(x)     INCLUDE (x,G) leave

TO_IN(x)     TO_IN(x)     Change to INCLUDE (x,G) join

TO_IN({})    TO_IN({})    (*,G) leave

TO_EX(x)     N/A          Change to EXCLUDE (x,G) join

TO_EX({})    TO_EX({})    (*,G) join
	    </artwork>
	    </figure>
	    <t>where "x" represents a non-null source address list and "({})" represents a null source address list. For instance, IS_EX({}) means a report whose record type is IS_EX with a null source address list. "N/A" represents not applicable (or no use) because the corresponding operation should not occur in the lightweight version protocols.</t>

	    <t>LW-IGMPv3 does not use EXCLUDE filter-mode with a non-null source address list. A multicast router creates the same state when it receives a Report message containing either IS_EX({}) or TO_EX({}) record types. Therefore, LW-IGMPv3 integrates the IS_EX({}) operation with the TO_EX({}) operation.</t>

	    <t>When an LW-IGMPv3 host needs to make a query response for the state of INCLUDE (x,G) join, it makes a response whose message type is expressed with ALLOW(x), instead of using the IS_IN record type. Because the router's processing of the two messages is exactly the same, the IS_IN(x) type is eliminated for simplification.</t>

	    <t>An LW-IGMPv3 host does not use EXCLUDE mode, while TO_IN and TO_EX records are used for example in the following situation: the host first launches an application (AP1) that requests INCLUDE (x,G) join, and sends ALLOW(x). Then the host launches another application (AP2) that joins (*,G), and it sends TO_EX({}). In this condition, when AP2 terminates but AP1 keeps working on the lightweight version host, the host sends a report with TO_IN(x) record type for [Robustness Variable] times.</t>

	    <t>Although an LW-IGMPv3 host adopts the four message types (ALLOW, BLOCK, TO_IN, and TO_EX) for simplification, using IS_EX({}) and IS_IN(x) (respectively, instead of TO_EX({}) and ALLOW(x)) in response to queries is not inhibited. This will not introduce the interoperation problem because the router process is, respectively, the same for the mentioned two message set, as long as the router implementation follows the rules given by full IGMPv3.</t>
	  </section>

	</section>

<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

	<section anchor="sec.router" title="LW-IGMPv3 Protocol for Multicast Routers">

	  <t>The major difference between the full and lightweight version protocols on the router part is that in the lightweight version filter-mode is discarded and the function of the group timer is redefined. The states maintained by the lightweight router are reduced and the protocol operation is greatly simplified.</t>

	  <section title="Group Timers and Source Timers in the Lightweight Version">
	    <t>In lightweight and full IGMPv3 routers, a source timer is kept for each source record and it is updated when the source is present in a received report. It indicates the validity of the source and needs to be referred to when the router takes its forwarding decision.</t>

	    <t>The group timer being used in the full version of IGMPv3 for transitioning the router's filter-mode from EXCLUDE to INCLUDE is redefined in the lightweight protocols to identify the non-source-specific receiving state maintained for (*,G) join. Once a group record of TO_EX({}) is received, the group timer is set to represent this (*,G) group join. The expiration of the group timer indicates that there are no more listeners on the attached network for this (*,G) group. Then if at this moment there are unexpired sources (whose source timers are greater than zero), the router will change to receiving traffic for those sources only. The role of the group timer can be summarized as follows:</t>

	    <figure>
	    <artwork align="center">
Group Timer Value      Actions/Comments
------------------     --------------------------------------

G_Timer > 0            All members in this group.

G_Timer == 0           No more listeners to this (*,G) group.
                       If all source timers have expired, then
                       delete group record.  If there are
                       still source record timers running,
                       use those source records with running
                       timers as the source record state.
	    </artwork>
	    </figure>

	    <t>The operation related to the group and source timers has some differences compared to the full IGMPv3. In the full version, if a source timer expires under the EXCLUDE router filter-mode, its corresponding source record is not deleted until the group timer expires for indicating undesired sources. In the lightweight version, since there is no need to keep such records for blocking specific sources, if a source timer expires, its source record should be deleted immediately, not waiting for the time-out of the group timer.</t>

	  </section>

	  <section title="Source-Specific Forwarding Rules">
	    <t>A full version multicast router needs to consult IGMPv3 state information when it makes decisions on forwarding a datagram from a source, based on the router filter-mode and source timer. In LW-IGMPv3, because of the absence of the router filter-mode, the group timer and source timer could be used for such decisions. The forwarding suggestion made by LW-IGMPv3 to the routing protocols is summarized as follows:</t>
	    <figure>
	    <artwork align="center">
Group Timer    Source Timer          Action
------------   ------------------    -----------------------

G_Timer == 0   S_Timer > 0           Suggest forwarding
                                     traffic from source

G_Timer == 0   S_Timer == 0          Suggest stopping
                                     forwarding traffic from
                                     source and remove
                                     source record.  If there
                                     are no more source
                                     records for the group,
                                     delete group record

G_Timer == 0   No Source Elements    Suggest not forwarding
                                     traffic from source

G_Timer > 0    S_Timer >= 0          Suggest forwarding
                                     traffic from source

G_Timer > 0    No Source Elements    Suggest forwarding
                                     traffic from source
	    </artwork>
	    </figure>
	  </section>

	  <section title="Reception of Current-State Records">
	    <t>When receiving Current-State Records, the LW-IGMPv3 router resets its group or source timers and updates its source-list within the group. For source-specific group reception state (when G_Timer == 0 and S_Timer > 0), the source-list contains sources whose traffic will be forwarded by the router, while in non-source-specific group reception (when G_Timer > 0), the source-list remembers the valid sources to receive traffic from after toggling to source-specific reception state.</t>
	    <t>Although the LW-IGMPv3 host only sends a subset of the messages of the full version, the LW-IGMPv3 router should be able to process as many messages as possible to be compatible with the full version host. Note that if the report type is IS_EX(x) with a non-empty source-list, the router will treat it as the same type of report with an empty source-list. The following table describes the action taken by a multicast router after receiving Current-State Records. The notations have the same meaning as those in the full IGMPv3 protocol.</t>
	    <figure>
	    <artwork align="center">
               Old                     New
               Source-                 Source-
Group Timer    List     Report Rec'd   List     Actions
------------   ------   ------------   ------   -----------

G_Timer == 0     A       IS_IN(B)       A+B     (B)=GMI

G_Timer == 0     A       IS_EX({})       A      G_Timer=GMI

G_Timer > 0      A       IS_IN(B)       A+B     (B)=GMI

G_Timer > 0      A       IS_EX({})       A      G_Timer=GMI
	    </artwork>
	    </figure>
	    <t>The above table could be further simplified since the processes are exactly the same for the two values of the G_Timer:</t>
	    <figure>
	    <artwork align="center">
Old                      New
Source-                  Source-
List     Report Rec'd    List     Actions
------   ------------    ------   -----------

  A       IS_IN(B)        A+B     (B)=GMI

  A       IS_EX({})        A      G_Timer=GMI
	    </artwork>
	    </figure>
	    <t>Without EXCLUDE filter-mode, a router's process on receiving a Current-State Record is simple: when a router receives an IS_IN report, it appends the reported source addresses to the previous source-list with their source timers set to GMI. Upon receiving an IS_EX({}) report, the router sets the non-source-specific receiving states by resetting the group timer value and keeps the previous source-list without modification.</t>
	  </section>

	  <section title="Reception of Source-List-Change and Filter-Mode-Change Records">
	    <t>On receiving Source-List-Change and Filter-Mode-Change Records, the LW-IGMPv3 router needs to reset its group and source timers, update its source-list within the group, or trigger group queries. The queries are sent by the router for the sources that are requested to be no longer forwarded to a group. Note that if the report type is TO_EX(x) with a non-empty source-list, the router will treat it as the same type of report with an empty source-list. The table below describes the state change and the actions that should be taken.</t>
	    <figure>
	    <artwork align="center">
               Old                     New
               Source-                 Source-
Group Timer    List     Report Rec'd   List     Actions
------------   ------   ------------   ------   -------------

G_Timer == 0     A       ALLOW(B)       A+B     (B)=GMI

G_Timer == 0     A       BLOCK(B)        A      Send Q(G,A*B)

G_Timer == 0     A       TO_IN(B)       A+B     (B)=GMI
                                                Send Q(G,A-B)

G_Timer == 0     A       TO_EX({})       A      G_Timer=GMI

G_Timer > 0      A       ALLOW(B)       A+B     (B)=GMI

G_Timer > 0      A       BLOCK(B)        A      Send Q(G,A*B)

G_Timer > 0      A       TO_IN(B)       A+B     (B)=GMI
                                                SendQ(G,A-B)
                                                Send Q(G)

G_Timer > 0      A       TO_EX({})       A      G_Timer=GMI
	    </artwork>
	    </figure>
	    <t>The table could be further simplified by merging duplicate lines:</t>
	    <figure>
	    <artwork align="center">
Old                     New
Source-                 Source-
List     Report Rec'd   List     Actions
------   ------------   ------   ----------------------

  A       ALLOW(B)       A+B     (B)=GMI

  A       BLOCK(B)        A      Send Q(G,A*B)

  A       TO_IN(B)       A+B     (B)=GMI
                                 Send Q(G,A-B)
                                 If G_Timer>0 Send Q(G)

  A       TO_EX({})       A      G_Timer=GMI
	    </artwork>
	    </figure>
	  </section>

	</section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

	<section title="Interoperability">

	  <t>LW-IGMPv3/LW-MLDv2 hosts and routers must interoperate with hosts and routers of the full version <xref target="refs.IGMPv3" /><xref target="refs.MLDv2" />. Also, LW-IGMPv3/LW-MLDv2 hosts and routers must interoperate gracefully with hosts and routers running IGMPv1/v2 or MLDv1.</t>

	  <section anchor="sec.interop" title="Interoperation with the Full Version of IGMPv3/MLDv2">
	    <t>LW-IGMPv3/LW-MLDv2 do not introduce any change on the message formats of the group Query and Report messages that the full version protocols use.</t>

	    <section title="Behavior of Group Members">
	      <t>An LW-IGMPv3 host's compatibility mode is determined from the Host Compatibility Mode variable, which can be in one of three states: IGMPv1, IGMPv2, or IGMPv3. When a lightweight host behaves on its interface as LW-IGMPv3, its Host Compatibility Mode of that interface is set to IGMPv3, and the host sends a subset of IGMPv3 Report messages, which can be recognized by a multicast router running the full or the lightweight IGMPv3 protocol on the same LAN.</t>
<!-- The lightweight host's processing rule in presence of older version Queriers should be the same as that of full IGMPv3.-->
	    </section>

	    <section title="Behavior of Multicast Routers">
	      <t>An LW-IGMPv3 or LW-MLDv2 router does not process directly IS_EX(x) and TO_EX(x) reports that are used by the full version. When an LW-IGMPv3/LW-MLDv2 router receives these Report messages from full version hosts, it MUST translate them internally to IS_EX({}) and TO_EX({}) respectively and behave accordingly.</t>
	    </section>

	  </section>

	  <section anchor="sec.v1v2" title="Interoperation with IGMPv1/IGMPv2">

	    <t>Since the lightweight protocols can be treated as a parallel version of the full version of IGMPv3/MLDv2, its compatibility principle and method with the older version are generally the same as that of full IGMPv3/MLDv2.</t>

	    <section title="Behavior of Group Members">
	      <t>The Host Compatibility Mode of an interface is set to IGMPv2 and its IGMPv2 Querier Present timer is set to Older Version Querier Present Timeout seconds (defined in <xref target="refs.IGMPv3" />) whenever an IGMPv2 General Query is received on that interface. The Host Compatibility Mode of an interface is set to IGMPv1 and its IGMPv1 Querier Present timer is set to Older Version Querier Present Timeout seconds whenever an IGMPv1 Membership Query is received on that interface.</t>
<!--Based on the Host Compatibility Mode variable, a host acts using the IGMPv3, IGMPv2, or IGMPv1 protocol on that interface.-->

	      <t>In the presence of older version group members, LW-IGMPv3 hosts may allow its Report message to be suppressed by either an IGMPv1 or IGMPv2 membership report. However, because the transmission of IGMPv1 or v2 packets reduces the capability of the LW-IGMPv3 system, as a potential protection mechanism, the choice to enable or disable the use of backward compatibility may be configurable.</t>
	    </section>

	    <section title="Behavior of Multicast Routers">
	      <t>The behavior of an LW-IGMPv3 router when placed on a network where there are routers that have not been upgraded to IGMPv3 is exactly the same as for a full IGMPv3 router in this situation <xref target="refs.IGMPv3" />.</t>

	      <t>A full IGMPv3 router uses Group Compatibility Mode (whose value is either of IGMPv1, IGMPv2, or IGMPv3) per group record to indicate which version of IGMP protocol it applies to the group. This value is set according to the version of the received IGMP reports. When Group Compatibility Mode is IGMPv3, the lightweight router performs the LW-IGMPv3 protocol for that group.</t>

	      <t>When Group Compatibility Mode is IGMPv2, an LW-IGMPv3 router inherits this compatibility mechanism with the following rules:</t>
	      <figure>
	      <artwork align="center">
 IGMP Message          LW-IGMPv3 Equivalent
--------------         --------------------

  v2 Report                 TO_EX({})

  v2 Leave                  TO_IN({})
	      </artwork>
	      </figure>

	      <t>When Group Compatibility Mode is IGMPv1, an LW-IGMPv3 router internally translates the following IGMPv1 and IGMPv2 messages for that group to their LW-IGMPv3 equivalents:</t>
	      <figure>
	      <artwork align="center">
 IGMP Message          LW-IGMPv3 Equivalent
--------------         --------------------

  v1 Report                 TO_EX({})

  v2 Report                 TO_EX({})
	      </artwork>
	      </figure>

	    </section>

	  </section>

	  <section title="Interoperation with MLDv1">
	    <t>LW-MLDv2 hosts and routers MUST interoperate with hosts and routers running MLDv1. The method is the same as described in <xref target="sec.v1v2" />. The difference is that when an LW-MLDv2 router has a MLDv1 listener on its network, it translates the following MLDv1 messages to their LW-MLDv2 equivalents:</t>
	    <figure>
	    <artwork align="center">
MLDv1 Message         LW-MLDv2 Equivalent
-------------         -------------------

  Report                  TO_EX({})

  Done                    TO_IN({})
	    </artwork>
	    </figure>

	  </section>

	</section>

<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

	<section title="Implementation Considerations">

	  <t>The lightweight protocols require no additional procedure for the implementation of the related protocols or systems, e.g., IGMP/MLD snooping, multicast routing protocol, and operation of application sockets, while the processing loads on the switches and routers that run IGMPv3/MLDv2 (snooping) and multicast routing protocols may be greatly decreased.</t>

	  <section title="Implementation of Source-Specific Multicast">
	    <t><xref target="refs.IGMP-SSM" /> specifies the requirements for the implementation of Source-Specific Multicast (SSM) on IGMPv3/MLDv2 hosts and routers. The lightweight protocol follows the same rules as given in <xref target="refs.IGMP-SSM" /> except for the change of the message types due to the simplification.</t>
	    <t>An LW-IGMPv3/LW-MLDv2 host should not invoke (*,G) join (i.e., TO_EX({})) and (*,G) leave (i.e., TO_IN({})) for applications whose multicast addresses are in the SSM address range. An upstream LW-IGMPv3/LW-MLDv2 router MUST NOT establish forwarding state and MAY log an error on reception of them as described in <xref target="refs.SSM" />.</t>
	  </section>

	  <section title="Implementation of Multicast Source Filter (MSF) APIs">
	    <t><xref target="refs.MSF" /> defines the following Multicast Source Filter (MSF) APIs: (1) IPv4 Basic MSF APIs, (2) IPv4 Advanced MSF APIs, (3) Protocol-Independent Basic MSF APIs, and (4) Protocol-Independent Advanced MSF APIs.</t>

	    <t>According to the MSF API definition, an LW-IGMPv3 host should implement either the IPv4 Basic MSF API or the Protocol-Independent Basic MSF API, and an LW-MLDv2 host should implement the Protocol-Independent Basic MSF API. Other APIs, IPv4 Advanced MSF API and Protocol-Independent Advanced MSF API, are optional to implement in an LW-IGMPv3/LW-MLDv2 host.</t>
	  </section>

	</section>

<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

	<section title="Security Considerations">
	  <t>The security considerations are the same as that of the full version of IGMPv3/MLDv2.</t>
	</section>

<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

	<section title="Acknowledgements">

	  <t>The authors would like to thank MBONED and MAGMA working group members. Special thanks is given to Marshall Eubanks, Guo Feng, Mark Fine, Alfred Hoenes, Prashant Jhingran, Bharat Joshi, Guo Tao, Wang Wendong, and Gong Xiangyang for their valuable suggestions and comments on this document.</t>

	</section>

<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

</middle>

<back>
	<references title="Normative References">
	  <reference anchor="refs.KEYWORDS">
<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>

<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year='1997' month='March' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
  In many standards track documents several words are used to signify
  the requirements in the specification.  These words are often
  capitalized.  This document defines these words as they should be
  interpreted in IETF documents.  Authors who follow these guidelines
  should incorporate this phrase near the beginning of their document:

<list>
<t>
     The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
     NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
     "OPTIONAL" in this document are to be interpreted as described in
     RFC 2119.

</t></list></t>
<t>
  Note that the force of these words is modified by the requirement
  level of the document in which they are used.
</t></abstract></front>

<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='ftp://ftp.isi.edu/in-notes/rfc2119.txt' />
<format type='HTML' octets='17491' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5777' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>


	  <reference anchor="refs.IGMPv3">
<front>
<title>Internet Group Management Protocol, Version 3</title>
<author initials='B.' surname='Cain' fullname='B. Cain'>
<organization /></author>
<author initials='S.' surname='Deering' fullname='S. Deering'>
<organization /></author>
<author initials='I.' surname='Kouvelas' fullname='I. Kouvelas'>
<organization /></author>
<author initials='B.' surname='Fenner' fullname='B. Fenner'>
<organization /></author>
<author initials='A.' surname='Thyagarajan' fullname='A. Thyagarajan'>
<organization /></author>

<date year='2002' month='October' /></front>

<seriesInfo name='RFC' value='3376' />
<format type='TXT' octets='119726' target='ftp://ftp.isi.edu/in-notes/rfc3376.txt' />
</reference>


	  <reference anchor="refs.MLDv2">
<front>
<title>Multicast Listener Discovery Version 2 (MLDv2) for IPv6</title>
<author initials='R.' surname='Vida' fullname='R. Vida'>
<organization /></author>
<author initials='L.' surname='Costa' fullname='L. Costa'>
<organization /></author>
<date year='2004' month='June' />
<abstract>
<t>This document updates RFC 2710, and it specifies Version 2 of the ulticast Listener Discovery Protocol (MLDv2).  MLD is used by an IPv6 router to discover the presence of multicast listeners on directly attached links, and to discover which multicast addresses are of interest to those neighboring nodes.  MLDv2 is designed to be interoperable with MLDv1.  MLDv2 adds the ability for a node to report interest in listening to packets with a particular multicast address only from specific source addresses or from all sources except for specific source addresses. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='3810' />

<format type='TXT' octets='153579' target='ftp://ftp.isi.edu/in-notes/rfc3810.txt' />
</reference>


	  <reference anchor="refs.IGMPv1">
<front>
<title>Host extensions for IP multicasting</title>
<author initials='S.' surname='Deering' fullname='Steve Deering'>
<organization>Stanford University, Computer Science Department</organization>
<address>
<postal>
<street />
<city>Stanford</city>
<region>CA</region>

<code>94305-2140</code>
<country>US</country></postal>
<phone>+1 415 723 9427</phone>
<email>deering@PESCADERO.STANFORD.EDU</email></address></author>
<date year='1989' day='1' month='August' /></front>

<seriesInfo name='STD' value='5' />
<seriesInfo name='RFC' value='1112' />
<format type='TXT' octets='39904' target='ftp://ftp.isi.edu/in-notes/rfc1112.txt' />
</reference>


	  <reference anchor="refs.IGMPv2">
<front>
<title abbrev='Internet Group Management Protocol'>Internet Group Management Protocol, Version 2</title>
<author initials='W.C.' surname='Fenner' fullname='William C. Fenner'>
<organization>Xerox PARC</organization>
<address>
<postal>
<street>3333 Coyote Hill Road</street>
<street>Palo Alto</street>
<street>CA 94304</street></postal>

<phone>+1 650 812 4816</phone>
<email>fenner@parc.xerox.com</email></address></author>
<date year='1997' month='November' />
<area>Internet</area>
<keyword>internet group multicast protocol</keyword>
<keyword>multicast</keyword>
<keyword>routing</keyword>
<abstract>
<t>
  This memo documents IGMPv2, used by IP hosts to report their
  multicast group memberships to routers.  It updates STD 5, RFC 1112.

</t>
<t>
  IGMPv2 allows group membership termination to be quickly reported to
  the routing protocol, which is important for high-bandwidth multicast
  groups and/or subnets with highly volatile group membership.
</t>
<t>
  This document is a product of the Inter-Domain Multicast Routing
  working group within the Internet Engineering Task Force.  Comments
  are solicited and should be addressed to the working group&apos;s mailing
  list at idmr@cs.ucl.ac.uk and/or the author(s).
</t></abstract></front>

<seriesInfo name='RFC' value='2236' />
<format type='TXT' octets='51048' target='ftp://ftp.isi.edu/in-notes/rfc2236.txt' />
<format type='HTML' octets='65437' target='http://xml.resource.org/public/rfc/html/rfc2236.html' />
<format type='XML' octets='50863' target='http://xml.resource.org/public/rfc/xml/rfc2236.xml' />
</reference>


	  <reference anchor="refs.MLDv1">
<front>
<title abbrev='Multicast Listener Discovery for IPv6'>Multicast Listener Discovery (MLD) for IPv6</title>
<author initials='S.' surname='Deering' fullname='Stephen E. Deering'>
<organization>Cisco Systems, Inc.</organization>
<address>
<postal>
<street>170 West Tasman Drive</street>
<city>San Jose</city>
<region>CA</region>

<code>95134-1706</code>
<country>US</country></postal>
<phone>+1 408 527 8213</phone>
<email>deering@cisco.com</email></address></author>
<author initials='W.' surname='Fenner' fullname='William C. Fenner'>
<organization>AT &amp; T Research</organization>
<address>
<postal>
<street>75 Willow Road</street>

<city>Menlo Park</city>
<region>CA</region>
<code>94025</code>
<country>US</country></postal>
<phone>+1 650 867 6073</phone>
<email>fenner@research.att.com</email></address></author>
<author initials='B.' surname='Haberman' fullname='Brian Haberman'>
<organization>IBM Corporation</organization>
<address>
<postal>

<street>800 Park Office Drive</street>
<city>Research Triangle Park</city>
<region>NC</region>
<code>27709</code>
<country>US</country></postal>
<phone>+1 919 254 2673</phone>
<email>haberman@raleigh.ibm.com</email></address></author>
<date year='1999' month='October' />
<abstract>
<t>This document specifies the protocol used by an IPv6 router to discover the presence of multicast listeners (that is, nodes wishing to receive multicast packets) on its directly attached links, and to discover specifically which multicast addresses are of interest to those neighboring nodes.  This protocol is referred to as Multicast Listener Discovery or MLD.  MLD is derived from version 2 of IPv4's Internet Group Management Protocol, IGMPv2.  One important difference to note is that MLD uses ICMPv6 (IP Protocol 58)  essage types, rather than IGMP (IP Protocol 2) message types.</t></abstract></front>

<seriesInfo name='RFC' value='2710' />
<format type='TXT' octets='46838' target='ftp://ftp.isi.edu/in-notes/rfc2710.txt' />
</reference>


 	  <reference anchor="refs.SSM">
<front>
<title>Source-Specific Multicast for IP</title>
<author initials='H.' surname='Holbrook' fullname='H. Holbrook'>
<organization /></author>
<author initials='B.' surname='Cain' fullname='B. Cain'>
<organization /></author>
<date year='2006' month='August' />
<abstract>
<t>IP version 4 (IPv4) addresses in the 232/8 (232.0.0.0 to 232.255.255.255) range are designated as source-specific multicast (SSM) destination addresses and are reserved for use by source-specific applications and protocols.  For IP version 6 (IPv6), the address prefix FF3x::/32 is reserved for source-specific multicast use.  This document defines an extension to the Internet network service that applies to datagrams sent to SSM addresses and defines the host and router requirements to support this extension. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4607' />

<format type='TXT' octets='42990' target='ftp://ftp.isi.edu/in-notes/rfc4607.txt' />
</reference>


	  <reference anchor="refs.IGMP-SSM">
<front>
<title>Using Internet Group Management Protocol Version 3 (IGMPv3) and Multicast Listener Discovery Protocol Version 2 (MLDv2) for Source-Specific Multicast</title>
<author initials='H.' surname='Holbrook' fullname='H. Holbrook'>
<organization /></author>
<author initials='B.' surname='Cain' fullname='B. Cain'>
<organization /></author>
<author initials='B.' surname='Haberman' fullname='B. Haberman'>
<organization /></author>
<date year='2006' month='August' />
<abstract>
<t>The Internet Group Management Protocol Version 3 (IGMPv3) and the Multicast Listener Discovery Protocol Version 2 (MLDv2) are protocols that allow a host to inform its neighboring routers of its desire to receive IPv4 and IPv6 multicast transmissions, respectively.  Source-specific multicast (SSM) is a form of multicast in which a receiver is required to specify both the network-layer address of the source and the multicast destination address in order to receive the multicast transmission.  This document defines the notion of an "SSM-aware" router and host, and clarifies and (in some cases) modifies the behavior of IGMPv3 and MLDv2 on SSM-aware routers and hosts to accommodate source-specific multicast.  This document updates the IGMPv3 and MLDv2 specifications. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4604' />
<format type='TXT' octets='23370' target='ftp://ftp.isi.edu/in-notes/rfc4604.txt' />
</reference>


	</references>

	<references title="Informative References">
	  <reference anchor="refs.MSF">
<front>
<title>Socket Interface Extensions for Multicast Source Filters</title>
<author initials='D.' surname='Thaler' fullname='D. Thaler'>
<organization /></author>
<author initials='B.' surname='Fenner' fullname='B. Fenner'>
<organization /></author>
<author initials='B.' surname='Quinn' fullname='B. Quinn'>
<organization /></author>
<date year='2004' month='January' />
<abstract>
<t>The Internet Group Management Protocol (IGMPv3) for IPv4 and the Multicast Listener Discovery (MLDv2) for IPv6 add the capability for applications to express source filters on multicast group memberships, which allows receiver applications to determine the set of senders (sources) from which to accept multicast traffic.  This capability also simplifies support of one-to-many type multicast applications.  This document specifies new socket options and functions to manage source filters for IP Multicast group memberships.  It also defines the socket structures to provide input and output arguments to these new application program interfaces (APIs).  These extensions are designed to provide access to the source filtering features, while introducing a minimum of change into the system and providing complete compatibility for existing multicast applications.</t></abstract></front>

<seriesInfo name='RFC' value='3678' />
<format type='TXT' octets='36320' target='ftp://ftp.isi.edu/in-notes/rfc3678.txt' />
</reference>


	</references>
</back>

</rfc>
