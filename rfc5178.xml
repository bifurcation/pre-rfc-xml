<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc1035 SYSTEM 'reference.RFC.1035.xml'>
    <!ENTITY rfc2119 SYSTEM 'reference.RFC.2119.xml'>
    <!ENTITY rfc2203 SYSTEM 'reference.RFC.2203.xml'>
    <!ENTITY rfc2606 SYSTEM 'reference.RFC.2606.xml'>
    <!ENTITY rfc2743 SYSTEM 'reference.RFC.2743.xml'>
    <!ENTITY rfc2782 SYSTEM 'reference.RFC.2782.xml'>
    <!ENTITY rfc2831 SYSTEM 'reference.RFC.2831.xml'>
    <!ENTITY rfc3490 SYSTEM 'reference.RFC.3490.xml'>
    <!ENTITY rfc3530 SYSTEM 'reference.RFC.3530.xml'>
    <!ENTITY rfc4033 SYSTEM 'reference.RFC.4033.xml'>
    <!ENTITY rfc5234 SYSTEM 'reference.RFC.5234.xml'>
    <!ENTITY rfc4422 SYSTEM 'reference.RFC.4422.xml'>
    <!ENTITY rfc4752 SYSTEM 'reference.RFC.4752.xml'>
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>

<rfc number="5178" category="std">
    <front>
	<title abbrev="GSS Domain-Based Names">Generic Security Service Application Program Interface (GSS-API) Internationalization and Domain-Based Service Names and Name Type</title>
	<author initials='N.' surname="Williams" fullname='Nicolas
	    Williams'>
	    <organization abbrev="Sun">Sun Microsystems</organization>
	    <address>
		<postal>
		    <street>5300 Riata Trace Ct.</street>
		    <city>Austin</city> <region>TX</region>
		    <code>78727</code> <country>US</country>
		</postal>
		<email>Nicolas.Williams@sun.com</email>
	    </address>
        </author>
	<author initials='A.' surname="Melnikov" fullname='Alexey
	    Melnikov'>
	    <organization abbrev="Isode Ltd.">Isode Ltd.</organization>
	    <address>
		<postal>
		    <street>5 Castle Business Village,</street>
		    <street>36 Station Road</street>
		    <city>Hampton</city> <region>Middlesex</region>
		    <code>TW12 2BX</code> <country>United Kingdom</country>
		</postal>
		<email>Alexey.Melnikov@isode.com</email>
	    </address>
        </author>

	<date month="May" year="2008"/>

	<area>Security</area>

	<abstract><t>This document describes domain-name-based service
		principal names and the corresponding name type for the
		Generic Security Service Application Programming
		Interface (GSS-API).  Internationalization of the
		GSS-API is also covered.</t>
	    <t>Domain-based service names are similar to host-based
		service names, but using a domain name (not necessarily
		an Internet domain name) in addition to a hostname.  The
		primary purpose of domain-based names is to provide a
		measure of protection to applications that utilize
		insecure service discovery protocols.  This is achieved
		by providing a way to name clustered services after the
		"domain" which they service, thereby allowing their
		clients to authorize the service's servers based on
		authentication of their service names.</t>
	</abstract>
    </front>

    <middle>

        <section title="Introduction">
	    <t>Some applications need to discover the names of servers
		for a specific resource.  Some common methods for server
		discovery are insecure, e.g., queries for DNS <xref
		    target="RFC1035"/> SRV resource records <xref
		    target="RFC2782"/> without using DNSSEC <xref
		    target="RFC4033"/>, and are subject to attacks whereby a
		client can be re-directed to incorrect and possibly
		malicious servers.  A client may even be re-directed to
		a server that has credentials for itself and thus may
		authenticate itself to the client, and yet it could be
		incorrect or malicious (because it has been compromised,
		say).</t>
	    <t>Domain-based names allow for GSS-API <xref
		    target="RFC2743"/> initiator applications (clients)
		to authorize acceptor principals (servers) to serve the
		resource for which the client used insecure server
		discovery without either securing the server discovery
		method or requiring an additional protocol for server
		authorization. That is, either a discovered server has
		credentials for authenticating the domain-based service
		names that it is intended to respond to, or it does
		not. 
		Availability of valid credentials for authenticating
		domain-based names embodies the authorization of a given
		server to a domain-wide service.</t>
	    <t>A domain-based name consists of three required elements:
		<list style='symbols'>
		    <t>a service name</t>
		    <t>a domain name</t>
		    <t>a hostname</t>
		</list>
	    </t>
	    <t>The domain name and the hostname should be Domain Name
		System (DNS) names, though domain-based names could be
		used in non-DNS environments.  Because of the use of DNS
		names we must also provide for internationalization of the
		GSS-API.</t>
	    <t>Note that domain-based naming isn't new.  According to a
		report to the KITTEN WG mailing list, there exists at
		least one implementation of LDAP which uses domain-based
		service naming, and the DIGEST-MD5 HTTP / Simple Authentication and Security Layer (SASL) mechanism
		<xref target="RFC2831"/> describes a similar notion. (See
		section 2.1.2 of <xref target="RFC2831"/> for a description of the "serv-name" field of
		the digest-response.)</t>
        </section>
<vspace blankLines="100" />
	<section title="Conventions Used in This Document">
            <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
            "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
            and "OPTIONAL" in this document are to be interpreted as
            described in <xref target="RFC2119"/>.</t>
        </section>

	<section title="IANA Considerations">
          <section title="Name Type OID">
<t>The IANA has recorded the following new name-type OID in
IANA's "SMI Security for Name System Designators Codes (nametypes)"
registry:</t>

<t>5   gss-domain-based-services        [RFC5178]</t>
</section>
	  <section title="Name Type OID and Symbolic Name">
	      <t>This document creates a new GSS-API name-type, with a
		  symbolic name of "GSS_C_NT_DOMAINBASED_SERVICE" and this
		  OID:
		  <vspace blankLines='1'/>
		  {iso(1) org(3) dod(6) internet(1) security(5)
		  nametypes(6) gss-domain-based(5)}
		  <vspace blankLines='1'/>
		  </t>
          </section>
        </section>

	<section title="Query and Display Syntaxes">
	    <t>There is a single name syntax for domain-based names.
	       It is expressed using the ABNF <xref target="RFC5234"/>.</t>
	    <t>The syntax is:

<figure><artwork>
      domain-based-name = service "@" domain "@" hostname

      hostname          = domain

      domain            = sub-domain 1*("." sub-domain)

      sub-domain        = Let-dig [Ldh-str]

      Let-dig           = ALPHA / DIGIT

      Ldh-str           = *( ALPHA / DIGIT / "-" ) Let-dig
</artwork></figure>

</t>

	    <t>Where &lt;service&gt; is defined in Section 4.1 of <xref target="RFC2743"/>.
	       Other rules not defined above are defined in Appendix B.1 of <xref target="RFC5234"/>.</t>

	    <section title="Examples of Domain-Based Names">
		<t>These examples are not normative:
		    <list style='symbols'>
			<t>ldap@somecompany.example@ds1.somecompany.example</t>
			<t>nfs@somecompany.example@nfsroot1.somecompany.example</t>
		    </list>
		</t>
		<t>The .example top-level domain is used here in
		    accordance with <xref target="RFC2606"/>.</t>
	    </section>
	</section>

	<section title="Internationalization (I18N) Considerations">
	    <t>We introduce new versions of GSS_Import_name() and
		GSS_Display_name() to better support Unicode.
		Additionally, we provide for the use of ASCII
		Compatible Encoding (ACE)-encoded DNS
		in the non-internationalized interfaces <xref
		    target="RFC3490"/>.</t>
	    <section title="Importing Internationalized Names">
		<t>When the input_name_type parameter is the
		    GSS_C_NT_DOMAINBASED_SERVICE OID, then
		    GSS_Import_name() implementations and GSS-API
		    mechanisms MUST accept ACE-encoded internationalized
		    domain names in the hostname and domain name slots
		    of the given domain-based name string.</t>
		<t>Support for non-ASCII internationalized domain names
		    SHOULD also be provided through a new function,
		    GSS_Import_name_utf8(), that operates exactly like
		    GSS_Import_name() (with the same input and output
		    parameters and behavior), except that it MUST
		    accept internationalized domain names both as UTF-8
		    strings and as ACE-encoded strings via its
		    input_name_string argument.</t>
	    </section>
	    <section title="Displaying Internationalized Names">
		<t>Implementations of GSS_Display_name() MUST only output
		    US-ASCII or ACE-encoded internationalized domain
		    names in the hostname and domain name slots of
		    domain-based names (or mechanism names (MN) that
		    conform to the mechanism's form for domain-based
		    names).</t>
		<t>Support for non-ASCII internationalized domain names
		    SHOULD also be provided through a new function,
		    GSS_Display_name_utf8(), that operates exactly like
		    GSS_Display_name() (with the same input and output
		    parameters and behavior), except that it outputs
		    UTF-8 strings via its name_string output argument.
		    GSS_Display_name_utf8() MUST NOT output ACE-encoded
		    internationalized domain names.</t>
	    </section>
	</section>

	<section title="Application Protocol Examples">
	    <t>The following examples are not normative.  They describe
		how the authors envision two applications' use of
		domain-based names.</t>
	    <section title="NFSv4 Domain-Wide Namespace Root Server Discovery">
		<t>Work is ongoing to provide a method for constructing
		    domain-wide NFSv4 <xref target="RFC3530"/>
		    filesystem namespaces where there is a single "root"
		    with one or more servers (replicas) and multiple
		    filesystems glued into the namespace through use of
		    "referrals".  Clients could then construct a
		    "global" namespace through use of the DNS domain
		    hierarchy.</t>
		<t>Here, clients would always know, from context, when
		    they need to find the root servers for a given DNS
		    domain.  Root server discovery would be performed
		    using DNS SRV RR lookups, without using
		    DNSSEC where DNSSEC has not been deployed.</t>
		<t>When using RPCSEC_GSS <xref target="RFC2203"/> for
		    security, NFSv4 clients would use domain-based
		    names to ensure that the servers named in the
		    SRV RRs are in fact authorized to be the NFSv4 root
		    servers for the target domain.</t>
	    </section>
	    <section title="LDAP Server Discovery">
		<t>LDAP clients using the GSS-API through SASL would also
		    benefit from use of domain-based names to protect
		    server discovery through insecure DNS SRV RR
		    lookups, much as described above.</t>
		<t>Unlike NFSv4 clients, not all LDAP clients always
		    know from context when they should use domain-based
		    names.  That's because existing clients may use
		    host-based naming to authenticate servers discovered
		    through SRV RR lookups.  Changing such clients to
		    use domain-based naming when domain-based acceptor
		    credentials have not been deployed to LDAP servers,
		    or when LDAP servers have not been modified to allow
		    use of domain-based naming, would break
		    interoperability.  That is, there is a legacy server
		    interoperability issue here.  Therefore, LDAP clients
		    may require additional configuration at deployment
		    time to enable (or disable) use of domain-based
		    naming.</t>
		<t>Note: whether SASL <xref target="RFC4422"/> or its
		    GSS-API bridges <xref
			target="RFC4752"/> <xref
			target="GS2"/> require
		    updates in order allow use of domain-based names is
		    not relevant to the theory of how domain-based
		    naming would protect LDAP clients' server
		    discovery.</t>
	    </section>
	</section>

        <section title="Security Considerations">
	    <t>Use of GSS-API domain-based names may not be negotiable
		by some GSS-API mechanisms, and some acceptors may not
		support GSS-API domain-based names.  In such cases, the
		initiators are left to fall back on the use of host-based
		names, so the initiators MUST also verify
		that the acceptor's host-based name is authorized to
		provide the given service for the domain that the
		initiator had wanted.</t>
	    <t>The above security consideration also applies to all
		GSS-API initiators who lack support for domain-based
		service names.</t>
<t>
Note that, as with all service names, the mere existence of a
domain-based service name conveys meaningful information that may be
used by initiators for making authorization decisions; therefore,
administrators of distributed authentication services should be
aware of the significance of the service names for which they create
acceptor credentials.
</t>
        </section>
    </middle>

    <back>
        <references
	    title="Normative References">
&rfc1035;
&rfc2119;
&rfc2743;
&rfc2782;
&rfc2831;
&rfc3490;
&rfc5234;</references>
	<references
	    title="Informative References">

<!-- draft-josefsson-sasl-gs2 became draft-ietf-sasl-gs2 -->

<reference anchor='GS2'>
<front>
<title>Using GSS-API Mechanisms in SASL: The GS2 Mechanism Family</title>

<author initials='S' surname='Josefsson' fullname='Simon  Josefsson'>
    <organization />
</author>

<date month='October' day='9' year='2007' />

</front>

<seriesInfo name='Work in' value='Progress'/>

</reference>

&rfc2203;
&rfc2606;
&rfc3530;
&rfc4422;
&rfc4752;
&rfc4033;
</references>
    </back>

</rfc>
