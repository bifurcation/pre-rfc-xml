<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt'?>
<?rfc toc='yes'?>
<?rfc tocompact='yes'?>
<?rfc tocdepth='6'?>
<?rfc symrefs='yes'?>
<?rfc rfcedstyle='yes'?>
<?rfc subcompact='no' ?>
<rfc number="5857" ipr="pre5378Trust200902" category="std">


	<front>
		<title abbrev="IKEv2 Extensions to Support ROHCoIPsec">IKEv2 Extensions to Support Robust Header Compression over IPsec</title>
		<date month="April" year="2010"/>
		<author initials="E." surname="Ertekin" fullname="Emre Ertekin">
			<organization>Booz Allen Hamilton</organization>
			<address>
				<postal>
					<street>5220 Pacific Concourse Drive, Suite 200</street>
					<city>Los Angeles</city>
					<region>CA</region>
					<code>90045</code>
					<country>US</country>
				</postal>
				<email>ertekin_emre@bah.com</email>
			</address>
		</author>
		<author initials="C." surname="Christou" fullname="Chris Christou">
			<organization>Booz Allen Hamilton</organization>
			<address>
				<postal>
					<street>13200 Woodland Park Dr.</street>
					<city>Herndon</city>
					<region>VA</region>
					<code>20171</code>
					<country>US</country>
				</postal>
				<email>christou_chris@bah.com</email>
			</address>
		</author>
		<author initials="R." surname="Jasani" fullname="Rohan Jasani">
			<organization>Booz Allen Hamilton</organization>
			<address>
				<postal>
					<street>13200 Woodland Park Dr.</street>
					<city>Herndon</city>
					<region>VA</region>
					<code>20171</code>
					<country>US</country>
				</postal>
				<email>ro@breakcheck.com</email>
			</address>
		</author>
		<author initials="T." surname="Kivinen" fullname="Tero Kivinen">
			<organization>AuthenTec, Inc.</organization>
			<address>
				<postal>
					<street>Fredrikinkatu 47</street>
					<city>HELSINKI</city>
					<country>FI</country>
				</postal>
				<email>kivinen@iki.fi</email>
			</address>
		</author>
		<author initials="C." surname="Bormann" fullname="Carsten Bormann">
			<organization>Universitaet Bremen TZI</organization>
			<address>
				<postal>
					<street>Postfach 330440</street>
					<city>Bremen  D-28334</city>
					<country>Germany</country>
				</postal>
				<email>cabo@tzi.org</email>
			</address>
		</author>


<keyword>example</keyword>
		<abstract>
			<t>In order to integrate Robust Header Compression
(ROHC) with IPsec, a mechanism is needed to signal ROHC channel parameters
between endpoints.  Internet Key Exchange (IKE) is a mechanism that can be
leveraged to exchange these parameters.  This document specifies extensions to
IKEv2 that will allow ROHC and its associated channel parameters to be signaled
for IPsec Security Associations (SAs).</t> 
		</abstract>
	</front>
	<middle>
		<section title="Introduction">
			<t>Increased packet header overhead due to IPsec <xref
target="IPSEC" /> can result in the inefficient utilization of bandwidth.
Coupling ROHC <xref target="ROHC" /> with IPsec offers an efficient way to
transfer protected IP traffic.</t> 
                  	<t>ROHCoIPsec <xref target="ROHCOIPSEC" /> requires
configuration parameters to be initialized at the compressor and decompressor.
Current specifications for hop-by-hop ROHC negotiate these parameters through a
link-layer protocol such as the Point-to-Point Protocol (PPP) (i.e., ROHC over PPP
<xref target="ROHC-PPP" />). Since key exchange protocols (e.g., IKEv2 <xref
target="IKEV2" />) can be used to dynamically establish parameters between
IPsec peers, this document defines extensions to IKEv2 to signal ROHC
parameters for ROHCoIPsec.</t> 
		</section>
            <section title="Terminology">
                  <t>   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 <xref target="BRA97" />.</t>
	    </section>
		<section title="ROHC Channel Initialization for ROHCoIPsec">
			<t>The following subsections define extensions to IKEv2 that enable an initiator and a responder to signal parameters required to establish a ROHC channel for a ROHCoIPsec session.</t>			
			<section title="ROHC_SUPPORTED Notify Message">
			    <t>ROHC channel parameters MUST be signaled separately for each ROHC-enabled IPsec SA. Specifically, a new Notify message type MUST be included in the IKE_AUTH and CREATE_CHILD_SA exchanges whenever a new ROHC-enabled IPsec SA is created, or an existing one is rekeyed.</t>
 				<t>The Notify payload sent by the initiator MUST contain the channel parameters for the ROHC session.  These parameters indicate the capabilities of the ROHC decompressor at the initiator.  Upon receipt of the initiator's request, the responder will either ignore the payload (if it doesn't support ROHC or the proposed parameters) or respond with a Notify payload that contains its own ROHC channel parameters.</t>
				<t>Note that only one Notify payload is used to convey ROHC parameters.  If multiple Notify payloads containing ROHC parameters are received, all but the first such Notify payload MUST be dropped.   If the initiator does not receive a Notify payload with the responder's ROHC channel parameters, ROHC MUST NOT be enabled on the Child SA. </t>
				<t>A new Notify Message Type value, denoted ROHC_SUPPORTED, indicates that the Notify payload is conveying ROHC channel parameters (Section 4).</t>
				<t>The Notify payload (defined in RFC 4306 <xref target="IKEV2" />) is illustrated in Figure 1.</t>
 				<figure title="" suppress-title="false" align="center" alt="" width="" height=""><artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height="">
					<![CDATA[
                        1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ! Next Payload  !C!  RESERVED   !         Payload Length        !
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   !  Protocol ID  !   SPI Size    !      Notify Message Type      !
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   !                                                               !
   ~                Security Parameter Index (SPI)                 ~
   !                                                               !
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   !                                                               !
   ~                       Notification Data                       ~
   !                                                               !
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                      Figure 1. Notify Payload Format
		]]></artwork></figure>
	      <t><postamble/></t>
<t>The fields of the Notify payload are set as follows:</t>
		         <t>Next Payload (1 octet)
			 <list style="empty"><t>
			 Identifier for the payload type of the next payload in the message.  Further details can be found in RFC 4306 <xref target="IKEV2" />.</t></list></t>
				<t>Critical (1 bit)
				<list style="empty"><t>
				Since all IKEv2 implementations support the Notify payload, this value MUST be set to zero.</t></list></t>
				<t>Payload Length (2 octets)
				<list style="empty"><t>
				As defined in RFC 4306 <xref target="IKEV2" />, this field indicates the length of the current payload, including the generic payload header.</t></list></t>
				<t>Protocol ID (1 octet)
				<list style="empty"><t>
				Since this notification message is used during the creation of a Child SA, this field MUST be set to zero.</t></list></t>
				<t>SPI Size (1 octet)
				<list style="empty"><t>
				This value MUST be set to zero, since no SPI is applicable (ROHC parameters are set at SA creation; thus, the SPI has not been defined).</t></list></t>
				<t>Notify Message Type (2 octets)
				<list style="empty"><t>
				This field MUST be set to ROHC_SUPPORTED.</t></list></t>
                        <t>Security Parameter Index (SPI)
				<list style="empty"><t>
				Since the SPI Size field is 0, this field MUST NOT be transmitted.</t></list></t>
                        <t>Notification Data (variable)
				<list style="empty"><t>
				This field MUST contain at least three ROHC Attributes (Section 3.1.1).</t></list></t>

				<section title="ROHC Attributes">
				<t>The ROHC_SUPPORTED Notify message is used to signal channel parameters between ROHCoIPsec compressor and decompressor.  The message contains a list of "ROHC Attributes", which contain the parameters required for the ROHCoIPsec session.</t>
 				<t>The format for signaling ROHC Attributes takes a similar format to the Transform Attributes described in Section 3.3.5 of RFC 4306 <xref target="IKEV2" />.  The format of the ROHC Attribute is shown in Figure 2.</t>
				<t>
			          <figure title="" suppress-title="false" align="center" alt="" width="" height="">
                                <artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height=""><![CDATA[
                           1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      !A!     ROHC Attribute Type     !  AF=0  ROHC Attribute Length  !
      !F!                             !  AF=1  ROHC Attribute Value   !
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      !                   AF=0  ROHC Attribute Value                  !
      !                   AF=1  Not Transmitted                       !
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                Figure 2.  Format of the ROHC Attribute

                                    ]]></artwork>
					<postamble />
					</figure>

				</t>
				<list style="symbols">
                              <t>Attribute Format (AF) (1 bit) - If the AF bit is a zero (0), then the ROHC Attribute is expressed in a Type/Length/Value format.  If the AF bit is a one (1), then the ROHC attribute is expressed in a Type/Value (TV) format.</t>
					<t>ROHC Attribute Type (15 bits) - Unique identifier for each type of ROHC attribute (Section 3.1.2).</t>
      				<t>ROHC Attribute Length (2 octets) - Length (in octets) of the Attribute Value.  When the AF bit is a one (1), the ROHC Attribute Value is 2 octets and the ROHC Attribute Length field is not present.</t>
					<t>ROHC Attribute Value (variable length) - Value of the ROHC Attribute associated with the ROHC Attribute Type.  If the AF bit is a zero (0), this field's length is defined by the ROHC Attribute Length field.  If the AF bit is a one (1), the length of the ROHC Attribute Value is 2 octets.</t>
				</list>	
			</section>
			<section title="ROHC Attribute Types">
				<t>This section describes five ROHC Attribute Types: MAX_CID, ROHC_PROFILE, ROHC_INTEG, ROHC_ICV_LEN, and MRRU.  The value allocated for each ROHC Attribute Type is specified in Section 4.</t>  
				
				<t>MAX_CID (Maximum Context Identifier, AF = 1)
					<list style="empty"><t>The MAX_CID attribute is a mandatory attribute.  Exactly one MAX_CID attribute MUST be sent.  The MAX_CID field indicates the maximum value of a context identifier supported by the ROHCoIPsec decompressor.  This attribute value is 2 octets in length.  The
     value for MAX_CID MUST be at least 0 and at most 16383.  Since CIDs can take values between 0 and MAX_CID, the actual number of contexts that can be used are MAX_CID+1. If MAX_CID is 0, this implies having one context.  The recipient of the MAX_CID Attribute MUST only use context identifiers up to MAX_CID for compression.</t></list>
					<t><list style="empty"><t>Note that the MAX_CID parameter is a one-way notification (i.e., the sender of the attribute indicates what it can handle to the other end); therefore, different values for MAX_CID may be announced in each direction.</t></list></t>

				</t>
				<t>ROHC_PROFILE (ROHC Profile, AF = 1)
                        		<list style="empty"><t>The ROHC_PROFILE attribute is a mandatory attribute.  Each ROHC_PROFILE attribute has a fixed length of 4 octets, and its attribute value is a 2-octet long ROHC Profile Identifier <xref target="ROHCPROF" />.  There MUST be at least one ROHC_PROFILE attribute included in the ROHC_SUPPORTED Notify message.  If multiple ROHC_PROFILE attributes are sent, the order is arbitrary.  The recipient of a ROHC_PROFILE attribute(s) MUST only use the profile(s) proposed for compression.</t></list>
				        <t><list style="empty"><t>Several
common profiles are defined in RFCs 3095 <xref target="ROHCV1" /> and 5225
<xref target="ROHCV2" />.  Note, however, that two versions of the same profile
MUST NOT be signaled.  For example, if a ROHCoIPsec decompressor supports both
ROHCv1 UDP (0x0002) and ROHCv2 UDP (0x0102), both profiles MUST NOT be
signaled.  This restriction is needed, as packets compressed by ROHC express
only the 8 least-significant bits of the profile identifier; since the 8
least-significant bits for corresponding profiles in ROHCv1 and ROHCv2 are
identical, the decompressor is not capable of determining the ROHC version that
was used to compress the packet.</t></list></t> 
                                        <t><list style="empty"><t>Note that the ROHC_PROFILE attribute is a one-way notification; therefore, different values for ROHC_PROFILE may be announced in each direction.</t></list></t>
                        </t>             			
				<t>ROHC_INTEG (Integrity Algorithm for Verification of Decompressed Headers, AF = 1)
                   	    		<list style="empty"><t>The ROHC_INTEG attribute is a mandatory attribute.  There MUST be at least one ROHC_INTEG attribute contained within the ROHC_SUPPORTED Notify message.  The attribute value contains the identifier of an integrity algorithm that is used to ensure the integrity of the decompressed packets (i.e., ensure that the decompressed packet headers are identical to the original packet headers prior to compression). </t></list></t>
  					<t><list style="empty"><t>Authentication algorithms that MUST be supported are specified in the "Authentication Algorithms" table in Section 3.1.1 ("ESP Encryption and Authentication Algorithms") of RFC 4835 <xref target="CRYPTO-ALG" /> (or its successor).  </t>
						  		     <t>The
integrity algorithm is represented by a 2-octet value that corresponds to the
value listed in the IKEv2 Parameters registry <xref target="IKEV2-PARA" />,
"Transform Type 3 - Integrity Algorithm Transform IDs" section.  Upon receipt
of the ROHC_INTEG attribute(s), the responder MUST select exactly one of the
proposed algorithms; the chosen value is sent back in the ROHC_SUPPORTED Notify
message returned by the responder to the initiator.  The selected integrity
algorithm MUST be used in both directions.  If the responder does not accept
any of the algorithms proposed by the initiator, ROHC MUST NOT be enabled on
the SA.</t> 
				    </list>
				    <t><list style="empty">
								<t>It is noted that:
									<list style="numbers">
										<t>The keys (one for each direction) for this integrity algorithm are derived from the IKEv2 KEYMAT (see <xref target="IKEV2" />, Section 2.17).  For the purposes of this key derivation, ROHC is considered to be an IPsec protocol.  When a ROHC-enabled CHILD_SA is rekeyed, the key associated with this integrity algorithm is rekeyed as well.</t>
                			                    		        <t>A ROHCoIPsec initiator MAY signal a value of zero (0x0000) in a ROHC_INTEG attribute.  This corresponds to "NONE" in the "IKEv2 Integrity Algorithm Transform IDs" registry.  The ROHCoIPsec responder MAY select this value by responding to the initiator with a ROHC_INTEG attribute of zero (0x0000).  In this scenario, no integrity algorithm is applied in either direction.</t>
										<t>The ROHC_INTEG attribute is a parameter that is negotiated between two ends.  In other words, the initiator indicates what it supports, the responder selects one of the ROHC_INTEG values proposed and sends the selected value to the initiator.</t>
									</list>
								</t>
				    </list></t>
				</t>
				<t>ROHC_ICV_LEN (Integrity Algorithm Length, AF = 1)
					<list style="empty"><t>The ROHC_ICV_LEN
attribute is an optional attribute.  There MAY be zero or one ROHC_ICV_LEN
attribute contained within the ROHC_SUPPORTED Notify message.  The attribute
specifies the number of Integrity Check Value (ICV) octets the sender expects
to receive on incoming ROHC packets.  The ICV of the negotiated ROHC_INTEG
algorithms MUST be truncated to ROHC_ICV_LEN bytes by taking the first
ROHC_ICV_LEN bytes of the output. Both the initiator and responder announce a
single value for their own ICV length.  The recipient of the ROHC_ICV_LEN
attribute MUST truncate the ICV to the length contained in the message.  If the
value of the ROHC_ICV_LEN attribute is zero, then an ICV MUST NOT be sent.  If
no ROHC_ICV_LEN attribute is sent at all or if the ROHC_ICV_LEN is larger than the
length of the ICV of selected algorithm, then the full ICV length as specified
by the ROHC_INTEG algorithm MUST be sent.</t></list> 
					<t><list style="empty"><t>Note that the ROHC_ICV_LEN attribute is a one-way notification; therefore, different values for ROHC_ICV_LEN may be announced in each direction.</t></list></t>
                        </t>
				<t>MRRU (Maximum Reconstructed Reception Unit, AF = 1)
					<list style="empty"><t>The MRRU attribute is an optional attribute.  There MAY be zero or one MRRU attribute contained within the ROHC_SUPPORTED Notify message.  The attribute value is 2 octets in length.  The attribute specifies the size of the largest reconstructed unit in octets that the ROHCoIPsec decompressor is expected to reassemble from ROHC segments (see Section 5.2.5 of <xref target="ROHCV1" />).  This size includes the Cyclic Redundancy Check (CRC) and the ROHC ICV.   If MRRU is 0 or if no MRRU attribute is sent, segment headers MUST NOT be transmitted on the ROHCoIPsec channel.</t></list>
					<t><list style="empty"><t>Note that the MRRU attribute is a one-way notification; therefore, different values for MRRU may be announced in each direction.</t></list></t>
			      </t>			
				<t>If an unknown ROHC Attribute Type Value is received, it MUST be silently ignored. </t>
			</section>
		</section>
		<section title="ROHC Channel Parameters That Are Implicitly Set">
			<t>The following ROHC channel parameters MUST NOT be signaled:
			<list style="symbols">
			    <t>LARGE_CIDS: This value is implicitly determined by the value of MAX_CID (i.e., if MAX_CID is &lt;= 15, LARGE_CIDS is assumed to be 0).</t>
			    <t>FEEDBACK_FOR: When a pair of SAs is created (one in each direction), the ROHC channel parameter FEEDBACK_FOR MUST be set implicitly to the other SA of the pair (i.e., the SA pointing in the reverse direction).</t>                  
			</list></t>
		</section>
		</section>


		<section title="Security Considerations">
			<t>The ability to negotiate the length of the ROHC ICV may introduce vulnerabilities to the ROHCoIPsec protocol.  Specifically, the capability to signal a short ICV length may result in scenarios where erroneous packets are forwarded into the protected domain.  This security consideration is documented in further detail in Section 6.1.4 of <xref target="ROHCOIPSEC" /> and Section 5 of <xref target="IPSEC-ROHC" />.</t>
			<t>This security consideration can be mitigated by using longer ICVs, but this comes at the cost of additional overhead, which reduces the overall benefits offered by ROHCoIPsec.</t>
		</section>
		<section title="IANA Considerations">
			<t>This document defines a new Notify message (Status
Type).  Therefore, IANA has allocated one value from the "IKEv2 Notify Message
Types" registry to indicate ROHC_SUPPORTED.</t> 
			<t>In addition, IANA has created a new "ROHC
Attribute Types" registry in the "Internet Key Exchange Version 2 (IKEv2)
Parameters" registry <xref target="IKEV2-PARA" />.  Within the "ROHC Attribute
Types" registry, this document allocates the following values:</t> 
			<t><figure title="" suppress-title="false" align="center" alt="" width="" height="">
                                <artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height=""><![CDATA[Registry:
Value        ROHC Attribute Type                        Format Reference
-----------  --------------------------------------     ------ ---------
0            RESERVED                                          [RFC5857]
1            Maximum Context Identifier (MAX_CID)        TV    [RFC5857]
2            ROHC Profile (ROHC_PROFILE)                 TV    [RFC5857]
3            ROHC Integrity Algorithm (ROHC_INTEG)       TV    [RFC5857]
4            ROHC ICV Length in bytes (ROHC_ICV_LEN)     TV    [RFC5857]
5            Maximum Reconstructed Reception Unit (MRRU) TV    [RFC5857]
6-16383      Unassigned                                        
16384-32767  Private use                                       [RFC5857]
                                    ]]></artwork>
					<postamble />
			</figure></t>
           <t>Following the policies outlined in <xref
target="IANA-CONSIDERATIONS" />, the IANA policy for assigning new values for
the ROHC Attribute Types registry shall be Expert Review.</t> 
  		   <t>For registration requests, the responsible IESG Area
Director will appoint the Designated Expert.  The Designated Expert will post a
request to both the ROHC and IPsec mailing lists (or a successor designated by
the Area Director) for comment and review.  The Designated Expert will either
approve or deny the registration request and publish a notice of the decision
to both mailing lists (or their successors), as well as informing IANA.  A
denial notice must be justified by an explanation.</t> 
		</section>
		<section title="Acknowledgments">
			<t>  The authors would like to thank Sean O'Keeffe, James Kohler,
  and Linda Noone of the Department of Defense, as well as Rich
  Espy of OPnet for their contributions and support in the development
  of this document.  </t> 
			<t>  The authors would also like to thank Yoav Nir and Robert A
  Stangarone Jr.: both served as committed document reviewers for this
  specification.</t>
			<t>  In addition, the authors would like to thank the following for their
  numerous reviews and comments to this document:</t>
<t><list style="symbols">
<t>Magnus Westerlund</t>
<t>Stephen Kent</t>
<t>Lars-Erik Jonsson</t>
<t>Pasi Eronen</t>
<t>Jonah Pezeshki</t>
<t>Carl Knutsson</t>
<t>Joseph Touch</t>
<t>David Black</t>
<t>Glen Zorn</t>
</list></t>
<t> Finally, the authors would also like to thank Tom Conkle,
  Michele Casey, and Etzel Brower.</t>
		</section>


	</middle>


	<back>
<?rfc rfcedstyle="no" ?>
		<references title="Normative References">

      <reference anchor="IPSEC">
<front>
<title>Security Architecture for the Internet Protocol</title>
<author initials='S.' surname='Kent' fullname='S. Kent'>
<organization /></author>
<author initials='K.' surname='Seo' fullname='K. Seo'>
<organization /></author>
<date year='2005' month='December' />

<abstract>
<t>This document describes an updated version of the "Security Architecture for IP", which is designed to provide security services for traffic at the IP layer.  This document obsoletes RFC 2401 (November 1998). [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4301' />

<format type='TXT' octets='262123' target='ftp://ftp.rfc-editor.org/in-notes/rfc4301.txt' />
</reference>


	<reference anchor="ROHC">
<front>
<title>The RObust Header Compression (ROHC) Framework</title>
<author initials='K.' surname='Sandlund' fullname='K. Sandlund'>
<organization /></author>
<author initials='G.' surname='Pelletier' fullname='G. Pelletier'>
<organization /></author>
<author initials='L-E.' surname='Jonsson' fullname='L-E. Jonsson'>
<organization /></author>
<date year='2010' month='March' />
<abstract>
<t>The Robust Header Compression (ROHC) protocol provides an efficient,
flexible, and future-proof header compression concept. It is designed to
operate efficiently and robustly over various link technologies with different
characteristics.&lt;/t>&lt;t> The ROHC framework, along with a set of
compression profiles, was initially defined in RFC 3095. To improve and
simplify the ROHC specifications, this document explicitly defines the ROHC
framework and the profile for uncompressed separately. More specifically, the
definition of the framework does not modify or update the definition of the
framework specified by RFC 3095.&lt;/t>&lt;t> This specification obsoletes RFC
4995. It fixes one interoperability issue that was erroneously introduced in
RFC 4995, and adds some minor clarifications. [STANDARDS
TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5795' />
<format type='TXT' octets='89850'
  target='http://www.rfc-editor.org/rfc/rfc5795.txt' />
</reference>



		      <reference anchor="IKEV2">

<front>
<title>Internet Key Exchange (IKEv2) Protocol</title>
<author initials='C.' surname='Kaufman' fullname='C. Kaufman'>
<organization /></author>
<date year='2005' month='December' />
<abstract>
<t>This document describes version 2 of the Internet Key Exchange (IKE) protocol. IKE is a component of IPsec used for performing mutual authentication and establishing and maintaining security associations (SAs).&lt;/t>&lt;t> This version of the IKE specification combines the contents of what were previously separate documents, including Internet Security Association and Key Management Protocol (ISAKMP, RFC 2408), IKE (RFC 2409), the Internet Domain of Interpretation (DOI, RFC 2407), Network Address Translation (NAT) Traversal, Legacy authentication, and remote address acquisition.&lt;/t>&lt;t> Version 2 of IKE does not interoperate with version 1, but it has enough of the header format in common that both versions can unambiguously run over the same UDP port. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4306' />
<format type='TXT' octets='250941' target='ftp://ftp.rfc-editor.org/in-notes/rfc4306.txt' />
</reference>


     <reference anchor="BRA97">
<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>

<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year='1997' month='March' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in
      RFC 2119.


</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>

<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='ftp://ftp.isi.edu/in-notes/rfc2119.txt' />
<format type='HTML' octets='17491' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5777' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>

			
			<reference anchor="ROHCV1">
<front>
<title>RObust Header Compression (ROHC): Framework and four profiles: RTP, UDP, ESP, and uncompressed</title>
<author initials='C.' surname='Bormann' fullname='C. Bormann'>
<organization /></author>
<author initials='C.' surname='Burmeister' fullname='C. Burmeister'>
<organization /></author>
<author initials='M.' surname='Degermark' fullname='M. Degermark'>
<organization /></author>
<author initials='H.' surname='Fukushima' fullname='H. Fukushima'>
<organization /></author>
<author initials='H.' surname='Hannu' fullname='H. Hannu'>
<organization /></author>

<author initials='L-E.' surname='Jonsson' fullname='L-E. Jonsson'>
<organization /></author>
<author initials='R.' surname='Hakenberg' fullname='R. Hakenberg'>
<organization /></author>
<author initials='T.' surname='Koren' fullname='T. Koren'>
<organization /></author>
<author initials='K.' surname='Le' fullname='K. Le'>
<organization /></author>
<author initials='Z.' surname='Liu' fullname='Z. Liu'>
<organization /></author>
<author initials='A.' surname='Martensson' fullname='A. Martensson'>
<organization /></author>
<author initials='A.' surname='Miyazaki' fullname='A. Miyazaki'>
<organization /></author>
<author initials='K.' surname='Svanbro' fullname='K. Svanbro'>
<organization /></author>
<author initials='T.' surname='Wiebke' fullname='T. Wiebke'>

<organization /></author>
<author initials='T.' surname='Yoshimura' fullname='T. Yoshimura'>
<organization /></author>
<author initials='H.' surname='Zheng' fullname='H. Zheng'>
<organization /></author>
<date year='2001' month='July' />
<abstract>
<t>This document specifies a highly robust and efficient header compression scheme for RTP/UDP/IP (Real-Time Transport Protocol, User Datagram Protocol, Internet Protocol), UDP/IP, and ESP/IP (Encapsulating Security Payload) headers. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='3095' />
<format type='TXT' octets='368746' target='ftp://ftp.rfc-editor.org/in-notes/rfc3095.txt' />
</reference>


      <reference anchor="ROHCV2">
<front>
<title>RObust Header Compression Version 2 (ROHCv2): Profiles for RTP, UDP, IP, ESP and UDP-Lite</title>
<author initials='G.' surname='Pelletier' fullname='G. Pelletier'>

<organization /></author>
<author initials='K.' surname='Sandlund' fullname='K. Sandlund'>
<organization /></author>
<date year='2008' month='April' />
<abstract>
<t>This document specifies ROHC (Robust Header Compression) profiles that efficiently compress RTP/UDP/IP (Real-Time Transport Protocol, User Datagram Protocol, Internet Protocol), RTP/UDP-Lite/IP (User Datagram Protocol Lite), UDP/IP, UDP-Lite/IP, IP and ESP/IP (Encapsulating Security Payload) headers.&lt;/t>&lt;t> This specification defines a second version of the profiles found in RFC 3095, RFC 3843 and RFC 4019; it supersedes their definition, but does not obsolete them.&lt;/t>&lt;t> The ROHCv2 profiles introduce a number of simplifications to the rules and algorithms that govern the behavior of the compression endpoints. It also defines robustness mechanisms that may be used by a compressor implementation to increase the probability of decompression success when packets can be lost and/or reordered on the ROHC channel. Finally, the ROHCv2 profiles define their own specific set of header formats, using the ROHC formal notation. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5225' />
<format type='TXT' octets='246120' target='ftp://ftp.rfc-editor.org/in-notes/rfc5225.txt' />
</reference>


<!--draft-ietf-rohc-ipsec-extensions-hcoipsec -->

      <reference anchor="IPSEC-ROHC">
<front>
<title>IPsec Extensions to Support Robust Header Compression over IPsec</title>

<author initials='E' surname='Ertekin' fullname='Emre Ertekin'>
    <organization />
</author>

<author initials='C' surname='Christou' fullname='Chris Christou'>
    <organization />
</author>

<author initials='C' surname='Bormann' fullname='Carsten Bormann'>
    <organization />
</author>

<date month='April' year='2010' />

<abstract><t>Integrating Robust Header Compression (ROHC) with IPsec (ROHCoIPsec) offers the combined benefits of IP security services and efficient bandwidth utilization.  However, in order to integrate ROHC with IPsec, extensions to the SPD and SAD are required.  This document describes the IPsec extensions required to support ROHCoIPsec.</t></abstract>

</front>

<seriesInfo name='RFC' value='5858' />

</reference>



			<reference anchor="IANA-CONSIDERATIONS">
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'>
<organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'>
<organization /></author>
<date year='2008' month='May' />
<abstract>
<t>Many protocols make use of identifiers consisting of constants and other well-known values. Even after a protocol has been defined and deployment has begun, new values may need to be assigned (e.g., for a new option type in DHCP, or a new encryption or authentication transform for IPsec). To ensure that such quantities have consistent values and interpretations across all implementations, their assignment must be administered by a central authority. For IETF protocols, that role is provided by the Internet Assigned Numbers Authority (IANA).&lt;/t>&lt;t> In order for IANA to manage a given namespace prudently, it needs guidelines describing the conditions under which new values can be assigned or when modifications to existing values can be made. If IANA is expected to play a role in the management of a namespace, IANA must be given clear and concise instructions describing that role. This document discusses issues that should be considered in formulating a policy for assigning values to a namespace and provides guidelines for authors on the specific text that must be included in documents that place demands on IANA.&lt;/t>&lt;t> This document obsoletes RFC 2434. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract></front>

<seriesInfo name='BCP' value='26' />
<seriesInfo name='RFC' value='5226' />
<format type='TXT' octets='66160' target='ftp://ftp.rfc-editor.org/in-notes/rfc5226.txt' />
</reference>
</references>

		<references title="Informative References">

<!--draft-ietf-rohc-hcoipsec-13 -->
			<reference anchor="ROHCOIPSEC">
<front>
<title>Integration of Header Compression over IPsec Security Associations</title>

<author initials='E' surname='Ertekin' fullname='Emre  Ertekin'>
    <organization />
</author>
<author initials='R' surname='Jasani' fullname='Rohan Jasani'>
    <organization />
</author>
<author initials='C' surname='Christou' fullname='Chris Christou'>
    <organization />
</author>
<author initials='C' surname='Bormann' fullname='Carsten Bormann'>
    <organization />
</author>



<date month='April' year='2010' />

<abstract><t>Internet Protocol security mechanisms, such as IP Security (IPsec) [IPSEC], provides various security services for IP traffic. However, the benefits offered by IPsec may come at the cost of increased overhead. This document identifies a methodology for integrating header compression (HC) over IPsec (HCoIPsec). HCoIPsec proposes to reduce the amount of packet overhead associated with the transmission of traffic over tunnel mode security associations.</t></abstract>

</front>

<seriesInfo name='RFC' value='5856' />

</reference>


			<reference anchor="ROHC-PPP">
<front>
<title>Robust Header Compression (ROHC) over PPP</title>
<author initials='C.' surname='Bormann' fullname='C. Bormann'>
<organization /></author>
<date year='2002' month='April' />
<abstract>
<t>This document describes an option for negotiating the use of robust header compression (ROHC) on IP datagrams transmitted over the Point- to-Point Protocol (PPP).  It defines extensions to the PPP Control Protocols for IPv4 and IPv6. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='3241' />
<format type='TXT' octets='24424' target='ftp://ftp.rfc-editor.org/in-notes/rfc3241.txt' />
</reference>


			<reference anchor="ROHCPROF" target="http://www.iana.org">
				<front>
					<title>RObust Header Compression (ROHC) Profile Identifiers</title>
					<author surname="IANA"><organization/></author>
					<date/>
				</front>
				
			</reference>

			<reference anchor="CRYPTO-ALG">
<front>
<title>Cryptographic Algorithm Implementation Requirements for Encapsulating Security Payload (ESP) and Authentication Header (AH)</title>
<author initials='V.' surname='Manral' fullname='V. Manral'>
<organization /></author>
<date year='2007' month='April' />
<abstract>
<t>The IPsec series of protocols makes use of various cryptographic algorithms in order to provide security services.  The Encapsulating Security Payload (ESP) and the Authentication Header (AH) provide two mechanisms for protecting data being sent over an IPsec Security Association (SA).  To ensure interoperability between disparate implementations, it is necessary to specify a set of mandatory-to-implement algorithms to ensure that there is at least one algorithm that all implementations will have available.  This document defines the current set of mandatory-to-implement algorithms for ESP and AH as well as specifying algorithms that should be implemented because they may be promoted to mandatory at some future time. [STANDARDS TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4835' />
<format type='TXT' octets='21492' target='ftp://ftp.rfc-editor.org/in-notes/rfc4835.txt' />
</reference>

			<reference anchor="IKEV2-PARA" target="http://www.iana.org">
				<front>
					<title>Internet Key Exchange Version 2 (KEv2) Parameters</title>
					<date/>
					<author surname="IANA">
            				<organization />
          				</author>
		            	</front>
			</reference>		
		</references>
<?rfc rfcedstyle="yes" ?>
	</back>
</rfc>
