<?xml version="1.0" encoding="US-ASCII"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC5234 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml">
<!ENTITY RFC5322 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5322.xml">
<!ENTITY RFC5598 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5598.xml">
<!ENTITY RFC6376 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6376.xml">
<!ENTITY RFC6377 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6377.xml">
<!ENTITY RFC6532 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6532.xml">
<!ENTITY RFC7208 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7208.xml">
<!ENTITY RFC7405 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7405.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC7942 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7942.xml">
<!ENTITY RFC7489 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7489.xml">
<!ENTITY RFC7960 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7960.xml">
<!ENTITY RFC8601 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8601.xml">
<!ENTITY RFC8616 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8616.xml">

]>

<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" number="8617" category="exp" submissionType="IETF" consensus="yes">

  <front>
    <title abbrev="The ARC Protocol">The Authenticated Received Chain (ARC) Protocol</title>

    <author initials="K." surname="Andersen" fullname="Kurt Andersen">
      <organization>LinkedIn</organization>
      <address>
        <postal>
          <street>1000 West Maude Ave</street>
          <city>Sunnyvale</city>
          <region>California</region>
          <code>94085</code>
          <country>United States of America</country>
        </postal>
        <email>kurt+ietf@drkurt.com</email>
      </address>
    </author>
    <author initials="B." surname="Long" fullname="Brandon Long" role="editor">
      <organization>Google</organization>
      <address>
        <email>blong@google.com</email>
      </address>
    </author>
    <author initials="S." surname="Blank" fullname="Seth Blank" role="editor">
      <organization>Valimail</organization>
      <address>
        <email>seth@valimail.com</email>
      </address>
    </author>
    <author initials="M." surname="Kucherawy" fullname="Murray Kucherawy" role="editor">
      <organization>TDP</organization>
      <address>
        <email>superuser@gmail.com</email>
      </address>
    </author>

    <date year="2019" month="July"/>

    <area>art</area>
    <workgroup>DMARC Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

<keyword>DKIM</keyword>
<keyword>DMARC</keyword>
<keyword>signature</keyword>
<keyword>email</keyword>
<keyword>domain authentication</keyword>
<keyword>email authentication</keyword>

    <abstract>


<t>The Authenticated Received Chain (ARC) protocol provides an authenticated
"chain of custody" for a message, allowing each entity that handles the message
to see what entities handled it before and what the message's
authentication assessment was at each step in the handling.</t>

<t>ARC allows Internet Mail Handlers to attach assertions of message
authentication assessment to individual messages. As messages traverse ARC-enabled
Internet Mail Handlers, additional ARC assertions can be attached to messages
to form ordered sets of ARC assertions that represent the authentication assessment
at each step of the message-handling paths.</t>


<t>ARC-enabled Internet Mail Handlers can process sets of ARC assertions to inform
message disposition decisions, identify Internet Mail Handlers that might
break existing authentication mechanisms, and convey original authentication
assessments across trust boundaries.</t>


    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">

<t>The utility of widely deployed email authentication technologies such as Sender
Policy Framework (SPF) <xref target="RFC7208"/> and DomainKeys Identified Mail (DKIM)
<xref target="RFC6376"/> is impacted by the processing of Internet Mail by intermediate
handlers. This impact is thoroughly documented in the defining documents for
SPF and DKIM and further discussed in <xref target="RFC6377"/> and <xref target="RFC7960"/>.</t>

<t>Domain-based Message Authentication, Reporting, and Conformance (DMARC) <xref target="RFC7489"/> also relies upon SPF and DKIM authentication mechanisms.
Failures of authentication caused by the actions of intermediate handlers can
cause legitimate mail to be incorrectly rejected or misdirected.</t>

<t>Authenticated Received Chain (ARC) creates a mechanism for individual Internet
Mail Handlers to add their authentication assessment to a message's
ordered set of handling results. ARC encapsulates the authentication assessment in a
DKIM signature derivative to grant other handlers the ability to verify the
authenticity of the individual assessment assertion as well as the aggregate
set and sequence of results.</t>

<t>Ordered sets of authentication assessments can be used by ARC-enabled Internet Mail
Handlers to inform message-handling disposition, identify where alteration
of message content might have occurred, and provide additional trace
information for use in understanding message-handling paths.</t>

</section>
<section anchor="general-concepts" title="General Concepts">

<t>ARC is loosely based on concepts from evidence collection. Evidence is usually
collected, labeled, stored, and transported in specific ways to preserve the
state of evidence and to document all processing steps.</t>

<section anchor="evidence" title="Evidence">

<t>In ARC's situation, the "evidence" is a message's authentication assessment at any
point along the delivery path between origination and final delivery.
Determination of message authentication can be affected when intermediate
handlers modify message content (header fields and/or body content), route
messages through unforeseen paths, or change envelope information.</t>

<t>The authentication assessment for a message is determined upon receipt of a
message and documented in the Authentication-Results header field(s). ARC
extends this mechanism to survive transit through intermediary Administrative Management Domains (ADMDs).</t>

<t>Because the first-hand determination of an authentication assessment can never
be reproduced by other handlers, the assertion of the authentication assessment
is more akin to testimony by a verifiable party than to hard evidence, which can be
independently evaluated.</t>

</section>
<section anchor="custody" title="Custody">

<t>"Custody" refers to when an Internet Mail Handler processes a message. When a
handler takes custody of a message, the handler becomes a custodian and
attaches its own evidence (authentication assessment upon receipt) to the
message if it is ARC enabled. Evidence is added in such a way that future
handlers can verify the authenticity of both evidence and custody.</t>

</section>
<section anchor="chain-of-custody" title="Chain of Custody">

<t>The "chain of custody" of ARC is the entire set of evidence and custody that
travels with a message.</t>

</section>
<section anchor="validation-of-chain-of-custody" title="Validation of Chain of Custody">

<t>Any ARC-enabled Internet Mail Handler can validate the entire set of custody
and the authentication assessments asserted by each party to yield a valid chain of
custody. If the evidence-supplying custodians can be trusted, then the
validated chain of custody describes the (possibly changing) authentication
assessment as the message traveled through various custodians.</t>

<t>Even though a message's authentication assessment might have changed, the validated
chain of custody can be used to determine if the changes (and the custodians
responsible for the changes) can be tolerated.</t>

</section>
</section>
<section anchor="terminology-and-definitions" title="Terminology and Definitions">

<t>This section defines terms used in the rest of the document.</t>

<t>Readers should to be familiar with the contents, core concepts, and definitions
found in <xref target="RFC5598"/>. The potential roles of transit services in the delivery of
email are directly relevant.</t>

<t>Language, syntax (including some ABNF constructs), and concepts are imported
from DKIM <xref target="RFC6376"/>. Specific references to DKIM are made throughout this
document.  The following terms are imported from <xref target="RFC5598"/>:</t>

<t><list style="symbols">
  <t>Administrative Management Domain (ADMD), Section 2.3</t>
  <t>Message Transfer Agent (MTA), Section 4.3.2</t>
  <t>Message Submission Agent (MSA), Section 4.3.1</t>
  <t>Message Delivery Agent (MDA), Section 4.3.3</t>
</list></t>

<t>Syntax descriptions use ABNF <xref target="RFC5234"/> <xref target="RFC7405"/>.</t>

<t>    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
    NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
    "MAY", and "OPTIONAL" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.

</t>

<section anchor="arc-set-defn" title="ARC Set">

<t><xref target="hdr-defn"/> introduces three (3) ARC header fields that are added to a
message by an ARC-enabled Internet Mail Handler. Together, these three header
fields compose a single "ARC Set". An ARC Set provides the means for an
Internet Mail Handler to attach an authentication assessment to a message in a manner
that can be verified by future handlers. A single message can contain multiple
ARC Sets.</t>

<t>In general concept terms, an ARC Set represents Evidence and Custody.</t>

</section>
<section anchor="arc-chain-defn" title="Authenticated Received Chain (ARC)">

<t>The sequence of ARC Sets attached to a message at a given time is called the
"Authenticated Received Chain" or "ARC". An Authenticated Received Chain is the record of
individual authentication assessments as a message traverses through
ARC-participating ADMDs.</t>

<t>The first attachment of an ARC Set to a message causes an Authenticated
Received Chain to be created. Additional attachments of ARC Sets cause the
Authenticated Received Chain to be extended.</t>

<t>In general concept terms, an Authenticated Received Chain represents a chain of custody.</t>

</section>
<section anchor="internet-mail-handlers-intermediaries" title="Internet Mail Handlers / Intermediaries">

<t>Internet Mail Handlers process and deliver messages across the Internet and
include MSAs, MTAs, MDAs, gateways, and mailing lists as defined in <xref target="RFC5598"/>.</t>

<t>Throughout this document, the term "intermediaries" refers to both regular
MTAs as well as delivery/reposting agents such as mailing lists covered within
the scope of transit services per <xref target="RFC5598"/>.</t>

<t>"Intermediaries" and "Internet Mail Handlers" are used synonymously throughout 
this document.</t>

</section>
<section anchor="authentication-assessment" title="Authentication Assessment">

<t>The authentication assessment that is affixed to a message as part of each ARC
Set consists of the "authres-payload" <xref target="RFC8601"/>. For the integrity of an
ARC Set, the authentication assessment only needs to be properly encapsulated
within the ARC Set as defined in <xref target="hdr-defn"/>. The accuracy or syntax of the
authres-payload field does not affect the validity of the ARC Chain itself.</t>

</section>
<section anchor="sign_v_seal" title="Signing vs. Sealing">

<t>Signing is the process of affixing a digital signature to a message as a header
field, such as when a DKIM-Signature (as in <xref target="RFC6376"/>, Section 2.1), an AMS, or an AS is added. Sealing is when an ADMD affixes a complete and valid ARC Set to
a message to create or continue an Authenticated Received Chain.</t>

</section>
<section anchor="sealer" title="Sealer">

<t>A Sealer is an Internet Mail Handler that attaches a complete and valid ARC Set
to a message.</t>

<t>In general concept terms, a Sealer adds its testimony (assertion of authentication
assessment) and proof of custody to the chain of custody.</t>

</section>
<section anchor="validator" title="Validator">

<t>A Validator is an ARC-enabled Internet Mail Handler that evaluates an
Authenticated Received Chain for validity and content. The process of
evaluation of the individual ARC Sets that compose an Authenticated Received
Chain is described in <xref target="validate-actions"/>.</t>

<t>In general concept terms, a Validator inspects the chain of custody to
determine the content and validity of individual evidence supplied by
custodians.</t>

</section>
<section anchor="imported-abnf-tokens" title="Imported ABNF Tokens">

<t>The following ABNF tokens are imported:</t>

<t><list style="symbols">
  <t>tag-list (<xref target="RFC6376"/>, Section 3.2)</t>
  <t>authres-payload (<xref target="RFC8601"/>, Section 2.2)</t>
  <t>CFWS (<xref target="RFC5322"/>, Section 3.2.2)</t>
</list></t>

</section>
<section anchor="common-abnf-tokens" title="Common ABNF Tokens">

<t>The following ABNF tokens are used elsewhere in this document:</t>

<figure><artwork><![CDATA[
position     = 1*2DIGIT                         ; 1 - 50
instance     = [CFWS] %s"i" [CFWS] "=" 
               [CFWS] position 
chain-status = ("none" / "fail" / "pass")
seal-cv-tag  = %s"cv" [CFWS] "=" 
               [CFWS] chain-status
]]></artwork></figure>

</section>
</section>
<section anchor="protocol-elements" title="Protocol Elements">

<section anchor="hdr-defn" title="ARC Header Fields">

<t>ARC introduces three new header fields. The syntax for new header fields adapts
existing specifications. This document only describes where ARC-specific
changes in syntax and semantics differ from existing specifications.</t>

<section anchor="aar-defn" title="ARC-Authentication-Results (AAR)">

<t>The ARC-Authentication-Results (AAR) header field records the message
authentication assessment as processed by an ARC-participating ADMD at message
arrival time.</t>

<t>In general concept terms, the AAR header field is where evidence is recorded by
a custodian.</t>

<t>The AAR header field is similar in syntax and semantics to an
Authentication-Results field <xref target="RFC8601"/>, with two (2) differences:</t>

<t><list style="symbols">
  <t>the name of the header field itself and</t>
  <t>the presence of the instance tag. Additional information on the instance
tag can be found in <xref target="i-defn"/>.</t>
</list></t>

<t>The formal ABNF for the AAR header field is:</t>

<figure><artwork><![CDATA[
arc-info = instance [CFWS] ";" authres-payload
arc-authres-header = "ARC-Authentication-Results:" [CFWS] arc-info
]]></artwork></figure>

<t>Because there is only one AAR allowed per ARC Set, the AAR MUST contain the
combined authres-payload with all of the authentication results from within the
participating ADMD, regardless of how many Authentication-Results header fields
are attached to the message.</t>

</section>
<section anchor="ams-defn" title="ARC-Message-Signature (AMS)">

<t>The ARC-Message-Signature (AMS) header field allows an ARC-participating ADMD
to convey some responsibility (custodianship) for a message and possible
message modifications to future ARC-participating custodians.</t>

<t>In general concept terms, the AMS header field identifies a custodian.</t>

<t>The AMS header field has the same syntax and semantics as the DKIM-Signature
field <xref target="RFC6376"/>, with three (3) differences:</t>

<t><list style="symbols">
  <t>the name of the header field itself;</t>
  <t>no version tag ("v") is defined for the AMS header field. As required 
for undefined
tags (in <xref target="RFC6376"/>), if seen, a version tag MUST be ignored; and</t>
  <t>the "i" (Agent or User Identifier (AUID)) tag is not imported from DKIM; instead, this tag is replaced 
by the instance tag as defined in <xref target="i-defn"/>.</t>
</list></t>

<t>ARC places no requirements on the selectors and/or domains used for the AMS
header field signatures.</t>

<t>The formal ABNF for the AMS header field is:</t>

<figure><artwork><![CDATA[
arc-ams-info = instance [CFWS] ";" tag-list
arc-message-signature = "ARC-Message-Signature:" [CFWS] arc-ams-info
]]></artwork></figure>

<t>To reduce the chances of accidental invalidation of AMS signatures:</t>

<t><list style="symbols">
  <t>AMS header fields are added by ARC-participating ADMDs as messages exit the
ADMD. AMS header fields SHOULD be attached so that any modifications made by
the ADMD are included in the signature of the AMS header field.</t>

  <t>Authentication-Results header fields MUST NOT be included in AMS signatures
as they are likely to be deleted by downstream ADMDs (per 
<xref target="RFC8601"/>, Section 5).</t>

  <t>ARC-related header fields (ARC-Authentication-Results, ARC-Message-Signature,
and ARC-Seal) MUST NOT be included in the list of header fields covered by the
signature of the AMS header field.</t>
</list></t>

<t>To preserve the ability to verify the integrity of a message, the signature of
the AMS header field SHOULD include any DKIM-Signature header fields already
present in the message.</t>

</section>
<section anchor="as-defn" title="ARC-Seal (AS)">

<t>The AS header field permits ARC-participating
ADMDs to verify the integrity of AAR header fields and corresponding AMS
header fields.</t>

<t>In general concept terms, the AS header field is how custodians bind their
authentication assessments (testimonials) into a chain of custody so that
Validators can inspect individual evidence and custodians.</t>

<t>The AS header field is similar in syntax and semantics to DKIM-Signature
header fields <xref target="RFC6376"/>, with the following differences:</t>

<t><list style="symbols">
  <t>the "i" (AUID) tag is not imported from DKIM; instead, this tag is replaced 
by the instance tag as defined in <xref target="i-defn"/>;</t>

  <t>the signature of the AS header field does not cover the body of the
message; therefore, there is no "bh" tag. The signature of the AS header 
field only covers specific header fields as defined in <xref target="as-hdrs"/>;</t>

  <t>no body canonicalization is performed as the AS signature does not cover the
body of a message;</t>

  <t>only "relaxed" header field canonicalization (<xref target="RFC6376"/>, Section 3.4.2) is used;</t>

  <t>the only supported tags are "i" (from <xref target="i-defn"/> of this document), and
"a", "b", "d", "s", and "t" from <xref target="RFC6376"/>, Section 3.5. Note especially that
the DKIM "h" tag is NOT allowed and, if found, MUST result in a cv status
of "fail" (for more information, see <xref target="as-hdrs"/>); and</t>

  <t>an additional tag, "cv" ("seal-cv-tag" in the ARC-Seal ABNF definition), is
used to communicate the Chain Validation Status to subsequent ADMDs.</t>
</list></t>

<t>ARC places no requirements on the selectors and/or domains used for the AS
header field signatures.</t>

<t>The formal ABNF for the AS header field is:</t>

<figure><artwork><![CDATA[
arc-as-info = instance [CFWS] ";" tag-list
arc-seal = "ARC-Seal:" [CFWS] arc-as-info
]]></artwork></figure>

</section>
<section anchor="internationalized-email-eai" title="Internationalized Email (EAI)">

<t>In internationalized messages <xref target="RFC6532"/>, many header fields can contain UTF-8
as well as ASCII text.  The changes for EAI are all inherited from DKIM as
updated by <xref target="RFC8616"/> and Authentication-Results (A-R) as updated
in <xref target="RFC8601"/>, but they are called out here for emphasis.</t>

<t>In all ARC header fields, the d= and s= tags can contain U-labels.  In all tags,
non-ASCII characters need not be quoted in dkim-quoted-printable.</t>

<t>The AAR header allows UTF-8 in the same places that 
Authentication-Results does, as described in 
<xref target="RFC8601"/>.</t>

</section>
</section>
<section anchor="arc-set" title="ARC Set">

<t>An "ARC Set" is a single collection of three ARC header fields (AAR, AMS, and AS).
ARC header fields of an ARC Set share the same "instance" value.</t>

<t>By adding all ARC header fields to a message, an ARC Sealer adds an ARC Set to a
message. A description of how Sealers add an ARC Set to a message is found in
<xref target="sealer-actions"/>.</t>

<section anchor="i-defn" title="Instance Tags">

<t>Instance tags describe which ARC header fields belong to an ARC Set. Each ARC
header field of an ARC Set shares the same instance tag value.</t>

<t>Instance tag values are integers that begin at 1 and are incremented by each
addition of an ARC Set.  Through the incremental values of instance tags, an ARC
Validator can determine the order in which ARC Sets were added to a message.</t>

<t>Instance tag values can range from 1-50 (inclusive).</t>

<t><spanx style="emph">INFORMATIONAL</spanx>: The upper limit of 50 was picked based on some initial
observations reported by early working group members. The value was chosen
to balance the risk of excessive header field growth (see <xref target="big-hf-risk"/>) against
expert opinion regarding the probability of long-tail, but non-looping,
multiple-intermediary mail flows.  Longer ARC Chains will also impose a load on
Validators and DNS to support additional verification steps.  Observed
quantities of "Received" header fields were also considered in establishing this
as an experimental initial value.</t>

<t>Valid ARC Sets MUST have exactly one instance of each ARC header field (AAR,
AMS, and AS) for a given instance value and signing algorithm.</t>

<t>For handling multiple signing algorithms, see <xref target="ARC-MULTI"/>.</t>

</section>
</section>
<section anchor="authenticated-received-chain" title="Authenticated Received Chain">

<t>An Authenticated Received Chain is an ordered collection of ARC Sets. As ARC
Sets are enumerated sets of ARC header fields, an Authenticated Received Chain
represents the output of message authentication assessments along the handling path
of ARC-enabled processors.</t>


<t>Authentication assessments determined at each step of the ARC-enabled
handling path are present in an Authenticated Received Chain in the form of AAR
header fields. The ability to verify the identity of message handlers and the
integrity of message content is provided by AMS header fields. AS header fields
allow message handlers to validate the assertions, order, and sequence of the
Authenticated Received Chain itself.</t>

<t>In general concept terms, an Authenticated Received Chain represents a
message's chain of custody. Validators can consult a message's chain of custody
to gain insight regarding each custodian of a message and the evidence
collected by each custodian.</t>

</section>
<section anchor="cv-defn" title="Chain Validation Status">

<t>The state of the Authenticated Received Chain at a specific processing step is
called the "Chain Validation Status". Chain Validation Status information is
communicated in several ways:</t>

<t><list style="symbols">
  <t>as the AS header field in the "cv" tag and</t>
  <t>as part of the Authentication-Results and AAR header field(s).</t>
</list></t>

<t>Chain Validation Status has one of three possible values:</t>

<t><list style="symbols">
  <t>none: There was no Authenticated Received Chain on the message when it
arrived for validation. Typically, this occurs when a message is received
directly from a message's original Message Transfer Agent (MTA) or Message
Submission Agent (MSA), or from an upstream Internet Mail Handler that is not
participating in ARC handling.</t>

  <t>fail: The message contains an Authenticated Received Chain whose validation
failed.</t>

  <t>pass: The message contains an Authenticated Received Chain whose validation
succeeded.</t>
</list></t>

</section>
</section>
<section anchor="protocol-actions" title="Protocol Actions">

<t>ARC-enabled Internet Mail Handlers generally act as both ARC Validators (when
receiving messages) and ARC Sealers (when sending messages onward, not originated
locally).</t>

<t>An Authenticated Received Chain with a Chain Validation Status of "pass" (or "none")
allows Internet Mail Handlers to ascertain:</t>

<t><list style="symbols">
  <t>all ARC-participating ADMDs that claim responsibility for handling (and
possibly modifying) the message in transit and</t>

  <t>the authentication assessments of the message as determined by each ADMD 
(from AAR header fields).</t>
</list></t>

<t>With this information, Internet Mail Handlers MAY inform local policy
decisions regarding disposition of messages that experience authentication
failure due to intermediate processing.</t>

<section anchor="sealer-actions" title="Sealer Actions">

<t>To "seal" a message, an ARC Sealer adds an ARC Set (the three ARC header fields
AAR, AMS, and AS) to a message. All ARC header fields in an ARC Set share the
same instance tag value.</t>

<t>To perform sealing (aka to build and attach a new ARC Set), the following
actions must be taken by an ARC Sealer when presented with a message:</t>

<t><list style="numbers">
  <t>All message modifications (including adding a DKIM-Signature header field(s)) 
  MUST be performed before sealing.</t>

  <t>If the message already contains an Authenticated Received Chain with the
  most recent AS reporting "cv=fail", there is no need to proceed and the
  algorithm stops here.</t>

  <t>Calculate the instance value. If the message already contains an Authenticated Received Chain, 
  the instance value is 1 more than the highest instance number
  found in the Authenticated Received Chain. If no Authenticated Received Chain
  exists, the instance value is 1.</t>

  <t>Using the calculated instance value, generate and attach a complete ARC Set
  to the message as follows:  <list style="format %C.">
      <t>Generate and attach an ARC-Authentication-Results header field as defined in <xref target="aar-defn"/>.</t>

      <t>Generate and attach an ARC-Message-Signature header field as defined in <xref target="ams-defn"/>.</t>

      <t>Generate and attach an ARC-Seal header field using the AS definition found in <xref target="as-defn"/>, 
 the prescribed headers defined in <xref target="as-hdrs"/>, and the Chain Validation Status as 
 determined during ARC validation.</t>
    </list></t>
</list></t>

<section anchor="as-hdrs" title="Header Fields to Include in ARC-Seal Signatures">

<t>The ARC-Seal is generated in a manner similar to how DKIM-Signature header
fields are added
to messages (<xref target="RFC6376"/>, Section 3.7), with explicit requirements on the header fields and ordering of those fields.</t>

<t>The signature of an AS header field signs a canonicalized form of the ARC Set
header field values. The ARC Set header field values are supplied to the hash
function in increasing instance order, starting at 1, and include the ARC Set
being added at the time of sealing the message.</t>

<t>Within an ARC Set, header fields are supplied to the hash function in the
following order:</t>

<t><list style="numbers">
  <t>ARC-Authentication-Results</t>
  <t>ARC-Message-Signature</t>
  <t>ARC-Seal</t>
</list></t>

<t>Note that when an Authenticated Received Chain has failed validation, the
signing scope for the ARC-Seal is modified as specified in <xref target="cv-fail-case"/>.</t>

</section>
<section anchor="cv-fail-case" title="Marking and Sealing &quot;cv=fail&quot; (Invalid) Chains">

<t>In the case of a failed Authenticated Received Chain, the header fields
included in the signature scope of the AS header field b= value MUST only
include the ARC Set header fields created by the MTA that detected the
malformed chain, as if this newest ARC Set was the only set present.</t>

<t><spanx style="emph">INFORMATIONAL</spanx>: This approach is mandated to handle the case of a malformed or
otherwise invalid Authenticated Received Chain. There is no way to generate a
deterministic set of AS header fields (<xref target="as-hdrs"/>) in most cases of invalid
chains.</t>

</section>
<section anchor="only-one-authenticated-received-chain-per-message" title="Only One Authenticated Received Chain per Message">

<t>A message can have only one Authenticated Received Chain on it at a time. Once
broken, the chain cannot be continued, as the chain of custody is no longer
valid, and responsibility for the message has been lost. For further discussion
of this topic and the design restriction that prevents chain continuation or
re-establishment, see <xref target="ARC-USAGE"/>.</t>

</section>
<section anchor="broad-ability-to-seal" title="Broad Ability to Seal">

<t>ARC is not solely intended for perimeter MTAs. Any Internet Mail Handler
MAY seal a message by adding a complete ARC Set, whether or not they have 
modified or are aware of having modified the message. For additional
information, see <xref target="trust-boundaries"/>.</t>

</section>
<section anchor="sealing-is-always-safe" title="Sealing Is Always Safe">

<t>The utility of an Authenticated Received Chain is limited to very specific cases.
Authenticated Received Chains are designed to provide additional information to
an Internet Mail Handler when evaluating messages for delivery in the context
of authentication failures. Specifically:</t>

<t><list style="symbols">
  <t>Properly adding an ARC Set to a message does not damage or invalidate an
existing Authenticated Received Chain.</t>
  <t>Sealing an Authenticated Received Chain when a message has not been modified
does not negatively affect the chain.</t>
  <t>Validating a message exposes no new threat vectors (see 
<xref target="security-consider"/>).</t>
  <t>An ADMD may choose to seal all inbound messages whether or not a message has
been modified or will be retransmitted.</t>
</list></t>

</section>
</section>
<section anchor="validate-actions" title="Validator Actions">

<t>A Validator performs the following steps, in sequence, to process an
Authenticated Received Chain. Canonicalization, hash functions, and signature
validation methods are imported from <xref target="RFC6376"/>, Section 5.</t>

<t><list style="numbers">
  <t>Collect all ARC Sets currently attached to the message.
  <list style="symbols">
      <t>If there are none, the Chain Validation Status is "none", and the algorithm 
stops here.</t>

      <t>The maximum number of ARC Sets that can be attached to a message is 50. If 
more than the maximum number exist, the Chain Validation Status is "fail", and 
the algorithm stops here.</t>

      <t>In the following algorithm, the maximum discovered ARC instance value is 
referred to as "N".</t>
    </list></t>

  <t>If the Chain Validation Status of the highest instance value ARC Set is "fail",
  then the Chain Validation Status is "fail", and the algorithm stops here.</t>

  <t>Validate the structure of the Authenticated Received Chain. A valid ARC has
  the following conditions:  <list style="format %C.">
      <t>Each ARC Set MUST contain exactly one each of the three ARC header fields
(AAR, AMS, and AS).</t>

      <t>The instance values of the ARC Sets MUST form a continuous sequence from
1..N with no gaps or repetition.</t>

      <t>The "cv" value for all ARC-Seal header fields MUST NOT be "fail". For ARC
Sets with instance values &gt; 1, the values MUST be "pass". For the ARC Set
with instance value = 1, the value MUST be "none".</t>
    </list>
<list style="symbols">
      <t>If any of these conditions are not met, the Chain Validation Status is "fail",
and the algorithm stops here.</t>
    </list></t>

  <t>Validate the AMS with the greatest instance value (most recent). If
  validation fails, then the Chain Validation Status is "fail", and the algorithm
  stops here.</t>

  <t><spanx style="emph">OPTIONAL</spanx>: Determine the "oldest-pass" value from the ARC Set by validating
  each prior AMS beginning with N-1 and proceeding in decreasing order to the
  AMS with the instance value of 1:  <list style="format %C.">
  
    <t>If an AMS fails to validate (for instance value "M"), then set the
  oldest-pass value to the lowest AMS instance value that passed (M+1), and go to
  the next step (there is no need to check any other (older) AMS header fields). This 
  does not affect the validity of the Authenticated Received Chain.</t>

      <t>If all AMS header fields verify, set the oldest-pass value to zero (0).</t>
    </list></t>

  <t>Validate each AS beginning with the greatest instance value and proceeding
  in decreasing order to the AS with the instance value of 1. If any AS fails to
  validate, the Chain Validation Status is "fail", and the algorithm stops here.</t>

  <t>If the algorithm reaches this step, then the Chain Validation Status is
  "pass", and the algorithm is complete.</t>
</list></t>

<t>The end result of this validation algorithm SHOULD be included within the
Authentication-Results header field for the ADMD.</t>

<t>As with a DKIM signature (<xref target="RFC6376"/>, Section 6.3) that fails verification, a
message with an Authenticated Received Chain with a Chain Validation Status of
"fail" MUST be treated the same as a message with no Authenticated Received Chain.</t>

<t><spanx style="emph">INFORMATIONAL</spanx>: Recipients of an invalid or failing Authenticated Received Chain can use that information as part of a wider handling context. ARC adoption
cannot be assumed by intermediaries; many intermediaries will continue to
modify messages without adding ARC seals.</t>

<section anchor="all-failures-are-permanent" title="All Failures Are Permanent">

<t>Authenticated Received Chains represent the traversal of messages through one
or more intermediaries. All errors, including DNS failures, become
unrecoverable and are considered permanent.</t>

<t>Any error validating an Authenticated Received Chain results in a Chain
Validation Status of "fail". For further discussion of this topic and the design
restriction that prevents chain continuation or re-establishment, see
<xref target="ARC-USAGE"/>.</t>

</section>
<section anchor="responding-to-arc-validation-failures-during-the-smtp-transaction" title="Responding to ARC Validation Failures during the SMTP Transaction">

<t>If an ARC Validator determines that the incoming message fails ARC validation,
the Validator MAY signal the breakage through the extended SMTP response code
5.7.29 ("ARC validation failure") and the corresponding SMTP basic response code. 
Because ARC failures are likely only to be detected in the context of other
underlying authentication mechanism failures, Validators MAY use the more 
general 5.7.26 ("Multiple authentication checks failed") instead of the 
ARC-specific code.</t>

</section>
</section>
</section>
<section anchor="communication-of-validation-results" title="Communication of Validation Results">

<t>Chain Validation Status (described in <xref target="cv-defn"/>) is communicated via
Authentication-Results (and AAR) header fields using the authentication method "arc".
This authentication method is described in <xref target="iana-auth"/>.</t>

<t>If necessary data is available, the ptypes and properties defined in 
<xref target="iana-ptypes"/> SHOULD be recorded in an Authentication-Results header field:</t>

<t><list style="symbols">
  <t>smtp.remote-ip - The address of the connection-initiating SMTP server, 
from which the message is being relayed.</t>

  <t>header.oldest-pass - The instance number of the oldest AMS that still
validates, or 0 if all pass.</t>
</list></t>

</section>
<section anchor="use-cases" title="Use Cases">

<t>This section explores several message handling use cases that are addressed
by ARC.</t>

<section anchor="trust-boundaries" title="Communicate Authentication Assessment across Trust Boundaries">

<t>When an intermediary ADMD adds an ARC Set to a message's Authenticated Received Chain (or creates the initial ARC Set), the ADMD communicates its authentication
assessment to the next ARC-participating ADMD in the message-handling path.</t>

<t>If ARC-enabled ADMDs are trusted, Authenticated Received Chains can be used to
bridge administrative boundaries.</t>

<section anchor="message-scanning-services" title="Message-Scanning Services">

<t>Message services are available to perform anti-spam, anti-malware, and
anti-phishing scanning. Such services typically remove malicious content,
replace HTTP links in messages with sanitized links, and/or attach footers to
messages advertising the abilities of the message-scanning service. These
modifications almost always break signature-based authentication (such as
DKIM).</t>

<t>Scanning services typically require clients to point MX records of an Internet
domain to the scanning service. Messages destined for the Internet domain are
initially delivered to the scanning service. Once scanning is performed,
messages are then routed to the client's own mail-handling infrastructure.
Rerouting messages in this way almost always breaks path-based authentication
(such as SPF).</t>

<t>Message-scanning services can attach Authenticated Received Chains to messages
to communicate authentication assessment into client ADMDs. Clients can then
benefit from the message-scanning service while processing messages as if the
client's infrastructure were the original destination of the Internet domain's
MX record.</t>

</section>
<section anchor="multi-tier-mta-processing" title="Multi-tier MTA Processing">

<t>A large message-processing infrastructure is often divided into several
processing tiers that can break authentication information between tiers. For
example, a large site may maintain a cluster of MTAs dedicated to connection
handling and enforcement of IP-based reputation filtering. A secondary cluster
of MTAs may be dedicated and optimized for content-based processing of
messages.</t>

<t>Authenticated Received Chains can be used to communicate authentication assessment
between processing tiers.</t>

</section>
<section anchor="mailing-lists" title="Mailing Lists">

<t>Mailing lists take delivery of messages and repost them to subscribers. A full
description of authentication-related mailing list issues can be found in
<xref target="RFC7960"/>, Section 3.2.3.</t>

<t>Mailing list services can implement ARC to convey the authentication
assessment of posted messages sent to the list's subscriber base. The ADMDs of the
mailing list subscribers can then use the Authenticated Received Chain to
determine the authentication assessment of the original message before mailing list
handling.</t>

</section>
</section>
<section anchor="inform-message-disposition-decisions" title="Inform Message Disposition Decisions">

<t>Intermediaries often break authentication through content modification,
interfere with path-based authentication (such as SPF), and strip
authentication results (if an MTA removes Authentication-Results header
fields).</t>

<t>Authenticated Received Chains allow ARC Validators to:</t>

<t><list style="numbers">
  <t>identify ARC-enabled ADMDs that break authentication while processing
  messages and</t>
  <t>gain extended visibility into the authentication-preserving abilities of
  ADMDs that relay messages into ARC-enabled ADMDs.</t>
</list></t>

<t>Through the collection of ARC-related data, an ADMD can identify handling paths
that have broken authentication.</t>

<t>An Authenticated Received Chain allows an Internet Mail Handler to potentially
base decisions of message disposition on authentication assessments provided by
different ADMDs.</t>

<section anchor="dmarc-local-policy-overrides" title="DMARC Local Policy Overrides">

<t>DMARC introduces a policy model where Domain Owners can request email receivers
to reject or quarantine messages that fail DMARC alignment. Interoperability
issues between DMARC and indirect email flows are documented in <xref target="RFC7960"/>.</t>

<t>Authenticated Received Chains allow DMARC processors to consider authentication
assessments provided by other ADMDs. As a matter of local policy, a DMARC processor
MAY choose to accept the authentication assessments provided by an Authenticated Received Chain when determining if a message is DMARC compliant.</t>

<t>When an Authenticated Received Chain is used to determine message disposition,
the DMARC processor can communicate this local policy decision to Domain Owners
as described in <xref target="dmarc-rpt"/>.</t>

</section>
<section anchor="dmarc-rpt" title="DMARC Reporting">

<t>DMARC-enabled receivers indicate when ARC validation influences DMARC-related
local policy decisions. When an ARC-enabled handler generates a DMARC report,
it MAY indicate the influence of ARC on their local policy decision(s) 
by adding a reason of "local_policy" with a comment string
(per <xref target="RFC7489"/>, Appendix C) containing a list of data
discovered during ARC validation, which at a minimum includes:</t>

<t><list style="symbols">
  <t>the Chain Validation Status,</t>
  <t>the domain and selector for each AS, and</t>
  <t>the originating IP address from the first ARC Set.</t>
</list></t>

<figure><artwork><![CDATA[
EXAMPLE:

<policy_evaluated>
  <disposition>none</disposition>
  <dkim>fail</dkim>
  <spf>fail</spf>
  <reason>
   <type>local_policy</type>
   <comment>arc=pass as[2].d=d2.example as[2].s=s2 
     as[1].d=d1.example as[1].s=s3 
     remote-ip[1]=2001:DB8::1A</comment>
  </reason>
</policy_evaluated>
]]></artwork></figure>

<t>In the example DMARC XML reporting fragment above, data relating to specific
validated ARC Sets are enumerated using array syntax (e.g., "as[2]" means an AS
header field with an instance value of 2). d2.example is the sealing domain for
ARC Set #2 (i=2), and d1.example is the sealing domain for ARC Set #1 (i=1).</t>

<t>Depending on the reporting practices of intermediate message handlers, Domain
Owners may receive multiple DMARC reports for a single message. Receivers of 
DMARC reports should be aware of this behavior and make the necessary
accommodations.</t>

</section>
</section>
</section>
<section anchor="privacy-consider" title="Privacy Considerations">

<t>The Authenticated Received Chain provides a verifiable record of the handlers
for a message. This record may include personally identifiable information such
as an IP address(es) and domain names. Such information is also included in existing
non-ARC-related header fields such as the "Received" header fields.</t>

</section>
<section anchor="security-consider" title="Security Considerations">

<t>The Security Considerations of <xref target="RFC6376"/> and <xref target="RFC8601"/> apply directly
to this specification.</t>

<t>As with other domain-based authentication technologies (such as SPF, DKIM, and
DMARC), ARC makes no claims about the semantic content of messages.

A received message with a validated ARC Chain provides evidence (at instance N) that: 

  <list style="numbers">
  <t>the sealing domain (ARC-Seal[N] d=) emitted the message with this body,</t>
  <t>the authentication assessment reported in the ARC-Authentication-Results was
     determined upon receipt of the corresponding message at the sealing domain, and</t>
  <t>the preceding ARC Chain (1..N-1) (with the validation status as reported in 
     the cv field) existed on the message that was received and assessed.</t>
</list></t>

<section anchor="big-hf-risk" title="Increased Header Field Size">

<t>Inclusion of Authenticated Received Chains into messages may cause issues for
older or constrained MTAs due to increased total header field size. Large header
field blocks, in general, may cause failures to deliver or other outage scenarios for
such MTAs. ARC itself would not cause problems.</t>

</section>
<section anchor="dns-impact" title="DNS Operations">

<t>The validation of an Authenticated Received Chain composed of N ARC Sets can
require up to 2*N DNS queries (not including any DNS redirection mechanisms that can increase the total number of queries). This leads to two
considerations:</t>

<t><list style="numbers">
  <t>An attacker can send a message to an ARC participant with a concocted
sequence of ARC Sets bearing the domains of intended victims, and all of them
will be queried by the participant until a failure is discovered. DNS caching
and the difficulty of forging the signature values should limit the extent of
this load to domains under control of the attacker. Query traffic pattern
analysis may expose information about a downstream validating ADMD
infrastructure.</t>

  <t>DKIM only performs one DNS query per signature, while ARC can introduce many
(per chain). Absent caching, slow DNS responses can cause SMTP timeouts and
backlogged delivery queues on validating systems. This could be exploited as a
DoS attack.</t>
</list></t>

</section>
<section anchor="message-content-suspicion" title="Message Content Suspicion">

<t>Recipients are cautioned to treat messages bearing Authenticated Received Chains with the same suspicion applied to all other messages. This includes
appropriate content scanning and other checks for potentially malicious
content.</t>

<t>ARC authenticates the identity of some email-handling actors.  It does not make
any assessment of their trustworthiness.</t>

<t>Just as passing message authentication is not an indication of message safety,
forwarding that information through the mechanism of ARC is also not an
indication of message safety.  Even if all ARC-enabled ADMDs are trusted, ADMDs
may have become compromised, may miss unsafe content, or may not properly
authenticate messages.</t>

</section>
<section anchor="message-sealer-suspicion" title="Message Sealer Suspicion">

<t>Recipients are cautioned to treat every Sealer of the ARC Chain with suspicion.
Just as with a validated DKIM signature, responsibility for message handling is
attributed to the sealing domain, but whether or not that Sealer is a malicious
actor is out of scope of the authentication mechanism.  Since ARC aids message
delivery in the event of an authentication failure, ARC Sealers should be
treated with suspicion, so that a malicious actor cannot seal spam or other
fraudulent messages to aid their delivery, too.</t>

</section>
<section anchor="replay-attacks" title="Replay Attacks">

<t>Since ARC inherits heavily from DKIM, it has similar attack vectors. In
particular, the replay attack described in <xref target="RFC6376"/>, Section 8.6 is
potentially amplified by ARC's chained statuses. In an ARC replay attack, a
malicious actor would take an intact and passing ARC Chain and resend it
to many recipients without making any modifications that invalidate the latest
AMS or AS. The impact to a receiver would be more DNS lookups and signature
evaluations. The scope of this attack can be limited by caching DNS queries
and following the same signing scope guidance from
<xref target="RFC6376"/>, Section 5.4.1.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document defines one new authentication method and several status
   codes (<xref target="iana-auth"/>), new ptypes and properties (<xref target="iana-ptypes"/>), three new
   headers fields (<xref target="iana-headers"/>), and a new enumerated status code (<xref target="new-enhanced-status-code-arc-validation"/>).</t>

<section anchor="iana-auth" 
title="Update to Email Authentication Result Names Registry">

<t>Per this document, IANA has added one authentication method with three codes to the IANA "Email
Authentication Result Names" registry:</t>

<t><list style="symbols">
<t>Auth Method: arc<vspace />
Code: "none", "pass", "fail"<vspace />
Specification: RFC 8617, <xref target="cv-defn"/><vspace />
Status: active</t>
</list></t>

</section>
<section anchor="iana-ptypes" 
title="Update to Email Authentication Methods Registry">

<t>Per this document, IANA has added the following to the "Email
Authentication Methods" registry, which is defined in <xref target="RFC8601"/>:</t>

<t><list style="symbols">
  <t>Method: arc<vspace />
Definition:  RFC 8617, <xref target="communication-of-validation-results"/><vspace />
ptype: smtp<vspace />
Property: remote-ip<vspace />
Value: IP address (v4 or v6) of originating SMTP connection<vspace />
Status: active<vspace />
Version: 1</t>

  <t>Method: arc<vspace />
Definition:  RFC 8617, <xref target="communication-of-validation-results"/><vspace />
ptype: header<vspace />
Property: oldest-pass<vspace />
Value: The instance id of the oldest validating AMS or 0 if they all pass 
  (see <xref target="validate-actions"/>)<vspace />
Status: active<vspace />
Version: 1</t>
</list></t>

</section>
<section anchor="iana-headers" 
title="New Header Fields in Permanent Message Header Field Registry">

<t>Per this document, IANA has added the following three new header fields to the
"Permanent Message Header Field Names" registry:</t>

<t><list style="symbols">
  <t>Header field name: ARC-Seal<vspace />
Applicable protocol: mail<vspace />
Status: experimental<vspace />
Author/Change controller: IETF<vspace />
Specification document(s): RFC 8617<vspace />
Related information: RFC 6376</t>

  <t>Header field name: ARC-Message-Signature<vspace />
Applicable protocol: mail<vspace />
Status: experimental<vspace />
Author/Change controller: IETF<vspace />
Specification document(s): RFC 8617<vspace />
Related information: RFC 6376</t>

  <t>Header field name: ARC-Authentication-Results<vspace />
Applicable protocol: mail<vspace />
Status: experimental<vspace />
Author/Change controller: IETF<vspace />
Specification document(s): RFC 8617<vspace />
Related information: RFC 8601</t>
</list></t>

</section>
<section anchor="new-enhanced-status-code-arc-validation" title="New Status Code in Enumerated Status Codes Registry">


<t>Per this document, IANA has added the following value to the "Enumerated Status Codes"
registry:</t>

<t><list style="symbols">
  <t>Code: X.7.29<vspace />
Sample Text: ARC validation failure<vspace />
Associated basic status code: 550<vspace />
Description: This status code may be returned when
   a message fails ARC validation.<vspace />
Reference: RFC 8617<vspace />
Submitter: K.&nbsp;Andersen<vspace />
Change controller: IESG</t>
</list></t>

</section>
</section>
<section anchor="exp-consider" title="Experimental Considerations">

<t>The ARC protocol is designed to address common interoperability issues
introduced by intermediate message handlers.  Interoperability issues are
described in <xref target="RFC6377"/> and <xref target="RFC7960"/>.</t>

<t>As the ARC protocol is implemented by Internet Mail Handlers over time, the
following should be evaluated in order to determine the success of the protocol
in accomplishing the intended benefits.</t>

<section anchor="success-consideration" title="Success Consideration">

<t>In an attempt to deliver legitimate messages that users desire, many receivers
use heuristic-based methods to identify messages that arrive via indirect
delivery paths.</t>

<t>ARC will be a success if the presence of Authenticated Received Chains allows
for improved decision making when processing legitimate messages, specifically 
resulting in equal or better delivery rates than achieved through the use of 
heuristic approaches.</t>

</section>
<section anchor="failure-considerations" title="Failure Considerations">

<t>ARC should function without introducing significant new vectors for abuse (see
<xref target="security-consider"/>). If unforeseen vectors are enabled by ARC, 
this protocol will be a failure. 

Note that the weaknesses inherent in the mail
protocols ARC is built upon (such as DKIM replay attacks and other known
issues) are not new vectors that can be attributed to this specification.</t>

</section>
<section anchor="open-questions" title="Open Questions">

<t>The following open questions are academic and have no clear answer at the time
this document was published. However, additional deployments should be
able to gather the necessary data to answer some or all of them.</t>

<section anchor="value-of-the-arc-seal-as-header-field" title="Value of the ARC-Seal (AS) Header Field">

<t>Data should be collected to show if the AS provides value beyond the
AMS for either making delivery decisions or catching
malicious actors trying to craft or replay malicious chains.</t>

</section>
<section anchor="usage-andor-signals-from-multiple-selectors-andor-domains-in-arc-sets" title="Usage and/or Signals from Multiple Selectors and/or Domains in ARC Sets">

<t>Any selectors and/or (sub)domains (under the control of the sealing ADMD) may be 
used for ARC header field signatures.</t>

<t>While implementers may choose to use various selectors and/or
domains for ARC Set header fields, no compelling argument for or against such
usage has been made within the working group. As such, we have chosen to allow
maximum freedom for the experimental definition of this protocol.</t>

<t>Wider deployment experience and higher volumes of traffic may show whether this
is useful.</t>

</section>
<section anchor="dns-overhead" title="DNS Overhead">

<t>Longer Authenticated Received Chains will require more queries to retrieve the
keys for validating the chain. While this is not believed to be a security
issue (see <xref target="dns-impact"/>), it is unclear how much overhead will truly
be added.  This is similar to some of the initial processing and query load
concerns that were debated at the time of the DKIM specification development.</t>

<t>Data should be collected to better understand usable length and distribution of
lengths found in valid Authenticated Received Chains along with the DNS
impact of processing Authenticated Received Chains.</t>

<t>An effective operational maximum will have to be developed through deployment
experience in the field.</t>

</section>
<section anchor="what-trace-information-is-valuable" title="What Trace Information Is Valuable?">

<t>There are several edge cases where the information in the AAR can make the
difference between message delivery or rejection. For example, if there is a
well-known mailing list that seals with ARC but doesn't do its own initial DMARC
enforcement, an Internet Mail Handler with this knowledge could make a delivery
decision based upon the authentication information it sees in the corresponding
AAR header field.</t>

<t>Certain trace information in the AAR is useful/necessary in the construction of
DMARC reports.</t>

<t>Further, certain receivers believe the entire set of trace information would be valuable
to feed into machine learning systems to identify fraud and/or provide other
signals related to message delivery.</t>

<t>At this point, however, it is unclear what trace information will be valuable
for all receivers, regardless of size.</t>

<t>Data should be collected on what trace information receivers are using that
provides useful signals that affect deliverability and what portions of the
trace data are left untouched or provide no useful information.</t>

<t>Since many such systems are intentionally proprietary or confidential to
prevent gaming by abusers, it may not be viable to reliably answer this
particular question. The evolving nature of attacks can also shift the
landscape of "useful" information over time.</t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC5234;
&RFC5322;
&RFC5598;
&RFC6376;
&RFC6377;
&RFC6532;
&RFC7208;
&RFC7405;
&RFC8174;
&RFC8601;
&RFC8616;

    </references>

    <references title='Informative References'>

&RFC7489;
&RFC7960;


<!-- draft-ietf-dmarc-arc-usage: ID Exists -->
<reference anchor='ARC-USAGE'>
<front>
<title>Recommended Usage of the Authenticated Received Chain (ARC)</title>
<author initials='S' surname='Jones' fullname='Steven Jones' role="editor">
    <organization />
</author>
<author initials='K' surname='Andersen' fullname='Kurt Andersen'>
    <organization />
</author>
<date month='April' year='2019' />
</front>
<seriesInfo name='Work in Progress,' value='draft-ietf-dmarc-arc-usage-07'/>
</reference>


<!-- draft-ietf-dmarc-arc-multi: ID Exists-->
<reference anchor='ARC-MULTI'>
<front>
<title>Using Multiple Signing Algorithms with the ARC (Authenticated Received Chain) Protocol</title>

<author initials='K' surname='Andersen' fullname='Kurt Andersen'>
    <organization />
</author>

<author initials='S' surname='Blank' fullname='Seth Blank' role="editor">
    <organization />
</author>

<author initials='J' surname='Levine' fullname='John Levine' role="editor">
    <organization />
</author>

<date month='March' year='2019' />

</front>

<seriesInfo name='Work in Progress,' value='draft-ietf-dmarc-arc-multi-03'/>

</reference>


    </references>


<section anchor="design-requirements" title="Design Requirements">

<t>The specification of the ARC framework is driven by the following high-level
goals, security considerations, and practical operational requirements.</t>

<section anchor="primary-design-criteria" title="Primary Design Criteria">

<t><list style="symbols">
  <t>Provide a verifiable "chain of custody" for email messages;</t>
  <t>Not require changes for originators of email;</t>

  <t>Support the verification of the ARC header field set by each hop in the
handling chain;</t>

  <t>Work at Internet scale; and</t>

  <t>Provide a trustable mechanism for the communication of Authentication-Results
across trust boundaries.</t>

</list></t>

</section>
<section anchor="out-of-scope" title="Out of Scope">

<t>ARC is not a trust framework. Users of the ARC header fields are cautioned against
making unsubstantiated conclusions when encountering a "broken" ARC sequence.</t>

</section>
</section>
<section anchor="example-usage" title="Example Usage">

<t>The following message is an example of one that has passed through several 
intermediary handlers, some of which have modified the message and others which
have not:</t>

<figure><artwork><![CDATA[
Return-Path: <jqd@d1.example>
Received: from example.org (example.org [208.69.40.157])
    by gmail.example with ESMTP id d200mr22663000ykb.93.1421363207
    for <fmartin@example.com>; Thu, 14 Jan 2015 15:02:40 -0800 (PST)
Received: from segv.d1.example (segv.d1.example [72.52.75.15])
    by lists.example.org (8.14.5/8.14.5) with ESMTP id t0EKaNU9010123
    for <arc@example.org>; Thu, 14 Jan 2015 15:01:30 -0800 (PST)
    (envelope-from jqd@d1.example)
Received: from [2001:DB8::1A] (w-x-y-z.dsl.static.isp.example [w.x.y.z])
    (authenticated bits=0)
    by segv.d1.example with ESMTP id t0FN4a8O084569;
    Thu, 14 Jan 2015 15:00:01 -0800 (PST)
    (envelope-from jqd@d1.example)
Received: from mail-ob0-f188.google.example 
    (mail-ob0-f188.google.example [208.69.40.157]) by 
    clochette.example.org with ESMTP id d200mr22663000ykb.93.1421363268
    for <fmartin@example.org>; Thu, 14 Jan 2015 15:03:15 -0800 (PST)
ARC-Seal: i=3; a=rsa-sha256; cv=pass; d=clochette.example.org; s=
        clochette; t=12345; b=CU87XzXlNlk5X/yW4l73UvPUcP9ivwYWxyBWcVrRs7
        +HPx3K05nJhny2fvymbReAmOA9GTH/y+k9kEc59hAKVg==
ARC-Message-Signature: i=3; a=rsa-sha256; c=relaxed/relaxed; d=
        clochette.example.org; h=message-id:date:from:to:subject; s=
        clochette; t=12345; bh=KWSe46TZKCcDbH4klJPo+tjk5LWJnVRlP5pvjXFZY
        LQ=; b=o71vwyLsK+Wm4cOSlirXoRwzEvi0vqIjd/2/GkYFYlSd/GGfKzkAgPqxf
        K7ccBMP7Zjb/mpeggswHjEMS8x5NQ==
ARC-Authentication-Results: i=3; clochette.example.org; spf=fail
    smtp.from=jqd@d1.example; dkim=fail (512-bit key)
    header.i=@d1.example; dmarc=fail; arc=pass (as.2.gmail.example=pass,
    ams.2.gmail.example=pass, as.1.lists.example.org=pass,
    ams.1.lists.example.org=fail (message has been altered))
Authentication-Results: clochette.example.org; spf=fail
    smtp.from=jqd@d1.example; dkim=fail (512-bit key)
    header.i=@d1.example; dmarc=fail; arc=pass (as.2.gmail.example=pass, 
    ams.2.gmail.example=pass, as.1.lists.example.org=pass, 
    ams.1.lists.example.org=fail (message has been altered))
ARC-Seal: i=2; a=rsa-sha256; cv=pass; d=gmail.example; s=20120806; t=
        12345; b=Zpukh/kJL4Q7Kv391FKwTepgS56dgHIcdhhJZjsalhqkFIQQAJ4T9BE
        8jjLXWpRNuh81yqnT1/jHn086RwezGw==
ARC-Message-Signature: i=2; a=rsa-sha256; c=relaxed/relaxed; d=
        gmail.example; h=message-id:date:from:to:subject; s=20120806; t=
        12345; bh=KWSe46TZKCcDbH4klJPo+tjk5LWJnVRlP5pvjXFZYLQ=; b=CVoG44
        cVZvoSs2mMig2wwqPaJ4OZS5XGMCegWqQs1wvRZJS894tJM0xO1RJLgCPsBOxdA5
        9WSqI9s9DfyKDfWg==
ARC-Authentication-Results: i=2; gmail.example; spf=fail
    smtp.from=jqd@d1.example; dkim=fail (512-bit key)
    header.i=@example.org; dmarc=fail; arc=pass 
    (as.1.lists.example.org=pass, ams.1.lists.example.org=pass)
ARC-Seal: i=1; a=rsa-sha256; cv=none; d=lists.example.org; s=dk-lists;
         t=12345; b=TlCCKzgk3TrAa+G77gYYO8Fxk4q/Ml0biqduZJeOYh6+0zhwQ8u/
        lHxLi21pxu347isLSuNtvIagIvAQna9a5A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=
        lists.example.org; h=message-id:date:from:to:subject; s=
        dk-lists; t=12345; bh=KWSe46TZKCcDbH4klJPo+tjk5LWJnVRlP5pvjXFZYL
        Q=; b=DsoD3n3hiwlrN1ma8IZQFgZx8EDO7Wah3hUjIEsYKuShRKYB4LwGUiKD5Y
        yHgcIwGHhSc/4+ewYqHMWDnuFxiQ==
ARC-Authentication-Results: i=1; lists.example.org; spf=pass 
    smtp.mfrom=jqd@d1.example; dkim=pass (512-bit key) 
    header.i=@d1.example; dmarc=pass
DKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; d=d1.example; h=
        message-id:date:from:to:subject; s=origin2015; bh=bIxxaeIQvmOBdT
        AitYfSNFgzPP4=; b=qKjd5fYibKXWWIcMKCgRYuo1vJ2fD+IAQPjX+uamXIGY2Q
        0HjQ+Lq3/yHzG3JHJp6780/nKQPOWt2UDJQrJkEA==
Message-ID: <54B84785.1060301@d1.example>
Date: Thu, 14 Jan 2015 15:00:01 -0800
From: John Q Doe <jqd@d1.example>
To: arc@dmarc.example
Subject: [List 2] Example 1

Hey gang,
This is a test message.
--J.
]]></artwork></figure>

</section>


<section anchor="acknowledgements" title="Acknowledgments" numbered="no">

<t>This document originated with the work of OAR-Dev Group.</t>

<t>The authors thank all of the OAR-Dev and the subsequent DMARC WG for the
ongoing help and thought-provoking discussions from all the participants,
especially J.&nbsp;Trent Adams, Marc Bradshaw, Alex Brotman, Greg Colburn, Dave Crocker, Tim Draegen, Mark Eissler, Peter Goldstein, Bron
Gondwana, Mike Hammer, Mike Jones, Steve Jones, Scott Kitterman, Barry Leiba, Franck Martin, John Rae-Grant,
 Paul Rock, Gene Shuman, Terry Zink, and Elizabeth Zwicky.</t>

<t>Grateful appreciation is extended to the people who provided feedback through
the arc-discuss mailing list.</t>

</section>
  
</back>

</rfc>

