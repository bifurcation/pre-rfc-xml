<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc3279 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.3279.xml">
<!ENTITY rfc4055 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.4055.xml">
<!ENTITY rfc5280 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml">
<!ENTITY rfc5480 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.5480.xml">
<!ENTITY rfc5758 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.5758.xml">
<!ENTITY rfc8017 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.8017.xml">
<!ENTITY rfc8174 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<rfc number="8603" category="info" submissionType="independent"
     ipr="trust200902">

<?rfc strict="yes" ?>
<?rfc comments="no" ?> 
<?rfc inline="no" ?>
<?rfc editing="no" ?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="2"?> 
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
    
<front>
    <title abbrev="CNSA Suite Certificate and CRL Profile">Commercial National
    Security Algorithm (CNSA) Suite Certificate and Certificate Revocation
    List (CRL) Profile</title>

    <author fullname="Michael Jenkins" initials="M." surname="Jenkins">
        <organization abbrev="NSA">National Security Agency</organization>
        <address><email>mjjenki@nsa.gov</email></address>
    </author>

    <author fullname="Lydia Zieglar" initials="L." surname="Zieglar">
        <organization abbrev="NSA">National Security Agency</organization>
        <address><email>llziegl@tycho.ncsc.mil</email></address>
    </author>
    
    <date month="May" year="2019"/>
         

<keyword>NSA, CNSA, NSS, certificate, crl</keyword>


    <abstract>
        <t>This document specifies a base profile for X.509 v3 Certificates
        and X.509 v2 Certificate Revocation Lists (CRLs) for use with the
        United States National Security Agency's Commercial National Security
        Algorithm (CNSA) Suite. The profile applies to
        the capabilities, configuration, and operation of all components of US
        National Security Systems that employ such X.509 certificates. US
        National Security Systems are described in NIST Special Publication
        800-59. It is also appropriate for all other US Government systems
        that process high-value information. It is made publicly available for
        use by developers and operators of these and any other system
        deployments.
	</t>
    </abstract>

</front>



<middle>

    <section anchor="intro" title="Introduction">

    <t>This document specifies a base profile for X.509 v3 Certificates and
    X.509 v2 Certificate Revocation Lists (CRLs) for use by applications that
    support the United States National Security Agency's Commercial National
    Security Algorithm (CNSA) Suite <xref target="CNSA" />. The profile
    applies to the capabilities, configuration, and operation of all
    components of US National Security Systems that employ such X.509
    certificates. US National Security Systems are described in NIST Special
    Publication 800-59 <xref target="SP80059" />. It is also appropriate for
    all other US Government systems that process high-value information. It is
    made publicly available for use by developers and operators of these and
    any other system deployments.
    </t>

    <t>This document does not define any new cryptographic algorithm suite;
    instead, it defines a CNSA-compliant profile of "Internet X.509 Public Key
    Infrastructure Certificate and Certificate Revocation List (CRL) Profile"
    <xref
    target="RFC5280"/>. It applies to all CNSA Suite solutions that make use
    of X.509 v3 Certificates or X.509 v2 CRLs. The reader is assumed to have
    familiarity with RFC 5280. All MUST-level requirements of RFC 5280 apply
    throughout this profile and are generally not repeated here. In cases
    where a MUST-level requirement is repeated for emphasis, the text notes
    the requirement is "in adherence with RFC 5280". This profile contains
    changes that elevate some SHOULD-level options in RFC 5280 to MUST-level
    and also contains changes that elevate some
    MAY-level options in RFC 5280 to SHOULD-level or MUST-level. All options
    from RFC 5280 that are not listed in this profile
    remain at the requirement level of RFC 5280.</t>
    
    <t>The reader is also assumed to have familiarity with these documents:
    <list style="symbols">
        <t><xref target="RFC5480"/> for the syntax and semantics for the
        Subject Public Key Information field in certificates that support
        Elliptic Curve Cryptography,</t>
        <t><xref target="RFC5758"/> for the algorithm identifiers for Elliptic
        Curve Digital Signature Algorithm (ECDSA),</t>
        <t><xref target="RFC3279"/> for the syntax and semantics for the
        Subject Public Key Information field in certificates that support RSA
        Cryptography, and</t>
        <t><xref target="RFC4055"/> for the algorithm identifiers for RSA
        Cryptography with the SHA-384 hash function.</t>
    </list>
    </t>

    </section>


   <section anchor="cnsa" title="The Commercial National Security Algorithm Suite">

   <t>The National Security Agency (NSA) profiles commercial cryptographic
   algorithms and protocols as part of its mission to support secure,
   interoperable communications for US Government National Security
   Systems. To this end, it publishes guidance both to assist with
   transitioning the United States Government to new algorithms and to provide
   vendors,
   and the Internet community in general, with information concerning their
   proper use and configuration.</t>

   <t>Recently, cryptographic transition plans have become overshadowed by the
   prospect of the development of a cryptographically relevant quantum
   computer. 

The NSA has established the Commercial National Security Algorithm
   (CNSA) Suite to provide vendors and IT users near-term flexibility in
   meeting their cybersecurity interoperability requirements. The purpose
   behind this
   flexibility is to avoid vendors and customers making two major transitions
   in a relatively short time frame, as we anticipate a need to shift to
   quantum-resistant cryptography in the near future.</t>



   <t>The NSA is authoring a set of RFCs, including this one, to provide
   updated
   guidance concerning the use of certain commonly available commercial
   algorithms in IETF protocols. These RFCs can be used in conjunction with
   other RFCs and cryptographic guidance (e.g., NIST Special Publications) to
   properly protect Internet traffic and data-at-rest for US Government
   National Security Systems.</t>

   </section> 


    <section title="Conventions">
        
        <t>
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
    NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
    "MAY", and "OPTIONAL" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>

    </section>


    <section anchor="reqts" title="General Requirements and Assumptions">

    <t>The goal of this document is to define a base set of requirements for
    certificates and CRLs to support interoperability among CNSA Suite
    solutions. Specific communities, such as those associated with US National
    Security Systems, may define community profiles that further restrict
    certificate and CRL contents by mandating the presence of extensions that
    are optional in this base profile, defining new optional or critical
    extension types, or restricting the values and/or presence of fields
    within existing extensions. However, communications between distinct
    communities MUST conform with the requirements specified in this document
    when interoperability is desired. Applications may add requirements for
    additional non-critical extensions, but they MUST NOT assume that a remote
    peer will be able to process them.</t>

        <section anchor="implement" title="Implementing the CNSA Suite">

        <t>Every CNSA Suite certificate MUST use the X.509 v3 format and
	contain one of the following:
        <list style="symbols">
          <t>An ECDSA-capable signature verification key using curve P-384,
	  or</t>
          <t>An ECDH-capable (Elliptic Curve Diffie-Hellman) key establishment
	  key using curve P-384, or</t>
          <t>An RSA-capable signature verification key using RSA-3072 or
	  RSA&nbhy;4096, or</t>
          <t>An RSA-capable key transport key using RSA-3072 or RSA-4096.</t>
        </list>
        </t>

        <t>The signature applied to all CNSA Suite certificates and CRLs MUST
	be made with a signing key that is either generated on the curve
	P-384, or is an RSA-3072 or RSA-4096 key. The SHA-384 hashing
	algorithm MUST be used for all certificate and CRL signatures
	irrespective of the type of key used.</t>

        <t>The RSA exponent "e" MUST satisfy 2^16&lt;e&lt;2^256 and be odd per
	<xref target="FIPS186" />.</t>

        <t>The requirements of this document are not intended to preclude use
        of RSASSA-PSS signatures. However, Certification Authorities (CAs)
	conforming with this document
	will not issue
        certificates specifying that algorithm for subject public
        keys. Protocols that use RSASSA-PSS should be configured to use
        certificates that specify rsaEncryption as the subject public key
        algorithm. Protocols that use these keys with RSASSA-PSS signatures
        must use the following parameters: the hash algorithm (used for both
        mask generation and signature generation) must be SHA-384, the mask
        generation function 1 from <xref target="RFC8017" /> must be used, and
        the salt length must be 48 octets. </t>

        </section> 

        <section anchor="OIDs" title="CNSA Suite Object Identifiers">

            <section anchor="OID-ecdsa" title="CNSA Suite Object Identifiers
	      for ECDSA">

            <t>The primary Object Identifier (OID) structure for the CNSA
	    Suite is as follows per <xref target="X962" />, <xref
	    target="SEC2" />, <xref target="RFC5480" />, and <xref
	    target="RFC5758"/>.

               <figure><artwork>
      ansi-X9-62 OBJECT IDENTIFIER ::= {
         iso(1) member-body(2) us(840) 10045 }
         
      certicom-arc OBJECT IDENTIFIER ::= {
         iso(1) identified-organization(3) certicom(132) }
         
      id-ecPublicKey OBJECT IDENTIFIER ::= { 
         ansi-X9-62 keyType(2) 1 }
      
      secp384r1 OBJECT IDENTIFIER ::= { 
         certicom-arc curve(0) 34 }
      
      id-ecSigType OBJECT IDENTIFIER ::= { 
         ansi-X9-62 signatures(4) }
      
      ecdsa-with-SHA384 OBJECT IDENTIFIER ::= { 
         id-ecSigType ecdsa-with-SHA2(3) 3 }
       </artwork></figure>
            </t>
            </section> 

            <section anchor="OID-rsa" title="CNSA Suite Object Identifiers for
					     RSA">
	       
            <t>The primary OID structure for CNSA Suite is as follows per
	    <xref target="RFC3279" />.

               <figure><artwork>
      pkcs-1 OBJECT IDENTIFIER ::= { 
         iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) 1 }
         
      rsaEncryption OBJECT IDENTIFIER ::= {
         pkcs-1 1}
       </artwork></figure>
            </t>

            <t>The rsaEncryption OID is intended to be used in the algorithm
            field of a value of type AlgorithmIdentifier. The parameters field
            MUST have ASN.1 type NULL for this algorithm identifier.</t>

            <t>The object identifier used to identify the PKCS #1 version 1.5
	    signature algorithm with SHA-384 is per <xref target="RFC4055" />:

               <figure><artwork>
      sha384WithRSAEncryption  OBJECT IDENTIFIER  ::=  { 
         pkcs-1 12 }
       </artwork></figure>
            </t>

            </section> 

        </section>

      </section> 

    <section anchor="base-cert" title="CNSA Suite Base Certificate Required Values">

    <t>This section specifies changes to the basic requirements in <xref
    target="RFC5280"/> for applications that create or use CNSA Suite
    certificates. Note that RFC 5280 has varying mandates for marking
    extensions as critical or non-critical.  This profile changes some of
    those mandates for extensions that are included in CNSA Suite
    certificates.</t>

        <section anchor="sigalg" title="signatureAlgorithm">

            <section anchor="sigalg-ecdsa" title="ECDSA">

            <t>For ECDSA, the algorithm identifier used by the CNSA Suite is
	        as described in <xref target="RFC5758" /> and <xref
		target="X962" />:
            <list>
              <t>1.2.840.10045.4.3.3 for ecdsa-with-SHA384</t>
            </list></t>

            <t>The parameters MUST be absent as per <xref target="RFC5758"
	    />.</t>

            </section> 

            <section anchor="sigalg-rsa" title="RSA">

            <t>For RSA, the algorithm identifier used by the CNSA Suite is as
	        described in <xref target="RFC4055" />:
            <list>
              <t>1.2.840.113549.1.1.12 for sha384WithRSAEncryption.</t>
            </list></t>
     
            <t>Per <xref target="RFC4055" />, the parameters MUST be
            NULL. Implementations MUST accept the parameters being absent as
            well as present.</t>

            </section> 

        </section> 


        <section anchor="sigval" title="signatureValue">

            <section anchor="sigval-ecdsa" title="ECDSA">

            <t>ECDSA digital signature generation is described in <xref
            target="FIPS186"/>.  An ECDSA signature value is composed of two
            unsigned integers, denoted as "r" and "s".  "r" and "s" MUST be
            represented as ASN.1 INTEGERs.  If the high-order bit of the
            unsigned integer is a 1, an octet with the value 0x00 MUST be
            prepended to the binary representation before encoding it as an
            ASN.1 INTEGER.  Unsigned integers for the P-384 curves can be a
            maximum of 48 bytes.  Therefore, converting each "r" and "s" to an
            ASN.1 INTEGER will result in a maximum of 49 bytes for the P-384
            curve.</t>

            <t>The ECDSA signatureValue in an X.509 certificate is encoded as
	    a BIT STRING value of a DER-encoded SEQUENCE of the two
	    INTEGERS.</t>

            </section> 

            <section anchor="sigval-rsa" title="RSA">

            <t>The RSA signature generation process and the encoding of the
	    result is RSASSA-PKCS1-v1_5 as described in detail in <xref
	    target="RFC8017">PKCS #1 version 2.2</xref>.</t>

            </section> 
        </section> 

        <section anchor="version" title="Version">

        <t>For this profile, Version MUST be v3, which means the value MUST be
	set to 2.</t>

        </section> 

        <section anchor="spki" title="SubjectPublicKeyInfo">

            <section anchor="spki-ecdsa" title="Elliptic Curve Cryptography">

            <t>For ECDSA signature verification keys and ECDH key agreement
	    keys, the algorithm ID id-ecPublicKey MUST be used.</t>

            <t>The parameters of the AlgorithmIdentifier in this field MUST
            use the namedCurve option.  The specifiedCurve and implicitCurve
            options described in <xref target="RFC5480"/> MUST NOT be used.
            The namedCurve MUST be the OID for secp384r1 (curve P-384) <xref
            target="RFC5480"/>.</t>

            <t>The elliptic curve public key, ECPoint, SHALL be the OCTET
            STRING representation of an elliptic curve point following the
            conversion routine in Section 2.2 of <xref target="RFC5480"/> and
            Sections 2.3.1 and 2.3.2 of <xref target="SEC1"/>.</t>

            <t>CNSA Suite implementations MAY use either the uncompressed form
            or the compressed form of the elliptic curve point <xref
            target="RFC5480"/>.  For interoperability purposes, all relying
            parties MUST be prepared to process the uncompressed form.</t>

            <t>The elliptic curve public key (an ECPoint that is an OCTET
            STRING) is mapped to a subjectPublicKey (a BIT STRING) as follows:
            the most significant bit of the OCTET STRING becomes the most
            significant bit of the BIT STRING, and the least significant bit
	    of
            the OCTET STRING becomes the least significant bit of the BIT
            STRING <xref target="RFC5480"/>.</t>

            </section> 
   
            <section anchor="spki-rsa" title="RSA ">

            <t>For RSA signature verification keys and key transport keys, the
            algorithm ID, rsaEncryption, MUST be used.</t>

            <t>The parameters field MUST have ASN.1 type NULL for this
	    algorithm identifier <xref target="RFC3279" />.</t>

            <t>The RSA public key MUST be encoded using the ASN.1 type
	    RSAPublicKey per Section 2.3.1 of <xref target="RFC3279" />.</t>

            </section> 

        </section> 
        
      </section>  
    
    <section anchor="particular" title="Certificate Extensions for Particular Types of Certificates">

    <t>Different types of certificates in this profile have different required
    and recommended extensions.  Those are listed in this section.  Those
    extensions from RFC 5280 not explicitly listed in this profile remain at
    the requirement levels of RFC 5280.</t>

            <section anchor="self-sig-ca" title="CNSA Suite Self-Signed CA Certificates">

            <t>In adherence with <xref target="RFC5280"/>, self-signed
            CA certificates in this profile MUST
            contain the subjectKeyIdentifier, keyUsage, and basicConstraints
            extensions.</t>

            <t>The keyUsage extension MUST be marked as critical.  The
            keyCertSign and cRLSign bits MUST be set. The digitalSignature and
            nonRepudiation bits MAY be set.  All other bits MUST NOT be
            set.</t>

            <t>In adherence with <xref target="RFC5280"/>, the
            basicConstraints extension MUST be marked as critical. The cA
            boolean MUST be set to indicate that the subject is a CA, and the
            pathLenConstraint MUST NOT be present.</t>

            </section> 

            <section anchor="non-self-sig-ca" title="CNSA Suite Non-Self-Signed CA Certificates">

            <t>Non-self-signed CA Certificates in this profile MUST contain
            the authorityKeyIdentifier, keyUsage, and basicConstraints
            extensions. If there is a policy to be asserted, then the
            certificatePolicies extension MUST be included.</t>

            <t>The keyUsage extension MUST be marked as critical.  The
            keyCertSign and CRLSign bits MUST be set.  The digitalSignature
            and nonRepudiation bits MAY be set.  All other bits MUST NOT be
            set.</t>

            <t>In adherence with <xref target="RFC5280"/>, the
            basicConstraints extension MUST be marked as critical.  The cA
            boolean MUST be set to indicate that the subject is a CA, and the
            pathLenConstraint subfield is OPTIONAL.</t>

            <t>If a policy is asserted, the certificatePolicies extension MUST
            be marked as non-critical, MUST contain the OIDs for the
            applicable certificate policies, and SHOULD NOT use the
            policyQualifiers option.  If a policy is not asserted, the
            certificatePolicies extension MUST be omitted.</t>

            <t>Relying party applications conforming to this profile MUST be
            prepared to process the policyMappings, policyConstraints, and
            inhibitAnyPolicy extensions, regardless of criticality, following
            the guidance in <xref target="RFC5280"/> when they appear in
            non-self-signed CA certificates.</t>

            </section> 

            <section anchor="end-entity" title="CNSA Suite End-Entity Signature and Key Establishment Certificates">

            <t>In adherence with <xref target="RFC5280"/>, end-entity
            certificates in this profile MUST contain the
            authorityKeyIdentifier and keyUsage extensions.  If there is a
            policy to be asserted, then the certificatePolicies extension MUST
            be included.  End-entity certificates SHOULD contain the
            subjectKeyIdentifier extension.</t>

            <t>The keyUsage extension MUST be marked as critical.</t>

   <t>For end-entity digital signature certificates, the keyUsage extension
   MUST be set for digitalSignature.  The nonRepudiation bit MAY be set. All
   other bits in the keyUsage extension MUST NOT be set.</t>

            <t>For end-entity key establishment certificates, in ECDH
            certificates, the keyUsage extension MUST be set for keyAgreement;
            in RSA certificates, the keyUsage extension MUST be set for
            keyEncipherment.  The encipherOnly or decipherOnly bit MAY be set.
            All other bits in the keyUsage extension MUST NOT be set.</t>

            <t>If a policy is asserted, the certificatePolicies extension MUST
            be marked as non-critical, MUST contain the OIDs for the
            applicable certificate policies, and SHOULD NOT use the
            policyQualifiers option.  If a policy is not asserted, the
            certificatePolicies extension MUST be omitted.</t>

            </section> 

	  </section> 

    <section anchor="crl-reqts" title="CNSA Suite CRL Requirements">

    <t>This CNSA Suite CRL profile is a profile of <xref target="RFC5280"/>.
    There are changes in the requirements from <xref target="RFC5280"/> for
    the signatures on CRLs of this profile.</t>

    <t>The signatures on CRLs in this profile MUST follow the same rules from
    this profile that apply to signatures in the certificates. See <xref
    target="reqts" />.</t>

    </section> 

    <section anchor="sec-considerations" title="Security Considerations">

    <t>The security considerations in <xref target="RFC3279"/>, <xref
    target="RFC4055"/>, <xref target="RFC5280"/>, <xref target="RFC5480"/>,
    <xref target="RFC5758"/>, and <xref target="RFC8017"/> apply.</t>

    <t>A single key pair SHOULD NOT be used for both signature and key
    establishment per <xref target="SP80057" />.</t>

    </section> 

    <section anchor="iana-considerations" title="IANA Considerations">

    <t>This document has no IANA actions.</t>

    </section> 

  </middle>


<back>

    <references title="Normative References">


      <reference anchor="CNSA"
		 target="https://www.cnss.gov/CNSS/Issuances/Policies.htm">
        <front>
          <title>Use of Public Standards for Secure Information
	  Sharing</title>
          <author>
            <organization>Committee for National Security
	    Systems</organization>
          </author>
          <date month="October" year="2016"></date>
        </front>
	<seriesInfo name="CNSSP" value="15"></seriesInfo>
      </reference>

      <reference anchor="FIPS186"
		 target="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf">
        <front>
          <title>Digital Signature Standard (DSS)</title>
          <author>
            <organization>National Institute of Standards and Technology
	    (NIST)</organization>
          </author>
          <date month="July" year="2013" />
        </front>
        <seriesInfo name="FIPS PUB" value="186-4" />
        <seriesInfo name='DOI' value='10.6028/NIST.FIPS.186-4' />
      </reference> 

      <reference anchor="SEC1" target="https://www.secg.org/sec1-v2.pdf">
        <front>
          <title>SEC1: Elliptic Curve Cryptography</title>
          <author>
            <organization>Standards for Efficient Cryptography
	    Group</organization>
          </author>
          <date month="May" year="2009"/>
        </front>
      </reference> 

        &rfc2119;
        &rfc3279;
        &rfc4055;
        &rfc5280;
        &rfc5480;
        &rfc5758;
        &rfc8017;
        &rfc8174;

    </references>


    <references title="Informative References">



      <reference anchor="SEC2" target="https://www.secg.org/sec2-v2.pdf">
        <front>
          <title>SEC 2: Recommended Elliptic Curve Domain Parameters</title>
          <author>
            <organization>Standards for Efficient Cryptography
	    Group</organization>
          </author>
          <date month="January" year="2010" />
        </front>
      </reference> 

      <reference anchor="SP80057"
		 target="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-57pt1r4.pdf">
        <front>
          <title>Recommendation for Key Management - Part 1: General</title>
          <author>
            <organization>National Institute of Standards and
	    Technology</organization>
          </author>
          <date month="January" year="2016" />
        </front>
        <seriesInfo name="NIST Special Publication 800-57" value="Revision 4"
		    />
        <seriesInfo name="DOI" value="10.6028/NIST.SP.800-57pt1r4"/>
      </reference> 
      
      <reference anchor="SP80059"
		 target="https://csrc.nist.gov/publications/detail/sp/800-59/final">
          <front>
              <title>Guideline for Identifying an Information System as a
	      National Security System</title>
              <author>
                  <organization>National Institute of Standards and
		  Technology</organization>
              </author>
              <date month="August" year="2003" />
          </front>
          <seriesInfo name="NIST Special Publication 800-59" value="" />
          <seriesInfo name="DOI" value="10.6028/NIST.SP.800-59" />
      </reference> 

      <reference anchor="X962">
        <front>
          <title>Public Key Cryptography for the Financial Services Industry;
	  The Elliptic Curve Digital Signature Algorithm (ECDSA)</title>
          <author>
            <organization>American National Standards Institute</organization>
          </author>
          <date month="November" year="2005" />
        </front>
        <seriesInfo name="ANSI X9.62" value="" />
      </reference> 

    </references>

  </back>

</rfc>
