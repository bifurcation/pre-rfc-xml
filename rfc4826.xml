<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY nbsp '&#160;'>
<!ENTITY nbhy "&#8209;">
]>

<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="5"?>

<rfc number="4826" category="std">

    <front>
        <title abbrev="XML Resource Lists">
Extensible Markup Language (XML) Formats for &nbsp;Representing&nbsp;Resource&nbsp;Lists</title>
    
        <author initials="J.R." surname="Rosenberg"
                fullname="Jonathan Rosenberg">
            <organization>Cisco</organization>
    
            <address>
                <postal>
                    <city>Edison</city> <region>NJ</region>
                    <country>US</country>
                </postal>
    
                <email>jdrosen@cisco.com</email>
                <uri>http://www.jdrosen.net</uri>
            </address>
        </author>
    
        <date month="May" year="2007" />
    
        <area>Applications</area>
        <workgroup>SIMPLE</workgroup>

        <keyword>presence</keyword>
        <keyword>buddy list</keyword>
	<keyword>SIMPLE</keyword>
	<keyword>XCAP</keyword>
	<keyword>XML</keyword>
	<keyword>presence list</keyword>
	<keyword>SIP</keyword>
	<keyword>IM</keyword>
	<keyword>instant messaging</keyword>
	
        <abstract>
            <t> In multimedia communications, presence, and instant
            messaging systems, there is a need to define Uniform
            Resource Identifiers (URIs) that represent services that
            are associated with a group of users. One example is a
            resource list service. If a user sends a Session
            Initiation Protocol (SIP) SUBSCRIBE message to the URI
            representing the resource list service, the server will
            obtain the state of the users in the associated group, and
            provide it to the sender. To facilitate definition of
            these services, this specification defines two Extensible
            Markup Language (XML) documents. One document contains
            service URIs, along with their service definition and a
            reference to the associated group of users. The second
            document contains the user lists that are referenced from
            the first. This list of users can be utilized by other
            applications and services. Both documents can be created
            and managed with the XML Configuration Access Protocol
            (XCAP).  </t>

        </abstract>
    </front>

<middle>

<section title="Introduction">

<t>
The Session Initiation Protocol (SIP) <xref target="RFC3261"/> defines
the SIP Uniform Resource Identifier (URI) as any resource to which a
SIP request can be generated for the purposes of establishing some
form of communications operation. These URIs can represent users (for
example, sip:joe@example.com). The SIP URI can also represent a
service, such as voicemail, conferencing, or a presence list. A common
pattern across such SIP services is that the service is defined, and
associated with a URI. In order to operate, that service needs to make
use of a list of users (or, more generally, a list of resources). When
a SIP request is sent to the service URI, the server providing the
service reads that list, and then performs some kind of operation
against each resource on the list. This is shown in <xref
target="fig:model"/>.
</t>

<figure anchor="fig:model"><artwork>
<![CDATA[                                                                          
                                 /---\                                    
                                |     |                                   
                                 \---/ Resource                           
                           +----|     |  List                             
                           |    |     |                                   
                           |     \---/                                    
                           |                                              
                           |                                              
                           |                                              
                           |                                              
                           V                                              
                    +-------------+                                       
                    |             | -------->                             
                    |    SIP      |                                       
   ---------------> |  Service    | -------->                             
            service |             |                                       
            URI     |             | -------->                             
                    +-------------+                                       
]]></artwork></figure>
                                                                          
<t>
One important example of such a service is a presence <xref
target="RFC3856"/> list service. A presence list service allows a
client to generate a SIP SUBSCRIBE
request to ask for presence information for a list of users. The
presence list server obtains the presence for the users on the list
and provides them back to the client. A presence list server is a
specific case of a resource list server (RLS) <xref
target="RFC4662"/>, which allows a client to
generate a SIP SUBSCRIBE request to ask for notifications of SIP events 
for a list of resources.
</t>

<?rfc needLines="5" ?>
<t>
Another example of such a service is an instant conference service. If
a client sends a SIP INVITE request to the URI representing the instance
conference service, the conference server will create a conference
call containing the client and the associated group of users.
</t>

<t>
It is very useful for a user of these systems to define the groups of
users or resources (generally called a resource list) separately from
the services that access those resource lists. Indeed, there are
usages for resource lists even in the absence of any associated
network-based service. As an example, rather than use a presence
list service, a client might generate individual SUBSCRIBE requests to
obtain the presence of each user in a locally stored presence list. In
such a case, there is a need for a format for storing the list locally
on disk. Furthermore, the user might wish to share the list with
friends, and desire to email it to those friends. This also requires a
standardized format for the resource list.
</t>

<t>As such, this document
defines two Extensible Markup Language (XML) document formats. The
first is used to represent resource lists, independent of any
particular service. The second is used to define service URIs for an
RLS, and to associate a resource list with the service URI. This
document also defines an XML Configuration Access Protocol (XCAP)
<xref target="RFC4825"/> application usage for managing
each of these two documents. 
</t>

</section>

<section title="Terminology">

<t>In this document, the key words "MUST", "MUST NOT",
"REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL"
are to be interpreted as described in <xref target="RFC2119">RFC
2119</xref> and indicate requirement levels for compliant
implementations.</t>

</section>

<section title="Resource Lists Documents">

<section anchor="sec:struc-rl" title="Structure">

<t>
A resource lists document is an <xref
target="W3C.REC-xml-20001006">XML</xref> document that MUST be
well-formed and MUST be valid according to schemas, including
extension schemas, available to the validater and applicable to the
XML document. Resource lists documents MUST be based on XML 1.0 and
MUST be encoded using UTF-8. This specification makes use of XML
namespaces for identifying resource lists documents and document
fragments. The namespace URI for elements defined by this
specification is a <xref target="RFC2141">URN</xref> that uses the
namespace identifier 'ietf' defined by <xref target="RFC2648">RFC
2648</xref> and extended by <xref target="RFC3688">RFC
3688</xref>. This URN is:
</t>

<list style="hanging"><t>
urn:ietf:params:xml:ns:resource-lists
</t></list>

<t>
A resource lists document has the &lt;resource-lists&gt; element as
the root element of the document. This element has no attributes. Its
content is a sequence of zero or more &lt;list&gt; elements, each of
which defines a single resource list. </t>

<t>Each &lt;list&gt; element can contain an optional "name"
attribute. This attribute is a handle for the list. When present, it
MUST be unique amongst all other &lt;list&gt; elements within the same
parent element. The &lt;list&gt; element may also contain attributes
from other namespaces, for the purposes of extensibility.
</t>

<t>
Each &lt;list&gt; element is composed of an optional display name, a
sequence of zero or more elements, each of which may be an
&lt;entry&gt; element, a &lt;list&gt; element, an &lt;entry-ref&gt;
element, or an &lt;external&gt; element, followed by any number of
elements from other namespaces, for the purposes of extensibility.
The ability of a &lt;list&gt; element to contain other &lt;list&gt;
elements means that a resource list can be hierarchically
structured. The &lt;display-name&gt; then allows for a human-friendly
name to be associated with each level in the hierarchy. An
&lt;entry&gt; element describes a single resource, defined by a URI,
that is part of the list. An &lt;entry-ref&gt; element allows an entry
in a document within the same XCAP root to be included by reference,
rather than by value. An &lt;external&gt; element contains a reference
to a list stored on this or another server.
</t>

<t>
The &lt;entry&gt; element describes a single resource. The
&lt;entry&gt; element has a single mandatory attribute, "uri". This
attribute is equal to the URI that is used to access the resource. The
resource list format itself does not constrain the type of URI that
can be used. However, the service making use of the resource list may
require specific URI schemes. For example, RLS services will require
URIs that represent subscribeable resources. This includes the SIP and
<xref target="RFC3859">pres</xref> URIs. The "uri"
attribute MUST be unique amongst all other "uri" attributes in
&lt;entry&gt; elements within the same parent. Uniqueness is
determined by case-sensitive string comparisons. As such, it is
possible that two "uri" attributes 
will have the same URI when compared using the functional equality
rules defined for that URI scheme, but different ones when compared
using case sensitive string comparison. The &lt;entry&gt; element can
also contain attributes from other namespaces for the purposes of
extensibility.
</t>

<t>
The &lt;entry&gt; element contains a sequence of elements that provide
information about the entry. Only one such element is defined at this
time, which is &lt;display-name&gt;. This element provides a
UTF-8-encoded string, meant for consumption by a human user, that describes
the resource. Unlike the "name" attribute of the &lt;entry&gt;
element, the &lt;display-name&gt; has no uniqueness requirements. The
&lt;display-name&gt; element can contain the "xml:lang" attribute,
which provides the language of the display name. The &lt;entry&gt;
element can contain other elements from other namespaces. This is
meant to support the inclusion of other information about the entry,
such as a phone number or postal address.
</t>

<t>The &lt;entry-ref&gt; element allows an entry to be included in the
list by reference, rather than by value. This element is only
meaningful when the document was obtained through XCAP. In such a
case, the referenced entry has to exist within the same XCAP root. The
&lt;entry&gt; element has a single mandatory attribute, "ref". The "ref"
attribute MUST be unique amongst all other "ref" attributes in
&lt;entry-ref&gt; elements within the same parent. Uniqueness is
determined by case sensitive string comparisons. The &lt;entry-ref&gt;
element also allows attributes from other namespaces, for the purposes
of extensibility. The content of an &lt;entry-ref&gt; element is an
optional display name, followed by any number of elements from othe